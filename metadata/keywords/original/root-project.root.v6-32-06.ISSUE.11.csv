id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/11186:1281,Testability,test,test,1281,"ingPdf` (`heap-use-after-free`); * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`); * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`); * `test-stressroofit` (`heap-use-after-free`); * `test-stressroofit-interpreted` (`heap-use-after-free`); * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`); * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`); * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:; ```; READ of size 8 at 0x7ff2148150b8 thread T0; #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38; #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36; #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29; #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5; #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3; ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:1787,Testability,Test,TestBody,1787,"ingPdf` (`heap-use-after-free`); * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`); * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`); * `test-stressroofit` (`heap-use-after-free`); * `test-stressroofit-interpreted` (`heap-use-after-free`); * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`); * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`); * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:; ```; READ of size 8 at 0x7ff2148150b8 thread T0; #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38; #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36; #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29; #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5; #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3; ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:1880,Testability,test,test,1880,"ingPdf` (`heap-use-after-free`); * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`); * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`); * `test-stressroofit` (`heap-use-after-free`); * `test-stressroofit-interpreted` (`heap-use-after-free`); * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`); * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`); * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:; ```; READ of size 8 at 0x7ff2148150b8 thread T0; #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38; #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36; #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29; #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5; #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3; ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:1885,Testability,test,testRooPoisson,1885,"ingPdf` (`heap-use-after-free`); * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`); * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`); * `test-stressroofit` (`heap-use-after-free`); * `test-stressroofit-interpreted` (`heap-use-after-free`); * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`); * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`); * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:; ```; READ of size 8 at 0x7ff2148150b8 thread T0; #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38; #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36; #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29; #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5; #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3; ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:1947,Testability,Test,TestBody,1947,"ingPdf` (`heap-use-after-free`); * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`); * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`); * `test-stressroofit` (`heap-use-after-free`); * `test-stressroofit-interpreted` (`heap-use-after-free`); * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`); * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`); * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:; ```; READ of size 8 at 0x7ff2148150b8 thread T0; #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38; #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36; #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29; #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5; #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3; ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:1996,Testability,test,test,1996,"ingPdf` (`heap-use-after-free`); * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`); * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`); * `test-stressroofit` (`heap-use-after-free`); * `test-stressroofit-interpreted` (`heap-use-after-free`); * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`); * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`); * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:; ```; READ of size 8 at 0x7ff2148150b8 thread T0; #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38; #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36; #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29; #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5; #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3; ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:2001,Testability,test,testRooPoisson,2001,"ingPdf` (`heap-use-after-free`); * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`); * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`); * `test-stressroofit` (`heap-use-after-free`); * `test-stressroofit-interpreted` (`heap-use-after-free`); * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`); * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`); * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:; ```; READ of size 8 at 0x7ff2148150b8 thread T0; #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38; #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36; #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29; #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5; #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3; ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:2072,Testability,test,tests,2072,"ingPdf` (`heap-use-after-free`); * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`); * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`); * `test-stressroofit` (`heap-use-after-free`); * `test-stressroofit-interpreted` (`heap-use-after-free`); * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`); * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`); * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:; ```; READ of size 8 at 0x7ff2148150b8 thread T0; #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38; #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36; #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29; #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5; #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3; ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:2162,Testability,test,tests,2162,"ingPdf` (`heap-use-after-free`); * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`); * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`); * `test-stressroofit` (`heap-use-after-free`); * `test-stressroofit-interpreted` (`heap-use-after-free`); * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`); * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`); * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:; ```; READ of size 8 at 0x7ff2148150b8 thread T0; #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38; #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36; #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29; #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5; #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3; ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/pull/11187:91,Availability,error,errors,91,"The overload taking a path opens the file and then `mmap` its contents. This can cause bus errors when another process truncates the file while we are trying to read it. Instead just read the first 1024 bytes, which should be enough for `identify_magic` to do its work. (cherry picked from commit 588e13c4da4a63427ef156f2624f5a5a15bfd298). Backport of PR https://github.com/root-project/root/pull/11174",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11187
https://github.com/root-project/root/issues/11188:255,Availability,error,error,255,"- [x] Checked for duplicates. ### Describe the bug; We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:; ```; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1798,Availability,error,error,1798,"::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'; 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,; | ^~~~; ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior; Build should not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:382,Integrability,interface,interface,382,"- [x] Checked for duplicates. ### Describe the bug; We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:; ```; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1180,Integrability,interface,interface,1180,"- [x] Checked for duplicates. ### Describe the bug; We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:; ```; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:60,Testability,test,testing,60,"- [x] Checked for duplicates. ### Describe the bug; We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:; ```; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:314,Testability,test,tests,314,"- [x] Checked for duplicates. ### Describe the bug; We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:; ```; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:459,Testability,test,tests,459,"- [x] Checked for duplicates. ### Describe the bug; We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:; ```; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:527,Testability,test,test,527,"- [x] Checked for duplicates. ### Describe the bug; We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:; ```; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:532,Testability,test,testRooFitFunction,532,"- [x] Checked for duplicates. ### Describe the bug; We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:; ```; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:600,Testability,test,tests,600,"- [x] Checked for duplicates. ### Describe the bug; We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:; ```; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:606,Testability,test,testBuildDir,606,"- [x] Checked for duplicates. ### Describe the bug; We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:; ```; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1112,Testability,test,tests,1112,"- [x] Checked for duplicates. ### Describe the bug; We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:; ```; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1503,Testability,test,tests,1503,"nction.h:3,; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1571,Testability,test,test,1571,"nction.h:3,; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1576,Testability,test,testRooFitFunction,1576,"nction.h:3,; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1667,Testability,test,tests,1667,"4898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'; 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,; | ^~~~; ```. N",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1673,Testability,test,testBuildDir,1673,"4898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'; 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,; | ^~~~; ```. N",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:2091,Testability,test,tests,2091,"::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'; 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,; | ^~~~; ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior; Build should not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:2097,Testability,test,testBuildDir,2097,"::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'; 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,; | ^~~~; ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior; Build should not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:3313,Testability,test,test,3313,"unct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'; 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,; | ^~~~; ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior; Build should not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: master, commit 6018b5fd45; 2. Operating system: SLC7; 3. How you obtained ROOT: built from source. ### Additional context; Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:3318,Testability,test,testRooFitFunction,3318,"unct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'; 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,; | ^~~~; ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior; Build should not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: master, commit 6018b5fd45; 2. Operating system: SLC7; 3. How you obtained ROOT: built from source. ### Additional context; Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11190:209,Testability,Assert,Assertion,209,"To reproduce, start ROOT and type `#`.; ```; % root -l ; root [0] #; root.exe: /home/linev/git/webgui/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:108: void cling::MetaLexer::LexAnyString(cling::Token&): Assertion `Tok.getBufStart() != curPos && ""It must consume at least on char""' failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11190
https://github.com/root-project/root/issues/11191:484,Deployability,install,install,484,"### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior; I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:; 1. `root geometryfile.root`; 2. `new TBrowser`; 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok); 4. MacOS; 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same; geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/pull/11192:44,Availability,failure,failures,44,This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11192
https://github.com/root-project/root/pull/11192:39,Testability,test,test,39,This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11192
https://github.com/root-project/root/pull/11194:307,Availability,failure,failures,307,"If one overloads `RooAbsArg::redirectServersHook()`, one also needs to; call the `redirectServersHook()` of the base class. Otherwise, important; things that must be done when redirecting the servers of a `RooAbsReal`; or `RooAbsPdf` for example are not done. In particular, this fixes some ASAN build test failures where the; `RooAbsPdf::_normSet` member was not reset when redirecting servers; because `RooAbsPdf::redirectServersHook()` was not called. A second, minor commit in this PR cleans the includes in `stressRooFit_tests.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11194
https://github.com/root-project/root/pull/11194:302,Testability,test,test,302,"If one overloads `RooAbsArg::redirectServersHook()`, one also needs to; call the `redirectServersHook()` of the base class. Otherwise, important; things that must be done when redirecting the servers of a `RooAbsReal`; or `RooAbsPdf` for example are not done. In particular, this fixes some ASAN build test failures where the; `RooAbsPdf::_normSet` member was not reset when redirecting servers; because `RooAbsPdf::redirectServersHook()` was not called. A second, minor commit in this PR cleans the includes in `stressRooFit_tests.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11194
https://github.com/root-project/root/pull/11195:20,Availability,failure,failures,20,This fixes the ASAN failures that are related to the BatchMode. More detail can be found in the commit descriptions. Should be backported to 6.26.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11195
https://github.com/root-project/root/pull/11196:302,Integrability,wrap,wraps,302,"Since https://github.com/nlohmann/json/pull/3590, the `basic_json` class and the `json` `using`-declaration are located in a ""versioned, ABI-tagged inline namespace"". This makes it impossible to forward declare the type in `REveElement.hxx`.; Instead introduce a new struct `REveJsonWrapper` that just wraps a `json` object (after including the full `nlohmann/json.hpp`). As the `struct` is under our control, we can easily forward declare the type and use it for method arguments. Fixes #11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11196
https://github.com/root-project/root/issues/11197:238,Availability,down,downloadable,238,"### Is your feature request related to a problem? Please describe.; Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like; The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered; Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:95,Deployability,release,released,95,"### Is your feature request related to a problem? Please describe.; Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like; The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered; Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:132,Deployability,release,release-notes,132,"### Is your feature request related to a problem? Please describe.; Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like; The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered; Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:151,Deployability,release,release-,151,"### Is your feature request related to a problem? Please describe.; Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like; The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered; Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:225,Deployability,release,release,225,"### Is your feature request related to a problem? Please describe.; Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like; The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered; Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:269,Deployability,release,release,269,"### Is your feature request related to a problem? Please describe.; Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like; The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered; Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:331,Deployability,release,releases,331,"### Is your feature request related to a problem? Please describe.; Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like; The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered; Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:402,Deployability,release,releases,402,"### Is your feature request related to a problem? Please describe.; Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like; The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered; Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:529,Deployability,release,release,529,"### Is your feature request related to a problem? Please describe.; Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like; The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered; Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:614,Deployability,release,release,614,"### Is your feature request related to a problem? Please describe.; Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like; The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered; Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/pull/11198:85,Security,validat,validate,85,# This Pull request:; Adds the Max ONNX Operator and the corresponding unit tests to validate the code. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11198
https://github.com/root-project/root/pull/11198:76,Testability,test,tests,76,# This Pull request:; Adds the Max ONNX Operator and the corresponding unit tests to validate the code. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11198
https://github.com/root-project/root/pull/11198:110,Testability,test,tested,110,# This Pull request:; Adds the Max ONNX Operator and the corresponding unit tests to validate the code. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11198
https://github.com/root-project/root/pull/11205:469,Availability,avail,available,469,"Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For; earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:321,Deployability,install,installed,321,"Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For; earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:337,Deployability,patch,patch,337,"Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For; earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:442,Deployability,install,installed,442,"Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For; earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11206:134,Modifiability,config,configured,134,"When specified `root --web=default` or `root --web=browser`, default web browser will be used to open web widgets. web display can be configured with `WebGui.Display` rootrc parameter or `ROOT_WEBDISPLAY` environment variable. Improve webgui documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11206
https://github.com/root-project/root/pull/11206:217,Modifiability,variab,variable,217,"When specified `root --web=default` or `root --web=browser`, default web browser will be used to open web widgets. web display can be configured with `WebGui.Display` rootrc parameter or `ROOT_WEBDISPLAY` environment variable. Improve webgui documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11206
https://github.com/root-project/root/issues/11207:947,Availability,error,error,947,"First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TTree.h>. int main() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; // This is a weird way to build a tree, but for the purposes of this test; // we we just need to mock a TTree with branches ""topbranch"" and; // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch""; // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below).; t.Branch(""topbranch"", &x);; t.Branch(""topbranch"", &x, ""a/I:b/I"");; t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");; // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,; // which is not valid C++.; return df.Filter(""alias.a == 42"").Count().GetValue();; }; ```; which yields:. ```; input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'; auto func0(pair<int,int>& var0){return var0.a == 42; ~~~~ ^; terminate called after throwing an instance of 'std::runtime_error'; what():; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort); ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1154,Availability,error,error,1154,"First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TTree.h>. int main() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; // This is a weird way to build a tree, but for the purposes of this test; // we we just need to mock a TTree with branches ""topbranch"" and; // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch""; // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below).; t.Branch(""topbranch"", &x);; t.Branch(""topbranch"", &x, ""a/I:b/I"");; t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");; // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,; // which is not valid C++.; return df.Filter(""alias.a == 42"").Count().GetValue();; }; ```; which yields:. ```; input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'; auto func0(pair<int,int>& var0){return var0.a == 42; ~~~~ ^; terminate called after throwing an instance of 'std::runtime_error'; what():; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort); ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1551,Modifiability,variab,variable,1551,"First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TTree.h>. int main() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; // This is a weird way to build a tree, but for the purposes of this test; // we we just need to mock a TTree with branches ""topbranch"" and; // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch""; // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below).; t.Branch(""topbranch"", &x);; t.Branch(""topbranch"", &x, ""a/I:b/I"");; t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");; // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,; // which is not valid C++.; return df.Filter(""alias.a == 42"").Count().GetValue();; }; ```; which yields:. ```; input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'; auto func0(pair<int,int>& var0){return var0.a == 42; ~~~~ ^; terminate called after throwing an instance of 'std::runtime_error'; what():; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort); ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1437,Performance,perform,perform,1437,"First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TTree.h>. int main() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; // This is a weird way to build a tree, but for the purposes of this test; // we we just need to mock a TTree with branches ""topbranch"" and; // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch""; // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below).; t.Branch(""topbranch"", &x);; t.Branch(""topbranch"", &x, ""a/I:b/I"");; t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");; // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,; // which is not valid C++.; return df.Filter(""alias.a == 42"").Count().GetValue();; }; ```; which yields:. ```; input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'; auto func0(pair<int,int>& var0){return var0.a == 42; ~~~~ ^; terminate called after throwing an instance of 'std::runtime_error'; what():; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort); ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1405,Safety,Abort,Abort,1405,"First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TTree.h>. int main() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; // This is a weird way to build a tree, but for the purposes of this test; // we we just need to mock a TTree with branches ""topbranch"" and; // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch""; // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below).; t.Branch(""topbranch"", &x);; t.Branch(""topbranch"", &x, ""a/I:b/I"");; t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");; // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,; // which is not valid C++.; return df.Filter(""alias.a == 42"").Count().GetValue();; }; ```; which yields:. ```; input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'; auto func0(pair<int,int>& var0){return var0.a == 42; ~~~~ ^; terminate called after throwing an instance of 'std::runtime_error'; what():; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort); ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:302,Testability,test,test,302,"First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TTree.h>. int main() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; // This is a weird way to build a tree, but for the purposes of this test; // we we just need to mock a TTree with branches ""topbranch"" and; // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch""; // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below).; t.Branch(""topbranch"", &x);; t.Branch(""topbranch"", &x, ""a/I:b/I"");; t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");; // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,; // which is not valid C++.; return df.Filter(""alias.a == 42"").Count().GetValue();; }; ```; which yields:. ```; input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'; auto func0(pair<int,int>& var0){return var0.a == 42; ~~~~ ^; terminate called after throwing an instance of 'std::runtime_error'; what():; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort); ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:330,Testability,mock,mock,330,"First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TTree.h>. int main() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; // This is a weird way to build a tree, but for the purposes of this test; // we we just need to mock a TTree with branches ""topbranch"" and; // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch""; // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below).; t.Branch(""topbranch"", &x);; t.Branch(""topbranch"", &x, ""a/I:b/I"");; t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");; // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,; // which is not valid C++.; return df.Filter(""alias.a == 42"").Count().GetValue();; }; ```; which yields:. ```; input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'; auto func0(pair<int,int>& var0){return var0.a == 42; ~~~~ ^; terminate called after throwing an instance of 'std::runtime_error'; what():; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort); ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/pull/11208:429,Integrability,interface,interface,429,"This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**; - [x] RModel_GNN class; - [x] RFunction class for graph-based functions; - [x] GraphInput structure for providing inputs to the graph; - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface); - [x] Initialize & Generate function for RModel_GNN class; - [x] RFunction_MLP for updation; - [x] RFunction_Mean for aggregate; - [x] RFunction_Sum for aggregate; - [x] RModel_GraphIndependent class; - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions); - [x] Tests for RModel_GNN and RModel_GraphIndependent; - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:35,Performance,perform,performing,35,"This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**; - [x] RModel_GNN class; - [x] RFunction class for graph-based functions; - [x] GraphInput structure for providing inputs to the graph; - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface); - [x] Initialize & Generate function for RModel_GNN class; - [x] RFunction_MLP for updation; - [x] RFunction_Mean for aggregate; - [x] RFunction_Sum for aggregate; - [x] RModel_GraphIndependent class; - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions); - [x] Tests for RModel_GNN and RModel_GraphIndependent; - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:738,Testability,Test,Tests,738,"This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**; - [x] RModel_GNN class; - [x] RFunction class for graph-based functions; - [x] GraphInput structure for providing inputs to the graph; - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface); - [x] Initialize & Generate function for RModel_GNN class; - [x] RFunction_MLP for updation; - [x] RFunction_Mean for aggregate; - [x] RFunction_Sum for aggregate; - [x] RModel_GraphIndependent class; - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions); - [x] Tests for RModel_GNN and RModel_GraphIndependent; - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:818,Testability,Test,Tests,818,"This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**; - [x] RModel_GNN class; - [x] RFunction class for graph-based functions; - [x] GraphInput structure for providing inputs to the graph; - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface); - [x] Initialize & Generate function for RModel_GNN class; - [x] RFunction_MLP for updation; - [x] RFunction_Mean for aggregate; - [x] RFunction_Sum for aggregate; - [x] RModel_GraphIndependent class; - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions); - [x] Tests for RModel_GNN and RModel_GraphIndependent; - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11209:199,Integrability,interface,interface,199,"# This Pull request:. This PR implements the correct copy constructors for the FitData classes and, when the user provides to teh Fitter, a reference to a Fit data classes, the data are copied. ; An interface using a `shared_ptr` to the data exists to avoid copying. . This PR fixes #11154",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11209
https://github.com/root-project/root/pull/11209:252,Safety,avoid,avoid,252,"# This Pull request:. This PR implements the correct copy constructors for the FitData classes and, when the user provides to teh Fitter, a reference to a Fit data classes, the data are copied. ; An interface using a `shared_ptr` to the data exists to avoid copying. . This PR fixes #11154",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11209
https://github.com/root-project/root/pull/11210:558,Deployability,Upgrade,Upgrade,558,"## Changes in dev; 1. Force MathJax rendering when `\` symbol is found (243); 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0; 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets; 2. Correctly resize stats box when number of lines changes; 3. Support JSROOT usage with yarn and webpack; 4. Provide `FileProxy` class to let read ROOT files from arbitrary place; 5. Let 'hook' save file functionality to use alternative method to store image files; 6. Implement 'tabs' layout for objects display (238); 7. Upgrade d3.js to version 7.6.1; 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1; 1. Fix - let modify node visibility bits via context menu; 2. Fix - menu position adjusting; 3. Fix - tree_draw.js example, export treeDraw function from main.mjs; 4. Fix - TH3 scatter plot with large number of bins converted to box2; 5. Fix - create geo css entries also when expand object in hierarchy (240)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11211:1052,Deployability,update,updated,1052,"With the function `RooDataHist::interpolateLinear` it is now possible to use; `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one; dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line; between two neighboring bin centers by solving a system of two linear; equations. With the coefficients of the straight line, the interpolated weight; for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the; corresponding weight is found by interpolating between the current bin and the; neighboring bin to the left. If the event is to the right of the bin center,; the weight is found by inteperpolating between the current bin center and the; one to the right. For the first and last bin, the interpolation is performed; either by mirroring the histogram outside its boundaries, or by applying cdf; boundaries. `RooDataHist::weights()` has been updated so that it calls; `RooDataHist::interpolateLinear()` when the interpolation order is one.; Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`; have been updated so that they call `RooDatahist::weights()` in the cases; where the histogram is one dimensional and the interpolation order is zero or; one. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:1239,Deployability,update,updated,1239,"With the function `RooDataHist::interpolateLinear` it is now possible to use; `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one; dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line; between two neighboring bin centers by solving a system of two linear; equations. With the coefficients of the straight line, the interpolated weight; for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the; corresponding weight is found by interpolating between the current bin and the; neighboring bin to the left. If the event is to the right of the bin center,; the weight is found by inteperpolating between the current bin center and the; one to the right. For the first and last bin, the interpolation is performed; either by mirroring the histogram outside its boundaries, or by applying cdf; boundaries. `RooDataHist::weights()` has been updated so that it calls; `RooDataHist::interpolateLinear()` when the interpolation order is one.; Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`; have been updated so that they call `RooDatahist::weights()` in the cases; where the histogram is one dimensional and the interpolation order is zero or; one. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:1424,Deployability,update,updated,1424,"With the function `RooDataHist::interpolateLinear` it is now possible to use; `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one; dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line; between two neighboring bin centers by solving a system of two linear; equations. With the coefficients of the straight line, the interpolated weight; for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the; corresponding weight is found by interpolating between the current bin and the; neighboring bin to the left. If the event is to the right of the bin center,; the weight is found by inteperpolating between the current bin center and the; one to the right. For the first and last bin, the interpolation is performed; either by mirroring the histogram outside its boundaries, or by applying cdf; boundaries. `RooDataHist::weights()` has been updated so that it calls; `RooDataHist::interpolateLinear()` when the interpolation order is one.; Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`; have been updated so that they call `RooDatahist::weights()` in the cases; where the histogram is one dimensional and the interpolation order is zero or; one. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:917,Performance,perform,performed,917,"With the function `RooDataHist::interpolateLinear` it is now possible to use; `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one; dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line; between two neighboring bin centers by solving a system of two linear; equations. With the coefficients of the straight line, the interpolated weight; for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the; corresponding weight is found by interpolating between the current bin and the; neighboring bin to the left. If the event is to the right of the bin center,; the weight is found by inteperpolating between the current bin center and the; one to the right. For the first and last bin, the interpolation is performed; either by mirroring the histogram outside its boundaries, or by applying cdf; boundaries. `RooDataHist::weights()` has been updated so that it calls; `RooDataHist::interpolateLinear()` when the interpolation order is one.; Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`; have been updated so that they call `RooDatahist::weights()` in the cases; where the histogram is one dimensional and the interpolation order is zero or; one. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:1394,Testability,test,tested,1394,"With the function `RooDataHist::interpolateLinear` it is now possible to use; `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one; dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line; between two neighboring bin centers by solving a system of two linear; equations. With the coefficients of the straight line, the interpolated weight; for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the; corresponding weight is found by interpolating between the current bin and the; neighboring bin to the left. If the event is to the right of the bin center,; the weight is found by inteperpolating between the current bin center and the; one to the right. For the first and last bin, the interpolation is performed; either by mirroring the histogram outside its boundaries, or by applying cdf; boundaries. `RooDataHist::weights()` has been updated so that it calls; `RooDataHist::interpolateLinear()` when the interpolation order is one.; Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`; have been updated so that they call `RooDatahist::weights()` in the cases; where the histogram is one dimensional and the interpolation order is zero or; one. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11213:490,Modifiability,variab,variable,490,"If specified, enforce unique key every time client connect to; web window. Once key used, it is not possible to use it again for reconnect.; If one wants to connect to window again, one should; call RWebWindow::Show() method again. Now parameter is off, but once tested - will be enabled by default.; This should significantly increase security for web applications. Fix problem with random seed for key generation . Add warning when browser on remote node is started - by checking DISPLAY variable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11213
https://github.com/root-project/root/pull/11213:336,Security,secur,security,336,"If specified, enforce unique key every time client connect to; web window. Once key used, it is not possible to use it again for reconnect.; If one wants to connect to window again, one should; call RWebWindow::Show() method again. Now parameter is off, but once tested - will be enabled by default.; This should significantly increase security for web applications. Fix problem with random seed for key generation . Add warning when browser on remote node is started - by checking DISPLAY variable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11213
https://github.com/root-project/root/pull/11213:263,Testability,test,tested,263,"If specified, enforce unique key every time client connect to; web window. Once key used, it is not possible to use it again for reconnect.; If one wants to connect to window again, one should; call RWebWindow::Show() method again. Now parameter is off, but once tested - will be enabled by default.; This should significantly increase security for web applications. Fix problem with random seed for key generation . Add warning when browser on remote node is started - by checking DISPLAY variable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11213
https://github.com/root-project/root/pull/11214:304,Security,access,accessed,304,"The pr includes the implementation of a profiling mechanism for DistRDF.; When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module.; Usage example (dimuon analysis):. ```python; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile; ...; df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client); with ClingProfile(df, filename=""flamegraph.svg""):; df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""); ...; h.GetValue(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/issues/11215:171,Availability,Error,Error,171,"Reproducer:. ```; root [0] auto x = std::make_pair(42, 84);; root [1] auto *xp = &x;; root [2] TTree t(""t"", ""t""); (TTree &) Name: t Title: t; root [3] t.Branch(""x"", &xp); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; In module 'Core':; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; root [4] t.Branch(""x"", &x); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:582,Availability,Error,Error,582,"Reproducer:. ```; root [0] auto x = std::make_pair(42, 84);; root [1] auto *xp = &x;; root [2] TTree t(""t"", ""t""); (TTree &) Name: t Title: t; root [3] t.Branch(""x"", &xp); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; In module 'Core':; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; root [4] t.Branch(""x"", &x); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:263,Integrability,rout,routine,263,"Reproducer:. ```; root [0] auto x = std::make_pair(42, 84);; root [1] auto *xp = &x;; root [2] TTree t(""t"", ""t""); (TTree &) Name: t Title: t; root [3] t.Branch(""x"", &xp); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; In module 'Core':; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; root [4] t.Branch(""x"", &x); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:674,Integrability,rout,routine,674,"Reproducer:. ```; root [0] auto x = std::make_pair(42, 84);; root [1] auto *xp = &x;; root [2] TTree t(""t"", ""t""); (TTree &) Name: t Title: t; root [3] t.Branch(""x"", &xp); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; In module 'Core':; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; root [4] t.Branch(""x"", &x); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:325,Safety,abort,aborted,325,"Reproducer:. ```; root [0] auto x = std::make_pair(42, 84);; root [1] auto *xp = &x;; root [2] TTree t(""t"", ""t""); (TTree &) Name: t Title: t; root [3] t.Branch(""x"", &xp); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; In module 'Core':; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; root [4] t.Branch(""x"", &x); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:736,Safety,abort,aborted,736,"Reproducer:. ```; root [0] auto x = std::make_pair(42, 84);; root [1] auto *xp = &x;; root [2] TTree t(""t"", ""t""); (TTree &) Name: t Title: t; root [3] t.Branch(""x"", &xp); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; In module 'Core':; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; root [4] t.Branch(""x"", &x); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:988,Safety,abort,aborted,988,"Reproducer:. ```; root [0] auto x = std::make_pair(42, 84);; root [1] auto *xp = &x;; root [2] TTree t(""t"", ""t""); (TTree &) Name: t Title: t; root [3] t.Branch(""x"", &xp); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; In module 'Core':; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; root [4] t.Branch(""x"", &x); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/pull/11216:506,Testability,test,test,506,"Given a string expression such as ""alias.subbranch"" (where; `subbranch` is _not_ also the name of a valid data member of; the type of the ""alias"" top-level branch), we used to transform; the expression to `[](T &var0) { return var0.subbranch; }`,; which does not compile. Now aliases in jitted expressions are resolved in a first step; and only then we try to match the expression against known branch; names, fixing the problem. This PR fixes https://github.com/root-project/root/issues/11207 (and adds a test). - [x] add a less weird test, e.g. based on `std::vector<XYZVector>`, for which we should have dictionaries",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11216
https://github.com/root-project/root/pull/11216:536,Testability,test,test,536,"Given a string expression such as ""alias.subbranch"" (where; `subbranch` is _not_ also the name of a valid data member of; the type of the ""alias"" top-level branch), we used to transform; the expression to `[](T &var0) { return var0.subbranch; }`,; which does not compile. Now aliases in jitted expressions are resolved in a first step; and only then we try to match the expression against known branch; names, fixing the problem. This PR fixes https://github.com/root-project/root/issues/11207 (and adds a test). - [x] add a less weird test, e.g. based on `std::vector<XYZVector>`, for which we should have dictionaries",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11216
https://github.com/root-project/root/pull/11219:68,Usability,simpl,simplify,68,Fix potential crash when quitting ROOT from RBrowser on Windows and simplify the code used to close the TBrowser main Window,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11219
https://github.com/root-project/root/pull/11220:68,Usability,simpl,simplify,68,Fix potential crash when quitting ROOT from RBrowser on Windows and simplify the code used to close the TBrowser main Window,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11220
https://github.com/root-project/root/issues/11221:72,Availability,ERROR,ERROR,72,"`gtest-roofit-roostats-test-testSPlot` fails with; ```; 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00; 253: READ of size 8 at 0x6150001aed68 thread T0; 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20; 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16; 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16; 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18; 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46; 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17; 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12; 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10; 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18; 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14; 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:2798,Availability,ERROR,ERROR,2798,"tVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:105:49; 253: #11 0x7ff68cd94a6b in RooStats::SPlot::AddSWeight(RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:459:71; 253: #12 0x7ff68cd93a9d in RooStats::SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, bool, char const*, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9; 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roostats/test/testSPlot.cxx:31:19; ```. `tutorial-roofit-rf110_normintegration-py` shows very similar symptoms:; ```; 1160: ==1901172==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000973d8 at pc 0x7fb8e12c7528 bp 0x7ffc12245550 sp 0x7ffc12245540; 1160: READ of size 8 at 0x60c0000973d8 thread T0; 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20; 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16; 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16; 1160: #3 0x7fb8e12c7527 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18; 1160: #4 0x7fb8e12c7527 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46; 1160: #5 0x7fb8e12c7527 in RooTemplate",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:23,Testability,test,test-testSPlot,23,"`gtest-roofit-roostats-test-testSPlot` fails with; ```; 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00; 253: READ of size 8 at 0x6150001aed68 thread T0; 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20; 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16; 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16; 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18; 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46; 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17; 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12; 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10; 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18; 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14; 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:2621,Testability,Test,TestBody,2621,"ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18; 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14; 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:105:49; 253: #11 0x7ff68cd94a6b in RooStats::SPlot::AddSWeight(RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:459:71; 253: #12 0x7ff68cd93a9d in RooStats::SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, bool, char const*, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9; 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roostats/test/testSPlot.cxx:31:19; ```. `tutorial-roofit-rf110_normintegration-py` shows very similar symptoms:; ```; 1160: ==1901172==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000973d8 at pc 0x7fb8e12c7528 bp 0x7ffc12245550 sp 0x7ffc12245540; 1160: READ of size 8 at 0x60c0000973d8 thread T0; 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20; 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16; 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:2672,Testability,test,test,2672,"ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18; 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14; 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:105:49; 253: #11 0x7ff68cd94a6b in RooStats::SPlot::AddSWeight(RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:459:71; 253: #12 0x7ff68cd93a9d in RooStats::SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, bool, char const*, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9; 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roostats/test/testSPlot.cxx:31:19; ```. `tutorial-roofit-rf110_normintegration-py` shows very similar symptoms:; ```; 1160: ==1901172==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000973d8 at pc 0x7fb8e12c7528 bp 0x7ffc12245550 sp 0x7ffc12245540; 1160: READ of size 8 at 0x60c0000973d8 thread T0; 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20; 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16; 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:2677,Testability,test,testSPlot,2677,"ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18; 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14; 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:105:49; 253: #11 0x7ff68cd94a6b in RooStats::SPlot::AddSWeight(RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:459:71; 253: #12 0x7ff68cd93a9d in RooStats::SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, bool, char const*, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9; 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roostats/test/testSPlot.cxx:31:19; ```. `tutorial-roofit-rf110_normintegration-py` shows very similar symptoms:; ```; 1160: ==1901172==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000973d8 at pc 0x7fb8e12c7528 bp 0x7ffc12245550 sp 0x7ffc12245540; 1160: READ of size 8 at 0x60c0000973d8 thread T0; 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20; 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16; 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11222:206,Availability,ERROR,ERROR,206,"Crash report:; ```; 382: [ RUN ] RDFSnapshotMore.MissingSizeBranch; 382: RDataFrame::Run: event loop was interrupted; 382: =================================================================; 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930; 382: WRITE of size 1 at 0x616000fc64c8 thread T0; 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92; 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2; 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14; 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10; 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10; 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32; 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18; 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::Get(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:3211,Testability,Test,TestBody,3211,"; 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10; 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10; 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32; 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18; 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::Get() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:169:10; 382: #8 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::operator*() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:229:15; 382: #9 0x5ecb22 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1140:10; 382: #10 0x5be335 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1202:14; 382: #11 0x512932 in RDFSnapshotMore_MissingSizeBranch_Test::TestBody() /home/jhahnfel/ROOT/src/tree/dataframe/test/dataframe_snapshot.cxx:903:18; ```. (already discussed and work-in-progress)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:3261,Testability,test,test,3261,"; 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10; 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10; 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32; 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18; 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::Get() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:169:10; 382: #8 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::operator*() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:229:15; 382: #9 0x5ecb22 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1140:10; 382: #10 0x5be335 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1202:14; 382: #11 0x512932 in RDFSnapshotMore_MissingSizeBranch_Test::TestBody() /home/jhahnfel/ROOT/src/tree/dataframe/test/dataframe_snapshot.cxx:903:18; ```. (already discussed and work-in-progress)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/pull/11223:55,Deployability,update,update,55,Provide json_fwd.h which can be used now in eve7. Also update forward declaration in REveElement.hxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11223
https://github.com/root-project/root/pull/11224:1196,Deployability,update,updated,1196,"With the function `RooDataHist::interpolateQuadratic()` it is now possible to; use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for; one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of; `RooDataHist::interpolateLinear()`, which was implemented in #11211; It finds the coefficients of a second order polynomial between three; neighboring bin centers by solving a system of three quadratic equations. With; the coefficients of the quadratic function, the interpolated weight for an event; between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the; corresponding weight is found by interpolating between the current bin and the; two neighboring bins to the left. If the event is to the right of the bin center,; the weight is found by interpolating between the current bin center, one bin to; the the left and one bin to the right. For the first two bins and the last bin,; the interpolation is performed either by mirroring the histogram outside its; boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls; `RooDataHist::interpolateQuadratic()` when the interpolation order is two.; Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`; have been updated so that they always call RooDatahist::weights() in the case; where the histogram is one dimensional. Since the old interpolation; implementation `RooDataHist::interpolateDim()` only supported up to second; order interpolation, it has been completely replaced by; `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`; in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1386,Deployability,update,updated,1386,"With the function `RooDataHist::interpolateQuadratic()` it is now possible to; use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for; one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of; `RooDataHist::interpolateLinear()`, which was implemented in #11211; It finds the coefficients of a second order polynomial between three; neighboring bin centers by solving a system of three quadratic equations. With; the coefficients of the quadratic function, the interpolated weight for an event; between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the; corresponding weight is found by interpolating between the current bin and the; two neighboring bins to the left. If the event is to the right of the bin center,; the weight is found by interpolating between the current bin center, one bin to; the the left and one bin to the right. For the first two bins and the last bin,; the interpolation is performed either by mirroring the histogram outside its; boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls; `RooDataHist::interpolateQuadratic()` when the interpolation order is two.; Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`; have been updated so that they always call RooDatahist::weights() in the case; where the histogram is one dimensional. Since the old interpolation; implementation `RooDataHist::interpolateDim()` only supported up to second; order interpolation, it has been completely replaced by; `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`; in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1909,Deployability,update,updated,1909,"With the function `RooDataHist::interpolateQuadratic()` it is now possible to; use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for; one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of; `RooDataHist::interpolateLinear()`, which was implemented in #11211; It finds the coefficients of a second order polynomial between three; neighboring bin centers by solving a system of three quadratic equations. With; the coefficients of the quadratic function, the interpolated weight for an event; between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the; corresponding weight is found by interpolating between the current bin and the; two neighboring bins to the left. If the event is to the right of the bin center,; the weight is found by interpolating between the current bin center, one bin to; the the left and one bin to the right. For the first two bins and the last bin,; the interpolation is performed either by mirroring the histogram outside its; boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls; `RooDataHist::interpolateQuadratic()` when the interpolation order is two.; Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`; have been updated so that they always call RooDatahist::weights() in the case; where the histogram is one dimensional. Since the old interpolation; implementation `RooDataHist::interpolateDim()` only supported up to second; order interpolation, it has been completely replaced by; `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`; in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1063,Performance,perform,performed,1063,"With the function `RooDataHist::interpolateQuadratic()` it is now possible to; use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for; one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of; `RooDataHist::interpolateLinear()`, which was implemented in #11211; It finds the coefficients of a second order polynomial between three; neighboring bin centers by solving a system of three quadratic equations. With; the coefficients of the quadratic function, the interpolated weight for an event; between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the; corresponding weight is found by interpolating between the current bin and the; two neighboring bins to the left. If the event is to the right of the bin center,; the weight is found by interpolating between the current bin center, one bin to; the the left and one bin to the right. For the first two bins and the last bin,; the interpolation is performed either by mirroring the histogram outside its; boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls; `RooDataHist::interpolateQuadratic()` when the interpolation order is two.; Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`; have been updated so that they always call RooDatahist::weights() in the case; where the histogram is one dimensional. Since the old interpolation; implementation `RooDataHist::interpolateDim()` only supported up to second; order interpolation, it has been completely replaced by; `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`; in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1879,Testability,test,tested,1879,"With the function `RooDataHist::interpolateQuadratic()` it is now possible to; use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for; one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of; `RooDataHist::interpolateLinear()`, which was implemented in #11211; It finds the coefficients of a second order polynomial between three; neighboring bin centers by solving a system of three quadratic equations. With; the coefficients of the quadratic function, the interpolated weight for an event; between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the; corresponding weight is found by interpolating between the current bin and the; two neighboring bins to the left. If the event is to the right of the bin center,; the weight is found by interpolating between the current bin center, one bin to; the the left and one bin to the right. For the first two bins and the last bin,; the interpolation is performed either by mirroring the histogram outside its; boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls; `RooDataHist::interpolateQuadratic()` when the interpolation order is two.; Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`; have been updated so that they always call RooDatahist::weights() in the case; where the histogram is one dimensional. Since the old interpolation; implementation `RooDataHist::interpolateDim()` only supported up to second; order interpolation, it has been completely replaced by; `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`; in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11226:219,Availability,failure,failures,219,Some Python tests define `PRE_` and `POST_CMD`; they should not get the ASan runtime preloaded. Invent a new `CMD_ENV` that supports exactly one environment variable that is applied to `CMD`. This fixes another 16 test failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11226
https://github.com/root-project/root/pull/11226:157,Modifiability,variab,variable,157,Some Python tests define `PRE_` and `POST_CMD`; they should not get the ASan runtime preloaded. Invent a new `CMD_ENV` that supports exactly one environment variable that is applied to `CMD`. This fixes another 16 test failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11226
https://github.com/root-project/root/pull/11226:12,Testability,test,tests,12,Some Python tests define `PRE_` and `POST_CMD`; they should not get the ASan runtime preloaded. Invent a new `CMD_ENV` that supports exactly one environment variable that is applied to `CMD`. This fixes another 16 test failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11226
https://github.com/root-project/root/pull/11226:214,Testability,test,test,214,Some Python tests define `PRE_` and `POST_CMD`; they should not get the ASan runtime preloaded. Invent a new `CMD_ENV` that supports exactly one environment variable that is applied to `CMD`. This fixes another 16 test failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11226
https://github.com/root-project/root/pull/11227:257,Availability,Error,Error,257,"Given; ```cpp; // tree_with_pair.cpp; void tree_with_pair() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; //t.Branch(""topbranch"", &x, ""a/I:b/I""); t.Branch(""topbranch"", &x);; t.Fill();; t.Scan();; }; ```. , without this patch the output is:. ```; Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; In module 'Core':; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; ```. with this patch:. ```; Processing tree_with_pair.cpp...; ************************************; * Row * topbranch * topbranch *; ************************************; * 0 * 42 * 84 *; ************************************; ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:230,Deployability,patch,patch,230,"Given; ```cpp; // tree_with_pair.cpp; void tree_with_pair() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; //t.Branch(""topbranch"", &x, ""a/I:b/I""); t.Branch(""topbranch"", &x);; t.Fill();; t.Scan();; }; ```. , without this patch the output is:. ```; Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; In module 'Core':; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; ```. with this patch:. ```; Processing tree_with_pair.cpp...; ************************************; * Row * topbranch * topbranch *; ************************************; * 0 * 42 * 84 *; ************************************; ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:655,Deployability,patch,patch,655,"Given; ```cpp; // tree_with_pair.cpp; void tree_with_pair() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; //t.Branch(""topbranch"", &x, ""a/I:b/I""); t.Branch(""topbranch"", &x);; t.Fill();; t.Scan();; }; ```. , without this patch the output is:. ```; Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; In module 'Core':; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; ```. with this patch:. ```; Processing tree_with_pair.cpp...; ************************************; * Row * topbranch * topbranch *; ************************************; * 0 * 42 * 84 *; ************************************; ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:349,Integrability,rout,routine,349,"Given; ```cpp; // tree_with_pair.cpp; void tree_with_pair() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; //t.Branch(""topbranch"", &x, ""a/I:b/I""); t.Branch(""topbranch"", &x);; t.Fill();; t.Scan();; }; ```. , without this patch the output is:. ```; Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; In module 'Core':; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; ```. with this patch:. ```; Processing tree_with_pair.cpp...; ************************************; * Row * topbranch * topbranch *; ************************************; * 0 * 42 * 84 *; ************************************; ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:411,Safety,abort,aborted,411,"Given; ```cpp; // tree_with_pair.cpp; void tree_with_pair() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; //t.Branch(""topbranch"", &x, ""a/I:b/I""); t.Branch(""topbranch"", &x);; t.Fill();; t.Scan();; }; ```. , without this patch the output is:. ```; Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; In module 'Core':; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; ```. with this patch:. ```; Processing tree_with_pair.cpp...; ************************************; * Row * topbranch * topbranch *; ************************************; * 0 * 42 * 84 *; ************************************; ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11228:85,Availability,alive,alive,85,* fixes a memory leak in `testSPlot`; * make sure the last normalization set is kept alive in PyROOT even when the last normalization set was implicitly created from a Python collection via the new Pythonizations; * make sure no derived coefficients are evaluated without normalization sets in `SPlot` to fix undefined behavior when calling `getVal()` and `RooAbsReal::getValV()` checks for the last normalization set that might not be alive anymore; * improving the code of the `RooLinearVar` that is used by the `SPlot`. Closes #11221.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11228
https://github.com/root-project/root/pull/11228:436,Availability,alive,alive,436,* fixes a memory leak in `testSPlot`; * make sure the last normalization set is kept alive in PyROOT even when the last normalization set was implicitly created from a Python collection via the new Pythonizations; * make sure no derived coefficients are evaluated without normalization sets in `SPlot` to fix undefined behavior when calling `getVal()` and `RooAbsReal::getValV()` checks for the last normalization set that might not be alive anymore; * improving the code of the `RooLinearVar` that is used by the `SPlot`. Closes #11221.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11228
https://github.com/root-project/root/pull/11228:26,Testability,test,testSPlot,26,* fixes a memory leak in `testSPlot`; * make sure the last normalization set is kept alive in PyROOT even when the last normalization set was implicitly created from a Python collection via the new Pythonizations; * make sure no derived coefficients are evaluated without normalization sets in `SPlot` to fix undefined behavior when calling `getVal()` and `RooAbsReal::getValV()` checks for the last normalization set that might not be alive anymore; * improving the code of the `RooLinearVar` that is used by the `SPlot`. Closes #11221.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11228
https://github.com/root-project/root/pull/11230:184,Deployability,update,updated,184,# This Pull request:. ## Changes or fixes:. Replace the Sum and Mean methods by the Kahan Sum method to improve summation precision. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11230
https://github.com/root-project/root/pull/11230:154,Testability,test,tested,154,# This Pull request:. ## Changes or fixes:. Replace the Sum and Mean methods by the Kahan Sum method to improve summation precision. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11230
https://github.com/root-project/root/pull/11231:280,Availability,down,download,280,"Fixes the following warning with CMake 3.24:; ```; CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):; The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is; not set. The policy's OLD behavior will be used. When using a URL; download, the timestamps of extracted files should preferably be that of; the time of extraction, otherwise code that depends on the extracted; contents might not be rebuilt if the URL changes. The OLD behavior; preserves the timestamps from the archive instead, but this is usually not; what you want. Update your project to the NEW behavior or specify the; DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this; robustness issue.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:709,Availability,robust,robustness,709,"Fixes the following warning with CMake 3.24:; ```; CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):; The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is; not set. The policy's OLD behavior will be used. When using a URL; download, the timestamps of extracted files should preferably be that of; the time of extraction, otherwise code that depends on the extracted; contents might not be rebuilt if the URL changes. The OLD behavior; preserves the timestamps from the archive instead, but this is usually not; what you want. Update your project to the NEW behavior or specify the; DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this; robustness issue.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:583,Deployability,Update,Update,583,"Fixes the following warning with CMake 3.24:; ```; CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):; The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is; not set. The policy's OLD behavior will be used. When using a URL; download, the timestamps of extracted files should preferably be that of; the time of extraction, otherwise code that depends on the extracted; contents might not be rebuilt if the URL changes. The OLD behavior; preserves the timestamps from the archive instead, but this is usually not; what you want. Update your project to the NEW behavior or specify the; DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this; robustness issue.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:127,Integrability,message,message,127,"Fixes the following warning with CMake 3.24:; ```; CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):; The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is; not set. The policy's OLD behavior will be used. When using a URL; download, the timestamps of extracted files should preferably be that of; the time of extraction, otherwise code that depends on the extracted; contents might not be rebuilt if the URL changes. The OLD behavior; preserves the timestamps from the archive instead, but this is usually not; what you want. Update your project to the NEW behavior or specify the; DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this; robustness issue.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:398,Integrability,depend,depends,398,"Fixes the following warning with CMake 3.24:; ```; CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):; The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is; not set. The policy's OLD behavior will be used. When using a URL; download, the timestamps of extracted files should preferably be that of; the time of extraction, otherwise code that depends on the extracted; contents might not be rebuilt if the URL changes. The OLD behavior; preserves the timestamps from the archive instead, but this is usually not; what you want. Update your project to the NEW behavior or specify the; DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this; robustness issue.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:697,Safety,avoid,avoid,697,"Fixes the following warning with CMake 3.24:; ```; CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):; The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is; not set. The policy's OLD behavior will be used. When using a URL; download, the timestamps of extracted files should preferably be that of; the time of extraction, otherwise code that depends on the extracted; contents might not be rebuilt if the URL changes. The OLD behavior; preserves the timestamps from the archive instead, but this is usually not; what you want. Update your project to the NEW behavior or specify the; DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this; robustness issue.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11232:258,Energy Efficiency,adapt,adapted,258,"Rather than constructing a new RVec (as a view over the new; array data) at every event and swapping with the old one,; directly change the address of the old RVec. This provides a ~10% performance improvement for a synthetic; version of the dimuon tutorial adapted to only read (uncompressed); data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11232
https://github.com/root-project/root/pull/11232:258,Modifiability,adapt,adapted,258,"Rather than constructing a new RVec (as a view over the new; array data) at every event and swapping with the old one,; directly change the address of the old RVec. This provides a ~10% performance improvement for a synthetic; version of the dimuon tutorial adapted to only read (uncompressed); data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11232
https://github.com/root-project/root/pull/11232:186,Performance,perform,performance,186,"Rather than constructing a new RVec (as a view over the new; array data) at every event and swapping with the old one,; directly change the address of the old RVec. This provides a ~10% performance improvement for a synthetic; version of the dimuon tutorial adapted to only read (uncompressed); data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11232
https://github.com/root-project/root/issues/11233:31,Deployability,update,update,31,"### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source; 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`; 3. Rebuild ROOT; 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312); * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:217,Deployability,update,updated,217,"### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source; 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`; 3. Rebuild ROOT; 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312); * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:310,Deployability,install,installing,310,"### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source; 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`; 3. Rebuild ROOT; 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312); * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:380,Deployability,update,update,380,"### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source; 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`; 3. Rebuild ROOT; 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312); * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:495,Deployability,install,install,495,"### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source; 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`; 3. Rebuild ROOT; 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312); * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/pull/11234:9,Modifiability,rewrite,rewrite,9,"With the rewrite of the RooCategory classes, the `RooCatType` was; deprecated (moved into RooFitLegacy) and should also not be used anymore; in tutorial code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11234
https://github.com/root-project/root/issues/11236:116,Availability,error,error,116,"### Describe the bug; I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior; The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d); 2. Operating system: Archlinux, gcc 12.1.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:122,Integrability,message,messages,122,"### Describe the bug; I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior; The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d); 2. Operating system: Archlinux, gcc 12.1.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:138,Testability,log,log,138,"### Describe the bug; I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior; The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d); 2. Operating system: Archlinux, gcc 12.1.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11239:14,Availability,failure,failure,14,"I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```; [ 51%] Linking CXX shared library ../../lib/libGraf.so; 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1; 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:79,Availability,error,error,79,"I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```; [ 51%] Linking CXX shared library ../../lib/libGraf.so; 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1; 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2603,Availability,error,error,2603,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so; 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':; 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'; 	collect2: error: ld returned 1 exit status; ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2743,Availability,error,error,2743,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so; 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':; 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'; 	collect2: error: ld returned 1 exit status; ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2843,Deployability,install,installing,2843,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so; 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':; 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'; 	collect2: error: ld returned 1 exit status; ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:3067,Deployability,install,installed,3067,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so; 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':; 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'; 	collect2: error: ld returned 1 exit status; ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2752,Safety,avoid,avoided,2752,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so; 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':; 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'; 	collect2: error: ld returned 1 exit status; ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:540,Security,hash,hash-style,540,"I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```; [ 51%] Linking CXX shared library ../../lib/libGraf.so; 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1; 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/pull/11241:299,Modifiability,variab,variables,299,A bunch of improvements to distributed module:; 1. Add all sources to the `py_compile` command in cmake; 2. Use postponed evaluation for type hints and avoid implicit import ROOT; 3. Test that `import DistRDF` has no side-effects: no implicit importing of ROOT and no implicit change of environment variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11241
https://github.com/root-project/root/pull/11241:152,Safety,avoid,avoid,152,A bunch of improvements to distributed module:; 1. Add all sources to the `py_compile` command in cmake; 2. Use postponed evaluation for type hints and avoid implicit import ROOT; 3. Test that `import DistRDF` has no side-effects: no implicit importing of ROOT and no implicit change of environment variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11241
https://github.com/root-project/root/pull/11241:183,Testability,Test,Test,183,A bunch of improvements to distributed module:; 1. Add all sources to the `py_compile` command in cmake; 2. Use postponed evaluation for type hints and avoid implicit import ROOT; 3. Test that `import DistRDF` has no side-effects: no implicit importing of ROOT and no implicit change of environment variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11241
https://github.com/root-project/root/pull/11243:171,Testability,test,tested,171,# This Pull request:. Is a resubmit of #10999 with additional needed changes (as discussed in that original PR). ## Changes or fixes:. Fixes: #10990. ## Checklist:. - [x] tested changes locally. This PR fixes #10990,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11243
https://github.com/root-project/root/issues/11245:2019,Availability,down,download,2019,"ur issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341).; 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:; `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`; 3. You can validate the weird behaviour by performing an intermediate conversion:; `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT Version 6.27/01; 2. Linux CentOS 8 + Linux Debian 11; 3. Built from source. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:2001,Deployability,install,install,2001,"ur issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341).; 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:; `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`; 3. You can validate the weird behaviour by performing an intermediate conversion:; `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT Version 6.27/01; 2. Linux CentOS 8 + Linux Debian 11; 3. Built from source. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1756,Performance,perform,performing,1756,"ur issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341).; 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:; `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`; 3. You can validate the weird behaviour by performing an intermediate conversion:; `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT Version 6.27/01; 2. Linux CentOS 8 + Linux Debian 11; 3. Built from source. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1724,Security,validat,validate,1724,"ur issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341).; 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:; `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`; 3. You can validate the weird behaviour by performing an intermediate conversion:; `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT Version 6.27/01; 2. Linux CentOS 8 + Linux Debian 11; 3. Built from source. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341).; 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:; `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`; 3. You can validate the weird behaviour by performing an intermediate conversion:; `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:815,Usability,clear,clear,815,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341).; 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:; `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`; 3. You can validate the weird behaviour by performing an intermediate conversion:; `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/pull/11246:280,Availability,down,download,280,"Fixes the following warning with CMake 3.24:; ```; CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):; The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is; not set. The policy's OLD behavior will be used. When using a URL; download, the timestamps of extracted files should preferably be that of; the time of extraction, otherwise code that depends on the extracted; contents might not be rebuilt if the URL changes. The OLD behavior; preserves the timestamps from the archive instead, but this is usually not; what you want. Update your project to the NEW behavior or specify the; DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this; robustness issue.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:709,Availability,robust,robustness,709,"Fixes the following warning with CMake 3.24:; ```; CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):; The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is; not set. The policy's OLD behavior will be used. When using a URL; download, the timestamps of extracted files should preferably be that of; the time of extraction, otherwise code that depends on the extracted; contents might not be rebuilt if the URL changes. The OLD behavior; preserves the timestamps from the archive instead, but this is usually not; what you want. Update your project to the NEW behavior or specify the; DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this; robustness issue.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:583,Deployability,Update,Update,583,"Fixes the following warning with CMake 3.24:; ```; CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):; The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is; not set. The policy's OLD behavior will be used. When using a URL; download, the timestamps of extracted files should preferably be that of; the time of extraction, otherwise code that depends on the extracted; contents might not be rebuilt if the URL changes. The OLD behavior; preserves the timestamps from the archive instead, but this is usually not; what you want. Update your project to the NEW behavior or specify the; DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this; robustness issue.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:127,Integrability,message,message,127,"Fixes the following warning with CMake 3.24:; ```; CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):; The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is; not set. The policy's OLD behavior will be used. When using a URL; download, the timestamps of extracted files should preferably be that of; the time of extraction, otherwise code that depends on the extracted; contents might not be rebuilt if the URL changes. The OLD behavior; preserves the timestamps from the archive instead, but this is usually not; what you want. Update your project to the NEW behavior or specify the; DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this; robustness issue.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:398,Integrability,depend,depends,398,"Fixes the following warning with CMake 3.24:; ```; CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):; The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is; not set. The policy's OLD behavior will be used. When using a URL; download, the timestamps of extracted files should preferably be that of; the time of extraction, otherwise code that depends on the extracted; contents might not be rebuilt if the URL changes. The OLD behavior; preserves the timestamps from the archive instead, but this is usually not; what you want. Update your project to the NEW behavior or specify the; DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this; robustness issue.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:697,Safety,avoid,avoid,697,"Fixes the following warning with CMake 3.24:; ```; CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):; The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is; not set. The policy's OLD behavior will be used. When using a URL; download, the timestamps of extracted files should preferably be that of; the time of extraction, otherwise code that depends on the extracted; contents might not be rebuilt if the URL changes. The OLD behavior; preserves the timestamps from the archive instead, but this is usually not; what you want. Update your project to the NEW behavior or specify the; DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this; robustness issue.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11248:161,Availability,avail,available,161,"RDFHelpers.hxx provides ROOT::RDF::RunGraphs(std::vector<RResultHandle>).; In order for the handy implicit conversion from RResultPtr<T> to; RResultHandle to be available for client code that include; RDFHelpers.hxx, it is not enough that this header forward-declares; RResultHandle, but it needs to transitively provide the whole type; declaration. In practice, before 8bbd543f3d56, this worked fine:. ```; ...; RunGraphs({resultptr1, resultptr2});; ```. while after that commit it would require an extra `#include; <ROOT/RResultHandle.hxx>`. This patch restores the previous situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11248
https://github.com/root-project/root/pull/11248:549,Deployability,patch,patch,549,"RDFHelpers.hxx provides ROOT::RDF::RunGraphs(std::vector<RResultHandle>).; In order for the handy implicit conversion from RResultPtr<T> to; RResultHandle to be available for client code that include; RDFHelpers.hxx, it is not enough that this header forward-declares; RResultHandle, but it needs to transitively provide the whole type; declaration. In practice, before 8bbd543f3d56, this worked fine:. ```; ...; RunGraphs({resultptr1, resultptr2});; ```. while after that commit it would require an extra `#include; <ROOT/RResultHandle.hxx>`. This patch restores the previous situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11248
https://github.com/root-project/root/pull/11249:250,Deployability,update,updated,250,# This Pull request:; Moves the RSlotStack implementation from tree/dataframe/ to core/imt/. ## Changes or fixes:; Makes RSlotStack useable without requiring the whole of RDataFrame as a dependency. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # N/A,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11249
https://github.com/root-project/root/pull/11249:187,Integrability,depend,dependency,187,# This Pull request:; Moves the RSlotStack implementation from tree/dataframe/ to core/imt/. ## Changes or fixes:; Makes RSlotStack useable without requiring the whole of RDataFrame as a dependency. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # N/A,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11249
https://github.com/root-project/root/pull/11249:220,Testability,test,tested,220,# This Pull request:; Moves the RSlotStack implementation from tree/dataframe/ to core/imt/. ## Changes or fixes:; Makes RSlotStack useable without requiring the whole of RDataFrame as a dependency. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # N/A,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11249
https://github.com/root-project/root/pull/11251:395,Deployability,patch,patch,395,"Before this commit, if an action with a sample callback (currently; only Snapshot) or a DefinePerSample went out of scope, we did not; deregister the corresponding callbacks from the RLoopManager, which; would try to run them anyway during the following event loop.; As callbacks typically perform a call on the original action or; define objects, this could cause a use-after-delete. With this patch, we now associate each callback to the address of; the corresponding node of the computation graph and remove callbacks; when the nodes go out of scope. This fixes https://github.com/root-project/root/issues/11222.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11251
https://github.com/root-project/root/pull/11251:290,Performance,perform,perform,290,"Before this commit, if an action with a sample callback (currently; only Snapshot) or a DefinePerSample went out of scope, we did not; deregister the corresponding callbacks from the RLoopManager, which; would try to run them anyway during the following event loop.; As callbacks typically perform a call on the original action or; define objects, this could cause a use-after-delete. With this patch, we now associate each callback to the address of; the corresponding node of the computation graph and remove callbacks; when the nodes go out of scope. This fixes https://github.com/root-project/root/issues/11222.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11251
https://github.com/root-project/root/pull/11254:264,Deployability,update,updates,264,"Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message.; The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome!. Other commits are style changes to the message for a clearer output and code. After this PR:; ```; $: hadd -h; usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]; [-cachesize CACHESIZE]; [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]; [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]; TARGET SOURCES. OPTIONS:; -a Append to the output; -k Skip corrupt or non-existent files, do not exit; -T Do not merge TTree objects; -O If hadd is used to merge TTree objects, compress the whole target tree; (including its branches and baskets) with the desired compression; algorithm. This can be set for example through the '-f' option; -v Explicitly set the verbosity level: 0 request no output, 99 is the; default; -j Parallelize the execution in multiple processes; -dbg Parallelize the execution in multiple processes in debug mode (Does; not delete partial files stored inside working directory); -d Carry out the partial multiprocess execution in the specified; directory; -n Open at most 'maxopenedfiles' at once (use 0 to request to use the; system maximum); -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to; disable); -experimental-io-features Used with an argument provided, enables the corresponding experimental; feature for output trees; -f Gives the ability to specify the compression level of the target file; (by default 4); -fk Sets the target file to contain the baskets with the same compression; as the input files (unless -O is specified). Compresses the meta data; using the compression level specified in the first input or the; compression setting after f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:237,Integrability,message,message,237,"Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message.; The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome!. Other commits are style changes to the message for a clearer output and code. After this PR:; ```; $: hadd -h; usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]; [-cachesize CACHESIZE]; [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]; [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]; TARGET SOURCES. OPTIONS:; -a Append to the output; -k Skip corrupt or non-existent files, do not exit; -T Do not merge TTree objects; -O If hadd is used to merge TTree objects, compress the whole target tree; (including its branches and baskets) with the desired compression; algorithm. This can be set for example through the '-f' option; -v Explicitly set the verbosity level: 0 request no output, 99 is the; default; -j Parallelize the execution in multiple processes; -dbg Parallelize the execution in multiple processes in debug mode (Does; not delete partial files stored inside working directory); -d Carry out the partial multiprocess execution in the specified; directory; -n Open at most 'maxopenedfiles' at once (use 0 to request to use the; system maximum); -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to; disable); -experimental-io-features Used with an argument provided, enables the corresponding experimental; feature for output trees; -f Gives the ability to specify the compression level of the target file; (by default 4); -fk Sets the target file to contain the baskets with the same compression; as the input files (unless -O is specified). Compresses the meta data; using the compression level specified in the first input or the; compression setting after f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:413,Integrability,message,message,413,"Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message.; The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome!. Other commits are style changes to the message for a clearer output and code. After this PR:; ```; $: hadd -h; usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]; [-cachesize CACHESIZE]; [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]; [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]; TARGET SOURCES. OPTIONS:; -a Append to the output; -k Skip corrupt or non-existent files, do not exit; -T Do not merge TTree objects; -O If hadd is used to merge TTree objects, compress the whole target tree; (including its branches and baskets) with the desired compression; algorithm. This can be set for example through the '-f' option; -v Explicitly set the verbosity level: 0 request no output, 99 is the; default; -j Parallelize the execution in multiple processes; -dbg Parallelize the execution in multiple processes in debug mode (Does; not delete partial files stored inside working directory); -d Carry out the partial multiprocess execution in the specified; directory; -n Open at most 'maxopenedfiles' at once (use 0 to request to use the; system maximum); -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to; disable); -experimental-io-features Used with an argument provided, enables the corresponding experimental; feature for output trees; -f Gives the ability to specify the compression level of the target file; (by default 4); -fk Sets the target file to contain the baskets with the same compression; as the input files (unless -O is specified). Compresses the meta data; using the compression level specified in the first input or the; compression setting after f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:567,Performance,cache,cachesize,567,"Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message.; The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome!. Other commits are style changes to the message for a clearer output and code. After this PR:; ```; $: hadd -h; usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]; [-cachesize CACHESIZE]; [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]; [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]; TARGET SOURCES. OPTIONS:; -a Append to the output; -k Skip corrupt or non-existent files, do not exit; -T Do not merge TTree objects; -O If hadd is used to merge TTree objects, compress the whole target tree; (including its branches and baskets) with the desired compression; algorithm. This can be set for example through the '-f' option; -v Explicitly set the verbosity level: 0 request no output, 99 is the; default; -j Parallelize the execution in multiple processes; -dbg Parallelize the execution in multiple processes in debug mode (Does; not delete partial files stored inside working directory); -d Carry out the partial multiprocess execution in the specified; directory; -n Open at most 'maxopenedfiles' at once (use 0 to request to use the; system maximum); -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to; disable); -experimental-io-features Used with an argument provided, enables the corresponding experimental; feature for output trees; -f Gives the ability to specify the compression level of the target file; (by default 4); -fk Sets the target file to contain the baskets with the same compression; as the input files (unless -O is specified). Compresses the meta data; using the compression level specified in the first input or the; compression setting after f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:577,Performance,CACHE,CACHESIZE,577,"Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message.; The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome!. Other commits are style changes to the message for a clearer output and code. After this PR:; ```; $: hadd -h; usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]; [-cachesize CACHESIZE]; [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]; [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]; TARGET SOURCES. OPTIONS:; -a Append to the output; -k Skip corrupt or non-existent files, do not exit; -T Do not merge TTree objects; -O If hadd is used to merge TTree objects, compress the whole target tree; (including its branches and baskets) with the desired compression; algorithm. This can be set for example through the '-f' option; -v Explicitly set the verbosity level: 0 request no output, 99 is the; default; -j Parallelize the execution in multiple processes; -dbg Parallelize the execution in multiple processes in debug mode (Does; not delete partial files stored inside working directory); -d Carry out the partial multiprocess execution in the specified; directory; -n Open at most 'maxopenedfiles' at once (use 0 to request to use the; system maximum); -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to; disable); -experimental-io-features Used with an argument provided, enables the corresponding experimental; feature for output trees; -f Gives the ability to specify the compression level of the target file; (by default 4); -fk Sets the target file to contain the baskets with the same compression; as the input files (unless -O is specified). Compresses the meta data; using the compression level specified in the first input or the; compression setting after f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:1458,Performance,cache,cachesize,1458," option, most probably this can be further improved so suggestions are welcome!. Other commits are style changes to the message for a clearer output and code. After this PR:; ```; $: hadd -h; usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]; [-cachesize CACHESIZE]; [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]; [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]; TARGET SOURCES. OPTIONS:; -a Append to the output; -k Skip corrupt or non-existent files, do not exit; -T Do not merge TTree objects; -O If hadd is used to merge TTree objects, compress the whole target tree; (including its branches and baskets) with the desired compression; algorithm. This can be set for example through the '-f' option; -v Explicitly set the verbosity level: 0 request no output, 99 is the; default; -j Parallelize the execution in multiple processes; -dbg Parallelize the execution in multiple processes in debug mode (Does; not delete partial files stored inside working directory); -d Carry out the partial multiprocess execution in the specified; directory; -n Open at most 'maxopenedfiles' at once (use 0 to request to use the; system maximum); -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to; disable); -experimental-io-features Used with an argument provided, enables the corresponding experimental; feature for output trees; -f Gives the ability to specify the compression level of the target file; (by default 4); -fk Sets the target file to contain the baskets with the same compression; as the input files (unless -O is specified). Compresses the meta data; using the compression level specified in the first input or the; compression setting after fk (for example 206 when using -fk206); -ff The compression level use is the one specified in the first input; -f0 Do not compress the target file; -f6 Use compression level 6 (See TFile::SetCompressionSettings for the; supported range of values); TARGET Target file; SOURCES Source files; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:1491,Performance,cache,cache,1491," option, most probably this can be further improved so suggestions are welcome!. Other commits are style changes to the message for a clearer output and code. After this PR:; ```; $: hadd -h; usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]; [-cachesize CACHESIZE]; [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]; [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]; TARGET SOURCES. OPTIONS:; -a Append to the output; -k Skip corrupt or non-existent files, do not exit; -T Do not merge TTree objects; -O If hadd is used to merge TTree objects, compress the whole target tree; (including its branches and baskets) with the desired compression; algorithm. This can be set for example through the '-f' option; -v Explicitly set the verbosity level: 0 request no output, 99 is the; default; -j Parallelize the execution in multiple processes; -dbg Parallelize the execution in multiple processes in debug mode (Does; not delete partial files stored inside working directory); -d Carry out the partial multiprocess execution in the specified; directory; -n Open at most 'maxopenedfiles' at once (use 0 to request to use the; system maximum); -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to; disable); -experimental-io-features Used with an argument provided, enables the corresponding experimental; feature for output trees; -f Gives the ability to specify the compression level of the target file; (by default 4); -fk Sets the target file to contain the baskets with the same compression; as the input files (unless -O is specified). Compresses the meta data; using the compression level specified in the first input or the; compression setting after fk (for example 206 when using -fk206); -ff The compression level use is the one specified in the first input; -f0 Do not compress the target file; -f6 Use compression level 6 (See TFile::SetCompressionSettings for the; supported range of values); TARGET Target file; SOURCES Source files; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:204,Usability,clear,clear,204,"Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message.; The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome!. Other commits are style changes to the message for a clearer output and code. After this PR:; ```; $: hadd -h; usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]; [-cachesize CACHESIZE]; [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]; [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]; TARGET SOURCES. OPTIONS:; -a Append to the output; -k Skip corrupt or non-existent files, do not exit; -T Do not merge TTree objects; -O If hadd is used to merge TTree objects, compress the whole target tree; (including its branches and baskets) with the desired compression; algorithm. This can be set for example through the '-f' option; -v Explicitly set the verbosity level: 0 request no output, 99 is the; default; -j Parallelize the execution in multiple processes; -dbg Parallelize the execution in multiple processes in debug mode (Does; not delete partial files stored inside working directory); -d Carry out the partial multiprocess execution in the specified; directory; -n Open at most 'maxopenedfiles' at once (use 0 to request to use the; system maximum); -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to; disable); -experimental-io-features Used with an argument provided, enables the corresponding experimental; feature for output trees; -f Gives the ability to specify the compression level of the target file; (by default 4); -fk Sets the target file to contain the baskets with the same compression; as the input files (unless -O is specified). Compresses the meta data; using the compression level specified in the first input or the; compression setting after f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:427,Usability,clear,clearer,427,"Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message.; The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome!. Other commits are style changes to the message for a clearer output and code. After this PR:; ```; $: hadd -h; usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]; [-cachesize CACHESIZE]; [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]; [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]; TARGET SOURCES. OPTIONS:; -a Append to the output; -k Skip corrupt or non-existent files, do not exit; -T Do not merge TTree objects; -O If hadd is used to merge TTree objects, compress the whole target tree; (including its branches and baskets) with the desired compression; algorithm. This can be set for example through the '-f' option; -v Explicitly set the verbosity level: 0 request no output, 99 is the; default; -j Parallelize the execution in multiple processes; -dbg Parallelize the execution in multiple processes in debug mode (Does; not delete partial files stored inside working directory); -d Carry out the partial multiprocess execution in the specified; directory; -n Open at most 'maxopenedfiles' at once (use 0 to request to use the; system maximum); -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to; disable); -experimental-io-features Used with an argument provided, enables the corresponding experimental; feature for output trees; -f Gives the ability to specify the compression level of the target file; (by default 4); -fk Sets the target file to contain the baskets with the same compression; as the input files (unless -O is specified). Compresses the meta data; using the compression level specified in the first input or the; compression setting after f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11255:595,Availability,down,down,595,"When called repeatedly via TTree::GetBranch, the string allocations in; GetFullName have a notable runtime cost.; Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead.; ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal; - Do you know if there's a test that covers this case?; - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:138,Energy Efficiency,reduce,reduced,138,"When called repeatedly via TTree::GetBranch, the string allocations in; GetFullName have a notable runtime cost.; Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead.; ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal; - Do you know if there's a test that covers this case?; - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:194,Performance,perform,performance,194,"When called repeatedly via TTree::GetBranch, the string allocations in; GetFullName have a notable runtime cost.; Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead.; ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal; - Do you know if there's a test that covers this case?; - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:534,Testability,test,test,534,"When called repeatedly via TTree::GetBranch, the string allocations in; GetFullName have a notable runtime cost.; Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead.; ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal; - Do you know if there's a test that covers this case?; - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11256:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11256
https://github.com/root-project/root/pull/11256:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11256
https://github.com/root-project/root/pull/11257:20,Availability,error,error,20,"Fixes the following error when building:; ```; /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:; /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]; 1539 | ::Error(""TClingCallFunc::exec(void*)"",; | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1540 | ""Invalid type '%s'"", BT->getTypeClassName());; ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:284,Availability,error,error,284,"Fixes the following error when building:; ```; /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:; /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]; 1539 | ::Error(""TClingCallFunc::exec(void*)"",; | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1540 | ""Invalid type '%s'"", BT->getTypeClassName());; ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:342,Availability,Error,Error,342,"Fixes the following error when building:; ```; /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:; /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]; 1539 | ::Error(""TClingCallFunc::exec(void*)"",; | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1540 | ""Invalid type '%s'"", BT->getTypeClassName());; ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11258:30,Energy Efficiency,Reduce,ReduceMean,30,"# This Pull request: Adds the ReduceMean, ReduceProd and ReduceSumsquare operators in SOFIE. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11258
https://github.com/root-project/root/pull/11258:42,Energy Efficiency,Reduce,ReduceProd,42,"# This Pull request: Adds the ReduceMean, ReduceProd and ReduceSumsquare operators in SOFIE. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11258
https://github.com/root-project/root/pull/11258:57,Energy Efficiency,Reduce,ReduceSumsquare,57,"# This Pull request: Adds the ReduceMean, ReduceProd and ReduceSumsquare operators in SOFIE. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11258
https://github.com/root-project/root/pull/11258:114,Testability,test,tested,114,"# This Pull request: Adds the ReduceMean, ReduceProd and ReduceSumsquare operators in SOFIE. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11258
https://github.com/root-project/root/issues/11259:431,Deployability,patch,patches,431,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches; when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:; ```; <lcgdict>; <class pattern=""*iterator<*pair<const*,const*""/>; </lcgdict>; ```. x.h:; ```; #include <string>; #include <map>; void foo (std::map<unsigned, std::string>& m, const std::string& s); {; m.emplace (0, s);; }; ```. On lxplus7:; ```; $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed.; $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh; $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh ; $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx; genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed.; ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```; #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (; this=0x7fffef6df2e8); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMeta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:947,Deployability,patch,patches,947,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches; when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:; ```; <lcgdict>; <class pattern=""*iterator<*pair<const*,const*""/>; </lcgdict>; ```. x.h:; ```; #include <string>; #include <map>; void foo (std::map<unsigned, std::string>& m, const std::string& s); {; m.emplace (0, s);; }; ```. On lxplus7:; ```; $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed.; $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh; $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh ; $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx; genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed.; ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```; #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (; this=0x7fffef6df2e8); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMeta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1135,Deployability,patch,patches,1135,"ttps://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches; when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:; ```; <lcgdict>; <class pattern=""*iterator<*pair<const*,const*""/>; </lcgdict>; ```. x.h:; ```; #include <string>; #include <map>; void foo (std::map<unsigned, std::string>& m, const std::string& s); {; m.emplace (0, s);; }; ```. On lxplus7:; ```; $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed.; $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh; $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh ; $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx; genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed.; ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```; #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (; this=0x7fffef6df2e8); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1161,Deployability,patch,patches,1161,"ttps://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches; when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:; ```; <lcgdict>; <class pattern=""*iterator<*pair<const*,const*""/>; </lcgdict>; ```. x.h:; ```; #include <string>; #include <map>; void foo (std::map<unsigned, std::string>& m, const std::string& s); {; m.emplace (0, s);; }; ```. On lxplus7:; ```; $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed.; $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh; $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh ; $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx; genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed.; ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```; #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (; this=0x7fffef6df2e8); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1604,Deployability,patch,patches,1604,",const*""/>; </lcgdict>; ```. x.h:; ```; #include <string>; #include <map>; void foo (std::map<unsigned, std::string>& m, const std::string& s); {; m.emplace (0, s);; }; ```. On lxplus7:; ```; $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed.; $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh; $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh ; $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx; genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed.; ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```; #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (; this=0x7fffef6df2e8); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffffff4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1630,Deployability,patch,patches,1630,",const*""/>; </lcgdict>; ```. x.h:; ```; #include <string>; #include <map>; void foo (std::map<unsigned, std::string>& m, const std::string& s); {; m.emplace (0, s);; }; ```. On lxplus7:; ```; $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed.; $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh; $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh ; $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx; genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed.; ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```; #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (; this=0x7fffef6df2e8); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffffff4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1889,Deployability,patch,patches,1889,"JECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh; $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh ; $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx; genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed.; ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```; #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (; this=0x7fffef6df2e8); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffffff4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1915,Deployability,patch,patches,1915,"JECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh; $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh ; $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx; genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed.; ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```; #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (; this=0x7fffef6df2e8); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffffff4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2145,Deployability,patch,patches,2145,"T-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed.; ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```; #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (; this=0x7fffef6df2e8); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffffff4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2171,Deployability,patch,patches,2171,"T-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed.; ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```; #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (; this=0x7fffef6df2e8); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffffff4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2397,Deployability,patch,patches,2397,"ted kind""' failed.; ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```; #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (; this=0x7fffef6df2e8); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffffff4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2423,Deployability,patch,patches,2423,"ted kind""' failed.; ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```; #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (; this=0x7fffef6df2e8); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffffff4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2647,Deployability,patch,patches,2647,"v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffffff4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2673,Deployability,patch,patches,2673,"v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffffff4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2881,Deployability,patch,patches,2881,"e/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffffff4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2907,Deployability,patch,patches,2907,"e/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffffff4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3132,Deployability,patch,patches,3132,"ild/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffffff4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3158,Deployability,patch,patches,3158,"ild/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffffff4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3347,Deployability,patch,patches,3347,"f4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3373,Deployability,patch,patches,3373,"f4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3569,Deployability,patch,patches,3569,"eClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3595,Deployability,patch,patches,3595,"eClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3791,Deployability,patch,patches,3791,"0007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3817,Deployability,patch,patches,3817,"0007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4013,Deployability,patch,patches,4013,":355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4039,Deployability,patch,patches,4039,":355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4217,Deployability,patch,patches,4217,"/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4243,Deployability,patch,patches,4243,"/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4433,Deployability,patch,patches,4433,"/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632; #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., ; scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, ; writeEmptyRootPCM=false); at /build/jenkins/wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4459,Deployability,patch,patches,4459,"/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632; #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., ; scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, ; writeEmptyRootPCM=false); at /build/jenkins/wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4659,Deployability,patch,patches,4659,"s/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632; #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., ; scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784; #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, ; isGenreflex=true); at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4685,Deployability,patch,patches,4685,"s/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632; #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., ; scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784; #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, ; isGenreflex=true); at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4881,Deployability,patch,patches,4881,"e/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632; #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., ; scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784; #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, ; isGenreflex=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906; #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., ; sele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4907,Deployability,patch,patches,4907,"e/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632; #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., ; scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784; #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, ; isGenreflex=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906; #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., ; sele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5124,Deployability,patch,patches,5124," TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632; #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., ; scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784; #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, ; isGenreflex=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906; #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., ; selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., ; includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., ; rootmapFileName=..., rootmapLibName=..., interpreteronly=false, ; doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, ; selS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5150,Deployability,patch,patches,5150," TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632; #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., ; scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784; #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, ; isGenreflex=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906; #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., ; selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., ; includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., ; rootmapFileName=..., rootmapLibName=..., interpreteronly=false, ; doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, ; selS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5438,Deployability,patch,patches,5438,"ine/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632; #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., ; scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784; #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, ; isGenreflex=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906; #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., ; selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., ; includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., ; rootmapFileName=..., rootmapLibName=..., interpreteronly=false, ; doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, ; selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, ; headersNames=..., failOnWarnings=false, ofilename=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371; #23 0x00007ffff307131c ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5464,Deployability,patch,patches,5464,"ine/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632; #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., ; scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784; #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, ; isGenreflex=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906; #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., ; selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., ; includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., ; rootmapFileName=..., rootmapLibName=..., interpreteronly=false, ; doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, ; selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, ; headersNames=..., failOnWarnings=false, ofilename=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371; #23 0x00007ffff307131c ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5677,Deployability,patch,patches,5677,"peline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632; #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., ; scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784; #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, ; isGenreflex=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906; #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., ; selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., ; includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., ; rootmapFileName=..., rootmapLibName=..., interpreteronly=false, ; doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, ; selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, ; headersNames=..., failOnWarnings=false, ofilename=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371; #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071; #24 0x00007ffff30717b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5703,Deployability,patch,patches,5703,"peline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632; #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., ; scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784; #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, ; isGenreflex=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906; #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., ; selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., ; includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., ; rootmapFileName=..., rootmapLibName=..., interpreteronly=false, ; doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, ; selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, ; headersNames=..., failOnWarnings=false, ofilename=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371; #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071; #24 0x00007ffff30717b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6302,Deployability,patch,patches,6302,"..., isSplit=false, isGenreflex=true, ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784; #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, ; isGenreflex=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906; #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., ; selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., ; includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., ; rootmapFileName=..., rootmapLibName=..., interpreteronly=false, ; doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, ; selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, ; headersNames=..., failOnWarnings=false, ofilename=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371; #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071; #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, ; config=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148; #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43; ```. The crash occurs here in TClingUtils.cxx:. ```; } else {; return TST->getArg(index).getAsType();; }; ```. because the Kind of this argument is clang::TemplateArgument::Expression,; not Type. This change fixes the crash for me:. ```; diff -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6328,Deployability,patch,patches,6328,"..., isSplit=false, isGenreflex=true, ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784; #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, ; isGenreflex=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906; #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., ; selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., ; includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., ; rootmapFileName=..., rootmapLibName=..., interpreteronly=false, ; doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, ; selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, ; headersNames=..., failOnWarnings=false, ofilename=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371; #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071; #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, ; config=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148; #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43; ```. The crash occurs here in TClingUtils.cxx:. ```; } else {; return TST->getArg(index).getAsType();; }; ```. because the Kind of this argument is clang::TemplateArgument::Expression,; not Type. This change fixes the crash for me:. ```; diff -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6527,Deployability,patch,patches,6527,"tgen/src/rootcling_impl.cxx:2784; #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, ; isGenreflex=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906; #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., ; selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., ; includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., ; rootmapFileName=..., rootmapLibName=..., interpreteronly=false, ; doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, ; selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, ; headersNames=..., failOnWarnings=false, ofilename=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371; #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071; #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, ; config=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148; #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43; ```. The crash occurs here in TClingUtils.cxx:. ```; } else {; return TST->getArg(index).getAsType();; }; ```. because the Kind of this argument is clang::TemplateArgument::Expression,; not Type. This change fixes the crash for me:. ```; diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx; index 2373f0c..ee0cf7c 100644; --- a/core/clingutils/src/TClingUtils.cxx; +++ b/core/clingutils/src/TCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6553,Deployability,patch,patches,6553,"tgen/src/rootcling_impl.cxx:2784; #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, ; isGenreflex=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906; #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., ; selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., ; includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., ; rootmapFileName=..., rootmapLibName=..., interpreteronly=false, ; doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, ; selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, ; headersNames=..., failOnWarnings=false, ofilename=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371; #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071; #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, ; config=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148; #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43; ```. The crash occurs here in TClingUtils.cxx:. ```; } else {; return TST->getArg(index).getAsType();; }; ```. because the Kind of this argument is clang::TemplateArgument::Expression,; not Type. This change fixes the crash for me:. ```; diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx; index 2373f0c..ee0cf7c 100644; --- a/core/clingutils/src/TClingUtils.cxx; +++ b/core/clingutils/src/TCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6774,Deployability,patch,patches,6774,"ff306f44b in genreflex::invokeRootCling (verbosity=..., ; selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., ; includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., ; rootmapFileName=..., rootmapLibName=..., interpreteronly=false, ; doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, ; selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, ; headersNames=..., failOnWarnings=false, ofilename=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371; #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071; #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, ; config=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148; #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43; ```. The crash occurs here in TClingUtils.cxx:. ```; } else {; return TST->getArg(index).getAsType();; }; ```. because the Kind of this argument is clang::TemplateArgument::Expression,; not Type. This change fixes the crash for me:. ```; diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx; index 2373f0c..ee0cf7c 100644; --- a/core/clingutils/src/TClingUtils.cxx; +++ b/core/clingutils/src/TClingUtils.cxx; @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons; // (See AddDefaultParameters).; return input;; } else {; - return TST->getArg(index).getAsType();; + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type); ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6800,Deployability,patch,patches,6800,"ff306f44b in genreflex::invokeRootCling (verbosity=..., ; selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., ; includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., ; rootmapFileName=..., rootmapLibName=..., interpreteronly=false, ; doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, ; selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, ; headersNames=..., failOnWarnings=false, ofilename=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371; #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071; #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, ; config=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148; #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43; ```. The crash occurs here in TClingUtils.cxx:. ```; } else {; return TST->getArg(index).getAsType();; }; ```. because the Kind of this argument is clang::TemplateArgument::Expression,; not Type. This change fixes the crash for me:. ```; diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx; index 2373f0c..ee0cf7c 100644; --- a/core/clingutils/src/TClingUtils.cxx; +++ b/core/clingutils/src/TClingUtils.cxx; @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons; // (See AddDefaultParameters).; return input;; } else {; - return TST->getArg(index).getAsType();; + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type); ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6990,Deployability,patch,patches,6990,"iDict=false, pcmsNames=..., ; includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., ; rootmapFileName=..., rootmapLibName=..., interpreteronly=false, ; doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, ; selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, ; headersNames=..., failOnWarnings=false, ofilename=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371; #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071; #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, ; config=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148; #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43; ```. The crash occurs here in TClingUtils.cxx:. ```; } else {; return TST->getArg(index).getAsType();; }; ```. because the Kind of this argument is clang::TemplateArgument::Expression,; not Type. This change fixes the crash for me:. ```; diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx; index 2373f0c..ee0cf7c 100644; --- a/core/clingutils/src/TClingUtils.cxx; +++ b/core/clingutils/src/TClingUtils.cxx; @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons; // (See AddDefaultParameters).; return input;; } else {; - return TST->getArg(index).getAsType();; + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type); + return TST->getArg(index).getAsType();; }; }; }; ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7016,Deployability,patch,patches,7016,"iDict=false, pcmsNames=..., ; includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., ; rootmapFileName=..., rootmapLibName=..., interpreteronly=false, ; doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, ; selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, ; headersNames=..., failOnWarnings=false, ofilename=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371; #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071; #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, ; config=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148; #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43; ```. The crash occurs here in TClingUtils.cxx:. ```; } else {; return TST->getArg(index).getAsType();; }; ```. because the Kind of this argument is clang::TemplateArgument::Expression,; not Type. This change fixes the crash for me:. ```; diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx; index 2373f0c..ee0cf7c 100644; --- a/core/clingutils/src/TClingUtils.cxx; +++ b/core/clingutils/src/TClingUtils.cxx; @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons; // (See AddDefaultParameters).; return input;; } else {; - return TST->getArg(index).getAsType();; + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type); + return TST->getArg(index).getAsType();; }; }; }; ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3890,Modifiability,Inherit,InheritsFrom,3890,":355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6683,Modifiability,config,config,6683,"eline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906; #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., ; selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., ; includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., ; rootmapFileName=..., rootmapLibName=..., interpreteronly=false, ; doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, ; selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, ; headersNames=..., failOnWarnings=false, ofilename=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371; #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071; #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, ; config=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148; #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43; ```. The crash occurs here in TClingUtils.cxx:. ```; } else {; return TST->getArg(index).getAsType();; }; ```. because the Kind of this argument is clang::TemplateArgument::Expression,; not Type. This change fixes the crash for me:. ```; diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx; index 2373f0c..ee0cf7c 100644; --- a/core/clingutils/src/TClingUtils.cxx; +++ b/core/clingutils/src/TClingUtils.cxx; @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons; // (See AddDefaultParameters).; return input",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4569,Performance,load,load,4569,"s/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632; #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., ; scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784; #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, ; isGenreflex=true); at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1300,Testability,Assert,Assertion,1300,"eport, for instance ""issue still exists in today's master"".; -->; hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches; when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:; ```; <lcgdict>; <class pattern=""*iterator<*pair<const*,const*""/>; </lcgdict>; ```. x.h:; ```; #include <string>; #include <map>; void foo (std::map<unsigned, std::string>& m, const std::string& s); {; m.emplace (0, s);; }; ```. On lxplus7:; ```; $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed.; $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh; $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh ; $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx; genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed.; ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```; #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (; this=0x7fffef6df2e8); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7851,Testability,test,testing,7851,"iDict=false, pcmsNames=..., ; includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., ; rootmapFileName=..., rootmapLibName=..., interpreteronly=false, ; doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, ; selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, ; headersNames=..., failOnWarnings=false, ofilename=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371; #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071; #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, ; config=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148; #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43; ```. The crash occurs here in TClingUtils.cxx:. ```; } else {; return TST->getArg(index).getAsType();; }; ```. because the Kind of this argument is clang::TemplateArgument::Expression,; not Type. This change fixes the crash for me:. ```; diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx; index 2373f0c..ee0cf7c 100644; --- a/core/clingutils/src/TClingUtils.cxx; +++ b/core/clingutils/src/TClingUtils.cxx; @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons; // (See AddDefaultParameters).; return input;; } else {; - return TST->getArg(index).getAsType();; + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type); + return TST->getArg(index).getAsType();; }; }; }; ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11260:38,Availability,Error,Error,38,"With the example below, we get:. ```; Error in <TTreeReaderArrayBase::GetBranchContentDataType()>: The branch h.fData.fPx contains a data type 9 for which the dictionary cannot be retrieved.; ```. This was seen during investigations by CMSSW team of leveraging `Double32_t` and `Float16_t` to reduce data size. Cheers,; Philippe. ```; #include ""TTree.h""; #include ""TTreeReader.h""; #include ""TTreeReaderArray.h"". struct Inside {; Double32_t fPx;; double fPy;; };. struct Holder {; std::vector<Double32_t> fValues;; std::vector<Inside> fData;; };. #ifdef __ROOTCLING__; #pragma link C++ class Inside+;; #pragma link C++ class Holder+;; #pragma link C++ class std::vector<Inside>+;; #pragma link C++ class std::vector<Double32_t>+;; #endif. void exec(); {; auto t = new TTree(""t"",""t"");; Holder h;; t->Branch(""h."", &h);; t->Fill();; t->Print();; TTreeReader r(t);; //TTreeReaderArray<Double32_t> arr1(r, ""h.fValues"");; TTreeReaderArray<Double32_t> arr2(r, ""h.fData.fPx"");; TTreeReaderArray<Double32_t> arr3(r, ""h.fData.fPy"");; r.Next();; // arr1.GetSize();; arr2.GetSize();; arr3.GetSize();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11260
https://github.com/root-project/root/issues/11260:293,Energy Efficiency,reduce,reduce,293,"With the example below, we get:. ```; Error in <TTreeReaderArrayBase::GetBranchContentDataType()>: The branch h.fData.fPx contains a data type 9 for which the dictionary cannot be retrieved.; ```. This was seen during investigations by CMSSW team of leveraging `Double32_t` and `Float16_t` to reduce data size. Cheers,; Philippe. ```; #include ""TTree.h""; #include ""TTreeReader.h""; #include ""TTreeReaderArray.h"". struct Inside {; Double32_t fPx;; double fPy;; };. struct Holder {; std::vector<Double32_t> fValues;; std::vector<Inside> fData;; };. #ifdef __ROOTCLING__; #pragma link C++ class Inside+;; #pragma link C++ class Holder+;; #pragma link C++ class std::vector<Inside>+;; #pragma link C++ class std::vector<Double32_t>+;; #endif. void exec(); {; auto t = new TTree(""t"",""t"");; Holder h;; t->Branch(""h."", &h);; t->Fill();; t->Print();; TTreeReader r(t);; //TTreeReaderArray<Double32_t> arr1(r, ""h.fValues"");; TTreeReaderArray<Double32_t> arr2(r, ""h.fData.fPx"");; TTreeReaderArray<Double32_t> arr3(r, ""h.fData.fPy"");; r.Next();; // arr1.GetSize();; arr2.GetSize();; arr3.GetSize();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11260
https://github.com/root-project/root/pull/11262:197,Deployability,update,updated,197,## Changes or fixes:. Implement startup script support according to this post:; https://root-forum.cern.ch/t/cling-startup-scripts-support/51358. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262
https://github.com/root-project/root/pull/11262:167,Testability,test,tested,167,## Changes or fixes:. Implement startup script support according to this post:; https://root-forum.cern.ch/t/cling-startup-scripts-support/51358. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262
https://github.com/root-project/root/pull/11263:345,Integrability,depend,depends,345,"Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary; information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes; that could potentially be created. This is effectively a singleton,; but TClassTable itself does no locking. Rather, it depends on callers; already having acquired the root internal mutex. When a shared library; is loaded that contains dictionary information, TClassTable gets calls; to register information for classes defined in that file. However,; the ROOT lock is not acquired in that case. So a shared library load; could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock; when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading; in order to acquire the lock, but this hack is not possible with newer; versions of glibc, so this will eventually become a blocker for; moving to centos9.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:34,Performance,race condition,race condition,34,"Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary; information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes; that could potentially be created. This is effectively a singleton,; but TClassTable itself does no locking. Rather, it depends on callers; already having acquired the root internal mutex. When a shared library; is loaded that contains dictionary information, TClassTable gets calls; to register information for classes defined in that file. However,; the ROOT lock is not acquired in that case. So a shared library load; could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock; when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading; in order to acquire the lock, but this hack is not possible with newer; versions of glibc, so this will eventually become a blocker for; moving to centos9.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:440,Performance,load,loaded,440,"Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary; information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes; that could potentially be created. This is effectively a singleton,; but TClassTable itself does no locking. Rather, it depends on callers; already having acquired the root internal mutex. When a shared library; is loaded that contains dictionary information, TClassTable gets calls; to register information for classes defined in that file. However,; the ROOT lock is not acquired in that case. So a shared library load; could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock; when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading; in order to acquire the lock, but this hack is not possible with newer; versions of glibc, so this will eventually become a blocker for; moving to centos9.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:641,Performance,load,load,641,"Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary; information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes; that could potentially be created. This is effectively a singleton,; but TClassTable itself does no locking. Rather, it depends on callers; already having acquired the root internal mutex. When a shared library; is loaded that contains dictionary information, TClassTable gets calls; to register information for classes defined in that file. However,; the ROOT lock is not acquired in that case. So a shared library load; could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock; when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading; in order to acquire the lock, but this hack is not possible with newer; versions of glibc, so this will eventually become a blocker for; moving to centos9.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:822,Performance,load,loaded,822,"Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary; information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes; that could potentially be created. This is effectively a singleton,; but TClassTable itself does no locking. Rather, it depends on callers; already having acquired the root internal mutex. When a shared library; is loaded that contains dictionary information, TClassTable gets calls; to register information for classes defined in that file. However,; the ROOT lock is not acquired in that case. So a shared library load; could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock; when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading; in order to acquire the lock, but this hack is not possible with newer; versions of glibc, so this will eventually become a blocker for; moving to centos9.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:896,Performance,load,loading,896,"Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary; information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes; that could potentially be created. This is effectively a singleton,; but TClassTable itself does no locking. Rather, it depends on callers; already having acquired the root internal mutex. When a shared library; is loaded that contains dictionary information, TClassTable gets calls; to register information for classes defined in that file. However,; the ROOT lock is not acquired in that case. So a shared library load; could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock; when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading; in order to acquire the lock, but this hack is not possible with newer; versions of glibc, so this will eventually become a blocker for; moving to centos9.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11264:341,Availability,error,error,341,"## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:430,Deployability,update,updated,430,"## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:400,Testability,test,tested,400,"## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:227,Usability,clear,clear,227,"## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11265:923,Availability,error,error,923,"## Changes or fixes:; Let `a_t` be a c++ class, and we have done `using std::ostream;`.; In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally).; ```; ::a_t& ::a_t::operator()(int k) {return *this; }; const a_t& a_t::operator[](int k) const {return *this; }; a_t::a_t() = default;; a_t::~a_t() = delete;; ::a_t& ::a_t::operator()(int k) {return *this; }; std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}; ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}; const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }; ::a_t& operator>=(a_t &lhs, int t) {return lhs; }; a_t& operator<=(::a_t &lhs, int t) {return lhs; }; const a_t& operator<(a_t &lhs, int t) {return lhs; }; const ::a_t& operator>(a_t &lhs, int t) {return lhs; }; ```; They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1530,Availability,error,error,1530,"## Changes or fixes:; Let `a_t` be a c++ class, and we have done `using std::ostream;`.; In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally).; ```; ::a_t& ::a_t::operator()(int k) {return *this; }; const a_t& a_t::operator[](int k) const {return *this; }; a_t::a_t() = default;; a_t::~a_t() = delete;; ::a_t& ::a_t::operator()(int k) {return *this; }; std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}; ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}; const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }; ::a_t& operator>=(a_t &lhs, int t) {return lhs; }; a_t& operator<=(::a_t &lhs, int t) {return lhs; }; const a_t& operator<(a_t &lhs, int t) {return lhs; }; const ::a_t& operator>(a_t &lhs, int t) {return lhs; }; ```; They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1482,Deployability,update,updated,1482,"## Changes or fixes:; Let `a_t` be a c++ class, and we have done `using std::ostream;`.; In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally).; ```; ::a_t& ::a_t::operator()(int k) {return *this; }; const a_t& a_t::operator[](int k) const {return *this; }; a_t::a_t() = default;; a_t::~a_t() = delete;; ::a_t& ::a_t::operator()(int k) {return *this; }; std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}; ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}; const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }; ::a_t& operator>=(a_t &lhs, int t) {return lhs; }; a_t& operator<=(::a_t &lhs, int t) {return lhs; }; const a_t& operator<(a_t &lhs, int t) {return lhs; }; const ::a_t& operator>(a_t &lhs, int t) {return lhs; }; ```; They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1031,Integrability,wrap,wrap,1031,"## Changes or fixes:; Let `a_t` be a c++ class, and we have done `using std::ostream;`.; In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally).; ```; ::a_t& ::a_t::operator()(int k) {return *this; }; const a_t& a_t::operator[](int k) const {return *this; }; a_t::a_t() = default;; a_t::~a_t() = delete;; ::a_t& ::a_t::operator()(int k) {return *this; }; std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}; ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}; const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }; ::a_t& operator>=(a_t &lhs, int t) {return lhs; }; a_t& operator<=(::a_t &lhs, int t) {return lhs; }; const a_t& operator<(a_t &lhs, int t) {return lhs; }; const ::a_t& operator>(a_t &lhs, int t) {return lhs; }; ```; They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1063,Integrability,wrap,wrapper,1063,"## Changes or fixes:; Let `a_t` be a c++ class, and we have done `using std::ostream;`.; In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally).; ```; ::a_t& ::a_t::operator()(int k) {return *this; }; const a_t& a_t::operator[](int k) const {return *this; }; a_t::a_t() = default;; a_t::~a_t() = delete;; ::a_t& ::a_t::operator()(int k) {return *this; }; std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}; ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}; const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }; ::a_t& operator>=(a_t &lhs, int t) {return lhs; }; a_t& operator<=(::a_t &lhs, int t) {return lhs; }; const a_t& operator<(a_t &lhs, int t) {return lhs; }; const ::a_t& operator>(a_t &lhs, int t) {return lhs; }; ```; They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1452,Testability,test,tested,1452,"## Changes or fixes:; Let `a_t` be a c++ class, and we have done `using std::ostream;`.; In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally).; ```; ::a_t& ::a_t::operator()(int k) {return *this; }; const a_t& a_t::operator[](int k) const {return *this; }; a_t::a_t() = default;; a_t::~a_t() = delete;; ::a_t& ::a_t::operator()(int k) {return *this; }; std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}; ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}; const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }; ::a_t& operator>=(a_t &lhs, int t) {return lhs; }; a_t& operator<=(::a_t &lhs, int t) {return lhs; }; const a_t& operator<(a_t &lhs, int t) {return lhs; }; const ::a_t& operator>(a_t &lhs, int t) {return lhs; }; ```; They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11267:125,Security,access,accessing,125,"The maximum unsigned int value was used for an integer resulting in a negative integer value and this was causing a bug when accessing the numfold parameter in the CvSplit expression formula.; The bug is present when the parameter ""NumFold"" is not used in the SPlit expression.; See https://root-forum.cern.ch/t/tmva-crossvalidation-crashes-on-destructor-pyroot/51195",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11267
https://github.com/root-project/root/pull/11268:227,Deployability,upgrade,upgrade,227,"If external version of `nlohmann/json.hpp` is provided,; always test if json_fwd.hpp is there. If not, one only; can use versions 3.9 .. 3.10, for which forward declaration; match to included into `REveElement.hxx`. After LLVM upgrade one can fully skip usage of `json_fwd.hpp` header",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268
https://github.com/root-project/root/pull/11268:64,Testability,test,test,64,"If external version of `nlohmann/json.hpp` is provided,; always test if json_fwd.hpp is there. If not, one only; can use versions 3.9 .. 3.10, for which forward declaration; match to included into `REveElement.hxx`. After LLVM upgrade one can fully skip usage of `json_fwd.hpp` header",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268
https://github.com/root-project/root/issues/11272:324,Deployability,patch,patches,324,"- [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector.; ```; #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76; #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262; #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489; #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...); ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```; <!-- ### Pipe Supports Sintimid ### -->; <material name =""Pipe:Sintimid"">; <D type=""density"" value=""1.43"" unit=""g/cm3""/>; <composite ref=""C"" n=""18""/>; <composite ref=""O"" n=""5""/>; <composite ref=""N"" n=""2""/>; </material>. <!--### Pipe Supports Sintimid15G ###-->; <material name =""Pipe:Sintimid15G"">; <D type=""density"" value=""1.42"" unit=""g/cm3""/>; <fraction ref=""Pipe:Sintimid"" n=""0.85""/>; <fraction ref=""C"" n=""0.15""/>; </material>; ```; where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior; No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:; ```; void test_mixture(); {; TGeoManager *geom = new TGeoManager(""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:350,Deployability,patch,patches,350,"- [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector.; ```; #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76; #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262; #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489; #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...); ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```; <!-- ### Pipe Supports Sintimid ### -->; <material name =""Pipe:Sintimid"">; <D type=""density"" value=""1.43"" unit=""g/cm3""/>; <composite ref=""C"" n=""18""/>; <composite ref=""O"" n=""5""/>; <composite ref=""N"" n=""2""/>; </material>. <!--### Pipe Supports Sintimid15G ###-->; <material name =""Pipe:Sintimid15G"">; <D type=""density"" value=""1.42"" unit=""g/cm3""/>; <fraction ref=""Pipe:Sintimid"" n=""0.85""/>; <fraction ref=""C"" n=""0.15""/>; </material>; ```; where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior; No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:; ```; void test_mixture(); {; TGeoManager *geom = new TGeoManager(""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:549,Deployability,patch,patches,549,"- [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector.; ```; #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76; #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262; #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489; #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...); ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```; <!-- ### Pipe Supports Sintimid ### -->; <material name =""Pipe:Sintimid"">; <D type=""density"" value=""1.43"" unit=""g/cm3""/>; <composite ref=""C"" n=""18""/>; <composite ref=""O"" n=""5""/>; <composite ref=""N"" n=""2""/>; </material>. <!--### Pipe Supports Sintimid15G ###-->; <material name =""Pipe:Sintimid15G"">; <D type=""density"" value=""1.42"" unit=""g/cm3""/>; <fraction ref=""Pipe:Sintimid"" n=""0.85""/>; <fraction ref=""C"" n=""0.15""/>; </material>; ```; where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior; No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:; ```; void test_mixture(); {; TGeoManager *geom = new TGeoManager(""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:575,Deployability,patch,patches,575,"- [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector.; ```; #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76; #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262; #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489; #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...); ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```; <!-- ### Pipe Supports Sintimid ### -->; <material name =""Pipe:Sintimid"">; <D type=""density"" value=""1.43"" unit=""g/cm3""/>; <composite ref=""C"" n=""18""/>; <composite ref=""O"" n=""5""/>; <composite ref=""N"" n=""2""/>; </material>. <!--### Pipe Supports Sintimid15G ###-->; <material name =""Pipe:Sintimid15G"">; <D type=""density"" value=""1.42"" unit=""g/cm3""/>; <fraction ref=""Pipe:Sintimid"" n=""0.85""/>; <fraction ref=""C"" n=""0.15""/>; </material>; ```; where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior; No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:; ```; void test_mixture(); {; TGeoManager *geom = new TGeoManager(""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:2890,Deployability,patch,patches,2890,"n see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```; <!-- ### Pipe Supports Sintimid ### -->; <material name =""Pipe:Sintimid"">; <D type=""density"" value=""1.43"" unit=""g/cm3""/>; <composite ref=""C"" n=""18""/>; <composite ref=""O"" n=""5""/>; <composite ref=""N"" n=""2""/>; </material>. <!--### Pipe Supports Sintimid15G ###-->; <material name =""Pipe:Sintimid15G"">; <D type=""density"" value=""1.42"" unit=""g/cm3""/>; <fraction ref=""Pipe:Sintimid"" n=""0.85""/>; <fraction ref=""C"" n=""0.15""/>; </material>; ```; where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior; No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:; ```; void test_mixture(); {; TGeoManager *geom = new TGeoManager("""","""");; TGeoElementTable *table = gGeoManager->GetElementTable();; TGeoElement *c = table->GetElement(6);; TGeoElement *n = table->GetElement(7);; TGeoElement *o = table->GetElement(8);; . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);; double cc = 18 * c->A();; double cn = 2 * n->A();; double co = 5 * o->A();; double total = cc + cn + co;; mix->AddElement(c, cc/total);; mix->AddElement(n, cn/total);; mix->AddElement(o, co/total);; mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);; mix2->AddElement(mix, 0.85);; mix2->AddElement(c, 0.15);; mix2->Print();; std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';; for(int i=0; i< mix2->GetNelements(); i++) {; std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; ; }; mix2->ComputeDerivedQuantities();; }; ``` ; reproduces the segfault with v6-26-00-patches, whereas 6.24.06 runs fine. ### Setup; 1. ROOT v6-26-00-patches from SFT nightlies: (/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Mon/ROOT/v6-26-00-patches/); 2. centos7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:2954,Deployability,patch,patches,2954,"n see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```; <!-- ### Pipe Supports Sintimid ### -->; <material name =""Pipe:Sintimid"">; <D type=""density"" value=""1.43"" unit=""g/cm3""/>; <composite ref=""C"" n=""18""/>; <composite ref=""O"" n=""5""/>; <composite ref=""N"" n=""2""/>; </material>. <!--### Pipe Supports Sintimid15G ###-->; <material name =""Pipe:Sintimid15G"">; <D type=""density"" value=""1.42"" unit=""g/cm3""/>; <fraction ref=""Pipe:Sintimid"" n=""0.85""/>; <fraction ref=""C"" n=""0.15""/>; </material>; ```; where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior; No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:; ```; void test_mixture(); {; TGeoManager *geom = new TGeoManager("""","""");; TGeoElementTable *table = gGeoManager->GetElementTable();; TGeoElement *c = table->GetElement(6);; TGeoElement *n = table->GetElement(7);; TGeoElement *o = table->GetElement(8);; . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);; double cc = 18 * c->A();; double cn = 2 * n->A();; double co = 5 * o->A();; double total = cc + cn + co;; mix->AddElement(c, cc/total);; mix->AddElement(n, cn/total);; mix->AddElement(o, co/total);; mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);; mix2->AddElement(mix, 0.85);; mix2->AddElement(c, 0.15);; mix2->Print();; std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';; for(int i=0; i< mix2->GetNelements(); i++) {; std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; ; }; mix2->ComputeDerivedQuantities();; }; ``` ; reproduces the segfault with v6-26-00-patches, whereas 6.24.06 runs fine. ### Setup; 1. ROOT v6-26-00-patches from SFT nightlies: (/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Mon/ROOT/v6-26-00-patches/); 2. centos7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:3049,Deployability,patch,patches,3049,"n see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```; <!-- ### Pipe Supports Sintimid ### -->; <material name =""Pipe:Sintimid"">; <D type=""density"" value=""1.43"" unit=""g/cm3""/>; <composite ref=""C"" n=""18""/>; <composite ref=""O"" n=""5""/>; <composite ref=""N"" n=""2""/>; </material>. <!--### Pipe Supports Sintimid15G ###-->; <material name =""Pipe:Sintimid15G"">; <D type=""density"" value=""1.42"" unit=""g/cm3""/>; <fraction ref=""Pipe:Sintimid"" n=""0.85""/>; <fraction ref=""C"" n=""0.15""/>; </material>; ```; where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior; No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:; ```; void test_mixture(); {; TGeoManager *geom = new TGeoManager("""","""");; TGeoElementTable *table = gGeoManager->GetElementTable();; TGeoElement *c = table->GetElement(6);; TGeoElement *n = table->GetElement(7);; TGeoElement *o = table->GetElement(8);; . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);; double cc = 18 * c->A();; double cn = 2 * n->A();; double co = 5 * o->A();; double total = cc + cn + co;; mix->AddElement(c, cc/total);; mix->AddElement(n, cn/total);; mix->AddElement(o, co/total);; mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);; mix2->AddElement(mix, 0.85);; mix2->AddElement(c, 0.15);; mix2->Print();; std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';; for(int i=0; i< mix2->GetNelements(); i++) {; std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; ; }; mix2->ComputeDerivedQuantities();; }; ``` ; reproduces the segfault with v6-26-00-patches, whereas 6.24.06 runs fine. ### Setup; 1. ROOT v6-26-00-patches from SFT nightlies: (/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Mon/ROOT/v6-26-00-patches/); 2. centos7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:853,Modifiability,plugin,plugins,853,"- [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector.; ```; #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76; #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262; #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489; #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...); ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```; <!-- ### Pipe Supports Sintimid ### -->; <material name =""Pipe:Sintimid"">; <D type=""density"" value=""1.43"" unit=""g/cm3""/>; <composite ref=""C"" n=""18""/>; <composite ref=""O"" n=""5""/>; <composite ref=""N"" n=""2""/>; </material>. <!--### Pipe Supports Sintimid15G ###-->; <material name =""Pipe:Sintimid15G"">; <D type=""density"" value=""1.42"" unit=""g/cm3""/>; <fraction ref=""Pipe:Sintimid"" n=""0.85""/>; <fraction ref=""C"" n=""0.15""/>; </material>; ```; where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior; No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:; ```; void test_mixture(); {; TGeoManager *geom = new TGeoManager(""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:179,Safety,Detect,Detector,179,"- [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector.; ```; #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76; #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262; #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489; #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...); ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```; <!-- ### Pipe Supports Sintimid ### -->; <material name =""Pipe:Sintimid"">; <D type=""density"" value=""1.43"" unit=""g/cm3""/>; <composite ref=""C"" n=""18""/>; <composite ref=""O"" n=""5""/>; <composite ref=""N"" n=""2""/>; </material>. <!--### Pipe Supports Sintimid15G ###-->; <material name =""Pipe:Sintimid15G"">; <D type=""density"" value=""1.42"" unit=""g/cm3""/>; <fraction ref=""Pipe:Sintimid"" n=""0.85""/>; <fraction ref=""C"" n=""0.15""/>; </material>; ```; where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior; No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:; ```; void test_mixture(); {; TGeoManager *geom = new TGeoManager(""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:106,Testability,test,testing,106,"- [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector.; ```; #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76; #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262; #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489; #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...); ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```; <!-- ### Pipe Supports Sintimid ### -->; <material name =""Pipe:Sintimid"">; <D type=""density"" value=""1.43"" unit=""g/cm3""/>; <composite ref=""C"" n=""18""/>; <composite ref=""O"" n=""5""/>; <composite ref=""N"" n=""2""/>; </material>. <!--### Pipe Supports Sintimid15G ###-->; <material name =""Pipe:Sintimid15G"">; <D type=""density"" value=""1.42"" unit=""g/cm3""/>; <fraction ref=""Pipe:Sintimid"" n=""0.85""/>; <fraction ref=""C"" n=""0.15""/>; </material>; ```; where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior; No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:; ```; void test_mixture(); {; TGeoManager *geom = new TGeoManager(""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:1915,Usability,simpl,simple,1915," oper=...); ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```; <!-- ### Pipe Supports Sintimid ### -->; <material name =""Pipe:Sintimid"">; <D type=""density"" value=""1.43"" unit=""g/cm3""/>; <composite ref=""C"" n=""18""/>; <composite ref=""O"" n=""5""/>; <composite ref=""N"" n=""2""/>; </material>. <!--### Pipe Supports Sintimid15G ###-->; <material name =""Pipe:Sintimid15G"">; <D type=""density"" value=""1.42"" unit=""g/cm3""/>; <fraction ref=""Pipe:Sintimid"" n=""0.85""/>; <fraction ref=""C"" n=""0.15""/>; </material>; ```; where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior; No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:; ```; void test_mixture(); {; TGeoManager *geom = new TGeoManager("""","""");; TGeoElementTable *table = gGeoManager->GetElementTable();; TGeoElement *c = table->GetElement(6);; TGeoElement *n = table->GetElement(7);; TGeoElement *o = table->GetElement(8);; . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);; double cc = 18 * c->A();; double cn = 2 * n->A();; double co = 5 * o->A();; double total = cc + cn + co;; mix->AddElement(c, cc/total);; mix->AddElement(n, cn/total);; mix->AddElement(o, co/total);; mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);; mix2->AddElement(mix, 0.85);; mix2->AddElement(c, 0.15);; mix2->Print();; std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';; for(int i=0; i< mix2->GetNelements(); i++) {; std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; ; }; mix2->ComputeDerivedQuantities();; }; ``` ; reproduces the segfault with v6-26-00-patches, whereas 6.24.06 runs fine. ### Setup; 1. ROOT v6-26-00-patches from SFT nightlies: (/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/pull/11274:155,Deployability,update,updated,155,## Changes or fixes:. A minor memleak in cling::UserInterface::runInteractively() reported by valgrind. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11274
https://github.com/root-project/root/pull/11274:125,Testability,test,tested,125,## Changes or fixes:. A minor memleak in cling::UserInterface::runInteractively() reported by valgrind. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11274
https://github.com/root-project/root/issues/11279:336,Testability,test,test,336,"As discussed at https://github.com/root-project/root/pull/10753#issuecomment-1155514143 , the current way we run `TROOT::EndOfProcessCleanups` twice when using PyROOT is necessary, but we don't understand why. The change in the PR removed the double use of the function and the original reproducer still works. It would be nice to have test coverage for this particular pattern used in PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11279
https://github.com/root-project/root/issues/11280:1529,Deployability,Update,Update,1529,",2,3,4, how the TGaxis completely changes:. ![image](https://user-images.githubusercontent.com/10653970/187413185-1a8923ff-aded-4317-a110-ff10e5ad404e.png). Weird things also happen with `SetStripDecimals(kFALSE)`:. ![image](https://user-images.githubusercontent.com/10653970/187413563-86b4c3c8-7d91-48e9-a70f-3e9826dca1b8.png). ### Expected behavior; Calling SetNdivisions or SetMaxDigits should not change the TGaxis being painted, otherwise it leads to wrong data being shown. ### To Reproduce; ```cpp; #include ""TGraph.h""; #include ""TF1.h""; #include ""TCanvas.h""; #include ""TStyle.h""; #include ""TGaxis.h"". void testgraphaxis(bool strip = kTRUE); {; new TCanvas();. TF1 *f2=new TF1(""fcal"",""pol2"",0,45);; f2->SetParameters(6.975e3,-6.339e1,3.10185e-1);; f2->Draw();. TF1 *f1=new TF1(""fcalinv"",""pol2"",f2->Eval(45),f2->Eval(0));; f1->SetParameters(2.239e2,-4.985e-2,2.55121e-6);//I had to invert my original graph and fit again to get the new parameters. TGraph* gr = new TGraph();; gr->SetPoint(0,5,0.2);; gr->SetPoint(1,7,0.5);; gr->GetXaxis()->SetLimits(0,45);; gr->GetYaxis()->SetRangeUser(0,1);. gStyle->SetStripDecimals(strip);. for (int N = 0; N < 12; ++N) {; new TCanvas();; gr->Draw(""APL"");. gPad->Modified();; gPad->Update();. TGaxis *A1 = new TGaxis(gPad->GetUxmin(),gPad->GetUymax(),gPad->GetUxmax(),gPad->GetUymax(),""fcalinv"",510,""-"");; if (N!=0) A1->SetNdivisions(N*1000000 + (A1->GetNdiv()%1000000));; A1->Draw();; }; }; ```. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://sft.its.cern.ch/jira/browse/ROOT-8498",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11280
https://github.com/root-project/root/issues/11280:176,Integrability,depend,depending,176,"### Describe the bug; TGaxis::SetNdivisions is recommended to set the maximum number of digits of a TGaxis is instance, however its behavior leads to wrong data being printed, depending on the argument. https://root.cern.ch/doc/master/classTGaxis.html#a6b93d66237560f7b11701402a1a446ce. See here, for N=1,2,3,4, how the TGaxis completely changes:. ![image](https://user-images.githubusercontent.com/10653970/187413185-1a8923ff-aded-4317-a110-ff10e5ad404e.png). Weird things also happen with `SetStripDecimals(kFALSE)`:. ![image](https://user-images.githubusercontent.com/10653970/187413563-86b4c3c8-7d91-48e9-a70f-3e9826dca1b8.png). ### Expected behavior; Calling SetNdivisions or SetMaxDigits should not change the TGaxis being painted, otherwise it leads to wrong data being shown. ### To Reproduce; ```cpp; #include ""TGraph.h""; #include ""TF1.h""; #include ""TCanvas.h""; #include ""TStyle.h""; #include ""TGaxis.h"". void testgraphaxis(bool strip = kTRUE); {; new TCanvas();. TF1 *f2=new TF1(""fcal"",""pol2"",0,45);; f2->SetParameters(6.975e3,-6.339e1,3.10185e-1);; f2->Draw();. TF1 *f1=new TF1(""fcalinv"",""pol2"",f2->Eval(45),f2->Eval(0));; f1->SetParameters(2.239e2,-4.985e-2,2.55121e-6);//I had to invert my original graph and fit again to get the new parameters. TGraph* gr = new TGraph();; gr->SetPoint(0,5,0.2);; gr->SetPoint(1,7,0.5);; gr->GetXaxis()->SetLimits(0,45);; gr->GetYaxis()->SetRangeUser(0,1);. gStyle->SetStripDecimals(strip);. for (int N = 0; N < 12; ++N) {; new TCanvas();; gr->Draw(""APL"");. gPad->Modified();; gPad->Update();. TGaxis *A1 = new TGaxis(gPad->GetUxmin(),gPad->GetUymax(),gPad->GetUxmax(),gPad->GetUymax(),""fcalinv"",510,""-"");; if (N!=0) A1->SetNdivisions(N*1000000 + (A1->GetNdiv()%1000000));; A1->Draw();; }; }; ```. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |; | ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11280
https://github.com/root-project/root/issues/11280:918,Testability,test,testgraphaxis,918,"### Describe the bug; TGaxis::SetNdivisions is recommended to set the maximum number of digits of a TGaxis is instance, however its behavior leads to wrong data being printed, depending on the argument. https://root.cern.ch/doc/master/classTGaxis.html#a6b93d66237560f7b11701402a1a446ce. See here, for N=1,2,3,4, how the TGaxis completely changes:. ![image](https://user-images.githubusercontent.com/10653970/187413185-1a8923ff-aded-4317-a110-ff10e5ad404e.png). Weird things also happen with `SetStripDecimals(kFALSE)`:. ![image](https://user-images.githubusercontent.com/10653970/187413563-86b4c3c8-7d91-48e9-a70f-3e9826dca1b8.png). ### Expected behavior; Calling SetNdivisions or SetMaxDigits should not change the TGaxis being painted, otherwise it leads to wrong data being shown. ### To Reproduce; ```cpp; #include ""TGraph.h""; #include ""TF1.h""; #include ""TCanvas.h""; #include ""TStyle.h""; #include ""TGaxis.h"". void testgraphaxis(bool strip = kTRUE); {; new TCanvas();. TF1 *f2=new TF1(""fcal"",""pol2"",0,45);; f2->SetParameters(6.975e3,-6.339e1,3.10185e-1);; f2->Draw();. TF1 *f1=new TF1(""fcalinv"",""pol2"",f2->Eval(45),f2->Eval(0));; f1->SetParameters(2.239e2,-4.985e-2,2.55121e-6);//I had to invert my original graph and fit again to get the new parameters. TGraph* gr = new TGraph();; gr->SetPoint(0,5,0.2);; gr->SetPoint(1,7,0.5);; gr->GetXaxis()->SetLimits(0,45);; gr->GetYaxis()->SetRangeUser(0,1);. gStyle->SetStripDecimals(strip);. for (int N = 0; N < 12; ++N) {; new TCanvas();; gr->Draw(""APL"");. gPad->Modified();; gPad->Update();. TGaxis *A1 = new TGaxis(gPad->GetUxmin(),gPad->GetUymax(),gPad->GetUxmax(),gPad->GetUymax(),""fcalinv"",510,""-"");; if (N!=0) A1->SetNdivisions(N*1000000 + (A1->GetNdiv()%1000000));; A1->Draw();; }; }; ```. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |; | ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11280
https://github.com/root-project/root/pull/11281:51,Deployability,update,updated,51,## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://sft.its.cern.ch/jira/browse/ROOT-8498,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11281
https://github.com/root-project/root/pull/11281:21,Testability,test,tested,21,## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://sft.its.cern.ch/jira/browse/ROOT-8498,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11281
https://github.com/root-project/root/pull/11282:146,Availability,error,error-for-unbinned-binned-weighted-fits,146,More detail can be found in the commit descriptions. This addresses the following forum issue:. Related forum post:; https://root-forum.cern.ch/t/error-for-unbinned-binned-weighted-fits/51336,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11282
https://github.com/root-project/root/pull/11285:1593,Modifiability,config,config,1593,"hanger for me because it; made reading und understanding the code easier!. See:; * https://github.com/root-project/root/pull/10083; * https://github.com/root-project/root/pull/9808; * https://github.com/root-project/root/pull/9883. This commit was generated more or less automatically with this Python; script that uses `clang-tidy`:. ```Python; import os; import glob; import subprocess; import tqdm. """"""; For clang-tidy to work, you have to copy the compile_commands.json from the; build directory back into the repo directory (just like in; .ci/copy_headers.sh).; """""". def get_sources(directory, extensions):. files = []. for ext in extensions:; files += glob.glob(; os.path.join(directory, ""**/*"" + ext), recursive=True; ). return files. """"""; Recursively find extensions in directory, to figure out whic hextensions; should be globbed for.; find . -type f -name '*.*' | sed 's|.*\.||' | sort -u; """"""; extensions = ["".h"", "".hpp"", "".hxx"", "".cpp"", "".cc"", "".cxx""]. """"""; Some extensions are recognized as C and not as C++ files by clang-tidy. We; need to rename them, and this dict specifies how file extensions should be; replaced.; """"""; rename_dict = {"".h"": "".hpp""}. files = get_sources(""tree"", extensions). cflags = (; subprocess.check_output([""root-config"", ""--cflags""]).strip().decode(""utf-8""); ). for file in tqdm.tqdm(files):. file_renamed = file; for ext, ext_renamed in rename_dict.items():; if file.endswith(ext):; file_renamed = file.replace(ext, ext_renamed). if file_renamed != file:; os.rename(file, file_renamed). cmd = [; ""clang-tidy"",; ""-checks=modernize-use-override"",; ""--fix"",; file_renamed,; ""--"",; ] + cflags.split("" ""); subprocess.call(cmd, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL). if file_renamed != file:; os.rename(file_renamed, file). """"""; Finally, replace the ClassDef with the ClassDefOverride macros.; find tree -type f -print | xargs sed -i 's/ClassDef(/ClassDefOverride(/'; ...and change back the ClassDefOverride of non-overriding base classes.; """"""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11285
https://github.com/root-project/root/pull/11286:621,Deployability,update,updated,621,"## Changes or fixes:. 1. Environment variable `CLING_HISTFILE` to specify history file path.; 2. Environment variable `CLING_HISTSIZE` to specify history size. The original behavior is to not set the history size explicitly.; That is equivalent to unlimited history size according to `textinput::History::AppendToFile()` (history file will never be pruned so it grows indefinitely). This is probably not most users expect. @Axel-Naumann, @vgvassilev do you think it makes sense to set default cling history size to something like 500 ? (That changes current behavior.). ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11286
https://github.com/root-project/root/pull/11286:37,Modifiability,variab,variable,37,"## Changes or fixes:. 1. Environment variable `CLING_HISTFILE` to specify history file path.; 2. Environment variable `CLING_HISTSIZE` to specify history size. The original behavior is to not set the history size explicitly.; That is equivalent to unlimited history size according to `textinput::History::AppendToFile()` (history file will never be pruned so it grows indefinitely). This is probably not most users expect. @Axel-Naumann, @vgvassilev do you think it makes sense to set default cling history size to something like 500 ? (That changes current behavior.). ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11286
https://github.com/root-project/root/pull/11286:109,Modifiability,variab,variable,109,"## Changes or fixes:. 1. Environment variable `CLING_HISTFILE` to specify history file path.; 2. Environment variable `CLING_HISTSIZE` to specify history size. The original behavior is to not set the history size explicitly.; That is equivalent to unlimited history size according to `textinput::History::AppendToFile()` (history file will never be pruned so it grows indefinitely). This is probably not most users expect. @Axel-Naumann, @vgvassilev do you think it makes sense to set default cling history size to something like 500 ? (That changes current behavior.). ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11286
https://github.com/root-project/root/pull/11286:591,Testability,test,tested,591,"## Changes or fixes:. 1. Environment variable `CLING_HISTFILE` to specify history file path.; 2. Environment variable `CLING_HISTSIZE` to specify history size. The original behavior is to not set the history size explicitly.; That is equivalent to unlimited history size according to `textinput::History::AppendToFile()` (history file will never be pruned so it grows indefinitely). This is probably not most users expect. @Axel-Naumann, @vgvassilev do you think it makes sense to set default cling history size to something like 500 ? (That changes current behavior.). ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11286
https://github.com/root-project/root/pull/11293:370,Deployability,update,updated,370,"# This Pull request:; Fixes a bug when creating mixtures from repeating elements.; ## Changes or fixes:; When adding an element that was already defined in the composition of a mixture, the element was not properly incorporated by modifying the weight fraction of the previous element, but rather added as new element. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11272",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11293
https://github.com/root-project/root/pull/11293:340,Testability,test,tested,340,"# This Pull request:; Fixes a bug when creating mixtures from repeating elements.; ## Changes or fixes:; When adding an element that was already defined in the composition of a mixture, the element was not properly incorporated by modifying the weight fraction of the previous element, but rather added as new element. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11272",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11293
https://github.com/root-project/root/issues/11294:117,Availability,error,errors,117,"1. it's natural for users to add const or reference qualifiers to the signature, but it does not work and results in errors that are hard to interpret for the user; 2. when using the generated functions from C++, it's not possible to pass temporaries in due to the non-const-ref signature. we could use const references instead, or generate an overload set of functions. ```python; import ROOT; import numpy as np. @ROOT.Numba.Declare([""const ROOT::VecOps::RVec<float>""], ""RVecF""); def const_messes_up_generated_code(v):; return v*np.array([1.,2.]).astype(np.float32). @ROOT.Numba.Declare([""RVec<float>&""], ""RVecF""); def the_extra_ampersand_turns_ref_into_rvalue_ref(v):; return v*np.array([1.,2.]).astype(np.float32). @ROOT.Numba.Declare([""RVecF""], ""RVecF""); def cannot_pass_temporaries(v):; return v*np.array([1.,2.]).astype(np.float32). if __name__ == ""__main__"":; ROOT.RDataFrame(10)\; .Define(""v"", ""ROOT::RVecF{1.f,2.f}"")\; .Define(""err1"", ""Numba::const_messes_up_generated_code(v)"")\; .Define(""err2"", ""Numba::the_extra_ampersand_turns_ref_into_rvalue_ref(v)"")\; .Define(""err3"", ""Numba::cannot_pass_temporaries(v[v > 0])"")\; .Sum(""sz"")\; .GetValue(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11294
https://github.com/root-project/root/issues/11295:1317,Availability,avail,available,1317,"### Is your feature request related to a problem? Please describe.; Sometimes, in the midst of a ROOT session, it would be helpful to get an overview of the local and global variables that have been declared. cling allows `.g` for printing a list of global variables.; The option `.l` for local variables got lost in the migration from CINT to cling, but there is an open issue: https://github.com/root-project/root/issues/10191. ### Describe the solution you'd like; Apart from `.l` for local variables, it would be nice if ROOT (or cling) had a graphical way of displaying variables with its value, potentially as a 'TreeView'. Something like:; `new TVariableBrowser()`; instead of; `new TBrowser()`. Or maybe, it could be just a new TGTab inside the already existing TBrowser. If the variable is an std::vector, one could maybe right click on it and click on ""Scan"" or ""Print"" as if were a TTree. Or double-clicking on it could unfold the tree view, or open a new GUI dialog with the vector. Something like:; https://docs.spyder-ide.org/current/panes/variableexplorer.html. ### Describe alternatives you've considered; I use the QtCreator's debugger to see the list of variables, see https://root.cern/blog/code-horsepower-f1/#debugging-your-root-scripts-or-executables-with-gdb, but it would be nice to have this available directly from the TBrowser or from the terminal. One could also use Python and Spyder, but that's not directly the ROOT terminal... ### Additional context. If the feature were helpful for cling users, it should not rely on ROOT, maybe just a python script behind the scenes using Tkinter as GUI, that can be run from the cling terminal?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11295
https://github.com/root-project/root/issues/11295:174,Modifiability,variab,variables,174,"### Is your feature request related to a problem? Please describe.; Sometimes, in the midst of a ROOT session, it would be helpful to get an overview of the local and global variables that have been declared. cling allows `.g` for printing a list of global variables.; The option `.l` for local variables got lost in the migration from CINT to cling, but there is an open issue: https://github.com/root-project/root/issues/10191. ### Describe the solution you'd like; Apart from `.l` for local variables, it would be nice if ROOT (or cling) had a graphical way of displaying variables with its value, potentially as a 'TreeView'. Something like:; `new TVariableBrowser()`; instead of; `new TBrowser()`. Or maybe, it could be just a new TGTab inside the already existing TBrowser. If the variable is an std::vector, one could maybe right click on it and click on ""Scan"" or ""Print"" as if were a TTree. Or double-clicking on it could unfold the tree view, or open a new GUI dialog with the vector. Something like:; https://docs.spyder-ide.org/current/panes/variableexplorer.html. ### Describe alternatives you've considered; I use the QtCreator's debugger to see the list of variables, see https://root.cern/blog/code-horsepower-f1/#debugging-your-root-scripts-or-executables-with-gdb, but it would be nice to have this available directly from the TBrowser or from the terminal. One could also use Python and Spyder, but that's not directly the ROOT terminal... ### Additional context. If the feature were helpful for cling users, it should not rely on ROOT, maybe just a python script behind the scenes using Tkinter as GUI, that can be run from the cling terminal?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11295
https://github.com/root-project/root/issues/11295:257,Modifiability,variab,variables,257,"### Is your feature request related to a problem? Please describe.; Sometimes, in the midst of a ROOT session, it would be helpful to get an overview of the local and global variables that have been declared. cling allows `.g` for printing a list of global variables.; The option `.l` for local variables got lost in the migration from CINT to cling, but there is an open issue: https://github.com/root-project/root/issues/10191. ### Describe the solution you'd like; Apart from `.l` for local variables, it would be nice if ROOT (or cling) had a graphical way of displaying variables with its value, potentially as a 'TreeView'. Something like:; `new TVariableBrowser()`; instead of; `new TBrowser()`. Or maybe, it could be just a new TGTab inside the already existing TBrowser. If the variable is an std::vector, one could maybe right click on it and click on ""Scan"" or ""Print"" as if were a TTree. Or double-clicking on it could unfold the tree view, or open a new GUI dialog with the vector. Something like:; https://docs.spyder-ide.org/current/panes/variableexplorer.html. ### Describe alternatives you've considered; I use the QtCreator's debugger to see the list of variables, see https://root.cern/blog/code-horsepower-f1/#debugging-your-root-scripts-or-executables-with-gdb, but it would be nice to have this available directly from the TBrowser or from the terminal. One could also use Python and Spyder, but that's not directly the ROOT terminal... ### Additional context. If the feature were helpful for cling users, it should not rely on ROOT, maybe just a python script behind the scenes using Tkinter as GUI, that can be run from the cling terminal?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11295
https://github.com/root-project/root/issues/11295:295,Modifiability,variab,variables,295,"### Is your feature request related to a problem? Please describe.; Sometimes, in the midst of a ROOT session, it would be helpful to get an overview of the local and global variables that have been declared. cling allows `.g` for printing a list of global variables.; The option `.l` for local variables got lost in the migration from CINT to cling, but there is an open issue: https://github.com/root-project/root/issues/10191. ### Describe the solution you'd like; Apart from `.l` for local variables, it would be nice if ROOT (or cling) had a graphical way of displaying variables with its value, potentially as a 'TreeView'. Something like:; `new TVariableBrowser()`; instead of; `new TBrowser()`. Or maybe, it could be just a new TGTab inside the already existing TBrowser. If the variable is an std::vector, one could maybe right click on it and click on ""Scan"" or ""Print"" as if were a TTree. Or double-clicking on it could unfold the tree view, or open a new GUI dialog with the vector. Something like:; https://docs.spyder-ide.org/current/panes/variableexplorer.html. ### Describe alternatives you've considered; I use the QtCreator's debugger to see the list of variables, see https://root.cern/blog/code-horsepower-f1/#debugging-your-root-scripts-or-executables-with-gdb, but it would be nice to have this available directly from the TBrowser or from the terminal. One could also use Python and Spyder, but that's not directly the ROOT terminal... ### Additional context. If the feature were helpful for cling users, it should not rely on ROOT, maybe just a python script behind the scenes using Tkinter as GUI, that can be run from the cling terminal?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11295
https://github.com/root-project/root/issues/11295:494,Modifiability,variab,variables,494,"### Is your feature request related to a problem? Please describe.; Sometimes, in the midst of a ROOT session, it would be helpful to get an overview of the local and global variables that have been declared. cling allows `.g` for printing a list of global variables.; The option `.l` for local variables got lost in the migration from CINT to cling, but there is an open issue: https://github.com/root-project/root/issues/10191. ### Describe the solution you'd like; Apart from `.l` for local variables, it would be nice if ROOT (or cling) had a graphical way of displaying variables with its value, potentially as a 'TreeView'. Something like:; `new TVariableBrowser()`; instead of; `new TBrowser()`. Or maybe, it could be just a new TGTab inside the already existing TBrowser. If the variable is an std::vector, one could maybe right click on it and click on ""Scan"" or ""Print"" as if were a TTree. Or double-clicking on it could unfold the tree view, or open a new GUI dialog with the vector. Something like:; https://docs.spyder-ide.org/current/panes/variableexplorer.html. ### Describe alternatives you've considered; I use the QtCreator's debugger to see the list of variables, see https://root.cern/blog/code-horsepower-f1/#debugging-your-root-scripts-or-executables-with-gdb, but it would be nice to have this available directly from the TBrowser or from the terminal. One could also use Python and Spyder, but that's not directly the ROOT terminal... ### Additional context. If the feature were helpful for cling users, it should not rely on ROOT, maybe just a python script behind the scenes using Tkinter as GUI, that can be run from the cling terminal?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11295
https://github.com/root-project/root/issues/11295:575,Modifiability,variab,variables,575,"### Is your feature request related to a problem? Please describe.; Sometimes, in the midst of a ROOT session, it would be helpful to get an overview of the local and global variables that have been declared. cling allows `.g` for printing a list of global variables.; The option `.l` for local variables got lost in the migration from CINT to cling, but there is an open issue: https://github.com/root-project/root/issues/10191. ### Describe the solution you'd like; Apart from `.l` for local variables, it would be nice if ROOT (or cling) had a graphical way of displaying variables with its value, potentially as a 'TreeView'. Something like:; `new TVariableBrowser()`; instead of; `new TBrowser()`. Or maybe, it could be just a new TGTab inside the already existing TBrowser. If the variable is an std::vector, one could maybe right click on it and click on ""Scan"" or ""Print"" as if were a TTree. Or double-clicking on it could unfold the tree view, or open a new GUI dialog with the vector. Something like:; https://docs.spyder-ide.org/current/panes/variableexplorer.html. ### Describe alternatives you've considered; I use the QtCreator's debugger to see the list of variables, see https://root.cern/blog/code-horsepower-f1/#debugging-your-root-scripts-or-executables-with-gdb, but it would be nice to have this available directly from the TBrowser or from the terminal. One could also use Python and Spyder, but that's not directly the ROOT terminal... ### Additional context. If the feature were helpful for cling users, it should not rely on ROOT, maybe just a python script behind the scenes using Tkinter as GUI, that can be run from the cling terminal?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11295
https://github.com/root-project/root/issues/11295:787,Modifiability,variab,variable,787,"### Is your feature request related to a problem? Please describe.; Sometimes, in the midst of a ROOT session, it would be helpful to get an overview of the local and global variables that have been declared. cling allows `.g` for printing a list of global variables.; The option `.l` for local variables got lost in the migration from CINT to cling, but there is an open issue: https://github.com/root-project/root/issues/10191. ### Describe the solution you'd like; Apart from `.l` for local variables, it would be nice if ROOT (or cling) had a graphical way of displaying variables with its value, potentially as a 'TreeView'. Something like:; `new TVariableBrowser()`; instead of; `new TBrowser()`. Or maybe, it could be just a new TGTab inside the already existing TBrowser. If the variable is an std::vector, one could maybe right click on it and click on ""Scan"" or ""Print"" as if were a TTree. Or double-clicking on it could unfold the tree view, or open a new GUI dialog with the vector. Something like:; https://docs.spyder-ide.org/current/panes/variableexplorer.html. ### Describe alternatives you've considered; I use the QtCreator's debugger to see the list of variables, see https://root.cern/blog/code-horsepower-f1/#debugging-your-root-scripts-or-executables-with-gdb, but it would be nice to have this available directly from the TBrowser or from the terminal. One could also use Python and Spyder, but that's not directly the ROOT terminal... ### Additional context. If the feature were helpful for cling users, it should not rely on ROOT, maybe just a python script behind the scenes using Tkinter as GUI, that can be run from the cling terminal?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11295
https://github.com/root-project/root/issues/11295:1054,Modifiability,variab,variableexplorer,1054,"### Is your feature request related to a problem? Please describe.; Sometimes, in the midst of a ROOT session, it would be helpful to get an overview of the local and global variables that have been declared. cling allows `.g` for printing a list of global variables.; The option `.l` for local variables got lost in the migration from CINT to cling, but there is an open issue: https://github.com/root-project/root/issues/10191. ### Describe the solution you'd like; Apart from `.l` for local variables, it would be nice if ROOT (or cling) had a graphical way of displaying variables with its value, potentially as a 'TreeView'. Something like:; `new TVariableBrowser()`; instead of; `new TBrowser()`. Or maybe, it could be just a new TGTab inside the already existing TBrowser. If the variable is an std::vector, one could maybe right click on it and click on ""Scan"" or ""Print"" as if were a TTree. Or double-clicking on it could unfold the tree view, or open a new GUI dialog with the vector. Something like:; https://docs.spyder-ide.org/current/panes/variableexplorer.html. ### Describe alternatives you've considered; I use the QtCreator's debugger to see the list of variables, see https://root.cern/blog/code-horsepower-f1/#debugging-your-root-scripts-or-executables-with-gdb, but it would be nice to have this available directly from the TBrowser or from the terminal. One could also use Python and Spyder, but that's not directly the ROOT terminal... ### Additional context. If the feature were helpful for cling users, it should not rely on ROOT, maybe just a python script behind the scenes using Tkinter as GUI, that can be run from the cling terminal?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11295
https://github.com/root-project/root/issues/11295:1172,Modifiability,variab,variables,1172,"### Is your feature request related to a problem? Please describe.; Sometimes, in the midst of a ROOT session, it would be helpful to get an overview of the local and global variables that have been declared. cling allows `.g` for printing a list of global variables.; The option `.l` for local variables got lost in the migration from CINT to cling, but there is an open issue: https://github.com/root-project/root/issues/10191. ### Describe the solution you'd like; Apart from `.l` for local variables, it would be nice if ROOT (or cling) had a graphical way of displaying variables with its value, potentially as a 'TreeView'. Something like:; `new TVariableBrowser()`; instead of; `new TBrowser()`. Or maybe, it could be just a new TGTab inside the already existing TBrowser. If the variable is an std::vector, one could maybe right click on it and click on ""Scan"" or ""Print"" as if were a TTree. Or double-clicking on it could unfold the tree view, or open a new GUI dialog with the vector. Something like:; https://docs.spyder-ide.org/current/panes/variableexplorer.html. ### Describe alternatives you've considered; I use the QtCreator's debugger to see the list of variables, see https://root.cern/blog/code-horsepower-f1/#debugging-your-root-scripts-or-executables-with-gdb, but it would be nice to have this available directly from the TBrowser or from the terminal. One could also use Python and Spyder, but that's not directly the ROOT terminal... ### Additional context. If the feature were helpful for cling users, it should not rely on ROOT, maybe just a python script behind the scenes using Tkinter as GUI, that can be run from the cling terminal?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11295
https://github.com/root-project/root/issues/11299:334,Availability,error,error,334,"### Is your feature request related to a problem? Please describe.; In cling cmd prompt, `.x`, `.X` meta commands loads a `.C` script then invoke a function with the same name as the script file (stripped extension).; Every time the filename changes the entry function name needs to be changed too. This is not user friendly, or even error prone. P.S. In `interpreter/cling/lib/MetaProcessor/MetaSema.cpp` , there is a comment about plan to enabling using `__main__` as a filename independent entry function name. However identifier with two underscores is reserved by c++ standard (https://en.cppreference.com/w/cpp/language/identifiers). ### Describe the solution you'd like; A filename independent entry function like `clingmain`, `clingstart`, `clingrun`, `cling_on_load`, `cling_on_x`... etc.; Or function attribute like `[[cling::on_load]] int any_func_name(char c, int a) {...}` to let cling call `any_func_name` on meta cmd `.x`.; A `[[cling::on_unload]]` can be useful too, though not directly related to this feature request.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11299
https://github.com/root-project/root/issues/11299:114,Performance,load,loads,114,"### Is your feature request related to a problem? Please describe.; In cling cmd prompt, `.x`, `.X` meta commands loads a `.C` script then invoke a function with the same name as the script file (stripped extension).; Every time the filename changes the entry function name needs to be changed too. This is not user friendly, or even error prone. P.S. In `interpreter/cling/lib/MetaProcessor/MetaSema.cpp` , there is a comment about plan to enabling using `__main__` as a filename independent entry function name. However identifier with two underscores is reserved by c++ standard (https://en.cppreference.com/w/cpp/language/identifiers). ### Describe the solution you'd like; A filename independent entry function like `clingmain`, `clingstart`, `clingrun`, `cling_on_load`, `cling_on_x`... etc.; Or function attribute like `[[cling::on_load]] int any_func_name(char c, int a) {...}` to let cling call `any_func_name` on meta cmd `.x`.; A `[[cling::on_unload]]` can be useful too, though not directly related to this feature request.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11299
https://github.com/root-project/root/pull/11303:184,Deployability,update,updated,184,# This Pull request:; Ports fixes in TGeoMaterial from master to v6-24. ## Changes or fixes:; All issues currently fixed in master. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR is related to #11272,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11303
https://github.com/root-project/root/pull/11303:154,Testability,test,tested,154,# This Pull request:; Ports fixes in TGeoMaterial from master to v6-24. ## Changes or fixes:; All issues currently fixed in master. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR is related to #11272,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11303
https://github.com/root-project/root/issues/11304:783,Usability,clear,clear,783,"- [ x ] Checked for duplicates. ### Describe the bug; When fitting a histogram using the ""WW"" option for TH1::Fit(), i.e.; ```; hist->Fit(func,""WW"");; ```; The fit ignores bins with zero counts, i.e. the same as the ""W"" option. ### Expected behavior; Fit should proceed with all bins with a weight of 1, even those with no counts. ### To Reproduce; ``` TH1D *hist = new TH1D(""hist"", ""hist"", 100, 0, 100);; TF1 *func = new TF1(""func"", ""[0]"", 0, 100);; func->SetParameter(0, 1);; ; hist->FillRandom(""func"", 10); //add sparse counts. hist->Draw(""hist"");. hist->Fit(func, ""WWR"");; func->Draw(""hist same"");; ; std::cout << func->GetParameter(0) << std::endl; ; ```. ### Setup; 1. ROOT version 6.27/01; 2. MacOS 12.5.1; 3. ROOT compiled from source. ### Additional context; This is pretty clear from the ROOT::Fit::FitOptionsMake function [here](https://root.cern.ch/doc/master/HFitImpl_8cxx_source.html#l00684), where on line 728 the WW option is set (correctly), and then on line 780 the W option is checked for, and overwrites the WW option flag. A trivial check that the WW option is not present at line 780, or that ```fitOption.W1 != 2``` fixes the issue, i.e. change line 780 to; ```; if (!opt.Contains(""WW"") && opt.Contains(""W"")) fitOption.W1 = 1; // all non-empty bins have weight =1 (for chi2 fit); ```; or ; ```; if (fitOption.W1 !=2 && opt.Contains(""W"")) fitOption.W1 = 1; // all non-empty bins have weight =1 (for chi2 fit); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11304
https://github.com/root-project/root/pull/11306:16,Modifiability,refactor,refactorings,16,"With the latest refactorings, MakeColumnReaders does not actually; create the column readers but simply gets them from RLoopManager or RColumnRegister.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11306
https://github.com/root-project/root/pull/11306:97,Usability,simpl,simply,97,"With the latest refactorings, MakeColumnReaders does not actually; create the column readers but simply gets them from RLoopManager or RColumnRegister.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11306
https://github.com/root-project/root/pull/11307:19,Integrability,interface,interfaces,19,It simplifies some interfaces and removes one extra responsibility from the column readers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11307
https://github.com/root-project/root/pull/11307:3,Usability,simpl,simplifies,3,It simplifies some interfaces and removes one extra responsibility from the column readers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11307
https://github.com/root-project/root/pull/11309:81,Integrability,Depend,Depends,81,"## This Pull request:. Development of the ConvTranspose operator for TMVA/SOFIE. Depends on #11382. ## Checklist:. - [x] tested changes locally; - [x] tests for 1d, 2d and 3d ConvTranspose",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11309
https://github.com/root-project/root/pull/11309:121,Testability,test,tested,121,"## This Pull request:. Development of the ConvTranspose operator for TMVA/SOFIE. Depends on #11382. ## Checklist:. - [x] tested changes locally; - [x] tests for 1d, 2d and 3d ConvTranspose",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11309
https://github.com/root-project/root/pull/11309:151,Testability,test,tests,151,"## This Pull request:. Development of the ConvTranspose operator for TMVA/SOFIE. Depends on #11382. ## Checklist:. - [x] tested changes locally; - [x] tests for 1d, 2d and 3d ConvTranspose",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11309
https://github.com/root-project/root/pull/11311:177,Availability,failure,failure,177,"# This Pull request:. ## Changes or fixes:. When the external application (depending on ROOT) uses C++20, adding this C++ feature test can reduce the possibility of compilation failure. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11311
https://github.com/root-project/root/pull/11311:139,Energy Efficiency,reduce,reduce,139,"# This Pull request:. ## Changes or fixes:. When the external application (depending on ROOT) uses C++20, adding this C++ feature test can reduce the possibility of compilation failure. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11311
https://github.com/root-project/root/pull/11311:75,Integrability,depend,depending,75,"# This Pull request:. ## Changes or fixes:. When the external application (depending on ROOT) uses C++20, adding this C++ feature test can reduce the possibility of compilation failure. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11311
https://github.com/root-project/root/pull/11311:130,Testability,test,test,130,"# This Pull request:. ## Changes or fixes:. When the external application (depending on ROOT) uses C++20, adding this C++ feature test can reduce the possibility of compilation failure. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11311
https://github.com/root-project/root/pull/11311:207,Testability,test,tested,207,"# This Pull request:. ## Changes or fixes:. When the external application (depending on ROOT) uses C++20, adding this C++ feature test can reduce the possibility of compilation failure. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11311
https://github.com/root-project/root/issues/11312:90,Availability,fault,fault,90,"- [x] Checked for duplicates. ### Describe the bug. (@pcanal determined that it's JSON at fault here). Building with external nljson 3.11 causes CMake to emit an empty `-D` definition on the command line, breaking a root-cling call inside the build:; ```; cd /private/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-build-htsa7u5/io/io && /opt/homebrew/Cellar/cmake/3.24.1/bin/cmake -E env LD_LIBRARY_PATH=/private/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-build-htsa7u5/lib: /private/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-build-htsa7u5/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -s /private/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-build-htsa7u5/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-src -excludePath /private/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-build-htsa7u5/ginclude -excludePath /private/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-build-htsa7u5/externals -excludePath /private/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-build-htsa7u5/builtins -rml libRIO.so -rmf /private/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-build-htsa7u5/lib/libRIO.rootmap -writeEmptyRootPCM -D -compilerI/Applications/Xcode.app/Contents/Devel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11312
https://github.com/root-project/root/issues/11312:6468,Availability,error,error,6468,"k-build-htsa7u5/ginclude -I/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-src/core/clib/res -I/opt/spack/opt/spack/monterey/nlohmann-json/3.11.2/onfre7c/include ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TZIPFile.h /var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-src/io/io/inc/LinkDef.h; In file included from <built-in>:433:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1 1; ^; ```. ### Expected behavior. The `-D` shouldn't be emitted, so the build will work. ### To Reproduce. I'm building with Spack:; <details><summary>Spack concretization</summary><pre>; - root@6.26.06%apple-clang@13.1.6~aqua~davix~dcache~emacs~examples~fftw~fits~fortran+gdml+gminimal~graphviz~gsl~http~ipo~jemalloc~math~memstat+minuit~mlp~mysql~opengl~oracle~postgres~pythia6~pythia8+python~qt4~r+roofit~root7+rpath~shadow~spectrum~sqlite~ssl~table~tbb+threads~tmva+unuran~vc+vdt~veccore~vmc~x+xml~xrootd build_type=RelWithDebInfo cxxstd=17 patches=22af347 arch=darwin-monterey-m1; [+] ^cmake@3.24.1%apple-clang@13.1.6~doc+ncurses+ownlibs~qt build_type=Release arch=darwin-monterey-m1; [+] ^freetype@2.11.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^bzip2@1.0.8%apple-clang@13.1.6~debug~pic+shared arch=darwin-monterey-m1; [+] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11312
https://github.com/root-project/root/issues/11312:7185,Deployability,patch,patches,7185,"lock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TZIPFile.h /var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-src/io/io/inc/LinkDef.h; In file included from <built-in>:433:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1 1; ^; ```. ### Expected behavior. The `-D` shouldn't be emitted, so the build will work. ### To Reproduce. I'm building with Spack:; <details><summary>Spack concretization</summary><pre>; - root@6.26.06%apple-clang@13.1.6~aqua~davix~dcache~emacs~examples~fftw~fits~fortran+gdml+gminimal~graphviz~gsl~http~ipo~jemalloc~math~memstat+minuit~mlp~mysql~opengl~oracle~postgres~pythia6~pythia8+python~qt4~r+roofit~root7+rpath~shadow~spectrum~sqlite~ssl~table~tbb+threads~tmva+unuran~vc+vdt~veccore~vmc~x+xml~xrootd build_type=RelWithDebInfo cxxstd=17 patches=22af347 arch=darwin-monterey-m1; [+] ^cmake@3.24.1%apple-clang@13.1.6~doc+ncurses+ownlibs~qt build_type=Release arch=darwin-monterey-m1; [+] ^freetype@2.11.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^bzip2@1.0.8%apple-clang@13.1.6~debug~pic+shared arch=darwin-monterey-m1; [+] ^gnuconfig@2021-08-14%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libpng@1.6.37%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^zlib@1.2.12%apple-clang@13.1.6+optimize+pic+shared patches=0d38234 arch=darwin-monterey-m1; [+] ^pkgconf@1.8.0%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libice@1.0.9%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^util-macros@1.19.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^xproto@7.0.31%apple-clang@13.1.6 arch=darwin-monterey-m1; [-] ^pkgconf@1.9.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^xtrans@1.3.5%apple-clan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11312
https://github.com/root-project/root/issues/11312:7297,Deployability,Release,Release,7297,"seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-src/io/io/inc/LinkDef.h; In file included from <built-in>:433:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1 1; ^; ```. ### Expected behavior. The `-D` shouldn't be emitted, so the build will work. ### To Reproduce. I'm building with Spack:; <details><summary>Spack concretization</summary><pre>; - root@6.26.06%apple-clang@13.1.6~aqua~davix~dcache~emacs~examples~fftw~fits~fortran+gdml+gminimal~graphviz~gsl~http~ipo~jemalloc~math~memstat+minuit~mlp~mysql~opengl~oracle~postgres~pythia6~pythia8+python~qt4~r+roofit~root7+rpath~shadow~spectrum~sqlite~ssl~table~tbb+threads~tmva+unuran~vc+vdt~veccore~vmc~x+xml~xrootd build_type=RelWithDebInfo cxxstd=17 patches=22af347 arch=darwin-monterey-m1; [+] ^cmake@3.24.1%apple-clang@13.1.6~doc+ncurses+ownlibs~qt build_type=Release arch=darwin-monterey-m1; [+] ^freetype@2.11.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^bzip2@1.0.8%apple-clang@13.1.6~debug~pic+shared arch=darwin-monterey-m1; [+] ^gnuconfig@2021-08-14%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libpng@1.6.37%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^zlib@1.2.12%apple-clang@13.1.6+optimize+pic+shared patches=0d38234 arch=darwin-monterey-m1; [+] ^pkgconf@1.8.0%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libice@1.0.9%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^util-macros@1.19.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^xproto@7.0.31%apple-clang@13.1.6 arch=darwin-monterey-m1; [-] ^pkgconf@1.9.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^xtrans@1.3.5%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libjpeg-turbo@2.1.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^cmake@3.24.1%apple-clang@13.1.6~doc+ncurses+ownlibs~qt build_type=Release arch=darwin-monterey-m1; [+] ^nasm@2.15.05%apple-clang@13.1.6 arch=darwi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11312
https://github.com/root-project/root/issues/11312:7662,Deployability,patch,patches,7662,"`-D` shouldn't be emitted, so the build will work. ### To Reproduce. I'm building with Spack:; <details><summary>Spack concretization</summary><pre>; - root@6.26.06%apple-clang@13.1.6~aqua~davix~dcache~emacs~examples~fftw~fits~fortran+gdml+gminimal~graphviz~gsl~http~ipo~jemalloc~math~memstat+minuit~mlp~mysql~opengl~oracle~postgres~pythia6~pythia8+python~qt4~r+roofit~root7+rpath~shadow~spectrum~sqlite~ssl~table~tbb+threads~tmva+unuran~vc+vdt~veccore~vmc~x+xml~xrootd build_type=RelWithDebInfo cxxstd=17 patches=22af347 arch=darwin-monterey-m1; [+] ^cmake@3.24.1%apple-clang@13.1.6~doc+ncurses+ownlibs~qt build_type=Release arch=darwin-monterey-m1; [+] ^freetype@2.11.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^bzip2@1.0.8%apple-clang@13.1.6~debug~pic+shared arch=darwin-monterey-m1; [+] ^gnuconfig@2021-08-14%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libpng@1.6.37%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^zlib@1.2.12%apple-clang@13.1.6+optimize+pic+shared patches=0d38234 arch=darwin-monterey-m1; [+] ^pkgconf@1.8.0%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libice@1.0.9%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^util-macros@1.19.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^xproto@7.0.31%apple-clang@13.1.6 arch=darwin-monterey-m1; [-] ^pkgconf@1.9.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^xtrans@1.3.5%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libjpeg-turbo@2.1.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^cmake@3.24.1%apple-clang@13.1.6~doc+ncurses+ownlibs~qt build_type=Release arch=darwin-monterey-m1; [+] ^nasm@2.15.05%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libxml2@2.10.1%apple-clang@13.1.6~python arch=darwin-monterey-m1; [+] ^libiconv@1.16%apple-clang@13.1.6 libs=shared,static arch=darwin-monterey-m1; [+] ^xz@5.2.5%apple-clang@13.1.6~pic libs=shared,static arch=darwin-monterey-m1; [+] ^lz4@1.9.3%apple-clang@13.1.6 libs=shared,static arch=darwin-monterey-m1; [+] ^ncurses@5.7.20081102%apple-clang@13.1.6~sym",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11312
https://github.com/root-project/root/issues/11312:8224,Deployability,Release,Release,8224,"] ^cmake@3.24.1%apple-clang@13.1.6~doc+ncurses+ownlibs~qt build_type=Release arch=darwin-monterey-m1; [+] ^freetype@2.11.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^bzip2@1.0.8%apple-clang@13.1.6~debug~pic+shared arch=darwin-monterey-m1; [+] ^gnuconfig@2021-08-14%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libpng@1.6.37%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^zlib@1.2.12%apple-clang@13.1.6+optimize+pic+shared patches=0d38234 arch=darwin-monterey-m1; [+] ^pkgconf@1.8.0%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libice@1.0.9%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^util-macros@1.19.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^xproto@7.0.31%apple-clang@13.1.6 arch=darwin-monterey-m1; [-] ^pkgconf@1.9.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^xtrans@1.3.5%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libjpeg-turbo@2.1.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^cmake@3.24.1%apple-clang@13.1.6~doc+ncurses+ownlibs~qt build_type=Release arch=darwin-monterey-m1; [+] ^nasm@2.15.05%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libxml2@2.10.1%apple-clang@13.1.6~python arch=darwin-monterey-m1; [+] ^libiconv@1.16%apple-clang@13.1.6 libs=shared,static arch=darwin-monterey-m1; [+] ^xz@5.2.5%apple-clang@13.1.6~pic libs=shared,static arch=darwin-monterey-m1; [+] ^lz4@1.9.3%apple-clang@13.1.6 libs=shared,static arch=darwin-monterey-m1; [+] ^ncurses@5.7.20081102%apple-clang@13.1.6~symlinks+termlib abi=5 patches=f84b270 arch=darwin-monterey-m1; [+] ^nlohmann-json@3.11.2%apple-clang@13.1.6~ipo+multiple_headers build_type=RelWithDebInfo arch=darwin-monterey-m1; [+] ^openblas@0.3.20%apple-clang@13.1.6~bignuma~consistent_fpcsr~ilp64+locking+pic+shared symbol_suffix=none threads=none arch=darwin-monterey-m1; [+] ^perl@5.30.3%apple-clang@13.1.6~cpanm+shared+threads arch=darwin-monterey-m1; [+] ^pcre@8.45%apple-clang@13.1.6~jit+multibyte+utf arch=darwin-monterey-m1; [+] ^python@3.9.13%apple-clang@13.1.6+bz2+ctypes+dbm~debug+libxml2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11312
https://github.com/root-project/root/issues/11312:8699,Deployability,patch,patches,8699,".8.0%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libice@1.0.9%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^util-macros@1.19.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^xproto@7.0.31%apple-clang@13.1.6 arch=darwin-monterey-m1; [-] ^pkgconf@1.9.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^xtrans@1.3.5%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libjpeg-turbo@2.1.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^cmake@3.24.1%apple-clang@13.1.6~doc+ncurses+ownlibs~qt build_type=Release arch=darwin-monterey-m1; [+] ^nasm@2.15.05%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libxml2@2.10.1%apple-clang@13.1.6~python arch=darwin-monterey-m1; [+] ^libiconv@1.16%apple-clang@13.1.6 libs=shared,static arch=darwin-monterey-m1; [+] ^xz@5.2.5%apple-clang@13.1.6~pic libs=shared,static arch=darwin-monterey-m1; [+] ^lz4@1.9.3%apple-clang@13.1.6 libs=shared,static arch=darwin-monterey-m1; [+] ^ncurses@5.7.20081102%apple-clang@13.1.6~symlinks+termlib abi=5 patches=f84b270 arch=darwin-monterey-m1; [+] ^nlohmann-json@3.11.2%apple-clang@13.1.6~ipo+multiple_headers build_type=RelWithDebInfo arch=darwin-monterey-m1; [+] ^openblas@0.3.20%apple-clang@13.1.6~bignuma~consistent_fpcsr~ilp64+locking+pic+shared symbol_suffix=none threads=none arch=darwin-monterey-m1; [+] ^perl@5.30.3%apple-clang@13.1.6~cpanm+shared+threads arch=darwin-monterey-m1; [+] ^pcre@8.45%apple-clang@13.1.6~jit+multibyte+utf arch=darwin-monterey-m1; [+] ^python@3.9.13%apple-clang@13.1.6+bz2+ctypes+dbm~debug+libxml2+lzma~nis~optimizations+pic+pyexpat+pythoncmd+readline+shared+sqlite3+ssl~tix~tkinter~ucs4+uuid+zlib patches=0d98e93,4c24573,f2fd060 arch=darwin-monterey-m1; [+] ^apple-libuuid@1353.100.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^expat@2.4.8%apple-clang@13.1.6~libbsd arch=darwin-monterey-m1; [+] ^gdbm@1.23%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^readline@8.1.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^gettext@0.21%apple-clang@13.1.6+bzip2+curses+git~libunistring",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11312
https://github.com/root-project/root/issues/11312:9330,Deployability,patch,patches,9330,"-monterey-m1; [+] ^libxml2@2.10.1%apple-clang@13.1.6~python arch=darwin-monterey-m1; [+] ^libiconv@1.16%apple-clang@13.1.6 libs=shared,static arch=darwin-monterey-m1; [+] ^xz@5.2.5%apple-clang@13.1.6~pic libs=shared,static arch=darwin-monterey-m1; [+] ^lz4@1.9.3%apple-clang@13.1.6 libs=shared,static arch=darwin-monterey-m1; [+] ^ncurses@5.7.20081102%apple-clang@13.1.6~symlinks+termlib abi=5 patches=f84b270 arch=darwin-monterey-m1; [+] ^nlohmann-json@3.11.2%apple-clang@13.1.6~ipo+multiple_headers build_type=RelWithDebInfo arch=darwin-monterey-m1; [+] ^openblas@0.3.20%apple-clang@13.1.6~bignuma~consistent_fpcsr~ilp64+locking+pic+shared symbol_suffix=none threads=none arch=darwin-monterey-m1; [+] ^perl@5.30.3%apple-clang@13.1.6~cpanm+shared+threads arch=darwin-monterey-m1; [+] ^pcre@8.45%apple-clang@13.1.6~jit+multibyte+utf arch=darwin-monterey-m1; [+] ^python@3.9.13%apple-clang@13.1.6+bz2+ctypes+dbm~debug+libxml2+lzma~nis~optimizations+pic+pyexpat+pythoncmd+readline+shared+sqlite3+ssl~tix~tkinter~ucs4+uuid+zlib patches=0d98e93,4c24573,f2fd060 arch=darwin-monterey-m1; [+] ^apple-libuuid@1353.100.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^expat@2.4.8%apple-clang@13.1.6~libbsd arch=darwin-monterey-m1; [+] ^gdbm@1.23%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^readline@8.1.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^gettext@0.21%apple-clang@13.1.6+bzip2+curses+git~libunistring+libxml2+tar+xz arch=darwin-monterey-m1; [+] ^libffi@3.4.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^openssl@1.1.1q%apple-clang@13.1.6~docs~shared certs=mozilla patches=3fdcf2d arch=darwin-monterey-m1; [+] ^ca-certificates-mozilla@2022-07-19%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^sqlite@3.39.2%apple-clang@13.1.6+column_metadata+dynamic_extensions+fts~functions+rtree arch=darwin-monterey-m1; [+] ^unuran@1.8.1%apple-clang@13.1.6~gsl+rngstreams+shared arch=darwin-monterey-m1; [+] ^rngstreams@1.0.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^vdt@0.4.3%apple-clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11312
https://github.com/root-project/root/issues/11312:9886,Deployability,patch,patches,9886,"r~ilp64+locking+pic+shared symbol_suffix=none threads=none arch=darwin-monterey-m1; [+] ^perl@5.30.3%apple-clang@13.1.6~cpanm+shared+threads arch=darwin-monterey-m1; [+] ^pcre@8.45%apple-clang@13.1.6~jit+multibyte+utf arch=darwin-monterey-m1; [+] ^python@3.9.13%apple-clang@13.1.6+bz2+ctypes+dbm~debug+libxml2+lzma~nis~optimizations+pic+pyexpat+pythoncmd+readline+shared+sqlite3+ssl~tix~tkinter~ucs4+uuid+zlib patches=0d98e93,4c24573,f2fd060 arch=darwin-monterey-m1; [+] ^apple-libuuid@1353.100.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^expat@2.4.8%apple-clang@13.1.6~libbsd arch=darwin-monterey-m1; [+] ^gdbm@1.23%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^readline@8.1.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^gettext@0.21%apple-clang@13.1.6+bzip2+curses+git~libunistring+libxml2+tar+xz arch=darwin-monterey-m1; [+] ^libffi@3.4.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^openssl@1.1.1q%apple-clang@13.1.6~docs~shared certs=mozilla patches=3fdcf2d arch=darwin-monterey-m1; [+] ^ca-certificates-mozilla@2022-07-19%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^sqlite@3.39.2%apple-clang@13.1.6+column_metadata+dynamic_extensions+fts~functions+rtree arch=darwin-monterey-m1; [+] ^unuran@1.8.1%apple-clang@13.1.6~gsl+rngstreams+shared arch=darwin-monterey-m1; [+] ^rngstreams@1.0.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^vdt@0.4.3%apple-clang@13.1.6~ipo~preload build_type=RelWithDebInfo arch=darwin-monterey-m1; [+] ^python@3.9.13%apple-clang@13.1.6+bz2+ctypes+dbm~debug+libxml2+lzma~nis~optimizations+pic+pyexpat+pythoncmd+readline+shared+sqlite3+ssl~tix~tkinter~ucs4+uuid+zlib patches=0d98e93,4c24573,f2fd060 arch=darwin-monterey-m1; [+] ^apple-libuuid@1353.100.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^bzip2@1.0.8%apple-clang@13.1.6~debug~pic+shared arch=darwin-monterey-m1; [+] ^gdbm@1.23%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^readline@8.1.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^ncurses@5.7.20081102%apple-clang@13.1.6~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11312
https://github.com/root-project/root/issues/11312:10543,Deployability,patch,patches,10543,"nterey-m1; [+] ^gdbm@1.23%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^readline@8.1.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^gettext@0.21%apple-clang@13.1.6+bzip2+curses+git~libunistring+libxml2+tar+xz arch=darwin-monterey-m1; [+] ^libffi@3.4.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^openssl@1.1.1q%apple-clang@13.1.6~docs~shared certs=mozilla patches=3fdcf2d arch=darwin-monterey-m1; [+] ^ca-certificates-mozilla@2022-07-19%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^sqlite@3.39.2%apple-clang@13.1.6+column_metadata+dynamic_extensions+fts~functions+rtree arch=darwin-monterey-m1; [+] ^unuran@1.8.1%apple-clang@13.1.6~gsl+rngstreams+shared arch=darwin-monterey-m1; [+] ^rngstreams@1.0.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^vdt@0.4.3%apple-clang@13.1.6~ipo~preload build_type=RelWithDebInfo arch=darwin-monterey-m1; [+] ^python@3.9.13%apple-clang@13.1.6+bz2+ctypes+dbm~debug+libxml2+lzma~nis~optimizations+pic+pyexpat+pythoncmd+readline+shared+sqlite3+ssl~tix~tkinter~ucs4+uuid+zlib patches=0d98e93,4c24573,f2fd060 arch=darwin-monterey-m1; [+] ^apple-libuuid@1353.100.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^bzip2@1.0.8%apple-clang@13.1.6~debug~pic+shared arch=darwin-monterey-m1; [+] ^gdbm@1.23%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^readline@8.1.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^ncurses@5.7.20081102%apple-clang@13.1.6~symlinks+termlib abi=5 patches=f84b270 arch=darwin-monterey-m1; [+] ^gettext@0.21%apple-clang@13.1.6+bzip2+curses+git~libunistring+libxml2+tar+xz arch=darwin-monterey-m1; [+] ^sqlite@3.39.2%apple-clang@13.1.6+column_metadata+dynamic_extensions+fts~functions+rtree arch=darwin-monterey-m1; [+] ^xz@5.2.5%apple-clang@13.1.6~pic libs=shared,static arch=darwin-monterey-m1; [+] ^xxhash@0.8.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^zstd@1.5.2%apple-clang@13.1.6~programs libs=shared,static arch=darwin-monterey-m1; </pre></details>. which results in the cmake command:; <details><summary>cmake",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11312
https://github.com/root-project/root/issues/11312:10943,Deployability,patch,patches,10943,"22-07-19%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^sqlite@3.39.2%apple-clang@13.1.6+column_metadata+dynamic_extensions+fts~functions+rtree arch=darwin-monterey-m1; [+] ^unuran@1.8.1%apple-clang@13.1.6~gsl+rngstreams+shared arch=darwin-monterey-m1; [+] ^rngstreams@1.0.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^vdt@0.4.3%apple-clang@13.1.6~ipo~preload build_type=RelWithDebInfo arch=darwin-monterey-m1; [+] ^python@3.9.13%apple-clang@13.1.6+bz2+ctypes+dbm~debug+libxml2+lzma~nis~optimizations+pic+pyexpat+pythoncmd+readline+shared+sqlite3+ssl~tix~tkinter~ucs4+uuid+zlib patches=0d98e93,4c24573,f2fd060 arch=darwin-monterey-m1; [+] ^apple-libuuid@1353.100.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^bzip2@1.0.8%apple-clang@13.1.6~debug~pic+shared arch=darwin-monterey-m1; [+] ^gdbm@1.23%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^readline@8.1.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^ncurses@5.7.20081102%apple-clang@13.1.6~symlinks+termlib abi=5 patches=f84b270 arch=darwin-monterey-m1; [+] ^gettext@0.21%apple-clang@13.1.6+bzip2+curses+git~libunistring+libxml2+tar+xz arch=darwin-monterey-m1; [+] ^sqlite@3.39.2%apple-clang@13.1.6+column_metadata+dynamic_extensions+fts~functions+rtree arch=darwin-monterey-m1; [+] ^xz@5.2.5%apple-clang@13.1.6~pic libs=shared,static arch=darwin-monterey-m1; [+] ^xxhash@0.8.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^zstd@1.5.2%apple-clang@13.1.6~programs libs=shared,static arch=darwin-monterey-m1; </pre></details>. which results in the cmake command:; <details><summary>cmake</summary><pre>; '/opt/homebrew/bin/cmake' \; '-G' \; 'Unix Makefiles' \; '-DCMAKE_INSTALL_PREFIX:STRING=/opt/spack/opt/spack/monterey/root/6.26.06/htsa7u5' \; '-DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo' \; '-DBUILD_TESTING:BOOL=OFF' \; '-DCMAKE_INTERPROCEDURAL_OPTIMIZATION:BOOL=OFF' \; '-DCMAKE_VERBOSE_MAKEFILE:BOOL=ON' \; '-DCMAKE_FIND_FRAMEWORK:STRING=LAST' \; '-DCMAKE_FIND_APPBUNDLE:STRING=LAST' \; '-DCMAKE_INSTALL_RPATH_USE_LINK_PATH",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11312
https://github.com/root-project/root/issues/11312:7642,Performance,optimiz,optimize,7642,"`-D` shouldn't be emitted, so the build will work. ### To Reproduce. I'm building with Spack:; <details><summary>Spack concretization</summary><pre>; - root@6.26.06%apple-clang@13.1.6~aqua~davix~dcache~emacs~examples~fftw~fits~fortran+gdml+gminimal~graphviz~gsl~http~ipo~jemalloc~math~memstat+minuit~mlp~mysql~opengl~oracle~postgres~pythia6~pythia8+python~qt4~r+roofit~root7+rpath~shadow~spectrum~sqlite~ssl~table~tbb+threads~tmva+unuran~vc+vdt~veccore~vmc~x+xml~xrootd build_type=RelWithDebInfo cxxstd=17 patches=22af347 arch=darwin-monterey-m1; [+] ^cmake@3.24.1%apple-clang@13.1.6~doc+ncurses+ownlibs~qt build_type=Release arch=darwin-monterey-m1; [+] ^freetype@2.11.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^bzip2@1.0.8%apple-clang@13.1.6~debug~pic+shared arch=darwin-monterey-m1; [+] ^gnuconfig@2021-08-14%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libpng@1.6.37%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^zlib@1.2.12%apple-clang@13.1.6+optimize+pic+shared patches=0d38234 arch=darwin-monterey-m1; [+] ^pkgconf@1.8.0%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libice@1.0.9%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^util-macros@1.19.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^xproto@7.0.31%apple-clang@13.1.6 arch=darwin-monterey-m1; [-] ^pkgconf@1.9.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^xtrans@1.3.5%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libjpeg-turbo@2.1.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^cmake@3.24.1%apple-clang@13.1.6~doc+ncurses+ownlibs~qt build_type=Release arch=darwin-monterey-m1; [+] ^nasm@2.15.05%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libxml2@2.10.1%apple-clang@13.1.6~python arch=darwin-monterey-m1; [+] ^libiconv@1.16%apple-clang@13.1.6 libs=shared,static arch=darwin-monterey-m1; [+] ^xz@5.2.5%apple-clang@13.1.6~pic libs=shared,static arch=darwin-monterey-m1; [+] ^lz4@1.9.3%apple-clang@13.1.6 libs=shared,static arch=darwin-monterey-m1; [+] ^ncurses@5.7.20081102%apple-clang@13.1.6~sym",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11312
https://github.com/root-project/root/issues/11312:9239,Performance,optimiz,optimizations,9239,"-monterey-m1; [+] ^libxml2@2.10.1%apple-clang@13.1.6~python arch=darwin-monterey-m1; [+] ^libiconv@1.16%apple-clang@13.1.6 libs=shared,static arch=darwin-monterey-m1; [+] ^xz@5.2.5%apple-clang@13.1.6~pic libs=shared,static arch=darwin-monterey-m1; [+] ^lz4@1.9.3%apple-clang@13.1.6 libs=shared,static arch=darwin-monterey-m1; [+] ^ncurses@5.7.20081102%apple-clang@13.1.6~symlinks+termlib abi=5 patches=f84b270 arch=darwin-monterey-m1; [+] ^nlohmann-json@3.11.2%apple-clang@13.1.6~ipo+multiple_headers build_type=RelWithDebInfo arch=darwin-monterey-m1; [+] ^openblas@0.3.20%apple-clang@13.1.6~bignuma~consistent_fpcsr~ilp64+locking+pic+shared symbol_suffix=none threads=none arch=darwin-monterey-m1; [+] ^perl@5.30.3%apple-clang@13.1.6~cpanm+shared+threads arch=darwin-monterey-m1; [+] ^pcre@8.45%apple-clang@13.1.6~jit+multibyte+utf arch=darwin-monterey-m1; [+] ^python@3.9.13%apple-clang@13.1.6+bz2+ctypes+dbm~debug+libxml2+lzma~nis~optimizations+pic+pyexpat+pythoncmd+readline+shared+sqlite3+ssl~tix~tkinter~ucs4+uuid+zlib patches=0d98e93,4c24573,f2fd060 arch=darwin-monterey-m1; [+] ^apple-libuuid@1353.100.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^expat@2.4.8%apple-clang@13.1.6~libbsd arch=darwin-monterey-m1; [+] ^gdbm@1.23%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^readline@8.1.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^gettext@0.21%apple-clang@13.1.6+bzip2+curses+git~libunistring+libxml2+tar+xz arch=darwin-monterey-m1; [+] ^libffi@3.4.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^openssl@1.1.1q%apple-clang@13.1.6~docs~shared certs=mozilla patches=3fdcf2d arch=darwin-monterey-m1; [+] ^ca-certificates-mozilla@2022-07-19%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^sqlite@3.39.2%apple-clang@13.1.6+column_metadata+dynamic_extensions+fts~functions+rtree arch=darwin-monterey-m1; [+] ^unuran@1.8.1%apple-clang@13.1.6~gsl+rngstreams+shared arch=darwin-monterey-m1; [+] ^rngstreams@1.0.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^vdt@0.4.3%apple-clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11312
https://github.com/root-project/root/issues/11312:10452,Performance,optimiz,optimizations,10452,"nterey-m1; [+] ^gdbm@1.23%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^readline@8.1.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^gettext@0.21%apple-clang@13.1.6+bzip2+curses+git~libunistring+libxml2+tar+xz arch=darwin-monterey-m1; [+] ^libffi@3.4.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^openssl@1.1.1q%apple-clang@13.1.6~docs~shared certs=mozilla patches=3fdcf2d arch=darwin-monterey-m1; [+] ^ca-certificates-mozilla@2022-07-19%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^sqlite@3.39.2%apple-clang@13.1.6+column_metadata+dynamic_extensions+fts~functions+rtree arch=darwin-monterey-m1; [+] ^unuran@1.8.1%apple-clang@13.1.6~gsl+rngstreams+shared arch=darwin-monterey-m1; [+] ^rngstreams@1.0.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^vdt@0.4.3%apple-clang@13.1.6~ipo~preload build_type=RelWithDebInfo arch=darwin-monterey-m1; [+] ^python@3.9.13%apple-clang@13.1.6+bz2+ctypes+dbm~debug+libxml2+lzma~nis~optimizations+pic+pyexpat+pythoncmd+readline+shared+sqlite3+ssl~tix~tkinter~ucs4+uuid+zlib patches=0d98e93,4c24573,f2fd060 arch=darwin-monterey-m1; [+] ^apple-libuuid@1353.100.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^bzip2@1.0.8%apple-clang@13.1.6~debug~pic+shared arch=darwin-monterey-m1; [+] ^gdbm@1.23%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^readline@8.1.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^ncurses@5.7.20081102%apple-clang@13.1.6~symlinks+termlib abi=5 patches=f84b270 arch=darwin-monterey-m1; [+] ^gettext@0.21%apple-clang@13.1.6+bzip2+curses+git~libunistring+libxml2+tar+xz arch=darwin-monterey-m1; [+] ^sqlite@3.39.2%apple-clang@13.1.6+column_metadata+dynamic_extensions+fts~functions+rtree arch=darwin-monterey-m1; [+] ^xz@5.2.5%apple-clang@13.1.6~pic libs=shared,static arch=darwin-monterey-m1; [+] ^xxhash@0.8.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^zstd@1.5.2%apple-clang@13.1.6~programs libs=shared,static arch=darwin-monterey-m1; </pre></details>. which results in the cmake command:; <details><summary>cmake",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11312
https://github.com/root-project/root/issues/11312:9935,Security,certificate,certificates-mozilla,9935,"r~ilp64+locking+pic+shared symbol_suffix=none threads=none arch=darwin-monterey-m1; [+] ^perl@5.30.3%apple-clang@13.1.6~cpanm+shared+threads arch=darwin-monterey-m1; [+] ^pcre@8.45%apple-clang@13.1.6~jit+multibyte+utf arch=darwin-monterey-m1; [+] ^python@3.9.13%apple-clang@13.1.6+bz2+ctypes+dbm~debug+libxml2+lzma~nis~optimizations+pic+pyexpat+pythoncmd+readline+shared+sqlite3+ssl~tix~tkinter~ucs4+uuid+zlib patches=0d98e93,4c24573,f2fd060 arch=darwin-monterey-m1; [+] ^apple-libuuid@1353.100.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^expat@2.4.8%apple-clang@13.1.6~libbsd arch=darwin-monterey-m1; [+] ^gdbm@1.23%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^readline@8.1.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^gettext@0.21%apple-clang@13.1.6+bzip2+curses+git~libunistring+libxml2+tar+xz arch=darwin-monterey-m1; [+] ^libffi@3.4.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^openssl@1.1.1q%apple-clang@13.1.6~docs~shared certs=mozilla patches=3fdcf2d arch=darwin-monterey-m1; [+] ^ca-certificates-mozilla@2022-07-19%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^sqlite@3.39.2%apple-clang@13.1.6+column_metadata+dynamic_extensions+fts~functions+rtree arch=darwin-monterey-m1; [+] ^unuran@1.8.1%apple-clang@13.1.6~gsl+rngstreams+shared arch=darwin-monterey-m1; [+] ^rngstreams@1.0.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^vdt@0.4.3%apple-clang@13.1.6~ipo~preload build_type=RelWithDebInfo arch=darwin-monterey-m1; [+] ^python@3.9.13%apple-clang@13.1.6+bz2+ctypes+dbm~debug+libxml2+lzma~nis~optimizations+pic+pyexpat+pythoncmd+readline+shared+sqlite3+ssl~tix~tkinter~ucs4+uuid+zlib patches=0d98e93,4c24573,f2fd060 arch=darwin-monterey-m1; [+] ^apple-libuuid@1353.100.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^bzip2@1.0.8%apple-clang@13.1.6~debug~pic+shared arch=darwin-monterey-m1; [+] ^gdbm@1.23%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^readline@8.1.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^ncurses@5.7.20081102%apple-clang@13.1.6~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11312
https://github.com/root-project/root/pull/11313:419,Deployability,update,updated,419,"# This Pull request:. Discovered that in 6.26 verbose print of lots of classes doesn't work. e.g. you can do:. ```; RooWorkspace ws;; ws.factory(""SUM::model(RooExponential::pdf1(obs1[0,5],tau1[-1]))""); ; ws.pdf(""model"")->Print(""v""); ```. and it will crash. ## Changes or fixes:; Fixes verbose printout of roofit object that uses RooListProxy (lots of classes do). . ## Checklist:. - [x ] tested changes locally; - [x ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11313
https://github.com/root-project/root/pull/11313:388,Testability,test,tested,388,"# This Pull request:. Discovered that in 6.26 verbose print of lots of classes doesn't work. e.g. you can do:. ```; RooWorkspace ws;; ws.factory(""SUM::model(RooExponential::pdf1(obs1[0,5],tau1[-1]))""); ; ws.pdf(""model"")->Print(""v""); ```. and it will crash. ## Changes or fixes:; Fixes verbose printout of roofit object that uses RooListProxy (lots of classes do). . ## Checklist:. - [x ] tested changes locally; - [x ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11313
https://github.com/root-project/root/pull/11317:111,Deployability,update,updated,111,# This Pull request: Adds ConcatFromSequence ONNX Operator. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11317
https://github.com/root-project/root/pull/11317:81,Testability,test,tested,81,# This Pull request: Adds ConcatFromSequence ONNX Operator. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11317
https://github.com/root-project/root/issues/11318:119,Security,Checksum,Checksum,119,"[the spec](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) only says:; > CRC32: Checksum of the envelope and the payload. which has multiple possible interpretation, the most straightforward one being crc32 is calculated by using the bytes of the entire header?; https://github.com/root-project/root/blob/0bb465e60960efea6ddfe1d16b98767104df273e/tree/ntuple/v7/src/RNTupleSerialize.cxx#L261-L270. maybe we can document how the crc32 is calculated in this 2-step (?) process inside the spec? cc @jpivarski . ref: https://github.com/scikit-hep/uproot5/pull/705",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11318
https://github.com/root-project/root/pull/11321:93,Testability,test,test,93,...as well as in TNetFile and TWebFile.; This fixes #10742. @pcanal can you please suggest a test?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11321
https://github.com/root-project/root/pull/11322:10,Deployability,patch,patch,10,With this patch we create chains with kWithoutGlobalRegistration in; RDF's constructors -- this is the chain object that RDF uses for; single-thread runs and to look up which branches exist and other; information about the input dataset. The deregistration of that chain from the global lists can take; some time in certain cases. This PR depends (and is based) on #11321 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11322
https://github.com/root-project/root/pull/11322:339,Integrability,depend,depends,339,With this patch we create chains with kWithoutGlobalRegistration in; RDF's constructors -- this is the chain object that RDF uses for; single-thread runs and to look up which branches exist and other; information about the input dataset. The deregistration of that chain from the global lists can take; some time in certain cases. This PR depends (and is based) on #11321 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11322
https://github.com/root-project/root/pull/11323:169,Availability,error,error,169,"There is a constructor of the RooAddPdf that takes no coefficients and; only a list of PDFs. This only makes sense if all of the PDFs are; extendible. Indeed, there are error messages when a PDF is not; extendible, but it would be better to throw an exception because this is; an error that will certainly break your model. This change is inspired by the following forum post:; https://root-forum.cern.ch/t/roofftconvpdf-not-working-in-product-with-rooaddpdf-even-in-new-root-versions/51442. One user error that resulted in the post was using the no-coefficient constructor with non-extendible PDFs, which would have been prevented by throwing an error as suggested in this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11323
https://github.com/root-project/root/pull/11323:280,Availability,error,error,280,"There is a constructor of the RooAddPdf that takes no coefficients and; only a list of PDFs. This only makes sense if all of the PDFs are; extendible. Indeed, there are error messages when a PDF is not; extendible, but it would be better to throw an exception because this is; an error that will certainly break your model. This change is inspired by the following forum post:; https://root-forum.cern.ch/t/roofftconvpdf-not-working-in-product-with-rooaddpdf-even-in-new-root-versions/51442. One user error that resulted in the post was using the no-coefficient constructor with non-extendible PDFs, which would have been prevented by throwing an error as suggested in this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11323
https://github.com/root-project/root/pull/11323:501,Availability,error,error,501,"There is a constructor of the RooAddPdf that takes no coefficients and; only a list of PDFs. This only makes sense if all of the PDFs are; extendible. Indeed, there are error messages when a PDF is not; extendible, but it would be better to throw an exception because this is; an error that will certainly break your model. This change is inspired by the following forum post:; https://root-forum.cern.ch/t/roofftconvpdf-not-working-in-product-with-rooaddpdf-even-in-new-root-versions/51442. One user error that resulted in the post was using the no-coefficient constructor with non-extendible PDFs, which would have been prevented by throwing an error as suggested in this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11323
https://github.com/root-project/root/pull/11323:647,Availability,error,error,647,"There is a constructor of the RooAddPdf that takes no coefficients and; only a list of PDFs. This only makes sense if all of the PDFs are; extendible. Indeed, there are error messages when a PDF is not; extendible, but it would be better to throw an exception because this is; an error that will certainly break your model. This change is inspired by the following forum post:; https://root-forum.cern.ch/t/roofftconvpdf-not-working-in-product-with-rooaddpdf-even-in-new-root-versions/51442. One user error that resulted in the post was using the no-coefficient constructor with non-extendible PDFs, which would have been prevented by throwing an error as suggested in this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11323
https://github.com/root-project/root/pull/11323:175,Integrability,message,messages,175,"There is a constructor of the RooAddPdf that takes no coefficients and; only a list of PDFs. This only makes sense if all of the PDFs are; extendible. Indeed, there are error messages when a PDF is not; extendible, but it would be better to throw an exception because this is; an error that will certainly break your model. This change is inspired by the following forum post:; https://root-forum.cern.ch/t/roofftconvpdf-not-working-in-product-with-rooaddpdf-even-in-new-root-versions/51442. One user error that resulted in the post was using the no-coefficient constructor with non-extendible PDFs, which would have been prevented by throwing an error as suggested in this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11323
https://github.com/root-project/root/pull/11323:139,Modifiability,extend,extendible,139,"There is a constructor of the RooAddPdf that takes no coefficients and; only a list of PDFs. This only makes sense if all of the PDFs are; extendible. Indeed, there are error messages when a PDF is not; extendible, but it would be better to throw an exception because this is; an error that will certainly break your model. This change is inspired by the following forum post:; https://root-forum.cern.ch/t/roofftconvpdf-not-working-in-product-with-rooaddpdf-even-in-new-root-versions/51442. One user error that resulted in the post was using the no-coefficient constructor with non-extendible PDFs, which would have been prevented by throwing an error as suggested in this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11323
https://github.com/root-project/root/pull/11323:203,Modifiability,extend,extendible,203,"There is a constructor of the RooAddPdf that takes no coefficients and; only a list of PDFs. This only makes sense if all of the PDFs are; extendible. Indeed, there are error messages when a PDF is not; extendible, but it would be better to throw an exception because this is; an error that will certainly break your model. This change is inspired by the following forum post:; https://root-forum.cern.ch/t/roofftconvpdf-not-working-in-product-with-rooaddpdf-even-in-new-root-versions/51442. One user error that resulted in the post was using the no-coefficient constructor with non-extendible PDFs, which would have been prevented by throwing an error as suggested in this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11323
https://github.com/root-project/root/pull/11323:583,Modifiability,extend,extendible,583,"There is a constructor of the RooAddPdf that takes no coefficients and; only a list of PDFs. This only makes sense if all of the PDFs are; extendible. Indeed, there are error messages when a PDF is not; extendible, but it would be better to throw an exception because this is; an error that will certainly break your model. This change is inspired by the following forum post:; https://root-forum.cern.ch/t/roofftconvpdf-not-working-in-product-with-rooaddpdf-even-in-new-root-versions/51442. One user error that resulted in the post was using the no-coefficient constructor with non-extendible PDFs, which would have been prevented by throwing an error as suggested in this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11323
https://github.com/root-project/root/pull/11325:573,Deployability,update,updated,573,* [cmake] Fix dependency of some TMVA_SOFIE tutorials. * [tmva] Set unique model file names for tutorials. The tutorials were using the same model file name and this was causing a problem when running the tutorials in parallel as in the CI builds. Fix also some deprectations happening when using now the new Keras version based on tensorflow.keras Fix dependency also for Python Keras tutorials. Disable also Regression Keras tutorials in CI builds since they are too slow for the regression evaluation on single events. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11325
https://github.com/root-project/root/pull/11325:14,Integrability,depend,dependency,14,* [cmake] Fix dependency of some TMVA_SOFIE tutorials. * [tmva] Set unique model file names for tutorials. The tutorials were using the same model file name and this was causing a problem when running the tutorials in parallel as in the CI builds. Fix also some deprectations happening when using now the new Keras version based on tensorflow.keras Fix dependency also for Python Keras tutorials. Disable also Regression Keras tutorials in CI builds since they are too slow for the regression evaluation on single events. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11325
https://github.com/root-project/root/pull/11325:353,Integrability,depend,dependency,353,* [cmake] Fix dependency of some TMVA_SOFIE tutorials. * [tmva] Set unique model file names for tutorials. The tutorials were using the same model file name and this was causing a problem when running the tutorials in parallel as in the CI builds. Fix also some deprectations happening when using now the new Keras version based on tensorflow.keras Fix dependency also for Python Keras tutorials. Disable also Regression Keras tutorials in CI builds since they are too slow for the regression evaluation on single events. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11325
https://github.com/root-project/root/pull/11325:543,Testability,test,tested,543,* [cmake] Fix dependency of some TMVA_SOFIE tutorials. * [tmva] Set unique model file names for tutorials. The tutorials were using the same model file name and this was causing a problem when running the tutorials in parallel as in the CI builds. Fix also some deprectations happening when using now the new Keras version based on tensorflow.keras Fix dependency also for Python Keras tutorials. Disable also Regression Keras tutorials in CI builds since they are too slow for the regression evaluation on single events. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11325
https://github.com/root-project/root/pull/11326:11,Availability,failure,failure,11,"I.e. [this failure](https://github.com/root-project/root/pull/11314#issuecomment-1238128791), which should be completely unrelated to the changes in the corresponding PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11326
https://github.com/root-project/root/pull/11328:24,Deployability,Update,Update,24,# This Pull request:. * Update XRootD builtin from v5.4.3 to v5.5.0; - c.f. https://github.com/xrootd/xrootd/releases/tag/v5.5.0; * Follow up to https://github.com/root-project/root/pull/10725. ## Changes or fixes:. * Update XRootD builtin from v5.4.3 to v5.5.0; - c.f. https://github.com/xrootd/xrootd/issues/1751 for details. ## Checklist:. - [x] tested changes locally. I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/73 for a source build with effectively this change). - [N/A] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11328
https://github.com/root-project/root/pull/11328:109,Deployability,release,releases,109,# This Pull request:. * Update XRootD builtin from v5.4.3 to v5.5.0; - c.f. https://github.com/xrootd/xrootd/releases/tag/v5.5.0; * Follow up to https://github.com/root-project/root/pull/10725. ## Changes or fixes:. * Update XRootD builtin from v5.4.3 to v5.5.0; - c.f. https://github.com/xrootd/xrootd/issues/1751 for details. ## Checklist:. - [x] tested changes locally. I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/73 for a source build with effectively this change). - [N/A] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11328
https://github.com/root-project/root/pull/11328:218,Deployability,Update,Update,218,# This Pull request:. * Update XRootD builtin from v5.4.3 to v5.5.0; - c.f. https://github.com/xrootd/xrootd/releases/tag/v5.5.0; * Follow up to https://github.com/root-project/root/pull/10725. ## Changes or fixes:. * Update XRootD builtin from v5.4.3 to v5.5.0; - c.f. https://github.com/xrootd/xrootd/issues/1751 for details. ## Checklist:. - [x] tested changes locally. I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/73 for a source build with effectively this change). - [N/A] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11328
https://github.com/root-project/root/pull/11328:541,Deployability,update,updated,541,# This Pull request:. * Update XRootD builtin from v5.4.3 to v5.5.0; - c.f. https://github.com/xrootd/xrootd/releases/tag/v5.5.0; * Follow up to https://github.com/root-project/root/pull/10725. ## Changes or fixes:. * Update XRootD builtin from v5.4.3 to v5.5.0; - c.f. https://github.com/xrootd/xrootd/issues/1751 for details. ## Checklist:. - [x] tested changes locally. I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/73 for a source build with effectively this change). - [N/A] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11328
https://github.com/root-project/root/pull/11328:349,Testability,test,tested,349,# This Pull request:. * Update XRootD builtin from v5.4.3 to v5.5.0; - c.f. https://github.com/xrootd/xrootd/releases/tag/v5.5.0; * Follow up to https://github.com/root-project/root/pull/10725. ## Changes or fixes:. * Update XRootD builtin from v5.4.3 to v5.5.0; - c.f. https://github.com/xrootd/xrootd/issues/1751 for details. ## Checklist:. - [x] tested changes locally. I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/73 for a source build with effectively this change). - [N/A] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11328
https://github.com/root-project/root/issues/11329:4,Availability,Failure,Failure,4,"The Failure is visible on the GCC 12 / Fedora 36 build: https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3285/LABEL=ROOT-fedora36,SPEC=default,V=master/testReport/junit/projectroot.roottest.root.tree/branches/roottest_root_tree_branches_make/; for example:; ```; +Error in <TTree::Branch>: The class requested (vector<int>) for the branch ""vec"" is an instance of an stl collection and does not have a compiled CollectionProxy. Please generate the dictionary for this collection (vector<int>) to avoid to write corrupted data.; ```; This indicates that the generation of the dictionary for `std::vector<int>` failed even-though it is explicitly requested as part of the G__Core.cxx dictionary. . And indeed when inspecting the build log we see for `G__Core.cxx`:; ```; Warning: Unused class rule: vector<Int_t> ; ```. I narrowed down the problem to the presence of:; ```; -cxxmodule -s /home/sftnight/build/manual/build/lib/libCore.so -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes ; ```; on the command line. And it can easily be reproduce with the files:; ```; // a.h; #include <vector>; ```; and; ```; // aLinkDef.h ; #pragma link C++ class vector<Int_t>+;; ```; and with; ```; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx a.h aLinkDef.h; ```; we get a proper dictionary for the vector. While with; ```; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /home/sftnight/build/manual/build/lib/libCore.so -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes a.h aLinkDef.h ; ```; we get an empty dictionary and the warning:. ```; Warning: Unused class rule: vector<Int_t> ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11329
https://github.com/root-project/root/issues/11329:284,Availability,Error,Error,284,"The Failure is visible on the GCC 12 / Fedora 36 build: https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3285/LABEL=ROOT-fedora36,SPEC=default,V=master/testReport/junit/projectroot.roottest.root.tree/branches/roottest_root_tree_branches_make/; for example:; ```; +Error in <TTree::Branch>: The class requested (vector<int>) for the branch ""vec"" is an instance of an stl collection and does not have a compiled CollectionProxy. Please generate the dictionary for this collection (vector<int>) to avoid to write corrupted data.; ```; This indicates that the generation of the dictionary for `std::vector<int>` failed even-though it is explicitly requested as part of the G__Core.cxx dictionary. . And indeed when inspecting the build log we see for `G__Core.cxx`:; ```; Warning: Unused class rule: vector<Int_t> ; ```. I narrowed down the problem to the presence of:; ```; -cxxmodule -s /home/sftnight/build/manual/build/lib/libCore.so -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes ; ```; on the command line. And it can easily be reproduce with the files:; ```; // a.h; #include <vector>; ```; and; ```; // aLinkDef.h ; #pragma link C++ class vector<Int_t>+;; ```; and with; ```; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx a.h aLinkDef.h; ```; we get a proper dictionary for the vector. While with; ```; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /home/sftnight/build/manual/build/lib/libCore.so -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes a.h aLinkDef.h ; ```; we get an empty dictionary and the warning:. ```; Warning: Unused class rule: vector<Int_t> ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11329
https://github.com/root-project/root/issues/11329:848,Availability,down,down,848,"The Failure is visible on the GCC 12 / Fedora 36 build: https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3285/LABEL=ROOT-fedora36,SPEC=default,V=master/testReport/junit/projectroot.roottest.root.tree/branches/roottest_root_tree_branches_make/; for example:; ```; +Error in <TTree::Branch>: The class requested (vector<int>) for the branch ""vec"" is an instance of an stl collection and does not have a compiled CollectionProxy. Please generate the dictionary for this collection (vector<int>) to avoid to write corrupted data.; ```; This indicates that the generation of the dictionary for `std::vector<int>` failed even-though it is explicitly requested as part of the G__Core.cxx dictionary. . And indeed when inspecting the build log we see for `G__Core.cxx`:; ```; Warning: Unused class rule: vector<Int_t> ; ```. I narrowed down the problem to the presence of:; ```; -cxxmodule -s /home/sftnight/build/manual/build/lib/libCore.so -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes ; ```; on the command line. And it can easily be reproduce with the files:; ```; // a.h; #include <vector>; ```; and; ```; // aLinkDef.h ; #pragma link C++ class vector<Int_t>+;; ```; and with; ```; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx a.h aLinkDef.h; ```; we get a proper dictionary for the vector. While with; ```; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /home/sftnight/build/manual/build/lib/libCore.so -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes a.h aLinkDef.h ; ```; we get an empty dictionary and the warning:. ```; Warning: Unused class rule: vector<Int_t> ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11329
https://github.com/root-project/root/issues/11329:515,Safety,avoid,avoid,515,"The Failure is visible on the GCC 12 / Fedora 36 build: https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3285/LABEL=ROOT-fedora36,SPEC=default,V=master/testReport/junit/projectroot.roottest.root.tree/branches/roottest_root_tree_branches_make/; for example:; ```; +Error in <TTree::Branch>: The class requested (vector<int>) for the branch ""vec"" is an instance of an stl collection and does not have a compiled CollectionProxy. Please generate the dictionary for this collection (vector<int>) to avoid to write corrupted data.; ```; This indicates that the generation of the dictionary for `std::vector<int>` failed even-though it is explicitly requested as part of the G__Core.cxx dictionary. . And indeed when inspecting the build log we see for `G__Core.cxx`:; ```; Warning: Unused class rule: vector<Int_t> ; ```. I narrowed down the problem to the presence of:; ```; -cxxmodule -s /home/sftnight/build/manual/build/lib/libCore.so -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes ; ```; on the command line. And it can easily be reproduce with the files:; ```; // a.h; #include <vector>; ```; and; ```; // aLinkDef.h ; #pragma link C++ class vector<Int_t>+;; ```; and with; ```; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx a.h aLinkDef.h; ```; we get a proper dictionary for the vector. While with; ```; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /home/sftnight/build/manual/build/lib/libCore.so -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes a.h aLinkDef.h ; ```; we get an empty dictionary and the warning:. ```; Warning: Unused class rule: vector<Int_t> ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11329
https://github.com/root-project/root/issues/11329:172,Testability,test,testReport,172,"The Failure is visible on the GCC 12 / Fedora 36 build: https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3285/LABEL=ROOT-fedora36,SPEC=default,V=master/testReport/junit/projectroot.roottest.root.tree/branches/roottest_root_tree_branches_make/; for example:; ```; +Error in <TTree::Branch>: The class requested (vector<int>) for the branch ""vec"" is an instance of an stl collection and does not have a compiled CollectionProxy. Please generate the dictionary for this collection (vector<int>) to avoid to write corrupted data.; ```; This indicates that the generation of the dictionary for `std::vector<int>` failed even-though it is explicitly requested as part of the G__Core.cxx dictionary. . And indeed when inspecting the build log we see for `G__Core.cxx`:; ```; Warning: Unused class rule: vector<Int_t> ; ```. I narrowed down the problem to the presence of:; ```; -cxxmodule -s /home/sftnight/build/manual/build/lib/libCore.so -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes ; ```; on the command line. And it can easily be reproduce with the files:; ```; // a.h; #include <vector>; ```; and; ```; // aLinkDef.h ; #pragma link C++ class vector<Int_t>+;; ```; and with; ```; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx a.h aLinkDef.h; ```; we get a proper dictionary for the vector. While with; ```; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /home/sftnight/build/manual/build/lib/libCore.so -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes a.h aLinkDef.h ; ```; we get an empty dictionary and the warning:. ```; Warning: Unused class rule: vector<Int_t> ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11329
https://github.com/root-project/root/issues/11329:752,Testability,log,log,752,"The Failure is visible on the GCC 12 / Fedora 36 build: https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3285/LABEL=ROOT-fedora36,SPEC=default,V=master/testReport/junit/projectroot.roottest.root.tree/branches/roottest_root_tree_branches_make/; for example:; ```; +Error in <TTree::Branch>: The class requested (vector<int>) for the branch ""vec"" is an instance of an stl collection and does not have a compiled CollectionProxy. Please generate the dictionary for this collection (vector<int>) to avoid to write corrupted data.; ```; This indicates that the generation of the dictionary for `std::vector<int>` failed even-though it is explicitly requested as part of the G__Core.cxx dictionary. . And indeed when inspecting the build log we see for `G__Core.cxx`:; ```; Warning: Unused class rule: vector<Int_t> ; ```. I narrowed down the problem to the presence of:; ```; -cxxmodule -s /home/sftnight/build/manual/build/lib/libCore.so -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes ; ```; on the command line. And it can easily be reproduce with the files:; ```; // a.h; #include <vector>; ```; and; ```; // aLinkDef.h ; #pragma link C++ class vector<Int_t>+;; ```; and with; ```; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx a.h aLinkDef.h; ```; we get a proper dictionary for the vector. While with; ```; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /home/sftnight/build/manual/build/lib/libCore.so -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes a.h aLinkDef.h ; ```; we get an empty dictionary and the warning:. ```; Warning: Unused class rule: vector<Int_t> ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11329
https://github.com/root-project/root/issues/11330:1754,Availability,failure,failure,1754,"#2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend the core library to detect when there is a memory checker (or similar) that leads to the memory being salted after a delete and in that case disable our own already-deleted test (since it is now ineffective anyway and assumingly it is already doing the job of warning the user about use-after-delete). And subsequently the test needs to also be disabled in those cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11330
https://github.com/root-project/root/issues/11330:1994,Modifiability,extend,extend,1994,"#2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend the core library to detect when there is a memory checker (or similar) that leads to the memory being salted after a delete and in that case disable our own already-deleted test (since it is now ineffective anyway and assumingly it is already doing the job of warning the user about use-after-delete). And subsequently the test needs to also be disabled in those cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11330
https://github.com/root-project/root/issues/11330:418,Performance,optimiz,optimized,418,"Full discussion at https://github.com/root-project/roottest/pull/880 . Taking a look with `gdb` it looks like `kNotDeleted` is reset, but then those bits are immediately modified again by `_int_free`:. ```cpp; #0 tcache_put (tc_idx=0, chunk=0x55555562e400) at malloc.c:3183; #1 _int_free (av=0x7ffff4dfdbc0 <main_arena>, p=0x55555562e400, have_lock=0) at malloc.c:4481; #2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11330
https://github.com/root-project/root/issues/11330:744,Performance,optimiz,optimized,744,"Full discussion at https://github.com/root-project/roottest/pull/880 . Taking a look with `gdb` it looks like `kNotDeleted` is reset, but then those bits are immediately modified again by `_int_free`:. ```cpp; #0 tcache_put (tc_idx=0, chunk=0x55555562e400) at malloc.c:3183; #1 _int_free (av=0x7ffff4dfdbc0 <main_arena>, p=0x55555562e400, have_lock=0) at malloc.c:4481; #2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11330
https://github.com/root-project/root/issues/11330:1260,Safety,detect,detect,1260,"bits are immediately modified again by `_int_free`:. ```cpp; #0 tcache_put (tc_idx=0, chunk=0x55555562e400) at malloc.c:3183; #1 _int_free (av=0x7ffff4dfdbc0 <main_arena>, p=0x55555562e400, have_lock=0) at malloc.c:4481; #2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend the core library to detect when there is a memory checker (or similar) that leads to the memory being salted after a delete and in that case disable ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11330
https://github.com/root-project/root/issues/11330:2021,Safety,detect,detect,2021,"#2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend the core library to detect when there is a memory checker (or similar) that leads to the memory being salted after a delete and in that case disable our own already-deleted test (since it is now ineffective anyway and assumingly it is already doing the job of warning the user about use-after-delete). And subsequently the test needs to also be disabled in those cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11330
https://github.com/root-project/root/issues/11330:1231,Testability,test,test,1231,"bits are immediately modified again by `_int_free`:. ```cpp; #0 tcache_put (tc_idx=0, chunk=0x55555562e400) at malloc.c:3183; #1 _int_free (av=0x7ffff4dfdbc0 <main_arena>, p=0x55555562e400, have_lock=0) at malloc.c:4481; #2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend the core library to detect when there is a memory checker (or similar) that leads to the memory being salted after a delete and in that case disable ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11330
https://github.com/root-project/root/issues/11330:1413,Testability,test,test,1413,"#2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend the core library to detect when there is a memory checker (or similar) that leads to the memory being salted after a delete and in that case disable our own already-deleted test (since it is now ineffective anyway and assumingly it is already doing the job of warning the user about use-after-delete). And subsequently the test needs to also be disabled in those cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11330
https://github.com/root-project/root/issues/11330:1749,Testability,test,test,1749,"#2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend the core library to detect when there is a memory checker (or similar) that leads to the memory being salted after a delete and in that case disable our own already-deleted test (since it is now ineffective anyway and assumingly it is already doing the job of warning the user about use-after-delete). And subsequently the test needs to also be disabled in those cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11330
https://github.com/root-project/root/issues/11330:2174,Testability,test,test,2174,"#2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend the core library to detect when there is a memory checker (or similar) that leads to the memory being salted after a delete and in that case disable our own already-deleted test (since it is now ineffective anyway and assumingly it is already doing the job of warning the user about use-after-delete). And subsequently the test needs to also be disabled in those cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11330
https://github.com/root-project/root/issues/11330:2324,Testability,test,test,2324,"#2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend the core library to detect when there is a memory checker (or similar) that leads to the memory being salted after a delete and in that case disable our own already-deleted test (since it is now ineffective anyway and assumingly it is already doing the job of warning the user about use-after-delete). And subsequently the test needs to also be disabled in those cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11330
https://github.com/root-project/root/issues/11330:1665,Usability,Clear,Clear,1665,"#2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend the core library to detect when there is a memory checker (or similar) that leads to the memory being salted after a delete and in that case disable our own already-deleted test (since it is now ineffective anyway and assumingly it is already doing the job of warning the user about use-after-delete). And subsequently the test needs to also be disabled in those cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11330
https://github.com/root-project/root/issues/11332:3091,Availability,down,download,3091,"de that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```c++; void test_batchmodecond() {; using namespace RooFit;. RooRealVar x(""x"", """", 0, 1);; RooRealVar xErr(""xErr"", """", 0.0001, 0.1);. RooGaussModel gm(""gm"", """", x, RooConst(0), xErr);; ; RooRealVar tau(""tau"", """", 0.4, 0, 1);; RooDecay decayPdf(""decayPdf"", """", x, tau, gm, RooDecay::SingleSided);; ; RooGamma errPdf(""errPdf"", """", xErr, RooConst(4), RooConst(0.005), RooConst(0));; ; ; RooProdPdf pdf1(""pdf1"", """", RooArgSet(errPdf), Conditional(decayPdf, x, false)); // what we want: decayPdf(x|xErr)*errPdf(xErr); RooProdPdf pdf2(""pdf2"", """", RooArgSet(errPdf), Conditional(decayPdf, xErr, true)); // in theory the same as pdf1; RooProdPdf pdf3(""pdf3"", """", RooArgSet(errPdf), Conditional(decayPdf, xErr, false)); // wrong, normalizes decay in xErr and not in x; ; auto data = pdf1.generate(RooArgSet(x, xErr), NumEvents(10000));; ; // works with BatchMode = ""cpu"", because depsAreCond is false; pdf1.fitTo(*data; , Save(true); , BatchMode(""cpu""); , PrintLevel(-1); )->Print(""V"");; ; // bad fit, actually normalizes as if decayPdf was normalized in xErr (ignores depsAreCond); tau.setVal(0.4);; pdf2.fitTo(*data; , Save(true); , BatchMode(""cpu""); , PrintLevel(-1); )->Print(""V"");; ; // works without batchmode; tau.setVal(0.4);; pdf2.fitTo(*data; , Save(true); //, BatchMode(""cpu""); , PrintLevel(-1); )->Print(""V"");; ; // same as pdf2 with BatchMode; tau.setVal(0.4);; pdf3.fitTo(*data; , Save(true); , BatchMode(""cpu""); , PrintLevel(-1); )->Print(""V"");; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master, from LCG dev3; ROOT 6.26.07 from LCG dev4; works in ROOT 6.24.06 from LCG 101. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11332
https://github.com/root-project/root/issues/11332:3073,Deployability,install,install,3073,"de that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```c++; void test_batchmodecond() {; using namespace RooFit;. RooRealVar x(""x"", """", 0, 1);; RooRealVar xErr(""xErr"", """", 0.0001, 0.1);. RooGaussModel gm(""gm"", """", x, RooConst(0), xErr);; ; RooRealVar tau(""tau"", """", 0.4, 0, 1);; RooDecay decayPdf(""decayPdf"", """", x, tau, gm, RooDecay::SingleSided);; ; RooGamma errPdf(""errPdf"", """", xErr, RooConst(4), RooConst(0.005), RooConst(0));; ; ; RooProdPdf pdf1(""pdf1"", """", RooArgSet(errPdf), Conditional(decayPdf, x, false)); // what we want: decayPdf(x|xErr)*errPdf(xErr); RooProdPdf pdf2(""pdf2"", """", RooArgSet(errPdf), Conditional(decayPdf, xErr, true)); // in theory the same as pdf1; RooProdPdf pdf3(""pdf3"", """", RooArgSet(errPdf), Conditional(decayPdf, xErr, false)); // wrong, normalizes decay in xErr and not in x; ; auto data = pdf1.generate(RooArgSet(x, xErr), NumEvents(10000));; ; // works with BatchMode = ""cpu"", because depsAreCond is false; pdf1.fitTo(*data; , Save(true); , BatchMode(""cpu""); , PrintLevel(-1); )->Print(""V"");; ; // bad fit, actually normalizes as if decayPdf was normalized in xErr (ignores depsAreCond); tau.setVal(0.4);; pdf2.fitTo(*data; , Save(true); , BatchMode(""cpu""); , PrintLevel(-1); )->Print(""V"");; ; // works without batchmode; tau.setVal(0.4);; pdf2.fitTo(*data; , Save(true); //, BatchMode(""cpu""); , PrintLevel(-1); )->Print(""V"");; ; // same as pdf2 with BatchMode; tau.setVal(0.4);; pdf3.fitTo(*data; , Save(true); , BatchMode(""cpu""); , PrintLevel(-1); )->Print(""V"");; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master, from LCG dev3; ROOT 6.26.07 from LCG dev4; works in ROOT 6.24.06 from LCG 101. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11332
https://github.com/root-project/root/issues/11332:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; RooProdPdf can accept the parameter Conditional, which tells RooFit what observables this pdf needs to be normalized on. ; This parameter has two forms:; * pdf, normalization observables, depsAreCond = false (default); * pdf, conditional observables, depsAreCond = true. The two forms are supposed to be identical if {conditional observables} = {all observables} - {normalization observables}.; This is true when not using BatchMode. With BatchMode on (cpu) instead what happens is that depsAreCond is always considered false and the pdf behaves as if conditional observables were normalization. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No difference between the two forms of the RooProdPdf, even when using BatchMode. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```c++; void test_batchmodecond() {; using namespace RooFit;. RooRealVar x(""x"", """", 0, 1);; RooRealVar xErr(""xErr"", """", 0.0001, 0.1);. RooGaussModel gm(""gm"", """", x, RooConst(0), xErr);; ; RooRealVar tau(""tau"", """", 0.4, 0, 1);; RooDecay decayPdf(""decayPdf"", """", x, tau, gm, RooDecay::SingleSided);; ; RooGamma errPdf(""errPdf"", """", xErr, RooConst(4), RooConst(0.005), RooConst(0));; ; ; RooProdPdf pdf1(""pdf1"", """", RooArgSet(errPdf), Conditional(decayPdf, x, false)); // what we want: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11332
https://github.com/root-project/root/issues/11332:1085,Usability,clear,clear,1085,"ot/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; RooProdPdf can accept the parameter Conditional, which tells RooFit what observables this pdf needs to be normalized on. ; This parameter has two forms:; * pdf, normalization observables, depsAreCond = false (default); * pdf, conditional observables, depsAreCond = true. The two forms are supposed to be identical if {conditional observables} = {all observables} - {normalization observables}.; This is true when not using BatchMode. With BatchMode on (cpu) instead what happens is that depsAreCond is always considered false and the pdf behaves as if conditional observables were normalization. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No difference between the two forms of the RooProdPdf, even when using BatchMode. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```c++; void test_batchmodecond() {; using namespace RooFit;. RooRealVar x(""x"", """", 0, 1);; RooRealVar xErr(""xErr"", """", 0.0001, 0.1);. RooGaussModel gm(""gm"", """", x, RooConst(0), xErr);; ; RooRealVar tau(""tau"", """", 0.4, 0, 1);; RooDecay decayPdf(""decayPdf"", """", x, tau, gm, RooDecay::SingleSided);; ; RooGamma errPdf(""errPdf"", """", xErr, RooConst(4), RooConst(0.005), RooConst(0));; ; ; RooProdPdf pdf1(""pdf1"", """", RooArgSet(errPdf), Conditional(decayPdf, x, false)); // what we want: decayPdf(x|xErr)*errPdf(xErr); RooProdPdf pdf2(""pdf2"", """", RooArgSet(errPdf), Conditional(decayPdf,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11332
https://github.com/root-project/root/issues/11333:1200,Availability,error,error,1200,"ghts of the first histogram, ignoring the second. ### Expected behavior. The sum of weights should include the weights of both histograms that were added together. ### To Reproduce. The script is here: https://www.dropbox.com/s/j5wvixrmdtdx3b5/testTHNadd.C?dl=0; (GitHub apparently does not allow attaching .C files). ```bash; root -b -l -q testTHNadd.C; ```. This script shows the bug by comparing two cases:; 1. Filling one histogram twice; 2. Filling two histograms once and adding them. The output is:; ```; THnSparseT<TArrayD> (*0x6c127c0): ""hs"" ""CASE 1""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:2247,Availability,error,error,2247,"3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=0.5, Sum(w^2)=0.25; axis 0: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 1: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 2: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 3: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 4: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 5: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 6: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 7: Sum(w*x)=0.5, Sum(w*x^2)=0.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 0.5; ```. ### Setup. 1. ROOT versions: tested 6.06.00, 6.12.07, 6.24.07 (all have the bug); 2. Scientific Linux 7.9, AlmaLinux 8.6; 4. From CMSSW on cvmfs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:837,Modifiability,variab,variable,837,"### Describe the bug. When adding two histograms, the weights associated with the bin contents of those histograms should also be added appropriately. `THnSparse` does not do this. It still reports the weights of the first histogram, ignoring the second. ### Expected behavior. The sum of weights should include the weights of both histograms that were added together. ### To Reproduce. The script is here: https://www.dropbox.com/s/j5wvixrmdtdx3b5/testTHNadd.C?dl=0; (GitHub apparently does not allow attaching .C files). ```bash; root -b -l -q testTHNadd.C; ```. This script shows the bug by comparing two cases:; 1. Filling one histogram twice; 2. Filling two histograms once and adding them. The output is:; ```; THnSparseT<TArrayD> (*0x6c127c0): ""hs"" ""CASE 1""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:887,Modifiability,variab,variable,887,"### Describe the bug. When adding two histograms, the weights associated with the bin contents of those histograms should also be added appropriately. `THnSparse` does not do this. It still reports the weights of the first histogram, ignoring the second. ### Expected behavior. The sum of weights should include the weights of both histograms that were added together. ### To Reproduce. The script is here: https://www.dropbox.com/s/j5wvixrmdtdx3b5/testTHNadd.C?dl=0; (GitHub apparently does not allow attaching .C files). ```bash; root -b -l -q testTHNadd.C; ```. This script shows the bug by comparing two cases:; 1. Filling one histogram twice; 2. Filling two histograms once and adding them. The output is:; ```; THnSparseT<TArrayD> (*0x6c127c0): ""hs"" ""CASE 1""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:940,Modifiability,variab,variable,940,"### Describe the bug. When adding two histograms, the weights associated with the bin contents of those histograms should also be added appropriately. `THnSparse` does not do this. It still reports the weights of the first histogram, ignoring the second. ### Expected behavior. The sum of weights should include the weights of both histograms that were added together. ### To Reproduce. The script is here: https://www.dropbox.com/s/j5wvixrmdtdx3b5/testTHNadd.C?dl=0; (GitHub apparently does not allow attaching .C files). ```bash; root -b -l -q testTHNadd.C; ```. This script shows the bug by comparing two cases:; 1. Filling one histogram twice; 2. Filling two histograms once and adding them. The output is:; ```; THnSparseT<TArrayD> (*0x6c127c0): ""hs"" ""CASE 1""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:988,Modifiability,variab,variable,988,"cribe the bug. When adding two histograms, the weights associated with the bin contents of those histograms should also be added appropriately. `THnSparse` does not do this. It still reports the weights of the first histogram, ignoring the second. ### Expected behavior. The sum of weights should include the weights of both histograms that were added together. ### To Reproduce. The script is here: https://www.dropbox.com/s/j5wvixrmdtdx3b5/testTHNadd.C?dl=0; (GitHub apparently does not allow attaching .C files). ```bash; root -b -l -q testTHNadd.C; ```. This script shows the bug by comparing two cases:; 1. Filling one histogram twice; 2. Filling two histograms once and adding them. The output is:; ```; THnSparseT<TArrayD> (*0x6c127c0): ""hs"" ""CASE 1""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:1035,Modifiability,variab,variable,1035," weights associated with the bin contents of those histograms should also be added appropriately. `THnSparse` does not do this. It still reports the weights of the first histogram, ignoring the second. ### Expected behavior. The sum of weights should include the weights of both histograms that were added together. ### To Reproduce. The script is here: https://www.dropbox.com/s/j5wvixrmdtdx3b5/testTHNadd.C?dl=0; (GitHub apparently does not allow attaching .C files). ```bash; root -b -l -q testTHNadd.C; ```. This script shows the bug by comparing two cases:; 1. Filling one histogram twice; 2. Filling two histograms once and adding them. The output is:; ```; THnSparseT<TArrayD> (*0x6c127c0): ""hs"" ""CASE 1""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:1081,Modifiability,variab,variable,1081,"ose histograms should also be added appropriately. `THnSparse` does not do this. It still reports the weights of the first histogram, ignoring the second. ### Expected behavior. The sum of weights should include the weights of both histograms that were added together. ### To Reproduce. The script is here: https://www.dropbox.com/s/j5wvixrmdtdx3b5/testTHNadd.C?dl=0; (GitHub apparently does not allow attaching .C files). ```bash; root -b -l -q testTHNadd.C; ```. This script shows the bug by comparing two cases:; 1. Filling one histogram twice; 2. Filling two histograms once and adding them. The output is:; ```; THnSparseT<TArrayD> (*0x6c127c0): ""hs"" ""CASE 1""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:1128,Modifiability,variab,variable,1128,"ly. `THnSparse` does not do this. It still reports the weights of the first histogram, ignoring the second. ### Expected behavior. The sum of weights should include the weights of both histograms that were added together. ### To Reproduce. The script is here: https://www.dropbox.com/s/j5wvixrmdtdx3b5/testTHNadd.C?dl=0; (GitHub apparently does not allow attaching .C files). ```bash; root -b -l -q testTHNadd.C; ```. This script shows the bug by comparing two cases:; 1. Filling one histogram twice; 2. Filling two histograms once and adding them. The output is:; ```; THnSparseT<TArrayD> (*0x6c127c0): ""hs"" ""CASE 1""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:1175,Modifiability,variab,variable,1175,"ghts of the first histogram, ignoring the second. ### Expected behavior. The sum of weights should include the weights of both histograms that were added together. ### To Reproduce. The script is here: https://www.dropbox.com/s/j5wvixrmdtdx3b5/testTHNadd.C?dl=0; (GitHub apparently does not allow attaching .C files). ```bash; root -b -l -q testTHNadd.C; ```. This script shows the bug by comparing two cases:; 1. Filling one histogram twice; 2. Filling two histograms once and adding them. The output is:; ```; THnSparseT<TArrayD> (*0x6c127c0): ""hs"" ""CASE 1""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:1884,Modifiability,variab,variable,1884,"es; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=0.5, Sum(w^2)=0.25; axis 0: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 1: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 2: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 3: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 4: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 5: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 6: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 7: Sum(w*x)=0.5, Sum(w*x^2)=0.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 0.5; ```. ### Setup. 1. ROOT versions: tested 6.06.00, 6.12.07, 6.24.07 (all have the bug); 2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:1934,Modifiability,variab,variable,1934,"izes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=0.5, Sum(w^2)=0.25; axis 0: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 1: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 2: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 3: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 4: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 5: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 6: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 7: Sum(w*x)=0.5, Sum(w*x^2)=0.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 0.5; ```. ### Setup. 1. ROOT versions: tested 6.06.00, 6.12.07, 6.24.07 (all have the bug); 2. Scientific Linux 7.9, AlmaLinux 8.6; 4. From CMS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:1987,Modifiability,variab,variable,1987,"3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=0.5, Sum(w^2)=0.25; axis 0: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 1: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 2: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 3: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 4: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 5: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 6: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 7: Sum(w*x)=0.5, Sum(w*x^2)=0.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 0.5; ```. ### Setup. 1. ROOT versions: tested 6.06.00, 6.12.07, 6.24.07 (all have the bug); 2. Scientific Linux 7.9, AlmaLinux 8.6; 4. From CMSSW on cvmfs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:2035,Modifiability,variab,variable,2035,"3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=0.5, Sum(w^2)=0.25; axis 0: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 1: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 2: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 3: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 4: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 5: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 6: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 7: Sum(w*x)=0.5, Sum(w*x^2)=0.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 0.5; ```. ### Setup. 1. ROOT versions: tested 6.06.00, 6.12.07, 6.24.07 (all have the bug); 2. Scientific Linux 7.9, AlmaLinux 8.6; 4. From CMSSW on cvmfs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:2082,Modifiability,variab,variable,2082,"3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=0.5, Sum(w^2)=0.25; axis 0: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 1: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 2: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 3: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 4: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 5: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 6: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 7: Sum(w*x)=0.5, Sum(w*x^2)=0.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 0.5; ```. ### Setup. 1. ROOT versions: tested 6.06.00, 6.12.07, 6.24.07 (all have the bug); 2. Scientific Linux 7.9, AlmaLinux 8.6; 4. From CMSSW on cvmfs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:2128,Modifiability,variab,variable,2128,"3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=0.5, Sum(w^2)=0.25; axis 0: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 1: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 2: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 3: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 4: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 5: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 6: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 7: Sum(w*x)=0.5, Sum(w*x^2)=0.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 0.5; ```. ### Setup. 1. ROOT versions: tested 6.06.00, 6.12.07, 6.24.07 (all have the bug); 2. Scientific Linux 7.9, AlmaLinux 8.6; 4. From CMSSW on cvmfs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:2175,Modifiability,variab,variable,2175,"3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=0.5, Sum(w^2)=0.25; axis 0: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 1: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 2: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 3: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 4: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 5: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 6: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 7: Sum(w*x)=0.5, Sum(w*x^2)=0.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 0.5; ```. ### Setup. 1. ROOT versions: tested 6.06.00, 6.12.07, 6.24.07 (all have the bug); 2. Scientific Linux 7.9, AlmaLinux 8.6; 4. From CMSSW on cvmfs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:2222,Modifiability,variab,variable,2222,"3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=0.5, Sum(w^2)=0.25; axis 0: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 1: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 2: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 3: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 4: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 5: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 6: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 7: Sum(w*x)=0.5, Sum(w*x^2)=0.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 0.5; ```. ### Setup. 1. ROOT versions: tested 6.06.00, 6.12.07, 6.24.07 (all have the bug); 2. Scientific Linux 7.9, AlmaLinux 8.6; 4. From CMSSW on cvmfs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:449,Testability,test,testTHNadd,449,"### Describe the bug. When adding two histograms, the weights associated with the bin contents of those histograms should also be added appropriately. `THnSparse` does not do this. It still reports the weights of the first histogram, ignoring the second. ### Expected behavior. The sum of weights should include the weights of both histograms that were added together. ### To Reproduce. The script is here: https://www.dropbox.com/s/j5wvixrmdtdx3b5/testTHNadd.C?dl=0; (GitHub apparently does not allow attaching .C files). ```bash; root -b -l -q testTHNadd.C; ```. This script shows the bug by comparing two cases:; 1. Filling one histogram twice; 2. Filling two histograms once and adding them. The output is:; ```; THnSparseT<TArrayD> (*0x6c127c0): ""hs"" ""CASE 1""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:546,Testability,test,testTHNadd,546,"### Describe the bug. When adding two histograms, the weights associated with the bin contents of those histograms should also be added appropriately. `THnSparse` does not do this. It still reports the weights of the first histogram, ignoring the second. ### Expected behavior. The sum of weights should include the weights of both histograms that were added together. ### To Reproduce. The script is here: https://www.dropbox.com/s/j5wvixrmdtdx3b5/testTHNadd.C?dl=0; (GitHub apparently does not allow attaching .C files). ```bash; root -b -l -q testTHNadd.C; ```. This script shows the bug by comparing two cases:; 1. Filling one histogram twice; 2. Filling two histograms once and adding them. The output is:; ```; THnSparseT<TArrayD> (*0x6c127c0): ""hs"" ""CASE 1""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/issues/11333:2850,Testability,test,tested,2850,"3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=0.5, Sum(w^2)=0.25; axis 0: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 1: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 2: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 3: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 4: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 5: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 6: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 7: Sum(w*x)=0.5, Sum(w*x^2)=0.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 0.5; ```. ### Setup. 1. ROOT versions: tested 6.06.00, 6.12.07, 6.24.07 (all have the bug); 2. Scientific Linux 7.9, AlmaLinux 8.6; 4. From CMSSW on cvmfs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11333
https://github.com/root-project/root/pull/11334:460,Deployability,configurat,configuration,460,"On some platform operator delete taints the memory, so even right after the deletion the information stored by ~TObject is already erased. On those platform we no longer rely on the kNotDelete bit hack and rely on the system (which has tainted the memory assumingly for a reason) to detect the use-after-delete problems. Introduce 2 new functions. TObject::IsDestructed (used by TClonesArray) that detects that the destructor has been run and is active in all configuration. This should be used if the code knows that the memory has not been freed/deleted. ROOT::Detail::HasBeenDeleted(TObject*) with returns true if the platform does not taint the memory and if the kNotDeleted is not set (in all other case, it returns false). This fixes #11330",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11334
https://github.com/root-project/root/pull/11334:460,Modifiability,config,configuration,460,"On some platform operator delete taints the memory, so even right after the deletion the information stored by ~TObject is already erased. On those platform we no longer rely on the kNotDelete bit hack and rely on the system (which has tainted the memory assumingly for a reason) to detect the use-after-delete problems. Introduce 2 new functions. TObject::IsDestructed (used by TClonesArray) that detects that the destructor has been run and is active in all configuration. This should be used if the code knows that the memory has not been freed/deleted. ROOT::Detail::HasBeenDeleted(TObject*) with returns true if the platform does not taint the memory and if the kNotDeleted is not set (in all other case, it returns false). This fixes #11330",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11334
https://github.com/root-project/root/pull/11334:283,Safety,detect,detect,283,"On some platform operator delete taints the memory, so even right after the deletion the information stored by ~TObject is already erased. On those platform we no longer rely on the kNotDelete bit hack and rely on the system (which has tainted the memory assumingly for a reason) to detect the use-after-delete problems. Introduce 2 new functions. TObject::IsDestructed (used by TClonesArray) that detects that the destructor has been run and is active in all configuration. This should be used if the code knows that the memory has not been freed/deleted. ROOT::Detail::HasBeenDeleted(TObject*) with returns true if the platform does not taint the memory and if the kNotDeleted is not set (in all other case, it returns false). This fixes #11330",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11334
https://github.com/root-project/root/pull/11334:398,Safety,detect,detects,398,"On some platform operator delete taints the memory, so even right after the deletion the information stored by ~TObject is already erased. On those platform we no longer rely on the kNotDelete bit hack and rely on the system (which has tainted the memory assumingly for a reason) to detect the use-after-delete problems. Introduce 2 new functions. TObject::IsDestructed (used by TClonesArray) that detects that the destructor has been run and is active in all configuration. This should be used if the code knows that the memory has not been freed/deleted. ROOT::Detail::HasBeenDeleted(TObject*) with returns true if the platform does not taint the memory and if the kNotDeleted is not set (in all other case, it returns false). This fixes #11330",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11334
https://github.com/root-project/root/pull/11336:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11336
https://github.com/root-project/root/pull/11336:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11336
https://github.com/root-project/root/pull/11337:338,Deployability,patch,patch,338,"RunGraphs kindly warns the user if some of the results that were passed to it correspond to results that are already ""ready"" (i.e. for which the event loop has already run), since that is typically not the intended usage. At that point it should not quit though: it should run the event loop for the results that still need running. This patch fixes that. @vepadulano afaict the distributed version does not check this at all?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11337
https://github.com/root-project/root/issues/11338:916,Availability,down,download,916,"### Describe the bug; <!--; Setup snap ""root-framework"" (723) security profiles for auto-connections (cannot obtain mount security snippets for snap ""root-framework"": shared-memory plug with ""private: true"" cannot be connected if ""/dev/shm"" is a symlink).; -->. ### Expected behavior; <!--; Root-framework can be installed.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. sudo daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target; 2. exec sudo nsenter -t $(pidof systemd) -m -p su - $LOGNAME; 3. snap version; snap 2.56.2+22.04ubuntu1; snapd 2.56.2+22.04ubuntu1; series 16; ubuntu 22.04; kernel 5.10.102.1-microsoft-standard-WSL2; -->. ### Setup; <!--; 1. ROOT version: v6-26-06; 2. Operating system:; Distributor ID: Ubuntu; Description: Ubuntu 22.04.1 LTS; Release: 22.04; Codename: jammy; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself:; snap install root-framework; -->. ### Additional context; <!--; NA.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11338
https://github.com/root-project/root/issues/11338:313,Deployability,install,installed,313,"### Describe the bug; <!--; Setup snap ""root-framework"" (723) security profiles for auto-connections (cannot obtain mount security snippets for snap ""root-framework"": shared-memory plug with ""private: true"" cannot be connected if ""/dev/shm"" is a symlink).; -->. ### Expected behavior; <!--; Root-framework can be installed.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. sudo daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target; 2. exec sudo nsenter -t $(pidof systemd) -m -p su - $LOGNAME; 3. snap version; snap 2.56.2+22.04ubuntu1; snapd 2.56.2+22.04ubuntu1; series 16; ubuntu 22.04; kernel 5.10.102.1-microsoft-standard-WSL2; -->. ### Setup; <!--; 1. ROOT version: v6-26-06; 2. Operating system:; Distributor ID: Ubuntu; Description: Ubuntu 22.04.1 LTS; Release: 22.04; Codename: jammy; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself:; snap install root-framework; -->. ### Additional context; <!--; NA.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11338
https://github.com/root-project/root/issues/11338:826,Deployability,Release,Release,826,"### Describe the bug; <!--; Setup snap ""root-framework"" (723) security profiles for auto-connections (cannot obtain mount security snippets for snap ""root-framework"": shared-memory plug with ""private: true"" cannot be connected if ""/dev/shm"" is a symlink).; -->. ### Expected behavior; <!--; Root-framework can be installed.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. sudo daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target; 2. exec sudo nsenter -t $(pidof systemd) -m -p su - $LOGNAME; 3. snap version; snap 2.56.2+22.04ubuntu1; snapd 2.56.2+22.04ubuntu1; series 16; ubuntu 22.04; kernel 5.10.102.1-microsoft-standard-WSL2; -->. ### Setup; <!--; 1. ROOT version: v6-26-06; 2. Operating system:; Distributor ID: Ubuntu; Description: Ubuntu 22.04.1 LTS; Release: 22.04; Codename: jammy; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself:; snap install root-framework; -->. ### Additional context; <!--; NA.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11338
https://github.com/root-project/root/issues/11338:898,Deployability,install,install,898,"### Describe the bug; <!--; Setup snap ""root-framework"" (723) security profiles for auto-connections (cannot obtain mount security snippets for snap ""root-framework"": shared-memory plug with ""private: true"" cannot be connected if ""/dev/shm"" is a symlink).; -->. ### Expected behavior; <!--; Root-framework can be installed.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. sudo daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target; 2. exec sudo nsenter -t $(pidof systemd) -m -p su - $LOGNAME; 3. snap version; snap 2.56.2+22.04ubuntu1; snapd 2.56.2+22.04ubuntu1; series 16; ubuntu 22.04; kernel 5.10.102.1-microsoft-standard-WSL2; -->. ### Setup; <!--; 1. ROOT version: v6-26-06; 2. Operating system:; Distributor ID: Ubuntu; Description: Ubuntu 22.04.1 LTS; Release: 22.04; Codename: jammy; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself:; snap install root-framework; -->. ### Additional context; <!--; NA.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11338
https://github.com/root-project/root/issues/11338:956,Deployability,install,install,956,"### Describe the bug; <!--; Setup snap ""root-framework"" (723) security profiles for auto-connections (cannot obtain mount security snippets for snap ""root-framework"": shared-memory plug with ""private: true"" cannot be connected if ""/dev/shm"" is a symlink).; -->. ### Expected behavior; <!--; Root-framework can be installed.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. sudo daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target; 2. exec sudo nsenter -t $(pidof systemd) -m -p su - $LOGNAME; 3. snap version; snap 2.56.2+22.04ubuntu1; snapd 2.56.2+22.04ubuntu1; series 16; ubuntu 22.04; kernel 5.10.102.1-microsoft-standard-WSL2; -->. ### Setup; <!--; 1. ROOT version: v6-26-06; 2. Operating system:; Distributor ID: Ubuntu; Description: Ubuntu 22.04.1 LTS; Release: 22.04; Codename: jammy; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself:; snap install root-framework; -->. ### Additional context; <!--; NA.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11338
https://github.com/root-project/root/issues/11338:62,Security,secur,security,62,"### Describe the bug; <!--; Setup snap ""root-framework"" (723) security profiles for auto-connections (cannot obtain mount security snippets for snap ""root-framework"": shared-memory plug with ""private: true"" cannot be connected if ""/dev/shm"" is a symlink).; -->. ### Expected behavior; <!--; Root-framework can be installed.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. sudo daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target; 2. exec sudo nsenter -t $(pidof systemd) -m -p su - $LOGNAME; 3. snap version; snap 2.56.2+22.04ubuntu1; snapd 2.56.2+22.04ubuntu1; series 16; ubuntu 22.04; kernel 5.10.102.1-microsoft-standard-WSL2; -->. ### Setup; <!--; 1. ROOT version: v6-26-06; 2. Operating system:; Distributor ID: Ubuntu; Description: Ubuntu 22.04.1 LTS; Release: 22.04; Codename: jammy; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself:; snap install root-framework; -->. ### Additional context; <!--; NA.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11338
https://github.com/root-project/root/issues/11338:122,Security,secur,security,122,"### Describe the bug; <!--; Setup snap ""root-framework"" (723) security profiles for auto-connections (cannot obtain mount security snippets for snap ""root-framework"": shared-memory plug with ""private: true"" cannot be connected if ""/dev/shm"" is a symlink).; -->. ### Expected behavior; <!--; Root-framework can be installed.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. sudo daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target; 2. exec sudo nsenter -t $(pidof systemd) -m -p su - $LOGNAME; 3. snap version; snap 2.56.2+22.04ubuntu1; snapd 2.56.2+22.04ubuntu1; series 16; ubuntu 22.04; kernel 5.10.102.1-microsoft-standard-WSL2; -->. ### Setup; <!--; 1. ROOT version: v6-26-06; 2. Operating system:; Distributor ID: Ubuntu; Description: Ubuntu 22.04.1 LTS; Release: 22.04; Codename: jammy; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself:; snap install root-framework; -->. ### Additional context; <!--; NA.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11338
https://github.com/root-project/root/issues/11338:551,Testability,LOG,LOGNAME,551,"### Describe the bug; <!--; Setup snap ""root-framework"" (723) security profiles for auto-connections (cannot obtain mount security snippets for snap ""root-framework"": shared-memory plug with ""private: true"" cannot be connected if ""/dev/shm"" is a symlink).; -->. ### Expected behavior; <!--; Root-framework can be installed.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. sudo daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target; 2. exec sudo nsenter -t $(pidof systemd) -m -p su - $LOGNAME; 3. snap version; snap 2.56.2+22.04ubuntu1; snapd 2.56.2+22.04ubuntu1; series 16; ubuntu 22.04; kernel 5.10.102.1-microsoft-standard-WSL2; -->. ### Setup; <!--; 1. ROOT version: v6-26-06; 2. Operating system:; Distributor ID: Ubuntu; Description: Ubuntu 22.04.1 LTS; Release: 22.04; Codename: jammy; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself:; snap install root-framework; -->. ### Additional context; <!--; NA.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11338
https://github.com/root-project/root/pull/11341:86,Testability,log,log,86,Users are usually not interested in this level of detail and; they will typically use log level kInfo.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11341
https://github.com/root-project/root/pull/11343:177,Modifiability,variab,variable,177,"If a RooProdPdf is created with the `Conditional` command argument to do; a conditional fit, there is a flag `depsAreCond` to the command argument; that specifies if the passed variable set corresponds to the; normalization set of the conditional PDF (default), or the conditional; observables. In the new BatchMode, this flag was not considered, which; is fixed by this PR. A new unit test that checks that the `depsAreCond` parameter is; correctly considered in both the BatchMode and the old RooFit is also; implemented, based on the issue reproducer code that was kindly provided; by @elusian in https://github.com/root-project/root/issues/11332. This PR also merges the `testRooProductPdf` and `testRooProdPdf`; files, because they are both testing the RooProdPdf. Closes https://github.com/root-project/root/issues/11332. A secondary commit with some code improvements to the RooProdPdf class is also included in this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11343
https://github.com/root-project/root/pull/11343:386,Testability,test,test,386,"If a RooProdPdf is created with the `Conditional` command argument to do; a conditional fit, there is a flag `depsAreCond` to the command argument; that specifies if the passed variable set corresponds to the; normalization set of the conditional PDF (default), or the conditional; observables. In the new BatchMode, this flag was not considered, which; is fixed by this PR. A new unit test that checks that the `depsAreCond` parameter is; correctly considered in both the BatchMode and the old RooFit is also; implemented, based on the issue reproducer code that was kindly provided; by @elusian in https://github.com/root-project/root/issues/11332. This PR also merges the `testRooProductPdf` and `testRooProdPdf`; files, because they are both testing the RooProdPdf. Closes https://github.com/root-project/root/issues/11332. A secondary commit with some code improvements to the RooProdPdf class is also included in this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11343
https://github.com/root-project/root/pull/11343:676,Testability,test,testRooProductPdf,676,"If a RooProdPdf is created with the `Conditional` command argument to do; a conditional fit, there is a flag `depsAreCond` to the command argument; that specifies if the passed variable set corresponds to the; normalization set of the conditional PDF (default), or the conditional; observables. In the new BatchMode, this flag was not considered, which; is fixed by this PR. A new unit test that checks that the `depsAreCond` parameter is; correctly considered in both the BatchMode and the old RooFit is also; implemented, based on the issue reproducer code that was kindly provided; by @elusian in https://github.com/root-project/root/issues/11332. This PR also merges the `testRooProductPdf` and `testRooProdPdf`; files, because they are both testing the RooProdPdf. Closes https://github.com/root-project/root/issues/11332. A secondary commit with some code improvements to the RooProdPdf class is also included in this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11343
https://github.com/root-project/root/pull/11343:700,Testability,test,testRooProdPdf,700,"If a RooProdPdf is created with the `Conditional` command argument to do; a conditional fit, there is a flag `depsAreCond` to the command argument; that specifies if the passed variable set corresponds to the; normalization set of the conditional PDF (default), or the conditional; observables. In the new BatchMode, this flag was not considered, which; is fixed by this PR. A new unit test that checks that the `depsAreCond` parameter is; correctly considered in both the BatchMode and the old RooFit is also; implemented, based on the issue reproducer code that was kindly provided; by @elusian in https://github.com/root-project/root/issues/11332. This PR also merges the `testRooProductPdf` and `testRooProdPdf`; files, because they are both testing the RooProdPdf. Closes https://github.com/root-project/root/issues/11332. A secondary commit with some code improvements to the RooProdPdf class is also included in this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11343
https://github.com/root-project/root/pull/11343:746,Testability,test,testing,746,"If a RooProdPdf is created with the `Conditional` command argument to do; a conditional fit, there is a flag `depsAreCond` to the command argument; that specifies if the passed variable set corresponds to the; normalization set of the conditional PDF (default), or the conditional; observables. In the new BatchMode, this flag was not considered, which; is fixed by this PR. A new unit test that checks that the `depsAreCond` parameter is; correctly considered in both the BatchMode and the old RooFit is also; implemented, based on the issue reproducer code that was kindly provided; by @elusian in https://github.com/root-project/root/issues/11332. This PR also merges the `testRooProductPdf` and `testRooProdPdf`; files, because they are both testing the RooProdPdf. Closes https://github.com/root-project/root/issues/11332. A secondary commit with some code improvements to the RooProdPdf class is also included in this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11343
https://github.com/root-project/root/issues/11344:52,Modifiability,variab,variable,52,"`import ROOT` causes the setting of the environment variable `EXTRA_CLING_ARGS` to `-O2` -- but too late (after interpreter initialization), so that the setting actually has no effect: `cling` will still use its default of `-O1`, but checking `EXTRA_CLING_ARGS` will give users the wrong impression. Since there is no reason to set the environment variable in the first place, it has no effect anyway, and it can be confusing for users trying to figure out what options cling is running with, I propose to remove the behavior from pyroot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11344
https://github.com/root-project/root/issues/11344:348,Modifiability,variab,variable,348,"`import ROOT` causes the setting of the environment variable `EXTRA_CLING_ARGS` to `-O2` -- but too late (after interpreter initialization), so that the setting actually has no effect: `cling` will still use its default of `-O1`, but checking `EXTRA_CLING_ARGS` will give users the wrong impression. Since there is no reason to set the environment variable in the first place, it has no effect anyway, and it can be confusing for users trying to figure out what options cling is running with, I propose to remove the behavior from pyroot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11344
https://github.com/root-project/root/pull/11345:8,Safety,avoid,avoids,8,This PR avoids all calls to `delete` in HistFactory.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11345
https://github.com/root-project/root/pull/11347:55,Availability,failure,failures,55,This PR should fix TMVA_RNN_Classification.py tutorial failures seen in many CI node in the nightly builds,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11347
https://github.com/root-project/root/pull/11350:0,Safety,Avoid,Avoid,0,Avoid warnings when -Wzero-as-null-pointer-constant is used,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11350
https://github.com/root-project/root/pull/11351:0,Safety,Avoid,Avoid,0,Avoid warnings when -Wzero-as-null-pointer-constant is specified,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11351
https://github.com/root-project/root/issues/11353:3665,Deployability,Update,Update,3665,"============; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================; ```. **Expected behavior**. The output messages should be:. ```; Memory mapped file: hsimple.map; Title: Memory Mapped Hist; Option: CREATE; Mapped Memory region: 0xb46a5000 - 0xb46be000 (0.10 MB); Current breakval: 0xb46b0000; Object Class Size ; hpx TH1F 1024; ```. **To Reproduce:**. The source code test.cpp I am using follows:; ```cpp; // test.cpp; #include ""TROOT.h""; #include ""TApplication.h""; #include ""TH1F.h""; #include ""TH2F.h""; #include ""TMapFile.h""; #include ""TRandom.h"". void hprod();. #ifndef __CINT__ ; int main(int argc, char **argv); {; TApplication* theApp = new TApplication(""Shared Mem - Producer"", &argc, argv);; hprod();; theApp->Run();; }; #endif . void hprod(); {; TH1F *hpx;; TH2F *hpxpy;; TProfile *hprof;; TMapFile::SetMapAddress(0xb46a5000);; TMapFile *mfile = TMapFile::Create(""hsimple.map"",""RECREATE"", 100000,""Memory Mapped Hist"");; hpx = new TH1F(""hpx"",""This is the px distribution"",100,-4,4);; ; // Print status of mapped file; mfile->Print();; ; // Endless loop filling histograms with random numbers; Float_t px, py, pz;; int ii = 0;; while(1); {; gRandom->Rannor(px,py);; pz = px*px + py*py;; hpx->Fill(px);; if (!(ii % 10)); { ; 	 mfile->Update();; 	 if (!ii) mfile->ls(); // print contents of mapped file after }; 	 ii++;; }; }; }; ```. To run mu code: ./test. **My setup**; 1. ROOT version: ROOT 6.26/04; 2. Operating system: Fedora 31; 3. How you obtained ROOT: I built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11353
https://github.com/root-project/root/issues/11353:2530,Integrability,message,messages,2530,"se of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================; ```. **Expected behavior**. The output messages should be:. ```; Memory mapped file: hsimple.map; Title: Memory Mapped Hist; Option: CREATE; Mapped Memory region: 0xb46a5000 - 0xb46be000 (0.10 MB); Current breakval: 0xb46b0000; Object Class Size ; hpx TH1F 1024; ```. **To Reproduce:**. The source code test.cpp I am using follows:; ```cpp; // test.cpp; #include ""TROOT.h""; #include ""TApplication.h""; #include ""TH1F.h""; #include ""TH2F.h""; #include ""TMapFile.h""; #include ""TRandom.h"". void hprod();. #ifndef __CINT__ ; int main(int argc, char **argv); {; TApplication* theApp = new TApplication(""Shared Mem - Producer"", &argc, argv);; hprod();; theApp->Run();; }; #endif . void hprod(); {; TH1F *hpx;; TH2F *hpxpy;; TProfile *hprof;; TMapFile::SetMapAddress(0xb46a5000);; TMapFile *mfile = TMapFile::Create(""hsimple.map"",""RECREATE"", 100000,""Memory Mapped Hist"");; hpx = new TH1F(""hpx"",""This is the px distribution"",100,-4,4);; ; // Print status of mapped file; mfile->Print();; ; // Endless loop filling histograms with random numbers; Float_t ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11353
https://github.com/root-project/root/issues/11353:189,Modifiability,config,config,189,"**Description of the bug**. In order to use TMapFile I link the application with ""-lNew""; For example if test.cpp is the root program to compile I will use; ```; g++ -o test test.cpp `root-config --new --cflags --glibs`; ```; The program work without any issue with rootn.exe.; Using the compiled program, Immediately it breaks:. ```; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f9ece411e8a in waitpid () from /lib64/libc.so.6; #1 0x00007f9ece38d757 in do_system () from /lib64/libc.so.6; #2 0x00007f9ed00a44f5 in TUnixSystem::StackTrace() () from /home/root-6.26.04/builddir/lib/libCore.so; #3 0x00007f9ed00a1cc5 in TUnixSystem::DispatchSignals(ESignals) () from /home/root-6.26.04/builddir/lib/libCore.so; #4 <signal handler called>; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11353
https://github.com/root-project/root/issues/11353:1076,Performance,Load,LoadGraphicsLibs,1076,"n with ""-lNew""; For example if test.cpp is the root program to compile I will use; ```; g++ -o test test.cpp `root-config --new --cflags --glibs`; ```; The program work without any issue with rootn.exe.; Using the compiled program, Immediately it breaks:. ```; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f9ece411e8a in waitpid () from /lib64/libc.so.6; #1 0x00007f9ece38d757 in do_system () from /lib64/libc.so.6; #2 0x00007f9ed00a44f5 in TUnixSystem::StackTrace() () from /home/root-6.26.04/builddir/lib/libCore.so; #3 0x00007f9ed00a1cc5 in TUnixSystem::DispatchSignals(ESignals) () from /home/root-6.26.04/builddir/lib/libCore.so; #4 <signal handler called>; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadG",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11353
https://github.com/root-project/root/issues/11353:2070,Performance,Load,LoadGraphicsLibs,2070,"cation::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================; ```. **Expected behavior**. The output messages should be:. ```; Memory mapped file: hsimple.map; Title: Memory Mapped Hist; Option: CREATE; Mapped Memory region: 0xb46a5000 - 0xb46be000 (0.10 MB); Current breakval: 0xb46b0000; Object Class Size ; hpx TH1F 1024; ```. **To Reproduce:**. The source code test.cpp I am using follows:; ```cpp; // test.cpp; #include ""TROOT.h""; #include ""TApplication.h""; #include ""TH1F.h""; #include ""TH2F.h""; #include ""TMapFile.h""; #include ""TRandom.h"". void hprod();. #ifndef __CINT__ ; int main(int argc, char **argv); {; TApplication* theApp = n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11353
https://github.com/root-project/root/issues/11353:105,Testability,test,test,105,"**Description of the bug**. In order to use TMapFile I link the application with ""-lNew""; For example if test.cpp is the root program to compile I will use; ```; g++ -o test test.cpp `root-config --new --cflags --glibs`; ```; The program work without any issue with rootn.exe.; Using the compiled program, Immediately it breaks:. ```; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f9ece411e8a in waitpid () from /lib64/libc.so.6; #1 0x00007f9ece38d757 in do_system () from /lib64/libc.so.6; #2 0x00007f9ed00a44f5 in TUnixSystem::StackTrace() () from /home/root-6.26.04/builddir/lib/libCore.so; #3 0x00007f9ed00a1cc5 in TUnixSystem::DispatchSignals(ESignals) () from /home/root-6.26.04/builddir/lib/libCore.so; #4 <signal handler called>; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11353
https://github.com/root-project/root/issues/11353:169,Testability,test,test,169,"**Description of the bug**. In order to use TMapFile I link the application with ""-lNew""; For example if test.cpp is the root program to compile I will use; ```; g++ -o test test.cpp `root-config --new --cflags --glibs`; ```; The program work without any issue with rootn.exe.; Using the compiled program, Immediately it breaks:. ```; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f9ece411e8a in waitpid () from /lib64/libc.so.6; #1 0x00007f9ece38d757 in do_system () from /lib64/libc.so.6; #2 0x00007f9ed00a44f5 in TUnixSystem::StackTrace() () from /home/root-6.26.04/builddir/lib/libCore.so; #3 0x00007f9ed00a1cc5 in TUnixSystem::DispatchSignals(ESignals) () from /home/root-6.26.04/builddir/lib/libCore.so; #4 <signal handler called>; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11353
https://github.com/root-project/root/issues/11353:174,Testability,test,test,174,"**Description of the bug**. In order to use TMapFile I link the application with ""-lNew""; For example if test.cpp is the root program to compile I will use; ```; g++ -o test test.cpp `root-config --new --cflags --glibs`; ```; The program work without any issue with rootn.exe.; Using the compiled program, Immediately it breaks:. ```; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f9ece411e8a in waitpid () from /lib64/libc.so.6; #1 0x00007f9ece38d757 in do_system () from /lib64/libc.so.6; #2 0x00007f9ed00a44f5 in TUnixSystem::StackTrace() () from /home/root-6.26.04/builddir/lib/libCore.so; #3 0x00007f9ed00a1cc5 in TUnixSystem::DispatchSignals(ESignals) () from /home/root-6.26.04/builddir/lib/libCore.so; #4 <signal handler called>; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11353
https://github.com/root-project/root/issues/11353:2794,Testability,test,test,2794,"hment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================; ```. **Expected behavior**. The output messages should be:. ```; Memory mapped file: hsimple.map; Title: Memory Mapped Hist; Option: CREATE; Mapped Memory region: 0xb46a5000 - 0xb46be000 (0.10 MB); Current breakval: 0xb46b0000; Object Class Size ; hpx TH1F 1024; ```. **To Reproduce:**. The source code test.cpp I am using follows:; ```cpp; // test.cpp; #include ""TROOT.h""; #include ""TApplication.h""; #include ""TH1F.h""; #include ""TH2F.h""; #include ""TMapFile.h""; #include ""TRandom.h"". void hprod();. #ifndef __CINT__ ; int main(int argc, char **argv); {; TApplication* theApp = new TApplication(""Shared Mem - Producer"", &argc, argv);; hprod();; theApp->Run();; }; #endif . void hprod(); {; TH1F *hpx;; TH2F *hpxpy;; TProfile *hprof;; TMapFile::SetMapAddress(0xb46a5000);; TMapFile *mfile = TMapFile::Create(""hsimple.map"",""RECREATE"", 100000,""Memory Mapped Hist"");; hpx = new TH1F(""hpx"",""This is the px distribution"",100,-4,4);; ; // Print status of mapped file; mfile->Print();; ; // Endless loop filling histograms with random numbers; Float_t px, py, pz;; int ii = 0;; while(1); {; gRandom->Rannor(px,py);; pz = px*px + py*py;; hpx->Fill(px);; if (!(ii % 10)); { ; 	 mfile->Update();; 	 if (!ii) mfile->ls(); // print contents of mapped file after }; 	 ii++;; }; }; }; ```. To run mu code: ./test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11353
https://github.com/root-project/root/issues/11353:2835,Testability,test,test,2835,"lse; that might help us fixing this issue.; ===========================================================; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================; ```. **Expected behavior**. The output messages should be:. ```; Memory mapped file: hsimple.map; Title: Memory Mapped Hist; Option: CREATE; Mapped Memory region: 0xb46a5000 - 0xb46be000 (0.10 MB); Current breakval: 0xb46b0000; Object Class Size ; hpx TH1F 1024; ```. **To Reproduce:**. The source code test.cpp I am using follows:; ```cpp; // test.cpp; #include ""TROOT.h""; #include ""TApplication.h""; #include ""TH1F.h""; #include ""TH2F.h""; #include ""TMapFile.h""; #include ""TRandom.h"". void hprod();. #ifndef __CINT__ ; int main(int argc, char **argv); {; TApplication* theApp = new TApplication(""Shared Mem - Producer"", &argc, argv);; hprod();; theApp->Run();; }; #endif . void hprod(); {; TH1F *hpx;; TH2F *hpxpy;; TProfile *hprof;; TMapFile::SetMapAddress(0xb46a5000);; TMapFile *mfile = TMapFile::Create(""hsimple.map"",""RECREATE"", 100000,""Memory Mapped Hist"");; hpx = new TH1F(""hpx"",""This is the px distribution"",100,-4,4);; ; // Print status of mapped file; mfile->Print();; ; // Endless loop filling histograms with random numbers; Float_t px, py, pz;; int ii = 0;; while(1); {; gRandom->Rannor(px,py);; pz = px*px + py*py;; hpx->Fill(px);; if (!(ii % 10)); { ; 	 mfile->Update();; 	 if (!ii) mfile->ls(); // print contents of mapped file after }; 	 ii++;; }; }; }; ```. To run mu code: ./test. **My setup**; 1. ROOT version: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11353
https://github.com/root-project/root/issues/11353:3783,Testability,test,test,3783,"============; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================; ```. **Expected behavior**. The output messages should be:. ```; Memory mapped file: hsimple.map; Title: Memory Mapped Hist; Option: CREATE; Mapped Memory region: 0xb46a5000 - 0xb46be000 (0.10 MB); Current breakval: 0xb46b0000; Object Class Size ; hpx TH1F 1024; ```. **To Reproduce:**. The source code test.cpp I am using follows:; ```cpp; // test.cpp; #include ""TROOT.h""; #include ""TApplication.h""; #include ""TH1F.h""; #include ""TH2F.h""; #include ""TMapFile.h""; #include ""TRandom.h"". void hprod();. #ifndef __CINT__ ; int main(int argc, char **argv); {; TApplication* theApp = new TApplication(""Shared Mem - Producer"", &argc, argv);; hprod();; theApp->Run();; }; #endif . void hprod(); {; TH1F *hpx;; TH2F *hpxpy;; TProfile *hprof;; TMapFile::SetMapAddress(0xb46a5000);; TMapFile *mfile = TMapFile::Create(""hsimple.map"",""RECREATE"", 100000,""Memory Mapped Hist"");; hpx = new TH1F(""hpx"",""This is the px distribution"",100,-4,4);; ; // Print status of mapped file; mfile->Print();; ; // Endless loop filling histograms with random numbers; Float_t px, py, pz;; int ii = 0;; while(1); {; gRandom->Rannor(px,py);; pz = px*px + py*py;; hpx->Fill(px);; if (!(ii % 10)); { ; 	 mfile->Update();; 	 if (!ii) mfile->ls(); // print contents of mapped file after }; 	 ii++;; }; }; }; ```. To run mu code: ./test. **My setup**; 1. ROOT version: ROOT 6.26/04; 2. Operating system: Fedora 31; 3. How you obtained ROOT: I built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11353
https://github.com/root-project/root/pull/11355:20,Modifiability,variab,variable,20,"- better name for a variable, nNotRun -> nToRun; - substitute raw for loop with count_if (for readability); - substitute raw for loop with for_each (for consistency with the multi-thread version, which uses TThreadExecutor::Foreach)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11355
https://github.com/root-project/root/pull/11355:174,Performance,multi-thread,multi-thread,174,"- better name for a variable, nNotRun -> nToRun; - substitute raw for loop with count_if (for readability); - substitute raw for loop with for_each (for consistency with the multi-thread version, which uses TThreadExecutor::Foreach)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11355
https://github.com/root-project/root/pull/11356:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11356
https://github.com/root-project/root/pull/11356:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11356
https://github.com/root-project/root/pull/11357:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11357
https://github.com/root-project/root/pull/11357:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11357
https://github.com/root-project/root/pull/11359:47,Integrability,message,message,47,"Backport of commit 1b5404aff3. Original commit message:; ```; We would previously pick between calling an initializer list constructor; and calling a default constructor unstably in this situation, depending; on whether the inherited default constructor had already been used; elsewhere in the program.; ```. This commit first appeared in LLVM 10 and fixes some problems with modules when building with GCC 12, for example ODRHash asserts in `roottest-root-io-uniquePointer`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11359
https://github.com/root-project/root/pull/11359:198,Integrability,depend,depending,198,"Backport of commit 1b5404aff3. Original commit message:; ```; We would previously pick between calling an initializer list constructor; and calling a default constructor unstably in this situation, depending; on whether the inherited default constructor had already been used; elsewhere in the program.; ```. This commit first appeared in LLVM 10 and fixes some problems with modules when building with GCC 12, for example ODRHash asserts in `roottest-root-io-uniquePointer`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11359
https://github.com/root-project/root/pull/11359:224,Modifiability,inherit,inherited,224,"Backport of commit 1b5404aff3. Original commit message:; ```; We would previously pick between calling an initializer list constructor; and calling a default constructor unstably in this situation, depending; on whether the inherited default constructor had already been used; elsewhere in the program.; ```. This commit first appeared in LLVM 10 and fixes some problems with modules when building with GCC 12, for example ODRHash asserts in `roottest-root-io-uniquePointer`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11359
https://github.com/root-project/root/pull/11359:431,Testability,assert,asserts,431,"Backport of commit 1b5404aff3. Original commit message:; ```; We would previously pick between calling an initializer list constructor; and calling a default constructor unstably in this situation, depending; on whether the inherited default constructor had already been used; elsewhere in the program.; ```. This commit first appeared in LLVM 10 and fixes some problems with modules when building with GCC 12, for example ODRHash asserts in `roottest-root-io-uniquePointer`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11359
https://github.com/root-project/root/pull/11361:346,Availability,redundant,redundant,346,"All the RooFit tutorials were replicated in the `root/roofitcore/test` directory to be used as tests, which are never run as part of the unit tests. Actually, the RooFit tutorials made their way into a unit test in the `stressRooFit` test suite, which is run by `ctest` also in the CI. That means the tutorial files in `root/roofitcore/test` are redundant, and also badly out of sync with the actual tutorials and stressRooFit because they are never tested automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11361
https://github.com/root-project/root/pull/11361:346,Safety,redund,redundant,346,"All the RooFit tutorials were replicated in the `root/roofitcore/test` directory to be used as tests, which are never run as part of the unit tests. Actually, the RooFit tutorials made their way into a unit test in the `stressRooFit` test suite, which is run by `ctest` also in the CI. That means the tutorial files in `root/roofitcore/test` are redundant, and also badly out of sync with the actual tutorials and stressRooFit because they are never tested automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11361
https://github.com/root-project/root/pull/11361:65,Testability,test,test,65,"All the RooFit tutorials were replicated in the `root/roofitcore/test` directory to be used as tests, which are never run as part of the unit tests. Actually, the RooFit tutorials made their way into a unit test in the `stressRooFit` test suite, which is run by `ctest` also in the CI. That means the tutorial files in `root/roofitcore/test` are redundant, and also badly out of sync with the actual tutorials and stressRooFit because they are never tested automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11361
https://github.com/root-project/root/pull/11361:95,Testability,test,tests,95,"All the RooFit tutorials were replicated in the `root/roofitcore/test` directory to be used as tests, which are never run as part of the unit tests. Actually, the RooFit tutorials made their way into a unit test in the `stressRooFit` test suite, which is run by `ctest` also in the CI. That means the tutorial files in `root/roofitcore/test` are redundant, and also badly out of sync with the actual tutorials and stressRooFit because they are never tested automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11361
https://github.com/root-project/root/pull/11361:142,Testability,test,tests,142,"All the RooFit tutorials were replicated in the `root/roofitcore/test` directory to be used as tests, which are never run as part of the unit tests. Actually, the RooFit tutorials made their way into a unit test in the `stressRooFit` test suite, which is run by `ctest` also in the CI. That means the tutorial files in `root/roofitcore/test` are redundant, and also badly out of sync with the actual tutorials and stressRooFit because they are never tested automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11361
https://github.com/root-project/root/pull/11361:207,Testability,test,test,207,"All the RooFit tutorials were replicated in the `root/roofitcore/test` directory to be used as tests, which are never run as part of the unit tests. Actually, the RooFit tutorials made their way into a unit test in the `stressRooFit` test suite, which is run by `ctest` also in the CI. That means the tutorial files in `root/roofitcore/test` are redundant, and also badly out of sync with the actual tutorials and stressRooFit because they are never tested automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11361
https://github.com/root-project/root/pull/11361:234,Testability,test,test,234,"All the RooFit tutorials were replicated in the `root/roofitcore/test` directory to be used as tests, which are never run as part of the unit tests. Actually, the RooFit tutorials made their way into a unit test in the `stressRooFit` test suite, which is run by `ctest` also in the CI. That means the tutorial files in `root/roofitcore/test` are redundant, and also badly out of sync with the actual tutorials and stressRooFit because they are never tested automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11361
https://github.com/root-project/root/pull/11361:336,Testability,test,test,336,"All the RooFit tutorials were replicated in the `root/roofitcore/test` directory to be used as tests, which are never run as part of the unit tests. Actually, the RooFit tutorials made their way into a unit test in the `stressRooFit` test suite, which is run by `ctest` also in the CI. That means the tutorial files in `root/roofitcore/test` are redundant, and also badly out of sync with the actual tutorials and stressRooFit because they are never tested automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11361
https://github.com/root-project/root/pull/11361:450,Testability,test,tested,450,"All the RooFit tutorials were replicated in the `root/roofitcore/test` directory to be used as tests, which are never run as part of the unit tests. Actually, the RooFit tutorials made their way into a unit test in the `stressRooFit` test suite, which is run by `ctest` also in the CI. That means the tutorial files in `root/roofitcore/test` are redundant, and also badly out of sync with the actual tutorials and stressRooFit because they are never tested automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11361
https://github.com/root-project/root/pull/11362:47,Integrability,message,message,47,"Backport of commit 1b5404aff3. Original commit message:; ```; We would previously pick between calling an initializer list constructor; and calling a default constructor unstably in this situation, depending; on whether the inherited default constructor had already been used; elsewhere in the program.; ```. This commit first appeared in LLVM 10 and fixes some problems with modules when building with GCC 12, for example ODRHash asserts in `roottest-root-io-uniquePointer`. (cherry picked from commit cf32d2bc738367fe0d5c8ccbc0856d345f824228). Backport of PR https://github.com/root-project/root/pull/11359",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11362
https://github.com/root-project/root/pull/11362:198,Integrability,depend,depending,198,"Backport of commit 1b5404aff3. Original commit message:; ```; We would previously pick between calling an initializer list constructor; and calling a default constructor unstably in this situation, depending; on whether the inherited default constructor had already been used; elsewhere in the program.; ```. This commit first appeared in LLVM 10 and fixes some problems with modules when building with GCC 12, for example ODRHash asserts in `roottest-root-io-uniquePointer`. (cherry picked from commit cf32d2bc738367fe0d5c8ccbc0856d345f824228). Backport of PR https://github.com/root-project/root/pull/11359",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11362
https://github.com/root-project/root/pull/11362:224,Modifiability,inherit,inherited,224,"Backport of commit 1b5404aff3. Original commit message:; ```; We would previously pick between calling an initializer list constructor; and calling a default constructor unstably in this situation, depending; on whether the inherited default constructor had already been used; elsewhere in the program.; ```. This commit first appeared in LLVM 10 and fixes some problems with modules when building with GCC 12, for example ODRHash asserts in `roottest-root-io-uniquePointer`. (cherry picked from commit cf32d2bc738367fe0d5c8ccbc0856d345f824228). Backport of PR https://github.com/root-project/root/pull/11359",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11362
https://github.com/root-project/root/pull/11362:431,Testability,assert,asserts,431,"Backport of commit 1b5404aff3. Original commit message:; ```; We would previously pick between calling an initializer list constructor; and calling a default constructor unstably in this situation, depending; on whether the inherited default constructor had already been used; elsewhere in the program.; ```. This commit first appeared in LLVM 10 and fixes some problems with modules when building with GCC 12, for example ODRHash asserts in `roottest-root-io-uniquePointer`. (cherry picked from commit cf32d2bc738367fe0d5c8ccbc0856d345f824228). Backport of PR https://github.com/root-project/root/pull/11359",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11362
https://github.com/root-project/root/pull/11371:11,Safety,timeout,timeouts,11,"To fix the timeouts seen in our CI runs of the distributed RDataFrame with Dask suite. In particular, the Dask version used was 2021.10.0. Version 2021.11.2 fixes a couple of deadlock bugs which were most probably responsible for the timeouts (see https://distributed.dask.org/en/stable/changelog.html#v2021-11-2). We bump the minimum Dask version to 2022.02.0 (; https://distributed.dask.org/en/stable/changelog.html#v2022-02-0) because it is the last version with support for Python 3.7 (the current minimum Python version for distributed RDataFrame). The test suite was run with Dask 2021.10.0 on both Ubuntu and Fedora, showing the timeout. Version 2021.11.2 doesn't timeout.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11371
https://github.com/root-project/root/pull/11371:234,Safety,timeout,timeouts,234,"To fix the timeouts seen in our CI runs of the distributed RDataFrame with Dask suite. In particular, the Dask version used was 2021.10.0. Version 2021.11.2 fixes a couple of deadlock bugs which were most probably responsible for the timeouts (see https://distributed.dask.org/en/stable/changelog.html#v2021-11-2). We bump the minimum Dask version to 2022.02.0 (; https://distributed.dask.org/en/stable/changelog.html#v2022-02-0) because it is the last version with support for Python 3.7 (the current minimum Python version for distributed RDataFrame). The test suite was run with Dask 2021.10.0 on both Ubuntu and Fedora, showing the timeout. Version 2021.11.2 doesn't timeout.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11371
https://github.com/root-project/root/pull/11371:636,Safety,timeout,timeout,636,"To fix the timeouts seen in our CI runs of the distributed RDataFrame with Dask suite. In particular, the Dask version used was 2021.10.0. Version 2021.11.2 fixes a couple of deadlock bugs which were most probably responsible for the timeouts (see https://distributed.dask.org/en/stable/changelog.html#v2021-11-2). We bump the minimum Dask version to 2022.02.0 (; https://distributed.dask.org/en/stable/changelog.html#v2022-02-0) because it is the last version with support for Python 3.7 (the current minimum Python version for distributed RDataFrame). The test suite was run with Dask 2021.10.0 on both Ubuntu and Fedora, showing the timeout. Version 2021.11.2 doesn't timeout.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11371
https://github.com/root-project/root/pull/11371:671,Safety,timeout,timeout,671,"To fix the timeouts seen in our CI runs of the distributed RDataFrame with Dask suite. In particular, the Dask version used was 2021.10.0. Version 2021.11.2 fixes a couple of deadlock bugs which were most probably responsible for the timeouts (see https://distributed.dask.org/en/stable/changelog.html#v2021-11-2). We bump the minimum Dask version to 2022.02.0 (; https://distributed.dask.org/en/stable/changelog.html#v2022-02-0) because it is the last version with support for Python 3.7 (the current minimum Python version for distributed RDataFrame). The test suite was run with Dask 2021.10.0 on both Ubuntu and Fedora, showing the timeout. Version 2021.11.2 doesn't timeout.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11371
https://github.com/root-project/root/pull/11371:558,Testability,test,test,558,"To fix the timeouts seen in our CI runs of the distributed RDataFrame with Dask suite. In particular, the Dask version used was 2021.10.0. Version 2021.11.2 fixes a couple of deadlock bugs which were most probably responsible for the timeouts (see https://distributed.dask.org/en/stable/changelog.html#v2021-11-2). We bump the minimum Dask version to 2022.02.0 (; https://distributed.dask.org/en/stable/changelog.html#v2022-02-0) because it is the last version with support for Python 3.7 (the current minimum Python version for distributed RDataFrame). The test suite was run with Dask 2021.10.0 on both Ubuntu and Fedora, showing the timeout. Version 2021.11.2 doesn't timeout.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11371
https://github.com/root-project/root/issues/11372:1929,Availability,Error,Error,1929,"hadd Target path: target.root:/; hadd Target path: target.root:/Histograms; ```; Result: target.root created containing a tree with the expected number of entries. I would like to use the ""-v 0"" option for hadd to set the verbosity level to 0 as described by the program info.; ```; hadd. Usage: hadd [-f[fk][0-9]] [-k] [-T] [-O] [-a]; [-n maxopenedfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFileMerger::AddFile>: cannot open file target.root; hadd exiting due to error in target.root; ```; Result: target.root not created. ```; hadd target.root file_1.root file_2.root -v 0. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_2.root; hadd Source file 2: -v; Error in <TFile::TFile>: file -v does not exist; Error in <TFileMerger::AddFile>: cannot open file -v; hadd exiting due to error in -v; ```; Result: target.root created, but contains no tree and no entries. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version:; ```; ------------------------------------------------------------; | Welcome to ROOT 6.14/09 http://root.cern.ch |; | (c) 1995-2018, The ROOT Team |; | Built for linuxx8664gcc |; | From tag , 22 November 2018 |; | Try '.help', '.demo', '.license', '.credits'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11372
https://github.com/root-project/root/issues/11372:1987,Availability,Error,Error,1987,"t:/Histograms; ```; Result: target.root created containing a tree with the expected number of entries. I would like to use the ""-v 0"" option for hadd to set the verbosity level to 0 as described by the program info.; ```; hadd. Usage: hadd [-f[fk][0-9]] [-k] [-T] [-O] [-a]; [-n maxopenedfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFileMerger::AddFile>: cannot open file target.root; hadd exiting due to error in target.root; ```; Result: target.root not created. ```; hadd target.root file_1.root file_2.root -v 0. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_2.root; hadd Source file 2: -v; Error in <TFile::TFile>: file -v does not exist; Error in <TFileMerger::AddFile>: cannot open file -v; hadd exiting due to error in -v; ```; Result: target.root created, but contains no tree and no entries. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version:; ```; ------------------------------------------------------------; | Welcome to ROOT 6.14/09 http://root.cern.ch |; | (c) 1995-2018, The ROOT Team |; | Built for linuxx8664gcc |; | From tag , 22 November 2018 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11372
https://github.com/root-project/root/issues/11372:2070,Availability,error,error,2070," tree with the expected number of entries. I would like to use the ""-v 0"" option for hadd to set the verbosity level to 0 as described by the program info.; ```; hadd. Usage: hadd [-f[fk][0-9]] [-k] [-T] [-O] [-a]; [-n maxopenedfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFileMerger::AddFile>: cannot open file target.root; hadd exiting due to error in target.root; ```; Result: target.root not created. ```; hadd target.root file_1.root file_2.root -v 0. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_2.root; hadd Source file 2: -v; Error in <TFile::TFile>: file -v does not exist; Error in <TFileMerger::AddFile>: cannot open file -v; hadd exiting due to error in -v; ```; Result: target.root created, but contains no tree and no entries. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version:; ```; ------------------------------------------------------------; | Welcome to ROOT 6.14/09 http://root.cern.ch |; | (c) 1995-2018, The ROOT Team |; | Built for linuxx8664gcc |; | From tag , 22 November 2018 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------; ```. Operating system:; ```; cat /etc/re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11372
https://github.com/root-project/root/issues/11372:2313,Availability,Error,Error,2313,"edfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFileMerger::AddFile>: cannot open file target.root; hadd exiting due to error in target.root; ```; Result: target.root not created. ```; hadd target.root file_1.root file_2.root -v 0. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_2.root; hadd Source file 2: -v; Error in <TFile::TFile>: file -v does not exist; Error in <TFileMerger::AddFile>: cannot open file -v; hadd exiting due to error in -v; ```; Result: target.root created, but contains no tree and no entries. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version:; ```; ------------------------------------------------------------; | Welcome to ROOT 6.14/09 http://root.cern.ch |; | (c) 1995-2018, The ROOT Team |; | Built for linuxx8664gcc |; | From tag , 22 November 2018 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------; ```. Operating system:; ```; cat /etc/redhat-release. CentOS Linux release 7.8.2003 (Core); ```. CMSSW setup to obtain ROOT:; ```; cmsrel CMSSW_10_6_5; cd CMSSW_10_6_5/src; cmsenv; ```. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11372
https://github.com/root-project/root/issues/11372:2362,Availability,Error,Error,2362,"edfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFileMerger::AddFile>: cannot open file target.root; hadd exiting due to error in target.root; ```; Result: target.root not created. ```; hadd target.root file_1.root file_2.root -v 0. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_2.root; hadd Source file 2: -v; Error in <TFile::TFile>: file -v does not exist; Error in <TFileMerger::AddFile>: cannot open file -v; hadd exiting due to error in -v; ```; Result: target.root created, but contains no tree and no entries. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version:; ```; ------------------------------------------------------------; | Welcome to ROOT 6.14/09 http://root.cern.ch |; | (c) 1995-2018, The ROOT Team |; | Built for linuxx8664gcc |; | From tag , 22 November 2018 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------; ```. Operating system:; ```; cat /etc/redhat-release. CentOS Linux release 7.8.2003 (Core); ```. CMSSW setup to obtain ROOT:; ```; cmsrel CMSSW_10_6_5; cd CMSSW_10_6_5/src; cmsenv; ```. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11372
https://github.com/root-project/root/issues/11372:2436,Availability,error,error,2436,"edfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFileMerger::AddFile>: cannot open file target.root; hadd exiting due to error in target.root; ```; Result: target.root not created. ```; hadd target.root file_1.root file_2.root -v 0. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_2.root; hadd Source file 2: -v; Error in <TFile::TFile>: file -v does not exist; Error in <TFileMerger::AddFile>: cannot open file -v; hadd exiting due to error in -v; ```; Result: target.root created, but contains no tree and no entries. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version:; ```; ------------------------------------------------------------; | Welcome to ROOT 6.14/09 http://root.cern.ch |; | (c) 1995-2018, The ROOT Team |; | Built for linuxx8664gcc |; | From tag , 22 November 2018 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------; ```. Operating system:; ```; cat /etc/redhat-release. CentOS Linux release 7.8.2003 (Core); ```. CMSSW setup to obtain ROOT:; ```; cmsrel CMSSW_10_6_5; cd CMSSW_10_6_5/src; cmsenv; ```. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11372
https://github.com/root-project/root/issues/11372:2632,Availability,down,download,2632,"edfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFileMerger::AddFile>: cannot open file target.root; hadd exiting due to error in target.root; ```; Result: target.root not created. ```; hadd target.root file_1.root file_2.root -v 0. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_2.root; hadd Source file 2: -v; Error in <TFile::TFile>: file -v does not exist; Error in <TFileMerger::AddFile>: cannot open file -v; hadd exiting due to error in -v; ```; Result: target.root created, but contains no tree and no entries. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version:; ```; ------------------------------------------------------------; | Welcome to ROOT 6.14/09 http://root.cern.ch |; | (c) 1995-2018, The ROOT Team |; | Built for linuxx8664gcc |; | From tag , 22 November 2018 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------; ```. Operating system:; ```; cat /etc/redhat-release. CentOS Linux release 7.8.2003 (Core); ```. CMSSW setup to obtain ROOT:; ```; cmsrel CMSSW_10_6_5; cd CMSSW_10_6_5/src; cmsenv; ```. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11372
https://github.com/root-project/root/issues/11372:2614,Deployability,install,install,2614,"edfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFileMerger::AddFile>: cannot open file target.root; hadd exiting due to error in target.root; ```; Result: target.root not created. ```; hadd target.root file_1.root file_2.root -v 0. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_2.root; hadd Source file 2: -v; Error in <TFile::TFile>: file -v does not exist; Error in <TFileMerger::AddFile>: cannot open file -v; hadd exiting due to error in -v; ```; Result: target.root created, but contains no tree and no entries. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version:; ```; ------------------------------------------------------------; | Welcome to ROOT 6.14/09 http://root.cern.ch |; | (c) 1995-2018, The ROOT Team |; | Built for linuxx8664gcc |; | From tag , 22 November 2018 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------; ```. Operating system:; ```; cat /etc/redhat-release. CentOS Linux release 7.8.2003 (Core); ```. CMSSW setup to obtain ROOT:; ```; cmsrel CMSSW_10_6_5; cd CMSSW_10_6_5/src; cmsenv; ```. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11372
https://github.com/root-project/root/issues/11372:3070,Deployability,release,release,3070,"edfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFileMerger::AddFile>: cannot open file target.root; hadd exiting due to error in target.root; ```; Result: target.root not created. ```; hadd target.root file_1.root file_2.root -v 0. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_2.root; hadd Source file 2: -v; Error in <TFile::TFile>: file -v does not exist; Error in <TFileMerger::AddFile>: cannot open file -v; hadd exiting due to error in -v; ```; Result: target.root created, but contains no tree and no entries. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version:; ```; ------------------------------------------------------------; | Welcome to ROOT 6.14/09 http://root.cern.ch |; | (c) 1995-2018, The ROOT Team |; | Built for linuxx8664gcc |; | From tag , 22 November 2018 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------; ```. Operating system:; ```; cat /etc/redhat-release. CentOS Linux release 7.8.2003 (Core); ```. CMSSW setup to obtain ROOT:; ```; cmsrel CMSSW_10_6_5; cd CMSSW_10_6_5/src; cmsenv; ```. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11372
https://github.com/root-project/root/issues/11372:3092,Deployability,release,release,3092,"edfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFileMerger::AddFile>: cannot open file target.root; hadd exiting due to error in target.root; ```; Result: target.root not created. ```; hadd target.root file_1.root file_2.root -v 0. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_2.root; hadd Source file 2: -v; Error in <TFile::TFile>: file -v does not exist; Error in <TFileMerger::AddFile>: cannot open file -v; hadd exiting due to error in -v; ```; Result: target.root created, but contains no tree and no entries. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version:; ```; ------------------------------------------------------------; | Welcome to ROOT 6.14/09 http://root.cern.ch |; | (c) 1995-2018, The ROOT Team |; | Built for linuxx8664gcc |; | From tag , 22 November 2018 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------; ```. Operating system:; ```; cat /etc/redhat-release. CentOS Linux release 7.8.2003 (Core); ```. CMSSW setup to obtain ROOT:; ```; cmsrel CMSSW_10_6_5; cd CMSSW_10_6_5/src; cmsenv; ```. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11372
https://github.com/root-project/root/issues/11372:1302,Performance,cache,cachesize,1302,"stance ""issue still exists in today's master"".; -->. This issue was addressed here: https://github.com/root-project/root/pull/3914, but it is present in ROOT 6.14/09. ### Describe the bug. The hadd ""-v 0"" option to set the verbosity level to 0 does not work in ROOT 6.14/09. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Here is an example of running hadd on two files to create an output file.; ```; hadd target.root file_1.root file_2.root. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_1.root; hadd Source file 2: file_2.root; hadd Target path: target.root:/; hadd Target path: target.root:/Histograms; ```; Result: target.root created containing a tree with the expected number of entries. I would like to use the ""-v 0"" option for hadd to set the verbosity level to 0 as described by the program info.; ```; hadd. Usage: hadd [-f[fk][0-9]] [-k] [-T] [-O] [-a]; [-n maxopenedfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFileMerger::AddFile>: cannot open file target.root; hadd exiting due to error in target.root; ```; Result: target.root not created. ```; hadd target.root file_1.root file_2.root -v 0. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_2.root; hadd Source file 2:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11372
https://github.com/root-project/root/issues/11372:614,Usability,clear,clear,614,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. This issue was addressed here: https://github.com/root-project/root/pull/3914, but it is present in ROOT 6.14/09. ### Describe the bug. The hadd ""-v 0"" option to set the verbosity level to 0 does not work in ROOT 6.14/09. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Here is an example of running hadd on two files to create an output file.; ```; hadd target.root file_1.root file_2.root. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_1.root; hadd Source file 2: file_2.root; hadd Target path: target.root:/; hadd Target path: target.root:/Histograms; ```; Result: target.root created containing a tree with the expected number of entries. I would like to use the ""-v 0"" option for hadd to set the verbosity level to 0 as described by the program info.; ```; hadd. Usage: hadd [-f[fk][0-9]] [-k] [-T] [-O] [-a]; [-n maxopenedfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11372
https://github.com/root-project/root/pull/11374:16,Testability,test,test,16,"It was there to test whether the user wants to connect to a batch system with Dask and consequently get the number of cores requested. Now this is done lazily, and if the module is not found it means that there is no connection to a batch system involved. Thus we can just get the number of cores through the more generic Client API.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11374
https://github.com/root-project/root/pull/11378:288,Modifiability,extend,extended,288,"The PR #7719 changed the behavior of multi-range fits in RooFit, and from then one the relative yields in the multiple regions were also considered in the fit. The tutorial `rf204b_extendedLikelihood_rangedFit` was explaining the old caveat that relative yields are not considered in non-extended fits, but since that is not a problem anymore, a big chunk of explanation in the tutorial should be removed. A Python translation of the tutorial was also added. Closes #8808.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11378
https://github.com/root-project/root/pull/11379:281,Testability,test,tested,281,## This Pull request. Add a missing attribute to the Softmax operator. the axis attribute describes the dimension along which the softmax will be computed as specified in the ONNX documentation https://github.com/onnx/onnx/blob/main/docs/Operators.md#Softmax. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11379
https://github.com/root-project/root/issues/11381:3851,Availability,Error,Error,3851,"=yes -Dimt=yes -Dlibcxx=no -Dmathmore=yes -Dminimal=OFF -Dminuit2=yes -Dminuit=yes -Dmlp=yes -Dmonalisa=OFF -Dmpi=yes -Dmysql=yes -Dodbc=yes -Dopengl=yes -Doracle=yes -Dpgsql=yes -Dpyroot=yes -Dpyroot_legacy=OFF -Dpythia6=yes -Dpythia8=yes -Dqt5web=yes -Dqt6web=OFF -Dr=no -Droofit=yes -Droofit_multiprocess=OFF -Droot7=yes -Drootbench=OFF -Droottest=OFF -Drpath=OFF -Druntime_cxxmodules=OFF -Dshadowpw=yes -Dspectrum=ON -Dsqlite=yes -Dssl=yes -Dtcmalloc=OFF -Dtest_distrdf_dask=OFF -Dtest_distrdf_pyspark=OFF -Dtesting=no -Dtmva=yes -Dtmva-cpu=yes -Dtmva-gpu=no -Dtmva-pymva=yes -Dtmva-rmva=no -Dtmva-sofie=OFF -Dunuran=yes -During=yes -Dvc=yes -Dvdt=OFF -Dveccore=OFF -Dvecgeom=OFF -Dx11=yes -Dxml=yes -Dxrootd=yes -Dvdt=ON -Dveccore=OFF -Druntime_cxxmodules=OFF -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/gentoo_toolchain.cmake /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06; ```. Error with runtime_cxxmodules=OFF; ```; [ 76%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; cd /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/io/io && /usr/bin/cmake -E env LD_LIBRARY_PATH=/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib:/usr/bin/../lib: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -s /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06 -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/ginclude -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/externals -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/builtins -rml libRIO.so -rmf /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO.rootmap -writeEmptyRootPCM -D -compilerI/usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:7650,Availability,error,error,7650,root-6.26.06/core/foundation/inc -I/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/core/base/inc -I/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/ginclude -I/usr/include -I/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/core/clib/res ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/RIoUring.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TZIPFile.h ROOT/RFile.hxx /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/io/io/inc/LinkDef.h; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:23:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/RtypesCore.h:28:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstddef:50:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:35:9: error: unknown type name '__PTRDIFF_TYPE__'; typedef __PTRDIFF_TYPE__ ptrdiff_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:74:9: error: unknown type name '__WCHAR_TY,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:8240,Availability,error,error,8240,h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TZIPFile.h ROOT/RFile.hxx /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/io/io/inc/LinkDef.h; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:23:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/RtypesCore.h:28:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstddef:50:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:35:9: error: unknown type name '__PTRDIFF_TYPE__'; typedef __PTRDIFF_TYPE__ ptrdiff_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:74:9: error: unknown type name '__WCHAR_TYPE__'; typedef __WCHAR_TYPE__ wchar_t;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:28:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/strtok.h:6:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:75:1: error: unknown type name '_GLIBCXX_BEGIN_NAMESPACE_VERSION'; _GLIBCXX_BEGIN_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:8440,Availability,error,error,8440,.h ROOT/RFile.hxx /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/io/io/inc/LinkDef.h; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:23:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/RtypesCore.h:28:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstddef:50:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:35:9: error: unknown type name '__PTRDIFF_TYPE__'; typedef __PTRDIFF_TYPE__ ptrdiff_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:74:9: error: unknown type name '__WCHAR_TYPE__'; typedef __WCHAR_TYPE__ wchar_t;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:28:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/strtok.h:6:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:75:1: error: unknown type name '_GLIBCXX_BEGIN_NAMESPACE_VERSION'; _GLIBCXX_BEGIN_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:122:1: error: unknown type name '_GLIBCXX_END_NAMESPACE_VERSION'; _GLIBCXX_END_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:123:1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:8631,Availability,error,error,8631,ib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:23:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/RtypesCore.h:28:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstddef:50:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:35:9: error: unknown type name '__PTRDIFF_TYPE__'; typedef __PTRDIFF_TYPE__ ptrdiff_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:74:9: error: unknown type name '__WCHAR_TYPE__'; typedef __WCHAR_TYPE__ wchar_t;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:28:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/strtok.h:6:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:75:1: error: unknown type name '_GLIBCXX_BEGIN_NAMESPACE_VERSION'; _GLIBCXX_BEGIN_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:122:1: error: unknown type name '_GLIBCXX_END_NAMESPACE_VERSION'; _GLIBCXX_END_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:123:1: error: expected unqualified-id; } // namespace; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:31:; In file included from,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:9038,Availability,error,error,9038,12.2.1/include/g++-v12/cstddef:50:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:35:9: error: unknown type name '__PTRDIFF_TYPE__'; typedef __PTRDIFF_TYPE__ ptrdiff_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:74:9: error: unknown type name '__WCHAR_TYPE__'; typedef __WCHAR_TYPE__ wchar_t;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:28:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/strtok.h:6:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:75:1: error: unknown type name '_GLIBCXX_BEGIN_NAMESPACE_VERSION'; _GLIBCXX_BEGIN_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:122:1: error: unknown type name '_GLIBCXX_END_NAMESPACE_VERSION'; _GLIBCXX_END_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:123:1: error: expected unqualified-id; } // namespace; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:31:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/type_traits:35:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/c++0x_warning.h:32:2: error: This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler; options.; #error This file requires compiler and library,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:9206,Availability,error,error,9206,35:9: error: unknown type name '__PTRDIFF_TYPE__'; typedef __PTRDIFF_TYPE__ ptrdiff_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:74:9: error: unknown type name '__WCHAR_TYPE__'; typedef __WCHAR_TYPE__ wchar_t;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:28:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/strtok.h:6:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:75:1: error: unknown type name '_GLIBCXX_BEGIN_NAMESPACE_VERSION'; _GLIBCXX_BEGIN_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:122:1: error: unknown type name '_GLIBCXX_END_NAMESPACE_VERSION'; _GLIBCXX_END_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:123:1: error: expected unqualified-id; } // namespace; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:31:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/type_traits:35:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/c++0x_warning.h:32:2: error: This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler; options.; #error This file requires compiler and library support \; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/inc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:9329,Availability,error,error,9329,6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:74:9: error: unknown type name '__WCHAR_TYPE__'; typedef __WCHAR_TYPE__ wchar_t;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:28:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/strtok.h:6:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:75:1: error: unknown type name '_GLIBCXX_BEGIN_NAMESPACE_VERSION'; _GLIBCXX_BEGIN_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:122:1: error: unknown type name '_GLIBCXX_END_NAMESPACE_VERSION'; _GLIBCXX_END_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:123:1: error: expected unqualified-id; } // namespace; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:31:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/type_traits:35:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/c++0x_warning.h:32:2: error: This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler; options.; #error This file requires compiler and library support \; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:9494,Availability,error,error,9494,.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:74:9: error: unknown type name '__WCHAR_TYPE__'; typedef __WCHAR_TYPE__ wchar_t;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:28:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/strtok.h:6:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:75:1: error: unknown type name '_GLIBCXX_BEGIN_NAMESPACE_VERSION'; _GLIBCXX_BEGIN_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:122:1: error: unknown type name '_GLIBCXX_END_NAMESPACE_VERSION'; _GLIBCXX_END_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:123:1: error: expected unqualified-id; } // namespace; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:31:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/type_traits:35:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/c++0x_warning.h:32:2: error: This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler; options.; #error This file requires compiler and library support \; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: error: redefinition of 'exception'; class exception; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/new:41:10: note:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:9872,Availability,error,error,9872,"root-6.26.06/work/root-6.26.06_build/include/strtok.h:6:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:75:1: error: unknown type name '_GLIBCXX_BEGIN_NAMESPACE_VERSION'; _GLIBCXX_BEGIN_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:122:1: error: unknown type name '_GLIBCXX_END_NAMESPACE_VERSION'; _GLIBCXX_END_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:123:1: error: expected unqualified-id; } // namespace; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:31:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/type_traits:35:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/c++0x_warning.h:32:2: error: This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler; options.; #error This file requires compiler and library support \; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: error: redefinition of 'exception'; class exception; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/new:41:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:10044,Availability,error,error,10044,"CE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:122:1: error: unknown type name '_GLIBCXX_END_NAMESPACE_VERSION'; _GLIBCXX_END_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:123:1: error: expected unqualified-id; } // namespace; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:31:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/type_traits:35:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/c++0x_warning.h:32:2: error: This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler; options.; #error This file requires compiler and library support \; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: error: redefinition of 'exception'; class exception; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/new:41:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: note: unguarded header; consider using #ifdef guards or #pragma once; class exception; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:10424,Availability,error,error,10424,"lude/g++-v12/cstring:123:1: error: expected unqualified-id; } // namespace; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:31:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/type_traits:35:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/c++0x_warning.h:32:2: error: This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler; options.; #error This file requires compiler and library support \; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: error: redefinition of 'exception'; class exception; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/new:41:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: note: unguarded header; consider using #ifdef guards or #pragma once; class exception; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:103:29: error: expected ';' at end of declaration list; const char* name() const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:11346,Availability,error,error,11346,"++-v12/bits/exception.h:61:9: error: redefinition of 'exception'; class exception; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/new:41:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: note: unguarded header; consider using #ifdef guards or #pragma once; class exception; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:103:29: error: expected ';' at end of declaration list; const char* name() const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:110:5: error: unknown type name '_GLIBCXX23_CONSTEXPR'; _GLIBCXX23_CONSTEXPR; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:111:50: error: expected ';' at end of declaration list; bool operator==(const type_info& __arg) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:114:50: error: expected ';' at end of declaration list; bool operator!=(const type_info& __arg) const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:165:41: error: expected ';' at end of declaration list; bool __equal(const type_info&) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:223:15: error: expected ';' at end of declaration list; bad_cast() _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:25: error: excep",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:11513,Availability,error,error,11513,": '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: note: unguarded header; consider using #ifdef guards or #pragma once; class exception; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:103:29: error: expected ';' at end of declaration list; const char* name() const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:110:5: error: unknown type name '_GLIBCXX23_CONSTEXPR'; _GLIBCXX23_CONSTEXPR; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:111:50: error: expected ';' at end of declaration list; bool operator==(const type_info& __arg) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:114:50: error: expected ';' at end of declaration list; bool operator!=(const type_info& __arg) const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:165:41: error: expected ';' at end of declaration list; bool __equal(const type_info&) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:223:15: error: expected ';' at end of declaration list; bad_cast() _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:11660,Availability,error,error,11660,"/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: note: unguarded header; consider using #ifdef guards or #pragma once; class exception; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:103:29: error: expected ';' at end of declaration list; const char* name() const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:110:5: error: unknown type name '_GLIBCXX23_CONSTEXPR'; _GLIBCXX23_CONSTEXPR; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:111:50: error: expected ';' at end of declaration list; bool operator==(const type_info& __arg) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:114:50: error: expected ';' at end of declaration list; bool operator!=(const type_info& __arg) const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:165:41: error: expected ';' at end of declaration list; bool __equal(const type_info&) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:223:15: error: expected ';' at end of declaration list; bad_cast() _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:11850,Availability,error,error,11850,ude site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: note: unguarded header; consider using #ifdef guards or #pragma once; class exception; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:103:29: error: expected ';' at end of declaration list; const char* name() const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:110:5: error: unknown type name '_GLIBCXX23_CONSTEXPR'; _GLIBCXX23_CONSTEXPR; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:111:50: error: expected ';' at end of declaration list; bool operator==(const type_info& __arg) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:114:50: error: expected ';' at end of declaration list; bool operator!=(const type_info& __arg) const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:165:41: error: expected ';' at end of declaration list; bool __equal(const type_info&) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:223:15: error: expected ';' at end of declaration list; bad_cast() _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:12039,Availability,error,error,12039,agma once; class exception; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:103:29: error: expected ';' at end of declaration list; const char* name() const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:110:5: error: unknown type name '_GLIBCXX23_CONSTEXPR'; _GLIBCXX23_CONSTEXPR; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:111:50: error: expected ';' at end of declaration list; bool operator==(const type_info& __arg) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:114:50: error: expected ';' at end of declaration list; bool operator!=(const type_info& __arg) const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:165:41: error: expected ';' at end of declaration list; bool __equal(const type_info&) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:223:15: error: expected ';' at end of declaration list; bad_cast() _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/ty,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:12220,Availability,error,error,12220,.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:103:29: error: expected ';' at end of declaration list; const char* name() const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:110:5: error: unknown type name '_GLIBCXX23_CONSTEXPR'; _GLIBCXX23_CONSTEXPR; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:111:50: error: expected ';' at end of declaration list; bool operator==(const type_info& __arg) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:114:50: error: expected ';' at end of declaration list; bool operator!=(const type_info& __arg) const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:165:41: error: expected ';' at end of declaration list; bool __equal(const type_info&) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:223:15: error: expected ';' at end of declaration list; bad_cast() _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:12382,Availability,error,error,12382,86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:110:5: error: unknown type name '_GLIBCXX23_CONSTEXPR'; _GLIBCXX23_CONSTEXPR; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:111:50: error: expected ';' at end of declaration list; bool operator==(const type_info& __arg) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:114:50: error: expected ';' at end of declaration list; bool operator!=(const type_info& __arg) const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:165:41: error: expected ';' at end of declaration list; bool __equal(const type_info&) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:223:15: error: expected ';' at end of declaration list; bad_cast() _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:247:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:12928,Availability,error,error,12928,"_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:165:41: error: expected ';' at end of declaration list; bool __equal(const type_info&) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:223:15: error: expected ';' at end of declaration list; bad_cast() _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:247:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; ```; Error with runtime_cxxmodules=ON; ```; [ 76%] Generating G__RIO.cxx, ../../lib/RIO.pcm; cd /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/io/io && /usr/bin/cmake -E env LD_LIBRARY_PATH=/var/tmp/portage/sci-physics/root-6.26.06/work/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:13109,Availability,error,error,13109,"/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:223:15: error: expected ';' at end of declaration list; bad_cast() _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:247:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; ```; Error with runtime_cxxmodules=ON; ```; [ 76%] Generating G__RIO.cxx, ../../lib/RIO.pcm; cd /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/io/io && /usr/bin/cmake -E env LD_LIBRARY_PATH=/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib:/usr/bin/../lib: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:13274,Availability,error,error,13274,"1/include/g++-v12/typeinfo:230:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:247:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; ```; Error with runtime_cxxmodules=ON; ```; [ 76%] Generating G__RIO.cxx, ../../lib/RIO.pcm; cd /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/io/io && /usr/bin/cmake -E env LD_LIBRARY_PATH=/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib:/usr/bin/../lib: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO.so -m Core.pcm -m Thread.pcm -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06 -exclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:13604,Availability,error,error,13604,"note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:247:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; ```; Error with runtime_cxxmodules=ON; ```; [ 76%] Generating G__RIO.cxx, ../../lib/RIO.pcm; cd /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/io/io && /usr/bin/cmake -E env LD_LIBRARY_PATH=/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib:/usr/bin/../lib: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO.so -m Core.pcm -m Thread.pcm -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06 -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/ginclude -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/externals -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/builtins -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:13620,Availability,error,errors,13620,"note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:247:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; ```; Error with runtime_cxxmodules=ON; ```; [ 76%] Generating G__RIO.cxx, ../../lib/RIO.pcm; cd /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/io/io && /usr/bin/cmake -E env LD_LIBRARY_PATH=/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib:/usr/bin/../lib: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO.so -m Core.pcm -m Thread.pcm -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06 -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/ginclude -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/externals -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/builtins -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:13667,Availability,Error,Error,13667,"note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:247:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; ```; Error with runtime_cxxmodules=ON; ```; [ 76%] Generating G__RIO.cxx, ../../lib/RIO.pcm; cd /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/io/io && /usr/bin/cmake -E env LD_LIBRARY_PATH=/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib:/usr/bin/../lib: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO.so -m Core.pcm -m Thread.pcm -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06 -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/ginclude -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/externals -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/builtins -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:13674,Availability,Error,Error,13674,"note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:247:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; ```; Error with runtime_cxxmodules=ON; ```; [ 76%] Generating G__RIO.cxx, ../../lib/RIO.pcm; cd /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/io/io && /usr/bin/cmake -E env LD_LIBRARY_PATH=/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib:/usr/bin/../lib: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO.so -m Core.pcm -m Thread.pcm -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06 -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/ginclude -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/externals -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/builtins -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:13730,Availability,Error,Error,13730,"ded from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:247:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; ```; Error with runtime_cxxmodules=ON; ```; [ 76%] Generating G__RIO.cxx, ../../lib/RIO.pcm; cd /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/io/io && /usr/bin/cmake -E env LD_LIBRARY_PATH=/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib:/usr/bin/../lib: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO.so -m Core.pcm -m Thread.pcm -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06 -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/ginclude -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/externals -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/builtins -writeEmptyRootPCM -D -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:17439,Availability,error,error,17439,re/foundation/inc -I/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/core/base/inc -I/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/ginclude -I/usr/include -I/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/core/clib/res ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/RIoUring.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TZIPFile.h ROOT/RFile.hxx /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/io/io/inc/LinkDef.h; While building module 'RIO':; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1; ^; input_line_7:1:9: error: macro name must be an identifier; #ifndef -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:26:; In file included from /usr/include/bits/types/struct_iovec.h:23:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:17578,Availability,error,error,17578,nclude -I/usr/include -I/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/core/clib/res ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/RIoUring.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TZIPFile.h ROOT/RFile.hxx /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/io/io/inc/LinkDef.h; While building module 'RIO':; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1; ^; input_line_7:1:9: error: macro name must be an identifier; #ifndef -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:26:; In file included from /usr/include/bits/types/struct_iovec.h:23:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:28:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unkno,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:18140,Availability,error,error,18140,rs.h TStreamerInfo.h TZIPFile.h ROOT/RFile.hxx /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/io/io/inc/LinkDef.h; While building module 'RIO':; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1; ^; input_line_7:1:9: error: macro name must be an identifier; #ifndef -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:26:; In file included from /usr/include/bits/types/struct_iovec.h:23:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:28:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:33:; In file included from /usr/include/bits/socket.h:27:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:18593,Availability,error,error,18593,1/include/g++-v12; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:26:; In file included from /usr/include/bits/types/struct_iovec.h:23:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:28:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:33:; In file included from /usr/include/bits/socket.h:27:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:22:; In file included from /usr/include/sched.h:29:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file inclu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:19100,Availability,error,error,19100,"typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:28:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:33:; In file included from /usr/include/bits/socket.h:27:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:22:; In file included from /usr/include/sched.h:29:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:230:3: error: use of undeclared identifier 'memory_order_release'; io_uring_smp_store_release(cq->khead, *cq->khead + nr);; ^; /usr/include/liburing/barrier.h:72:10: note: expanded from macro 'io_uring_smp_store_release'; memory_order_release); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:19548,Availability,error,error,19548,"__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:33:; In file included from /usr/include/bits/socket.h:27:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:22:; In file included from /usr/include/sched.h:29:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:230:3: error: use of undeclared identifier 'memory_order_release'; io_uring_smp_store_release(cq->khead, *cq->khead + nr);; ^; /usr/include/liburing/barrier.h:72:10: note: expanded from macro 'io_uring_smp_store_release'; memory_order_release); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:899:11: error: use of undeclared identifier 'memory_order_acquire'; khead = io_uring_smp_load_acquire(ring->sq.khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:19813,Availability,error,error,19813,"le included from /usr/include/sys/socket.h:33:; In file included from /usr/include/bits/socket.h:27:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:22:; In file included from /usr/include/sched.h:29:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:230:3: error: use of undeclared identifier 'memory_order_release'; io_uring_smp_store_release(cq->khead, *cq->khead + nr);; ^; /usr/include/liburing/barrier.h:72:10: note: expanded from macro 'io_uring_smp_store_release'; memory_order_release); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:899:11: error: use of undeclared identifier 'memory_order_acquire'; khead = io_uring_smp_load_acquire(ring->sq.khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:935:9: error: use of undeclared identifier 'memory_order_acquire'; return io_uring_smp_load_acquire(ring->cq.ktail) - *ring->cq.khead;; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_ac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:20244,Availability,error,error,20244,".26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:22:; In file included from /usr/include/sched.h:29:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:230:3: error: use of undeclared identifier 'memory_order_release'; io_uring_smp_store_release(cq->khead, *cq->khead + nr);; ^; /usr/include/liburing/barrier.h:72:10: note: expanded from macro 'io_uring_smp_store_release'; memory_order_release); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:899:11: error: use of undeclared identifier 'memory_order_acquire'; khead = io_uring_smp_load_acquire(ring->sq.khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:935:9: error: use of undeclared identifier 'memory_order_acquire'; return io_uring_smp_load_acquire(ring->cq.ktail) - *ring->cq.khead;; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:941:15: error: unknown type name '_Bool'; static inline bool io_uring_cq_eventfd_enabled(const struct io_uring *ring); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:20667,Availability,error,error,20667,"/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:230:3: error: use of undeclared identifier 'memory_order_release'; io_uring_smp_store_release(cq->khead, *cq->khead + nr);; ^; /usr/include/liburing/barrier.h:72:10: note: expanded from macro 'io_uring_smp_store_release'; memory_order_release); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:899:11: error: use of undeclared identifier 'memory_order_acquire'; khead = io_uring_smp_load_acquire(ring->sq.khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:935:9: error: use of undeclared identifier 'memory_order_acquire'; return io_uring_smp_load_acquire(ring->cq.ktail) - *ring->cq.khead;; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:941:15: error: unknown type name '_Bool'; static inline bool io_uring_cq_eventfd_enabled(const struct io_uring *ring); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stdbool.h:15:14: note: expanded from macro 'bool'; #define bool _Bool; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:954:11: error: unknown type name '_Bool'; bool enabled); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:21108,Availability,error,error,21108,"ld/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:899:11: error: use of undeclared identifier 'memory_order_acquire'; khead = io_uring_smp_load_acquire(ring->sq.khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:935:9: error: use of undeclared identifier 'memory_order_acquire'; return io_uring_smp_load_acquire(ring->cq.ktail) - *ring->cq.khead;; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:941:15: error: unknown type name '_Bool'; static inline bool io_uring_cq_eventfd_enabled(const struct io_uring *ring); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stdbool.h:15:14: note: expanded from macro 'bool'; #define bool _Bool; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:954:11: error: unknown type name '_Bool'; bool enabled); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stdbool.h:15:14: note: expanded from macro 'bool'; #define bool _Bool; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:971:2: error: use of undeclared identifier 'memory_order_relaxed'; IO_URING_WRITE_ONCE(*ring->cq.kflags, flags);; ^; /usr/include/liburing/barrier.h:65:17: note: expanded from macro 'I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:21586,Availability,error,error,21586,"g.hxx:17:; /usr/include/liburing.h:935:9: error: use of undeclared identifier 'memory_order_acquire'; return io_uring_smp_load_acquire(ring->cq.ktail) - *ring->cq.khead;; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:941:15: error: unknown type name '_Bool'; static inline bool io_uring_cq_eventfd_enabled(const struct io_uring *ring); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stdbool.h:15:14: note: expanded from macro 'bool'; #define bool _Bool; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:954:11: error: unknown type name '_Bool'; bool enabled); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stdbool.h:15:14: note: expanded from macro 'bool'; #define bool _Bool; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:971:2: error: use of undeclared identifier 'memory_order_relaxed'; IO_URING_WRITE_ONCE(*ring->cq.kflags, flags);; ^; /usr/include/liburing/barrier.h:65:17: note: expanded from macro 'IO_URING_WRITE_ONCE'; (val), memory_order_relaxed); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:985:9: error: no matching function for call to '__io_uring_get_cqe'; return __io_uring_get_cqe(ring, cqe_ptr, 0, wait_nr, NULL);; ^~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:191:5: note: candidate function not v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:22001,Availability,error,error,22001,"ild/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:941:15: error: unknown type name '_Bool'; static inline bool io_uring_cq_eventfd_enabled(const struct io_uring *ring); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stdbool.h:15:14: note: expanded from macro 'bool'; #define bool _Bool; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:954:11: error: unknown type name '_Bool'; bool enabled); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stdbool.h:15:14: note: expanded from macro 'bool'; #define bool _Bool; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:971:2: error: use of undeclared identifier 'memory_order_relaxed'; IO_URING_WRITE_ONCE(*ring->cq.kflags, flags);; ^; /usr/include/liburing/barrier.h:65:17: note: expanded from macro 'IO_URING_WRITE_ONCE'; (val), memory_order_relaxed); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:985:9: error: no matching function for call to '__io_uring_get_cqe'; return __io_uring_get_cqe(ring, cqe_ptr, 0, wait_nr, NULL);; ^~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:191:5: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'sigset_t *' (aka '__sigset_t *') for 5th argument; int __io_uring_get_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1007:19: error: use of undeclared identifier 'memory_order_acquire'; unsigned tail = io_uring_smp_load_acquire(ring->cq.ktail);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:22421,Availability,error,error,22421,"work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:954:11: error: unknown type name '_Bool'; bool enabled); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stdbool.h:15:14: note: expanded from macro 'bool'; #define bool _Bool; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:971:2: error: use of undeclared identifier 'memory_order_relaxed'; IO_URING_WRITE_ONCE(*ring->cq.kflags, flags);; ^; /usr/include/liburing/barrier.h:65:17: note: expanded from macro 'IO_URING_WRITE_ONCE'; (val), memory_order_relaxed); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:985:9: error: no matching function for call to '__io_uring_get_cqe'; return __io_uring_get_cqe(ring, cqe_ptr, 0, wait_nr, NULL);; ^~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:191:5: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'sigset_t *' (aka '__sigset_t *') for 5th argument; int __io_uring_get_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1007:19: error: use of undeclared identifier 'memory_order_acquire'; unsigned tail = io_uring_smp_load_acquire(ring->cq.ktail);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1010:9: error: assigning to 'struct io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL';",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:22822,Availability,error,error,22822," /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:971:2: error: use of undeclared identifier 'memory_order_relaxed'; IO_URING_WRITE_ONCE(*ring->cq.kflags, flags);; ^; /usr/include/liburing/barrier.h:65:17: note: expanded from macro 'IO_URING_WRITE_ONCE'; (val), memory_order_relaxed); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:985:9: error: no matching function for call to '__io_uring_get_cqe'; return __io_uring_get_cqe(ring, cqe_ptr, 0, wait_nr, NULL);; ^~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:191:5: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'sigset_t *' (aka '__sigset_t *') for 5th argument; int __io_uring_get_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1007:19: error: use of undeclared identifier 'memory_order_acquire'; unsigned tail = io_uring_smp_load_acquire(ring->cq.ktail);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1010:9: error: assigning to 'struct io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1023:10: error: assigning to 'struct io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:23254,Availability,error,error,23254,"hysics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:985:9: error: no matching function for call to '__io_uring_get_cqe'; return __io_uring_get_cqe(ring, cqe_ptr, 0, wait_nr, NULL);; ^~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:191:5: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'sigset_t *' (aka '__sigset_t *') for 5th argument; int __io_uring_get_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1007:19: error: use of undeclared identifier 'memory_order_acquire'; unsigned tail = io_uring_smp_load_acquire(ring->cq.ktail);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1010:9: error: assigning to 'struct io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1023:10: error: assigning to 'struct io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1042:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:23729,Availability,error,error,23729,"/usr/include/liburing.h:1007:19: error: use of undeclared identifier 'memory_order_acquire'; unsigned tail = io_uring_smp_load_acquire(ring->cq.ktail);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1010:9: error: assigning to 'struct io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1023:10: error: assigning to 'struct io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1042:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1055:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:24203,Availability,error,error,24203," io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1023:10: error: assigning to 'struct io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1042:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1055:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1071:22: error: use of undeclared identifier 'memory_order_acquire'; unsigned int head = io_uring_smp_load_acquire(sq->khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:24603,Availability,error,error,24603,"Uring.hxx:17:; /usr/include/liburing.h:1023:10: error: assigning to 'struct io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1042:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1055:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1071:22: error: use of undeclared identifier 'memory_order_acquire'; unsigned int head = io_uring_smp_load_acquire(sq->khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1086:9: error: cannot initialize return object of type 'struct io_uring_sqe *' with an rvalue of type 'void *'; return NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:25004,Availability,error,error,25004,"/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1042:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1055:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1071:22: error: use of undeclared identifier 'memory_order_acquire'; unsigned int head = io_uring_smp_load_acquire(sq->khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1086:9: error: cannot initialize return object of type 'struct io_uring_sqe *' with an rvalue of type 'void *'; return NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO3af69f19b2_dictUmbrella.h); make[2]: *** [io/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:25435,Availability,error,error,25435,"e/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1042:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1055:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1071:22: error: use of undeclared identifier 'memory_order_acquire'; unsigned int head = io_uring_smp_load_acquire(sq->khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1086:9: error: cannot initialize return object of type 'struct io_uring_sqe *' with an rvalue of type 'void *'; return NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO3af69f19b2_dictUmbrella.h); make[2]: *** [io/io/CMakeFiles/G__RIO.dir/build.make:146: io/io/G__RIO.cxx] Error 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:25753,Availability,error,error,25753,"e/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1042:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1055:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1071:22: error: use of undeclared identifier 'memory_order_acquire'; unsigned int head = io_uring_smp_load_acquire(sq->khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1086:9: error: cannot initialize return object of type 'struct io_uring_sqe *' with an rvalue of type 'void *'; return NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO3af69f19b2_dictUmbrella.h); make[2]: *** [io/io/CMakeFiles/G__RIO.dir/build.make:146: io/io/G__RIO.cxx] Error 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:25769,Availability,error,errors,25769,"e/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1042:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1055:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1071:22: error: use of undeclared identifier 'memory_order_acquire'; unsigned int head = io_uring_smp_load_acquire(sq->khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1086:9: error: cannot initialize return object of type 'struct io_uring_sqe *' with an rvalue of type 'void *'; return NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO3af69f19b2_dictUmbrella.h); make[2]: *** [io/io/CMakeFiles/G__RIO.dir/build.make:146: io/io/G__RIO.cxx] Error 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:25816,Availability,Error,Error,25816,"e/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1042:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1055:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1071:22: error: use of undeclared identifier 'memory_order_acquire'; unsigned int head = io_uring_smp_load_acquire(sq->khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1086:9: error: cannot initialize return object of type 'struct io_uring_sqe *' with an rvalue of type 'void *'; return NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO3af69f19b2_dictUmbrella.h); make[2]: *** [io/io/CMakeFiles/G__RIO.dir/build.make:146: io/io/G__RIO.cxx] Error 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:25945,Availability,failure,failure,25945,"e/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1042:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1055:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1071:22: error: use of undeclared identifier 'memory_order_acquire'; unsigned int head = io_uring_smp_load_acquire(sq->khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1086:9: error: cannot initialize return object of type 'struct io_uring_sqe *' with an rvalue of type 'void *'; return NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO3af69f19b2_dictUmbrella.h); make[2]: *** [io/io/CMakeFiles/G__RIO.dir/build.make:146: io/io/G__RIO.cxx] Error 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:26134,Availability,Error,Error,26134,"e/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1042:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1055:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1071:22: error: use of undeclared identifier 'memory_order_acquire'; unsigned int head = io_uring_smp_load_acquire(sq->khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1086:9: error: cannot initialize return object of type 'struct io_uring_sqe *' with an rvalue of type 'void *'; return NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO3af69f19b2_dictUmbrella.h); make[2]: *** [io/io/CMakeFiles/G__RIO.dir/build.make:146: io/io/G__RIO.cxx] Error 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:167,Deployability,configurat,configuration,167,"It looks like `#define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1` is generated due to broken parsing somewhere... Here is the summary of the configuration and the full CMake configuration line:. ```; -- ROOT Configuration . System Linux-5.18.5-gentoo; Processor 16 core AMD Ryzen 9 3950X 16-Core Processor (x86_64); Build type Debug; Install path /usr/lib/root/6.26; Compiler GNU 12.2.1; Compiler flags:; C -march=native -O2 -pipe -g -fno-omit-frame-pointer -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -march=native -O2 -pipe -g -fno-omit-frame-pointer -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-O1 -Wl,--as-needed -rdynamic; Module -Wl,-O1 -Wl,--as-needed; Shared -Wl,-O1 -Wl,--as-needed -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 dataframe davix exceptions fftw3 fitsio fortran gdml gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl oracle pgsql pyroot pythia6 pythia8 qt5web roofit webgui root7 shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran uring vc vdt x11 xml xrootd; ```. ```; cmake -C /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/gentoo_common_config.cmake -G Unix Makefiles -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_C_COMPILER=gcc-12.2.1 -DCMAKE_CXX_COMPILER=g++-12.2.1 -DCMAKE_CUDA_HOST_COMPILER=g++-12.2.1 -DCMAKE_C_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=/usr/bin/python3.11 -DCMAKE_INSTALL_PREFIX=/usr/lib/root/6.26 -DCMAKE_INSTALL_MANDIR=/usr/lib/root/6.26/share/man -DCMAKE_INSTALL_LIBDIR=lib -DDEFAULT_SYSROOT= -DCLING_BUILD_PLUGINS=OFF -Dasserts=OFF -Ddev=OFF -Dexceptions=ON -Dfail-on-missing=ON -Dgnuinstall=OFF -Dshared=ON -Dsoversion=ON -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:200,Deployability,configurat,configuration,200,"It looks like `#define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1` is generated due to broken parsing somewhere... Here is the summary of the configuration and the full CMake configuration line:. ```; -- ROOT Configuration . System Linux-5.18.5-gentoo; Processor 16 core AMD Ryzen 9 3950X 16-Core Processor (x86_64); Build type Debug; Install path /usr/lib/root/6.26; Compiler GNU 12.2.1; Compiler flags:; C -march=native -O2 -pipe -g -fno-omit-frame-pointer -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -march=native -O2 -pipe -g -fno-omit-frame-pointer -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-O1 -Wl,--as-needed -rdynamic; Module -Wl,-O1 -Wl,--as-needed; Shared -Wl,-O1 -Wl,--as-needed -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 dataframe davix exceptions fftw3 fitsio fortran gdml gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl oracle pgsql pyroot pythia6 pythia8 qt5web roofit webgui root7 shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran uring vc vdt x11 xml xrootd; ```. ```; cmake -C /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/gentoo_common_config.cmake -G Unix Makefiles -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_C_COMPILER=gcc-12.2.1 -DCMAKE_CXX_COMPILER=g++-12.2.1 -DCMAKE_CUDA_HOST_COMPILER=g++-12.2.1 -DCMAKE_C_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=/usr/bin/python3.11 -DCMAKE_INSTALL_PREFIX=/usr/lib/root/6.26 -DCMAKE_INSTALL_MANDIR=/usr/lib/root/6.26/share/man -DCMAKE_INSTALL_LIBDIR=lib -DDEFAULT_SYSROOT= -DCLING_BUILD_PLUGINS=OFF -Dasserts=OFF -Ddev=OFF -Dexceptions=ON -Dfail-on-missing=ON -Dgnuinstall=OFF -Dshared=ON -Dsoversion=ON -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:234,Deployability,Configurat,Configuration,234,"It looks like `#define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1` is generated due to broken parsing somewhere... Here is the summary of the configuration and the full CMake configuration line:. ```; -- ROOT Configuration . System Linux-5.18.5-gentoo; Processor 16 core AMD Ryzen 9 3950X 16-Core Processor (x86_64); Build type Debug; Install path /usr/lib/root/6.26; Compiler GNU 12.2.1; Compiler flags:; C -march=native -O2 -pipe -g -fno-omit-frame-pointer -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -march=native -O2 -pipe -g -fno-omit-frame-pointer -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-O1 -Wl,--as-needed -rdynamic; Module -Wl,-O1 -Wl,--as-needed; Shared -Wl,-O1 -Wl,--as-needed -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 dataframe davix exceptions fftw3 fitsio fortran gdml gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl oracle pgsql pyroot pythia6 pythia8 qt5web roofit webgui root7 shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran uring vc vdt x11 xml xrootd; ```. ```; cmake -C /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/gentoo_common_config.cmake -G Unix Makefiles -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_C_COMPILER=gcc-12.2.1 -DCMAKE_CXX_COMPILER=g++-12.2.1 -DCMAKE_CUDA_HOST_COMPILER=g++-12.2.1 -DCMAKE_C_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=/usr/bin/python3.11 -DCMAKE_INSTALL_PREFIX=/usr/lib/root/6.26 -DCMAKE_INSTALL_MANDIR=/usr/lib/root/6.26/share/man -DCMAKE_INSTALL_LIBDIR=lib -DDEFAULT_SYSROOT= -DCLING_BUILD_PLUGINS=OFF -Dasserts=OFF -Ddev=OFF -Dexceptions=ON -Dfail-on-missing=ON -Dgnuinstall=OFF -Dshared=ON -Dsoversion=ON -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:360,Deployability,Install,Install,360,"It looks like `#define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1` is generated due to broken parsing somewhere... Here is the summary of the configuration and the full CMake configuration line:. ```; -- ROOT Configuration . System Linux-5.18.5-gentoo; Processor 16 core AMD Ryzen 9 3950X 16-Core Processor (x86_64); Build type Debug; Install path /usr/lib/root/6.26; Compiler GNU 12.2.1; Compiler flags:; C -march=native -O2 -pipe -g -fno-omit-frame-pointer -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -march=native -O2 -pipe -g -fno-omit-frame-pointer -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-O1 -Wl,--as-needed -rdynamic; Module -Wl,-O1 -Wl,--as-needed; Shared -Wl,-O1 -Wl,--as-needed -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 dataframe davix exceptions fftw3 fitsio fortran gdml gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl oracle pgsql pyroot pythia6 pythia8 qt5web roofit webgui root7 shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran uring vc vdt x11 xml xrootd; ```. ```; cmake -C /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/gentoo_common_config.cmake -G Unix Makefiles -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_C_COMPILER=gcc-12.2.1 -DCMAKE_CXX_COMPILER=g++-12.2.1 -DCMAKE_CUDA_HOST_COMPILER=g++-12.2.1 -DCMAKE_C_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=/usr/bin/python3.11 -DCMAKE_INSTALL_PREFIX=/usr/lib/root/6.26 -DCMAKE_INSTALL_MANDIR=/usr/lib/root/6.26/share/man -DCMAKE_INSTALL_LIBDIR=lib -DDEFAULT_SYSROOT= -DCLING_BUILD_PLUGINS=OFF -Dasserts=OFF -Ddev=OFF -Dexceptions=ON -Dfail-on-missing=ON -Dgnuinstall=OFF -Dshared=ON -Dsoversion=ON -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:167,Modifiability,config,configuration,167,"It looks like `#define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1` is generated due to broken parsing somewhere... Here is the summary of the configuration and the full CMake configuration line:. ```; -- ROOT Configuration . System Linux-5.18.5-gentoo; Processor 16 core AMD Ryzen 9 3950X 16-Core Processor (x86_64); Build type Debug; Install path /usr/lib/root/6.26; Compiler GNU 12.2.1; Compiler flags:; C -march=native -O2 -pipe -g -fno-omit-frame-pointer -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -march=native -O2 -pipe -g -fno-omit-frame-pointer -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-O1 -Wl,--as-needed -rdynamic; Module -Wl,-O1 -Wl,--as-needed; Shared -Wl,-O1 -Wl,--as-needed -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 dataframe davix exceptions fftw3 fitsio fortran gdml gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl oracle pgsql pyroot pythia6 pythia8 qt5web roofit webgui root7 shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran uring vc vdt x11 xml xrootd; ```. ```; cmake -C /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/gentoo_common_config.cmake -G Unix Makefiles -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_C_COMPILER=gcc-12.2.1 -DCMAKE_CXX_COMPILER=g++-12.2.1 -DCMAKE_CUDA_HOST_COMPILER=g++-12.2.1 -DCMAKE_C_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=/usr/bin/python3.11 -DCMAKE_INSTALL_PREFIX=/usr/lib/root/6.26 -DCMAKE_INSTALL_MANDIR=/usr/lib/root/6.26/share/man -DCMAKE_INSTALL_LIBDIR=lib -DDEFAULT_SYSROOT= -DCLING_BUILD_PLUGINS=OFF -Dasserts=OFF -Ddev=OFF -Dexceptions=ON -Dfail-on-missing=ON -Dgnuinstall=OFF -Dshared=ON -Dsoversion=ON -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:200,Modifiability,config,configuration,200,"It looks like `#define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1` is generated due to broken parsing somewhere... Here is the summary of the configuration and the full CMake configuration line:. ```; -- ROOT Configuration . System Linux-5.18.5-gentoo; Processor 16 core AMD Ryzen 9 3950X 16-Core Processor (x86_64); Build type Debug; Install path /usr/lib/root/6.26; Compiler GNU 12.2.1; Compiler flags:; C -march=native -O2 -pipe -g -fno-omit-frame-pointer -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -march=native -O2 -pipe -g -fno-omit-frame-pointer -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-O1 -Wl,--as-needed -rdynamic; Module -Wl,-O1 -Wl,--as-needed; Shared -Wl,-O1 -Wl,--as-needed -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 dataframe davix exceptions fftw3 fitsio fortran gdml gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl oracle pgsql pyroot pythia6 pythia8 qt5web roofit webgui root7 shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran uring vc vdt x11 xml xrootd; ```. ```; cmake -C /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/gentoo_common_config.cmake -G Unix Makefiles -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_C_COMPILER=gcc-12.2.1 -DCMAKE_CXX_COMPILER=g++-12.2.1 -DCMAKE_CUDA_HOST_COMPILER=g++-12.2.1 -DCMAKE_C_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=/usr/bin/python3.11 -DCMAKE_INSTALL_PREFIX=/usr/lib/root/6.26 -DCMAKE_INSTALL_MANDIR=/usr/lib/root/6.26/share/man -DCMAKE_INSTALL_LIBDIR=lib -DDEFAULT_SYSROOT= -DCLING_BUILD_PLUGINS=OFF -Dasserts=OFF -Ddev=OFF -Dexceptions=ON -Dfail-on-missing=ON -Dgnuinstall=OFF -Dshared=ON -Dsoversion=ON -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:234,Modifiability,Config,Configuration,234,"It looks like `#define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1` is generated due to broken parsing somewhere... Here is the summary of the configuration and the full CMake configuration line:. ```; -- ROOT Configuration . System Linux-5.18.5-gentoo; Processor 16 core AMD Ryzen 9 3950X 16-Core Processor (x86_64); Build type Debug; Install path /usr/lib/root/6.26; Compiler GNU 12.2.1; Compiler flags:; C -march=native -O2 -pipe -g -fno-omit-frame-pointer -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -march=native -O2 -pipe -g -fno-omit-frame-pointer -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-O1 -Wl,--as-needed -rdynamic; Module -Wl,-O1 -Wl,--as-needed; Shared -Wl,-O1 -Wl,--as-needed -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 dataframe davix exceptions fftw3 fitsio fortran gdml gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl oracle pgsql pyroot pythia6 pythia8 qt5web roofit webgui root7 shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran uring vc vdt x11 xml xrootd; ```. ```; cmake -C /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/gentoo_common_config.cmake -G Unix Makefiles -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_C_COMPILER=gcc-12.2.1 -DCMAKE_CXX_COMPILER=g++-12.2.1 -DCMAKE_CUDA_HOST_COMPILER=g++-12.2.1 -DCMAKE_C_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=/usr/bin/python3.11 -DCMAKE_INSTALL_PREFIX=/usr/lib/root/6.26 -DCMAKE_INSTALL_MANDIR=/usr/lib/root/6.26/share/man -DCMAKE_INSTALL_LIBDIR=lib -DDEFAULT_SYSROOT= -DCLING_BUILD_PLUGINS=OFF -Dasserts=OFF -Ddev=OFF -Dexceptions=ON -Dfail-on-missing=ON -Dgnuinstall=OFF -Dshared=ON -Dsoversion=ON -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:13680,Performance,load,loading,13680,"note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:247:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; ```; Error with runtime_cxxmodules=ON; ```; [ 76%] Generating G__RIO.cxx, ../../lib/RIO.pcm; cd /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/io/io && /usr/bin/cmake -E env LD_LIBRARY_PATH=/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib:/usr/bin/../lib: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO.so -m Core.pcm -m Thread.pcm -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06 -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/ginclude -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/externals -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/builtins -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/issues/11381:866,Security,hash,hash-style,866,"It looks like `#define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1` is generated due to broken parsing somewhere... Here is the summary of the configuration and the full CMake configuration line:. ```; -- ROOT Configuration . System Linux-5.18.5-gentoo; Processor 16 core AMD Ryzen 9 3950X 16-Core Processor (x86_64); Build type Debug; Install path /usr/lib/root/6.26; Compiler GNU 12.2.1; Compiler flags:; C -march=native -O2 -pipe -g -fno-omit-frame-pointer -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -march=native -O2 -pipe -g -fno-omit-frame-pointer -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-O1 -Wl,--as-needed -rdynamic; Module -Wl,-O1 -Wl,--as-needed; Shared -Wl,-O1 -Wl,--as-needed -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 dataframe davix exceptions fftw3 fitsio fortran gdml gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl oracle pgsql pyroot pythia6 pythia8 qt5web roofit webgui root7 shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran uring vc vdt x11 xml xrootd; ```. ```; cmake -C /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/gentoo_common_config.cmake -G Unix Makefiles -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_C_COMPILER=gcc-12.2.1 -DCMAKE_CXX_COMPILER=g++-12.2.1 -DCMAKE_CUDA_HOST_COMPILER=g++-12.2.1 -DCMAKE_C_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=/usr/bin/python3.11 -DCMAKE_INSTALL_PREFIX=/usr/lib/root/6.26 -DCMAKE_INSTALL_MANDIR=/usr/lib/root/6.26/share/man -DCMAKE_INSTALL_LIBDIR=lib -DDEFAULT_SYSROOT= -DCLING_BUILD_PLUGINS=OFF -Dasserts=OFF -Ddev=OFF -Dexceptions=ON -Dfail-on-missing=ON -Dgnuinstall=OFF -Dshared=ON -Dsoversion=ON -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11381
https://github.com/root-project/root/pull/11382:145,Testability,test,tested,145,# This Pull request:; Broadcast the bias of a Conv or ConvTranspose operator when the input image is batched and there's no Session class. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11382
https://github.com/root-project/root/issues/11383:1215,Availability,Error,ErrorHandler,1215," print, the initialization `gROOT` is triggered and this includes the loading of the `rootmap files` which in turns warning about the (same) class being listed in 2 distinct `rootmap` files. ```; #0 0x00007f586472654d in __lll_lock_wait () from /lib64/libpthread.so.0; #1 0x00007f5864721e9b in _L_lock_883 () from /lib64/libpthread.so.0; #2 0x00007f5864721d68 in pthread_mutex_lock () from /lib64/libpthread.so.0; #3 0x00007f5865797806 in DebugPrint(char const*, ...) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #4 0x00007f5865797abd in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #5 0x00007f586584fb23 in ErrorHandler () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #6 0x00007f58657aa2cc in TObject::Warning(char const*, char const*, ...) const () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #7 0x00007f584695be33 in TCling::ReadRootmapFile(char const*, TCling::TUniqueString*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so); #8 0x00007f5846990471 in TCling::LoadLibraryMap(char const*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so](http://cms.cer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11383
https://github.com/root-project/root/issues/11383:3972,Availability,Error,ErrorHandler,3972,"10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #12 0x00007f586579633e in TEnv::Getvalue(char const*) const () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #13 0x00007f5865796c19 in TEnv::GetValue(char const*, char const*) const () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #14 0x00007f5865797e00 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #15 0x00007f586584fb23 in ErrorHandler () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #16 0x00007f58658504a8 in Warning(char const*, char const*, ...) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #17 0x00007f5865881acf in ROOT::TGenericClassInfo::TGenericClassInfo(char const*, int, char const*, int, std::type_info const&, ROOT::Internal::TInitBehavior const*, TClass* (*)(), TVirtualIsAProxy*, int, int) (); from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #18 0x00007f5861aadcae in ROOT::GenerateInitInstanceLocal(edm::Wrapper<edm::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11383
https://github.com/root-project/root/issues/11383:4960,Integrability,Wrap,Wrapper,4960,"ler () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #16 0x00007f58658504a8 in Warning(char const*, char const*, ...) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #17 0x00007f5865881acf in ROOT::TGenericClassInfo::TGenericClassInfo(char const*, int, char const*, int, std::type_info const&, ROOT::Internal::TInitBehavior const*, TClass* (*)(), TVirtualIsAProxy*, int, int) (); from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #18 0x00007f5861aadcae in ROOT::GenerateInitInstanceLocal(edm::Wrapper<edm::Association<std::vector<reco::TrackExtra, std::allocator<reco::TrackExtra> > > > const*) [clone .constprop.0] (); from /build/mkortela/debug/debug2/CMSSW_12_4_8/lib/slc7_amd64_gcc10/libRecoE2EDataFormats.so; #19 0x00007f5861aab4c6 in _GLOBAL__sub_I_RecoE2EDataFormats_xr.cc () from /build/mkortela/debug/debug2/CMSSW_12_4_8/lib/slc7_amd64_gcc10/libRecoE2EDataFormats.so; #20 0x00007f586644c9c3 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #21 0x00007f586645159e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #22 0x00007f586644c7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #23 0x00007f5866450b8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #24 0x00007f5865042fab in dlopen_doit () from /lib64/libdl.so.2; #25 0x00007f586644c7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #26 0x00007f58650435ad in _dlerror_run () from /lib64/libdl.so.2; #27 0x00007f5865043041 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2; #28 0x00007f5866483946 in edmplugin::SharedL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11383
https://github.com/root-project/root/issues/11383:104,Performance,load,loading,104,"This sequence is triggered in a case where a dictionary for requested twice for the same class and upon loading the 2nd library, a Warning is being issued about the duplicated dictionary. While setting up in order to print, the initialization `gROOT` is triggered and this includes the loading of the `rootmap files` which in turns warning about the (same) class being listed in 2 distinct `rootmap` files. ```; #0 0x00007f586472654d in __lll_lock_wait () from /lib64/libpthread.so.0; #1 0x00007f5864721e9b in _L_lock_883 () from /lib64/libpthread.so.0; #2 0x00007f5864721d68 in pthread_mutex_lock () from /lib64/libpthread.so.0; #3 0x00007f5865797806 in DebugPrint(char const*, ...) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #4 0x00007f5865797abd in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #5 0x00007f586584fb23 in ErrorHandler () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #6 0x00007f58657aa2cc in TObject::Warning(char const*, char const*, ...) const () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #7 0x00007f584695be33 in TCling::ReadRootmapFile(char const*, TCling::TUniqueString*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11383
https://github.com/root-project/root/issues/11383:286,Performance,load,loading,286,"This sequence is triggered in a case where a dictionary for requested twice for the same class and upon loading the 2nd library, a Warning is being issued about the duplicated dictionary. While setting up in order to print, the initialization `gROOT` is triggered and this includes the loading of the `rootmap files` which in turns warning about the (same) class being listed in 2 distinct `rootmap` files. ```; #0 0x00007f586472654d in __lll_lock_wait () from /lib64/libpthread.so.0; #1 0x00007f5864721e9b in _L_lock_883 () from /lib64/libpthread.so.0; #2 0x00007f5864721d68 in pthread_mutex_lock () from /lib64/libpthread.so.0; #3 0x00007f5865797806 in DebugPrint(char const*, ...) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #4 0x00007f5865797abd in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #5 0x00007f586584fb23 in ErrorHandler () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #6 0x00007f58657aa2cc in TObject::Warning(char const*, char const*, ...) const () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #7 0x00007f584695be33 in TCling::ReadRootmapFile(char const*, TCling::TUniqueString*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11383
https://github.com/root-project/root/issues/11383:2064,Performance,Load,LoadLibraryMap,2064,"10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #5 0x00007f586584fb23 in ErrorHandler () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #6 0x00007f58657aa2cc in TObject::Warning(char const*, char const*, ...) const () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #7 0x00007f584695be33 in TCling::ReadRootmapFile(char const*, TCling::TUniqueString*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so); #8 0x00007f5846990471 in TCling::LoadLibraryMap(char const*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so); #9 0x00007f584699135f in TCling::Initialize() () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so); #10 0x00007f586576cfdd in TROOT::InitInterpreter() () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #11 0x00007f586576d33f in ROOT::Internal::GetROOT2() () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11383
https://github.com/root-project/root/pull/11384:16,Integrability,message,message,16,"Previously if a message (for example warning of duplicate dictionary) happened during intialization, it would trigger the initialization of gROOT and could trigger a nested Warning. for example due to the duplicate rootmap file entry and would cause a dead lock (recursiverly taking the non recursive lock GetErrorMutex().",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11384
https://github.com/root-project/root/issues/11385:896,Availability,error,error,896,"```valgrind --suppressions=/build/vvassilev/root-release-master/etc/valgrind-root.supp root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -q -l -b assertSparseSelection.C; ==22765== Memcheck, a memory error detector; ==22765== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==22765== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==22765== Command: root.exe -e #define\ ClingWorkAroundPrintfIssues -e #define\ ClingWorkAroundLackOfModule -e #define\ ClingWorkAroundProxyConfusion -e #define\ ClingWorkAroundMissingDynamicScope -e #define\ ClingWorkAroundMultipleInclude -e #define\ ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::Co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:8623,Availability,error,errors,8623,"nating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.c:51); ==22765== by 0x544D92D: abort (abort.c:100); ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DFF3CC: ???; ==22765== by 0x1FFEFFBB3F: ???; ==22765== by 0xB60A6A5548AF56FF: ???; ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DEB03F: ???; ==22765== ; ==22765== HEAP SUMMARY:; ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; ==22765== ; ==22765== LEAK SUMMARY:; ==22765== definitely lost: 0 bytes in 0 blocks; ==22765== indirectly lost: 0 bytes in 0 blocks; ==22765== possibly lost: 7,728 bytes in 66 blocks; ==22765== still reachable: 66,622,884 bytes in 169,043 blocks; ==22765== of which reachable via heuristic:; ==22765== stdstring : 111 bytes in 1 blocks; ==22765== multipleinheritance: 7,776 bytes in 10 blocks; ==22765== suppressed: 278,964 bytes in 3,461 blocks; ==22765== Rerun with --leak-check=full to see details of leaked memory; ==22765== ; ==22765== Use --track-origins=yes to see where uninitialised values come from; ==22765== For lists of detected and suppressed errors, rerun with: -s; ==22765== ERROR SUMMARY: 237 errors from 1 contexts (suppressed: 185 from 20); Aborted (core dumped); ```. That seems an important issue to fix. We should also probably run valgrind on all the tests to get a feeling of where we stand. And, yes I know it can take days or weeks but I think it is worth it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:8657,Availability,ERROR,ERROR,8657,"nating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.c:51); ==22765== by 0x544D92D: abort (abort.c:100); ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DFF3CC: ???; ==22765== by 0x1FFEFFBB3F: ???; ==22765== by 0xB60A6A5548AF56FF: ???; ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DEB03F: ???; ==22765== ; ==22765== HEAP SUMMARY:; ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; ==22765== ; ==22765== LEAK SUMMARY:; ==22765== definitely lost: 0 bytes in 0 blocks; ==22765== indirectly lost: 0 bytes in 0 blocks; ==22765== possibly lost: 7,728 bytes in 66 blocks; ==22765== still reachable: 66,622,884 bytes in 169,043 blocks; ==22765== of which reachable via heuristic:; ==22765== stdstring : 111 bytes in 1 blocks; ==22765== multipleinheritance: 7,776 bytes in 10 blocks; ==22765== suppressed: 278,964 bytes in 3,461 blocks; ==22765== Rerun with --leak-check=full to see details of leaked memory; ==22765== ; ==22765== Use --track-origins=yes to see where uninitialised values come from; ==22765== For lists of detected and suppressed errors, rerun with: -s; ==22765== ERROR SUMMARY: 237 errors from 1 contexts (suppressed: 185 from 20); Aborted (core dumped); ```. That seems an important issue to fix. We should also probably run valgrind on all the tests to get a feeling of where we stand. And, yes I know it can take days or weeks but I think it is worth it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:8676,Availability,error,errors,8676,"nating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.c:51); ==22765== by 0x544D92D: abort (abort.c:100); ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DFF3CC: ???; ==22765== by 0x1FFEFFBB3F: ???; ==22765== by 0xB60A6A5548AF56FF: ???; ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DEB03F: ???; ==22765== ; ==22765== HEAP SUMMARY:; ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; ==22765== ; ==22765== LEAK SUMMARY:; ==22765== definitely lost: 0 bytes in 0 blocks; ==22765== indirectly lost: 0 bytes in 0 blocks; ==22765== possibly lost: 7,728 bytes in 66 blocks; ==22765== still reachable: 66,622,884 bytes in 169,043 blocks; ==22765== of which reachable via heuristic:; ==22765== stdstring : 111 bytes in 1 blocks; ==22765== multipleinheritance: 7,776 bytes in 10 blocks; ==22765== suppressed: 278,964 bytes in 3,461 blocks; ==22765== Rerun with --leak-check=full to see details of leaked memory; ==22765== ; ==22765== Use --track-origins=yes to see where uninitialised values come from; ==22765== For lists of detected and suppressed errors, rerun with: -s; ==22765== ERROR SUMMARY: 237 errors from 1 contexts (suppressed: 185 from 20); Aborted (core dumped); ```. That seems an important issue to fix. We should also probably run valgrind on all the tests to get a feeling of where we stand. And, yes I know it can take days or weeks but I think it is worth it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:49,Deployability,release,release-master,49,"```valgrind --suppressions=/build/vvassilev/root-release-master/etc/valgrind-root.supp root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -q -l -b assertSparseSelection.C; ==22765== Memcheck, a memory error detector; ==22765== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==22765== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==22765== Command: root.exe -e #define\ ClingWorkAroundPrintfIssues -e #define\ ClingWorkAroundLackOfModule -e #define\ ClingWorkAroundProxyConfusion -e #define\ ClingWorkAroundMissingDynamicScope -e #define\ ClingWorkAroundMultipleInclude -e #define\ ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::Co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:2165,Deployability,release,release-master,2165,"for copyright info; ==22765== Command: root.exe -e #define\ ClingWorkAroundPrintfIssues -e #define\ ClingWorkAroundLackOfModule -e #define\ ClingWorkAroundProxyConfusion -e #define\ ClingWorkAroundMissingDynamicScope -e #define\ ClingWorkAroundMultipleInclude -e #define\ ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F2CBA: (anonymous namespace)::SymbolicallyEvaluateGEP(llvm::GEPOperator const*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F35A1: (anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-rele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:2411,Deployability,release,release-master,2411," ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F2CBA: (anonymous namespace)::SymbolicallyEvaluateGEP(llvm::GEPOperator const*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F35A1: (anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F38B7: llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x91305C5: AddReachableCodeToWorklist(l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:2670,Deployability,release,release-master,2670,"AroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F2CBA: (anonymous namespace)::SymbolicallyEvaluateGEP(llvm::GEPOperator const*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F35A1: (anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F38B7: llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x91305C5: AddReachableCodeToWorklist(llvm::BasicBlock*, llvm::DataLayout const&, llvm::SmallPtrSetImpl<llvm::BasicBlock*>&, llvm::InstCombineWorklist&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9139861: combineInstructionsOverF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:3041,Deployability,release,release-master,3041,"Selection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F2CBA: (anonymous namespace)::SymbolicallyEvaluateGEP(llvm::GEPOperator const*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F35A1: (anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F38B7: llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x91305C5: AddReachableCodeToWorklist(llvm::BasicBlock*, llvm::DataLayout const&, llvm::SmallPtrSetImpl<llvm::BasicBlock*>&, llvm::InstCombineWorklist&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9139861: combineInstructionsOverFunction(llvm::Function&, llvm::InstCombineWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, bool, llvm::LoopInfo*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:3231,Deployability,release,release-master,3231,"-release-master/lib/libCling.so); ==22765== by 0x93F2CBA: (anonymous namespace)::SymbolicallyEvaluateGEP(llvm::GEPOperator const*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F35A1: (anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F38B7: llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x91305C5: AddReachableCodeToWorklist(llvm::BasicBlock*, llvm::DataLayout const&, llvm::SmallPtrSetImpl<llvm::BasicBlock*>&, llvm::InstCombineWorklist&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9139861: combineInstructionsOverFunction(llvm::Function&, llvm::InstCombineWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, bool, llvm::LoopInfo*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x913A00E: llvm::InstructionCombiningPass::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CCC7: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); =",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:3488,Deployability,release,release-master,3488,"n /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F35A1: (anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F38B7: llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x91305C5: AddReachableCodeToWorklist(llvm::BasicBlock*, llvm::DataLayout const&, llvm::SmallPtrSetImpl<llvm::BasicBlock*>&, llvm::InstCombineWorklist&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9139861: combineInstructionsOverFunction(llvm::Function&, llvm::InstCombineWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, bool, llvm::LoopInfo*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x913A00E: llvm::InstructionCombiningPass::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CCC7: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CE00: llvm::FPPassManager::runOnModule(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4BEE5: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /build/vvassilev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:3849,Deployability,release,release-master,3849,"g.so); ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F38B7: llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x91305C5: AddReachableCodeToWorklist(llvm::BasicBlock*, llvm::DataLayout const&, llvm::SmallPtrSetImpl<llvm::BasicBlock*>&, llvm::InstCombineWorklist&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9139861: combineInstructionsOverFunction(llvm::Function&, llvm::InstCombineWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, bool, llvm::LoopInfo*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x913A00E: llvm::InstructionCombiningPass::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CCC7: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CE00: llvm::FPPassManager::runOnModule(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4BEE5: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x6F12B5A: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== ; ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (defined); ==22765=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:3995,Deployability,release,release-master,3995,"llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F38B7: llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x91305C5: AddReachableCodeToWorklist(llvm::BasicBlock*, llvm::DataLayout const&, llvm::SmallPtrSetImpl<llvm::BasicBlock*>&, llvm::InstCombineWorklist&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9139861: combineInstructionsOverFunction(llvm::Function&, llvm::InstCombineWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, bool, llvm::LoopInfo*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x913A00E: llvm::InstructionCombiningPass::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CCC7: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CE00: llvm::FPPassManager::runOnModule(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4BEE5: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x6F12B5A: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== ; ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:4130,Deployability,release,release-master,4130,"3F38B7: llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x91305C5: AddReachableCodeToWorklist(llvm::BasicBlock*, llvm::DataLayout const&, llvm::SmallPtrSetImpl<llvm::BasicBlock*>&, llvm::InstCombineWorklist&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9139861: combineInstructionsOverFunction(llvm::Function&, llvm::InstCombineWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, bool, llvm::LoopInfo*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x913A00E: llvm::InstructionCombiningPass::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CCC7: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CE00: llvm::FPPassManager::runOnModule(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4BEE5: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x6F12B5A: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== ; ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (defined); ==22765== Warning: set address r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:4261,Deployability,release,release-master,4261,"ev/root-release-master/lib/libCling.so); ==22765== by 0x91305C5: AddReachableCodeToWorklist(llvm::BasicBlock*, llvm::DataLayout const&, llvm::SmallPtrSetImpl<llvm::BasicBlock*>&, llvm::InstCombineWorklist&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9139861: combineInstructionsOverFunction(llvm::Function&, llvm::InstCombineWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, bool, llvm::LoopInfo*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x913A00E: llvm::InstructionCombiningPass::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CCC7: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CE00: llvm::FPPassManager::runOnModule(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4BEE5: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x6F12B5A: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== ; ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:4394,Deployability,release,release-master,4394,"t&, llvm::SmallPtrSetImpl<llvm::BasicBlock*>&, llvm::InstCombineWorklist&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9139861: combineInstructionsOverFunction(llvm::Function&, llvm::InstCombineWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, bool, llvm::LoopInfo*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x913A00E: llvm::InstructionCombiningPass::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CCC7: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CE00: llvm::FPPassManager::runOnModule(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4BEE5: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x6F12B5A: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== ; ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:4552,Deployability,release,release-master,4552,"r/lib/libCling.so); ==22765== by 0x9139861: combineInstructionsOverFunction(llvm::Function&, llvm::InstCombineWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, bool, llvm::LoopInfo*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x913A00E: llvm::InstructionCombiningPass::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CCC7: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CE00: llvm::FPPassManager::runOnModule(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4BEE5: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x6F12B5A: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== ; ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:7531,Deployability,release,release-master,7531,"0, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); terminate called after throwing an instance of 'cling::InvalidDerefException'; what(): Trying to dereference null pointer or trying to call routine taking non-null arguments; ==22765== ; ==22765== Process terminating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.c:51); ==22765== by 0x544D92D: abort (abort.c:100); ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DFF3CC: ???; ==22765== by 0x1FFEFFBB3F: ???; ==22765== by 0xB60A6A5548AF56FF: ???; ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DEB03F: ???; ==22765== ; ==22765== HEAP SUMMARY:; ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; ==22765== ; ==22765== LEAK SUMMARY:; ==22765== definitely lost: 0 bytes in 0 blocks; ==22765== indirectly lost: 0 bytes in 0 blocks; ==22765== possibly lost: 7,728 bytes in 66 blocks; ==22765== still reachable: 66,622,884 bytes in 169,043 blocks; ==22765== of which reachable via heuristic:; ==22765== stdstring : 111 bytes in 1 blocks; ==22765== multipleinheritance: 7,776 bytes in 10 blocks; ==22765== suppressed: 278,964 bytes in 3,461 blocks; ==22765== Rerun with --leak-check=full to see details of leaked memory; ==22765== ; ==22765== Use --track-origins=yes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:7717,Deployability,release,release-master,7717,"765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); terminate called after throwing an instance of 'cling::InvalidDerefException'; what(): Trying to dereference null pointer or trying to call routine taking non-null arguments; ==22765== ; ==22765== Process terminating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.c:51); ==22765== by 0x544D92D: abort (abort.c:100); ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DFF3CC: ???; ==22765== by 0x1FFEFFBB3F: ???; ==22765== by 0xB60A6A5548AF56FF: ???; ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DEB03F: ???; ==22765== ; ==22765== HEAP SUMMARY:; ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; ==22765== ; ==22765== LEAK SUMMARY:; ==22765== definitely lost: 0 bytes in 0 blocks; ==22765== indirectly lost: 0 bytes in 0 blocks; ==22765== possibly lost: 7,728 bytes in 66 blocks; ==22765== still reachable: 66,622,884 bytes in 169,043 blocks; ==22765== of which reachable via heuristic:; ==22765== stdstring : 111 bytes in 1 blocks; ==22765== multipleinheritance: 7,776 bytes in 10 blocks; ==22765== suppressed: 278,964 bytes in 3,461 blocks; ==22765== Rerun with --leak-check=full to see details of leaked memory; ==22765== ; ==22765== Use --track-origins=yes to see where uninitialised values come from; ==22765== For lists of detected and suppressed errors, rerun with: -s; ==227",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:7955,Energy Efficiency,allocate,allocated,7955,"nating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.c:51); ==22765== by 0x544D92D: abort (abort.c:100); ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DFF3CC: ???; ==22765== by 0x1FFEFFBB3F: ???; ==22765== by 0xB60A6A5548AF56FF: ???; ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DEB03F: ???; ==22765== ; ==22765== HEAP SUMMARY:; ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; ==22765== ; ==22765== LEAK SUMMARY:; ==22765== definitely lost: 0 bytes in 0 blocks; ==22765== indirectly lost: 0 bytes in 0 blocks; ==22765== possibly lost: 7,728 bytes in 66 blocks; ==22765== still reachable: 66,622,884 bytes in 169,043 blocks; ==22765== of which reachable via heuristic:; ==22765== stdstring : 111 bytes in 1 blocks; ==22765== multipleinheritance: 7,776 bytes in 10 blocks; ==22765== suppressed: 278,964 bytes in 3,461 blocks; ==22765== Rerun with --leak-check=full to see details of leaked memory; ==22765== ; ==22765== Use --track-origins=yes to see where uninitialised values come from; ==22765== For lists of detected and suppressed errors, rerun with: -s; ==22765== ERROR SUMMARY: 237 errors from 1 contexts (suppressed: 185 from 20); Aborted (core dumped); ```. That seems an important issue to fix. We should also probably run valgrind on all the tests to get a feeling of where we stand. And, yes I know it can take days or weeks but I think it is worth it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:1934,Integrability,depend,depends,1934,"for copyright info; ==22765== Command: root.exe -e #define\ ClingWorkAroundPrintfIssues -e #define\ ClingWorkAroundLackOfModule -e #define\ ClingWorkAroundProxyConfusion -e #define\ ClingWorkAroundMissingDynamicScope -e #define\ ClingWorkAroundMultipleInclude -e #define\ ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F2CBA: (anonymous namespace)::SymbolicallyEvaluateGEP(llvm::GEPOperator const*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F35A1: (anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-rele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:6881,Integrability,rout,routine,6881,"x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); IncrementalExecutor::executeFunction: symbol '_ZNK5cling5Value5getAsIP4TH1FEET_v' unresolved while linking function '_GLOBAL__sub_I_cling_module_25'!; You are probably missing the definition of TH1F* cling::Value::getAs<TH1F*>() const; Maybe you need to load the corresponding shared library?; ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); terminate called after throwing an instance of 'cling::InvalidDerefException'; what(): Trying to dereference null pointer or trying to call routine taking non-null arguments; ==22765== ; ==22765== Process terminating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:3718,Performance,Optimiz,OptimizationRemarkEmitter,3718,"g.so); ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F38B7: llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x91305C5: AddReachableCodeToWorklist(llvm::BasicBlock*, llvm::DataLayout const&, llvm::SmallPtrSetImpl<llvm::BasicBlock*>&, llvm::InstCombineWorklist&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9139861: combineInstructionsOverFunction(llvm::Function&, llvm::InstCombineWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, bool, llvm::LoopInfo*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x913A00E: llvm::InstructionCombiningPass::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CCC7: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CE00: llvm::FPPassManager::runOnModule(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4BEE5: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x6F12B5A: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== ; ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (defined); ==22765=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:6331,Performance,load,load,6331,"x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); IncrementalExecutor::executeFunction: symbol '_ZNK5cling5Value5getAsIP4TH1FEET_v' unresolved while linking function '_GLOBAL__sub_I_cling_module_25'!; You are probably missing the definition of TH1F* cling::Value::getAs<TH1F*>() const; Maybe you need to load the corresponding shared library?; ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); terminate called after throwing an instance of 'cling::InvalidDerefException'; what(): Trying to dereference null pointer or trying to call routine taking non-null arguments; ==22765== ; ==22765== Process terminating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:902,Safety,detect,detector,902,"```valgrind --suppressions=/build/vvassilev/root-release-master/etc/valgrind-root.supp root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -q -l -b assertSparseSelection.C; ==22765== Memcheck, a memory error detector; ==22765== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==22765== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==22765== Command: root.exe -e #define\ ClingWorkAroundPrintfIssues -e #define\ ClingWorkAroundLackOfModule -e #define\ ClingWorkAroundProxyConfusion -e #define\ ClingWorkAroundMissingDynamicScope -e #define\ ClingWorkAroundMultipleInclude -e #define\ ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::Co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:7069,Safety,abort,abort,7069,"000) (noaccess); IncrementalExecutor::executeFunction: symbol '_ZNK5cling5Value5getAsIP4TH1FEET_v' unresolved while linking function '_GLOBAL__sub_I_cling_module_25'!; You are probably missing the definition of TH1F* cling::Value::getAs<TH1F*>() const; Maybe you need to load the corresponding shared library?; ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); terminate called after throwing an instance of 'cling::InvalidDerefException'; what(): Trying to dereference null pointer or trying to call routine taking non-null arguments; ==22765== ; ==22765== Process terminating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.c:51); ==22765== by 0x544D92D: abort (abort.c:100); ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DFF3CC: ???; ==22765== by 0x1FFEFFBB3F: ???; ==22765== by 0xB60A6A5548AF56FF: ???; ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DEB03F: ???; ==22765== ; ==22765== HEAP SUMMARY:; ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; ==22765== ; ==22765== LEAK SUMMARY:; ==22765== definitely lost: 0 bytes in 0 blocks; ==22765==",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:7076,Safety,abort,abort,7076,"000) (noaccess); IncrementalExecutor::executeFunction: symbol '_ZNK5cling5Value5getAsIP4TH1FEET_v' unresolved while linking function '_GLOBAL__sub_I_cling_module_25'!; You are probably missing the definition of TH1F* cling::Value::getAs<TH1F*>() const; Maybe you need to load the corresponding shared library?; ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); terminate called after throwing an instance of 'cling::InvalidDerefException'; what(): Trying to dereference null pointer or trying to call routine taking non-null arguments; ==22765== ; ==22765== Process terminating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.c:51); ==22765== by 0x544D92D: abort (abort.c:100); ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DFF3CC: ???; ==22765== by 0x1FFEFFBB3F: ???; ==22765== by 0xB60A6A5548AF56FF: ???; ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DEB03F: ???; ==22765== ; ==22765== HEAP SUMMARY:; ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; ==22765== ; ==22765== LEAK SUMMARY:; ==22765== definitely lost: 0 bytes in 0 blocks; ==22765==",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:8599,Safety,detect,detected,8599,"nating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.c:51); ==22765== by 0x544D92D: abort (abort.c:100); ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DFF3CC: ???; ==22765== by 0x1FFEFFBB3F: ???; ==22765== by 0xB60A6A5548AF56FF: ???; ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DEB03F: ???; ==22765== ; ==22765== HEAP SUMMARY:; ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; ==22765== ; ==22765== LEAK SUMMARY:; ==22765== definitely lost: 0 bytes in 0 blocks; ==22765== indirectly lost: 0 bytes in 0 blocks; ==22765== possibly lost: 7,728 bytes in 66 blocks; ==22765== still reachable: 66,622,884 bytes in 169,043 blocks; ==22765== of which reachable via heuristic:; ==22765== stdstring : 111 bytes in 1 blocks; ==22765== multipleinheritance: 7,776 bytes in 10 blocks; ==22765== suppressed: 278,964 bytes in 3,461 blocks; ==22765== Rerun with --leak-check=full to see details of leaked memory; ==22765== ; ==22765== Use --track-origins=yes to see where uninitialised values come from; ==22765== For lists of detected and suppressed errors, rerun with: -s; ==22765== ERROR SUMMARY: 237 errors from 1 contexts (suppressed: 185 from 20); Aborted (core dumped); ```. That seems an important issue to fix. We should also probably run valgrind on all the tests to get a feeling of where we stand. And, yes I know it can take days or weeks but I think it is worth it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:8726,Safety,Abort,Aborted,8726,"nating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.c:51); ==22765== by 0x544D92D: abort (abort.c:100); ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DFF3CC: ???; ==22765== by 0x1FFEFFBB3F: ???; ==22765== by 0xB60A6A5548AF56FF: ???; ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DEB03F: ???; ==22765== ; ==22765== HEAP SUMMARY:; ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; ==22765== ; ==22765== LEAK SUMMARY:; ==22765== definitely lost: 0 bytes in 0 blocks; ==22765== indirectly lost: 0 bytes in 0 blocks; ==22765== possibly lost: 7,728 bytes in 66 blocks; ==22765== still reachable: 66,622,884 bytes in 169,043 blocks; ==22765== of which reachable via heuristic:; ==22765== stdstring : 111 bytes in 1 blocks; ==22765== multipleinheritance: 7,776 bytes in 10 blocks; ==22765== suppressed: 278,964 bytes in 3,461 blocks; ==22765== Rerun with --leak-check=full to see details of leaked memory; ==22765== ; ==22765== Use --track-origins=yes to see where uninitialised values come from; ==22765== For lists of detected and suppressed errors, rerun with: -s; ==22765== ERROR SUMMARY: 237 errors from 1 contexts (suppressed: 185 from 20); Aborted (core dumped); ```. That seems an important issue to fix. We should also probably run valgrind on all the tests to get a feeling of where we stand. And, yes I know it can take days or weeks but I think it is worth it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:842,Testability,assert,assertSparseSelection,842,"```valgrind --suppressions=/build/vvassilev/root-release-master/etc/valgrind-root.supp root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -q -l -b assertSparseSelection.C; ==22765== Memcheck, a memory error detector; ==22765== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==22765== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==22765== Command: root.exe -e #define\ ClingWorkAroundPrintfIssues -e #define\ ClingWorkAroundLackOfModule -e #define\ ClingWorkAroundProxyConfusion -e #define\ ClingWorkAroundMissingDynamicScope -e #define\ ClingWorkAroundMultipleInclude -e #define\ ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::Co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:1823,Testability,assert,assertSparseSelection,1823,"e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -q -l -b assertSparseSelection.C; ==22765== Memcheck, a memory error detector; ==22765== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==22765== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==22765== Command: root.exe -e #define\ ClingWorkAroundPrintfIssues -e #define\ ClingWorkAroundLackOfModule -e #define\ ClingWorkAroundProxyConfusion -e #define\ ClingWorkAroundMissingDynamicScope -e #define\ ClingWorkAroundMultipleInclude -e #define\ ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F2CBA: (anonymous namespace)::SymbolicallyEvaluateGEP(llvm::GEPOperator const*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F35A1:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:1871,Testability,assert,assertSparseSelection,1871," Memcheck, a memory error detector; ==22765== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==22765== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==22765== Command: root.exe -e #define\ ClingWorkAroundPrintfIssues -e #define\ ClingWorkAroundLackOfModule -e #define\ ClingWorkAroundProxyConfusion -e #define\ ClingWorkAroundMissingDynamicScope -e #define\ ClingWorkAroundMultipleInclude -e #define\ ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F2CBA: (anonymous namespace)::SymbolicallyEvaluateGEP(llvm::GEPOperator const*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F35A1: (anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/issues/11385:8840,Testability,test,tests,8840,"nating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.c:51); ==22765== by 0x544D92D: abort (abort.c:100); ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DFF3CC: ???; ==22765== by 0x1FFEFFBB3F: ???; ==22765== by 0xB60A6A5548AF56FF: ???; ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DEB03F: ???; ==22765== ; ==22765== HEAP SUMMARY:; ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; ==22765== ; ==22765== LEAK SUMMARY:; ==22765== definitely lost: 0 bytes in 0 blocks; ==22765== indirectly lost: 0 bytes in 0 blocks; ==22765== possibly lost: 7,728 bytes in 66 blocks; ==22765== still reachable: 66,622,884 bytes in 169,043 blocks; ==22765== of which reachable via heuristic:; ==22765== stdstring : 111 bytes in 1 blocks; ==22765== multipleinheritance: 7,776 bytes in 10 blocks; ==22765== suppressed: 278,964 bytes in 3,461 blocks; ==22765== Rerun with --leak-check=full to see details of leaked memory; ==22765== ; ==22765== Use --track-origins=yes to see where uninitialised values come from; ==22765== For lists of detected and suppressed errors, rerun with: -s; ==22765== ERROR SUMMARY: 237 errors from 1 contexts (suppressed: 185 from 20); Aborted (core dumped); ```. That seems an important issue to fix. We should also probably run valgrind on all the tests to get a feeling of where we stand. And, yes I know it can take days or weeks but I think it is worth it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11385
https://github.com/root-project/root/pull/11386:144,Deployability,update,updated,144,# This Pull request:; Synchronizes all changes dome in the materials. ## Changes or fixes:. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR is requested in #11272,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11386
https://github.com/root-project/root/pull/11386:22,Integrability,Synchroniz,Synchronizes,22,# This Pull request:; Synchronizes all changes dome in the materials. ## Changes or fixes:. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR is requested in #11272,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11386
https://github.com/root-project/root/pull/11386:114,Testability,test,tested,114,# This Pull request:; Synchronizes all changes dome in the materials. ## Changes or fixes:. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR is requested in #11272,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11386
https://github.com/root-project/root/pull/11387:96,Testability,test,tested,96,## This Pull request:; Development of some unary operators for TMVA/SOFIE. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11387
https://github.com/root-project/root/pull/11388:24,Testability,log,logic,24,The signed and unsigned logic was reversed for long long and unsigned long long. This PR fixes that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11388
https://github.com/root-project/root/pull/11389:141,Availability,failure,failure,141,End axis value passed as attribute in Shape is included. So a +1 was missing when computing the output tensor length. This PR should fix the failure observed in the TestCustomModelFromONNX,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11389
https://github.com/root-project/root/pull/11389:165,Testability,Test,TestCustomModelFromONNX,165,End axis value passed as attribute in Shape is included. So a +1 was missing when computing the output tensor length. This PR should fix the failure observed in the TestCustomModelFromONNX,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11389
https://github.com/root-project/root/issues/11390:626,Availability,down,down,626,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Apparently calling `Display` with some extra parameter like `nRows` is not respected if before calling `Print` one adds any other operation to the graph. ### To Reproduce; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TString.h>; #include <string>; #include <vector>; #include <memory>; void write_tree(); {; int x{};; TString s{};. TFile file{""dataset.root"", ""recreate""};; TTree tree{""events"", ""events""};; tree.Branch(""nJets"", &x, ""nJets/I"");; tree.Branch(""systName"", &s);. std::vector<std::string> values{""nominal"", ""up"", ""down""};. for (int i = 0; i < 3; i++); {; x = i + 1;; s.Replace(0, s.Length(), values[i]);; tree.Fill();; }. tree.Write();; }. void read_tree(); {; TFile file{""dataset.root"", ""read""};; std::unique_ptr<TTree> tree{file.Get<TTree>(""events"")};; tree->Scan(""*"");; }. void analyze(); {; ROOT::RDataFrame df{""events"", ""dataset.root""};. // Book display; auto disp = df.Display(""systName"", 1);. // Do anything else; df.Count().GetValue();. // The display doesn't respect the original parameters; // Prints all 3 rows whereas it should print only one; disp->Print();; }. int main(); {; write_tree();; read_tree();; analyze();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; Fedora 36; ROOT 6.26/06 from conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11390
https://github.com/root-project/root/issues/11390:1363,Availability,down,download,1363,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Apparently calling `Display` with some extra parameter like `nRows` is not respected if before calling `Print` one adds any other operation to the graph. ### To Reproduce; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TString.h>; #include <string>; #include <vector>; #include <memory>; void write_tree(); {; int x{};; TString s{};. TFile file{""dataset.root"", ""recreate""};; TTree tree{""events"", ""events""};; tree.Branch(""nJets"", &x, ""nJets/I"");; tree.Branch(""systName"", &s);. std::vector<std::string> values{""nominal"", ""up"", ""down""};. for (int i = 0; i < 3; i++); {; x = i + 1;; s.Replace(0, s.Length(), values[i]);; tree.Fill();; }. tree.Write();; }. void read_tree(); {; TFile file{""dataset.root"", ""read""};; std::unique_ptr<TTree> tree{file.Get<TTree>(""events"")};; tree->Scan(""*"");; }. void analyze(); {; ROOT::RDataFrame df{""events"", ""dataset.root""};. // Book display; auto disp = df.Display(""systName"", 1);. // Do anything else; df.Count().GetValue();. // The display doesn't respect the original parameters; // Prints all 3 rows whereas it should print only one; disp->Print();; }. int main(); {; write_tree();; read_tree();; analyze();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; Fedora 36; ROOT 6.26/06 from conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11390
https://github.com/root-project/root/issues/11390:1345,Deployability,install,install,1345,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Apparently calling `Display` with some extra parameter like `nRows` is not respected if before calling `Print` one adds any other operation to the graph. ### To Reproduce; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TString.h>; #include <string>; #include <vector>; #include <memory>; void write_tree(); {; int x{};; TString s{};. TFile file{""dataset.root"", ""recreate""};; TTree tree{""events"", ""events""};; tree.Branch(""nJets"", &x, ""nJets/I"");; tree.Branch(""systName"", &s);. std::vector<std::string> values{""nominal"", ""up"", ""down""};. for (int i = 0; i < 3; i++); {; x = i + 1;; s.Replace(0, s.Length(), values[i]);; tree.Fill();; }. tree.Write();; }. void read_tree(); {; TFile file{""dataset.root"", ""read""};; std::unique_ptr<TTree> tree{file.Get<TTree>(""events"")};; tree->Scan(""*"");; }. void analyze(); {; ROOT::RDataFrame df{""events"", ""dataset.root""};. // Book display; auto disp = df.Display(""systName"", 1);. // Do anything else; df.Count().GetValue();. // The display doesn't respect the original parameters; // Prints all 3 rows whereas it should print only one; disp->Print();; }. int main(); {; write_tree();; read_tree();; analyze();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; Fedora 36; ROOT 6.26/06 from conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11390
https://github.com/root-project/root/issues/11390:30,Usability,clear,clear,30,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Apparently calling `Display` with some extra parameter like `nRows` is not respected if before calling `Print` one adds any other operation to the graph. ### To Reproduce; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TString.h>; #include <string>; #include <vector>; #include <memory>; void write_tree(); {; int x{};; TString s{};. TFile file{""dataset.root"", ""recreate""};; TTree tree{""events"", ""events""};; tree.Branch(""nJets"", &x, ""nJets/I"");; tree.Branch(""systName"", &s);. std::vector<std::string> values{""nominal"", ""up"", ""down""};. for (int i = 0; i < 3; i++); {; x = i + 1;; s.Replace(0, s.Length(), values[i]);; tree.Fill();; }. tree.Write();; }. void read_tree(); {; TFile file{""dataset.root"", ""read""};; std::unique_ptr<TTree> tree{file.Get<TTree>(""events"")};; tree->Scan(""*"");; }. void analyze(); {; ROOT::RDataFrame df{""events"", ""dataset.root""};. // Book display; auto disp = df.Display(""systName"", 1);. // Do anything else; df.Count().GetValue();. // The display doesn't respect the original parameters; // Prints all 3 rows whereas it should print only one; disp->Print();; }. int main(); {; write_tree();; read_tree();; analyze();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; Fedora 36; ROOT 6.26/06 from conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11390
https://github.com/root-project/root/pull/11393:314,Testability,test,tests,314,"Introduces a couple of fixes for Define and Filter pythonizations, namely:; - Fixes #10092 so that Python lists can be passed in `Filter` operations to specify column names.; - Restores support for C++ functors and `std::function`s passed as callable arguments of `Define` and `Filter`. and adds the corresponding tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11393
https://github.com/root-project/root/pull/11394:168,Availability,error,errors,168,"The last commit that touched `roofit/histfactory/test/CMakeLists.txt` was accidentally removing the dependency on RooFitCommon, which needs to be there to avoid linker errors on Windows. Fixes these Windows build errors in the nightlies:; https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=windows10,SPEC=default/10959/parsed_console/log_content.html#ERROR1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11394
https://github.com/root-project/root/pull/11394:213,Availability,error,errors,213,"The last commit that touched `roofit/histfactory/test/CMakeLists.txt` was accidentally removing the dependency on RooFitCommon, which needs to be there to avoid linker errors on Windows. Fixes these Windows build errors in the nightlies:; https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=windows10,SPEC=default/10959/parsed_console/log_content.html#ERROR1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11394
https://github.com/root-project/root/pull/11394:100,Integrability,depend,dependency,100,"The last commit that touched `roofit/histfactory/test/CMakeLists.txt` was accidentally removing the dependency on RooFitCommon, which needs to be there to avoid linker errors on Windows. Fixes these Windows build errors in the nightlies:; https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=windows10,SPEC=default/10959/parsed_console/log_content.html#ERROR1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11394
https://github.com/root-project/root/pull/11394:155,Safety,avoid,avoid,155,"The last commit that touched `roofit/histfactory/test/CMakeLists.txt` was accidentally removing the dependency on RooFitCommon, which needs to be there to avoid linker errors on Windows. Fixes these Windows build errors in the nightlies:; https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=windows10,SPEC=default/10959/parsed_console/log_content.html#ERROR1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11394
https://github.com/root-project/root/pull/11394:49,Testability,test,test,49,"The last commit that touched `roofit/histfactory/test/CMakeLists.txt` was accidentally removing the dependency on RooFitCommon, which needs to be there to avoid linker errors on Windows. Fixes these Windows build errors in the nightlies:; https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=windows10,SPEC=default/10959/parsed_console/log_content.html#ERROR1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11394
https://github.com/root-project/root/issues/11396:2458,Availability,error,error,2458,"nce it fetches the range from a range name that does not exist. . ### To Reproduce; In PyROOT, the issue can be reproduced using; ```Python; import ROOT. ws_cat1 = ROOT.RooWorkspace(""ws_cat1""); ws_cat1.factory(""Gaussian::pdf_cat1(x_cat1[0,10],mu_cat1[4,0,10],sigma_cat1[1.0,0.1,10.0])""); pdf_cat1 = ws_cat1.pdf(""pdf_cat1""); x_cat1 = ws_cat1.var(""x_cat1""); x_cat1.setRange(""SideBandLo_cat1"", 0, 2); x_cat1.setRange(""SideBandHi_cat1"", 6, 10); ds_cat1 = pdf_cat1.generate(ROOT.RooArgSet(x_cat1), 11000). ws_cat2 = ROOT.RooWorkspace(""ws_cat2""); ws_cat2.factory(""Gaussian::pdf_cat2(x_cat2[0,10],mu_cat2[6,0,10],sigma_cat2[1.0,0.1,10.0])""); pdf_cat2 = ws_cat2.pdf(""pdf_cat2""); x_cat2 = ws_cat2.var(""x_cat2""); x_cat2.setRange(""SideBandLo_cat2"", 0, 4); x_cat2.setRange(""SideBandHi_cat2"", 8, 10); ds_cat2 = pdf_cat2.generate(ROOT.RooArgSet(x_cat2), 11000). index_cat = ROOT.RooCategory(""cat"", ""cat""); index_cat.defineType(""cat1""); index_cat.defineType(""cat2""). sim_pdf = ROOT.RooSimultaneous(""sim_pdf"", """", index_cat); sim_pdf.addPdf(pdf_cat1, ""cat1""); sim_pdf.addPdf(pdf_cat2, ""cat2""). ROOT.gInterpreter.GenerateDictionary(""std::map<std::string, RooDataSet*>"", ""map;string;RooDataSet.h""); ROOT.gInterpreter.GenerateDictionary(""std::pair<std::string, RooDataSet*>"", ""map;string;RooDataSet.h""); dsmap = ROOT.std.map('string, RooDataSet*')(); dsmap.keepalive = list(); dsmap.keepalive.append(ds_cat1); dsmap.keepalive.append(ds_cat2); dsmap.insert(dsmap.begin(), ROOT.std.pair(""const string, RooDataSet*"")(""cat1"", ds_cat1)); dsmap.insert(dsmap.begin(), ROOT.std.pair(""const string, RooDataSet*"")(""cat2"", ds_cat2)); combData = ROOT.RooDataSet(""combData"", """", ROOT.RooArgSet(x_cat1, x_cat2),; ROOT.RooFit.Index(index_cat),; ROOT.RooFit.Import(dsmap)). nll = sim_pdf.createNLL(combData, ROOT.RooFit.Range(""SideBandLo,SideBandHi""), ROOT.RooFit.SplitRange()); ```; The last step raises the error ""runtime_error: Error in RooAbsPdf::createNLL! The ranges SideBandLo,SideBandHi are overlapping!"" when using ROOT 6.26+.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11396
https://github.com/root-project/root/issues/11396:2480,Availability,Error,Error,2480,"nce it fetches the range from a range name that does not exist. . ### To Reproduce; In PyROOT, the issue can be reproduced using; ```Python; import ROOT. ws_cat1 = ROOT.RooWorkspace(""ws_cat1""); ws_cat1.factory(""Gaussian::pdf_cat1(x_cat1[0,10],mu_cat1[4,0,10],sigma_cat1[1.0,0.1,10.0])""); pdf_cat1 = ws_cat1.pdf(""pdf_cat1""); x_cat1 = ws_cat1.var(""x_cat1""); x_cat1.setRange(""SideBandLo_cat1"", 0, 2); x_cat1.setRange(""SideBandHi_cat1"", 6, 10); ds_cat1 = pdf_cat1.generate(ROOT.RooArgSet(x_cat1), 11000). ws_cat2 = ROOT.RooWorkspace(""ws_cat2""); ws_cat2.factory(""Gaussian::pdf_cat2(x_cat2[0,10],mu_cat2[6,0,10],sigma_cat2[1.0,0.1,10.0])""); pdf_cat2 = ws_cat2.pdf(""pdf_cat2""); x_cat2 = ws_cat2.var(""x_cat2""); x_cat2.setRange(""SideBandLo_cat2"", 0, 4); x_cat2.setRange(""SideBandHi_cat2"", 8, 10); ds_cat2 = pdf_cat2.generate(ROOT.RooArgSet(x_cat2), 11000). index_cat = ROOT.RooCategory(""cat"", ""cat""); index_cat.defineType(""cat1""); index_cat.defineType(""cat2""). sim_pdf = ROOT.RooSimultaneous(""sim_pdf"", """", index_cat); sim_pdf.addPdf(pdf_cat1, ""cat1""); sim_pdf.addPdf(pdf_cat2, ""cat2""). ROOT.gInterpreter.GenerateDictionary(""std::map<std::string, RooDataSet*>"", ""map;string;RooDataSet.h""); ROOT.gInterpreter.GenerateDictionary(""std::pair<std::string, RooDataSet*>"", ""map;string;RooDataSet.h""); dsmap = ROOT.std.map('string, RooDataSet*')(); dsmap.keepalive = list(); dsmap.keepalive.append(ds_cat1); dsmap.keepalive.append(ds_cat2); dsmap.insert(dsmap.begin(), ROOT.std.pair(""const string, RooDataSet*"")(""cat1"", ds_cat1)); dsmap.insert(dsmap.begin(), ROOT.std.pair(""const string, RooDataSet*"")(""cat2"", ds_cat2)); combData = ROOT.RooDataSet(""combData"", """", ROOT.RooArgSet(x_cat1, x_cat2),; ROOT.RooFit.Index(index_cat),; ROOT.RooFit.Import(dsmap)). nll = sim_pdf.createNLL(combData, ROOT.RooFit.Range(""SideBandLo,SideBandHi""), ROOT.RooFit.SplitRange()); ```; The last step raises the error ""runtime_error: Error in RooAbsPdf::createNLL! The ranges SideBandLo,SideBandHi are overlapping!"" when using ROOT 6.26+.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11396
https://github.com/root-project/root/issues/11397:85,Modifiability,variab,variable,85,"- [x] Checked for duplicates. ### Describe the bug; It seems that in pyROOT, the NLL variable created from `RooAbsPdf.createNLL` does not get disposed of properly when the variable went out of scope, causing a memory leak. ### To Reproduce; ```Python; import ROOT. ROOT.RooMsgService.instance().getStream(1).removeTopic(ROOT.RooFit.Minimization). ws = ROOT.RooWorkspace(); ws.factory(""Gaussian::pdf(x[0,10],mu[4,0,10],sigma[1.0,0.1,10.0])""); pdf = ws.pdf(""pdf""); x = ws.var(""x""); x.setRange(""SideBandLo"", 0, 2); x.setRange(""SideBandHi"", 6, 10); ds = pdf.generate(ROOT.RooArgSet(x), 11000). import psutil. def _memstat(mem0, mem1):; MB = 1024 * 1024; rss_mb = mem1.rss // MB; vms_mb = mem1.vms // MB; rss_delta_mb = (mem1.rss - mem0.rss) / MB; vms_delta_mb = (mem1.vms - mem0.vms) / MB; print(f""Memory stat: RSS={rss_mb} MB, VMS={vms_mb} MB. Delta RSS={rss_delta_mb:.2f} MB VMS={vms_delta_mb:.2f} MB""); ; def test(pdf, ds):; nll = pdf.createNLL(ds); ; proc = psutil.Process(); mem0 = proc.memory_info(); for i in range(int(1e4)):; test(pdf, ds); if (i%1000 == 0):; mem1 = proc.memory_info(); _memstat(mem0, mem1); mem0 = mem1; ```. This gives. ```; Memory stat: RSS=4009 MB, VMS=5170 MB. Delta RSS=0.00 MB VMS=0.00 MB; Memory stat: RSS=4116 MB, VMS=5278 MB. Delta RSS=107.25 MB VMS=107.15 MB; Memory stat: RSS=4224 MB, VMS=5386 MB. Delta RSS=108.02 MB VMS=108.10 MB; Memory stat: RSS=4333 MB, VMS=5495 MB. Delta RSS=109.05 MB VMS=109.21 MB; Memory stat: RSS=4439 MB, VMS=5601 MB. Delta RSS=106.48 MB VMS=106.48 MB; Memory stat: RSS=4547 MB, VMS=5709 MB. Delta RSS=108.02 MB VMS=107.85 MB; Memory stat: RSS=4656 MB, VMS=5820 MB. Delta RSS=109.05 MB VMS=110.36 MB; Memory stat: RSS=4764 MB, VMS=5927 MB. Delta RSS=108.02 MB VMS=107.75 MB; Memory stat: RSS=4872 MB, VMS=6035 MB. Delta RSS=108.02 MB VMS=107.95 MB; Memory stat: RSS=4979 MB, VMS=6144 MB. Delta RSS=106.81 MB VMS=108.52 MB; ```. ### Setup; ROOT 6.24, 6.26 (from LCG)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11397
https://github.com/root-project/root/issues/11397:172,Modifiability,variab,variable,172,"- [x] Checked for duplicates. ### Describe the bug; It seems that in pyROOT, the NLL variable created from `RooAbsPdf.createNLL` does not get disposed of properly when the variable went out of scope, causing a memory leak. ### To Reproduce; ```Python; import ROOT. ROOT.RooMsgService.instance().getStream(1).removeTopic(ROOT.RooFit.Minimization). ws = ROOT.RooWorkspace(); ws.factory(""Gaussian::pdf(x[0,10],mu[4,0,10],sigma[1.0,0.1,10.0])""); pdf = ws.pdf(""pdf""); x = ws.var(""x""); x.setRange(""SideBandLo"", 0, 2); x.setRange(""SideBandHi"", 6, 10); ds = pdf.generate(ROOT.RooArgSet(x), 11000). import psutil. def _memstat(mem0, mem1):; MB = 1024 * 1024; rss_mb = mem1.rss // MB; vms_mb = mem1.vms // MB; rss_delta_mb = (mem1.rss - mem0.rss) / MB; vms_delta_mb = (mem1.vms - mem0.vms) / MB; print(f""Memory stat: RSS={rss_mb} MB, VMS={vms_mb} MB. Delta RSS={rss_delta_mb:.2f} MB VMS={vms_delta_mb:.2f} MB""); ; def test(pdf, ds):; nll = pdf.createNLL(ds); ; proc = psutil.Process(); mem0 = proc.memory_info(); for i in range(int(1e4)):; test(pdf, ds); if (i%1000 == 0):; mem1 = proc.memory_info(); _memstat(mem0, mem1); mem0 = mem1; ```. This gives. ```; Memory stat: RSS=4009 MB, VMS=5170 MB. Delta RSS=0.00 MB VMS=0.00 MB; Memory stat: RSS=4116 MB, VMS=5278 MB. Delta RSS=107.25 MB VMS=107.15 MB; Memory stat: RSS=4224 MB, VMS=5386 MB. Delta RSS=108.02 MB VMS=108.10 MB; Memory stat: RSS=4333 MB, VMS=5495 MB. Delta RSS=109.05 MB VMS=109.21 MB; Memory stat: RSS=4439 MB, VMS=5601 MB. Delta RSS=106.48 MB VMS=106.48 MB; Memory stat: RSS=4547 MB, VMS=5709 MB. Delta RSS=108.02 MB VMS=107.85 MB; Memory stat: RSS=4656 MB, VMS=5820 MB. Delta RSS=109.05 MB VMS=110.36 MB; Memory stat: RSS=4764 MB, VMS=5927 MB. Delta RSS=108.02 MB VMS=107.75 MB; Memory stat: RSS=4872 MB, VMS=6035 MB. Delta RSS=108.02 MB VMS=107.95 MB; Memory stat: RSS=4979 MB, VMS=6144 MB. Delta RSS=106.81 MB VMS=108.52 MB; ```. ### Setup; ROOT 6.24, 6.26 (from LCG)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11397
https://github.com/root-project/root/issues/11397:908,Testability,test,test,908,"- [x] Checked for duplicates. ### Describe the bug; It seems that in pyROOT, the NLL variable created from `RooAbsPdf.createNLL` does not get disposed of properly when the variable went out of scope, causing a memory leak. ### To Reproduce; ```Python; import ROOT. ROOT.RooMsgService.instance().getStream(1).removeTopic(ROOT.RooFit.Minimization). ws = ROOT.RooWorkspace(); ws.factory(""Gaussian::pdf(x[0,10],mu[4,0,10],sigma[1.0,0.1,10.0])""); pdf = ws.pdf(""pdf""); x = ws.var(""x""); x.setRange(""SideBandLo"", 0, 2); x.setRange(""SideBandHi"", 6, 10); ds = pdf.generate(ROOT.RooArgSet(x), 11000). import psutil. def _memstat(mem0, mem1):; MB = 1024 * 1024; rss_mb = mem1.rss // MB; vms_mb = mem1.vms // MB; rss_delta_mb = (mem1.rss - mem0.rss) / MB; vms_delta_mb = (mem1.vms - mem0.vms) / MB; print(f""Memory stat: RSS={rss_mb} MB, VMS={vms_mb} MB. Delta RSS={rss_delta_mb:.2f} MB VMS={vms_delta_mb:.2f} MB""); ; def test(pdf, ds):; nll = pdf.createNLL(ds); ; proc = psutil.Process(); mem0 = proc.memory_info(); for i in range(int(1e4)):; test(pdf, ds); if (i%1000 == 0):; mem1 = proc.memory_info(); _memstat(mem0, mem1); mem0 = mem1; ```. This gives. ```; Memory stat: RSS=4009 MB, VMS=5170 MB. Delta RSS=0.00 MB VMS=0.00 MB; Memory stat: RSS=4116 MB, VMS=5278 MB. Delta RSS=107.25 MB VMS=107.15 MB; Memory stat: RSS=4224 MB, VMS=5386 MB. Delta RSS=108.02 MB VMS=108.10 MB; Memory stat: RSS=4333 MB, VMS=5495 MB. Delta RSS=109.05 MB VMS=109.21 MB; Memory stat: RSS=4439 MB, VMS=5601 MB. Delta RSS=106.48 MB VMS=106.48 MB; Memory stat: RSS=4547 MB, VMS=5709 MB. Delta RSS=108.02 MB VMS=107.85 MB; Memory stat: RSS=4656 MB, VMS=5820 MB. Delta RSS=109.05 MB VMS=110.36 MB; Memory stat: RSS=4764 MB, VMS=5927 MB. Delta RSS=108.02 MB VMS=107.75 MB; Memory stat: RSS=4872 MB, VMS=6035 MB. Delta RSS=108.02 MB VMS=107.95 MB; Memory stat: RSS=4979 MB, VMS=6144 MB. Delta RSS=106.81 MB VMS=108.52 MB; ```. ### Setup; ROOT 6.24, 6.26 (from LCG)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11397
https://github.com/root-project/root/issues/11397:1030,Testability,test,test,1030,"- [x] Checked for duplicates. ### Describe the bug; It seems that in pyROOT, the NLL variable created from `RooAbsPdf.createNLL` does not get disposed of properly when the variable went out of scope, causing a memory leak. ### To Reproduce; ```Python; import ROOT. ROOT.RooMsgService.instance().getStream(1).removeTopic(ROOT.RooFit.Minimization). ws = ROOT.RooWorkspace(); ws.factory(""Gaussian::pdf(x[0,10],mu[4,0,10],sigma[1.0,0.1,10.0])""); pdf = ws.pdf(""pdf""); x = ws.var(""x""); x.setRange(""SideBandLo"", 0, 2); x.setRange(""SideBandHi"", 6, 10); ds = pdf.generate(ROOT.RooArgSet(x), 11000). import psutil. def _memstat(mem0, mem1):; MB = 1024 * 1024; rss_mb = mem1.rss // MB; vms_mb = mem1.vms // MB; rss_delta_mb = (mem1.rss - mem0.rss) / MB; vms_delta_mb = (mem1.vms - mem0.vms) / MB; print(f""Memory stat: RSS={rss_mb} MB, VMS={vms_mb} MB. Delta RSS={rss_delta_mb:.2f} MB VMS={vms_delta_mb:.2f} MB""); ; def test(pdf, ds):; nll = pdf.createNLL(ds); ; proc = psutil.Process(); mem0 = proc.memory_info(); for i in range(int(1e4)):; test(pdf, ds); if (i%1000 == 0):; mem1 = proc.memory_info(); _memstat(mem0, mem1); mem0 = mem1; ```. This gives. ```; Memory stat: RSS=4009 MB, VMS=5170 MB. Delta RSS=0.00 MB VMS=0.00 MB; Memory stat: RSS=4116 MB, VMS=5278 MB. Delta RSS=107.25 MB VMS=107.15 MB; Memory stat: RSS=4224 MB, VMS=5386 MB. Delta RSS=108.02 MB VMS=108.10 MB; Memory stat: RSS=4333 MB, VMS=5495 MB. Delta RSS=109.05 MB VMS=109.21 MB; Memory stat: RSS=4439 MB, VMS=5601 MB. Delta RSS=106.48 MB VMS=106.48 MB; Memory stat: RSS=4547 MB, VMS=5709 MB. Delta RSS=108.02 MB VMS=107.85 MB; Memory stat: RSS=4656 MB, VMS=5820 MB. Delta RSS=109.05 MB VMS=110.36 MB; Memory stat: RSS=4764 MB, VMS=5927 MB. Delta RSS=108.02 MB VMS=107.75 MB; Memory stat: RSS=4872 MB, VMS=6035 MB. Delta RSS=108.02 MB VMS=107.95 MB; Memory stat: RSS=4979 MB, VMS=6144 MB. Delta RSS=106.81 MB VMS=108.52 MB; ```. ### Setup; ROOT 6.24, 6.26 (from LCG)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11397
https://github.com/root-project/root/pull/11398:366,Safety,avoid,avoid,366,"Fixes #11390. Improves the workflow of `DisplayHelper::Exec` as follows:; 1. We always check whether there are entries to be displayed with `RDisplay::HasNext`. If so, add one row to the display object; 2. If no more entries should be displayed, signal this node has finished its job. Make sure the call to `StopProcessing` is done only once with a boolean flag, to avoid early stop of the execution due to more stop signals than the children who actually have finished their job.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11398
https://github.com/root-project/root/pull/11400:1272,Deployability,configurat,configurations,1272,"The RooProdPdf is not trivial to deal with in BatchMode, because its; actual servers depend on the normalization set. One should rather think of the RooProdPdf as something like a caching; PDF, but instead of creating a cached HistPdf for a given normalization; set, it creates an internal computation graph representing the; normalized product for a given normalization set. This internal computation graph is not expsed via the usual; client-server interface. However, this is strictly required for the new; BatchMode: internal computation graphs are not allowed because the; RooFitDriver would not be able to manage memory copies between host and; device, and also schedeuling. For this reason, BatchMode support is removed from the RooProdPdf class.; We only keep a `RooProdPdf::calculateBatch` function that can be used to; evaluated a given cache element when all the internal args are contained; in the BatchMode data map. To correctly evaluate these computation graphs in the batchMode, a new; class is introduced that wraps them with the correct client-server; interface. Instances of this class are then created for each ProdPdf in; the original computation graph, and the ProdPdfs are replaced with these; objects. This means all the different RooProdPdf cache configurations are now; correctly dealt with in the BatchMode, making the; `RooProdPdf/TestProdPdf.CachingOpt` unit test also pass with the; BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11400
https://github.com/root-project/root/pull/11400:85,Integrability,depend,depend,85,"The RooProdPdf is not trivial to deal with in BatchMode, because its; actual servers depend on the normalization set. One should rather think of the RooProdPdf as something like a caching; PDF, but instead of creating a cached HistPdf for a given normalization; set, it creates an internal computation graph representing the; normalized product for a given normalization set. This internal computation graph is not expsed via the usual; client-server interface. However, this is strictly required for the new; BatchMode: internal computation graphs are not allowed because the; RooFitDriver would not be able to manage memory copies between host and; device, and also schedeuling. For this reason, BatchMode support is removed from the RooProdPdf class.; We only keep a `RooProdPdf::calculateBatch` function that can be used to; evaluated a given cache element when all the internal args are contained; in the BatchMode data map. To correctly evaluate these computation graphs in the batchMode, a new; class is introduced that wraps them with the correct client-server; interface. Instances of this class are then created for each ProdPdf in; the original computation graph, and the ProdPdfs are replaced with these; objects. This means all the different RooProdPdf cache configurations are now; correctly dealt with in the BatchMode, making the; `RooProdPdf/TestProdPdf.CachingOpt` unit test also pass with the; BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11400
https://github.com/root-project/root/pull/11400:451,Integrability,interface,interface,451,"The RooProdPdf is not trivial to deal with in BatchMode, because its; actual servers depend on the normalization set. One should rather think of the RooProdPdf as something like a caching; PDF, but instead of creating a cached HistPdf for a given normalization; set, it creates an internal computation graph representing the; normalized product for a given normalization set. This internal computation graph is not expsed via the usual; client-server interface. However, this is strictly required for the new; BatchMode: internal computation graphs are not allowed because the; RooFitDriver would not be able to manage memory copies between host and; device, and also schedeuling. For this reason, BatchMode support is removed from the RooProdPdf class.; We only keep a `RooProdPdf::calculateBatch` function that can be used to; evaluated a given cache element when all the internal args are contained; in the BatchMode data map. To correctly evaluate these computation graphs in the batchMode, a new; class is introduced that wraps them with the correct client-server; interface. Instances of this class are then created for each ProdPdf in; the original computation graph, and the ProdPdfs are replaced with these; objects. This means all the different RooProdPdf cache configurations are now; correctly dealt with in the BatchMode, making the; `RooProdPdf/TestProdPdf.CachingOpt` unit test also pass with the; BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11400
https://github.com/root-project/root/pull/11400:1027,Integrability,wrap,wraps,1027,"The RooProdPdf is not trivial to deal with in BatchMode, because its; actual servers depend on the normalization set. One should rather think of the RooProdPdf as something like a caching; PDF, but instead of creating a cached HistPdf for a given normalization; set, it creates an internal computation graph representing the; normalized product for a given normalization set. This internal computation graph is not expsed via the usual; client-server interface. However, this is strictly required for the new; BatchMode: internal computation graphs are not allowed because the; RooFitDriver would not be able to manage memory copies between host and; device, and also schedeuling. For this reason, BatchMode support is removed from the RooProdPdf class.; We only keep a `RooProdPdf::calculateBatch` function that can be used to; evaluated a given cache element when all the internal args are contained; in the BatchMode data map. To correctly evaluate these computation graphs in the batchMode, a new; class is introduced that wraps them with the correct client-server; interface. Instances of this class are then created for each ProdPdf in; the original computation graph, and the ProdPdfs are replaced with these; objects. This means all the different RooProdPdf cache configurations are now; correctly dealt with in the BatchMode, making the; `RooProdPdf/TestProdPdf.CachingOpt` unit test also pass with the; BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11400
https://github.com/root-project/root/pull/11400:1070,Integrability,interface,interface,1070,"The RooProdPdf is not trivial to deal with in BatchMode, because its; actual servers depend on the normalization set. One should rather think of the RooProdPdf as something like a caching; PDF, but instead of creating a cached HistPdf for a given normalization; set, it creates an internal computation graph representing the; normalized product for a given normalization set. This internal computation graph is not expsed via the usual; client-server interface. However, this is strictly required for the new; BatchMode: internal computation graphs are not allowed because the; RooFitDriver would not be able to manage memory copies between host and; device, and also schedeuling. For this reason, BatchMode support is removed from the RooProdPdf class.; We only keep a `RooProdPdf::calculateBatch` function that can be used to; evaluated a given cache element when all the internal args are contained; in the BatchMode data map. To correctly evaluate these computation graphs in the batchMode, a new; class is introduced that wraps them with the correct client-server; interface. Instances of this class are then created for each ProdPdf in; the original computation graph, and the ProdPdfs are replaced with these; objects. This means all the different RooProdPdf cache configurations are now; correctly dealt with in the BatchMode, making the; `RooProdPdf/TestProdPdf.CachingOpt` unit test also pass with the; BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11400
https://github.com/root-project/root/pull/11400:1272,Modifiability,config,configurations,1272,"The RooProdPdf is not trivial to deal with in BatchMode, because its; actual servers depend on the normalization set. One should rather think of the RooProdPdf as something like a caching; PDF, but instead of creating a cached HistPdf for a given normalization; set, it creates an internal computation graph representing the; normalized product for a given normalization set. This internal computation graph is not expsed via the usual; client-server interface. However, this is strictly required for the new; BatchMode: internal computation graphs are not allowed because the; RooFitDriver would not be able to manage memory copies between host and; device, and also schedeuling. For this reason, BatchMode support is removed from the RooProdPdf class.; We only keep a `RooProdPdf::calculateBatch` function that can be used to; evaluated a given cache element when all the internal args are contained; in the BatchMode data map. To correctly evaluate these computation graphs in the batchMode, a new; class is introduced that wraps them with the correct client-server; interface. Instances of this class are then created for each ProdPdf in; the original computation graph, and the ProdPdfs are replaced with these; objects. This means all the different RooProdPdf cache configurations are now; correctly dealt with in the BatchMode, making the; `RooProdPdf/TestProdPdf.CachingOpt` unit test also pass with the; BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11400
https://github.com/root-project/root/pull/11400:220,Performance,cache,cached,220,"The RooProdPdf is not trivial to deal with in BatchMode, because its; actual servers depend on the normalization set. One should rather think of the RooProdPdf as something like a caching; PDF, but instead of creating a cached HistPdf for a given normalization; set, it creates an internal computation graph representing the; normalized product for a given normalization set. This internal computation graph is not expsed via the usual; client-server interface. However, this is strictly required for the new; BatchMode: internal computation graphs are not allowed because the; RooFitDriver would not be able to manage memory copies between host and; device, and also schedeuling. For this reason, BatchMode support is removed from the RooProdPdf class.; We only keep a `RooProdPdf::calculateBatch` function that can be used to; evaluated a given cache element when all the internal args are contained; in the BatchMode data map. To correctly evaluate these computation graphs in the batchMode, a new; class is introduced that wraps them with the correct client-server; interface. Instances of this class are then created for each ProdPdf in; the original computation graph, and the ProdPdfs are replaced with these; objects. This means all the different RooProdPdf cache configurations are now; correctly dealt with in the BatchMode, making the; `RooProdPdf/TestProdPdf.CachingOpt` unit test also pass with the; BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11400
https://github.com/root-project/root/pull/11400:847,Performance,cache,cache,847,"The RooProdPdf is not trivial to deal with in BatchMode, because its; actual servers depend on the normalization set. One should rather think of the RooProdPdf as something like a caching; PDF, but instead of creating a cached HistPdf for a given normalization; set, it creates an internal computation graph representing the; normalized product for a given normalization set. This internal computation graph is not expsed via the usual; client-server interface. However, this is strictly required for the new; BatchMode: internal computation graphs are not allowed because the; RooFitDriver would not be able to manage memory copies between host and; device, and also schedeuling. For this reason, BatchMode support is removed from the RooProdPdf class.; We only keep a `RooProdPdf::calculateBatch` function that can be used to; evaluated a given cache element when all the internal args are contained; in the BatchMode data map. To correctly evaluate these computation graphs in the batchMode, a new; class is introduced that wraps them with the correct client-server; interface. Instances of this class are then created for each ProdPdf in; the original computation graph, and the ProdPdfs are replaced with these; objects. This means all the different RooProdPdf cache configurations are now; correctly dealt with in the BatchMode, making the; `RooProdPdf/TestProdPdf.CachingOpt` unit test also pass with the; BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11400
https://github.com/root-project/root/pull/11400:1266,Performance,cache,cache,1266,"The RooProdPdf is not trivial to deal with in BatchMode, because its; actual servers depend on the normalization set. One should rather think of the RooProdPdf as something like a caching; PDF, but instead of creating a cached HistPdf for a given normalization; set, it creates an internal computation graph representing the; normalized product for a given normalization set. This internal computation graph is not expsed via the usual; client-server interface. However, this is strictly required for the new; BatchMode: internal computation graphs are not allowed because the; RooFitDriver would not be able to manage memory copies between host and; device, and also schedeuling. For this reason, BatchMode support is removed from the RooProdPdf class.; We only keep a `RooProdPdf::calculateBatch` function that can be used to; evaluated a given cache element when all the internal args are contained; in the BatchMode data map. To correctly evaluate these computation graphs in the batchMode, a new; class is introduced that wraps them with the correct client-server; interface. Instances of this class are then created for each ProdPdf in; the original computation graph, and the ProdPdfs are replaced with these; objects. This means all the different RooProdPdf cache configurations are now; correctly dealt with in the BatchMode, making the; `RooProdPdf/TestProdPdf.CachingOpt` unit test also pass with the; BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11400
https://github.com/root-project/root/pull/11400:1359,Testability,Test,TestProdPdf,1359,"The RooProdPdf is not trivial to deal with in BatchMode, because its; actual servers depend on the normalization set. One should rather think of the RooProdPdf as something like a caching; PDF, but instead of creating a cached HistPdf for a given normalization; set, it creates an internal computation graph representing the; normalized product for a given normalization set. This internal computation graph is not expsed via the usual; client-server interface. However, this is strictly required for the new; BatchMode: internal computation graphs are not allowed because the; RooFitDriver would not be able to manage memory copies between host and; device, and also schedeuling. For this reason, BatchMode support is removed from the RooProdPdf class.; We only keep a `RooProdPdf::calculateBatch` function that can be used to; evaluated a given cache element when all the internal args are contained; in the BatchMode data map. To correctly evaluate these computation graphs in the batchMode, a new; class is introduced that wraps them with the correct client-server; interface. Instances of this class are then created for each ProdPdf in; the original computation graph, and the ProdPdfs are replaced with these; objects. This means all the different RooProdPdf cache configurations are now; correctly dealt with in the BatchMode, making the; `RooProdPdf/TestProdPdf.CachingOpt` unit test also pass with the; BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11400
https://github.com/root-project/root/pull/11400:1388,Testability,test,test,1388,"The RooProdPdf is not trivial to deal with in BatchMode, because its; actual servers depend on the normalization set. One should rather think of the RooProdPdf as something like a caching; PDF, but instead of creating a cached HistPdf for a given normalization; set, it creates an internal computation graph representing the; normalized product for a given normalization set. This internal computation graph is not expsed via the usual; client-server interface. However, this is strictly required for the new; BatchMode: internal computation graphs are not allowed because the; RooFitDriver would not be able to manage memory copies between host and; device, and also schedeuling. For this reason, BatchMode support is removed from the RooProdPdf class.; We only keep a `RooProdPdf::calculateBatch` function that can be used to; evaluated a given cache element when all the internal args are contained; in the BatchMode data map. To correctly evaluate these computation graphs in the batchMode, a new; class is introduced that wraps them with the correct client-server; interface. Instances of this class are then created for each ProdPdf in; the original computation graph, and the ProdPdfs are replaced with these; objects. This means all the different RooProdPdf cache configurations are now; correctly dealt with in the BatchMode, making the; `RooProdPdf/TestProdPdf.CachingOpt` unit test also pass with the; BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11400
https://github.com/root-project/root/pull/11401:115,Integrability,depend,depend,115,"When the `SplitRange` command arguemnt is used in; `RooAbsPdf::createNLL`, the actual range names used for the fit depend on the channel, with the range names suffixed by the category name. This should be considered correctly in the overlap checks. Closes #11396.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11401
https://github.com/root-project/root/pull/11402:108,Deployability,patch,patches,108,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11401; 2. https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11402
https://github.com/root-project/root/pull/11402:372,Testability,test,testRooSimultaneous,372,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11401; 2. https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11402
https://github.com/root-project/root/pull/11403:84,Availability,error,error,84,## This Pull request:; - Initialize the size and the stride of the axis; - throw an error when the input tensor has more than 5 dimensions. ## Checklist:; - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11403
https://github.com/root-project/root/pull/11403:161,Testability,test,tested,161,## This Pull request:; - Initialize the size and the stride of the axis; - throw an error when the input tensor has more than 5 dimensions. ## Checklist:; - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11403
https://github.com/root-project/root/pull/11405:460,Deployability,configurat,configuration,460,"On some platform operator delete taints the memory, so even right after the deletion the information stored by ~TObject is already erased. On those platform we no longer rely on the kNotDelete bit hack and rely on the system (which has tainted the memory assumingly for a reason) to detect the use-after-delete problems. Introduce 2 new functions. TObject::IsDestructed (used by TClonesArray) that detects that the destructor has been run and is active in all configuration. This should be used if the code knows that the memory has not been freed/deleted. ROOT::Detail::HasBeenDeleted(TObject*) with returns true if the platform does not taint the memory and if the kNotDeleted is not set (in all other case, it returns false). This fixes #11330. Backport of https://github.com/root-project/root/pull/11334",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11405
https://github.com/root-project/root/pull/11405:460,Modifiability,config,configuration,460,"On some platform operator delete taints the memory, so even right after the deletion the information stored by ~TObject is already erased. On those platform we no longer rely on the kNotDelete bit hack and rely on the system (which has tainted the memory assumingly for a reason) to detect the use-after-delete problems. Introduce 2 new functions. TObject::IsDestructed (used by TClonesArray) that detects that the destructor has been run and is active in all configuration. This should be used if the code knows that the memory has not been freed/deleted. ROOT::Detail::HasBeenDeleted(TObject*) with returns true if the platform does not taint the memory and if the kNotDeleted is not set (in all other case, it returns false). This fixes #11330. Backport of https://github.com/root-project/root/pull/11334",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11405
https://github.com/root-project/root/pull/11405:283,Safety,detect,detect,283,"On some platform operator delete taints the memory, so even right after the deletion the information stored by ~TObject is already erased. On those platform we no longer rely on the kNotDelete bit hack and rely on the system (which has tainted the memory assumingly for a reason) to detect the use-after-delete problems. Introduce 2 new functions. TObject::IsDestructed (used by TClonesArray) that detects that the destructor has been run and is active in all configuration. This should be used if the code knows that the memory has not been freed/deleted. ROOT::Detail::HasBeenDeleted(TObject*) with returns true if the platform does not taint the memory and if the kNotDeleted is not set (in all other case, it returns false). This fixes #11330. Backport of https://github.com/root-project/root/pull/11334",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11405
https://github.com/root-project/root/pull/11405:398,Safety,detect,detects,398,"On some platform operator delete taints the memory, so even right after the deletion the information stored by ~TObject is already erased. On those platform we no longer rely on the kNotDelete bit hack and rely on the system (which has tainted the memory assumingly for a reason) to detect the use-after-delete problems. Introduce 2 new functions. TObject::IsDestructed (used by TClonesArray) that detects that the destructor has been run and is active in all configuration. This should be used if the code knows that the memory has not been freed/deleted. ROOT::Detail::HasBeenDeleted(TObject*) with returns true if the platform does not taint the memory and if the kNotDeleted is not set (in all other case, it returns false). This fixes #11330. Backport of https://github.com/root-project/root/pull/11334",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11405
https://github.com/root-project/root/pull/11406:572,Modifiability,extend,extended,572,"Unlike in the old RooFit, the PDF was not cloned in the BatchMode when a; likelihood object was created with `RooAbsPdf::createNLL`. This caused; trouble in a few places, because changing the state of the NLL changed; the state of the original model. Actually, the model was already cloned when a RooSimultaneous was used,; and because the cloning is only expensive for large simultaneous models,; this change is not expected to have a negative performance impact for; realistic workflows. The `testRooSimultaneous` closure test with a one-channel; RooSimultaneous is now extended to use also the BatchMode, because this; was one of the cases where it failed before the suggested change in this; commit. This PR includes a second technical commit with some code modernization in `stressRooFit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11406
https://github.com/root-project/root/pull/11406:445,Performance,perform,performance,445,"Unlike in the old RooFit, the PDF was not cloned in the BatchMode when a; likelihood object was created with `RooAbsPdf::createNLL`. This caused; trouble in a few places, because changing the state of the NLL changed; the state of the original model. Actually, the model was already cloned when a RooSimultaneous was used,; and because the cloning is only expensive for large simultaneous models,; this change is not expected to have a negative performance impact for; realistic workflows. The `testRooSimultaneous` closure test with a one-channel; RooSimultaneous is now extended to use also the BatchMode, because this; was one of the cases where it failed before the suggested change in this; commit. This PR includes a second technical commit with some code modernization in `stressRooFit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11406
https://github.com/root-project/root/pull/11406:495,Testability,test,testRooSimultaneous,495,"Unlike in the old RooFit, the PDF was not cloned in the BatchMode when a; likelihood object was created with `RooAbsPdf::createNLL`. This caused; trouble in a few places, because changing the state of the NLL changed; the state of the original model. Actually, the model was already cloned when a RooSimultaneous was used,; and because the cloning is only expensive for large simultaneous models,; this change is not expected to have a negative performance impact for; realistic workflows. The `testRooSimultaneous` closure test with a one-channel; RooSimultaneous is now extended to use also the BatchMode, because this; was one of the cases where it failed before the suggested change in this; commit. This PR includes a second technical commit with some code modernization in `stressRooFit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11406
https://github.com/root-project/root/pull/11406:524,Testability,test,test,524,"Unlike in the old RooFit, the PDF was not cloned in the BatchMode when a; likelihood object was created with `RooAbsPdf::createNLL`. This caused; trouble in a few places, because changing the state of the NLL changed; the state of the original model. Actually, the model was already cloned when a RooSimultaneous was used,; and because the cloning is only expensive for large simultaneous models,; this change is not expected to have a negative performance impact for; realistic workflows. The `testRooSimultaneous` closure test with a one-channel; RooSimultaneous is now extended to use also the BatchMode, because this; was one of the cases where it failed before the suggested change in this; commit. This PR includes a second technical commit with some code modernization in `stressRooFit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11406
https://github.com/root-project/root/pull/11407:90,Deployability,update,update,90,"The sum of weight, weight square and weigth * x used for statistics computation where not update when adding/merging THnBase classes. This fixes #11333",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11407
https://github.com/root-project/root/pull/11410:158,Performance,perform,performant,158,"There still was a constructor of `RooDataSet` that was hardcoded to use; the TreeDataStore. This needs to be changed, because the; RooVectorDataStore is more performant and compatible with the new; BatchMode. This PR also includes some other commits that improve the memory management in the dataset classes with `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11410
https://github.com/root-project/root/pull/11412:90,Energy Efficiency,consumption,consumption,90,"As reported in issue #10454, calling `ClassInfo_IsEnum()` repeatedly increases the memory consumption of the program. This does not happen with `TEnum::GetEnum()`, which can be used instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11412
https://github.com/root-project/root/pull/11413:247,Safety,avoid,avoided,247,"Given the following function declared to ROOT and accessed via a Python proxy:. ```; int foo(int x);; ```. Currently accessing its `func_doc`, which in turn calls `CPPMethod::GetPrototype`, gives:. 'int ::foo(int x)'. The extra set of '::' can be avoided by checking that the function is not declared inside a namespace. Note: this is a check, may be not worthy in the end if we find places that rely on those extra ""::"" being present",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11413
https://github.com/root-project/root/pull/11413:50,Security,access,accessed,50,"Given the following function declared to ROOT and accessed via a Python proxy:. ```; int foo(int x);; ```. Currently accessing its `func_doc`, which in turn calls `CPPMethod::GetPrototype`, gives:. 'int ::foo(int x)'. The extra set of '::' can be avoided by checking that the function is not declared inside a namespace. Note: this is a check, may be not worthy in the end if we find places that rely on those extra ""::"" being present",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11413
https://github.com/root-project/root/pull/11413:117,Security,access,accessing,117,"Given the following function declared to ROOT and accessed via a Python proxy:. ```; int foo(int x);; ```. Currently accessing its `func_doc`, which in turn calls `CPPMethod::GetPrototype`, gives:. 'int ::foo(int x)'. The extra set of '::' can be avoided by checking that the function is not declared inside a namespace. Note: this is a check, may be not worthy in the end if we find places that rely on those extra ""::"" being present",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11413
https://github.com/root-project/root/pull/11415:230,Testability,test,tested,230,## This Pull request:. - Implement UnidirectionalBroadcasting and MultidirectionalBroadcasting according to numpy's broadcasting rules.; - Broadcast the input tensors of the binary operator to the same shape. ## Checklist:; - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11415
https://github.com/root-project/root/pull/11416:45,Testability,test,testGlobalObservables,45,"The new BatchMode is adjusted such that the `testGlobalObservables` unit; test is passing when always using the BatchMode for fitting. This also; means the following adjustments had to be made:. 1. Implement resetting of data for the RooFitDriver. 2. Always clone the created constraint term, also in the new; BatchMode, because the new BatchMode mutates the computation graph; and it's not good if the original model is changed. 3. Implement the correct treatment of taking global observables from; the dataset in the BatchMode. This PR also includes a commit with some code modernization of the `RooAbsPdf`, and it also removes the low-level unit test for the RooFitDriver, which is not needed anymore now that the RooFitDriver is tested extensively by every unit tests that makes use of the new BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11416
https://github.com/root-project/root/pull/11416:74,Testability,test,test,74,"The new BatchMode is adjusted such that the `testGlobalObservables` unit; test is passing when always using the BatchMode for fitting. This also; means the following adjustments had to be made:. 1. Implement resetting of data for the RooFitDriver. 2. Always clone the created constraint term, also in the new; BatchMode, because the new BatchMode mutates the computation graph; and it's not good if the original model is changed. 3. Implement the correct treatment of taking global observables from; the dataset in the BatchMode. This PR also includes a commit with some code modernization of the `RooAbsPdf`, and it also removes the low-level unit test for the RooFitDriver, which is not needed anymore now that the RooFitDriver is tested extensively by every unit tests that makes use of the new BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11416
https://github.com/root-project/root/pull/11416:649,Testability,test,test,649,"The new BatchMode is adjusted such that the `testGlobalObservables` unit; test is passing when always using the BatchMode for fitting. This also; means the following adjustments had to be made:. 1. Implement resetting of data for the RooFitDriver. 2. Always clone the created constraint term, also in the new; BatchMode, because the new BatchMode mutates the computation graph; and it's not good if the original model is changed. 3. Implement the correct treatment of taking global observables from; the dataset in the BatchMode. This PR also includes a commit with some code modernization of the `RooAbsPdf`, and it also removes the low-level unit test for the RooFitDriver, which is not needed anymore now that the RooFitDriver is tested extensively by every unit tests that makes use of the new BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11416
https://github.com/root-project/root/pull/11416:733,Testability,test,tested,733,"The new BatchMode is adjusted such that the `testGlobalObservables` unit; test is passing when always using the BatchMode for fitting. This also; means the following adjustments had to be made:. 1. Implement resetting of data for the RooFitDriver. 2. Always clone the created constraint term, also in the new; BatchMode, because the new BatchMode mutates the computation graph; and it's not good if the original model is changed. 3. Implement the correct treatment of taking global observables from; the dataset in the BatchMode. This PR also includes a commit with some code modernization of the `RooAbsPdf`, and it also removes the low-level unit test for the RooFitDriver, which is not needed anymore now that the RooFitDriver is tested extensively by every unit tests that makes use of the new BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11416
https://github.com/root-project/root/pull/11416:766,Testability,test,tests,766,"The new BatchMode is adjusted such that the `testGlobalObservables` unit; test is passing when always using the BatchMode for fitting. This also; means the following adjustments had to be made:. 1. Implement resetting of data for the RooFitDriver. 2. Always clone the created constraint term, also in the new; BatchMode, because the new BatchMode mutates the computation graph; and it's not good if the original model is changed. 3. Implement the correct treatment of taking global observables from; the dataset in the BatchMode. This PR also includes a commit with some code modernization of the `RooAbsPdf`, and it also removes the low-level unit test for the RooFitDriver, which is not needed anymore now that the RooFitDriver is tested extensively by every unit tests that makes use of the new BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11416
https://github.com/root-project/root/issues/11418:153,Modifiability,variab,variable,153,"In the documentation of the [RooAbsPdf ](https://root.cern.ch/doc/master/classRooAbsPdf.html) class, methods related to dataset generation have a CmdArg variable named ""NumEvent"" which specifies the number of events to generate. However, the correct variable name should be ""NumEvents"" instead (i.e. `RooFit::NumEvent` does not exist but `RooFit::NumEvents` does).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11418
https://github.com/root-project/root/issues/11418:250,Modifiability,variab,variable,250,"In the documentation of the [RooAbsPdf ](https://root.cern.ch/doc/master/classRooAbsPdf.html) class, methods related to dataset generation have a CmdArg variable named ""NumEvent"" which specifies the number of events to generate. However, the correct variable name should be ""NumEvents"" instead (i.e. `RooFit::NumEvent` does not exist but `RooFit::NumEvents` does).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11418
https://github.com/root-project/root/pull/11419:146,Security,access,accessing,146,"When plotting a pdf in 2 separate ranges, 2 RooCurve objects are created with the same name . When using pullHist or whatever function of RooPlot accessing the RooCurve by its name, only the last of the two curve can be retrieved. Since RooPlot has no way to access its list of containing objects, apart than given the name, only the RooCurve with the upper range will be used. Code to reproduce the problem:. ```Python; import ROOT as r. ws = r.RooWorkspace(""workspace""); x = ws.factory(""x[-10, 10]""); x.setRange(""lo"", -10, -5); x.setRange(""hi"", 5, 10); pdf = ws.factory(""Gaussian::pdf(x, m1[0], s1[3])""); ds = pdf.generate(r.RooArgSet(x), 1000). fr = x.frame(); ds.plotOn(fr); pdf.plotOn(fr, r.RooFit.Range(""lo,hi"")); pull = fr.pullHist(). c = r.TCanvas(); fr2 = x.frame(); fr2.addPlotable(pull, ""P""); fr2.Draw(); ```. This commit suggests to fix the issue by also considering the ranges of all the other curves that have the same name as the first curve that was found. Closes #9741.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11419
https://github.com/root-project/root/pull/11419:259,Security,access,access,259,"When plotting a pdf in 2 separate ranges, 2 RooCurve objects are created with the same name . When using pullHist or whatever function of RooPlot accessing the RooCurve by its name, only the last of the two curve can be retrieved. Since RooPlot has no way to access its list of containing objects, apart than given the name, only the RooCurve with the upper range will be used. Code to reproduce the problem:. ```Python; import ROOT as r. ws = r.RooWorkspace(""workspace""); x = ws.factory(""x[-10, 10]""); x.setRange(""lo"", -10, -5); x.setRange(""hi"", 5, 10); pdf = ws.factory(""Gaussian::pdf(x, m1[0], s1[3])""); ds = pdf.generate(r.RooArgSet(x), 1000). fr = x.frame(); ds.plotOn(fr); pdf.plotOn(fr, r.RooFit.Range(""lo,hi"")); pull = fr.pullHist(). c = r.TCanvas(); fr2 = x.frame(); fr2.addPlotable(pull, ""P""); fr2.Draw(); ```. This commit suggests to fix the issue by also considering the ranges of all the other curves that have the same name as the first curve that was found. Closes #9741.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11419
https://github.com/root-project/root/pull/11420:124,Safety,Avoid,Avoid,124,"* Explain better which functions should be used to get category indices. * Make documentation of RooChi2Var less verbose. * Avoid duplicate deprecation notice in `RooDataHist::set()`: the `RooDataHist::set()` function is marked deprecated in the header file with `R__SUGGEST_ALTERNATIVE`. This already adds a deprecation notice to the doxygen, so it is not necessary to add a `\deprecated` tag manually to the documentation. https://root.cern.ch/doc/v626/classRooDataHist.html#a3053f0f1a21eb39bb2508be61e30d8b9. * Replace `NumEvent()` with the correct `NumEvents()` in the RooAbsPdf documentation. Closes #11418.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11420
https://github.com/root-project/root/issues/11421:2949,Availability,error,errors,2949,"code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). mu = ROOT.RooRealVar(""mu"", """", 0.5, 0, 1); gx = ROOT.RooGaussian(""gx"", """", x, mu, ROOT.RooFit.RooConst(0.2)); gy = ROOT.RooGaussian(""gy"", """", y, mu, ROOT.RooFit.RooConst(0.2)); g = ROOT.RooProdPdf(""g"", '', [gx, gy]). # works; condg1 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = (gy, {y})); condg2 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, y)); condg3 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, {y})). data = g.generate({x,y}, NumEvents = 10000). # often segfaults, valgrind reports problems; g.fitTo(data, Minos = {mu}, PrintLevel = -1). # both of these work; g.fitTo(data, ROOT.RooFit.Minos({mu}), PrintLevel = -1); g.fitTo(data, Minos = ROOT.RooArgSet(mu), PrintLevel = -1). # works; constr = ROOT.RooGaussian('c', '', mu, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.01)); g.fitTo(data, ExternalConstraints = {constr}, PrintLevel = -1). # works; gWithConstr = ROOT.RooProdPdf('gWC', '', [g, constr]); gWithConstr.fitTo(data, Constrain = {mu}, PrintLevel = -1). frame = x.frame(). # works; g.plotOn(frame, Components = {g}). # segfault/valgrind errors; g.plotOn(frame, Slice = {y}). # segfault/valgrind errors; g.plotOn(frame, Project = {y}). fitres = g.fitTo(data, PrintLevel = -1, Save = True); g.plotOn(frame, VisualizeError = (fitres, {x})). # valgrind reports problems; g.paramOn(frame, Parameters = {mu}). # segfault; datax = data.reduce(SelectVars = {x}); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.07 from LCG dev4; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11421
https://github.com/root-project/root/issues/11421:3007,Availability,error,errors,3007,"code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). mu = ROOT.RooRealVar(""mu"", """", 0.5, 0, 1); gx = ROOT.RooGaussian(""gx"", """", x, mu, ROOT.RooFit.RooConst(0.2)); gy = ROOT.RooGaussian(""gy"", """", y, mu, ROOT.RooFit.RooConst(0.2)); g = ROOT.RooProdPdf(""g"", '', [gx, gy]). # works; condg1 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = (gy, {y})); condg2 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, y)); condg3 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, {y})). data = g.generate({x,y}, NumEvents = 10000). # often segfaults, valgrind reports problems; g.fitTo(data, Minos = {mu}, PrintLevel = -1). # both of these work; g.fitTo(data, ROOT.RooFit.Minos({mu}), PrintLevel = -1); g.fitTo(data, Minos = ROOT.RooArgSet(mu), PrintLevel = -1). # works; constr = ROOT.RooGaussian('c', '', mu, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.01)); g.fitTo(data, ExternalConstraints = {constr}, PrintLevel = -1). # works; gWithConstr = ROOT.RooProdPdf('gWC', '', [g, constr]); gWithConstr.fitTo(data, Constrain = {mu}, PrintLevel = -1). frame = x.frame(). # works; g.plotOn(frame, Components = {g}). # segfault/valgrind errors; g.plotOn(frame, Slice = {y}). # segfault/valgrind errors; g.plotOn(frame, Project = {y}). fitres = g.fitTo(data, PrintLevel = -1, Save = True); g.plotOn(frame, VisualizeError = (fitres, {x})). # valgrind reports problems; g.paramOn(frame, Parameters = {mu}). # segfault; datax = data.reduce(SelectVars = {x}); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.07 from LCG dev4; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11421
https://github.com/root-project/root/issues/11421:3384,Availability,down,download,3384,"code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). mu = ROOT.RooRealVar(""mu"", """", 0.5, 0, 1); gx = ROOT.RooGaussian(""gx"", """", x, mu, ROOT.RooFit.RooConst(0.2)); gy = ROOT.RooGaussian(""gy"", """", y, mu, ROOT.RooFit.RooConst(0.2)); g = ROOT.RooProdPdf(""g"", '', [gx, gy]). # works; condg1 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = (gy, {y})); condg2 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, y)); condg3 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, {y})). data = g.generate({x,y}, NumEvents = 10000). # often segfaults, valgrind reports problems; g.fitTo(data, Minos = {mu}, PrintLevel = -1). # both of these work; g.fitTo(data, ROOT.RooFit.Minos({mu}), PrintLevel = -1); g.fitTo(data, Minos = ROOT.RooArgSet(mu), PrintLevel = -1). # works; constr = ROOT.RooGaussian('c', '', mu, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.01)); g.fitTo(data, ExternalConstraints = {constr}, PrintLevel = -1). # works; gWithConstr = ROOT.RooProdPdf('gWC', '', [g, constr]); gWithConstr.fitTo(data, Constrain = {mu}, PrintLevel = -1). frame = x.frame(). # works; g.plotOn(frame, Components = {g}). # segfault/valgrind errors; g.plotOn(frame, Slice = {y}). # segfault/valgrind errors; g.plotOn(frame, Project = {y}). fitres = g.fitTo(data, PrintLevel = -1, Save = True); g.plotOn(frame, VisualizeError = (fitres, {x})). # valgrind reports problems; g.paramOn(frame, Parameters = {mu}). # segfault; datax = data.reduce(SelectVars = {x}); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.07 from LCG dev4; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11421
https://github.com/root-project/root/issues/11421:3366,Deployability,install,install,3366,"code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). mu = ROOT.RooRealVar(""mu"", """", 0.5, 0, 1); gx = ROOT.RooGaussian(""gx"", """", x, mu, ROOT.RooFit.RooConst(0.2)); gy = ROOT.RooGaussian(""gy"", """", y, mu, ROOT.RooFit.RooConst(0.2)); g = ROOT.RooProdPdf(""g"", '', [gx, gy]). # works; condg1 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = (gy, {y})); condg2 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, y)); condg3 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, {y})). data = g.generate({x,y}, NumEvents = 10000). # often segfaults, valgrind reports problems; g.fitTo(data, Minos = {mu}, PrintLevel = -1). # both of these work; g.fitTo(data, ROOT.RooFit.Minos({mu}), PrintLevel = -1); g.fitTo(data, Minos = ROOT.RooArgSet(mu), PrintLevel = -1). # works; constr = ROOT.RooGaussian('c', '', mu, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.01)); g.fitTo(data, ExternalConstraints = {constr}, PrintLevel = -1). # works; gWithConstr = ROOT.RooProdPdf('gWC', '', [g, constr]); gWithConstr.fitTo(data, Constrain = {mu}, PrintLevel = -1). frame = x.frame(). # works; g.plotOn(frame, Components = {g}). # segfault/valgrind errors; g.plotOn(frame, Slice = {y}). # segfault/valgrind errors; g.plotOn(frame, Project = {y}). fitres = g.fitTo(data, PrintLevel = -1, Save = True); g.plotOn(frame, VisualizeError = (fitres, {x})). # valgrind reports problems; g.paramOn(frame, Parameters = {mu}). # segfault; datax = data.reduce(SelectVars = {x}); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.07 from LCG dev4; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11421
https://github.com/root-project/root/issues/11421:3241,Energy Efficiency,reduce,reduce,3241,"code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). mu = ROOT.RooRealVar(""mu"", """", 0.5, 0, 1); gx = ROOT.RooGaussian(""gx"", """", x, mu, ROOT.RooFit.RooConst(0.2)); gy = ROOT.RooGaussian(""gy"", """", y, mu, ROOT.RooFit.RooConst(0.2)); g = ROOT.RooProdPdf(""g"", '', [gx, gy]). # works; condg1 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = (gy, {y})); condg2 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, y)); condg3 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, {y})). data = g.generate({x,y}, NumEvents = 10000). # often segfaults, valgrind reports problems; g.fitTo(data, Minos = {mu}, PrintLevel = -1). # both of these work; g.fitTo(data, ROOT.RooFit.Minos({mu}), PrintLevel = -1); g.fitTo(data, Minos = ROOT.RooArgSet(mu), PrintLevel = -1). # works; constr = ROOT.RooGaussian('c', '', mu, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.01)); g.fitTo(data, ExternalConstraints = {constr}, PrintLevel = -1). # works; gWithConstr = ROOT.RooProdPdf('gWC', '', [g, constr]); gWithConstr.fitTo(data, Constrain = {mu}, PrintLevel = -1). frame = x.frame(). # works; g.plotOn(frame, Components = {g}). # segfault/valgrind errors; g.plotOn(frame, Slice = {y}). # segfault/valgrind errors; g.plotOn(frame, Project = {y}). fitres = g.fitTo(data, PrintLevel = -1, Save = True); g.plotOn(frame, VisualizeError = (fitres, {x})). # valgrind reports problems; g.paramOn(frame, Parameters = {mu}). # segfault; datax = data.reduce(SelectVars = {x}); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.07 from LCG dev4; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11421
https://github.com/root-project/root/issues/11421:631,Integrability,depend,depends,631,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When using the pythonization of _some_ `RooCmdArgs` together with the `RooArgSet` pythonization, the created set is dropped too early.; It does not always cause a segfault (depends on the `RooCmdArg`) but it is visible in `valgrind`.; I've seen this happen with `Minos`, `Slice`, `Project`, `Parameters` and SelectVar, while I tested `Conditional`, `Constrain`, `ExternalConstraints`, `Components` and `VisualizeError` and they show no issue (not even in `valgrind`). ; I _think_ the difference is wether the `RooArgSet` is stored as a `RooArgSet` in the `RooCmdArg` (works fine) or as a `TObject*` (dropped early).; I've also noticed that this happens only when you combine the two pythonizations, e.g. both; ```Python; model.fitTo(data, Minos = ROOT.RooArgSet(parameter)); model.fitTo(data, ROOT.RooFit.Minos({parameter})); ```; work fine, only; ```Python; model.fitTo(data, Minos = {parameter}); ```; is affected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No use after free. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). mu = ROOT.RooRealVar(""mu"", """", 0.5, 0, 1); gx = ROOT.RooGaussian(""gx"", """", x, mu, ROOT.RooFit.RooConst(0.2)); gy = ROOT.RooGaussi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11421
https://github.com/root-project/root/issues/11421:785,Testability,test,tested,785,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When using the pythonization of _some_ `RooCmdArgs` together with the `RooArgSet` pythonization, the created set is dropped too early.; It does not always cause a segfault (depends on the `RooCmdArg`) but it is visible in `valgrind`.; I've seen this happen with `Minos`, `Slice`, `Project`, `Parameters` and SelectVar, while I tested `Conditional`, `Constrain`, `ExternalConstraints`, `Components` and `VisualizeError` and they show no issue (not even in `valgrind`). ; I _think_ the difference is wether the `RooArgSet` is stored as a `RooArgSet` in the `RooCmdArg` (works fine) or as a `TObject*` (dropped early).; I've also noticed that this happens only when you combine the two pythonizations, e.g. both; ```Python; model.fitTo(data, Minos = ROOT.RooArgSet(parameter)); model.fitTo(data, ROOT.RooFit.Minos({parameter})); ```; work fine, only; ```Python; model.fitTo(data, Minos = {parameter}); ```; is affected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No use after free. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). mu = ROOT.RooRealVar(""mu"", """", 0.5, 0, 1); gx = ROOT.RooGaussian(""gx"", """", x, mu, ROOT.RooFit.RooConst(0.2)); gy = ROOT.RooGaussi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11421
https://github.com/root-project/root/issues/11421:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When using the pythonization of _some_ `RooCmdArgs` together with the `RooArgSet` pythonization, the created set is dropped too early.; It does not always cause a segfault (depends on the `RooCmdArg`) but it is visible in `valgrind`.; I've seen this happen with `Minos`, `Slice`, `Project`, `Parameters` and SelectVar, while I tested `Conditional`, `Constrain`, `ExternalConstraints`, `Components` and `VisualizeError` and they show no issue (not even in `valgrind`). ; I _think_ the difference is wether the `RooArgSet` is stored as a `RooArgSet` in the `RooCmdArg` (works fine) or as a `TObject*` (dropped early).; I've also noticed that this happens only when you combine the two pythonizations, e.g. both; ```Python; model.fitTo(data, Minos = ROOT.RooArgSet(parameter)); model.fitTo(data, ROOT.RooFit.Minos({parameter})); ```; work fine, only; ```Python; model.fitTo(data, Minos = {parameter}); ```; is affected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No use after free. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). mu = ROOT.RooRealVar(""mu"", """", 0.5, 0, 1); gx = ROOT.RooGaussian(""gx"", """", x, mu, ROOT.RooFit.RooConst(0.2)); gy = ROOT.RooGaussi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11421
https://github.com/root-project/root/issues/11421:1406,Usability,clear,clear,1406," of what the wrong behavior is.; -->; When using the pythonization of _some_ `RooCmdArgs` together with the `RooArgSet` pythonization, the created set is dropped too early.; It does not always cause a segfault (depends on the `RooCmdArg`) but it is visible in `valgrind`.; I've seen this happen with `Minos`, `Slice`, `Project`, `Parameters` and SelectVar, while I tested `Conditional`, `Constrain`, `ExternalConstraints`, `Components` and `VisualizeError` and they show no issue (not even in `valgrind`). ; I _think_ the difference is wether the `RooArgSet` is stored as a `RooArgSet` in the `RooCmdArg` (works fine) or as a `TObject*` (dropped early).; I've also noticed that this happens only when you combine the two pythonizations, e.g. both; ```Python; model.fitTo(data, Minos = ROOT.RooArgSet(parameter)); model.fitTo(data, ROOT.RooFit.Minos({parameter})); ```; work fine, only; ```Python; model.fitTo(data, Minos = {parameter}); ```; is affected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No use after free. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). mu = ROOT.RooRealVar(""mu"", """", 0.5, 0, 1); gx = ROOT.RooGaussian(""gx"", """", x, mu, ROOT.RooFit.RooConst(0.2)); gy = ROOT.RooGaussian(""gy"", """", y, mu, ROOT.RooFit.RooConst(0.2)); g = ROOT.RooProdPdf(""g"", '', [gx, gy]). # works; condg1 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = (gy, {y})); condg2 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, y)); condg3 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, {y})). data = g.generate({x,y}, NumEvents = 10000). # often segfaults, valgrind reports problems; g.fitTo(data, Minos = {mu}, Prin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11421
https://github.com/root-project/root/pull/11422:20,Availability,failure,failure,20,This should fix the failure observed when RDF is not built that one needs to not include the RTensor pythonizations,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11422
https://github.com/root-project/root/pull/11423:94,Performance,load,loaded,94,"Before we do name lookups, we must ensure any later redeclaration of the DeclContext has been loaded, since they may add names to the result of this lookup.; Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11423
https://github.com/root-project/root/pull/11425:234,Safety,detect,detecting,234,"As reported in issue https://github.com/root-project/root/issues/11421, the fact that in the RooFit command; arguments, the `RooArgSet`s are often stored by pointer is still a; problem. I attempted before to circumvent the problem by detecting; potential lifetime issues by having a dedicated `RooArgSet&&` overloads; that resulted in RooCmdArgs that owned copied of the RooArgSets. However, this still didn't work for the case where the Python collection; pythonizations are used in PyROOT, because there the `RooArgSet &&`; overloads are not hit. I realized now that the `RooCmdArg` class already has the slots to store; RooArgSets by value, which was alredy used by a few RooFit command; arguments. When these `set` slots are used, there are no ownership; issues. This commit suggests to always use these `set` slots for RooArgSets.; This entailed changing the functions that make use of the command; arguments, migrating from `defineObject` to `defineSet`. All the hacks to get owned copies of the RooArgSets and `RooArgSet&&`; overloads can now be removed. Now that the slot indices for the sets was changed in many RooFit; command arguments, there is only the caveat that command arguments are; not backwards compatible anymore. However, this should not be any; problem because `RooCmdArgs` are not supposed to be written to files; anyway. To explicitely disallow this and prevent any silet backwards; compatibility issue, the class version of the RooCmdArg was set to zero; to disable IO. A first commit in this PR fixes also an other issue where the wrong command argument name was used in the RooMCStudy. Closes https://github.com/root-project/root/issues/11421.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11425
https://github.com/root-project/root/pull/11427:108,Deployability,patch,patches,108,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; 2. https://github.com/root-project/root/pull/11417; 3. https://github.com/root-project/root/pull/11419; 4. https://github.com/root-project/root/pull/10842",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11427
https://github.com/root-project/root/issues/11430:7034,Availability,fault,fault,7034,"/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/cai/root/root-6.26.06/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:470: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:33018: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2. I've tried some times, the build never success, here I come for help. reeBSD# gcc --version ; gcc (FreeBSD Ports Collection) 11.3.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. the compiler I installed:; FreeBSD# c++ --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; FreeBSD# clang --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; -->. ### Expected behav",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11430
https://github.com/root-project/root/issues/11430:7118,Availability,Error,Error,7118,"anvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/cai/root/root-6.26.06/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:470: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:33018: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2. I've tried some times, the build never success, here I come for help. reeBSD# gcc --version ; gcc (FreeBSD Ports Collection) 11.3.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. the compiler I installed:; FreeBSD# c++ --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; FreeBSD# clang --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11430
https://github.com/root-project/root/issues/11430:7203,Availability,Error,Error,7203,"BarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/cai/root/root-6.26.06/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:470: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:33018: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2. I've tried some times, the build never success, here I come for help. reeBSD# gcc --version ; gcc (FreeBSD Ports Collection) 11.3.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. the compiler I installed:; FreeBSD# c++ --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; FreeBSD# clang --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11430
https://github.com/root-project/root/issues/11430:7243,Availability,Error,Error,7243,"BarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/cai/root/root-6.26.06/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:470: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:33018: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2. I've tried some times, the build never success, here I come for help. reeBSD# gcc --version ; gcc (FreeBSD Ports Collection) 11.3.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. the compiler I installed:; FreeBSD# c++ --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; FreeBSD# clang --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11430
https://github.com/root-project/root/issues/11430:1711,Deployability,install,install,1711,"/local/include/xrootd/private; -- libraries: /usr/local/lib/libXrdUtils.so;/usr/local/lib/libXrdClient.so;/usr/local/lib/libXrdCl.so; CMake Warning (dev) at /usr/local/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:438 (message):; The package name passed to `find_package_handle_standard_args` (PkgConfig); does not match the name of the calling package (Arrow). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; /usr/local/share/cmake/Modules/FindPkgConfig.cmake:99 (find_package_handle_standard_args); cmake/modules/FindArrow.cmake:39 (include); cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1040 (find_package); CMakeLists.txt:245 (include); This warning is for project developers. Use -Wno-dev to suppress it. I just ignored it.; after command: cmake --build . --target install, everything goes well and then it stopped with following message. [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x00000000044aaf65 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x00000000044a91b6 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x00000000044ab726 SignalHandler(int) Signals.cpp:0:0; #3 0x0000000804b32580 (/lib/libthr.so.3+0x1a580); #4 0x0000000804b31b3f (/lib/libthr.so.3+0x19b3f); #5 0x00007ffffffff2d3 ([vdso]+0x2d3); #6 0x0000000804e8ee84 strlen (/lib/libc.so.7+0x157e84); #7 0x000000000161c729 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<std::nullptr_t>(char const*) rootcling_stage1.cxx:0:0; #8 0x000000000161c673 GetEtcDir() rootcling_stage1.cxx:0:0; #9 0x0000000001686202 RootClingMain(int, char**, bool) (/home/cai/root/bld/core/rootcling_stage1/src/rootcling_stage1+0x1686202); #10 0x0000000001697075 ROOT_rootcling_Driver (/home/cai/root/bld/core/rootcling_stage1/src/rootcling_stage1+0x1697075); Stack dump:; 0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11430
https://github.com/root-project/root/issues/11430:7602,Deployability,install,installed,7602,"numsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/cai/root/root-6.26.06/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:470: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:33018: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2. I've tried some times, the build never success, here I come for help. reeBSD# gcc --version ; gcc (FreeBSD Ports Collection) 11.3.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. the compiler I installed:; FreeBSD# c++ --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; FreeBSD# clang --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version 6.26.06; 2. Operating system FreeBSD13.1; 3. How you obtained ROOT: built it from source.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11430
https://github.com/root-project/root/issues/11430:7795,Deployability,Install,InstalledDir,7795,"numsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/cai/root/root-6.26.06/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:470: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:33018: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2. I've tried some times, the build never success, here I come for help. reeBSD# gcc --version ; gcc (FreeBSD Ports Collection) 11.3.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. the compiler I installed:; FreeBSD# c++ --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; FreeBSD# clang --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version 6.26.06; 2. Operating system FreeBSD13.1; 3. How you obtained ROOT: built it from source.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11430
https://github.com/root-project/root/issues/11430:8002,Deployability,Install,InstalledDir,8002,"numsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/cai/root/root-6.26.06/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:470: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:33018: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2. I've tried some times, the build never success, here I come for help. reeBSD# gcc --version ; gcc (FreeBSD Ports Collection) 11.3.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. the compiler I installed:; FreeBSD# c++ --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; FreeBSD# clang --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version 6.26.06; 2. Operating system FreeBSD13.1; 3. How you obtained ROOT: built it from source.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11430
https://github.com/root-project/root/issues/11430:672,Integrability,wrap,wrapper,672,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; I was build ROOT from source on a FreeBSD VM.; after command: cmake -Dall=ON -Dcuda=OFF -Dalien=OFF -Doracle=OFF ../root-6.26.06,; I got a warning:; Looking for XROOTD; -- Found Xrootd version num: 4.10.0 (setting -DROOTXRDVERS=400100000); -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- include_dirs: /usr/local/include/xrootd;/usr/local/include/xrootd/private; -- libraries: /usr/local/lib/libXrdUtils.so;/usr/local/lib/libXrdClient.so;/usr/local/lib/libXrdCl.so; CMake Warning (dev) at /usr/local/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:438 (message):; The package name passed to `find_package_handle_standard_args` (PkgConfig); does not match the name of the calling package (Arrow). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; /usr/local/share/cmake/Modules/FindPkgConfig.cmake:99 (find_package_handle_standard_args); cmake/modules/FindArrow.cmake:39 (include); cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1040 (find_package); CMakeLists.txt:245 (include); This warning is for project developers. Use -Wno-dev to suppress it. I just ignored it.; after command: cmake --build . --target install, everything goes well and then it stopped with following message. [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x00000000044aaf65 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x00000000044a91b6 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x0000000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11430
https://github.com/root-project/root/issues/11430:971,Integrability,message,message,971,"Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; I was build ROOT from source on a FreeBSD VM.; after command: cmake -Dall=ON -Dcuda=OFF -Dalien=OFF -Doracle=OFF ../root-6.26.06,; I got a warning:; Looking for XROOTD; -- Found Xrootd version num: 4.10.0 (setting -DROOTXRDVERS=400100000); -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- include_dirs: /usr/local/include/xrootd;/usr/local/include/xrootd/private; -- libraries: /usr/local/lib/libXrdUtils.so;/usr/local/lib/libXrdClient.so;/usr/local/lib/libXrdCl.so; CMake Warning (dev) at /usr/local/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:438 (message):; The package name passed to `find_package_handle_standard_args` (PkgConfig); does not match the name of the calling package (Arrow). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; /usr/local/share/cmake/Modules/FindPkgConfig.cmake:99 (find_package_handle_standard_args); cmake/modules/FindArrow.cmake:39 (include); cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1040 (find_package); CMakeLists.txt:245 (include); This warning is for project developers. Use -Wno-dev to suppress it. I just ignored it.; after command: cmake --build . --target install, everything goes well and then it stopped with following message. [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x00000000044aaf65 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x00000000044a91b6 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x00000000044ab726 SignalHandler(int) Signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11430
https://github.com/root-project/root/issues/11430:1776,Integrability,message,message,1776,"/local/include/xrootd/private; -- libraries: /usr/local/lib/libXrdUtils.so;/usr/local/lib/libXrdClient.so;/usr/local/lib/libXrdCl.so; CMake Warning (dev) at /usr/local/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:438 (message):; The package name passed to `find_package_handle_standard_args` (PkgConfig); does not match the name of the calling package (Arrow). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; /usr/local/share/cmake/Modules/FindPkgConfig.cmake:99 (find_package_handle_standard_args); cmake/modules/FindArrow.cmake:39 (include); cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1040 (find_package); CMakeLists.txt:245 (include); This warning is for project developers. Use -Wno-dev to suppress it. I just ignored it.; after command: cmake --build . --target install, everything goes well and then it stopped with following message. [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x00000000044aaf65 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x00000000044a91b6 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x00000000044ab726 SignalHandler(int) Signals.cpp:0:0; #3 0x0000000804b32580 (/lib/libthr.so.3+0x1a580); #4 0x0000000804b31b3f (/lib/libthr.so.3+0x19b3f); #5 0x00007ffffffff2d3 ([vdso]+0x2d3); #6 0x0000000804e8ee84 strlen (/lib/libc.so.7+0x157e84); #7 0x000000000161c729 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<std::nullptr_t>(char const*) rootcling_stage1.cxx:0:0; #8 0x000000000161c673 GetEtcDir() rootcling_stage1.cxx:0:0; #9 0x0000000001686202 RootClingMain(int, char**, bool) (/home/cai/root/bld/core/rootcling_stage1/src/rootcling_stage1+0x1686202); #10 0x0000000001697075 ROOT_rootcling_Driver (/home/cai/root/bld/core/rootcling_stage1/src/rootcling_stage1+0x1697075); Stack dump:; 0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11430
https://github.com/root-project/root/issues/11430:4338,Integrability,Message,MessageTypes,4338,r/lib/clang/13.0.0/include -compilerI/usr/include -compilerI/usr/lib/clang/13.0.0/include -compilerI/usr/include -I/home/cai/root/bld/include -I/usr/local/include -I/usr/local/include -I/home/cai/root/bld/ginclude -I/home/cai/root/root-6.26.06/core/base/inc -I/home/cai/root/root-6.26.06/core/foundation/inc -I/home/cai/root/root-6.26.06/core/cont/inc -I/home/cai/root/root-6.26.06/core/gui/inc -I/home/cai/root/root-6.26.06/core/meta/inc -I/home/cai/root/root-6.26.06/core/clib/inc -I/home/cai/root/root-6.26.06/core/rint/inc -I/home/cai/root/root-6.26.06/core/zip/inc -I/home/cai/root/root-6.26.06/core/thread/inc -I/home/cai/root/root-6.26.06/core/textinput/inc -I/home/cai/root/root-6.26.06/core/clingutils/inc -I/home/cai/root/root-6.26.06/core/base/v7/inc -I/home/cai/root/root-6.26.06/core/foundation/v7/inc -I/home/cai/root/root-6.26.06/core/unix/inc -I/usr/include ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11430
https://github.com/root-project/root/issues/11430:1192,Modifiability,variab,variables,1192,"h/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; I was build ROOT from source on a FreeBSD VM.; after command: cmake -Dall=ON -Dcuda=OFF -Dalien=OFF -Doracle=OFF ../root-6.26.06,; I got a warning:; Looking for XROOTD; -- Found Xrootd version num: 4.10.0 (setting -DROOTXRDVERS=400100000); -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- include_dirs: /usr/local/include/xrootd;/usr/local/include/xrootd/private; -- libraries: /usr/local/lib/libXrdUtils.so;/usr/local/lib/libXrdClient.so;/usr/local/lib/libXrdCl.so; CMake Warning (dev) at /usr/local/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:438 (message):; The package name passed to `find_package_handle_standard_args` (PkgConfig); does not match the name of the calling package (Arrow). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; /usr/local/share/cmake/Modules/FindPkgConfig.cmake:99 (find_package_handle_standard_args); cmake/modules/FindArrow.cmake:39 (include); cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1040 (find_package); CMakeLists.txt:245 (include); This warning is for project developers. Use -Wno-dev to suppress it. I just ignored it.; after command: cmake --build . --target install, everything goes well and then it stopped with following message. [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x00000000044aaf65 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x00000000044a91b6 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x00000000044ab726 SignalHandler(int) Signals.cpp:0:0; #3 0x0000000804b32580 (/lib/libthr.so.3+0x1a580); #4 0x0000000804b31b3f (/lib/libthr.so.3+0x19b3f); #5 0x00007fff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11430
https://github.com/root-project/root/issues/11430:8062,Usability,clear,clear,8062,"numsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/cai/root/root-6.26.06/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:470: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:33018: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2. I've tried some times, the build never success, here I come for help. reeBSD# gcc --version ; gcc (FreeBSD Ports Collection) 11.3.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. the compiler I installed:; FreeBSD# c++ --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; FreeBSD# clang --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version 6.26.06; 2. Operating system FreeBSD13.1; 3. How you obtained ROOT: built it from source.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11430
https://github.com/root-project/root/issues/11431:52,Deployability,Install,Installing,52,"- [x] Checked for duplicates. ### Describe the bug; Installing ROOT with a path for `CMAKE_INSTALL_PYTHONDIR` different than the one for `CMAKE_INSTALL_LIBDIR` leads to problems trying to use the Python modules provided by ROOT, such as the example that follows. ```; $ rootbrowse; Traceback (most recent call last):; File ""/usr/local/lib/python3.10/dist-packages/cppyy/__init__.py"", line 60, in <module>; importlib.import_module(libcppyy_mod_name); File ""/usr/lib/python3.10/importlib/__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1050, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 1027, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 1006, in _find_and_load_unlocked; File ""<frozen importlib._bootstrap>"", line 674, in _load_unlocked; File ""<frozen importlib._bootstrap>"", line 571, in module_from_spec; File ""<frozen importlib._bootstrap_external>"", line 1176, in create_module; File ""<frozen importlib._bootstrap>"", line 241, in _call_with_frames_removed; ImportError: libcppyy_backend3_10.so.6.26: cannot open shared object file: No such file or directory. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/usr/local/bin/rootbrowse"", line 10, in <module>; import cmdLineUtils; File ""/usr/local/lib/python3.10/dist-packages/cmdLineUtils.py"", line 82, in <module>; import ROOT; File ""/usr/local/lib/python3.10/dist-packages/ROOT/__init__.py"", line 22, in <module>; import cppyy; File ""/usr/local/lib/python3.10/dist-packages/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_10. Please check that ROOT has been built for Python 3.10; ```. A check with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x0000000000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11431
https://github.com/root-project/root/issues/11431:1845,Deployability,install,installed,1845," _load_unlocked; File ""<frozen importlib._bootstrap>"", line 571, in module_from_spec; File ""<frozen importlib._bootstrap_external>"", line 1176, in create_module; File ""<frozen importlib._bootstrap>"", line 241, in _call_with_frames_removed; ImportError: libcppyy_backend3_10.so.6.26: cannot open shared object file: No such file or directory. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/usr/local/bin/rootbrowse"", line 10, in <module>; import cmdLineUtils; File ""/usr/local/lib/python3.10/dist-packages/cmdLineUtils.py"", line 82, in <module>; import ROOT; File ""/usr/local/lib/python3.10/dist-packages/ROOT/__init__.py"", line 22, in <module>; import cppyy; File ""/usr/local/lib/python3.10/dist-packages/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_10. Please check that ROOT has been built for Python 3.10; ```. A check with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. ```; $ readelf -a /usr/local/lib/python3.10/dist-packages/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. As you can see above, the libraries installed to `CMAKE_INSTALL_PYTHONDIR` have the same runpath as the ones installed to `CMAKE_INSTALL_LIBDIR`, which shouldn't be the case if the two are different directories. ### Expected behavior; The libraries installed to `CMAKE_INSTALL_PYTHONDIR` should have the runpath set to the correct relative location of `CMAKE_INSTALL_LIBDIR` (`$ORIGIN/../../../lib/root` in the previous example). ### To Reproduce; 1. Configure the build with `CMAKE_INSTALL_PYTHONDIR` different from `CMAKE_INSTALL_LIBDIR` and with rpath enabled.; 2. Compile and install as usual.; 3. Tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11431
https://github.com/root-project/root/issues/11431:2282,Deployability,install,installed,2282," import cmdLineUtils; File ""/usr/local/lib/python3.10/dist-packages/cmdLineUtils.py"", line 82, in <module>; import ROOT; File ""/usr/local/lib/python3.10/dist-packages/ROOT/__init__.py"", line 22, in <module>; import cppyy; File ""/usr/local/lib/python3.10/dist-packages/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_10. Please check that ROOT has been built for Python 3.10; ```. A check with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. ```; $ readelf -a /usr/local/lib/python3.10/dist-packages/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. As you can see above, the libraries installed to `CMAKE_INSTALL_PYTHONDIR` have the same runpath as the ones installed to `CMAKE_INSTALL_LIBDIR`, which shouldn't be the case if the two are different directories. ### Expected behavior; The libraries installed to `CMAKE_INSTALL_PYTHONDIR` should have the runpath set to the correct relative location of `CMAKE_INSTALL_LIBDIR` (`$ORIGIN/../../../lib/root` in the previous example). ### To Reproduce; 1. Configure the build with `CMAKE_INSTALL_PYTHONDIR` different from `CMAKE_INSTALL_LIBDIR` and with rpath enabled.; 2. Compile and install as usual.; 3. Try to use the python modules installed by ROOT, such as by running `rootbrowse`. ### Setup; - ROOT version 6.26/06; - Ubuntu 22.04 running on WSL2; - ROOT installed from source with the build config command `CUDACXX=/usr/local/cuda-11.7/bin/nvcc cmake -C config.cmake .. -DCMAKE_CUDA_ARCHITECTURES='86' -Dgnuinstall=ON -Dcuda=ON -Dcudnn=ON -Dtmva-gpu=ON -Dsoversion=ON -Dfortran=ON -DPYTHON_EXECUTABLE=/usr/bin/python -Drpath=ON`, where the file `config.cmake` contains; ```; set(CMAKE_INSTALL_PYTHONDI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11431
https://github.com/root-project/root/issues/11431:2355,Deployability,install,installed,2355," import cmdLineUtils; File ""/usr/local/lib/python3.10/dist-packages/cmdLineUtils.py"", line 82, in <module>; import ROOT; File ""/usr/local/lib/python3.10/dist-packages/ROOT/__init__.py"", line 22, in <module>; import cppyy; File ""/usr/local/lib/python3.10/dist-packages/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_10. Please check that ROOT has been built for Python 3.10; ```. A check with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. ```; $ readelf -a /usr/local/lib/python3.10/dist-packages/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. As you can see above, the libraries installed to `CMAKE_INSTALL_PYTHONDIR` have the same runpath as the ones installed to `CMAKE_INSTALL_LIBDIR`, which shouldn't be the case if the two are different directories. ### Expected behavior; The libraries installed to `CMAKE_INSTALL_PYTHONDIR` should have the runpath set to the correct relative location of `CMAKE_INSTALL_LIBDIR` (`$ORIGIN/../../../lib/root` in the previous example). ### To Reproduce; 1. Configure the build with `CMAKE_INSTALL_PYTHONDIR` different from `CMAKE_INSTALL_LIBDIR` and with rpath enabled.; 2. Compile and install as usual.; 3. Try to use the python modules installed by ROOT, such as by running `rootbrowse`. ### Setup; - ROOT version 6.26/06; - Ubuntu 22.04 running on WSL2; - ROOT installed from source with the build config command `CUDACXX=/usr/local/cuda-11.7/bin/nvcc cmake -C config.cmake .. -DCMAKE_CUDA_ARCHITECTURES='86' -Dgnuinstall=ON -Dcuda=ON -Dcudnn=ON -Dtmva-gpu=ON -Dsoversion=ON -Dfortran=ON -DPYTHON_EXECUTABLE=/usr/bin/python -Drpath=ON`, where the file `config.cmake` contains; ```; set(CMAKE_INSTALL_PYTHONDI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11431
https://github.com/root-project/root/issues/11431:2495,Deployability,install,installed,2495,", in <module>; import cppyy; File ""/usr/local/lib/python3.10/dist-packages/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_10. Please check that ROOT has been built for Python 3.10; ```. A check with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. ```; $ readelf -a /usr/local/lib/python3.10/dist-packages/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. As you can see above, the libraries installed to `CMAKE_INSTALL_PYTHONDIR` have the same runpath as the ones installed to `CMAKE_INSTALL_LIBDIR`, which shouldn't be the case if the two are different directories. ### Expected behavior; The libraries installed to `CMAKE_INSTALL_PYTHONDIR` should have the runpath set to the correct relative location of `CMAKE_INSTALL_LIBDIR` (`$ORIGIN/../../../lib/root` in the previous example). ### To Reproduce; 1. Configure the build with `CMAKE_INSTALL_PYTHONDIR` different from `CMAKE_INSTALL_LIBDIR` and with rpath enabled.; 2. Compile and install as usual.; 3. Try to use the python modules installed by ROOT, such as by running `rootbrowse`. ### Setup; - ROOT version 6.26/06; - Ubuntu 22.04 running on WSL2; - ROOT installed from source with the build config command `CUDACXX=/usr/local/cuda-11.7/bin/nvcc cmake -C config.cmake .. -DCMAKE_CUDA_ARCHITECTURES='86' -Dgnuinstall=ON -Dcuda=ON -Dcudnn=ON -Dtmva-gpu=ON -Dsoversion=ON -Dfortran=ON -DPYTHON_EXECUTABLE=/usr/bin/python -Drpath=ON`, where the file `config.cmake` contains; ```; set(CMAKE_INSTALL_PYTHONDIR ""lib/python3.10/dist-packages"" CACHE PATH ""python libraries and modules (same as LIBDIR)""); set(CMAKE_INSTALL_SYSCONFDIR ""/etc/root"" CACHE PATH ""read-only single-machine data (etc/root)""); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11431
https://github.com/root-project/root/issues/11431:2826,Deployability,install,install,2826,"ck with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. ```; $ readelf -a /usr/local/lib/python3.10/dist-packages/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. As you can see above, the libraries installed to `CMAKE_INSTALL_PYTHONDIR` have the same runpath as the ones installed to `CMAKE_INSTALL_LIBDIR`, which shouldn't be the case if the two are different directories. ### Expected behavior; The libraries installed to `CMAKE_INSTALL_PYTHONDIR` should have the runpath set to the correct relative location of `CMAKE_INSTALL_LIBDIR` (`$ORIGIN/../../../lib/root` in the previous example). ### To Reproduce; 1. Configure the build with `CMAKE_INSTALL_PYTHONDIR` different from `CMAKE_INSTALL_LIBDIR` and with rpath enabled.; 2. Compile and install as usual.; 3. Try to use the python modules installed by ROOT, such as by running `rootbrowse`. ### Setup; - ROOT version 6.26/06; - Ubuntu 22.04 running on WSL2; - ROOT installed from source with the build config command `CUDACXX=/usr/local/cuda-11.7/bin/nvcc cmake -C config.cmake .. -DCMAKE_CUDA_ARCHITECTURES='86' -Dgnuinstall=ON -Dcuda=ON -Dcudnn=ON -Dtmva-gpu=ON -Dsoversion=ON -Dfortran=ON -DPYTHON_EXECUTABLE=/usr/bin/python -Drpath=ON`, where the file `config.cmake` contains; ```; set(CMAKE_INSTALL_PYTHONDIR ""lib/python3.10/dist-packages"" CACHE PATH ""python libraries and modules (same as LIBDIR)""); set(CMAKE_INSTALL_SYSCONFDIR ""/etc/root"" CACHE PATH ""read-only single-machine data (etc/root)""); ```. ### Additional context; A temporary workaround while this issue is not resolved is to manually modify the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR`, e.g. using `chrpath` or [`patchelf`](https://github.com/NixOS/patchelf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11431
https://github.com/root-project/root/issues/11431:2878,Deployability,install,installed,2878,"ck with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. ```; $ readelf -a /usr/local/lib/python3.10/dist-packages/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. As you can see above, the libraries installed to `CMAKE_INSTALL_PYTHONDIR` have the same runpath as the ones installed to `CMAKE_INSTALL_LIBDIR`, which shouldn't be the case if the two are different directories. ### Expected behavior; The libraries installed to `CMAKE_INSTALL_PYTHONDIR` should have the runpath set to the correct relative location of `CMAKE_INSTALL_LIBDIR` (`$ORIGIN/../../../lib/root` in the previous example). ### To Reproduce; 1. Configure the build with `CMAKE_INSTALL_PYTHONDIR` different from `CMAKE_INSTALL_LIBDIR` and with rpath enabled.; 2. Compile and install as usual.; 3. Try to use the python modules installed by ROOT, such as by running `rootbrowse`. ### Setup; - ROOT version 6.26/06; - Ubuntu 22.04 running on WSL2; - ROOT installed from source with the build config command `CUDACXX=/usr/local/cuda-11.7/bin/nvcc cmake -C config.cmake .. -DCMAKE_CUDA_ARCHITECTURES='86' -Dgnuinstall=ON -Dcuda=ON -Dcudnn=ON -Dtmva-gpu=ON -Dsoversion=ON -Dfortran=ON -DPYTHON_EXECUTABLE=/usr/bin/python -Drpath=ON`, where the file `config.cmake` contains; ```; set(CMAKE_INSTALL_PYTHONDIR ""lib/python3.10/dist-packages"" CACHE PATH ""python libraries and modules (same as LIBDIR)""); set(CMAKE_INSTALL_SYSCONFDIR ""/etc/root"" CACHE PATH ""read-only single-machine data (etc/root)""); ```. ### Additional context; A temporary workaround while this issue is not resolved is to manually modify the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR`, e.g. using `chrpath` or [`patchelf`](https://github.com/NixOS/patchelf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11431
https://github.com/root-project/root/issues/11431:3004,Deployability,install,installed,3004,"ck with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. ```; $ readelf -a /usr/local/lib/python3.10/dist-packages/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. As you can see above, the libraries installed to `CMAKE_INSTALL_PYTHONDIR` have the same runpath as the ones installed to `CMAKE_INSTALL_LIBDIR`, which shouldn't be the case if the two are different directories. ### Expected behavior; The libraries installed to `CMAKE_INSTALL_PYTHONDIR` should have the runpath set to the correct relative location of `CMAKE_INSTALL_LIBDIR` (`$ORIGIN/../../../lib/root` in the previous example). ### To Reproduce; 1. Configure the build with `CMAKE_INSTALL_PYTHONDIR` different from `CMAKE_INSTALL_LIBDIR` and with rpath enabled.; 2. Compile and install as usual.; 3. Try to use the python modules installed by ROOT, such as by running `rootbrowse`. ### Setup; - ROOT version 6.26/06; - Ubuntu 22.04 running on WSL2; - ROOT installed from source with the build config command `CUDACXX=/usr/local/cuda-11.7/bin/nvcc cmake -C config.cmake .. -DCMAKE_CUDA_ARCHITECTURES='86' -Dgnuinstall=ON -Dcuda=ON -Dcudnn=ON -Dtmva-gpu=ON -Dsoversion=ON -Dfortran=ON -DPYTHON_EXECUTABLE=/usr/bin/python -Drpath=ON`, where the file `config.cmake` contains; ```; set(CMAKE_INSTALL_PYTHONDIR ""lib/python3.10/dist-packages"" CACHE PATH ""python libraries and modules (same as LIBDIR)""); set(CMAKE_INSTALL_SYSCONFDIR ""/etc/root"" CACHE PATH ""read-only single-machine data (etc/root)""); ```. ### Additional context; A temporary workaround while this issue is not resolved is to manually modify the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR`, e.g. using `chrpath` or [`patchelf`](https://github.com/NixOS/patchelf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11431
https://github.com/root-project/root/issues/11431:3678,Deployability,install,installed,3678,"ck with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. ```; $ readelf -a /usr/local/lib/python3.10/dist-packages/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. As you can see above, the libraries installed to `CMAKE_INSTALL_PYTHONDIR` have the same runpath as the ones installed to `CMAKE_INSTALL_LIBDIR`, which shouldn't be the case if the two are different directories. ### Expected behavior; The libraries installed to `CMAKE_INSTALL_PYTHONDIR` should have the runpath set to the correct relative location of `CMAKE_INSTALL_LIBDIR` (`$ORIGIN/../../../lib/root` in the previous example). ### To Reproduce; 1. Configure the build with `CMAKE_INSTALL_PYTHONDIR` different from `CMAKE_INSTALL_LIBDIR` and with rpath enabled.; 2. Compile and install as usual.; 3. Try to use the python modules installed by ROOT, such as by running `rootbrowse`. ### Setup; - ROOT version 6.26/06; - Ubuntu 22.04 running on WSL2; - ROOT installed from source with the build config command `CUDACXX=/usr/local/cuda-11.7/bin/nvcc cmake -C config.cmake .. -DCMAKE_CUDA_ARCHITECTURES='86' -Dgnuinstall=ON -Dcuda=ON -Dcudnn=ON -Dtmva-gpu=ON -Dsoversion=ON -Dfortran=ON -DPYTHON_EXECUTABLE=/usr/bin/python -Drpath=ON`, where the file `config.cmake` contains; ```; set(CMAKE_INSTALL_PYTHONDIR ""lib/python3.10/dist-packages"" CACHE PATH ""python libraries and modules (same as LIBDIR)""); set(CMAKE_INSTALL_SYSCONFDIR ""/etc/root"" CACHE PATH ""read-only single-machine data (etc/root)""); ```. ### Additional context; A temporary workaround while this issue is not resolved is to manually modify the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR`, e.g. using `chrpath` or [`patchelf`](https://github.com/NixOS/patchelf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11431
https://github.com/root-project/root/issues/11431:3744,Deployability,patch,patchelf,3744,"ck with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. ```; $ readelf -a /usr/local/lib/python3.10/dist-packages/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. As you can see above, the libraries installed to `CMAKE_INSTALL_PYTHONDIR` have the same runpath as the ones installed to `CMAKE_INSTALL_LIBDIR`, which shouldn't be the case if the two are different directories. ### Expected behavior; The libraries installed to `CMAKE_INSTALL_PYTHONDIR` should have the runpath set to the correct relative location of `CMAKE_INSTALL_LIBDIR` (`$ORIGIN/../../../lib/root` in the previous example). ### To Reproduce; 1. Configure the build with `CMAKE_INSTALL_PYTHONDIR` different from `CMAKE_INSTALL_LIBDIR` and with rpath enabled.; 2. Compile and install as usual.; 3. Try to use the python modules installed by ROOT, such as by running `rootbrowse`. ### Setup; - ROOT version 6.26/06; - Ubuntu 22.04 running on WSL2; - ROOT installed from source with the build config command `CUDACXX=/usr/local/cuda-11.7/bin/nvcc cmake -C config.cmake .. -DCMAKE_CUDA_ARCHITECTURES='86' -Dgnuinstall=ON -Dcuda=ON -Dcudnn=ON -Dtmva-gpu=ON -Dsoversion=ON -Dfortran=ON -DPYTHON_EXECUTABLE=/usr/bin/python -Drpath=ON`, where the file `config.cmake` contains; ```; set(CMAKE_INSTALL_PYTHONDIR ""lib/python3.10/dist-packages"" CACHE PATH ""python libraries and modules (same as LIBDIR)""); set(CMAKE_INSTALL_SYSCONFDIR ""/etc/root"" CACHE PATH ""read-only single-machine data (etc/root)""); ```. ### Additional context; A temporary workaround while this issue is not resolved is to manually modify the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR`, e.g. using `chrpath` or [`patchelf`](https://github.com/NixOS/patchelf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11431
https://github.com/root-project/root/issues/11431:3780,Deployability,patch,patchelf,3780,"ck with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. ```; $ readelf -a /usr/local/lib/python3.10/dist-packages/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. As you can see above, the libraries installed to `CMAKE_INSTALL_PYTHONDIR` have the same runpath as the ones installed to `CMAKE_INSTALL_LIBDIR`, which shouldn't be the case if the two are different directories. ### Expected behavior; The libraries installed to `CMAKE_INSTALL_PYTHONDIR` should have the runpath set to the correct relative location of `CMAKE_INSTALL_LIBDIR` (`$ORIGIN/../../../lib/root` in the previous example). ### To Reproduce; 1. Configure the build with `CMAKE_INSTALL_PYTHONDIR` different from `CMAKE_INSTALL_LIBDIR` and with rpath enabled.; 2. Compile and install as usual.; 3. Try to use the python modules installed by ROOT, such as by running `rootbrowse`. ### Setup; - ROOT version 6.26/06; - Ubuntu 22.04 running on WSL2; - ROOT installed from source with the build config command `CUDACXX=/usr/local/cuda-11.7/bin/nvcc cmake -C config.cmake .. -DCMAKE_CUDA_ARCHITECTURES='86' -Dgnuinstall=ON -Dcuda=ON -Dcudnn=ON -Dtmva-gpu=ON -Dsoversion=ON -Dfortran=ON -DPYTHON_EXECUTABLE=/usr/bin/python -Drpath=ON`, where the file `config.cmake` contains; ```; set(CMAKE_INSTALL_PYTHONDIR ""lib/python3.10/dist-packages"" CACHE PATH ""python libraries and modules (same as LIBDIR)""); set(CMAKE_INSTALL_SYSCONFDIR ""/etc/root"" CACHE PATH ""read-only single-machine data (etc/root)""); ```. ### Additional context; A temporary workaround while this issue is not resolved is to manually modify the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR`, e.g. using `chrpath` or [`patchelf`](https://github.com/NixOS/patchelf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11431
https://github.com/root-project/root/issues/11431:2697,Modifiability,Config,Configure,2697,"been built for Python 3.10; ```. A check with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. ```; $ readelf -a /usr/local/lib/python3.10/dist-packages/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. As you can see above, the libraries installed to `CMAKE_INSTALL_PYTHONDIR` have the same runpath as the ones installed to `CMAKE_INSTALL_LIBDIR`, which shouldn't be the case if the two are different directories. ### Expected behavior; The libraries installed to `CMAKE_INSTALL_PYTHONDIR` should have the runpath set to the correct relative location of `CMAKE_INSTALL_LIBDIR` (`$ORIGIN/../../../lib/root` in the previous example). ### To Reproduce; 1. Configure the build with `CMAKE_INSTALL_PYTHONDIR` different from `CMAKE_INSTALL_LIBDIR` and with rpath enabled.; 2. Compile and install as usual.; 3. Try to use the python modules installed by ROOT, such as by running `rootbrowse`. ### Setup; - ROOT version 6.26/06; - Ubuntu 22.04 running on WSL2; - ROOT installed from source with the build config command `CUDACXX=/usr/local/cuda-11.7/bin/nvcc cmake -C config.cmake .. -DCMAKE_CUDA_ARCHITECTURES='86' -Dgnuinstall=ON -Dcuda=ON -Dcudnn=ON -Dtmva-gpu=ON -Dsoversion=ON -Dfortran=ON -DPYTHON_EXECUTABLE=/usr/bin/python -Drpath=ON`, where the file `config.cmake` contains; ```; set(CMAKE_INSTALL_PYTHONDIR ""lib/python3.10/dist-packages"" CACHE PATH ""python libraries and modules (same as LIBDIR)""); set(CMAKE_INSTALL_SYSCONFDIR ""/etc/root"" CACHE PATH ""read-only single-machine data (etc/root)""); ```. ### Additional context; A temporary workaround while this issue is not resolved is to manually modify the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR`, e.g. using `chrpath` or [`patchelf`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11431
https://github.com/root-project/root/issues/11431:3041,Modifiability,config,config,3041,"ck with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. ```; $ readelf -a /usr/local/lib/python3.10/dist-packages/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. As you can see above, the libraries installed to `CMAKE_INSTALL_PYTHONDIR` have the same runpath as the ones installed to `CMAKE_INSTALL_LIBDIR`, which shouldn't be the case if the two are different directories. ### Expected behavior; The libraries installed to `CMAKE_INSTALL_PYTHONDIR` should have the runpath set to the correct relative location of `CMAKE_INSTALL_LIBDIR` (`$ORIGIN/../../../lib/root` in the previous example). ### To Reproduce; 1. Configure the build with `CMAKE_INSTALL_PYTHONDIR` different from `CMAKE_INSTALL_LIBDIR` and with rpath enabled.; 2. Compile and install as usual.; 3. Try to use the python modules installed by ROOT, such as by running `rootbrowse`. ### Setup; - ROOT version 6.26/06; - Ubuntu 22.04 running on WSL2; - ROOT installed from source with the build config command `CUDACXX=/usr/local/cuda-11.7/bin/nvcc cmake -C config.cmake .. -DCMAKE_CUDA_ARCHITECTURES='86' -Dgnuinstall=ON -Dcuda=ON -Dcudnn=ON -Dtmva-gpu=ON -Dsoversion=ON -Dfortran=ON -DPYTHON_EXECUTABLE=/usr/bin/python -Drpath=ON`, where the file `config.cmake` contains; ```; set(CMAKE_INSTALL_PYTHONDIR ""lib/python3.10/dist-packages"" CACHE PATH ""python libraries and modules (same as LIBDIR)""); set(CMAKE_INSTALL_SYSCONFDIR ""/etc/root"" CACHE PATH ""read-only single-machine data (etc/root)""); ```. ### Additional context; A temporary workaround while this issue is not resolved is to manually modify the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR`, e.g. using `chrpath` or [`patchelf`](https://github.com/NixOS/patchelf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11431
https://github.com/root-project/root/issues/11431:3104,Modifiability,config,config,3104,"ck with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. ```; $ readelf -a /usr/local/lib/python3.10/dist-packages/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. As you can see above, the libraries installed to `CMAKE_INSTALL_PYTHONDIR` have the same runpath as the ones installed to `CMAKE_INSTALL_LIBDIR`, which shouldn't be the case if the two are different directories. ### Expected behavior; The libraries installed to `CMAKE_INSTALL_PYTHONDIR` should have the runpath set to the correct relative location of `CMAKE_INSTALL_LIBDIR` (`$ORIGIN/../../../lib/root` in the previous example). ### To Reproduce; 1. Configure the build with `CMAKE_INSTALL_PYTHONDIR` different from `CMAKE_INSTALL_LIBDIR` and with rpath enabled.; 2. Compile and install as usual.; 3. Try to use the python modules installed by ROOT, such as by running `rootbrowse`. ### Setup; - ROOT version 6.26/06; - Ubuntu 22.04 running on WSL2; - ROOT installed from source with the build config command `CUDACXX=/usr/local/cuda-11.7/bin/nvcc cmake -C config.cmake .. -DCMAKE_CUDA_ARCHITECTURES='86' -Dgnuinstall=ON -Dcuda=ON -Dcudnn=ON -Dtmva-gpu=ON -Dsoversion=ON -Dfortran=ON -DPYTHON_EXECUTABLE=/usr/bin/python -Drpath=ON`, where the file `config.cmake` contains; ```; set(CMAKE_INSTALL_PYTHONDIR ""lib/python3.10/dist-packages"" CACHE PATH ""python libraries and modules (same as LIBDIR)""); set(CMAKE_INSTALL_SYSCONFDIR ""/etc/root"" CACHE PATH ""read-only single-machine data (etc/root)""); ```. ### Additional context; A temporary workaround while this issue is not resolved is to manually modify the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR`, e.g. using `chrpath` or [`patchelf`](https://github.com/NixOS/patchelf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11431
https://github.com/root-project/root/issues/11431:3296,Modifiability,config,config,3296,"ck with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. ```; $ readelf -a /usr/local/lib/python3.10/dist-packages/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. As you can see above, the libraries installed to `CMAKE_INSTALL_PYTHONDIR` have the same runpath as the ones installed to `CMAKE_INSTALL_LIBDIR`, which shouldn't be the case if the two are different directories. ### Expected behavior; The libraries installed to `CMAKE_INSTALL_PYTHONDIR` should have the runpath set to the correct relative location of `CMAKE_INSTALL_LIBDIR` (`$ORIGIN/../../../lib/root` in the previous example). ### To Reproduce; 1. Configure the build with `CMAKE_INSTALL_PYTHONDIR` different from `CMAKE_INSTALL_LIBDIR` and with rpath enabled.; 2. Compile and install as usual.; 3. Try to use the python modules installed by ROOT, such as by running `rootbrowse`. ### Setup; - ROOT version 6.26/06; - Ubuntu 22.04 running on WSL2; - ROOT installed from source with the build config command `CUDACXX=/usr/local/cuda-11.7/bin/nvcc cmake -C config.cmake .. -DCMAKE_CUDA_ARCHITECTURES='86' -Dgnuinstall=ON -Dcuda=ON -Dcudnn=ON -Dtmva-gpu=ON -Dsoversion=ON -Dfortran=ON -DPYTHON_EXECUTABLE=/usr/bin/python -Drpath=ON`, where the file `config.cmake` contains; ```; set(CMAKE_INSTALL_PYTHONDIR ""lib/python3.10/dist-packages"" CACHE PATH ""python libraries and modules (same as LIBDIR)""); set(CMAKE_INSTALL_SYSCONFDIR ""/etc/root"" CACHE PATH ""read-only single-machine data (etc/root)""); ```. ### Additional context; A temporary workaround while this issue is not resolved is to manually modify the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR`, e.g. using `chrpath` or [`patchelf`](https://github.com/NixOS/patchelf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11431
https://github.com/root-project/root/issues/11431:3384,Performance,CACHE,CACHE,3384,"ck with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. ```; $ readelf -a /usr/local/lib/python3.10/dist-packages/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. As you can see above, the libraries installed to `CMAKE_INSTALL_PYTHONDIR` have the same runpath as the ones installed to `CMAKE_INSTALL_LIBDIR`, which shouldn't be the case if the two are different directories. ### Expected behavior; The libraries installed to `CMAKE_INSTALL_PYTHONDIR` should have the runpath set to the correct relative location of `CMAKE_INSTALL_LIBDIR` (`$ORIGIN/../../../lib/root` in the previous example). ### To Reproduce; 1. Configure the build with `CMAKE_INSTALL_PYTHONDIR` different from `CMAKE_INSTALL_LIBDIR` and with rpath enabled.; 2. Compile and install as usual.; 3. Try to use the python modules installed by ROOT, such as by running `rootbrowse`. ### Setup; - ROOT version 6.26/06; - Ubuntu 22.04 running on WSL2; - ROOT installed from source with the build config command `CUDACXX=/usr/local/cuda-11.7/bin/nvcc cmake -C config.cmake .. -DCMAKE_CUDA_ARCHITECTURES='86' -Dgnuinstall=ON -Dcuda=ON -Dcudnn=ON -Dtmva-gpu=ON -Dsoversion=ON -Dfortran=ON -DPYTHON_EXECUTABLE=/usr/bin/python -Drpath=ON`, where the file `config.cmake` contains; ```; set(CMAKE_INSTALL_PYTHONDIR ""lib/python3.10/dist-packages"" CACHE PATH ""python libraries and modules (same as LIBDIR)""); set(CMAKE_INSTALL_SYSCONFDIR ""/etc/root"" CACHE PATH ""read-only single-machine data (etc/root)""); ```. ### Additional context; A temporary workaround while this issue is not resolved is to manually modify the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR`, e.g. using `chrpath` or [`patchelf`](https://github.com/NixOS/patchelf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11431
https://github.com/root-project/root/issues/11431:3486,Performance,CACHE,CACHE,3486,"ck with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. ```; $ readelf -a /usr/local/lib/python3.10/dist-packages/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. As you can see above, the libraries installed to `CMAKE_INSTALL_PYTHONDIR` have the same runpath as the ones installed to `CMAKE_INSTALL_LIBDIR`, which shouldn't be the case if the two are different directories. ### Expected behavior; The libraries installed to `CMAKE_INSTALL_PYTHONDIR` should have the runpath set to the correct relative location of `CMAKE_INSTALL_LIBDIR` (`$ORIGIN/../../../lib/root` in the previous example). ### To Reproduce; 1. Configure the build with `CMAKE_INSTALL_PYTHONDIR` different from `CMAKE_INSTALL_LIBDIR` and with rpath enabled.; 2. Compile and install as usual.; 3. Try to use the python modules installed by ROOT, such as by running `rootbrowse`. ### Setup; - ROOT version 6.26/06; - Ubuntu 22.04 running on WSL2; - ROOT installed from source with the build config command `CUDACXX=/usr/local/cuda-11.7/bin/nvcc cmake -C config.cmake .. -DCMAKE_CUDA_ARCHITECTURES='86' -Dgnuinstall=ON -Dcuda=ON -Dcudnn=ON -Dtmva-gpu=ON -Dsoversion=ON -Dfortran=ON -DPYTHON_EXECUTABLE=/usr/bin/python -Drpath=ON`, where the file `config.cmake` contains; ```; set(CMAKE_INSTALL_PYTHONDIR ""lib/python3.10/dist-packages"" CACHE PATH ""python libraries and modules (same as LIBDIR)""); set(CMAKE_INSTALL_SYSCONFDIR ""/etc/root"" CACHE PATH ""read-only single-machine data (etc/root)""); ```. ### Additional context; A temporary workaround while this issue is not resolved is to manually modify the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR`, e.g. using `chrpath` or [`patchelf`](https://github.com/NixOS/patchelf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11431
https://github.com/root-project/root/pull/11432:258,Deployability,update,updated,258,"ld: warning: -undefined dynamic_lookup may not work with chained fixups. Rely on explicit linking, and only specify -undefined dynamic_lookup where really needed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11432
https://github.com/root-project/root/pull/11432:228,Testability,test,tested,228,"ld: warning: -undefined dynamic_lookup may not work with chained fixups. Rely on explicit linking, and only specify -undefined dynamic_lookup where really needed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11432
https://github.com/root-project/root/pull/11433:229,Availability,error,error,229,"Fixing compiler warning:; ```; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx: In member function ‘virtual void TProofDrawHist::SlaveBegin(TTree*)’:; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:783:51: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~^~~~~~~~~~~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:789:30: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 789 | PDB(kDraw,1) Info(""SlaveBegin"", ""original object '%s' not found""; | ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 790 | "" or it is not a histogram"", objname);; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:784:60: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 784 | TH1 *hist = dynamic_cast<TH1*> (fInput->FindObject(objname));; | ~~~~~~~~~~~~~~~~~~^~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:783:38: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~~~~~~~~~~~^~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11433
https://github.com/root-project/root/pull/11433:696,Availability,error,error,696,"Fixing compiler warning:; ```; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx: In member function ‘virtual void TProofDrawHist::SlaveBegin(TTree*)’:; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:783:51: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~^~~~~~~~~~~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:789:30: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 789 | PDB(kDraw,1) Info(""SlaveBegin"", ""original object '%s' not found""; | ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 790 | "" or it is not a histogram"", objname);; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:784:60: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 784 | TH1 *hist = dynamic_cast<TH1*> (fInput->FindObject(objname));; | ~~~~~~~~~~~~~~~~~~^~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:783:38: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~~~~~~~~~~~^~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11433
https://github.com/root-project/root/pull/11433:1276,Availability,error,error,1276,"SlaveBegin(TTree*)’:; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:783:51: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~^~~~~~~~~~~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:789:30: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 789 | PDB(kDraw,1) Info(""SlaveBegin"", ""original object '%s' not found""; | ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 790 | "" or it is not a histogram"", objname);; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:784:60: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 784 | TH1 *hist = dynamic_cast<TH1*> (fInput->FindObject(objname));; | ~~~~~~~~~~~~~~~~~~^~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:783:38: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~~~~~~~~~~~^~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11433
https://github.com/root-project/root/pull/11433:1742,Availability,error,error,1742,"SlaveBegin(TTree*)’:; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:783:51: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~^~~~~~~~~~~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:789:30: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 789 | PDB(kDraw,1) Info(""SlaveBegin"", ""original object '%s' not found""; | ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 790 | "" or it is not a histogram"", objname);; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:784:60: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 784 | TH1 *hist = dynamic_cast<TH1*> (fInput->FindObject(objname));; | ~~~~~~~~~~~~~~~~~~^~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:783:38: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~~~~~~~~~~~^~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11433
https://github.com/root-project/root/pull/11435:29,Deployability,update,update,29,"Before this commit, when you update the code in; `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. This commit fixes this situation by introducing intermediate CMake targets, resulting in the Python sources in the build and install directories being updated when changed in the source directory. Closes #11233.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11435
https://github.com/root-project/root/pull/11435:216,Deployability,update,updated,216,"Before this commit, when you update the code in; `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. This commit fixes this situation by introducing intermediate CMake targets, resulting in the Python sources in the build and install directories being updated when changed in the source directory. Closes #11233.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11435
https://github.com/root-project/root/pull/11435:309,Deployability,install,installing,309,"Before this commit, when you update the code in; `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. This commit fixes this situation by introducing intermediate CMake targets, resulting in the Python sources in the build and install directories being updated when changed in the source directory. Closes #11233.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11435
https://github.com/root-project/root/pull/11435:456,Deployability,install,install,456,"Before this commit, when you update the code in; `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. This commit fixes this situation by introducing intermediate CMake targets, resulting in the Python sources in the build and install directories being updated when changed in the source directory. Closes #11233.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11435
https://github.com/root-project/root/pull/11435:482,Deployability,update,updated,482,"Before this commit, when you update the code in; `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. This commit fixes this situation by introducing intermediate CMake targets, resulting in the Python sources in the build and install directories being updated when changed in the source directory. Closes #11233.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11435
https://github.com/root-project/root/issues/11437:592,Availability,error,error,592,"## The problem. In the [bindings/pyroot/pythonizations/CMakeLists.txt](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt) file, the following code is used to compile the Python sources. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); install(CODE ""execute_process(COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source})""); install(CODE ""execute_process(COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source})""); endforeach(); ```. However, with this `execute_process` trick, there is no error code checking, so it often happens that the compilation actually fails with Python 2 because the Pythonizations use features that are only available in Python 3!. I notice this when trying to replace this ""install-to-build-directory"" trick with proper CMake targets, kind of like this:. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); add_custom_command(TARGET ${libname}; COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source}; COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source}; DEPENDS ${localruntimedir}/${py_source}; COMMENT ""Compiling ${py_source} for ${libname}""); endforeach(); ```. With `add_custom_command`, failures in compiling the Python sources causes the build to fail (as it should be I think). ## What needs to be done to fix this issue. * Have CMakes error out when Python compilation fails by using `add_custom_command`; * Make the Pythonization sources compatible with Python 2...; * ... except for the sources that should [only be used for Python 3](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt#L17). For these, the compilation should be done only with Python 3 (logic to do this needs to be added to the CMakeLists.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11437
https://github.com/root-project/root/issues/11437:737,Availability,avail,available,737,"## The problem. In the [bindings/pyroot/pythonizations/CMakeLists.txt](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt) file, the following code is used to compile the Python sources. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); install(CODE ""execute_process(COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source})""); install(CODE ""execute_process(COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source})""); endforeach(); ```. However, with this `execute_process` trick, there is no error code checking, so it often happens that the compilation actually fails with Python 2 because the Pythonizations use features that are only available in Python 3!. I notice this when trying to replace this ""install-to-build-directory"" trick with proper CMake targets, kind of like this:. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); add_custom_command(TARGET ${libname}; COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source}; COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source}; DEPENDS ${localruntimedir}/${py_source}; COMMENT ""Compiling ${py_source} for ${libname}""); endforeach(); ```. With `add_custom_command`, failures in compiling the Python sources causes the build to fail (as it should be I think). ## What needs to be done to fix this issue. * Have CMakes error out when Python compilation fails by using `add_custom_command`; * Make the Pythonization sources compatible with Python 2...; * ... except for the sources that should [only be used for Python 3](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt#L17). For these, the compilation should be done only with Python 3 (logic to do this needs to be added to the CMakeLists.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11437
https://github.com/root-project/root/issues/11437:1280,Availability,failure,failures,1280,"## The problem. In the [bindings/pyroot/pythonizations/CMakeLists.txt](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt) file, the following code is used to compile the Python sources. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); install(CODE ""execute_process(COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source})""); install(CODE ""execute_process(COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source})""); endforeach(); ```. However, with this `execute_process` trick, there is no error code checking, so it often happens that the compilation actually fails with Python 2 because the Pythonizations use features that are only available in Python 3!. I notice this when trying to replace this ""install-to-build-directory"" trick with proper CMake targets, kind of like this:. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); add_custom_command(TARGET ${libname}; COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source}; COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source}; DEPENDS ${localruntimedir}/${py_source}; COMMENT ""Compiling ${py_source} for ${libname}""); endforeach(); ```. With `add_custom_command`, failures in compiling the Python sources causes the build to fail (as it should be I think). ## What needs to be done to fix this issue. * Have CMakes error out when Python compilation fails by using `add_custom_command`; * Make the Pythonization sources compatible with Python 2...; * ... except for the sources that should [only be used for Python 3](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt#L17). For these, the compilation should be done only with Python 3 (logic to do this needs to be added to the CMakeLists.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11437
https://github.com/root-project/root/issues/11437:1431,Availability,error,error,1431,"## The problem. In the [bindings/pyroot/pythonizations/CMakeLists.txt](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt) file, the following code is used to compile the Python sources. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); install(CODE ""execute_process(COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source})""); install(CODE ""execute_process(COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source})""); endforeach(); ```. However, with this `execute_process` trick, there is no error code checking, so it often happens that the compilation actually fails with Python 2 because the Pythonizations use features that are only available in Python 3!. I notice this when trying to replace this ""install-to-build-directory"" trick with proper CMake targets, kind of like this:. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); add_custom_command(TARGET ${libname}; COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source}; COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source}; DEPENDS ${localruntimedir}/${py_source}; COMMENT ""Compiling ${py_source} for ${libname}""); endforeach(); ```. With `add_custom_command`, failures in compiling the Python sources causes the build to fail (as it should be I think). ## What needs to be done to fix this issue. * Have CMakes error out when Python compilation fails by using `add_custom_command`; * Make the Pythonization sources compatible with Python 2...; * ... except for the sources that should [only be used for Python 3](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt#L17). For these, the compilation should be done only with Python 3 (logic to do this needs to be added to the CMakeLists.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11437
https://github.com/root-project/root/issues/11437:296,Deployability,install,install,296,"## The problem. In the [bindings/pyroot/pythonizations/CMakeLists.txt](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt) file, the following code is used to compile the Python sources. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); install(CODE ""execute_process(COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source})""); install(CODE ""execute_process(COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source})""); endforeach(); ```. However, with this `execute_process` trick, there is no error code checking, so it often happens that the compilation actually fails with Python 2 because the Pythonizations use features that are only available in Python 3!. I notice this when trying to replace this ""install-to-build-directory"" trick with proper CMake targets, kind of like this:. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); add_custom_command(TARGET ${libname}; COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source}; COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source}; DEPENDS ${localruntimedir}/${py_source}; COMMENT ""Compiling ${py_source} for ${libname}""); endforeach(); ```. With `add_custom_command`, failures in compiling the Python sources causes the build to fail (as it should be I think). ## What needs to be done to fix this issue. * Have CMakes error out when Python compilation fails by using `add_custom_command`; * Make the Pythonization sources compatible with Python 2...; * ... except for the sources that should [only be used for Python 3](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt#L17). For these, the compilation should be done only with Python 3 (logic to do this needs to be added to the CMakeLists.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11437
https://github.com/root-project/root/issues/11437:405,Deployability,install,install,405,"## The problem. In the [bindings/pyroot/pythonizations/CMakeLists.txt](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt) file, the following code is used to compile the Python sources. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); install(CODE ""execute_process(COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source})""); install(CODE ""execute_process(COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source})""); endforeach(); ```. However, with this `execute_process` trick, there is no error code checking, so it often happens that the compilation actually fails with Python 2 because the Pythonizations use features that are only available in Python 3!. I notice this when trying to replace this ""install-to-build-directory"" trick with proper CMake targets, kind of like this:. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); add_custom_command(TARGET ${libname}; COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source}; COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source}; DEPENDS ${localruntimedir}/${py_source}; COMMENT ""Compiling ${py_source} for ${libname}""); endforeach(); ```. With `add_custom_command`, failures in compiling the Python sources causes the build to fail (as it should be I think). ## What needs to be done to fix this issue. * Have CMakes error out when Python compilation fails by using `add_custom_command`; * Make the Pythonization sources compatible with Python 2...; * ... except for the sources that should [only be used for Python 3](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt#L17). For these, the compilation should be done only with Python 3 (logic to do this needs to be added to the CMakeLists.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11437
https://github.com/root-project/root/issues/11437:804,Deployability,install,install-to-build-directory,804,"## The problem. In the [bindings/pyroot/pythonizations/CMakeLists.txt](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt) file, the following code is used to compile the Python sources. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); install(CODE ""execute_process(COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source})""); install(CODE ""execute_process(COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source})""); endforeach(); ```. However, with this `execute_process` trick, there is no error code checking, so it often happens that the compilation actually fails with Python 2 because the Pythonizations use features that are only available in Python 3!. I notice this when trying to replace this ""install-to-build-directory"" trick with proper CMake targets, kind of like this:. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); add_custom_command(TARGET ${libname}; COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source}; COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source}; DEPENDS ${localruntimedir}/${py_source}; COMMENT ""Compiling ${py_source} for ${libname}""); endforeach(); ```. With `add_custom_command`, failures in compiling the Python sources causes the build to fail (as it should be I think). ## What needs to be done to fix this issue. * Have CMakes error out when Python compilation fails by using `add_custom_command`; * Make the Pythonization sources compatible with Python 2...; * ... except for the sources that should [only be used for Python 3](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt#L17). For these, the compilation should be done only with Python 3 (logic to do this needs to be added to the CMakeLists.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11437
https://github.com/root-project/root/issues/11437:1143,Integrability,DEPEND,DEPENDS,1143,"## The problem. In the [bindings/pyroot/pythonizations/CMakeLists.txt](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt) file, the following code is used to compile the Python sources. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); install(CODE ""execute_process(COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source})""); install(CODE ""execute_process(COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source})""); endforeach(); ```. However, with this `execute_process` trick, there is no error code checking, so it often happens that the compilation actually fails with Python 2 because the Pythonizations use features that are only available in Python 3!. I notice this when trying to replace this ""install-to-build-directory"" trick with proper CMake targets, kind of like this:. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); add_custom_command(TARGET ${libname}; COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source}; COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source}; DEPENDS ${localruntimedir}/${py_source}; COMMENT ""Compiling ${py_source} for ${libname}""); endforeach(); ```. With `add_custom_command`, failures in compiling the Python sources causes the build to fail (as it should be I think). ## What needs to be done to fix this issue. * Have CMakes error out when Python compilation fails by using `add_custom_command`; * Make the Pythonization sources compatible with Python 2...; * ... except for the sources that should [only be used for Python 3](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt#L17). For these, the compilation should be done only with Python 3 (logic to do this needs to be added to the CMakeLists.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11437
https://github.com/root-project/root/issues/11437:1796,Testability,log,logic,1796,"## The problem. In the [bindings/pyroot/pythonizations/CMakeLists.txt](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt) file, the following code is used to compile the Python sources. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); install(CODE ""execute_process(COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source})""); install(CODE ""execute_process(COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source})""); endforeach(); ```. However, with this `execute_process` trick, there is no error code checking, so it often happens that the compilation actually fails with Python 2 because the Pythonizations use features that are only available in Python 3!. I notice this when trying to replace this ""install-to-build-directory"" trick with proper CMake targets, kind of like this:. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); add_custom_command(TARGET ${libname}; COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source}; COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source}; DEPENDS ${localruntimedir}/${py_source}; COMMENT ""Compiling ${py_source} for ${libname}""); endforeach(); ```. With `add_custom_command`, failures in compiling the Python sources causes the build to fail (as it should be I think). ## What needs to be done to fix this issue. * Have CMakes error out when Python compilation fails by using `add_custom_command`; * Make the Pythonization sources compatible with Python 2...; * ... except for the sources that should [only be used for Python 3](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt#L17). For these, the compilation should be done only with Python 3 (logic to do this needs to be added to the CMakeLists.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11437
https://github.com/root-project/root/pull/11438:1081,Modifiability,config,config,1081,"This commit contains automatic changes done by `clang-tidy`. This commit was generated more or less automatically with this Python; script that uses `clang-tidy`:. ```Python; import os; import glob; import subprocess; import tqdm. """"""; For clang-tidy to work, you have to copy the compile_commands.json from the; build directory back into the repo directory (just like in; .ci/copy_headers.sh).; """""". def get_sources(directory, extensions):. files = []. for ext in extensions:; files += glob.glob(; os.path.join(directory, ""**/*"" + ext), recursive=True; ). return files. """"""; Recursively find extensions in directory, to figure out whic hextensions; should be globbed for.; find . -type f -name '*.*' | sed 's|.*\.||' | sort -u; """"""; extensions = ["".h"", "".hpp"", "".hxx"", "".cpp"", "".cc"", "".cxx""]. """"""; Some extensions are recognized as C and not as C++ files by clang-tidy. We; need to rename them, and this dict specifies how file extensions should be; replaced.; """"""; rename_dict = {"".h"": "".hpp""}. files = get_sources(""test"", extensions). cflags = (; subprocess.check_output([""root-config"", ""--cflags""]).strip().decode(""utf-8""); ). for file in tqdm.tqdm(files):. file_renamed = file; for ext, ext_renamed in rename_dict.items():; if file.endswith(ext):; file_renamed = file.replace(ext, ext_renamed). if file_renamed != file:; os.rename(file, file_renamed). cmd = [; ""clang-tidy"",; ""-checks=modernize-use-override"",; ""--fix"",; file_renamed,; ""--"",; ] + cflags.split("" ""); subprocess.call(cmd, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL). if file_renamed != file:; os.rename(file_renamed, file). """"""; Finally, replace the ClassDef with the ClassDefOverride macros.; find test -type f -print | xargs sed -i 's/ClassDef(/ClassDefOverride(/'; ...and change back the ClassDefOverride of non-overriding base classes.; """"""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11438
https://github.com/root-project/root/pull/11438:1018,Testability,test,test,1018,"This commit contains automatic changes done by `clang-tidy`. This commit was generated more or less automatically with this Python; script that uses `clang-tidy`:. ```Python; import os; import glob; import subprocess; import tqdm. """"""; For clang-tidy to work, you have to copy the compile_commands.json from the; build directory back into the repo directory (just like in; .ci/copy_headers.sh).; """""". def get_sources(directory, extensions):. files = []. for ext in extensions:; files += glob.glob(; os.path.join(directory, ""**/*"" + ext), recursive=True; ). return files. """"""; Recursively find extensions in directory, to figure out whic hextensions; should be globbed for.; find . -type f -name '*.*' | sed 's|.*\.||' | sort -u; """"""; extensions = ["".h"", "".hpp"", "".hxx"", "".cpp"", "".cc"", "".cxx""]. """"""; Some extensions are recognized as C and not as C++ files by clang-tidy. We; need to rename them, and this dict specifies how file extensions should be; replaced.; """"""; rename_dict = {"".h"": "".hpp""}. files = get_sources(""test"", extensions). cflags = (; subprocess.check_output([""root-config"", ""--cflags""]).strip().decode(""utf-8""); ). for file in tqdm.tqdm(files):. file_renamed = file; for ext, ext_renamed in rename_dict.items():; if file.endswith(ext):; file_renamed = file.replace(ext, ext_renamed). if file_renamed != file:; os.rename(file, file_renamed). cmd = [; ""clang-tidy"",; ""-checks=modernize-use-override"",; ""--fix"",; file_renamed,; ""--"",; ] + cflags.split("" ""); subprocess.call(cmd, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL). if file_renamed != file:; os.rename(file_renamed, file). """"""; Finally, replace the ClassDef with the ClassDefOverride macros.; find test -type f -print | xargs sed -i 's/ClassDef(/ClassDefOverride(/'; ...and change back the ClassDefOverride of non-overriding base classes.; """"""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11438
https://github.com/root-project/root/pull/11438:1679,Testability,test,test,1679,"This commit contains automatic changes done by `clang-tidy`. This commit was generated more or less automatically with this Python; script that uses `clang-tidy`:. ```Python; import os; import glob; import subprocess; import tqdm. """"""; For clang-tidy to work, you have to copy the compile_commands.json from the; build directory back into the repo directory (just like in; .ci/copy_headers.sh).; """""". def get_sources(directory, extensions):. files = []. for ext in extensions:; files += glob.glob(; os.path.join(directory, ""**/*"" + ext), recursive=True; ). return files. """"""; Recursively find extensions in directory, to figure out whic hextensions; should be globbed for.; find . -type f -name '*.*' | sed 's|.*\.||' | sort -u; """"""; extensions = ["".h"", "".hpp"", "".hxx"", "".cpp"", "".cc"", "".cxx""]. """"""; Some extensions are recognized as C and not as C++ files by clang-tidy. We; need to rename them, and this dict specifies how file extensions should be; replaced.; """"""; rename_dict = {"".h"": "".hpp""}. files = get_sources(""test"", extensions). cflags = (; subprocess.check_output([""root-config"", ""--cflags""]).strip().decode(""utf-8""); ). for file in tqdm.tqdm(files):. file_renamed = file; for ext, ext_renamed in rename_dict.items():; if file.endswith(ext):; file_renamed = file.replace(ext, ext_renamed). if file_renamed != file:; os.rename(file, file_renamed). cmd = [; ""clang-tidy"",; ""-checks=modernize-use-override"",; ""--fix"",; file_renamed,; ""--"",; ] + cflags.split("" ""); subprocess.call(cmd, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL). if file_renamed != file:; os.rename(file_renamed, file). """"""; Finally, replace the ClassDef with the ClassDefOverride macros.; find test -type f -print | xargs sed -i 's/ClassDef(/ClassDefOverride(/'; ...and change back the ClassDefOverride of non-overriding base classes.; """"""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11438
https://github.com/root-project/root/pull/11439:37,Testability,test,tests,37,"The distributed RDataFrame tutorials/tests have to create cluster objects, which take up resources on the machine. This is another step towards a clearer resource usage for both tutorials and tests. Whenever a cluster object is created, it now uses RESOURCE_LOCK test property to signal that no other cluster object should be created while the previous one is still running. This PR addresses the tutorials in the root repository, a sibling PR will address the tests in roottest",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11439
https://github.com/root-project/root/pull/11439:192,Testability,test,tests,192,"The distributed RDataFrame tutorials/tests have to create cluster objects, which take up resources on the machine. This is another step towards a clearer resource usage for both tutorials and tests. Whenever a cluster object is created, it now uses RESOURCE_LOCK test property to signal that no other cluster object should be created while the previous one is still running. This PR addresses the tutorials in the root repository, a sibling PR will address the tests in roottest",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11439
https://github.com/root-project/root/pull/11439:263,Testability,test,test,263,"The distributed RDataFrame tutorials/tests have to create cluster objects, which take up resources on the machine. This is another step towards a clearer resource usage for both tutorials and tests. Whenever a cluster object is created, it now uses RESOURCE_LOCK test property to signal that no other cluster object should be created while the previous one is still running. This PR addresses the tutorials in the root repository, a sibling PR will address the tests in roottest",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11439
https://github.com/root-project/root/pull/11439:461,Testability,test,tests,461,"The distributed RDataFrame tutorials/tests have to create cluster objects, which take up resources on the machine. This is another step towards a clearer resource usage for both tutorials and tests. Whenever a cluster object is created, it now uses RESOURCE_LOCK test property to signal that no other cluster object should be created while the previous one is still running. This PR addresses the tutorials in the root repository, a sibling PR will address the tests in roottest",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11439
https://github.com/root-project/root/pull/11439:146,Usability,clear,clearer,146,"The distributed RDataFrame tutorials/tests have to create cluster objects, which take up resources on the machine. This is another step towards a clearer resource usage for both tutorials and tests. Whenever a cluster object is created, it now uses RESOURCE_LOCK test property to signal that no other cluster object should be created while the previous one is still running. This PR addresses the tutorials in the root repository, a sibling PR will address the tests in roottest",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11439
https://github.com/root-project/root/issues/11440:675,Deployability,install,install,675,"I am not sure if it is a real bug or a known issue but the following macro does not fill the histogram `hpx`:; ```; void ntuple_example() {; auto hpx = new TH1F(""hpx"", ""hpx"", 100, -1., 1.);; auto f = new TFile(""hsimple.root"");; auto tree = (TTree*)f->Get(""ntuple"");; tree->Draw(""px >> hpx"","""",""goff"");; hpx->Draw();; }; ```; To make it work it is enough to swap the histogram creation line and the TFile creation line.; So the workaround is simple but that might be confusing if people first create the histogram(s) and then attach the file(s) containing the tree(s): the histogram(s) will be empty. I see that on Mac. I see this issue until 6:20 at least (I was not able to install older versions)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11440
https://github.com/root-project/root/issues/11440:441,Usability,simpl,simple,441,"I am not sure if it is a real bug or a known issue but the following macro does not fill the histogram `hpx`:; ```; void ntuple_example() {; auto hpx = new TH1F(""hpx"", ""hpx"", 100, -1., 1.);; auto f = new TFile(""hsimple.root"");; auto tree = (TTree*)f->Get(""ntuple"");; tree->Draw(""px >> hpx"","""",""goff"");; hpx->Draw();; }; ```; To make it work it is enough to swap the histogram creation line and the TFile creation line.; So the workaround is simple but that might be confusing if people first create the histogram(s) and then attach the file(s) containing the tree(s): the histogram(s) will be empty. I see that on Mac. I see this issue until 6:20 at least (I was not able to install older versions)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11440
https://github.com/root-project/root/pull/11441:75,Safety,Detect,Detected,75,# This Pull request:. ## Changes or fixes:. Prevents some null ptr access. Detected by clang-tidy.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11441
https://github.com/root-project/root/pull/11441:67,Security,access,access,67,# This Pull request:. ## Changes or fixes:. Prevents some null ptr access. Detected by clang-tidy.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11441
https://github.com/root-project/root/pull/11443:94,Security,access,access,94,"# This Pull request:. ## Changes or fixes:. In some corner cases, there might be some nullptr access problems. This solves the warnings found by clang-tidy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11443
https://github.com/root-project/root/pull/11445:31,Deployability,update,updated,31,"The recent commit `565e9aa19a` updated the `getPropagatedError` with; some additional checks, but these checks caused segfaults in some; specifit usecases:. * where the `RooAbsReal` is a parameter in the fit result itself. * where the `RooAbsReal` is a variable unrelated to the fit result. * where the `RooAbsReal` depends only on some of the parameters in the; fit result. This commit fixes these usecases again. A unit test that checks that these usecases don't fail anymore is now; implemented in `testRooAbsReal`. This PR also adds some other new unit tests that cover recent PRs and issues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11445
https://github.com/root-project/root/pull/11445:316,Integrability,depend,depends,316,"The recent commit `565e9aa19a` updated the `getPropagatedError` with; some additional checks, but these checks caused segfaults in some; specifit usecases:. * where the `RooAbsReal` is a parameter in the fit result itself. * where the `RooAbsReal` is a variable unrelated to the fit result. * where the `RooAbsReal` depends only on some of the parameters in the; fit result. This commit fixes these usecases again. A unit test that checks that these usecases don't fail anymore is now; implemented in `testRooAbsReal`. This PR also adds some other new unit tests that cover recent PRs and issues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11445
https://github.com/root-project/root/pull/11445:253,Modifiability,variab,variable,253,"The recent commit `565e9aa19a` updated the `getPropagatedError` with; some additional checks, but these checks caused segfaults in some; specifit usecases:. * where the `RooAbsReal` is a parameter in the fit result itself. * where the `RooAbsReal` is a variable unrelated to the fit result. * where the `RooAbsReal` depends only on some of the parameters in the; fit result. This commit fixes these usecases again. A unit test that checks that these usecases don't fail anymore is now; implemented in `testRooAbsReal`. This PR also adds some other new unit tests that cover recent PRs and issues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11445
https://github.com/root-project/root/pull/11445:422,Testability,test,test,422,"The recent commit `565e9aa19a` updated the `getPropagatedError` with; some additional checks, but these checks caused segfaults in some; specifit usecases:. * where the `RooAbsReal` is a parameter in the fit result itself. * where the `RooAbsReal` is a variable unrelated to the fit result. * where the `RooAbsReal` depends only on some of the parameters in the; fit result. This commit fixes these usecases again. A unit test that checks that these usecases don't fail anymore is now; implemented in `testRooAbsReal`. This PR also adds some other new unit tests that cover recent PRs and issues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11445
https://github.com/root-project/root/pull/11445:502,Testability,test,testRooAbsReal,502,"The recent commit `565e9aa19a` updated the `getPropagatedError` with; some additional checks, but these checks caused segfaults in some; specifit usecases:. * where the `RooAbsReal` is a parameter in the fit result itself. * where the `RooAbsReal` is a variable unrelated to the fit result. * where the `RooAbsReal` depends only on some of the parameters in the; fit result. This commit fixes these usecases again. A unit test that checks that these usecases don't fail anymore is now; implemented in `testRooAbsReal`. This PR also adds some other new unit tests that cover recent PRs and issues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11445
https://github.com/root-project/root/pull/11445:557,Testability,test,tests,557,"The recent commit `565e9aa19a` updated the `getPropagatedError` with; some additional checks, but these checks caused segfaults in some; specifit usecases:. * where the `RooAbsReal` is a parameter in the fit result itself. * where the `RooAbsReal` is a variable unrelated to the fit result. * where the `RooAbsReal` depends only on some of the parameters in the; fit result. This commit fixes these usecases again. A unit test that checks that these usecases don't fail anymore is now; implemented in `testRooAbsReal`. This PR also adds some other new unit tests that cover recent PRs and issues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11445
https://github.com/root-project/root/issues/11447:116,Deployability,configurat,configuration,116,"### Describe the bug. Following up on #11396, I noticed that a NLL created from a RooSimultaneous in a multi-ranged configuration doesn't give the expected value. In https://github.com/root-project/root/pull/11445, I tried to implement a unit test that was checking exactly that, but the NLL from RooSimultaneous was not consistent with a mathematically equivalent sum of NLLs per category. It is still not clear whether the difference is only a constant factor that doesn't influence the fit result, but this is potentially a but that even has an influence on the results. I suspect that it is actually biasing the fit result, because in multi-ranged fits the NLL is computed using an integral of the top-level PDF that is created with `createIntegral`, and I'm not sure if the integral of a RooSimultaneous is well defined in that context. Please @AlkaidCheng, take note of this, because this is a potential problem for your workflow. ### Expected behavior. The NLL value from a RooSimultaneous in a multi-range configuration should be the same value as the normalized combination of individual NLLs created in the individual categories. ### To Reproduce. Comment out the final part of the `MultiRangeFitWithSplitRange` unit test in `testRooSimultaneous`. ### Setup. Arch Linux with ROOT master. ### Additional context. - The priority level of this issue can be reduced if it turns out that the difference in the NLL value is a constant that doesn't affect the fit result",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11447
https://github.com/root-project/root/issues/11447:1014,Deployability,configurat,configuration,1014,"### Describe the bug. Following up on #11396, I noticed that a NLL created from a RooSimultaneous in a multi-ranged configuration doesn't give the expected value. In https://github.com/root-project/root/pull/11445, I tried to implement a unit test that was checking exactly that, but the NLL from RooSimultaneous was not consistent with a mathematically equivalent sum of NLLs per category. It is still not clear whether the difference is only a constant factor that doesn't influence the fit result, but this is potentially a but that even has an influence on the results. I suspect that it is actually biasing the fit result, because in multi-ranged fits the NLL is computed using an integral of the top-level PDF that is created with `createIntegral`, and I'm not sure if the integral of a RooSimultaneous is well defined in that context. Please @AlkaidCheng, take note of this, because this is a potential problem for your workflow. ### Expected behavior. The NLL value from a RooSimultaneous in a multi-range configuration should be the same value as the normalized combination of individual NLLs created in the individual categories. ### To Reproduce. Comment out the final part of the `MultiRangeFitWithSplitRange` unit test in `testRooSimultaneous`. ### Setup. Arch Linux with ROOT master. ### Additional context. - The priority level of this issue can be reduced if it turns out that the difference in the NLL value is a constant that doesn't affect the fit result",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11447
https://github.com/root-project/root/issues/11447:1364,Energy Efficiency,reduce,reduced,1364,"### Describe the bug. Following up on #11396, I noticed that a NLL created from a RooSimultaneous in a multi-ranged configuration doesn't give the expected value. In https://github.com/root-project/root/pull/11445, I tried to implement a unit test that was checking exactly that, but the NLL from RooSimultaneous was not consistent with a mathematically equivalent sum of NLLs per category. It is still not clear whether the difference is only a constant factor that doesn't influence the fit result, but this is potentially a but that even has an influence on the results. I suspect that it is actually biasing the fit result, because in multi-ranged fits the NLL is computed using an integral of the top-level PDF that is created with `createIntegral`, and I'm not sure if the integral of a RooSimultaneous is well defined in that context. Please @AlkaidCheng, take note of this, because this is a potential problem for your workflow. ### Expected behavior. The NLL value from a RooSimultaneous in a multi-range configuration should be the same value as the normalized combination of individual NLLs created in the individual categories. ### To Reproduce. Comment out the final part of the `MultiRangeFitWithSplitRange` unit test in `testRooSimultaneous`. ### Setup. Arch Linux with ROOT master. ### Additional context. - The priority level of this issue can be reduced if it turns out that the difference in the NLL value is a constant that doesn't affect the fit result",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11447
https://github.com/root-project/root/issues/11447:116,Modifiability,config,configuration,116,"### Describe the bug. Following up on #11396, I noticed that a NLL created from a RooSimultaneous in a multi-ranged configuration doesn't give the expected value. In https://github.com/root-project/root/pull/11445, I tried to implement a unit test that was checking exactly that, but the NLL from RooSimultaneous was not consistent with a mathematically equivalent sum of NLLs per category. It is still not clear whether the difference is only a constant factor that doesn't influence the fit result, but this is potentially a but that even has an influence on the results. I suspect that it is actually biasing the fit result, because in multi-ranged fits the NLL is computed using an integral of the top-level PDF that is created with `createIntegral`, and I'm not sure if the integral of a RooSimultaneous is well defined in that context. Please @AlkaidCheng, take note of this, because this is a potential problem for your workflow. ### Expected behavior. The NLL value from a RooSimultaneous in a multi-range configuration should be the same value as the normalized combination of individual NLLs created in the individual categories. ### To Reproduce. Comment out the final part of the `MultiRangeFitWithSplitRange` unit test in `testRooSimultaneous`. ### Setup. Arch Linux with ROOT master. ### Additional context. - The priority level of this issue can be reduced if it turns out that the difference in the NLL value is a constant that doesn't affect the fit result",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11447
https://github.com/root-project/root/issues/11447:1014,Modifiability,config,configuration,1014,"### Describe the bug. Following up on #11396, I noticed that a NLL created from a RooSimultaneous in a multi-ranged configuration doesn't give the expected value. In https://github.com/root-project/root/pull/11445, I tried to implement a unit test that was checking exactly that, but the NLL from RooSimultaneous was not consistent with a mathematically equivalent sum of NLLs per category. It is still not clear whether the difference is only a constant factor that doesn't influence the fit result, but this is potentially a but that even has an influence on the results. I suspect that it is actually biasing the fit result, because in multi-ranged fits the NLL is computed using an integral of the top-level PDF that is created with `createIntegral`, and I'm not sure if the integral of a RooSimultaneous is well defined in that context. Please @AlkaidCheng, take note of this, because this is a potential problem for your workflow. ### Expected behavior. The NLL value from a RooSimultaneous in a multi-range configuration should be the same value as the normalized combination of individual NLLs created in the individual categories. ### To Reproduce. Comment out the final part of the `MultiRangeFitWithSplitRange` unit test in `testRooSimultaneous`. ### Setup. Arch Linux with ROOT master. ### Additional context. - The priority level of this issue can be reduced if it turns out that the difference in the NLL value is a constant that doesn't affect the fit result",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11447
https://github.com/root-project/root/issues/11447:243,Testability,test,test,243,"### Describe the bug. Following up on #11396, I noticed that a NLL created from a RooSimultaneous in a multi-ranged configuration doesn't give the expected value. In https://github.com/root-project/root/pull/11445, I tried to implement a unit test that was checking exactly that, but the NLL from RooSimultaneous was not consistent with a mathematically equivalent sum of NLLs per category. It is still not clear whether the difference is only a constant factor that doesn't influence the fit result, but this is potentially a but that even has an influence on the results. I suspect that it is actually biasing the fit result, because in multi-ranged fits the NLL is computed using an integral of the top-level PDF that is created with `createIntegral`, and I'm not sure if the integral of a RooSimultaneous is well defined in that context. Please @AlkaidCheng, take note of this, because this is a potential problem for your workflow. ### Expected behavior. The NLL value from a RooSimultaneous in a multi-range configuration should be the same value as the normalized combination of individual NLLs created in the individual categories. ### To Reproduce. Comment out the final part of the `MultiRangeFitWithSplitRange` unit test in `testRooSimultaneous`. ### Setup. Arch Linux with ROOT master. ### Additional context. - The priority level of this issue can be reduced if it turns out that the difference in the NLL value is a constant that doesn't affect the fit result",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11447
https://github.com/root-project/root/issues/11447:1227,Testability,test,test,1227,"### Describe the bug. Following up on #11396, I noticed that a NLL created from a RooSimultaneous in a multi-ranged configuration doesn't give the expected value. In https://github.com/root-project/root/pull/11445, I tried to implement a unit test that was checking exactly that, but the NLL from RooSimultaneous was not consistent with a mathematically equivalent sum of NLLs per category. It is still not clear whether the difference is only a constant factor that doesn't influence the fit result, but this is potentially a but that even has an influence on the results. I suspect that it is actually biasing the fit result, because in multi-ranged fits the NLL is computed using an integral of the top-level PDF that is created with `createIntegral`, and I'm not sure if the integral of a RooSimultaneous is well defined in that context. Please @AlkaidCheng, take note of this, because this is a potential problem for your workflow. ### Expected behavior. The NLL value from a RooSimultaneous in a multi-range configuration should be the same value as the normalized combination of individual NLLs created in the individual categories. ### To Reproduce. Comment out the final part of the `MultiRangeFitWithSplitRange` unit test in `testRooSimultaneous`. ### Setup. Arch Linux with ROOT master. ### Additional context. - The priority level of this issue can be reduced if it turns out that the difference in the NLL value is a constant that doesn't affect the fit result",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11447
https://github.com/root-project/root/issues/11447:1236,Testability,test,testRooSimultaneous,1236,"### Describe the bug. Following up on #11396, I noticed that a NLL created from a RooSimultaneous in a multi-ranged configuration doesn't give the expected value. In https://github.com/root-project/root/pull/11445, I tried to implement a unit test that was checking exactly that, but the NLL from RooSimultaneous was not consistent with a mathematically equivalent sum of NLLs per category. It is still not clear whether the difference is only a constant factor that doesn't influence the fit result, but this is potentially a but that even has an influence on the results. I suspect that it is actually biasing the fit result, because in multi-ranged fits the NLL is computed using an integral of the top-level PDF that is created with `createIntegral`, and I'm not sure if the integral of a RooSimultaneous is well defined in that context. Please @AlkaidCheng, take note of this, because this is a potential problem for your workflow. ### Expected behavior. The NLL value from a RooSimultaneous in a multi-range configuration should be the same value as the normalized combination of individual NLLs created in the individual categories. ### To Reproduce. Comment out the final part of the `MultiRangeFitWithSplitRange` unit test in `testRooSimultaneous`. ### Setup. Arch Linux with ROOT master. ### Additional context. - The priority level of this issue can be reduced if it turns out that the difference in the NLL value is a constant that doesn't affect the fit result",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11447
https://github.com/root-project/root/issues/11447:407,Usability,clear,clear,407,"### Describe the bug. Following up on #11396, I noticed that a NLL created from a RooSimultaneous in a multi-ranged configuration doesn't give the expected value. In https://github.com/root-project/root/pull/11445, I tried to implement a unit test that was checking exactly that, but the NLL from RooSimultaneous was not consistent with a mathematically equivalent sum of NLLs per category. It is still not clear whether the difference is only a constant factor that doesn't influence the fit result, but this is potentially a but that even has an influence on the results. I suspect that it is actually biasing the fit result, because in multi-ranged fits the NLL is computed using an integral of the top-level PDF that is created with `createIntegral`, and I'm not sure if the integral of a RooSimultaneous is well defined in that context. Please @AlkaidCheng, take note of this, because this is a potential problem for your workflow. ### Expected behavior. The NLL value from a RooSimultaneous in a multi-range configuration should be the same value as the normalized combination of individual NLLs created in the individual categories. ### To Reproduce. Comment out the final part of the `MultiRangeFitWithSplitRange` unit test in `testRooSimultaneous`. ### Setup. Arch Linux with ROOT master. ### Additional context. - The priority level of this issue can be reduced if it turns out that the difference in the NLL value is a constant that doesn't affect the fit result",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11447
https://github.com/root-project/root/issues/11448:1204,Deployability,install,install,1204,"- [x] Checked for duplicates. ### Describe the bug; CMake EXPORT sets should only reference targets which are required for building dependent packages, not every auxiliary tool. I.e.:; 1. Libraries (implies corresponding headers); 2. Tools like code generators, preprocessors ... If a tool may be invoked by a dependent project during build, include it in the export set, otherwise, leave it out. ### Expected behavior; Only minimal set of programs is referenced by the `ROOTConfig-targets*cmake` file. E.g. `hadd` should not be exported, but it is: ; `list(APPEND _cmake_import_check_files_for_ROOT::hadd ""${_IMPORT_PREFIX}/bin/hadd"" )`. Currently, the following binaries are exported:; ```; ""${_IMPORT_PREFIX}/bin/hadd""; ""${_IMPORT_PREFIX}/bin/hist2workspace""; ""${_IMPORT_PREFIX}/bin/proofserv.exe""; ""${_IMPORT_PREFIX}/bin/rmkdepend""; ""${_IMPORT_PREFIX}/bin/root""; ""${_IMPORT_PREFIX}/bin/rootcling""; ""${_IMPORT_PREFIX}/bin/root.exe""; ""${_IMPORT_PREFIX}/bin/rootnb.exe""; ""${_IMPORT_PREFIX}/bin/rootn.exe""; ""${_IMPORT_PREFIX}/bin/roots.exe""; ""${_IMPORT_PREFIX}/bin/xpdtest""; ```. ROOT already has the `CMAKENOEXPORT` parameter to support this with `ROOT_EXECUTABLE`. ### To Reproduce; `cmake; make; make install`. ### Setup; 1. ROOT version: 6.26.06; 2. Operating system: Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11448
https://github.com/root-project/root/issues/11448:132,Integrability,depend,dependent,132,"- [x] Checked for duplicates. ### Describe the bug; CMake EXPORT sets should only reference targets which are required for building dependent packages, not every auxiliary tool. I.e.:; 1. Libraries (implies corresponding headers); 2. Tools like code generators, preprocessors ... If a tool may be invoked by a dependent project during build, include it in the export set, otherwise, leave it out. ### Expected behavior; Only minimal set of programs is referenced by the `ROOTConfig-targets*cmake` file. E.g. `hadd` should not be exported, but it is: ; `list(APPEND _cmake_import_check_files_for_ROOT::hadd ""${_IMPORT_PREFIX}/bin/hadd"" )`. Currently, the following binaries are exported:; ```; ""${_IMPORT_PREFIX}/bin/hadd""; ""${_IMPORT_PREFIX}/bin/hist2workspace""; ""${_IMPORT_PREFIX}/bin/proofserv.exe""; ""${_IMPORT_PREFIX}/bin/rmkdepend""; ""${_IMPORT_PREFIX}/bin/root""; ""${_IMPORT_PREFIX}/bin/rootcling""; ""${_IMPORT_PREFIX}/bin/root.exe""; ""${_IMPORT_PREFIX}/bin/rootnb.exe""; ""${_IMPORT_PREFIX}/bin/rootn.exe""; ""${_IMPORT_PREFIX}/bin/roots.exe""; ""${_IMPORT_PREFIX}/bin/xpdtest""; ```. ROOT already has the `CMAKENOEXPORT` parameter to support this with `ROOT_EXECUTABLE`. ### To Reproduce; `cmake; make; make install`. ### Setup; 1. ROOT version: 6.26.06; 2. Operating system: Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11448
https://github.com/root-project/root/issues/11448:310,Integrability,depend,dependent,310,"- [x] Checked for duplicates. ### Describe the bug; CMake EXPORT sets should only reference targets which are required for building dependent packages, not every auxiliary tool. I.e.:; 1. Libraries (implies corresponding headers); 2. Tools like code generators, preprocessors ... If a tool may be invoked by a dependent project during build, include it in the export set, otherwise, leave it out. ### Expected behavior; Only minimal set of programs is referenced by the `ROOTConfig-targets*cmake` file. E.g. `hadd` should not be exported, but it is: ; `list(APPEND _cmake_import_check_files_for_ROOT::hadd ""${_IMPORT_PREFIX}/bin/hadd"" )`. Currently, the following binaries are exported:; ```; ""${_IMPORT_PREFIX}/bin/hadd""; ""${_IMPORT_PREFIX}/bin/hist2workspace""; ""${_IMPORT_PREFIX}/bin/proofserv.exe""; ""${_IMPORT_PREFIX}/bin/rmkdepend""; ""${_IMPORT_PREFIX}/bin/root""; ""${_IMPORT_PREFIX}/bin/rootcling""; ""${_IMPORT_PREFIX}/bin/root.exe""; ""${_IMPORT_PREFIX}/bin/rootnb.exe""; ""${_IMPORT_PREFIX}/bin/rootn.exe""; ""${_IMPORT_PREFIX}/bin/roots.exe""; ""${_IMPORT_PREFIX}/bin/xpdtest""; ```. ROOT already has the `CMAKENOEXPORT` parameter to support this with `ROOT_EXECUTABLE`. ### To Reproduce; `cmake; make; make install`. ### Setup; 1. ROOT version: 6.26.06; 2. Operating system: Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11448
https://github.com/root-project/root/pull/11449:281,Deployability,Update,Update,281,"1. Let load and directly draw `TGeoVolume` object in geometry viewer - disregard of `TGeoManager` state; 2. Let draw `TGeoVolumeAssembly` from `RBrowser`; 3. Functionality to produce JSON from geometry viewer data, such JSON can be used on JSROOT for three.js model generation; 4. Update JSROOT; 5. Remove dependency from EVE7 components in geometry viewer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11449
https://github.com/root-project/root/pull/11449:306,Integrability,depend,dependency,306,"1. Let load and directly draw `TGeoVolume` object in geometry viewer - disregard of `TGeoManager` state; 2. Let draw `TGeoVolumeAssembly` from `RBrowser`; 3. Functionality to produce JSON from geometry viewer data, such JSON can be used on JSROOT for three.js model generation; 4. Update JSROOT; 5. Remove dependency from EVE7 components in geometry viewer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11449
https://github.com/root-project/root/pull/11449:7,Performance,load,load,7,"1. Let load and directly draw `TGeoVolume` object in geometry viewer - disregard of `TGeoManager` state; 2. Let draw `TGeoVolumeAssembly` from `RBrowser`; 3. Functionality to produce JSON from geometry viewer data, such JSON can be used on JSROOT for three.js model generation; 4. Update JSROOT; 5. Remove dependency from EVE7 components in geometry viewer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11449
https://github.com/root-project/root/pull/11452:49,Deployability,update,updated,49,The minimum dask version in requirements.txt was updated to 2022.02 by https://github.com/root-project/root/pull/11371. Also update it when looking for a dask installation in the cmake configuration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11452
https://github.com/root-project/root/pull/11452:125,Deployability,update,update,125,The minimum dask version in requirements.txt was updated to 2022.02 by https://github.com/root-project/root/pull/11371. Also update it when looking for a dask installation in the cmake configuration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11452
https://github.com/root-project/root/pull/11452:159,Deployability,install,installation,159,The minimum dask version in requirements.txt was updated to 2022.02 by https://github.com/root-project/root/pull/11371. Also update it when looking for a dask installation in the cmake configuration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11452
https://github.com/root-project/root/pull/11452:185,Deployability,configurat,configuration,185,The minimum dask version in requirements.txt was updated to 2022.02 by https://github.com/root-project/root/pull/11371. Also update it when looking for a dask installation in the cmake configuration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11452
https://github.com/root-project/root/pull/11452:185,Modifiability,config,configuration,185,The minimum dask version in requirements.txt was updated to 2022.02 by https://github.com/root-project/root/pull/11371. Also update it when looking for a dask installation in the cmake configuration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11452
https://github.com/root-project/root/pull/11455:201,Integrability,interface,interface,201,"Multi-range fits in RooFit are more complicated than they should be. In principle, all that is required is to change the normalization range of the PDF to the union of the ranges. There is a RooAbdPdf interface to suggest that this could be done easily like this:; ```C++; pdf.setNormRange(""range1,range2""); ```. But this doesn't work well for RooAddPdfs, which is probably why it was chosen to implement mulit-range fits as a sum of separate RooNLLVars. But in this case, the PDFs are normalized separately, and extra terms need to be introduced to correct for that. This resulted in lots of complicated code, and still there are issues like #11447, i.e. is still doesn't work for simultaneous fits. That's why I decided to fix the `setNormRange()` for RooAddPdfs, and then starting from that re-implement multi-ranged fits in both the new BatchMode and the old RooFit based on that. . Closes #11447.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11455
https://github.com/root-project/root/issues/11456:76,Usability,clear,clear,76,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. In previous versions of the ROOT documentation, it was clearly mentioned that e.g. `TH1::GetRMS` for historical reasons does not in fact calculate RMS but the standard deviation. Now this section is just empty:; https://root.cern.ch/doc/master/classTH1.html#a8fdcbb1ef23f99d5b28c1f10e947c957. ### Describe the solution you'd like. Re-introduce this documentation. ### Describe alternatives you've considered. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11456
https://github.com/root-project/root/issues/11456:241,Usability,clear,clearly,241,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. In previous versions of the ROOT documentation, it was clearly mentioned that e.g. `TH1::GetRMS` for historical reasons does not in fact calculate RMS but the standard deviation. Now this section is just empty:; https://root.cern.ch/doc/master/classTH1.html#a8fdcbb1ef23f99d5b28c1f10e947c957. ### Describe the solution you'd like. Re-introduce this documentation. ### Describe alternatives you've considered. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11456
https://github.com/root-project/root/pull/11457:221,Availability,error,error,221,According to the list of changes in Python 3.11:. https://docs.python.org/3.11/whatsnew/3.11.html. types defined with the Py_TPFLAGS_HAVE_GC flag set but with no traverse function (PyTypeObject.tp_traverse) will cause an error. The above is true for a few types that are defined in cppyy. This commit removes the aforementioned flag from those type definitions with no traverse function. It also sets the right flags for the nonified object type; this fixes the teardown GC crashes observed when the internal memory management of ROOT was involved (e.g. the garbage collection of a tree that belongs to a file). This PR fixes https://github.com/root-project/root/issues/10799,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11457
https://github.com/root-project/root/issues/11460:63,Performance,scalab,scalability,63,"In commit 2812b568571a6ff25c72fffe8a1ecd32b7d6f811, we improve scalability of `TF1` creation by adding an explicit parameter to the constructor to allow the user to request ""please do not add to global list"". However this was not applied to the classes derived from `TF1`, i.e. `TF2, TF3, etc.`. Philippe.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11460
https://github.com/root-project/root/pull/11466:3364,Deployability,update,updated,3364,"concatenation of pages from the same page-group can achieve.; - `RPageSinkDaos::CommitSealedPageVImpl()` maps pages from the same page-group to the same attribute key, thus concatenating them on the DAOS-side (i.e. relies on scatter-gathered I/O) until the cage limit is reached. The cage sizes can vary due to page compression and the length of page-groups, thus it is calculated and stored to be referenced when reading back.; - `RWOperation` is generalized to allow many IOVs associated with one attribute key in a request, enabling the non-contiguous buffers of sealed pages to be aggregated into a cage under the same position ID in the object store. ; - `RNTupleLocator`: leverages the changes introduced by PR #11828; all DAOS locators use the type `kDaos` and payload format `RNTupleLocatorObject64`. To locate pages within a cage, the 64-bit payload encodes the cage index in the LS half and the offset in the MS half. If caging is disabled, the offset remains zero, and each 'cage' is trivially the sealed page.; - Currently, there are no plans to enable support for page-wise reading without cluster caching if the desired page is caged, as that use-case is not performant and thus not recommended. Caged pages in DAOS should be accessed with the page buffering read option turned on. By disallowing the reading of a single caged page when the wrapping cage size is unknown, the cage sizes - or upper bounds for them - do not need to be passed to `RPageSourceDaos`; they are trivially devised in `RPageSourceDaos::LoadClusters()` by accessing all page locators in a buffered page-group. ; - `RPageSourceDaos::LoadClusters()` and `RPageSourceDaos::PopulatePageFromCluster()` extract the cage position and offset-in-cage from each sealed page's `RNTupleLocator::fPosition`. The former function has been changed to coalesce the page locators by cage index and perform a single read operation per cage. ## Checklist:. - [x] tested changes locally + HPE `delphi` cluster; - [x] updated the docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11466
https://github.com/root-project/root/pull/11466:2735,Integrability,wrap,wrapping,2735,"concatenation of pages from the same page-group can achieve.; - `RPageSinkDaos::CommitSealedPageVImpl()` maps pages from the same page-group to the same attribute key, thus concatenating them on the DAOS-side (i.e. relies on scatter-gathered I/O) until the cage limit is reached. The cage sizes can vary due to page compression and the length of page-groups, thus it is calculated and stored to be referenced when reading back.; - `RWOperation` is generalized to allow many IOVs associated with one attribute key in a request, enabling the non-contiguous buffers of sealed pages to be aggregated into a cage under the same position ID in the object store. ; - `RNTupleLocator`: leverages the changes introduced by PR #11828; all DAOS locators use the type `kDaos` and payload format `RNTupleLocatorObject64`. To locate pages within a cage, the 64-bit payload encodes the cage index in the LS half and the offset in the MS half. If caging is disabled, the offset remains zero, and each 'cage' is trivially the sealed page.; - Currently, there are no plans to enable support for page-wise reading without cluster caching if the desired page is caged, as that use-case is not performant and thus not recommended. Caged pages in DAOS should be accessed with the page buffering read option turned on. By disallowing the reading of a single caged page when the wrapping cage size is unknown, the cage sizes - or upper bounds for them - do not need to be passed to `RPageSourceDaos`; they are trivially devised in `RPageSourceDaos::LoadClusters()` by accessing all page locators in a buffered page-group. ; - `RPageSourceDaos::LoadClusters()` and `RPageSourceDaos::PopulatePageFromCluster()` extract the cage position and offset-in-cage from each sealed page's `RNTupleLocator::fPosition`. The former function has been changed to coalesce the page locators by cage index and perform a single read operation per cage. ## Checklist:. - [x] tested changes locally + HPE `delphi` cluster; - [x] updated the docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11466
https://github.com/root-project/root/pull/11466:693,Performance,throughput,throughput,693,"This pull request adds support for the concatenation of RNTuple pages into 'cages' that are then written to, and read from, DAOS containers as a single value of the key-value object store under the same attribute key, thus the smallest addressable unit. Pages from the same page-group are concatenated in the order they are handled on the DAOS side through vector I/O from the sealed pages' buffers. The name 'cage' is a portmanteau of ""concatenated pages"" and suggests the fact that pages caged together must be read together in DAOS. This change emancipates the DAOS backend from the original, on-disk ntuple page size. The option to concatenate sealed and buffered pages avoids unnecessary throughput constraints caused by the original page size (e.g., the on-disk default, 64KiB, generally leads to lower performance than pages an order of magnitude larger, e.g. 1MiB), particularly if the pattern of data analysis is based on reading back entire page-group ranges at once. On the other hand, this change ties the reader to the new, concatenated sizes; in DAOS key-value stores, it is impossible to read only a part of the value. It is important that the cage size limit be set adequately for the use-case during writing to DAOS. ## Changes or fixes:. - `RNTupleWriteOptions` provides a way to `SetMaxCageSize()` (default: caging enabled with 1 MiB cages), the maximum size a concatenation of pages from the same page-group can achieve.; - `RPageSinkDaos::CommitSealedPageVImpl()` maps pages from the same page-group to the same attribute key, thus concatenating them on the DAOS-side (i.e. relies on scatter-gathered I/O) until the cage limit is reached. The cage sizes can vary due to page compression and the length of page-groups, thus it is calculated and stored to be referenced when reading back.; - `RWOperation` is generalized to allow many IOVs associated with one attribute key in a request, enabling the non-contiguous buffers of sealed pages to be aggregated into a cage under the sam",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11466
https://github.com/root-project/root/pull/11466:809,Performance,perform,performance,809,"This pull request adds support for the concatenation of RNTuple pages into 'cages' that are then written to, and read from, DAOS containers as a single value of the key-value object store under the same attribute key, thus the smallest addressable unit. Pages from the same page-group are concatenated in the order they are handled on the DAOS side through vector I/O from the sealed pages' buffers. The name 'cage' is a portmanteau of ""concatenated pages"" and suggests the fact that pages caged together must be read together in DAOS. This change emancipates the DAOS backend from the original, on-disk ntuple page size. The option to concatenate sealed and buffered pages avoids unnecessary throughput constraints caused by the original page size (e.g., the on-disk default, 64KiB, generally leads to lower performance than pages an order of magnitude larger, e.g. 1MiB), particularly if the pattern of data analysis is based on reading back entire page-group ranges at once. On the other hand, this change ties the reader to the new, concatenated sizes; in DAOS key-value stores, it is impossible to read only a part of the value. It is important that the cage size limit be set adequately for the use-case during writing to DAOS. ## Changes or fixes:. - `RNTupleWriteOptions` provides a way to `SetMaxCageSize()` (default: caging enabled with 1 MiB cages), the maximum size a concatenation of pages from the same page-group can achieve.; - `RPageSinkDaos::CommitSealedPageVImpl()` maps pages from the same page-group to the same attribute key, thus concatenating them on the DAOS-side (i.e. relies on scatter-gathered I/O) until the cage limit is reached. The cage sizes can vary due to page compression and the length of page-groups, thus it is calculated and stored to be referenced when reading back.; - `RWOperation` is generalized to allow many IOVs associated with one attribute key in a request, enabling the non-contiguous buffers of sealed pages to be aggregated into a cage under the sam",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11466
https://github.com/root-project/root/pull/11466:2553,Performance,perform,performant,2553,"concatenation of pages from the same page-group can achieve.; - `RPageSinkDaos::CommitSealedPageVImpl()` maps pages from the same page-group to the same attribute key, thus concatenating them on the DAOS-side (i.e. relies on scatter-gathered I/O) until the cage limit is reached. The cage sizes can vary due to page compression and the length of page-groups, thus it is calculated and stored to be referenced when reading back.; - `RWOperation` is generalized to allow many IOVs associated with one attribute key in a request, enabling the non-contiguous buffers of sealed pages to be aggregated into a cage under the same position ID in the object store. ; - `RNTupleLocator`: leverages the changes introduced by PR #11828; all DAOS locators use the type `kDaos` and payload format `RNTupleLocatorObject64`. To locate pages within a cage, the 64-bit payload encodes the cage index in the LS half and the offset in the MS half. If caging is disabled, the offset remains zero, and each 'cage' is trivially the sealed page.; - Currently, there are no plans to enable support for page-wise reading without cluster caching if the desired page is caged, as that use-case is not performant and thus not recommended. Caged pages in DAOS should be accessed with the page buffering read option turned on. By disallowing the reading of a single caged page when the wrapping cage size is unknown, the cage sizes - or upper bounds for them - do not need to be passed to `RPageSourceDaos`; they are trivially devised in `RPageSourceDaos::LoadClusters()` by accessing all page locators in a buffered page-group. ; - `RPageSourceDaos::LoadClusters()` and `RPageSourceDaos::PopulatePageFromCluster()` extract the cage position and offset-in-cage from each sealed page's `RNTupleLocator::fPosition`. The former function has been changed to coalesce the page locators by cage index and perform a single read operation per cage. ## Checklist:. - [x] tested changes locally + HPE `delphi` cluster; - [x] updated the docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11466
https://github.com/root-project/root/pull/11466:2905,Performance,Load,LoadClusters,2905,"concatenation of pages from the same page-group can achieve.; - `RPageSinkDaos::CommitSealedPageVImpl()` maps pages from the same page-group to the same attribute key, thus concatenating them on the DAOS-side (i.e. relies on scatter-gathered I/O) until the cage limit is reached. The cage sizes can vary due to page compression and the length of page-groups, thus it is calculated and stored to be referenced when reading back.; - `RWOperation` is generalized to allow many IOVs associated with one attribute key in a request, enabling the non-contiguous buffers of sealed pages to be aggregated into a cage under the same position ID in the object store. ; - `RNTupleLocator`: leverages the changes introduced by PR #11828; all DAOS locators use the type `kDaos` and payload format `RNTupleLocatorObject64`. To locate pages within a cage, the 64-bit payload encodes the cage index in the LS half and the offset in the MS half. If caging is disabled, the offset remains zero, and each 'cage' is trivially the sealed page.; - Currently, there are no plans to enable support for page-wise reading without cluster caching if the desired page is caged, as that use-case is not performant and thus not recommended. Caged pages in DAOS should be accessed with the page buffering read option turned on. By disallowing the reading of a single caged page when the wrapping cage size is unknown, the cage sizes - or upper bounds for them - do not need to be passed to `RPageSourceDaos`; they are trivially devised in `RPageSourceDaos::LoadClusters()` by accessing all page locators in a buffered page-group. ; - `RPageSourceDaos::LoadClusters()` and `RPageSourceDaos::PopulatePageFromCluster()` extract the cage position and offset-in-cage from each sealed page's `RNTupleLocator::fPosition`. The former function has been changed to coalesce the page locators by cage index and perform a single read operation per cage. ## Checklist:. - [x] tested changes locally + HPE `delphi` cluster; - [x] updated the docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11466
https://github.com/root-project/root/pull/11466:3000,Performance,Load,LoadClusters,3000,"concatenation of pages from the same page-group can achieve.; - `RPageSinkDaos::CommitSealedPageVImpl()` maps pages from the same page-group to the same attribute key, thus concatenating them on the DAOS-side (i.e. relies on scatter-gathered I/O) until the cage limit is reached. The cage sizes can vary due to page compression and the length of page-groups, thus it is calculated and stored to be referenced when reading back.; - `RWOperation` is generalized to allow many IOVs associated with one attribute key in a request, enabling the non-contiguous buffers of sealed pages to be aggregated into a cage under the same position ID in the object store. ; - `RNTupleLocator`: leverages the changes introduced by PR #11828; all DAOS locators use the type `kDaos` and payload format `RNTupleLocatorObject64`. To locate pages within a cage, the 64-bit payload encodes the cage index in the LS half and the offset in the MS half. If caging is disabled, the offset remains zero, and each 'cage' is trivially the sealed page.; - Currently, there are no plans to enable support for page-wise reading without cluster caching if the desired page is caged, as that use-case is not performant and thus not recommended. Caged pages in DAOS should be accessed with the page buffering read option turned on. By disallowing the reading of a single caged page when the wrapping cage size is unknown, the cage sizes - or upper bounds for them - do not need to be passed to `RPageSourceDaos`; they are trivially devised in `RPageSourceDaos::LoadClusters()` by accessing all page locators in a buffered page-group. ; - `RPageSourceDaos::LoadClusters()` and `RPageSourceDaos::PopulatePageFromCluster()` extract the cage position and offset-in-cage from each sealed page's `RNTupleLocator::fPosition`. The former function has been changed to coalesce the page locators by cage index and perform a single read operation per cage. ## Checklist:. - [x] tested changes locally + HPE `delphi` cluster; - [x] updated the docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11466
https://github.com/root-project/root/pull/11466:3248,Performance,perform,perform,3248,"concatenation of pages from the same page-group can achieve.; - `RPageSinkDaos::CommitSealedPageVImpl()` maps pages from the same page-group to the same attribute key, thus concatenating them on the DAOS-side (i.e. relies on scatter-gathered I/O) until the cage limit is reached. The cage sizes can vary due to page compression and the length of page-groups, thus it is calculated and stored to be referenced when reading back.; - `RWOperation` is generalized to allow many IOVs associated with one attribute key in a request, enabling the non-contiguous buffers of sealed pages to be aggregated into a cage under the same position ID in the object store. ; - `RNTupleLocator`: leverages the changes introduced by PR #11828; all DAOS locators use the type `kDaos` and payload format `RNTupleLocatorObject64`. To locate pages within a cage, the 64-bit payload encodes the cage index in the LS half and the offset in the MS half. If caging is disabled, the offset remains zero, and each 'cage' is trivially the sealed page.; - Currently, there are no plans to enable support for page-wise reading without cluster caching if the desired page is caged, as that use-case is not performant and thus not recommended. Caged pages in DAOS should be accessed with the page buffering read option turned on. By disallowing the reading of a single caged page when the wrapping cage size is unknown, the cage sizes - or upper bounds for them - do not need to be passed to `RPageSourceDaos`; they are trivially devised in `RPageSourceDaos::LoadClusters()` by accessing all page locators in a buffered page-group. ; - `RPageSourceDaos::LoadClusters()` and `RPageSourceDaos::PopulatePageFromCluster()` extract the cage position and offset-in-cage from each sealed page's `RNTupleLocator::fPosition`. The former function has been changed to coalesce the page locators by cage index and perform a single read operation per cage. ## Checklist:. - [x] tested changes locally + HPE `delphi` cluster; - [x] updated the docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11466
https://github.com/root-project/root/pull/11466:674,Safety,avoid,avoids,674,"This pull request adds support for the concatenation of RNTuple pages into 'cages' that are then written to, and read from, DAOS containers as a single value of the key-value object store under the same attribute key, thus the smallest addressable unit. Pages from the same page-group are concatenated in the order they are handled on the DAOS side through vector I/O from the sealed pages' buffers. The name 'cage' is a portmanteau of ""concatenated pages"" and suggests the fact that pages caged together must be read together in DAOS. This change emancipates the DAOS backend from the original, on-disk ntuple page size. The option to concatenate sealed and buffered pages avoids unnecessary throughput constraints caused by the original page size (e.g., the on-disk default, 64KiB, generally leads to lower performance than pages an order of magnitude larger, e.g. 1MiB), particularly if the pattern of data analysis is based on reading back entire page-group ranges at once. On the other hand, this change ties the reader to the new, concatenated sizes; in DAOS key-value stores, it is impossible to read only a part of the value. It is important that the cage size limit be set adequately for the use-case during writing to DAOS. ## Changes or fixes:. - `RNTupleWriteOptions` provides a way to `SetMaxCageSize()` (default: caging enabled with 1 MiB cages), the maximum size a concatenation of pages from the same page-group can achieve.; - `RPageSinkDaos::CommitSealedPageVImpl()` maps pages from the same page-group to the same attribute key, thus concatenating them on the DAOS-side (i.e. relies on scatter-gathered I/O) until the cage limit is reached. The cage sizes can vary due to page compression and the length of page-groups, thus it is calculated and stored to be referenced when reading back.; - `RWOperation` is generalized to allow many IOVs associated with one attribute key in a request, enabling the non-contiguous buffers of sealed pages to be aggregated into a cage under the sam",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11466
https://github.com/root-project/root/pull/11466:2620,Security,access,accessed,2620,"concatenation of pages from the same page-group can achieve.; - `RPageSinkDaos::CommitSealedPageVImpl()` maps pages from the same page-group to the same attribute key, thus concatenating them on the DAOS-side (i.e. relies on scatter-gathered I/O) until the cage limit is reached. The cage sizes can vary due to page compression and the length of page-groups, thus it is calculated and stored to be referenced when reading back.; - `RWOperation` is generalized to allow many IOVs associated with one attribute key in a request, enabling the non-contiguous buffers of sealed pages to be aggregated into a cage under the same position ID in the object store. ; - `RNTupleLocator`: leverages the changes introduced by PR #11828; all DAOS locators use the type `kDaos` and payload format `RNTupleLocatorObject64`. To locate pages within a cage, the 64-bit payload encodes the cage index in the LS half and the offset in the MS half. If caging is disabled, the offset remains zero, and each 'cage' is trivially the sealed page.; - Currently, there are no plans to enable support for page-wise reading without cluster caching if the desired page is caged, as that use-case is not performant and thus not recommended. Caged pages in DAOS should be accessed with the page buffering read option turned on. By disallowing the reading of a single caged page when the wrapping cage size is unknown, the cage sizes - or upper bounds for them - do not need to be passed to `RPageSourceDaos`; they are trivially devised in `RPageSourceDaos::LoadClusters()` by accessing all page locators in a buffered page-group. ; - `RPageSourceDaos::LoadClusters()` and `RPageSourceDaos::PopulatePageFromCluster()` extract the cage position and offset-in-cage from each sealed page's `RNTupleLocator::fPosition`. The former function has been changed to coalesce the page locators by cage index and perform a single read operation per cage. ## Checklist:. - [x] tested changes locally + HPE `delphi` cluster; - [x] updated the docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11466
https://github.com/root-project/root/pull/11466:2924,Security,access,accessing,2924,"concatenation of pages from the same page-group can achieve.; - `RPageSinkDaos::CommitSealedPageVImpl()` maps pages from the same page-group to the same attribute key, thus concatenating them on the DAOS-side (i.e. relies on scatter-gathered I/O) until the cage limit is reached. The cage sizes can vary due to page compression and the length of page-groups, thus it is calculated and stored to be referenced when reading back.; - `RWOperation` is generalized to allow many IOVs associated with one attribute key in a request, enabling the non-contiguous buffers of sealed pages to be aggregated into a cage under the same position ID in the object store. ; - `RNTupleLocator`: leverages the changes introduced by PR #11828; all DAOS locators use the type `kDaos` and payload format `RNTupleLocatorObject64`. To locate pages within a cage, the 64-bit payload encodes the cage index in the LS half and the offset in the MS half. If caging is disabled, the offset remains zero, and each 'cage' is trivially the sealed page.; - Currently, there are no plans to enable support for page-wise reading without cluster caching if the desired page is caged, as that use-case is not performant and thus not recommended. Caged pages in DAOS should be accessed with the page buffering read option turned on. By disallowing the reading of a single caged page when the wrapping cage size is unknown, the cage sizes - or upper bounds for them - do not need to be passed to `RPageSourceDaos`; they are trivially devised in `RPageSourceDaos::LoadClusters()` by accessing all page locators in a buffered page-group. ; - `RPageSourceDaos::LoadClusters()` and `RPageSourceDaos::PopulatePageFromCluster()` extract the cage position and offset-in-cage from each sealed page's `RNTupleLocator::fPosition`. The former function has been changed to coalesce the page locators by cage index and perform a single read operation per cage. ## Checklist:. - [x] tested changes locally + HPE `delphi` cluster; - [x] updated the docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11466
https://github.com/root-project/root/pull/11466:3311,Testability,test,tested,3311,"concatenation of pages from the same page-group can achieve.; - `RPageSinkDaos::CommitSealedPageVImpl()` maps pages from the same page-group to the same attribute key, thus concatenating them on the DAOS-side (i.e. relies on scatter-gathered I/O) until the cage limit is reached. The cage sizes can vary due to page compression and the length of page-groups, thus it is calculated and stored to be referenced when reading back.; - `RWOperation` is generalized to allow many IOVs associated with one attribute key in a request, enabling the non-contiguous buffers of sealed pages to be aggregated into a cage under the same position ID in the object store. ; - `RNTupleLocator`: leverages the changes introduced by PR #11828; all DAOS locators use the type `kDaos` and payload format `RNTupleLocatorObject64`. To locate pages within a cage, the 64-bit payload encodes the cage index in the LS half and the offset in the MS half. If caging is disabled, the offset remains zero, and each 'cage' is trivially the sealed page.; - Currently, there are no plans to enable support for page-wise reading without cluster caching if the desired page is caged, as that use-case is not performant and thus not recommended. Caged pages in DAOS should be accessed with the page buffering read option turned on. By disallowing the reading of a single caged page when the wrapping cage size is unknown, the cage sizes - or upper bounds for them - do not need to be passed to `RPageSourceDaos`; they are trivially devised in `RPageSourceDaos::LoadClusters()` by accessing all page locators in a buffered page-group. ; - `RPageSourceDaos::LoadClusters()` and `RPageSourceDaos::PopulatePageFromCluster()` extract the cage position and offset-in-cage from each sealed page's `RNTupleLocator::fPosition`. The former function has been changed to coalesce the page locators by cage index and perform a single read operation per cage. ## Checklist:. - [x] tested changes locally + HPE `delphi` cluster; - [x] updated the docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11466
https://github.com/root-project/root/pull/11468:546,Deployability,patch,patch,546,"The C++ modules marks the std::vector<int> instantiation as not visible because it came from the `regex` header file which we did not explicitly include. root-project/root@a785402 introduces checks if certain declaration is visible in dictionary generation time which was intending to semantically improve the coherence by what the user ""allowed"" (or requested) rootcling to see vs what it can see globally. While this model works well it seems to not work for template instantiations as they won't be re-instantiated with visible modifier. This patch works around the current issue seen with libstdc++ 12 but a better solution would be to implement a finer grained control over the implicit template instatiations when generating a dictionary. Fixes root-project/root#11329",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11468
https://github.com/root-project/root/pull/11470:180,Deployability,patch,patch,180,"Before gcc 7.3 there is an issue passing a non-movable pair<string, unique_ptr<T>> into unordered_map::insert. A standalone reproducer is at https://godbolt.org/z/1ror6sqPx . This patch works around it by using operator[] + assignment instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11470
https://github.com/root-project/root/issues/11473:89,Availability,error,error,89,Unfortunately I can't install Win64 version of Root 6.26 becasue of virus detection. See error during unzip and Btdefender report. ![error1](https://user-images.githubusercontent.com/75624059/193414303-f5b7d9c8-4837-431d-b7e2-e7f04c94e34b.JPG); ![error2](https://user-images.githubusercontent.com/75624059/193414309-ece88fe7-b75c-47ce-ac39-620b567ba7b3.JPG),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11473
https://github.com/root-project/root/issues/11473:22,Deployability,install,install,22,Unfortunately I can't install Win64 version of Root 6.26 becasue of virus detection. See error during unzip and Btdefender report. ![error1](https://user-images.githubusercontent.com/75624059/193414303-f5b7d9c8-4837-431d-b7e2-e7f04c94e34b.JPG); ![error2](https://user-images.githubusercontent.com/75624059/193414309-ece88fe7-b75c-47ce-ac39-620b567ba7b3.JPG),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11473
https://github.com/root-project/root/issues/11473:74,Safety,detect,detection,74,Unfortunately I can't install Win64 version of Root 6.26 becasue of virus detection. See error during unzip and Btdefender report. ![error1](https://user-images.githubusercontent.com/75624059/193414303-f5b7d9c8-4837-431d-b7e2-e7f04c94e34b.JPG); ![error2](https://user-images.githubusercontent.com/75624059/193414309-ece88fe7-b75c-47ce-ac39-620b567ba7b3.JPG),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11473
https://github.com/root-project/root/pull/11474:34,Integrability,depend,depends,34,"Move root-project/cling#469. This depends on PR #11360. cc: @sarabellei, @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11474
https://github.com/root-project/root/pull/11475:701,Availability,redundant,redundantly,701,"The tutorial is actually using the SPlots class wrong. It is calculating; sWeights for the isolation based on the invariant mass and the isolation; itself. That’s wrong. For sPlots, the control variable should not be in; the set of discriminating variables for the likelihood fit! See; https://arxiv.org/pdf/physics/0402083.pdf. That means when using the SPlot class, you should exclude the isolation; variable from the dataset that you pass. Big thanks to Dongliang for reporting this on the ROOT Forum!. https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. A second commit applies some other improvements to the tutorial:. * Code modernization. * Don't define number of events in toy data redundantly. * Add also plots of isolation models",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11475
https://github.com/root-project/root/pull/11475:194,Modifiability,variab,variable,194,"The tutorial is actually using the SPlots class wrong. It is calculating; sWeights for the isolation based on the invariant mass and the isolation; itself. That’s wrong. For sPlots, the control variable should not be in; the set of discriminating variables for the likelihood fit! See; https://arxiv.org/pdf/physics/0402083.pdf. That means when using the SPlot class, you should exclude the isolation; variable from the dataset that you pass. Big thanks to Dongliang for reporting this on the ROOT Forum!. https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. A second commit applies some other improvements to the tutorial:. * Code modernization. * Don't define number of events in toy data redundantly. * Add also plots of isolation models",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11475
https://github.com/root-project/root/pull/11475:247,Modifiability,variab,variables,247,"The tutorial is actually using the SPlots class wrong. It is calculating; sWeights for the isolation based on the invariant mass and the isolation; itself. That’s wrong. For sPlots, the control variable should not be in; the set of discriminating variables for the likelihood fit! See; https://arxiv.org/pdf/physics/0402083.pdf. That means when using the SPlot class, you should exclude the isolation; variable from the dataset that you pass. Big thanks to Dongliang for reporting this on the ROOT Forum!. https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. A second commit applies some other improvements to the tutorial:. * Code modernization. * Don't define number of events in toy data redundantly. * Add also plots of isolation models",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11475
https://github.com/root-project/root/pull/11475:402,Modifiability,variab,variable,402,"The tutorial is actually using the SPlots class wrong. It is calculating; sWeights for the isolation based on the invariant mass and the isolation; itself. That’s wrong. For sPlots, the control variable should not be in; the set of discriminating variables for the likelihood fit! See; https://arxiv.org/pdf/physics/0402083.pdf. That means when using the SPlot class, you should exclude the isolation; variable from the dataset that you pass. Big thanks to Dongliang for reporting this on the ROOT Forum!. https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. A second commit applies some other improvements to the tutorial:. * Code modernization. * Don't define number of events in toy data redundantly. * Add also plots of isolation models",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11475
https://github.com/root-project/root/pull/11475:701,Safety,redund,redundantly,701,"The tutorial is actually using the SPlots class wrong. It is calculating; sWeights for the isolation based on the invariant mass and the isolation; itself. That’s wrong. For sPlots, the control variable should not be in; the set of discriminating variables for the likelihood fit! See; https://arxiv.org/pdf/physics/0402083.pdf. That means when using the SPlot class, you should exclude the isolation; variable from the dataset that you pass. Big thanks to Dongliang for reporting this on the ROOT Forum!. https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. A second commit applies some other improvements to the tutorial:. * Code modernization. * Don't define number of events in toy data redundantly. * Add also plots of isolation models",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11475
https://github.com/root-project/root/issues/11476:414,Testability,test,testProdOfSum,414,"### Describe the bug. If you generate a toy dataset from a model that is a product of sums, you still get the `Evaluating RooAddPdf without a defined normalization set` warnings, even though the normalization set is defined. ### Expected behavior. There should be no such warnings, because the normalization set is defined. When you generate toy data for a given set of observables. ### To Reproduce. ```c++; void testProdOfSum(); {; RooWorkspace ws{""ws""};; ws.factory(""Gaussian::gs(x[0,10], mu[2, 0, 10], sg[2, 0.1, 10])"");; ws.factory(""Exponential::ex(x, lm[-0.1, -10, 0])"");; ws.factory(""SUM::gs_ex(f[0.5, 0, 1] * gs, ex)"");; ws.factory(""Gaussian::gs_1(x, mu_1[4, 0, 10], sg_1[2, 0.1, 10])"");; ws.factory(""PROD::pdf(gs_1, gs_ex)"");. std::unique_ptr<RooDataSet>data{ws.pdf(""pdf"")->generate(*ws.var(""x""), 10000)};; }; ```. ### Setup. ROOT `master` on Arch Linux. ### Additional context. This issue was observed when running the reproducer code from the related JIRA issues [ROOT-9436](https://sft.its.cern.ch/jira/browse/ROOT-9436) and [ROOT-10483](https://sft.its.cern.ch/jira/browse/ROOT-10483). If this GitHub issue is fixed, this should also be taken as a opportunity to implement a unit test that covers the linked JIRA issues, which was already fixed in 6.24 but there is yet no unit test that covers it. There are also two more JIRA issues that might be related to this one:; * https://sft.its.cern.ch/jira/browse/ROOT-9649 (*by now, it was checked that it's unrelated*); * https://sft.its.cern.ch/jira/browse/ROOT-10814 (*by now, it was checked that it's unrelated*)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11476
https://github.com/root-project/root/issues/11476:1193,Testability,test,test,1193,"### Describe the bug. If you generate a toy dataset from a model that is a product of sums, you still get the `Evaluating RooAddPdf without a defined normalization set` warnings, even though the normalization set is defined. ### Expected behavior. There should be no such warnings, because the normalization set is defined. When you generate toy data for a given set of observables. ### To Reproduce. ```c++; void testProdOfSum(); {; RooWorkspace ws{""ws""};; ws.factory(""Gaussian::gs(x[0,10], mu[2, 0, 10], sg[2, 0.1, 10])"");; ws.factory(""Exponential::ex(x, lm[-0.1, -10, 0])"");; ws.factory(""SUM::gs_ex(f[0.5, 0, 1] * gs, ex)"");; ws.factory(""Gaussian::gs_1(x, mu_1[4, 0, 10], sg_1[2, 0.1, 10])"");; ws.factory(""PROD::pdf(gs_1, gs_ex)"");. std::unique_ptr<RooDataSet>data{ws.pdf(""pdf"")->generate(*ws.var(""x""), 10000)};; }; ```. ### Setup. ROOT `master` on Arch Linux. ### Additional context. This issue was observed when running the reproducer code from the related JIRA issues [ROOT-9436](https://sft.its.cern.ch/jira/browse/ROOT-9436) and [ROOT-10483](https://sft.its.cern.ch/jira/browse/ROOT-10483). If this GitHub issue is fixed, this should also be taken as a opportunity to implement a unit test that covers the linked JIRA issues, which was already fixed in 6.24 but there is yet no unit test that covers it. There are also two more JIRA issues that might be related to this one:; * https://sft.its.cern.ch/jira/browse/ROOT-9649 (*by now, it was checked that it's unrelated*); * https://sft.its.cern.ch/jira/browse/ROOT-10814 (*by now, it was checked that it's unrelated*)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11476
https://github.com/root-project/root/issues/11476:1291,Testability,test,test,1291,"### Describe the bug. If you generate a toy dataset from a model that is a product of sums, you still get the `Evaluating RooAddPdf without a defined normalization set` warnings, even though the normalization set is defined. ### Expected behavior. There should be no such warnings, because the normalization set is defined. When you generate toy data for a given set of observables. ### To Reproduce. ```c++; void testProdOfSum(); {; RooWorkspace ws{""ws""};; ws.factory(""Gaussian::gs(x[0,10], mu[2, 0, 10], sg[2, 0.1, 10])"");; ws.factory(""Exponential::ex(x, lm[-0.1, -10, 0])"");; ws.factory(""SUM::gs_ex(f[0.5, 0, 1] * gs, ex)"");; ws.factory(""Gaussian::gs_1(x, mu_1[4, 0, 10], sg_1[2, 0.1, 10])"");; ws.factory(""PROD::pdf(gs_1, gs_ex)"");. std::unique_ptr<RooDataSet>data{ws.pdf(""pdf"")->generate(*ws.var(""x""), 10000)};; }; ```. ### Setup. ROOT `master` on Arch Linux. ### Additional context. This issue was observed when running the reproducer code from the related JIRA issues [ROOT-9436](https://sft.its.cern.ch/jira/browse/ROOT-9436) and [ROOT-10483](https://sft.its.cern.ch/jira/browse/ROOT-10483). If this GitHub issue is fixed, this should also be taken as a opportunity to implement a unit test that covers the linked JIRA issues, which was already fixed in 6.24 but there is yet no unit test that covers it. There are also two more JIRA issues that might be related to this one:; * https://sft.its.cern.ch/jira/browse/ROOT-9649 (*by now, it was checked that it's unrelated*); * https://sft.its.cern.ch/jira/browse/ROOT-10814 (*by now, it was checked that it's unrelated*)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11476
https://github.com/root-project/root/pull/11477:391,Energy Efficiency,reduce,reduce,391,"The `RooVectorDataStore` had two different buffers to store the row data in: the so-called ""attached buffers"" and the ""native buffers"". The problem is that when external buffers are attached, the call to `RooVectorDataStore::get()` is not loading the native buffers anymore, which is breaking some code that assumes this, like `RooVectorDataStore::loadValues`, which is used in `RooDataSet::reduce`. This breaks the reduction of datasets with externally attached buffers, which breaks the copy constructor of the `RooNLLVar`. This commit suggests to always load both the native and attached buffers if `RooVectorDataStore::get()` is called. This has almost no performance overhead and is much safeter. Since this change fixes the copy constructor of the `RooNLLVar`, which is used when plotting the NLL, this commit fixes this JIRA ticket: https://sft.its.cern.ch/jira/browse/ROOT-9752. A unit test that covers the problem reported in the JIRA ticket is also added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11477
https://github.com/root-project/root/pull/11477:239,Performance,load,loading,239,"The `RooVectorDataStore` had two different buffers to store the row data in: the so-called ""attached buffers"" and the ""native buffers"". The problem is that when external buffers are attached, the call to `RooVectorDataStore::get()` is not loading the native buffers anymore, which is breaking some code that assumes this, like `RooVectorDataStore::loadValues`, which is used in `RooDataSet::reduce`. This breaks the reduction of datasets with externally attached buffers, which breaks the copy constructor of the `RooNLLVar`. This commit suggests to always load both the native and attached buffers if `RooVectorDataStore::get()` is called. This has almost no performance overhead and is much safeter. Since this change fixes the copy constructor of the `RooNLLVar`, which is used when plotting the NLL, this commit fixes this JIRA ticket: https://sft.its.cern.ch/jira/browse/ROOT-9752. A unit test that covers the problem reported in the JIRA ticket is also added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11477
https://github.com/root-project/root/pull/11477:348,Performance,load,loadValues,348,"The `RooVectorDataStore` had two different buffers to store the row data in: the so-called ""attached buffers"" and the ""native buffers"". The problem is that when external buffers are attached, the call to `RooVectorDataStore::get()` is not loading the native buffers anymore, which is breaking some code that assumes this, like `RooVectorDataStore::loadValues`, which is used in `RooDataSet::reduce`. This breaks the reduction of datasets with externally attached buffers, which breaks the copy constructor of the `RooNLLVar`. This commit suggests to always load both the native and attached buffers if `RooVectorDataStore::get()` is called. This has almost no performance overhead and is much safeter. Since this change fixes the copy constructor of the `RooNLLVar`, which is used when plotting the NLL, this commit fixes this JIRA ticket: https://sft.its.cern.ch/jira/browse/ROOT-9752. A unit test that covers the problem reported in the JIRA ticket is also added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11477
https://github.com/root-project/root/pull/11477:557,Performance,load,load,557,"The `RooVectorDataStore` had two different buffers to store the row data in: the so-called ""attached buffers"" and the ""native buffers"". The problem is that when external buffers are attached, the call to `RooVectorDataStore::get()` is not loading the native buffers anymore, which is breaking some code that assumes this, like `RooVectorDataStore::loadValues`, which is used in `RooDataSet::reduce`. This breaks the reduction of datasets with externally attached buffers, which breaks the copy constructor of the `RooNLLVar`. This commit suggests to always load both the native and attached buffers if `RooVectorDataStore::get()` is called. This has almost no performance overhead and is much safeter. Since this change fixes the copy constructor of the `RooNLLVar`, which is used when plotting the NLL, this commit fixes this JIRA ticket: https://sft.its.cern.ch/jira/browse/ROOT-9752. A unit test that covers the problem reported in the JIRA ticket is also added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11477
https://github.com/root-project/root/pull/11477:660,Performance,perform,performance,660,"The `RooVectorDataStore` had two different buffers to store the row data in: the so-called ""attached buffers"" and the ""native buffers"". The problem is that when external buffers are attached, the call to `RooVectorDataStore::get()` is not loading the native buffers anymore, which is breaking some code that assumes this, like `RooVectorDataStore::loadValues`, which is used in `RooDataSet::reduce`. This breaks the reduction of datasets with externally attached buffers, which breaks the copy constructor of the `RooNLLVar`. This commit suggests to always load both the native and attached buffers if `RooVectorDataStore::get()` is called. This has almost no performance overhead and is much safeter. Since this change fixes the copy constructor of the `RooNLLVar`, which is used when plotting the NLL, this commit fixes this JIRA ticket: https://sft.its.cern.ch/jira/browse/ROOT-9752. A unit test that covers the problem reported in the JIRA ticket is also added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11477
https://github.com/root-project/root/pull/11477:693,Safety,safe,safeter,693,"The `RooVectorDataStore` had two different buffers to store the row data in: the so-called ""attached buffers"" and the ""native buffers"". The problem is that when external buffers are attached, the call to `RooVectorDataStore::get()` is not loading the native buffers anymore, which is breaking some code that assumes this, like `RooVectorDataStore::loadValues`, which is used in `RooDataSet::reduce`. This breaks the reduction of datasets with externally attached buffers, which breaks the copy constructor of the `RooNLLVar`. This commit suggests to always load both the native and attached buffers if `RooVectorDataStore::get()` is called. This has almost no performance overhead and is much safeter. Since this change fixes the copy constructor of the `RooNLLVar`, which is used when plotting the NLL, this commit fixes this JIRA ticket: https://sft.its.cern.ch/jira/browse/ROOT-9752. A unit test that covers the problem reported in the JIRA ticket is also added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11477
https://github.com/root-project/root/pull/11477:894,Testability,test,test,894,"The `RooVectorDataStore` had two different buffers to store the row data in: the so-called ""attached buffers"" and the ""native buffers"". The problem is that when external buffers are attached, the call to `RooVectorDataStore::get()` is not loading the native buffers anymore, which is breaking some code that assumes this, like `RooVectorDataStore::loadValues`, which is used in `RooDataSet::reduce`. This breaks the reduction of datasets with externally attached buffers, which breaks the copy constructor of the `RooNLLVar`. This commit suggests to always load both the native and attached buffers if `RooVectorDataStore::get()` is called. This has almost no performance overhead and is much safeter. Since this change fixes the copy constructor of the `RooNLLVar`, which is used when plotting the NLL, this commit fixes this JIRA ticket: https://sft.its.cern.ch/jira/browse/ROOT-9752. A unit test that covers the problem reported in the JIRA ticket is also added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11477
https://github.com/root-project/root/pull/11478:30,Availability,error,error,30,"Fix the following compilation error on Win64:; ```; ReadSpeed.cxx(334,89): error C2398: Element '1': conversion from 'unsigned __int64' to 'T' requires a narrowing conversion; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11478
https://github.com/root-project/root/pull/11478:75,Availability,error,error,75,"Fix the following compilation error on Win64:; ```; ReadSpeed.cxx(334,89): error C2398: Element '1': conversion from 'unsigned __int64' to 'T' requires a narrowing conversion; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11478
https://github.com/root-project/root/pull/11480:1847,Deployability,update,updated,1847,"This pull request introduces ntuple management at the DAOS container level, extending support for more than one ntuple to populate a container. ## Changes or fixes:; - Support for up to 2\^32 - 1 ntuples in a DAOS container, by assigning an index to a previously-unused portion of the DAOS Object ID address space. The index thus induces a subspace dedicated for all objects belonging to a given ntuple. The zeroth space (index `0`) is reserved for any container-wide metadata objects that may need to be stored in the future.; - `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` is a structure that concentrates the functionality for locating and retrieving stored metadata from an ntuple by its name.; - The structure hashes the name into a well-distributed 32-bit index. Collisions are expressly forbidden to simplify implementation; a different ntuple name must be provided to the sink upon creation if an ntuple stored in the container with another name happens to have the same hash (index).; - The sink (in `RPageSinkDaos` ctor) uses the locator to assign an index for a new ntuple, which may fail if the name's resulting hash collides with some other ntuple present unless the name matches. Overwriting (""recreating"") an existing ntuple is allowed in this context.; - The source (in `RPageSourceDaos::AttachImpl()`) locates the ntuple by the name to validate that it is indeed present in storage (otherwise, an exception is thrown). The objects that are read for this validation are reused as part of the ntuple metadata deserialization procedure when attaching. ; - Unit test coverage is provided for the following cases: write and read from different ntuples in a container; and attempt to open an ntuple that was not stored there. ## Checklist:. - [x] tested changes locally + cluster on single client with libdaos 2.2.0; - [x] updated the docs (if necessary). This PR fixes #10958",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11480
https://github.com/root-project/root/pull/11480:76,Modifiability,extend,extending,76,"This pull request introduces ntuple management at the DAOS container level, extending support for more than one ntuple to populate a container. ## Changes or fixes:; - Support for up to 2\^32 - 1 ntuples in a DAOS container, by assigning an index to a previously-unused portion of the DAOS Object ID address space. The index thus induces a subspace dedicated for all objects belonging to a given ntuple. The zeroth space (index `0`) is reserved for any container-wide metadata objects that may need to be stored in the future.; - `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` is a structure that concentrates the functionality for locating and retrieving stored metadata from an ntuple by its name.; - The structure hashes the name into a well-distributed 32-bit index. Collisions are expressly forbidden to simplify implementation; a different ntuple name must be provided to the sink upon creation if an ntuple stored in the container with another name happens to have the same hash (index).; - The sink (in `RPageSinkDaos` ctor) uses the locator to assign an index for a new ntuple, which may fail if the name's resulting hash collides with some other ntuple present unless the name matches. Overwriting (""recreating"") an existing ntuple is allowed in this context.; - The source (in `RPageSourceDaos::AttachImpl()`) locates the ntuple by the name to validate that it is indeed present in storage (otherwise, an exception is thrown). The objects that are read for this validation are reused as part of the ntuple metadata deserialization procedure when attaching. ; - Unit test coverage is provided for the following cases: write and read from different ntuples in a container; and attempt to open an ntuple that was not stored there. ## Checklist:. - [x] tested changes locally + cluster on single client with libdaos 2.2.0; - [x] updated the docs (if necessary). This PR fixes #10958",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11480
https://github.com/root-project/root/pull/11480:728,Security,hash,hashes,728,"This pull request introduces ntuple management at the DAOS container level, extending support for more than one ntuple to populate a container. ## Changes or fixes:; - Support for up to 2\^32 - 1 ntuples in a DAOS container, by assigning an index to a previously-unused portion of the DAOS Object ID address space. The index thus induces a subspace dedicated for all objects belonging to a given ntuple. The zeroth space (index `0`) is reserved for any container-wide metadata objects that may need to be stored in the future.; - `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` is a structure that concentrates the functionality for locating and retrieving stored metadata from an ntuple by its name.; - The structure hashes the name into a well-distributed 32-bit index. Collisions are expressly forbidden to simplify implementation; a different ntuple name must be provided to the sink upon creation if an ntuple stored in the container with another name happens to have the same hash (index).; - The sink (in `RPageSinkDaos` ctor) uses the locator to assign an index for a new ntuple, which may fail if the name's resulting hash collides with some other ntuple present unless the name matches. Overwriting (""recreating"") an existing ntuple is allowed in this context.; - The source (in `RPageSourceDaos::AttachImpl()`) locates the ntuple by the name to validate that it is indeed present in storage (otherwise, an exception is thrown). The objects that are read for this validation are reused as part of the ntuple metadata deserialization procedure when attaching. ; - Unit test coverage is provided for the following cases: write and read from different ntuples in a container; and attempt to open an ntuple that was not stored there. ## Checklist:. - [x] tested changes locally + cluster on single client with libdaos 2.2.0; - [x] updated the docs (if necessary). This PR fixes #10958",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11480
https://github.com/root-project/root/pull/11480:992,Security,hash,hash,992,"This pull request introduces ntuple management at the DAOS container level, extending support for more than one ntuple to populate a container. ## Changes or fixes:; - Support for up to 2\^32 - 1 ntuples in a DAOS container, by assigning an index to a previously-unused portion of the DAOS Object ID address space. The index thus induces a subspace dedicated for all objects belonging to a given ntuple. The zeroth space (index `0`) is reserved for any container-wide metadata objects that may need to be stored in the future.; - `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` is a structure that concentrates the functionality for locating and retrieving stored metadata from an ntuple by its name.; - The structure hashes the name into a well-distributed 32-bit index. Collisions are expressly forbidden to simplify implementation; a different ntuple name must be provided to the sink upon creation if an ntuple stored in the container with another name happens to have the same hash (index).; - The sink (in `RPageSinkDaos` ctor) uses the locator to assign an index for a new ntuple, which may fail if the name's resulting hash collides with some other ntuple present unless the name matches. Overwriting (""recreating"") an existing ntuple is allowed in this context.; - The source (in `RPageSourceDaos::AttachImpl()`) locates the ntuple by the name to validate that it is indeed present in storage (otherwise, an exception is thrown). The objects that are read for this validation are reused as part of the ntuple metadata deserialization procedure when attaching. ; - Unit test coverage is provided for the following cases: write and read from different ntuples in a container; and attempt to open an ntuple that was not stored there. ## Checklist:. - [x] tested changes locally + cluster on single client with libdaos 2.2.0; - [x] updated the docs (if necessary). This PR fixes #10958",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11480
https://github.com/root-project/root/pull/11480:1137,Security,hash,hash,1137,"This pull request introduces ntuple management at the DAOS container level, extending support for more than one ntuple to populate a container. ## Changes or fixes:; - Support for up to 2\^32 - 1 ntuples in a DAOS container, by assigning an index to a previously-unused portion of the DAOS Object ID address space. The index thus induces a subspace dedicated for all objects belonging to a given ntuple. The zeroth space (index `0`) is reserved for any container-wide metadata objects that may need to be stored in the future.; - `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` is a structure that concentrates the functionality for locating and retrieving stored metadata from an ntuple by its name.; - The structure hashes the name into a well-distributed 32-bit index. Collisions are expressly forbidden to simplify implementation; a different ntuple name must be provided to the sink upon creation if an ntuple stored in the container with another name happens to have the same hash (index).; - The sink (in `RPageSinkDaos` ctor) uses the locator to assign an index for a new ntuple, which may fail if the name's resulting hash collides with some other ntuple present unless the name matches. Overwriting (""recreating"") an existing ntuple is allowed in this context.; - The source (in `RPageSourceDaos::AttachImpl()`) locates the ntuple by the name to validate that it is indeed present in storage (otherwise, an exception is thrown). The objects that are read for this validation are reused as part of the ntuple metadata deserialization procedure when attaching. ; - Unit test coverage is provided for the following cases: write and read from different ntuples in a container; and attempt to open an ntuple that was not stored there. ## Checklist:. - [x] tested changes locally + cluster on single client with libdaos 2.2.0; - [x] updated the docs (if necessary). This PR fixes #10958",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11480
https://github.com/root-project/root/pull/11480:1366,Security,validat,validate,1366,"This pull request introduces ntuple management at the DAOS container level, extending support for more than one ntuple to populate a container. ## Changes or fixes:; - Support for up to 2\^32 - 1 ntuples in a DAOS container, by assigning an index to a previously-unused portion of the DAOS Object ID address space. The index thus induces a subspace dedicated for all objects belonging to a given ntuple. The zeroth space (index `0`) is reserved for any container-wide metadata objects that may need to be stored in the future.; - `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` is a structure that concentrates the functionality for locating and retrieving stored metadata from an ntuple by its name.; - The structure hashes the name into a well-distributed 32-bit index. Collisions are expressly forbidden to simplify implementation; a different ntuple name must be provided to the sink upon creation if an ntuple stored in the container with another name happens to have the same hash (index).; - The sink (in `RPageSinkDaos` ctor) uses the locator to assign an index for a new ntuple, which may fail if the name's resulting hash collides with some other ntuple present unless the name matches. Overwriting (""recreating"") an existing ntuple is allowed in this context.; - The source (in `RPageSourceDaos::AttachImpl()`) locates the ntuple by the name to validate that it is indeed present in storage (otherwise, an exception is thrown). The objects that are read for this validation are reused as part of the ntuple metadata deserialization procedure when attaching. ; - Unit test coverage is provided for the following cases: write and read from different ntuples in a container; and attempt to open an ntuple that was not stored there. ## Checklist:. - [x] tested changes locally + cluster on single client with libdaos 2.2.0; - [x] updated the docs (if necessary). This PR fixes #10958",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11480
https://github.com/root-project/root/pull/11480:1484,Security,validat,validation,1484,"This pull request introduces ntuple management at the DAOS container level, extending support for more than one ntuple to populate a container. ## Changes or fixes:; - Support for up to 2\^32 - 1 ntuples in a DAOS container, by assigning an index to a previously-unused portion of the DAOS Object ID address space. The index thus induces a subspace dedicated for all objects belonging to a given ntuple. The zeroth space (index `0`) is reserved for any container-wide metadata objects that may need to be stored in the future.; - `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` is a structure that concentrates the functionality for locating and retrieving stored metadata from an ntuple by its name.; - The structure hashes the name into a well-distributed 32-bit index. Collisions are expressly forbidden to simplify implementation; a different ntuple name must be provided to the sink upon creation if an ntuple stored in the container with another name happens to have the same hash (index).; - The sink (in `RPageSinkDaos` ctor) uses the locator to assign an index for a new ntuple, which may fail if the name's resulting hash collides with some other ntuple present unless the name matches. Overwriting (""recreating"") an existing ntuple is allowed in this context.; - The source (in `RPageSourceDaos::AttachImpl()`) locates the ntuple by the name to validate that it is indeed present in storage (otherwise, an exception is thrown). The objects that are read for this validation are reused as part of the ntuple metadata deserialization procedure when attaching. ; - Unit test coverage is provided for the following cases: write and read from different ntuples in a container; and attempt to open an ntuple that was not stored there. ## Checklist:. - [x] tested changes locally + cluster on single client with libdaos 2.2.0; - [x] updated the docs (if necessary). This PR fixes #10958",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11480
https://github.com/root-project/root/pull/11480:1588,Testability,test,test,1588,"This pull request introduces ntuple management at the DAOS container level, extending support for more than one ntuple to populate a container. ## Changes or fixes:; - Support for up to 2\^32 - 1 ntuples in a DAOS container, by assigning an index to a previously-unused portion of the DAOS Object ID address space. The index thus induces a subspace dedicated for all objects belonging to a given ntuple. The zeroth space (index `0`) is reserved for any container-wide metadata objects that may need to be stored in the future.; - `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` is a structure that concentrates the functionality for locating and retrieving stored metadata from an ntuple by its name.; - The structure hashes the name into a well-distributed 32-bit index. Collisions are expressly forbidden to simplify implementation; a different ntuple name must be provided to the sink upon creation if an ntuple stored in the container with another name happens to have the same hash (index).; - The sink (in `RPageSinkDaos` ctor) uses the locator to assign an index for a new ntuple, which may fail if the name's resulting hash collides with some other ntuple present unless the name matches. Overwriting (""recreating"") an existing ntuple is allowed in this context.; - The source (in `RPageSourceDaos::AttachImpl()`) locates the ntuple by the name to validate that it is indeed present in storage (otherwise, an exception is thrown). The objects that are read for this validation are reused as part of the ntuple metadata deserialization procedure when attaching. ; - Unit test coverage is provided for the following cases: write and read from different ntuples in a container; and attempt to open an ntuple that was not stored there. ## Checklist:. - [x] tested changes locally + cluster on single client with libdaos 2.2.0; - [x] updated the docs (if necessary). This PR fixes #10958",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11480
https://github.com/root-project/root/pull/11480:1771,Testability,test,tested,1771,"This pull request introduces ntuple management at the DAOS container level, extending support for more than one ntuple to populate a container. ## Changes or fixes:; - Support for up to 2\^32 - 1 ntuples in a DAOS container, by assigning an index to a previously-unused portion of the DAOS Object ID address space. The index thus induces a subspace dedicated for all objects belonging to a given ntuple. The zeroth space (index `0`) is reserved for any container-wide metadata objects that may need to be stored in the future.; - `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` is a structure that concentrates the functionality for locating and retrieving stored metadata from an ntuple by its name.; - The structure hashes the name into a well-distributed 32-bit index. Collisions are expressly forbidden to simplify implementation; a different ntuple name must be provided to the sink upon creation if an ntuple stored in the container with another name happens to have the same hash (index).; - The sink (in `RPageSinkDaos` ctor) uses the locator to assign an index for a new ntuple, which may fail if the name's resulting hash collides with some other ntuple present unless the name matches. Overwriting (""recreating"") an existing ntuple is allowed in this context.; - The source (in `RPageSourceDaos::AttachImpl()`) locates the ntuple by the name to validate that it is indeed present in storage (otherwise, an exception is thrown). The objects that are read for this validation are reused as part of the ntuple metadata deserialization procedure when attaching. ; - Unit test coverage is provided for the following cases: write and read from different ntuples in a container; and attempt to open an ntuple that was not stored there. ## Checklist:. - [x] tested changes locally + cluster on single client with libdaos 2.2.0; - [x] updated the docs (if necessary). This PR fixes #10958",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11480
https://github.com/root-project/root/pull/11480:820,Usability,simpl,simplify,820,"This pull request introduces ntuple management at the DAOS container level, extending support for more than one ntuple to populate a container. ## Changes or fixes:; - Support for up to 2\^32 - 1 ntuples in a DAOS container, by assigning an index to a previously-unused portion of the DAOS Object ID address space. The index thus induces a subspace dedicated for all objects belonging to a given ntuple. The zeroth space (index `0`) is reserved for any container-wide metadata objects that may need to be stored in the future.; - `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` is a structure that concentrates the functionality for locating and retrieving stored metadata from an ntuple by its name.; - The structure hashes the name into a well-distributed 32-bit index. Collisions are expressly forbidden to simplify implementation; a different ntuple name must be provided to the sink upon creation if an ntuple stored in the container with another name happens to have the same hash (index).; - The sink (in `RPageSinkDaos` ctor) uses the locator to assign an index for a new ntuple, which may fail if the name's resulting hash collides with some other ntuple present unless the name matches. Overwriting (""recreating"") an existing ntuple is allowed in this context.; - The source (in `RPageSourceDaos::AttachImpl()`) locates the ntuple by the name to validate that it is indeed present in storage (otherwise, an exception is thrown). The objects that are read for this validation are reused as part of the ntuple metadata deserialization procedure when attaching. ; - Unit test coverage is provided for the following cases: write and read from different ntuples in a container; and attempt to open an ntuple that was not stored there. ## Checklist:. - [x] tested changes locally + cluster on single client with libdaos 2.2.0; - [x] updated the docs (if necessary). This PR fixes #10958",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11480
https://github.com/root-project/root/issues/11482:2209,Availability,down,download,2209,"Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When plotting a RooFit function the `RooCurve` will try to use the `plotSamplingHint` method to get a list of optimal point locations. When using a `RooHistPdf` or `RooHistFunc` the list contains points a little (~1e-8*range) before and after each bin boundary. ; If the bins are aligned to the range (as they often are), one point per side falls outside the range.; However, there is no guarantee that the function is safe to execute there, so this may cause a NaN to be inserted in the plot.; Furthermore, when this happens the `RooCurve` seems to stop collecting points and just uses the current list, which in case of an histogram only contains the bin boundaries, meaning that the curve is not smooth between bins. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The function is evaluated only in range, no NaN in frame, smooth function between bin boundaries. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testRooHistPdfBinning() {; RooRealVar x(""x"", """", 0., 1);; ; RooGenericPdf sqrtPdf(""sqrtPdf"", ""sqrt(x)"", x);; ; TH1F h(""h"", """", 2, 0., 1);; h.Fill(0.2, 2);; h.Fill(0.8, 1);; RooDataHist dh(""dh"", """", x, RooFit::Import(h));; RooHistPdf hpdf(""hpdf"", """", x, dh);; ; RooRealVar frac(""frac"", """", 0.5, 0, 1);; RooAddPdf p(""p"", """", RooArgSet(sqrtPdf, hpdf), frac);; ; auto frame = x.frame();; p.plotOn(frame);; frame->Draw();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Centos7, ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11482
https://github.com/root-project/root/issues/11482:2191,Deployability,install,install,2191,"Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When plotting a RooFit function the `RooCurve` will try to use the `plotSamplingHint` method to get a list of optimal point locations. When using a `RooHistPdf` or `RooHistFunc` the list contains points a little (~1e-8*range) before and after each bin boundary. ; If the bins are aligned to the range (as they often are), one point per side falls outside the range.; However, there is no guarantee that the function is safe to execute there, so this may cause a NaN to be inserted in the plot.; Furthermore, when this happens the `RooCurve` seems to stop collecting points and just uses the current list, which in case of an histogram only contains the bin boundaries, meaning that the curve is not smooth between bins. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The function is evaluated only in range, no NaN in frame, smooth function between bin boundaries. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testRooHistPdfBinning() {; RooRealVar x(""x"", """", 0., 1);; ; RooGenericPdf sqrtPdf(""sqrtPdf"", ""sqrt(x)"", x);; ; TH1F h(""h"", """", 2, 0., 1);; h.Fill(0.2, 2);; h.Fill(0.8, 1);; RooDataHist dh(""dh"", """", x, RooFit::Import(h));; RooHistPdf hpdf(""hpdf"", """", x, dh);; ; RooRealVar frac(""frac"", """", 0.5, 0, 1);; RooAddPdf p(""p"", """", RooArgSet(sqrtPdf, hpdf), frac);; ; auto frame = x.frame();; p.plotOn(frame);; frame->Draw();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Centos7, ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11482
https://github.com/root-project/root/issues/11482:877,Safety,safe,safe,877,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When plotting a RooFit function the `RooCurve` will try to use the `plotSamplingHint` method to get a list of optimal point locations. When using a `RooHistPdf` or `RooHistFunc` the list contains points a little (~1e-8*range) before and after each bin boundary. ; If the bins are aligned to the range (as they often are), one point per side falls outside the range.; However, there is no guarantee that the function is safe to execute there, so this may cause a NaN to be inserted in the plot.; Furthermore, when this happens the `RooCurve` seems to stop collecting points and just uses the current list, which in case of an histogram only contains the bin boundaries, meaning that the curve is not smooth between bins. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The function is evaluated only in range, no NaN in frame, smooth function between bin boundaries. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testRooHistPdfBinning() {; RooRealVar x(""x"", """", 0., 1);; ; RooGenericPdf sqrtPdf(""sqrtPdf"", ""sqrt(x)"", x);; ; TH1F h(""h"", """", 2, 0., 1);; h.Fill(0.2, 2);; h.Fill(0.8, 1);; RooDataHist dh(""dh"", """", x, RooFit::Import(h));; RooHistPdf hpdf(""hpdf"", """", x, dh);; ; RooRealVar frac(""frac"", """", 0.5, 0, 1);; RooAddPdf p(""p"", """", RooArgS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11482
https://github.com/root-project/root/issues/11482:1671,Testability,test,testRooHistPdfBinning,1671,"Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When plotting a RooFit function the `RooCurve` will try to use the `plotSamplingHint` method to get a list of optimal point locations. When using a `RooHistPdf` or `RooHistFunc` the list contains points a little (~1e-8*range) before and after each bin boundary. ; If the bins are aligned to the range (as they often are), one point per side falls outside the range.; However, there is no guarantee that the function is safe to execute there, so this may cause a NaN to be inserted in the plot.; Furthermore, when this happens the `RooCurve` seems to stop collecting points and just uses the current list, which in case of an histogram only contains the bin boundaries, meaning that the curve is not smooth between bins. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The function is evaluated only in range, no NaN in frame, smooth function between bin boundaries. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testRooHistPdfBinning() {; RooRealVar x(""x"", """", 0., 1);; ; RooGenericPdf sqrtPdf(""sqrtPdf"", ""sqrt(x)"", x);; ; TH1F h(""h"", """", 2, 0., 1);; h.Fill(0.2, 2);; h.Fill(0.8, 1);; RooDataHist dh(""dh"", """", x, RooFit::Import(h));; RooHistPdf hpdf(""hpdf"", """", x, dh);; ; RooRealVar frac(""frac"", """", 0.5, 0, 1);; RooAddPdf p(""p"", """", RooArgSet(sqrtPdf, hpdf), frac);; ; auto frame = x.frame();; p.plotOn(frame);; frame->Draw();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Centos7, ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11482
https://github.com/root-project/root/issues/11482:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When plotting a RooFit function the `RooCurve` will try to use the `plotSamplingHint` method to get a list of optimal point locations. When using a `RooHistPdf` or `RooHistFunc` the list contains points a little (~1e-8*range) before and after each bin boundary. ; If the bins are aligned to the range (as they often are), one point per side falls outside the range.; However, there is no guarantee that the function is safe to execute there, so this may cause a NaN to be inserted in the plot.; Furthermore, when this happens the `RooCurve` seems to stop collecting points and just uses the current list, which in case of an histogram only contains the bin boundaries, meaning that the curve is not smooth between bins. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The function is evaluated only in range, no NaN in frame, smooth function between bin boundaries. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testRooHistPdfBinning() {; RooRealVar x(""x"", """", 0., 1);; ; RooGenericPdf sqrtPdf(""sqrtPdf"", ""sqrt(x)"", x);; ; TH1F h(""h"", """", 2, 0., 1);; h.Fill(0.2, 2);; h.Fill(0.8, 1);; RooDataHist dh(""dh"", """", x, RooFit::Import(h));; RooHistPdf hpdf(""hpdf"", """", x, dh);; ; RooRealVar frac(""frac"", """", 0.5, 0, 1);; RooAddPdf p(""p"", """", RooArgS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11482
https://github.com/root-project/root/issues/11482:1209,Usability,clear,clear,1209,"ur issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When plotting a RooFit function the `RooCurve` will try to use the `plotSamplingHint` method to get a list of optimal point locations. When using a `RooHistPdf` or `RooHistFunc` the list contains points a little (~1e-8*range) before and after each bin boundary. ; If the bins are aligned to the range (as they often are), one point per side falls outside the range.; However, there is no guarantee that the function is safe to execute there, so this may cause a NaN to be inserted in the plot.; Furthermore, when this happens the `RooCurve` seems to stop collecting points and just uses the current list, which in case of an histogram only contains the bin boundaries, meaning that the curve is not smooth between bins. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The function is evaluated only in range, no NaN in frame, smooth function between bin boundaries. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testRooHistPdfBinning() {; RooRealVar x(""x"", """", 0., 1);; ; RooGenericPdf sqrtPdf(""sqrtPdf"", ""sqrt(x)"", x);; ; TH1F h(""h"", """", 2, 0., 1);; h.Fill(0.2, 2);; h.Fill(0.8, 1);; RooDataHist dh(""dh"", """", x, RooFit::Import(h));; RooHistPdf hpdf(""hpdf"", """", x, dh);; ; RooRealVar frac(""frac"", """", 0.5, 0, 1);; RooAddPdf p(""p"", """", RooArgSet(sqrtPdf, hpdf), frac);; ; auto frame = x.frame();; p.plotOn(frame);; frame->Draw();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11482
https://github.com/root-project/root/issues/11483:631,Availability,Error,Error,631,"As the title reads: TChain Add does not properly resolve globs with `?#`. Consider:; ```cpp; auto dfWriter0 = ROOT::RDataFrame(5).Define(""z"", ""42"");; dfWriter0.Snapshot<int>(""tree"", ""specTestFile0.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile00.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile000.root"", {""z""});. TChain c{};; c.Add(""specTestFile0*.root?#tree"");; for(auto i = 0u; i < c.GetEntries(); ++i); 	c.GetEntry(i);. gSystem->Unlink((""specTestFile0.root""));; gSystem->Unlink((""specTestFile00.root""));; gSystem->Unlink((""specTestFile000.root""));; ```; Current behaviour --> invalid parsing:; ```; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile0.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile00.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile000.root#tree; ```; ; @vepadulano and I just saw [here](https://root.cern/doc/master/classTChain.html#a78a896924ac6c7d3691b7e013bcbfb1c) that the question mark is a valid wildcard in the glob expansion of `Add`. Note that in this particular minimal reproducer, I can alternatively use:; ```cpp; TChain c{""tree""};; c.Add(""specTestFile0*.root"");; ```; I used precisely this example in order to show that even a single `Add` results in undesired behaviour.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11483
https://github.com/root-project/root/issues/11483:726,Availability,Error,Error,726,"As the title reads: TChain Add does not properly resolve globs with `?#`. Consider:; ```cpp; auto dfWriter0 = ROOT::RDataFrame(5).Define(""z"", ""42"");; dfWriter0.Snapshot<int>(""tree"", ""specTestFile0.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile00.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile000.root"", {""z""});. TChain c{};; c.Add(""specTestFile0*.root?#tree"");; for(auto i = 0u; i < c.GetEntries(); ++i); 	c.GetEntry(i);. gSystem->Unlink((""specTestFile0.root""));; gSystem->Unlink((""specTestFile00.root""));; gSystem->Unlink((""specTestFile000.root""));; ```; Current behaviour --> invalid parsing:; ```; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile0.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile00.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile000.root#tree; ```; ; @vepadulano and I just saw [here](https://root.cern/doc/master/classTChain.html#a78a896924ac6c7d3691b7e013bcbfb1c) that the question mark is a valid wildcard in the glob expansion of `Add`. Note that in this particular minimal reproducer, I can alternatively use:; ```cpp; TChain c{""tree""};; c.Add(""specTestFile0*.root"");; ```; I used precisely this example in order to show that even a single `Add` results in undesired behaviour.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11483
https://github.com/root-project/root/issues/11483:822,Availability,Error,Error,822,"As the title reads: TChain Add does not properly resolve globs with `?#`. Consider:; ```cpp; auto dfWriter0 = ROOT::RDataFrame(5).Define(""z"", ""42"");; dfWriter0.Snapshot<int>(""tree"", ""specTestFile0.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile00.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile000.root"", {""z""});. TChain c{};; c.Add(""specTestFile0*.root?#tree"");; for(auto i = 0u; i < c.GetEntries(); ++i); 	c.GetEntry(i);. gSystem->Unlink((""specTestFile0.root""));; gSystem->Unlink((""specTestFile00.root""));; gSystem->Unlink((""specTestFile000.root""));; ```; Current behaviour --> invalid parsing:; ```; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile0.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile00.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile000.root#tree; ```; ; @vepadulano and I just saw [here](https://root.cern/doc/master/classTChain.html#a78a896924ac6c7d3691b7e013bcbfb1c) that the question mark is a valid wildcard in the glob expansion of `Add`. Note that in this particular minimal reproducer, I can alternatively use:; ```cpp; TChain c{""tree""};; c.Add(""specTestFile0*.root"");; ```; I used precisely this example in order to show that even a single `Add` results in undesired behaviour.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11483
https://github.com/root-project/root/issues/11483:649,Performance,Load,LoadTree,649,"As the title reads: TChain Add does not properly resolve globs with `?#`. Consider:; ```cpp; auto dfWriter0 = ROOT::RDataFrame(5).Define(""z"", ""42"");; dfWriter0.Snapshot<int>(""tree"", ""specTestFile0.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile00.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile000.root"", {""z""});. TChain c{};; c.Add(""specTestFile0*.root?#tree"");; for(auto i = 0u; i < c.GetEntries(); ++i); 	c.GetEntry(i);. gSystem->Unlink((""specTestFile0.root""));; gSystem->Unlink((""specTestFile00.root""));; gSystem->Unlink((""specTestFile000.root""));; ```; Current behaviour --> invalid parsing:; ```; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile0.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile00.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile000.root#tree; ```; ; @vepadulano and I just saw [here](https://root.cern/doc/master/classTChain.html#a78a896924ac6c7d3691b7e013bcbfb1c) that the question mark is a valid wildcard in the glob expansion of `Add`. Note that in this particular minimal reproducer, I can alternatively use:; ```cpp; TChain c{""tree""};; c.Add(""specTestFile0*.root"");; ```; I used precisely this example in order to show that even a single `Add` results in undesired behaviour.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11483
https://github.com/root-project/root/issues/11483:744,Performance,Load,LoadTree,744,"As the title reads: TChain Add does not properly resolve globs with `?#`. Consider:; ```cpp; auto dfWriter0 = ROOT::RDataFrame(5).Define(""z"", ""42"");; dfWriter0.Snapshot<int>(""tree"", ""specTestFile0.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile00.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile000.root"", {""z""});. TChain c{};; c.Add(""specTestFile0*.root?#tree"");; for(auto i = 0u; i < c.GetEntries(); ++i); 	c.GetEntry(i);. gSystem->Unlink((""specTestFile0.root""));; gSystem->Unlink((""specTestFile00.root""));; gSystem->Unlink((""specTestFile000.root""));; ```; Current behaviour --> invalid parsing:; ```; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile0.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile00.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile000.root#tree; ```; ; @vepadulano and I just saw [here](https://root.cern/doc/master/classTChain.html#a78a896924ac6c7d3691b7e013bcbfb1c) that the question mark is a valid wildcard in the glob expansion of `Add`. Note that in this particular minimal reproducer, I can alternatively use:; ```cpp; TChain c{""tree""};; c.Add(""specTestFile0*.root"");; ```; I used precisely this example in order to show that even a single `Add` results in undesired behaviour.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11483
https://github.com/root-project/root/issues/11483:840,Performance,Load,LoadTree,840,"As the title reads: TChain Add does not properly resolve globs with `?#`. Consider:; ```cpp; auto dfWriter0 = ROOT::RDataFrame(5).Define(""z"", ""42"");; dfWriter0.Snapshot<int>(""tree"", ""specTestFile0.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile00.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile000.root"", {""z""});. TChain c{};; c.Add(""specTestFile0*.root?#tree"");; for(auto i = 0u; i < c.GetEntries(); ++i); 	c.GetEntry(i);. gSystem->Unlink((""specTestFile0.root""));; gSystem->Unlink((""specTestFile00.root""));; gSystem->Unlink((""specTestFile000.root""));; ```; Current behaviour --> invalid parsing:; ```; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile0.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile00.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile000.root#tree; ```; ; @vepadulano and I just saw [here](https://root.cern/doc/master/classTChain.html#a78a896924ac6c7d3691b7e013bcbfb1c) that the question mark is a valid wildcard in the glob expansion of `Add`. Note that in this particular minimal reproducer, I can alternatively use:; ```cpp; TChain c{""tree""};; c.Add(""specTestFile0*.root"");; ```; I used precisely this example in order to show that even a single `Add` results in undesired behaviour.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11483
https://github.com/root-project/root/issues/11484:241,Availability,down,down,241,The test roottest/root/meta/genreflex/ROOT-5768 currently include `boost` header files and thus is disable. This test the `--interpreteronly` flag of genreflex. See https://sft.its.cern.ch/jira/browse/ROOT-5768. The test needs to be trimmed down to no longer include the boost header files OR rewritten without them.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11484
https://github.com/root-project/root/issues/11484:4,Testability,test,test,4,The test roottest/root/meta/genreflex/ROOT-5768 currently include `boost` header files and thus is disable. This test the `--interpreteronly` flag of genreflex. See https://sft.its.cern.ch/jira/browse/ROOT-5768. The test needs to be trimmed down to no longer include the boost header files OR rewritten without them.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11484
https://github.com/root-project/root/issues/11484:113,Testability,test,test,113,The test roottest/root/meta/genreflex/ROOT-5768 currently include `boost` header files and thus is disable. This test the `--interpreteronly` flag of genreflex. See https://sft.its.cern.ch/jira/browse/ROOT-5768. The test needs to be trimmed down to no longer include the boost header files OR rewritten without them.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11484
https://github.com/root-project/root/issues/11484:216,Testability,test,test,216,The test roottest/root/meta/genreflex/ROOT-5768 currently include `boost` header files and thus is disable. This test the `--interpreteronly` flag of genreflex. See https://sft.its.cern.ch/jira/browse/ROOT-5768. The test needs to be trimmed down to no longer include the boost header files OR rewritten without them.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11484
https://github.com/root-project/root/pull/11485:222,Availability,redundant,redundant,222,The commit implements a few new unit tests and also fixes one bug related to the normalization of a RooAddPdf when the custom normalization set of its components is reset. There is also some code improvement by removing a redundant data member of the `RooAddPdf` and `RooAddModel` classes. More details in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11485
https://github.com/root-project/root/pull/11485:222,Safety,redund,redundant,222,The commit implements a few new unit tests and also fixes one bug related to the normalization of a RooAddPdf when the custom normalization set of its components is reset. There is also some code improvement by removing a redundant data member of the `RooAddPdf` and `RooAddModel` classes. More details in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11485
https://github.com/root-project/root/pull/11485:37,Testability,test,tests,37,The commit implements a few new unit tests and also fixes one bug related to the normalization of a RooAddPdf when the custom normalization set of its components is reset. There is also some code improvement by removing a redundant data member of the `RooAddPdf` and `RooAddModel` classes. More details in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11485
https://github.com/root-project/root/issues/11486:221,Integrability,depend,depend,221,"### Describe the bug. If a RooProdPdf is in a RooAddPdf, its values change if one changes the normalization range of its factors with `RooAbsPdf::normRange()`. ### Expected behavior. The values of a RooProdPdf should not depend on the `normRange()` of its factors, because the RooProdPdf is responsible for normalizing itself. ### To Reproduce. Enable the new unit test in `testRooProdPdf` shipped with https://github.com/root-project/root/pull/11485. ### Setup. ROOT master on Arch Linux. ### Additional context. It is important now to fix the issues related to the `RooAbsPdf::normRange()` feature, because as of https://github.com/root-project/root/pull/11455 it is used in multi-range fits. Thus, we need to make sure it's less fragile. After this issue is fixed, it should be verified with `stressRooFit` that things would still work if one were to set the normalization ranges of all PDFs in the computation graph in [RooAbsOptTestStatistic::initSlave()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx#L294) not just the top-level PDF:. For debugging, it could be helpful to replace the RooProdPdfs with `RooFixedProdPdf` objects, which explicitly represent the conputation graph of a RooProdPdf for a given normalization set without internal caching:; ```C++; if(auto prodPdf = dynamic_cast<RooProdPdf *>(pdf)) {; auto normalizedPdf = std::make_unique<RooFixedProdPdf>(*prodPdf, currNormSet);. replaceArg(*normalizedPdf, *pdf);. newNodes.emplace_back(std::move(normalizedPdf));. continue;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11486
https://github.com/root-project/root/issues/11486:365,Testability,test,test,365,"### Describe the bug. If a RooProdPdf is in a RooAddPdf, its values change if one changes the normalization range of its factors with `RooAbsPdf::normRange()`. ### Expected behavior. The values of a RooProdPdf should not depend on the `normRange()` of its factors, because the RooProdPdf is responsible for normalizing itself. ### To Reproduce. Enable the new unit test in `testRooProdPdf` shipped with https://github.com/root-project/root/pull/11485. ### Setup. ROOT master on Arch Linux. ### Additional context. It is important now to fix the issues related to the `RooAbsPdf::normRange()` feature, because as of https://github.com/root-project/root/pull/11455 it is used in multi-range fits. Thus, we need to make sure it's less fragile. After this issue is fixed, it should be verified with `stressRooFit` that things would still work if one were to set the normalization ranges of all PDFs in the computation graph in [RooAbsOptTestStatistic::initSlave()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx#L294) not just the top-level PDF:. For debugging, it could be helpful to replace the RooProdPdfs with `RooFixedProdPdf` objects, which explicitly represent the conputation graph of a RooProdPdf for a given normalization set without internal caching:; ```C++; if(auto prodPdf = dynamic_cast<RooProdPdf *>(pdf)) {; auto normalizedPdf = std::make_unique<RooFixedProdPdf>(*prodPdf, currNormSet);. replaceArg(*normalizedPdf, *pdf);. newNodes.emplace_back(std::move(normalizedPdf));. continue;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11486
https://github.com/root-project/root/issues/11486:374,Testability,test,testRooProdPdf,374,"### Describe the bug. If a RooProdPdf is in a RooAddPdf, its values change if one changes the normalization range of its factors with `RooAbsPdf::normRange()`. ### Expected behavior. The values of a RooProdPdf should not depend on the `normRange()` of its factors, because the RooProdPdf is responsible for normalizing itself. ### To Reproduce. Enable the new unit test in `testRooProdPdf` shipped with https://github.com/root-project/root/pull/11485. ### Setup. ROOT master on Arch Linux. ### Additional context. It is important now to fix the issues related to the `RooAbsPdf::normRange()` feature, because as of https://github.com/root-project/root/pull/11455 it is used in multi-range fits. Thus, we need to make sure it's less fragile. After this issue is fixed, it should be verified with `stressRooFit` that things would still work if one were to set the normalization ranges of all PDFs in the computation graph in [RooAbsOptTestStatistic::initSlave()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx#L294) not just the top-level PDF:. For debugging, it could be helpful to replace the RooProdPdfs with `RooFixedProdPdf` objects, which explicitly represent the conputation graph of a RooProdPdf for a given normalization set without internal caching:; ```C++; if(auto prodPdf = dynamic_cast<RooProdPdf *>(pdf)) {; auto normalizedPdf = std::make_unique<RooFixedProdPdf>(*prodPdf, currNormSet);. replaceArg(*normalizedPdf, *pdf);. newNodes.emplace_back(std::move(normalizedPdf));. continue;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11486
https://github.com/root-project/root/issues/11487:201,Modifiability,variab,variable,201,"### Describe the bug. If one combines two weighted datasets to a new dataset meant for simultaneous fits, the weight information is unexpectedly lost. This can be circumvented by creating a new weight variable and using the `RooFit::WeightVar()` command argument, but users expect that this gets dealt with automatically. ### Expected behavior. The new RooDataSet should also be weighted. ### To Reproduce. Run the code I wrote as an answer to a question on the forum:; https://root-forum.cern.ch/t/roofit-simultaneous-template-fit-on-two-different-variables/51774/3. Replace this part:; ```c++; // A bit annoying, but we have to create a weight variable ourselves to; // transfer the weights from the component datsets; RooRealVar w(""weight"", ""weight"", 1.0);; RooDataSet data{; ""data"",; ""data"",; {x, w},; Index(category),; Import({{""cat1"", data1.get()}, {""cat2"", data2.get()}}),; WeightVar(""weight"")};; ```. with this:. ```c++; // A bit annoying, but we have to create a weight variable ourselves to; // transfer the weights from the component datsets; RooDataSet data{; ""data"",; ""data"",; {x, w},; Index(category),; Import({{""cat1"", data1.get()}, {""cat2"", data2.get()}})};; ```; When the `WeightVar` argument is removed, the combined dataset is not weighted anymore, which is completely unexpected as the input datasets have the same layout and are both weighted. ### Setup. ROOT `master` on Arch Linux. ### Additional context; -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11487
https://github.com/root-project/root/issues/11487:549,Modifiability,variab,variables,549,"### Describe the bug. If one combines two weighted datasets to a new dataset meant for simultaneous fits, the weight information is unexpectedly lost. This can be circumvented by creating a new weight variable and using the `RooFit::WeightVar()` command argument, but users expect that this gets dealt with automatically. ### Expected behavior. The new RooDataSet should also be weighted. ### To Reproduce. Run the code I wrote as an answer to a question on the forum:; https://root-forum.cern.ch/t/roofit-simultaneous-template-fit-on-two-different-variables/51774/3. Replace this part:; ```c++; // A bit annoying, but we have to create a weight variable ourselves to; // transfer the weights from the component datsets; RooRealVar w(""weight"", ""weight"", 1.0);; RooDataSet data{; ""data"",; ""data"",; {x, w},; Index(category),; Import({{""cat1"", data1.get()}, {""cat2"", data2.get()}}),; WeightVar(""weight"")};; ```. with this:. ```c++; // A bit annoying, but we have to create a weight variable ourselves to; // transfer the weights from the component datsets; RooDataSet data{; ""data"",; ""data"",; {x, w},; Index(category),; Import({{""cat1"", data1.get()}, {""cat2"", data2.get()}})};; ```; When the `WeightVar` argument is removed, the combined dataset is not weighted anymore, which is completely unexpected as the input datasets have the same layout and are both weighted. ### Setup. ROOT `master` on Arch Linux. ### Additional context; -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11487
https://github.com/root-project/root/issues/11487:646,Modifiability,variab,variable,646,"### Describe the bug. If one combines two weighted datasets to a new dataset meant for simultaneous fits, the weight information is unexpectedly lost. This can be circumvented by creating a new weight variable and using the `RooFit::WeightVar()` command argument, but users expect that this gets dealt with automatically. ### Expected behavior. The new RooDataSet should also be weighted. ### To Reproduce. Run the code I wrote as an answer to a question on the forum:; https://root-forum.cern.ch/t/roofit-simultaneous-template-fit-on-two-different-variables/51774/3. Replace this part:; ```c++; // A bit annoying, but we have to create a weight variable ourselves to; // transfer the weights from the component datsets; RooRealVar w(""weight"", ""weight"", 1.0);; RooDataSet data{; ""data"",; ""data"",; {x, w},; Index(category),; Import({{""cat1"", data1.get()}, {""cat2"", data2.get()}}),; WeightVar(""weight"")};; ```. with this:. ```c++; // A bit annoying, but we have to create a weight variable ourselves to; // transfer the weights from the component datsets; RooDataSet data{; ""data"",; ""data"",; {x, w},; Index(category),; Import({{""cat1"", data1.get()}, {""cat2"", data2.get()}})};; ```; When the `WeightVar` argument is removed, the combined dataset is not weighted anymore, which is completely unexpected as the input datasets have the same layout and are both weighted. ### Setup. ROOT `master` on Arch Linux. ### Additional context; -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11487
https://github.com/root-project/root/issues/11487:979,Modifiability,variab,variable,979,"### Describe the bug. If one combines two weighted datasets to a new dataset meant for simultaneous fits, the weight information is unexpectedly lost. This can be circumvented by creating a new weight variable and using the `RooFit::WeightVar()` command argument, but users expect that this gets dealt with automatically. ### Expected behavior. The new RooDataSet should also be weighted. ### To Reproduce. Run the code I wrote as an answer to a question on the forum:; https://root-forum.cern.ch/t/roofit-simultaneous-template-fit-on-two-different-variables/51774/3. Replace this part:; ```c++; // A bit annoying, but we have to create a weight variable ourselves to; // transfer the weights from the component datsets; RooRealVar w(""weight"", ""weight"", 1.0);; RooDataSet data{; ""data"",; ""data"",; {x, w},; Index(category),; Import({{""cat1"", data1.get()}, {""cat2"", data2.get()}}),; WeightVar(""weight"")};; ```. with this:. ```c++; // A bit annoying, but we have to create a weight variable ourselves to; // transfer the weights from the component datsets; RooDataSet data{; ""data"",; ""data"",; {x, w},; Index(category),; Import({{""cat1"", data1.get()}, {""cat2"", data2.get()}})};; ```; When the `WeightVar` argument is removed, the combined dataset is not weighted anymore, which is completely unexpected as the input datasets have the same layout and are both weighted. ### Setup. ROOT `master` on Arch Linux. ### Additional context; -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11487
https://github.com/root-project/root/pull/11488:24,Modifiability,config,config,24,Fix the output of `root-config.bat` that makes several TMVA tests failing due to extra spaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11488
https://github.com/root-project/root/pull/11488:60,Testability,test,tests,60,Fix the output of `root-config.bat` that makes several TMVA tests failing due to extra spaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11488
https://github.com/root-project/root/issues/11492:332,Integrability,depend,dependent,332,"The issue described in https://github.com/root-project/root/issues/11329 was work-around for the specific case of `std::vector<int>` being an hidden decl in the `regex` module (in #11468). However, this same problem can (will?) happen to any arbitrary class whose decl just happens to be already present as a ""hidden"" decl inside a dependent module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11492
https://github.com/root-project/root/issues/11494:1227,Availability,error,error,1227,"ady released as part of exception handling. See behavior below:; ```c++; root [0] .x pointer_not_allocated_error.cc; free(): double free detected in tcache 2; ```. In principle, this seems to be dependent on NRVO. Crash seems to be avoided either by _(i)_ commenting out; ```c++; histograms.push_back(h);; ```; ; or _(ii)_ changing the `return` statement as follows; ```diff; - return histograms;; + return {h};; ```. ### To Reproduce; The issue can be reproduced with the following code in ArchLinux x86_64 with ROOT master:; ```c++; vector<ROOT::RDF::RResultPtr<TH1D>> pointer_not_allocated_error(){; // Create a data frame with 100 rows; ROOT::RDataFrame rdf(100);. // Define a new column `x` that contains random numbers and create a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff73b4432 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155; #5 0x00007ffff72ab22c in malloc_printerr (str=str@entry=0x7ffff73b6ff8 ""free(): double free detected in tcache 2"") at malloc.c:5660; #6 0x00007ffff72ad587 in _int_free (av=0x7ffff7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11494
https://github.com/root-project/root/issues/11494:1269,Availability,error,error,1269,"ady released as part of exception handling. See behavior below:; ```c++; root [0] .x pointer_not_allocated_error.cc; free(): double free detected in tcache 2; ```. In principle, this seems to be dependent on NRVO. Crash seems to be avoided either by _(i)_ commenting out; ```c++; histograms.push_back(h);; ```; ; or _(ii)_ changing the `return` statement as follows; ```diff; - return histograms;; + return {h};; ```. ### To Reproduce; The issue can be reproduced with the following code in ArchLinux x86_64 with ROOT master:; ```c++; vector<ROOT::RDF::RResultPtr<TH1D>> pointer_not_allocated_error(){; // Create a data frame with 100 rows; ROOT::RDataFrame rdf(100);. // Define a new column `x` that contains random numbers and create a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff73b4432 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155; #5 0x00007ffff72ab22c in malloc_printerr (str=str@entry=0x7ffff73b6ff8 ""free(): double free detected in tcache 2"") at malloc.c:5660; #6 0x00007ffff72ad587 in _int_free (av=0x7ffff7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11494
https://github.com/root-project/root/issues/11494:2915,Availability,error,error,2915,"ate a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff73b4432 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155; #5 0x00007ffff72ab22c in malloc_printerr (str=str@entry=0x7ffff73b6ff8 ""free(): double free detected in tcache 2"") at malloc.c:5660; #6 0x00007ffff72ad587 in _int_free (av=0x7ffff73f1ba0 <main_arena>, p=0x55555e7134c0, have_lock=have_lock@entry=0) at malloc.c:4469; #7 0x00007ffff72af9f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3385; #8 0x00007ffff18d07b4 in std::_Vector_base<ROOT::RDF::RResultPtr<TH1D>, std::allocator<ROOT::RDF::RResultPtr<TH1D> > >::~_Vector_base (this=0x55555881f750) at /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.0/../../../../include/c++/12.2.0/bits/stl_vector.h:366; #9 0x00007ffff23aa435 in cling::Value::~Value() () from /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so; #10 0x00007ffff21a1869 in TCling::ProcessLine (this=0x5555555ee950, line=0x5555563e9c60 "".X /tmp/./pointer_not_allocated_error.C"", error=0x7fffffffb600) at ../core/metacling/src/TCling.cxx:2633; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11494
https://github.com/root-project/root/issues/11494:254,Deployability,release,released,254,"- [X] Checked for duplicates. ### Describe the bug; A non-void returning function (specifically, returning `std::vector<ROOT::RDF::RResultPtr<TH1D>>`) that throws, causes `cling::Value::~Value()` to try freeing resources that were, in principle, already released as part of exception handling. See behavior below:; ```c++; root [0] .x pointer_not_allocated_error.cc; free(): double free detected in tcache 2; ```. In principle, this seems to be dependent on NRVO. Crash seems to be avoided either by _(i)_ commenting out; ```c++; histograms.push_back(h);; ```; ; or _(ii)_ changing the `return` statement as follows; ```diff; - return histograms;; + return {h};; ```. ### To Reproduce; The issue can be reproduced with the following code in ArchLinux x86_64 with ROOT master:; ```c++; vector<ROOT::RDF::RResultPtr<TH1D>> pointer_not_allocated_error(){; // Create a data frame with 100 rows; ROOT::RDataFrame rdf(100);. // Define a new column `x` that contains random numbers and create a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11494
https://github.com/root-project/root/issues/11494:1419,Energy Efficiency,allocate,allocated-when-adding-rresultptr-to-vector,1419,"ms to be dependent on NRVO. Crash seems to be avoided either by _(i)_ commenting out; ```c++; histograms.push_back(h);; ```; ; or _(ii)_ changing the `return` statement as follows; ```diff; - return histograms;; + return {h};; ```. ### To Reproduce; The issue can be reproduced with the following code in ArchLinux x86_64 with ROOT master:; ```c++; vector<ROOT::RDF::RResultPtr<TH1D>> pointer_not_allocated_error(){; // Create a data frame with 100 rows; ROOT::RDataFrame rdf(100);. // Define a new column `x` that contains random numbers and create a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff73b4432 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155; #5 0x00007ffff72ab22c in malloc_printerr (str=str@entry=0x7ffff73b6ff8 ""free(): double free detected in tcache 2"") at malloc.c:5660; #6 0x00007ffff72ad587 in _int_free (av=0x7ffff73f1ba0 <main_arena>, p=0x55555e7134c0, have_lock=have_lock@entry=0) at malloc.c:4469; #7 0x00007ffff72af9f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3385; #8 0x00007ffff18d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11494
https://github.com/root-project/root/issues/11494:445,Integrability,depend,dependent,445,"- [X] Checked for duplicates. ### Describe the bug; A non-void returning function (specifically, returning `std::vector<ROOT::RDF::RResultPtr<TH1D>>`) that throws, causes `cling::Value::~Value()` to try freeing resources that were, in principle, already released as part of exception handling. See behavior below:; ```c++; root [0] .x pointer_not_allocated_error.cc; free(): double free detected in tcache 2; ```. In principle, this seems to be dependent on NRVO. Crash seems to be avoided either by _(i)_ commenting out; ```c++; histograms.push_back(h);; ```; ; or _(ii)_ changing the `return` statement as follows; ```diff; - return histograms;; + return {h};; ```. ### To Reproduce; The issue can be reproduced with the following code in ArchLinux x86_64 with ROOT master:; ```c++; vector<ROOT::RDF::RResultPtr<TH1D>> pointer_not_allocated_error(){; // Create a data frame with 100 rows; ROOT::RDataFrame rdf(100);. // Define a new column `x` that contains random numbers and create a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11494
https://github.com/root-project/root/issues/11494:1596,Performance,optimiz,optimized,1596,"_ changing the `return` statement as follows; ```diff; - return histograms;; + return {h};; ```. ### To Reproduce; The issue can be reproduced with the following code in ArchLinux x86_64 with ROOT master:; ```c++; vector<ROOT::RDF::RResultPtr<TH1D>> pointer_not_allocated_error(){; // Create a data frame with 100 rows; ROOT::RDataFrame rdf(100);. // Define a new column `x` that contains random numbers and create a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff73b4432 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155; #5 0x00007ffff72ab22c in malloc_printerr (str=str@entry=0x7ffff73b6ff8 ""free(): double free detected in tcache 2"") at malloc.c:5660; #6 0x00007ffff72ad587 in _int_free (av=0x7ffff73f1ba0 <main_arena>, p=0x55555e7134c0, have_lock=have_lock@entry=0) at malloc.c:4469; #7 0x00007ffff72af9f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3385; #8 0x00007ffff18d07b4 in std::_Vector_base<ROOT::RDF::RResultPtr<TH1D>, std::allocator<ROOT::RDF::RResultPtr<TH1D> > >::~_Vector_base (this=0x55555881f7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11494
https://github.com/root-project/root/issues/11494:1747,Performance,optimiz,optimized,1747,"llowing code in ArchLinux x86_64 with ROOT master:; ```c++; vector<ROOT::RDF::RResultPtr<TH1D>> pointer_not_allocated_error(){; // Create a data frame with 100 rows; ROOT::RDataFrame rdf(100);. // Define a new column `x` that contains random numbers and create a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff73b4432 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155; #5 0x00007ffff72ab22c in malloc_printerr (str=str@entry=0x7ffff73b6ff8 ""free(): double free detected in tcache 2"") at malloc.c:5660; #6 0x00007ffff72ad587 in _int_free (av=0x7ffff73f1ba0 <main_arena>, p=0x55555e7134c0, have_lock=have_lock@entry=0) at malloc.c:4469; #7 0x00007ffff72af9f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3385; #8 0x00007ffff18d07b4 in std::_Vector_base<ROOT::RDF::RResultPtr<TH1D>, std::allocator<ROOT::RDF::RResultPtr<TH1D> > >::~_Vector_base (this=0x55555881f750) at /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.0/../../../../include/c++/12.2.0/bits/stl_vector.h:366; #9 0x00007ffff23aa435 in cling::Value::~Value() () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11494
https://github.com/root-project/root/issues/11494:2385,Performance,optimiz,optimized,2385,"ate a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff73b4432 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155; #5 0x00007ffff72ab22c in malloc_printerr (str=str@entry=0x7ffff73b6ff8 ""free(): double free detected in tcache 2"") at malloc.c:5660; #6 0x00007ffff72ad587 in _int_free (av=0x7ffff73f1ba0 <main_arena>, p=0x55555e7134c0, have_lock=have_lock@entry=0) at malloc.c:4469; #7 0x00007ffff72af9f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3385; #8 0x00007ffff18d07b4 in std::_Vector_base<ROOT::RDF::RResultPtr<TH1D>, std::allocator<ROOT::RDF::RResultPtr<TH1D> > >::~_Vector_base (this=0x55555881f750) at /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.0/../../../../include/c++/12.2.0/bits/stl_vector.h:366; #9 0x00007ffff23aa435 in cling::Value::~Value() () from /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so; #10 0x00007ffff21a1869 in TCling::ProcessLine (this=0x5555555ee950, line=0x5555563e9c60 "".X /tmp/./pointer_not_allocated_error.C"", error=0x7fffffffb600) at ../core/metacling/src/TCling.cxx:2633; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11494
https://github.com/root-project/root/issues/11494:387,Safety,detect,detected,387,"- [X] Checked for duplicates. ### Describe the bug; A non-void returning function (specifically, returning `std::vector<ROOT::RDF::RResultPtr<TH1D>>`) that throws, causes `cling::Value::~Value()` to try freeing resources that were, in principle, already released as part of exception handling. See behavior below:; ```c++; root [0] .x pointer_not_allocated_error.cc; free(): double free detected in tcache 2; ```. In principle, this seems to be dependent on NRVO. Crash seems to be avoided either by _(i)_ commenting out; ```c++; histograms.push_back(h);; ```; ; or _(ii)_ changing the `return` statement as follows; ```diff; - return histograms;; + return {h};; ```. ### To Reproduce; The issue can be reproduced with the following code in ArchLinux x86_64 with ROOT master:; ```c++; vector<ROOT::RDF::RResultPtr<TH1D>> pointer_not_allocated_error(){; // Create a data frame with 100 rows; ROOT::RDataFrame rdf(100);. // Define a new column `x` that contains random numbers and create a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11494
https://github.com/root-project/root/issues/11494:482,Safety,avoid,avoided,482,"- [X] Checked for duplicates. ### Describe the bug; A non-void returning function (specifically, returning `std::vector<ROOT::RDF::RResultPtr<TH1D>>`) that throws, causes `cling::Value::~Value()` to try freeing resources that were, in principle, already released as part of exception handling. See behavior below:; ```c++; root [0] .x pointer_not_allocated_error.cc; free(): double free detected in tcache 2; ```. In principle, this seems to be dependent on NRVO. Crash seems to be avoided either by _(i)_ commenting out; ```c++; histograms.push_back(h);; ```; ; or _(ii)_ changing the `return` statement as follows; ```diff; - return histograms;; + return {h};; ```. ### To Reproduce; The issue can be reproduced with the following code in ArchLinux x86_64 with ROOT master:; ```c++; vector<ROOT::RDF::RResultPtr<TH1D>> pointer_not_allocated_error(){; // Create a data frame with 100 rows; ROOT::RDataFrame rdf(100);. // Define a new column `x` that contains random numbers and create a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11494
https://github.com/root-project/root/issues/11494:1913,Safety,abort,abort,1913,"OOT::RDataFrame rdf(100);. // Define a new column `x` that contains random numbers and create a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff73b4432 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155; #5 0x00007ffff72ab22c in malloc_printerr (str=str@entry=0x7ffff73b6ff8 ""free(): double free detected in tcache 2"") at malloc.c:5660; #6 0x00007ffff72ad587 in _int_free (av=0x7ffff73f1ba0 <main_arena>, p=0x55555e7134c0, have_lock=have_lock@entry=0) at malloc.c:4469; #7 0x00007ffff72af9f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3385; #8 0x00007ffff18d07b4 in std::_Vector_base<ROOT::RDF::RResultPtr<TH1D>, std::allocator<ROOT::RDF::RResultPtr<TH1D> > >::~_Vector_base (this=0x55555881f750) at /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.0/../../../../include/c++/12.2.0/bits/stl_vector.h:366; #9 0x00007ffff23aa435 in cling::Value::~Value() () from /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so; #10 0x00007ffff21a1869 in TCling::ProcessLine (this=0x5555555ee950, line=0x5555563e9c60 "".X /tmp/./pointer_n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11494
https://github.com/root-project/root/issues/11494:2163,Safety,detect,detected,2163,"ate a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff73b4432 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155; #5 0x00007ffff72ab22c in malloc_printerr (str=str@entry=0x7ffff73b6ff8 ""free(): double free detected in tcache 2"") at malloc.c:5660; #6 0x00007ffff72ad587 in _int_free (av=0x7ffff73f1ba0 <main_arena>, p=0x55555e7134c0, have_lock=have_lock@entry=0) at malloc.c:4469; #7 0x00007ffff72af9f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3385; #8 0x00007ffff18d07b4 in std::_Vector_base<ROOT::RDF::RResultPtr<TH1D>, std::allocator<ROOT::RDF::RResultPtr<TH1D> > >::~_Vector_base (this=0x55555881f750) at /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.0/../../../../include/c++/12.2.0/bits/stl_vector.h:366; #9 0x00007ffff23aa435 in cling::Value::~Value() () from /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so; #10 0x00007ffff21a1869 in TCling::ProcessLine (this=0x5555555ee950, line=0x5555563e9c60 "".X /tmp/./pointer_not_allocated_error.C"", error=0x7fffffffb600) at ../core/metacling/src/TCling.cxx:2633; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11494
https://github.com/root-project/root/issues/11495:14,Availability,error,error,14,"I'm seeing an error when building an application with root 6.26.06, gcc 11.2 and Kokkos 3.7. I didn't see this when building the same source against root 6.24.00, Kokkos 3.4 with gcc 9.3. Nothing in the source is explicitly calling TExecutorCRTP. . Before I start playing with all permutations of root / gcc / kokkos to see where the issue starts, I'm wondering if anyone has seen this before or has some advice. This is the error I see:. ```; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:191:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 191 | auto TExecutorCRTP<SubC>::Map(F func, ROOT::TSeq<INTEGER> args) -> std::vector<typename std::result_of<F(INTEGER)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::initializer_list<T>)’; 120 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:118:84: note: ‘template<class SubC> template<class F, class INTEGER, class Cond> std::vector<typename std::result_of<F(INTEGER",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11495
https://github.com/root-project/root/issues/11495:425,Availability,error,error,425,"I'm seeing an error when building an application with root 6.26.06, gcc 11.2 and Kokkos 3.7. I didn't see this when building the same source against root 6.24.00, Kokkos 3.4 with gcc 9.3. Nothing in the source is explicitly calling TExecutorCRTP. . Before I start playing with all permutations of root / gcc / kokkos to see where the issue starts, I'm wondering if anyone has seen this before or has some advice. This is the error I see:. ```; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:191:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 191 | auto TExecutorCRTP<SubC>::Map(F func, ROOT::TSeq<INTEGER> args) -> std::vector<typename std::result_of<F(INTEGER)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::initializer_list<T>)’; 120 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:118:84: note: ‘template<class SubC> template<class F, class INTEGER, class Cond> std::vector<typename std::result_of<F(INTEGER",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11495
https://github.com/root-project/root/issues/11495:512,Availability,error,error,512,"I'm seeing an error when building an application with root 6.26.06, gcc 11.2 and Kokkos 3.7. I didn't see this when building the same source against root 6.24.00, Kokkos 3.4 with gcc 9.3. Nothing in the source is explicitly calling TExecutorCRTP. . Before I start playing with all permutations of root / gcc / kokkos to see where the issue starts, I'm wondering if anyone has seen this before or has some advice. This is the error I see:. ```; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:191:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 191 | auto TExecutorCRTP<SubC>::Map(F func, ROOT::TSeq<INTEGER> args) -> std::vector<typename std::result_of<F(INTEGER)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::initializer_list<T>)’; 120 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:118:84: note: ‘template<class SubC> template<class F, class INTEGER, class Cond> std::vector<typename std::result_of<F(INTEGER",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11495
https://github.com/root-project/root/issues/11495:2686,Availability,error,error,2686,"xecutorCRTP.hxx:118:84: note: ‘template<class SubC> template<class F, class INTEGER, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 118 | template<class F, class INTEGER, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:116:60: note: ‘template<class SubC> template<class F, class Cond> std::vector<typename std::result_of<F()>::type> ROOT::TExecutorCRTP<SubC>::Map(F, unsigned int)’; 116 | template<class F, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:203:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::initializer_list<T>)’; 203 | auto TExecutorCRTP<SubC>::Map(F func, std::initializer_list<T> args) -> std::vector<typename std::result_of<F(T)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11495
https://github.com/root-project/root/issues/11495:4864,Availability,error,error,4864,"e/ROOT/TExecutorCRTP.hxx:118:84: note: ‘template<class SubC> template<class F, class INTEGER, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 118 | template<class F, class INTEGER, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:116:60: note: ‘template<class SubC> template<class F, class Cond> std::vector<typename std::result_of<F()>::type> ROOT::TExecutorCRTP<SubC>::Map(F, unsigned int)’; 116 | template<class F, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:217:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 217 | auto TExecutorCRTP<SubC>::Map(F func, std::vector<T> &args) -> std::vector<typename std::result_of<F(T)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecuto",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11495
https://github.com/root-project/root/issues/11495:7024,Availability,error,error,7024,"/TExecutorCRTP.hxx:118:84: note: ‘template<class SubC> template<class F, class INTEGER, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 118 | template<class F, class INTEGER, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:116:60: note: ‘template<class SubC> template<class F, class Cond> std::vector<typename std::result_of<F()>::type> ROOT::TExecutorCRTP<SubC>::Map(F, unsigned int)’; 116 | template<class F, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:230:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 230 | auto TExecutorCRTP<SubC>::Map(F func, const std::vector<T> &args) -> std::vector<typename std::result_of<F(T)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11495
https://github.com/root-project/root/issues/11495:9196,Availability,error,error,9196,"TExecutorCRTP.hxx:118:84: note: ‘template<class SubC> template<class F, class INTEGER, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 118 | template<class F, class INTEGER, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:116:60: note: ‘template<class SubC> template<class F, class Cond> std::vector<typename std::result_of<F()>::type> ROOT::TExecutorCRTP<SubC>::Map(F, unsigned int)’; 116 | template<class F, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:257:1: error: no declaration matches ‘typename std::result_of<F(INTEGER)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, ROOT::TSeq<INTEGER>, R)’; 257 | auto TExecutorCRTP<SubC>::MapReduce(F func, ROOT::TSeq<INTEGER> args, R redfunc) -> typename std::result_of<F(INTEGER)>::type; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:142:70: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, const std::vector<T*>&)’; 142 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:140:70: note: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T*>&)’; 140 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:138:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T>&, R)’; 138 | template<class F, class T, class R, class Con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11495
https://github.com/root-project/root/issues/11495:11994,Availability,error,error,11994,": ‘template<class SubC> template<class F, class INTEGER, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, ROOT::TSeq<INTEGER>, R)’; 132 | template<class F, class INTEGER, class R, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:130:69: note: ‘template<class SubC> template<class F, class R, class Cond> typename std::result_of<F()>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, unsigned int, R)’; 130 | template<class F, class R, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:270:1: error: no declaration matches ‘typename std::result_of<F(INTEGER)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::initializer_list<T>, R)’; 270 | auto TExecutorCRTP<SubC>::MapReduce(F func, std::initializer_list<T> args, R redfunc) -> typename std::result_of<F(T)>::type; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:142:70: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, const std::vector<T*>&)’; 142 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:140:70: note: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T*>&)’; 140 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:138:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T>&, R)’; 138 | template<class F, class T, class R, class C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11495
https://github.com/root-project/root/issues/11495:14796,Availability,error,error,14796,":93: note: ‘template<class SubC> template<class F, class INTEGER, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, ROOT::TSeq<INTEGER>, R)’; 132 | template<class F, class INTEGER, class R, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:130:69: note: ‘template<class SubC> template<class F, class R, class Cond> typename std::result_of<F()>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, unsigned int, R)’; 130 | template<class F, class R, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:284:1: error: no declaration matches ‘typename std::result_of<F(INTEGER)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T>&, R)’; 284 | auto TExecutorCRTP<SubC>::MapReduce(F func, std::vector<T> &args, R redfunc) -> typename std::result_of<F(T)>::type; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:142:70: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, const std::vector<T*>&)’; 142 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:140:70: note: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T*>&)’; 140 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:138:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T>&, R)’; 138 | template<class F, class T, class R, class Cond = noR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11495
https://github.com/root-project/root/issues/11495:17580,Availability,error,error,17580,"ote: ‘template<class SubC> template<class F, class INTEGER, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, ROOT::TSeq<INTEGER>, R)’; 132 | template<class F, class INTEGER, class R, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:130:69: note: ‘template<class SubC> template<class F, class R, class Cond> typename std::result_of<F()>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, unsigned int, R)’; 130 | template<class F, class R, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:296:1: error: no declaration matches ‘typename std::result_of<F(INTEGER)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, const std::vector<T>&, R)’; 296 | auto TExecutorCRTP<SubC>::MapReduce(F func, const std::vector<T> &args, R redfunc) -> typename std::result_of<F(T)>::type; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:142:70: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, const std::vector<T*>&)’; 142 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:140:70: note: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T*>&)’; 140 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:138:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T>&, R)’; 138 | template<class F, class T, class R, class Cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11495
https://github.com/root-project/root/issues/11496:1616,Availability,down,download,1616,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; If you pass a dictionary to the `Link` argument in the `RooDataSet` constructor, the pythonization actually tries to call `RooFit::Import`, then fails because `RooFit::Import` has a slightly different signature (`Import` takes a map from to string to either `TH1*`, `RooDataSet*` or `RooDataHist*`, `Link` takes a map from string to `RooAbsData*`). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The pythonization calls the correct `RooCmdArg`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); g = ROOT.RooGaussian('g', '', x, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.2)). data = g.generate({x}, NumEvents = 1000). data_2 = ROOT.RooDataSet('dataLinked', {x}, Link = {'useless': data}); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11496
https://github.com/root-project/root/issues/11496:1598,Deployability,install,install,1598,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; If you pass a dictionary to the `Link` argument in the `RooDataSet` constructor, the pythonization actually tries to call `RooFit::Import`, then fails because `RooFit::Import` has a slightly different signature (`Import` takes a map from to string to either `TH1*`, `RooDataSet*` or `RooDataHist*`, `Link` takes a map from string to `RooAbsData*`). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The pythonization calls the correct `RooCmdArg`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); g = ROOT.RooGaussian('g', '', x, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.2)). data = g.generate({x}, NumEvents = 1000). data_2 = ROOT.RooDataSet('dataLinked', {x}, Link = {'useless': data}); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11496
https://github.com/root-project/root/issues/11496:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; If you pass a dictionary to the `Link` argument in the `RooDataSet` constructor, the pythonization actually tries to call `RooFit::Import`, then fails because `RooFit::Import` has a slightly different signature (`Import` takes a map from to string to either `TH1*`, `RooDataSet*` or `RooDataHist*`, `Link` takes a map from string to `RooAbsData*`). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The pythonization calls the correct `RooCmdArg`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); g = ROOT.RooGaussian('g', '', x, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.2)). data = g.generate({x}, NumEvents = 1000). data_2 = ROOT.RooDataSet('dataLinked', {x}, Link = {'useless': data}); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11496
https://github.com/root-project/root/issues/11496:838,Usability,clear,clear,838,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; If you pass a dictionary to the `Link` argument in the `RooDataSet` constructor, the pythonization actually tries to call `RooFit::Import`, then fails because `RooFit::Import` has a slightly different signature (`Import` takes a map from to string to either `TH1*`, `RooDataSet*` or `RooDataHist*`, `Link` takes a map from string to `RooAbsData*`). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The pythonization calls the correct `RooCmdArg`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); g = ROOT.RooGaussian('g', '', x, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.2)). data = g.generate({x}, NumEvents = 1000). data_2 = ROOT.RooDataSet('dataLinked', {x}, Link = {'useless': data}); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11496
https://github.com/root-project/root/pull/11499:135,Usability,learn,learn,135,"From https://gitlab.cern.ch/will/xroofit,; commit 5a9064e020abe994f01d31a55ebc127454e0d48e. This is just to see how the CI responds to learn what yet needs to be done upstream in xRooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11499
https://github.com/root-project/root/pull/11500:273,Testability,test,test,273,"Obviously the `Link` pythonization should call the original `_Link`; function. Also, the constructor that takes a map of categories to PDFs should be able to; accept a Python dictionary directly. The RooFit Python tutorials are covering this constructor, acting as a; unit test. Closes https://github.com/root-project/root/issues/11496.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11500
https://github.com/root-project/root/pull/11505:108,Deployability,patch,patches,108,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11500; Excluding the last commit that only updates the tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11505
https://github.com/root-project/root/pull/11505:276,Deployability,update,updates,276,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11500; Excluding the last commit that only updates the tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11505
https://github.com/root-project/root/pull/11506:572,Deployability,update,update,572,We replace it with a combination of a global property and an additional custom target.; The global property is used to collect the dependencies created before the modules.idx target is created.; The custom target is used as a direct dependency of the custom_command (add_dependencies can not be used on the target of a custom_command). Then we can use; this custom target to collect the dependencies created after the modules.idx target. This fixes #10510. To test:. ```; ls -rtl lib/modules.idx lib/libEve.so; rm lib/*Eve*; ninja # or make or cmake --build ; this should update modules.idx; ls -rtl lib/modules.idx lib/libEve.so; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11506
https://github.com/root-project/root/pull/11506:131,Integrability,depend,dependencies,131,We replace it with a combination of a global property and an additional custom target.; The global property is used to collect the dependencies created before the modules.idx target is created.; The custom target is used as a direct dependency of the custom_command (add_dependencies can not be used on the target of a custom_command). Then we can use; this custom target to collect the dependencies created after the modules.idx target. This fixes #10510. To test:. ```; ls -rtl lib/modules.idx lib/libEve.so; rm lib/*Eve*; ninja # or make or cmake --build ; this should update modules.idx; ls -rtl lib/modules.idx lib/libEve.so; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11506
https://github.com/root-project/root/pull/11506:233,Integrability,depend,dependency,233,We replace it with a combination of a global property and an additional custom target.; The global property is used to collect the dependencies created before the modules.idx target is created.; The custom target is used as a direct dependency of the custom_command (add_dependencies can not be used on the target of a custom_command). Then we can use; this custom target to collect the dependencies created after the modules.idx target. This fixes #10510. To test:. ```; ls -rtl lib/modules.idx lib/libEve.so; rm lib/*Eve*; ninja # or make or cmake --build ; this should update modules.idx; ls -rtl lib/modules.idx lib/libEve.so; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11506
https://github.com/root-project/root/pull/11506:387,Integrability,depend,dependencies,387,We replace it with a combination of a global property and an additional custom target.; The global property is used to collect the dependencies created before the modules.idx target is created.; The custom target is used as a direct dependency of the custom_command (add_dependencies can not be used on the target of a custom_command). Then we can use; this custom target to collect the dependencies created after the modules.idx target. This fixes #10510. To test:. ```; ls -rtl lib/modules.idx lib/libEve.so; rm lib/*Eve*; ninja # or make or cmake --build ; this should update modules.idx; ls -rtl lib/modules.idx lib/libEve.so; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11506
https://github.com/root-project/root/pull/11506:460,Testability,test,test,460,We replace it with a combination of a global property and an additional custom target.; The global property is used to collect the dependencies created before the modules.idx target is created.; The custom target is used as a direct dependency of the custom_command (add_dependencies can not be used on the target of a custom_command). Then we can use; this custom target to collect the dependencies created after the modules.idx target. This fixes #10510. To test:. ```; ls -rtl lib/modules.idx lib/libEve.so; rm lib/*Eve*; ninja # or make or cmake --build ; this should update modules.idx; ls -rtl lib/modules.idx lib/libEve.so; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11506
https://github.com/root-project/root/pull/11507:64,Availability,error,error,64,"# This Pull request:. ## Changes or fixes:; Due to a copy-paste error, `RooDataSet::binnedClone` was overwriting the name of the clone if no title was provided. This PR fixes that. Since this is my first PR in ROOT, I have a couple of questions:; - since this was a small change I did not open an issue in the repo, should I do that regardless?; - do I need to write a test?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11507
https://github.com/root-project/root/pull/11507:369,Testability,test,test,369,"# This Pull request:. ## Changes or fixes:; Due to a copy-paste error, `RooDataSet::binnedClone` was overwriting the name of the clone if no title was provided. This PR fixes that. Since this is my first PR in ROOT, I have a couple of questions:; - since this was a small change I did not open an issue in the repo, should I do that regardless?; - do I need to write a test?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11507
https://github.com/root-project/root/issues/11511:36,Availability,error,error,36,"### Describe the bug; I'm seeing an error when building an application with root, kokkos and CUDA. The file that's producing the error does not explicitly include any Kokkos or CUDA headers, but the CUDA headers are somehow being pulled in. Kokkos is somehow involved in all this as another version of the code which uses plain CUDA does not throw this error. This error is apparent with root v6-24-00 through v6-26-06 (I haven't tried anything older or newer). It appeared with CUDA 11.6 and beyond- it's fine with older versions (I've tried back to 11.2 and up to 11.7. I haven't tried 11.8). The error is apparent with gcc 9.3 to 11.2. Nothing in the source is explicitly calling TExecutorCRTP or TSequentialExecutor. This is the error I see:. ```; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:191:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 191 | auto TExecutorCRTP<SubC>::Map(F func, ROOT::TSeq<INTEGER> args) -> std::vector<typename std::result_of<F(INTEGER)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11511
https://github.com/root-project/root/issues/11511:129,Availability,error,error,129,"### Describe the bug; I'm seeing an error when building an application with root, kokkos and CUDA. The file that's producing the error does not explicitly include any Kokkos or CUDA headers, but the CUDA headers are somehow being pulled in. Kokkos is somehow involved in all this as another version of the code which uses plain CUDA does not throw this error. This error is apparent with root v6-24-00 through v6-26-06 (I haven't tried anything older or newer). It appeared with CUDA 11.6 and beyond- it's fine with older versions (I've tried back to 11.2 and up to 11.7. I haven't tried 11.8). The error is apparent with gcc 9.3 to 11.2. Nothing in the source is explicitly calling TExecutorCRTP or TSequentialExecutor. This is the error I see:. ```; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:191:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 191 | auto TExecutorCRTP<SubC>::Map(F func, ROOT::TSeq<INTEGER> args) -> std::vector<typename std::result_of<F(INTEGER)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11511
https://github.com/root-project/root/issues/11511:353,Availability,error,error,353,"### Describe the bug; I'm seeing an error when building an application with root, kokkos and CUDA. The file that's producing the error does not explicitly include any Kokkos or CUDA headers, but the CUDA headers are somehow being pulled in. Kokkos is somehow involved in all this as another version of the code which uses plain CUDA does not throw this error. This error is apparent with root v6-24-00 through v6-26-06 (I haven't tried anything older or newer). It appeared with CUDA 11.6 and beyond- it's fine with older versions (I've tried back to 11.2 and up to 11.7. I haven't tried 11.8). The error is apparent with gcc 9.3 to 11.2. Nothing in the source is explicitly calling TExecutorCRTP or TSequentialExecutor. This is the error I see:. ```; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:191:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 191 | auto TExecutorCRTP<SubC>::Map(F func, ROOT::TSeq<INTEGER> args) -> std::vector<typename std::result_of<F(INTEGER)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11511
https://github.com/root-project/root/issues/11511:365,Availability,error,error,365,"### Describe the bug; I'm seeing an error when building an application with root, kokkos and CUDA. The file that's producing the error does not explicitly include any Kokkos or CUDA headers, but the CUDA headers are somehow being pulled in. Kokkos is somehow involved in all this as another version of the code which uses plain CUDA does not throw this error. This error is apparent with root v6-24-00 through v6-26-06 (I haven't tried anything older or newer). It appeared with CUDA 11.6 and beyond- it's fine with older versions (I've tried back to 11.2 and up to 11.7. I haven't tried 11.8). The error is apparent with gcc 9.3 to 11.2. Nothing in the source is explicitly calling TExecutorCRTP or TSequentialExecutor. This is the error I see:. ```; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:191:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 191 | auto TExecutorCRTP<SubC>::Map(F func, ROOT::TSeq<INTEGER> args) -> std::vector<typename std::result_of<F(INTEGER)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11511
https://github.com/root-project/root/issues/11511:599,Availability,error,error,599,"### Describe the bug; I'm seeing an error when building an application with root, kokkos and CUDA. The file that's producing the error does not explicitly include any Kokkos or CUDA headers, but the CUDA headers are somehow being pulled in. Kokkos is somehow involved in all this as another version of the code which uses plain CUDA does not throw this error. This error is apparent with root v6-24-00 through v6-26-06 (I haven't tried anything older or newer). It appeared with CUDA 11.6 and beyond- it's fine with older versions (I've tried back to 11.2 and up to 11.7. I haven't tried 11.8). The error is apparent with gcc 9.3 to 11.2. Nothing in the source is explicitly calling TExecutorCRTP or TSequentialExecutor. This is the error I see:. ```; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:191:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 191 | auto TExecutorCRTP<SubC>::Map(F func, ROOT::TSeq<INTEGER> args) -> std::vector<typename std::result_of<F(INTEGER)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11511
https://github.com/root-project/root/issues/11511:733,Availability,error,error,733,"### Describe the bug; I'm seeing an error when building an application with root, kokkos and CUDA. The file that's producing the error does not explicitly include any Kokkos or CUDA headers, but the CUDA headers are somehow being pulled in. Kokkos is somehow involved in all this as another version of the code which uses plain CUDA does not throw this error. This error is apparent with root v6-24-00 through v6-26-06 (I haven't tried anything older or newer). It appeared with CUDA 11.6 and beyond- it's fine with older versions (I've tried back to 11.2 and up to 11.7. I haven't tried 11.8). The error is apparent with gcc 9.3 to 11.2. Nothing in the source is explicitly calling TExecutorCRTP or TSequentialExecutor. This is the error I see:. ```; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:191:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 191 | auto TExecutorCRTP<SubC>::Map(F func, ROOT::TSeq<INTEGER> args) -> std::vector<typename std::result_of<F(INTEGER)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11511
https://github.com/root-project/root/issues/11511:820,Availability,error,error,820,"### Describe the bug; I'm seeing an error when building an application with root, kokkos and CUDA. The file that's producing the error does not explicitly include any Kokkos or CUDA headers, but the CUDA headers are somehow being pulled in. Kokkos is somehow involved in all this as another version of the code which uses plain CUDA does not throw this error. This error is apparent with root v6-24-00 through v6-26-06 (I haven't tried anything older or newer). It appeared with CUDA 11.6 and beyond- it's fine with older versions (I've tried back to 11.2 and up to 11.7. I haven't tried 11.8). The error is apparent with gcc 9.3 to 11.2. Nothing in the source is explicitly calling TExecutorCRTP or TSequentialExecutor. This is the error I see:. ```; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:191:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 191 | auto TExecutorCRTP<SubC>::Map(F func, ROOT::TSeq<INTEGER> args) -> std::vector<typename std::result_of<F(INTEGER)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11511
https://github.com/root-project/root/issues/11511:2994,Availability,error,error,2994,"xecutorCRTP.hxx:118:84: note: ‘template<class SubC> template<class F, class INTEGER, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 118 | template<class F, class INTEGER, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:116:60: note: ‘template<class SubC> template<class F, class Cond> std::vector<typename std::result_of<F()>::type> ROOT::TExecutorCRTP<SubC>::Map(F, unsigned int)’; 116 | template<class F, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:203:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::initializer_list<T>)’; 203 | auto TExecutorCRTP<SubC>::Map(F func, std::initializer_list<T> args) -> std::vector<typename std::result_of<F(T)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11511
https://github.com/root-project/root/issues/11511:5172,Availability,error,error,5172,"e/ROOT/TExecutorCRTP.hxx:118:84: note: ‘template<class SubC> template<class F, class INTEGER, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 118 | template<class F, class INTEGER, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:116:60: note: ‘template<class SubC> template<class F, class Cond> std::vector<typename std::result_of<F()>::type> ROOT::TExecutorCRTP<SubC>::Map(F, unsigned int)’; 116 | template<class F, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:217:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 217 | auto TExecutorCRTP<SubC>::Map(F func, std::vector<T> &args) -> std::vector<typename std::result_of<F(T)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecuto",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11511
https://github.com/root-project/root/issues/11511:7332,Availability,error,error,7332,"/TExecutorCRTP.hxx:118:84: note: ‘template<class SubC> template<class F, class INTEGER, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 118 | template<class F, class INTEGER, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:116:60: note: ‘template<class SubC> template<class F, class Cond> std::vector<typename std::result_of<F()>::type> ROOT::TExecutorCRTP<SubC>::Map(F, unsigned int)’; 116 | template<class F, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:230:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 230 | auto TExecutorCRTP<SubC>::Map(F func, const std::vector<T> &args) -> std::vector<typename std::result_of<F(T)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11511
https://github.com/root-project/root/issues/11511:9504,Availability,error,error,9504,"TExecutorCRTP.hxx:118:84: note: ‘template<class SubC> template<class F, class INTEGER, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 118 | template<class F, class INTEGER, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:116:60: note: ‘template<class SubC> template<class F, class Cond> std::vector<typename std::result_of<F()>::type> ROOT::TExecutorCRTP<SubC>::Map(F, unsigned int)’; 116 | template<class F, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:257:1: error: no declaration matches ‘typename std::result_of<F(INTEGER)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, ROOT::TSeq<INTEGER>, R)’; 257 | auto TExecutorCRTP<SubC>::MapReduce(F func, ROOT::TSeq<INTEGER> args, R redfunc) -> typename std::result_of<F(INTEGER)>::type; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:142:70: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, const std::vector<T*>&)’; 142 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:140:70: note: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T*>&)’; 140 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:138:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T>&, R)’; 138 | template<class F, class T, class R, class Con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11511
https://github.com/root-project/root/issues/11511:12302,Availability,error,error,12302,": ‘template<class SubC> template<class F, class INTEGER, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, ROOT::TSeq<INTEGER>, R)’; 132 | template<class F, class INTEGER, class R, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:130:69: note: ‘template<class SubC> template<class F, class R, class Cond> typename std::result_of<F()>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, unsigned int, R)’; 130 | template<class F, class R, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:270:1: error: no declaration matches ‘typename std::result_of<F(INTEGER)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::initializer_list<T>, R)’; 270 | auto TExecutorCRTP<SubC>::MapReduce(F func, std::initializer_list<T> args, R redfunc) -> typename std::result_of<F(T)>::type; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:142:70: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, const std::vector<T*>&)’; 142 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:140:70: note: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T*>&)’; 140 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:138:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T>&, R)’; 138 | template<class F, class T, class R, class C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11511
https://github.com/root-project/root/issues/11511:15104,Availability,error,error,15104,":93: note: ‘template<class SubC> template<class F, class INTEGER, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, ROOT::TSeq<INTEGER>, R)’; 132 | template<class F, class INTEGER, class R, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:130:69: note: ‘template<class SubC> template<class F, class R, class Cond> typename std::result_of<F()>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, unsigned int, R)’; 130 | template<class F, class R, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:284:1: error: no declaration matches ‘typename std::result_of<F(INTEGER)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T>&, R)’; 284 | auto TExecutorCRTP<SubC>::MapReduce(F func, std::vector<T> &args, R redfunc) -> typename std::result_of<F(T)>::type; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:142:70: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, const std::vector<T*>&)’; 142 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:140:70: note: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T*>&)’; 140 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:138:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T>&, R)’; 138 | template<class F, class T, class R, class Cond = noR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11511
https://github.com/root-project/root/issues/11511:17888,Availability,error,error,17888,"ote: ‘template<class SubC> template<class F, class INTEGER, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, ROOT::TSeq<INTEGER>, R)’; 132 | template<class F, class INTEGER, class R, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:130:69: note: ‘template<class SubC> template<class F, class R, class Cond> typename std::result_of<F()>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, unsigned int, R)’; 130 | template<class F, class R, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:296:1: error: no declaration matches ‘typename std::result_of<F(INTEGER)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, const std::vector<T>&, R)’; 296 | auto TExecutorCRTP<SubC>::MapReduce(F func, const std::vector<T> &args, R redfunc) -> typename std::result_of<F(T)>::type; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:142:70: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, const std::vector<T*>&)’; 142 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:140:70: note: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T*>&)’; 140 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:138:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T>&, R)’; 138 | template<class F, class T, class R, class Cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11511
https://github.com/root-project/root/issues/11511:19755,Availability,error,errors,19755,"plate<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:140:70: note: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T*>&)’; 140 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:138:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T>&, R)’; 138 | template<class F, class T, class R, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:136:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, const std::vector<T>&, R)’; 136 | template<class F, class T, class R, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:134:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::initializer_list<T>, R)’; ```. ### Expected behavior; a clean compilation without errors. ### To Reproduce; ```; setup kokkos (with CUDA backend), root, gcc, cmake; git clone git@github.com:cgleggett/FCS-GPU.git src; mkdir bld; cd bld; cmake ../src/FastCaloSimAnalyzer/ -DENABLE_XROOTD=Off -DENABLE_GPU=on -DINPUT_PATH=/tmp -DCMAKE_CXX_STANDARD=17 -DUSE_KOKKOS=ON -DCMAKE_CXX_EXTENSIONS=Off; make -j; ```. ### Setup; root: v6.24 - v6.26; CUDA: 11.6, 11.7 (OK with 11.5); gcc: 9.3 - 11.2; OS: Centos 7; ROOT was built with:; ```; cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_EXTENSIONS=Off -DCMAKE_INSTALL_PREFIX=/opt/root/v6-26-06_gcc112_c17 -Dx11=OFF -Dtbb=OFF -Dopengl=OFF -Dgviz=OFF -Dimt=OFF -Ddavix=OFF -Dvdt=OFF -Dxrootd=OFF ../src; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11511
https://github.com/root-project/root/pull/11514:6,Performance,load,loading,6,"Avoid loading ROOT modules while Clang is instantiating a template class from STL, leading to ODR checks with an incomplete class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11514
https://github.com/root-project/root/pull/11514:0,Safety,Avoid,Avoid,0,"Avoid loading ROOT modules while Clang is instantiating a template class from STL, leading to ODR checks with an incomplete class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11514
https://github.com/root-project/root/issues/11515:315,Availability,error,error,315,"# The problem. Sometimes the distributed RDataFrame test of the `RunGraphs` functionality fails, for example [in this CI run](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156523/testReport/projectroot.roottest.python.distrdf/common/roottest_python_distrdf_common_test_all/). The visible error from the user side comes from Dask, which serializes a Python RuntimeError and produces some output log on stdout as follows:. ```; 2022-10-07 17:00:25,901 - distributed.worker - WARNING - Compute Failed; Key: dask_mapper-d6baeae1-74a8-4a41-84e9-6ee2e8db064f; Function: execute_task; args: ((<function DaskBackend.ProcessAndMerge.<locals>.dask_mapper at 0x7f0cdae1a320>, (<function apply at 0x7f0cfa133910>, <class 'DistRDF.Ranges.TreeRangePerc'>, (), (<class 'dict'>, [['id', 1], ['treenames', ['myTree']], ['filenames', ['2clusters.root']], ['first_file_idx', 0], ['last_file_idx', 1], ['first_tree_start_perc', 0.5], ['last_tree_end_perc', 1], ['friendinfo', None]])))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:1081,Availability,error,error,1081,"ataFrame test of the `RunGraphs` functionality fails, for example [in this CI run](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156523/testReport/projectroot.roottest.python.distrdf/common/roottest_python_distrdf_common_test_all/). The visible error from the user side comes from Dask, which serializes a Python RuntimeError and produces some output log on stdout as follows:. ```; 2022-10-07 17:00:25,901 - distributed.worker - WARNING - Compute Failed; Key: dask_mapper-d6baeae1-74a8-4a41-84e9-6ee2e8db064f; Function: execute_task; args: ((<function DaskBackend.ProcessAndMerge.<locals>.dask_mapper at 0x7f0cdae1a320>, (<function apply at 0x7f0cfa133910>, <class 'DistRDF.Ranges.TreeRangePerc'>, (), (<class 'dict'>, [['id', 1], ['treenames', ['myTree']], ['filenames', ['2clusters.root']], ['first_file_idx', 0], ['last_file_idx', 1], ['first_tree_start_perc', 0.5], ['last_tree_end_perc', 1], ['friendinfo', None]])))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:1585,Availability,error,error,1585,"<locals>.dask_mapper at 0x7f0cdae1a320>, (<function apply at 0x7f0cfa133910>, <class 'DistRDF.Ranges.TreeRangePerc'>, (), (<class 'dict'>, [['id', 1], ['treenames', ['myTree']], ['filenames', ['2clusters.root']], ['first_file_idx', 0], ['last_file_idx', 1], ['first_tree_start_perc', 0.5], ['last_tree_end_perc', 1], ['friendinfo', None]])))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f0cc988e7d0), new const char*[1]{""b1""}, 1, 1, reinterpret_cast<shared_ptr<TH1D>*>(0x7f0cd043c1f0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x7f0cc94b3830), reinterpret_cast<ROOT::Internal::RDF::RColum",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:1602,Availability,failure,failure,1602,"<locals>.dask_mapper at 0x7f0cdae1a320>, (<function apply at 0x7f0cfa133910>, <class 'DistRDF.Ranges.TreeRangePerc'>, (), (<class 'dict'>, [['id', 1], ['treenames', ['myTree']], ['filenames', ['2clusters.root']], ['first_file_idx', 0], ['last_file_idx', 1], ['first_tree_start_perc', 0.5], ['last_tree_end_perc', 1], ['friendinfo', None]])))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f0cc988e7d0), new const char*[1]{""b1""}, 1, 1, reinterpret_cast<shared_ptr<TH1D>*>(0x7f0cd043c1f0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x7f0cc94b3830), reinterpret_cast<ROOT::Internal::RDF::RColum",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:1718,Availability,error,error,1718,"<locals>.dask_mapper at 0x7f0cdae1a320>, (<function apply at 0x7f0cfa133910>, <class 'DistRDF.Ranges.TreeRangePerc'>, (), (<class 'dict'>, [['id', 1], ['treenames', ['myTree']], ['filenames', ['2clusters.root']], ['first_file_idx', 0], ['last_file_idx', 1], ['first_tree_start_perc', 0.5], ['last_tree_end_perc', 1], ['friendinfo', None]])))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f0cc988e7d0), new const char*[1]{""b1""}, 1, 1, reinterpret_cast<shared_ptr<TH1D>*>(0x7f0cd043c1f0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x7f0cc94b3830), reinterpret_cast<ROOT::Internal::RDF::RColum",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:1771,Availability,error,error,1771,"c'>, (), (<class 'dict'>, [['id', 1], ['treenames', ['myTree']], ['filenames', ['2clusters.root']], ['first_file_idx', 0], ['last_file_idx', 1], ['first_tree_start_perc', 0.5], ['last_tree_end_perc', 1], ['friendinfo', None]])))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f0cc988e7d0), new const char*[1]{""b1""}, 1, 1, reinterpret_cast<shared_ptr<TH1D>*>(0x7f0cd043c1f0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x7f0cc94b3830), reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x7f0cc29a41b0));. Failure in gInterpreter->Calc: PID=31643,errorCode=1; ```. Adding these two lines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:1944,Availability,Failure,Failure,1944,"))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f0cc988e7d0), new const char*[1]{""b1""}, 1, 1, reinterpret_cast<shared_ptr<TH1D>*>(0x7f0cd043c1f0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x7f0cc94b3830), reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x7f0cc29a41b0));. Failure in gInterpreter->Calc: PID=31643,errorCode=1; ```. Adding these two lines in `cling::IncrementalExecutor::jitInitOrWrapper` provides a way to stop the execution when the offending code is triggered, so that we can step in with `gdb -p PID_OF_FAILING_DISTRDF_TASK`:; ```; volatile int a = 0;; while (a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:2044,Availability,Failure,Failure,2044,"d during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f0cc988e7d0), new const char*[1]{""b1""}, 1, 1, reinterpret_cast<shared_ptr<TH1D>*>(0x7f0cd043c1f0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x7f0cc94b3830), reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x7f0cc29a41b0));. Failure in gInterpreter->Calc: PID=31643,errorCode=1; ```. Adding these two lines in `cling::IncrementalExecutor::jitInitOrWrapper` provides a way to stop the execution when the offending code is triggered, so that we can step in with `gdb -p PID_OF_FAILING_DISTRDF_TASK`:; ```; volatile int a = 0;; while (a == 0) {}; ```. It shows that there are many threads in flight (`21`!), even if the distributed task fr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:2178,Availability,Failure,Failure,2178,"n](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f0cc988e7d0), new const char*[1]{""b1""}, 1, 1, reinterpret_cast<shared_ptr<TH1D>*>(0x7f0cd043c1f0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x7f0cc94b3830), reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x7f0cc29a41b0));. Failure in gInterpreter->Calc: PID=31643,errorCode=1; ```. Adding these two lines in `cling::IncrementalExecutor::jitInitOrWrapper` provides a way to stop the execution when the offending code is triggered, so that we can step in with `gdb -p PID_OF_FAILING_DISTRDF_TASK`:; ```; volatile int a = 0;; while (a == 0) {}; ```. It shows that there are many threads in flight (`21`!), even if the distributed task from the RDF point of view runs sequentially:. ```; (gdb) info threads; Id Target Id Frame ; 1 Thread 0x7f1370756740 (LWP 34502) ""python"" __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393, expected=0, ; futex_word=0x7f131020075c) at futex-internal.c:57; 2 Thread 0x7f135fbff640 (LWP 34504) ""python"" __futex_absti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:2683,Availability,Failure,Failure,2683,"lation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f0cc988e7d0), new const char*[1]{""b1""}, 1, 1, reinterpret_cast<shared_ptr<TH1D>*>(0x7f0cd043c1f0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x7f0cc94b3830), reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x7f0cc29a41b0));. Failure in gInterpreter->Calc: PID=31643,errorCode=1; ```. Adding these two lines in `cling::IncrementalExecutor::jitInitOrWrapper` provides a way to stop the execution when the offending code is triggered, so that we can step in with `gdb -p PID_OF_FAILING_DISTRDF_TASK`:; ```; volatile int a = 0;; while (a == 0) {}; ```. It shows that there are many threads in flight (`21`!), even if the distributed task from the RDF point of view runs sequentially:. ```; (gdb) info threads; Id Target Id Frame ; 1 Thread 0x7f1370756740 (LWP 34502) ""python"" __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393, expected=0, ; futex_word=0x7f131020075c) at futex-internal.c:57; 2 Thread 0x7f135fbff640 (LWP 34504) ""python"" __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393, expected=0, ; futex_word=0x7f13622926e0 <thread_status+96>) at futex-internal.c:57; 3 Thread 0x7f135f3fe640 (LWP 34505) ""python"" __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393, expected=0, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:2724,Availability,error,errorCode,2724,"lation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f0cc988e7d0), new const char*[1]{""b1""}, 1, 1, reinterpret_cast<shared_ptr<TH1D>*>(0x7f0cd043c1f0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x7f0cc94b3830), reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x7f0cc29a41b0));. Failure in gInterpreter->Calc: PID=31643,errorCode=1; ```. Adding these two lines in `cling::IncrementalExecutor::jitInitOrWrapper` provides a way to stop the execution when the offending code is triggered, so that we can step in with `gdb -p PID_OF_FAILING_DISTRDF_TASK`:; ```; volatile int a = 0;; while (a == 0) {}; ```. It shows that there are many threads in flight (`21`!), even if the distributed task from the RDF point of view runs sequentially:. ```; (gdb) info threads; Id Target Id Frame ; 1 Thread 0x7f1370756740 (LWP 34502) ""python"" __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393, expected=0, ; futex_word=0x7f131020075c) at futex-internal.c:57; 2 Thread 0x7f135fbff640 (LWP 34504) ""python"" __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393, expected=0, ; futex_word=0x7f13622926e0 <thread_status+96>) at futex-internal.c:57; 3 Thread 0x7f135f3fe640 (LWP 34505) ""python"" __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393, expected=0, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:10815,Availability,error,error,10815,"; from /home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/libCling.so; #2 0x00007f1332c451a3 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (); from /home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/libCling.so; #3 0x00007f1332c45b1a in cling::Interpreter::evaluate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value&) () from /home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/libCling.so; #4 0x00007f1332a74e9d in TCling::Calc (this=0x56290befde40, ; line=0x7f12fa0f8290 ""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""..., error=0x7f131ad40bdc); at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:3556; #5 0x00007f132bf6da60 in operator() (__closure=0x7f131ad40bc0, ; codeSlice=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""...); at /home/vpadulan/programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:340; #6 0x00007f132bf6def9 in ROOT::Internal::RDF::InterpreterCalc (; code=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""..., context=""RLoopManager::Run""); ```. Which as a first instinct hints at some possible contention between the different things cling is doing in the two threads. For the moment I cannot come up with an easier reproducer, see next section for more details. # How to reproduce. Here is the patch to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:11993,Availability,failure,failure,11993,"() (__closure=0x7f131ad40bc0, ; codeSlice=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""...); at /home/vpadulan/programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:340; #6 0x00007f132bf6def9 in ROOT::Internal::RDF::InterpreterCalc (; code=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""..., context=""RLoopManager::Run""); ```. Which as a first instinct hints at some possible contention between the different things cling is doing in the two threads. For the moment I cannot come up with an easier reproducer, see next section for more details. # How to reproduce. Here is the patch to print the statements that show the PID (as .txt so that I can attach it to this issue):; [0001-Print-statements-for-DistRDF-Cling-failure.txt](https://github.com/root-project/root/files/9735187/0001-Print-statements-for-DistRDF-Cling-failure.txt). The following is a Python script with the test; ```py; import os. import pyspark; from dask.distributed import Client, LocalCluster. import ROOT; RunGraphs = ROOT.RDF.Experimental.Distributed.RunGraphs; SparkDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; DaskDF = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; # verbosity = ROOT.Experimental.RLogScopedVerbosity(ROOT.Detail.RDF.RDFLogChannel(), ROOT.Experimental.ELogLevel.kDebug+10). def connection():; daskconn = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True, memory_limit=""2GiB"")). conf = {""spark.master"": ""local[2]"", ""spark.driver.memory"": ""4g"", ""spark.app.name"": ""roottest-distrdf-common""}; sparkconf = pyspark.SparkConf().setAll(conf.items()); sparkconn = pyspark.SparkContext(conf=sparkconf). return daskconn, sparkconn. def test_rungraphs_sparkan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:12097,Availability,failure,failure,12097,"gs::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""...); at /home/vpadulan/programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:340; #6 0x00007f132bf6def9 in ROOT::Internal::RDF::InterpreterCalc (; code=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""..., context=""RLoopManager::Run""); ```. Which as a first instinct hints at some possible contention between the different things cling is doing in the two threads. For the moment I cannot come up with an easier reproducer, see next section for more details. # How to reproduce. Here is the patch to print the statements that show the PID (as .txt so that I can attach it to this issue):; [0001-Print-statements-for-DistRDF-Cling-failure.txt](https://github.com/root-project/root/files/9735187/0001-Print-statements-for-DistRDF-Cling-failure.txt). The following is a Python script with the test; ```py; import os. import pyspark; from dask.distributed import Client, LocalCluster. import ROOT; RunGraphs = ROOT.RDF.Experimental.Distributed.RunGraphs; SparkDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; DaskDF = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; # verbosity = ROOT.Experimental.RLogScopedVerbosity(ROOT.Detail.RDF.RDFLogChannel(), ROOT.Experimental.ELogLevel.kDebug+10). def connection():; daskconn = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True, memory_limit=""2GiB"")). conf = {""spark.master"": ""local[2]"", ""spark.driver.memory"": ""4g"", ""spark.app.name"": ""roottest-distrdf-common""}; sparkconf = pyspark.SparkConf().setAll(conf.items()); sparkconn = pyspark.SparkContext(conf=sparkconf). return daskconn, sparkconn. def test_rungraphs_sparkanddask_3histos(daskconn, sparkconn):; """"""; Submit three different RDF graphs concurrently to Spark and Dask; """,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:14461,Availability,echo,echo,14461,"= 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.proxied_node.value; assert isinstance(histo, ROOT.TH1D); assert histo.GetEntries() == nentries; assert histo.GetMean() == 42. os.remove(filename). def main():; test_rungraphs_sparkanddask_3histos(*connection()). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And here is a bash script that runs the previous Python script in a loop until it fails; ```; counter=0; while test $? -eq 0; do ; counter=$(($counter+1)); echo -e ""\nRunning test $counter\n""; CLING_DEBUG=1 python test.py; done. # Remove leftover file from the test when it fails; rm 2clusters.root; ```. ### Setup. ROOT [master@b13756d](https://github.com/root-project/root/commit/b13756d544d91803e31c7b6aa0c32ae05481e7f8); Python 3.10.7; Java 19; pyspark 3.3.0; dask/distributed 2022.7.1. ROOT built with:; ```; cmake -GNinja -Dccache=ON -Dminimal=ON -Dtesting=ON -Droottest=ON -Dpyroot=ON -Ddataframe=ON -Dxrootd=ON -Dtest_distrdf_pyspark=ON -Dtest_distrdf_dask=ON -DCMAKE_BUILD_TYPE=Debug -Dimt=ON; ```. ### Additional context. I am tentatively assigning this also to @Axel-Naumann @vgvassilev @jalopezg-r00t who may have an easier time at understanding the output from gdb and help in creating a simpler reproducer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:1914,Deployability,patch,patch,1914,"_file_idx', 0], ['last_file_idx', 1], ['first_tree_start_perc', 0.5], ['last_tree_end_perc', 1], ['friendinfo', None]])))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f0cc988e7d0), new const char*[1]{""b1""}, 1, 1, reinterpret_cast<shared_ptr<TH1D>*>(0x7f0cd043c1f0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x7f0cc94b3830), reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x7f0cc29a41b0));. Failure in gInterpreter->Calc: PID=31643,errorCode=1; ```. Adding these two lines in `cling::IncrementalExecutor::jitInitOrWrapper` provides a way to stop the execution when the offending ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:11854,Deployability,patch,patch,11854,"ct/rootsrc/core/metacling/src/TCling.cxx:3556; #5 0x00007f132bf6da60 in operator() (__closure=0x7f131ad40bc0, ; codeSlice=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""...); at /home/vpadulan/programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:340; #6 0x00007f132bf6def9 in ROOT::Internal::RDF::InterpreterCalc (; code=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""..., context=""RLoopManager::Run""); ```. Which as a first instinct hints at some possible contention between the different things cling is doing in the two threads. For the moment I cannot come up with an easier reproducer, see next section for more details. # How to reproduce. Here is the patch to print the statements that show the PID (as .txt so that I can attach it to this issue):; [0001-Print-statements-for-DistRDF-Cling-failure.txt](https://github.com/root-project/root/files/9735187/0001-Print-statements-for-DistRDF-Cling-failure.txt). The following is a Python script with the test; ```py; import os. import pyspark; from dask.distributed import Client, LocalCluster. import ROOT; RunGraphs = ROOT.RDF.Experimental.Distributed.RunGraphs; SparkDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; DaskDF = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; # verbosity = ROOT.Experimental.RLogScopedVerbosity(ROOT.Detail.RDF.RDFLogChannel(), ROOT.Experimental.ELogLevel.kDebug+10). def connection():; daskconn = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True, memory_limit=""2GiB"")). conf = {""spark.master"": ""local[2]"", ""spark.driver.memory"": ""4g"", ""spark.app.name"": ""roottest-distrdf-common""}; sparkconf = pyspark.SparkConf().setAll(conf.items()); sparkconn = pyspark.Spar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:1359,Integrability,wrap,wrapper,1359,"on RuntimeError and produces some output log on stdout as follows:. ```; 2022-10-07 17:00:25,901 - distributed.worker - WARNING - Compute Failed; Key: dask_mapper-d6baeae1-74a8-4a41-84e9-6ee2e8db064f; Function: execute_task; args: ((<function DaskBackend.ProcessAndMerge.<locals>.dask_mapper at 0x7f0cdae1a320>, (<function apply at 0x7f0cfa133910>, <class 'DistRDF.Ranges.TreeRangePerc'>, (), (<class 'dict'>, [['id', 1], ['treenames', ['myTree']], ['filenames', ['2clusters.root']], ['first_file_idx', 0], ['last_file_idx', 1], ['first_tree_start_perc', 0.5], ['last_tree_end_perc', 1], ['friendinfo', None]])))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:7143,Performance,optimiz,optimized,7143,"rivate=0, cancel=true, abstime=0x0, op=393, expected=0, ; --Type <RET> for more, q to quit, c to continue without paging--; futex_word=0x7f1362292d60 <thread_status+1760>) at futex-internal.c:57; 16 Thread 0x7f133ebf1640 (LWP 34518) ""python"" __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393, expected=0, ; futex_word=0x7f1362292de0 <thread_status+1888>) at futex-internal.c:57; 17 Thread 0x7f132aa21640 (LWP 34584) ""python"" __GI___libc_read (nbytes=4, buf=0x7f133827b950, fd=33) at ../sysdeps/unix/sysv/linux/read.c:26; 18 Thread 0x7f132a120640 (LWP 34585) ""python"" __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x7f132a11f330, op=137, ; expected=0, futex_word=0x7f1370d85acc <_PyRuntime+428>) at futex-internal.c:57; 19 Thread 0x7f132991f640 (LWP 34586) ""python"" __GI___libc_read (nbytes=4, buf=0x7f13382bf140, fd=31) at ../sysdeps/unix/sysv/linux/read.c:26; 20 Thread 0x7f132911e640 (LWP 34587) ""python"" __futex_abstimed_wait_common64 (private=<optimized out>, cancel=true, abstime=0x0, op=393, ; expected=0, futex_word=0x562911e622b0) at futex-internal.c:57; * 21 Thread 0x7f131ad44640 (LWP 34739) ""python"" 0x00007f1332cbafdc in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/libCling.so; ```. The two most interesting ones are threads `1` and `21`:; Thread1; ```; #6 std::__condvar::wait (__m=..., this=<optimized out>); at /usr/src/debug/gcc-12.2.1-2.fc36.x86_64/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/std_mutex.h:155; #7 std::condition_variable::wait (this=<optimized out>, __lock=...) at ../../../../../libstdc++-v3/src/c++11/condition_variable.cc:41; #8 0x00007f133726f0aa in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x7f1310200730, __lock=...); at /usr/include/c++/12/condition_variable:312; #9 0x00007f133726df05 in std::_V2::condition_variable_any::wait<std::unique",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:7617,Performance,optimiz,optimized,7617,"0x7f133827b950, fd=33) at ../sysdeps/unix/sysv/linux/read.c:26; 18 Thread 0x7f132a120640 (LWP 34585) ""python"" __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x7f132a11f330, op=137, ; expected=0, futex_word=0x7f1370d85acc <_PyRuntime+428>) at futex-internal.c:57; 19 Thread 0x7f132991f640 (LWP 34586) ""python"" __GI___libc_read (nbytes=4, buf=0x7f13382bf140, fd=31) at ../sysdeps/unix/sysv/linux/read.c:26; 20 Thread 0x7f132911e640 (LWP 34587) ""python"" __futex_abstimed_wait_common64 (private=<optimized out>, cancel=true, abstime=0x0, op=393, ; expected=0, futex_word=0x562911e622b0) at futex-internal.c:57; * 21 Thread 0x7f131ad44640 (LWP 34739) ""python"" 0x00007f1332cbafdc in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/libCling.so; ```. The two most interesting ones are threads `1` and `21`:; Thread1; ```; #6 std::__condvar::wait (__m=..., this=<optimized out>); at /usr/src/debug/gcc-12.2.1-2.fc36.x86_64/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/std_mutex.h:155; #7 std::condition_variable::wait (this=<optimized out>, __lock=...) at ../../../../../libstdc++-v3/src/c++11/condition_variable.cc:41; #8 0x00007f133726f0aa in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x7f1310200730, __lock=...); at /usr/include/c++/12/condition_variable:312; #9 0x00007f133726df05 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x7f1310200730, __lock=..., __p=...) at /usr/include/c++/12/condition_variable:321; #10 0x00007f1337269c3e in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x7f13102006f8); at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:7804,Performance,optimiz,optimized,7804,"l=true, abstime=0x7f132a11f330, op=137, ; expected=0, futex_word=0x7f1370d85acc <_PyRuntime+428>) at futex-internal.c:57; 19 Thread 0x7f132991f640 (LWP 34586) ""python"" __GI___libc_read (nbytes=4, buf=0x7f13382bf140, fd=31) at ../sysdeps/unix/sysv/linux/read.c:26; 20 Thread 0x7f132911e640 (LWP 34587) ""python"" __futex_abstimed_wait_common64 (private=<optimized out>, cancel=true, abstime=0x0, op=393, ; expected=0, futex_word=0x562911e622b0) at futex-internal.c:57; * 21 Thread 0x7f131ad44640 (LWP 34739) ""python"" 0x00007f1332cbafdc in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/libCling.so; ```. The two most interesting ones are threads `1` and `21`:; Thread1; ```; #6 std::__condvar::wait (__m=..., this=<optimized out>); at /usr/src/debug/gcc-12.2.1-2.fc36.x86_64/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/std_mutex.h:155; #7 std::condition_variable::wait (this=<optimized out>, __lock=...) at ../../../../../libstdc++-v3/src/c++11/condition_variable.cc:41; #8 0x00007f133726f0aa in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x7f1310200730, __lock=...); at /usr/include/c++/12/condition_variable:312; #9 0x00007f133726df05 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x7f1310200730, __lock=..., __p=...) at /usr/include/c++/12/condition_variable:321; #10 0x00007f1337269c3e in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x7f13102006f8); at /home/vpadulan/programs/rootproject/rootsrc/core/thread/src/TReentrantRWLock.cxx:190; #11 0x00007f1337277d74 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:13030,Performance,concurren,concurrently,13030,"/root/files/9735187/0001-Print-statements-for-DistRDF-Cling-failure.txt). The following is a Python script with the test; ```py; import os. import pyspark; from dask.distributed import Client, LocalCluster. import ROOT; RunGraphs = ROOT.RDF.Experimental.Distributed.RunGraphs; SparkDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; DaskDF = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; # verbosity = ROOT.Experimental.RLogScopedVerbosity(ROOT.Detail.RDF.RDFLogChannel(), ROOT.Experimental.ELogLevel.kDebug+10). def connection():; daskconn = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True, memory_limit=""2GiB"")). conf = {""spark.master"": ""local[2]"", ""spark.driver.memory"": ""4g"", ""spark.app.name"": ""roottest-distrdf-common""}; sparkconf = pyspark.SparkConf().setAll(conf.items()); sparkconn = pyspark.SparkContext(conf=sparkconf). return daskconn, sparkconn. def test_rungraphs_sparkanddask_3histos(daskconn, sparkconn):; """"""; Submit three different RDF graphs concurrently to Spark and Dask; """"""; # Create a test file for processing; treename = ""myTree""; filename = ""2clusters.root""; nentries = 10000; opts = ROOT.RDF.RSnapshotOptions(); opts.fAutoFlush = 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:52,Testability,test,test,52,"# The problem. Sometimes the distributed RDataFrame test of the `RunGraphs` functionality fails, for example [in this CI run](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156523/testReport/projectroot.roottest.python.distrdf/common/roottest_python_distrdf_common_test_all/). The visible error from the user side comes from Dask, which serializes a Python RuntimeError and produces some output log on stdout as follows:. ```; 2022-10-07 17:00:25,901 - distributed.worker - WARNING - Compute Failed; Key: dask_mapper-d6baeae1-74a8-4a41-84e9-6ee2e8db064f; Function: execute_task; args: ((<function DaskBackend.ProcessAndMerge.<locals>.dask_mapper at 0x7f0cdae1a320>, (<function apply at 0x7f0cfa133910>, <class 'DistRDF.Ranges.TreeRangePerc'>, (), (<class 'dict'>, [['id', 1], ['treenames', ['myTree']], ['filenames', ['2clusters.root']], ['first_file_idx', 0], ['last_file_idx', 1], ['first_tree_start_perc', 0.5], ['last_tree_end_perc', 1], ['friendinfo', None]])))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:206,Testability,test,testReport,206,"# The problem. Sometimes the distributed RDataFrame test of the `RunGraphs` functionality fails, for example [in this CI run](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156523/testReport/projectroot.roottest.python.distrdf/common/roottest_python_distrdf_common_test_all/). The visible error from the user side comes from Dask, which serializes a Python RuntimeError and produces some output log on stdout as follows:. ```; 2022-10-07 17:00:25,901 - distributed.worker - WARNING - Compute Failed; Key: dask_mapper-d6baeae1-74a8-4a41-84e9-6ee2e8db064f; Function: execute_task; args: ((<function DaskBackend.ProcessAndMerge.<locals>.dask_mapper at 0x7f0cdae1a320>, (<function apply at 0x7f0cfa133910>, <class 'DistRDF.Ranges.TreeRangePerc'>, (), (<class 'dict'>, [['id', 1], ['treenames', ['myTree']], ['filenames', ['2clusters.root']], ['first_file_idx', 0], ['last_file_idx', 1], ['first_tree_start_perc', 0.5], ['last_tree_end_perc', 1], ['friendinfo', None]])))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:421,Testability,log,log,421,"# The problem. Sometimes the distributed RDataFrame test of the `RunGraphs` functionality fails, for example [in this CI run](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156523/testReport/projectroot.roottest.python.distrdf/common/roottest_python_distrdf_common_test_all/). The visible error from the user side comes from Dask, which serializes a Python RuntimeError and produces some output log on stdout as follows:. ```; 2022-10-07 17:00:25,901 - distributed.worker - WARNING - Compute Failed; Key: dask_mapper-d6baeae1-74a8-4a41-84e9-6ee2e8db064f; Function: execute_task; args: ((<function DaskBackend.ProcessAndMerge.<locals>.dask_mapper at 0x7f0cdae1a320>, (<function apply at 0x7f0cfa133910>, <class 'DistRDF.Ranges.TreeRangePerc'>, (), (<class 'dict'>, [['id', 1], ['treenames', ['myTree']], ['filenames', ['2clusters.root']], ['first_file_idx', 0], ['last_file_idx', 1], ['first_tree_start_perc', 0.5], ['last_tree_end_perc', 1], ['friendinfo', None]])))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:12153,Testability,test,test,12153,"e>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""...); at /home/vpadulan/programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:340; #6 0x00007f132bf6def9 in ROOT::Internal::RDF::InterpreterCalc (; code=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""..., context=""RLoopManager::Run""); ```. Which as a first instinct hints at some possible contention between the different things cling is doing in the two threads. For the moment I cannot come up with an easier reproducer, see next section for more details. # How to reproduce. Here is the patch to print the statements that show the PID (as .txt so that I can attach it to this issue):; [0001-Print-statements-for-DistRDF-Cling-failure.txt](https://github.com/root-project/root/files/9735187/0001-Print-statements-for-DistRDF-Cling-failure.txt). The following is a Python script with the test; ```py; import os. import pyspark; from dask.distributed import Client, LocalCluster. import ROOT; RunGraphs = ROOT.RDF.Experimental.Distributed.RunGraphs; SparkDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; DaskDF = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; # verbosity = ROOT.Experimental.RLogScopedVerbosity(ROOT.Detail.RDF.RDFLogChannel(), ROOT.Experimental.ELogLevel.kDebug+10). def connection():; daskconn = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True, memory_limit=""2GiB"")). conf = {""spark.master"": ""local[2]"", ""spark.driver.memory"": ""4g"", ""spark.app.name"": ""roottest-distrdf-common""}; sparkconf = pyspark.SparkConf().setAll(conf.items()); sparkconn = pyspark.SparkContext(conf=sparkconf). return daskconn, sparkconn. def test_rungraphs_sparkanddask_3histos(daskconn, sparkconn):; """"""; Submit three different RDF graphs concurrently to Spark and Dask; """"""; # Create a test file for processing; treename = ""myTree""; filename = ""2clust",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:13078,Testability,test,test,13078,"/root/files/9735187/0001-Print-statements-for-DistRDF-Cling-failure.txt). The following is a Python script with the test; ```py; import os. import pyspark; from dask.distributed import Client, LocalCluster. import ROOT; RunGraphs = ROOT.RDF.Experimental.Distributed.RunGraphs; SparkDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; DaskDF = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; # verbosity = ROOT.Experimental.RLogScopedVerbosity(ROOT.Detail.RDF.RDFLogChannel(), ROOT.Experimental.ELogLevel.kDebug+10). def connection():; daskconn = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True, memory_limit=""2GiB"")). conf = {""spark.master"": ""local[2]"", ""spark.driver.memory"": ""4g"", ""spark.app.name"": ""roottest-distrdf-common""}; sparkconf = pyspark.SparkConf().setAll(conf.items()); sparkconn = pyspark.SparkContext(conf=sparkconf). return daskconn, sparkconn. def test_rungraphs_sparkanddask_3histos(daskconn, sparkconn):; """"""; Submit three different RDF graphs concurrently to Spark and Dask; """"""; # Create a test file for processing; treename = ""myTree""; filename = ""2clusters.root""; nentries = 10000; opts = ROOT.RDF.RSnapshotOptions(); opts.fAutoFlush = 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:13846,Testability,assert,assert,13846,"pyspark.SparkConf().setAll(conf.items()); sparkconn = pyspark.SparkContext(conf=sparkconf). return daskconn, sparkconn. def test_rungraphs_sparkanddask_3histos(daskconn, sparkconn):; """"""; Submit three different RDF graphs concurrently to Spark and Dask; """"""; # Create a test file for processing; treename = ""myTree""; filename = ""2clusters.root""; nentries = 10000; opts = ROOT.RDF.RSnapshotOptions(); opts.fAutoFlush = 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.proxied_node.value; assert isinstance(histo, ROOT.TH1D); assert histo.GetEntries() == nentries; assert histo.GetMean() == 42. os.remove(filename). def main():; test_rungraphs_sparkanddask_3histos(*connection()). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And here is a bash script that runs the previous Python script in a loop until it fails; ```; counter=0; while test $? -eq 0; do ; counter=$(($counter+1)); echo -e ""\nRunning test $counter\n""; CLING_DEBUG=1 python test.py; done. # Remove leftover file from the test when it fails; rm 2clusters.root; ```. ### Setup. ROOT [master@b13756d](https://github.com/root-project/root/commit/b13756d544d91803e31c7b6aa0c32ae05481e7f8); Python 3.10.7; Java 19; pyspark 3.3.0; dask/distributed 2022.7.1. ROOT built w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:14054,Testability,assert,assert,14054,"; # Create a test file for processing; treename = ""myTree""; filename = ""2clusters.root""; nentries = 10000; opts = ROOT.RDF.RSnapshotOptions(); opts.fAutoFlush = 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.proxied_node.value; assert isinstance(histo, ROOT.TH1D); assert histo.GetEntries() == nentries; assert histo.GetMean() == 42. os.remove(filename). def main():; test_rungraphs_sparkanddask_3histos(*connection()). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And here is a bash script that runs the previous Python script in a loop until it fails; ```; counter=0; while test $? -eq 0; do ; counter=$(($counter+1)); echo -e ""\nRunning test $counter\n""; CLING_DEBUG=1 python test.py; done. # Remove leftover file from the test when it fails; rm 2clusters.root; ```. ### Setup. ROOT [master@b13756d](https://github.com/root-project/root/commit/b13756d544d91803e31c7b6aa0c32ae05481e7f8); Python 3.10.7; Java 19; pyspark 3.3.0; dask/distributed 2022.7.1. ROOT built with:; ```; cmake -GNinja -Dccache=ON -Dminimal=ON -Dtesting=ON -Droottest=ON -Dpyroot=ON -Ddataframe=ON -Dxrootd=ON -Dtest_distrdf_pyspark=ON -Dtest_distrdf_dask=ON -DCMAKE_BUILD_TYPE=Debug -Dimt=ON; ```. ### Additional context. I am tentatively assigning th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:14091,Testability,assert,assert,14091,"ocessing; treename = ""myTree""; filename = ""2clusters.root""; nentries = 10000; opts = ROOT.RDF.RSnapshotOptions(); opts.fAutoFlush = 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.proxied_node.value; assert isinstance(histo, ROOT.TH1D); assert histo.GetEntries() == nentries; assert histo.GetMean() == 42. os.remove(filename). def main():; test_rungraphs_sparkanddask_3histos(*connection()). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And here is a bash script that runs the previous Python script in a loop until it fails; ```; counter=0; while test $? -eq 0; do ; counter=$(($counter+1)); echo -e ""\nRunning test $counter\n""; CLING_DEBUG=1 python test.py; done. # Remove leftover file from the test when it fails; rm 2clusters.root; ```. ### Setup. ROOT [master@b13756d](https://github.com/root-project/root/commit/b13756d544d91803e31c7b6aa0c32ae05481e7f8); Python 3.10.7; Java 19; pyspark 3.3.0; dask/distributed 2022.7.1. ROOT built with:; ```; cmake -GNinja -Dccache=ON -Dminimal=ON -Dtesting=ON -Droottest=ON -Dpyroot=ON -Ddataframe=ON -Dxrootd=ON -Dtest_distrdf_pyspark=ON -Dtest_distrdf_dask=ON -DCMAKE_BUILD_TYPE=Debug -Dimt=ON; ```. ### Additional context. I am tentatively assigning this also to @Axel-Naumann @vg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:14130,Testability,assert,assert,14130,"; filename = ""2clusters.root""; nentries = 10000; opts = ROOT.RDF.RSnapshotOptions(); opts.fAutoFlush = 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.proxied_node.value; assert isinstance(histo, ROOT.TH1D); assert histo.GetEntries() == nentries; assert histo.GetMean() == 42. os.remove(filename). def main():; test_rungraphs_sparkanddask_3histos(*connection()). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And here is a bash script that runs the previous Python script in a loop until it fails; ```; counter=0; while test $? -eq 0; do ; counter=$(($counter+1)); echo -e ""\nRunning test $counter\n""; CLING_DEBUG=1 python test.py; done. # Remove leftover file from the test when it fails; rm 2clusters.root; ```. ### Setup. ROOT [master@b13756d](https://github.com/root-project/root/commit/b13756d544d91803e31c7b6aa0c32ae05481e7f8); Python 3.10.7; Java 19; pyspark 3.3.0; dask/distributed 2022.7.1. ROOT built with:; ```; cmake -GNinja -Dccache=ON -Dminimal=ON -Dtesting=ON -Droottest=ON -Dpyroot=ON -Ddataframe=ON -Dxrootd=ON -Dtest_distrdf_pyspark=ON -Dtest_distrdf_dask=ON -DCMAKE_BUILD_TYPE=Debug -Dimt=ON; ```. ### Additional context. I am tentatively assigning this also to @Axel-Naumann @vgvassilev @jalopezg-r00t who ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:14416,Testability,test,test,14416,"= 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.proxied_node.value; assert isinstance(histo, ROOT.TH1D); assert histo.GetEntries() == nentries; assert histo.GetMean() == 42. os.remove(filename). def main():; test_rungraphs_sparkanddask_3histos(*connection()). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And here is a bash script that runs the previous Python script in a loop until it fails; ```; counter=0; while test $? -eq 0; do ; counter=$(($counter+1)); echo -e ""\nRunning test $counter\n""; CLING_DEBUG=1 python test.py; done. # Remove leftover file from the test when it fails; rm 2clusters.root; ```. ### Setup. ROOT [master@b13756d](https://github.com/root-project/root/commit/b13756d544d91803e31c7b6aa0c32ae05481e7f8); Python 3.10.7; Java 19; pyspark 3.3.0; dask/distributed 2022.7.1. ROOT built with:; ```; cmake -GNinja -Dccache=ON -Dminimal=ON -Dtesting=ON -Droottest=ON -Dpyroot=ON -Ddataframe=ON -Dxrootd=ON -Dtest_distrdf_pyspark=ON -Dtest_distrdf_dask=ON -DCMAKE_BUILD_TYPE=Debug -Dimt=ON; ```. ### Additional context. I am tentatively assigning this also to @Axel-Naumann @vgvassilev @jalopezg-r00t who may have an easier time at understanding the output from gdb and help in creating a simpler reproducer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:14480,Testability,test,test,14480,"= 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.proxied_node.value; assert isinstance(histo, ROOT.TH1D); assert histo.GetEntries() == nentries; assert histo.GetMean() == 42. os.remove(filename). def main():; test_rungraphs_sparkanddask_3histos(*connection()). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And here is a bash script that runs the previous Python script in a loop until it fails; ```; counter=0; while test $? -eq 0; do ; counter=$(($counter+1)); echo -e ""\nRunning test $counter\n""; CLING_DEBUG=1 python test.py; done. # Remove leftover file from the test when it fails; rm 2clusters.root; ```. ### Setup. ROOT [master@b13756d](https://github.com/root-project/root/commit/b13756d544d91803e31c7b6aa0c32ae05481e7f8); Python 3.10.7; Java 19; pyspark 3.3.0; dask/distributed 2022.7.1. ROOT built with:; ```; cmake -GNinja -Dccache=ON -Dminimal=ON -Dtesting=ON -Droottest=ON -Dpyroot=ON -Ddataframe=ON -Dxrootd=ON -Dtest_distrdf_pyspark=ON -Dtest_distrdf_dask=ON -DCMAKE_BUILD_TYPE=Debug -Dimt=ON; ```. ### Additional context. I am tentatively assigning this also to @Axel-Naumann @vgvassilev @jalopezg-r00t who may have an easier time at understanding the output from gdb and help in creating a simpler reproducer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:14519,Testability,test,test,14519,"= 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.proxied_node.value; assert isinstance(histo, ROOT.TH1D); assert histo.GetEntries() == nentries; assert histo.GetMean() == 42. os.remove(filename). def main():; test_rungraphs_sparkanddask_3histos(*connection()). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And here is a bash script that runs the previous Python script in a loop until it fails; ```; counter=0; while test $? -eq 0; do ; counter=$(($counter+1)); echo -e ""\nRunning test $counter\n""; CLING_DEBUG=1 python test.py; done. # Remove leftover file from the test when it fails; rm 2clusters.root; ```. ### Setup. ROOT [master@b13756d](https://github.com/root-project/root/commit/b13756d544d91803e31c7b6aa0c32ae05481e7f8); Python 3.10.7; Java 19; pyspark 3.3.0; dask/distributed 2022.7.1. ROOT built with:; ```; cmake -GNinja -Dccache=ON -Dminimal=ON -Dtesting=ON -Droottest=ON -Dpyroot=ON -Ddataframe=ON -Dxrootd=ON -Dtest_distrdf_pyspark=ON -Dtest_distrdf_dask=ON -DCMAKE_BUILD_TYPE=Debug -Dimt=ON; ```. ### Additional context. I am tentatively assigning this also to @Axel-Naumann @vgvassilev @jalopezg-r00t who may have an easier time at understanding the output from gdb and help in creating a simpler reproducer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:14566,Testability,test,test,14566,"= 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.proxied_node.value; assert isinstance(histo, ROOT.TH1D); assert histo.GetEntries() == nentries; assert histo.GetMean() == 42. os.remove(filename). def main():; test_rungraphs_sparkanddask_3histos(*connection()). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And here is a bash script that runs the previous Python script in a loop until it fails; ```; counter=0; while test $? -eq 0; do ; counter=$(($counter+1)); echo -e ""\nRunning test $counter\n""; CLING_DEBUG=1 python test.py; done. # Remove leftover file from the test when it fails; rm 2clusters.root; ```. ### Setup. ROOT [master@b13756d](https://github.com/root-project/root/commit/b13756d544d91803e31c7b6aa0c32ae05481e7f8); Python 3.10.7; Java 19; pyspark 3.3.0; dask/distributed 2022.7.1. ROOT built with:; ```; cmake -GNinja -Dccache=ON -Dminimal=ON -Dtesting=ON -Droottest=ON -Dpyroot=ON -Ddataframe=ON -Dxrootd=ON -Dtest_distrdf_pyspark=ON -Dtest_distrdf_dask=ON -DCMAKE_BUILD_TYPE=Debug -Dimt=ON; ```. ### Additional context. I am tentatively assigning this also to @Axel-Naumann @vgvassilev @jalopezg-r00t who may have an easier time at understanding the output from gdb and help in creating a simpler reproducer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/issues/11515:15206,Usability,simpl,simpler,15206,"= 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.proxied_node.value; assert isinstance(histo, ROOT.TH1D); assert histo.GetEntries() == nentries; assert histo.GetMean() == 42. os.remove(filename). def main():; test_rungraphs_sparkanddask_3histos(*connection()). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And here is a bash script that runs the previous Python script in a loop until it fails; ```; counter=0; while test $? -eq 0; do ; counter=$(($counter+1)); echo -e ""\nRunning test $counter\n""; CLING_DEBUG=1 python test.py; done. # Remove leftover file from the test when it fails; rm 2clusters.root; ```. ### Setup. ROOT [master@b13756d](https://github.com/root-project/root/commit/b13756d544d91803e31c7b6aa0c32ae05481e7f8); Python 3.10.7; Java 19; pyspark 3.3.0; dask/distributed 2022.7.1. ROOT built with:; ```; cmake -GNinja -Dccache=ON -Dminimal=ON -Dtesting=ON -Droottest=ON -Dpyroot=ON -Ddataframe=ON -Dxrootd=ON -Dtest_distrdf_pyspark=ON -Dtest_distrdf_dask=ON -DCMAKE_BUILD_TYPE=Debug -Dimt=ON; ```. ### Additional context. I am tentatively assigning this also to @Axel-Naumann @vgvassilev @jalopezg-r00t who may have an easier time at understanding the output from gdb and help in creating a simpler reproducer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11515
https://github.com/root-project/root/pull/11517:110,Availability,mask,masked,110,"With this (large) patch, RAction, RFilter, RDefine, RRange and RVariation learn how to operate on ranges of N masked entries instead of one entry at a time. Currently ranges are always of size 1, but most of RDF's internal logic has been parameterized over that size. Notably, RAction, RFilter, RDefine and RDefineReader should be now almost completely ""bulkified"" while RVariation and other column readers (e.g. RVariationReader and RTreeColumnReader) still have some logic that assumes a bulk size of 1 (e.g. they only store a single result/value at a time). **Note**: This is still a draft PR because the performance impact of these changes, when using a bulk size of 1, seems to be significant.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11517
https://github.com/root-project/root/pull/11517:18,Deployability,patch,patch,18,"With this (large) patch, RAction, RFilter, RDefine, RRange and RVariation learn how to operate on ranges of N masked entries instead of one entry at a time. Currently ranges are always of size 1, but most of RDF's internal logic has been parameterized over that size. Notably, RAction, RFilter, RDefine and RDefineReader should be now almost completely ""bulkified"" while RVariation and other column readers (e.g. RVariationReader and RTreeColumnReader) still have some logic that assumes a bulk size of 1 (e.g. they only store a single result/value at a time). **Note**: This is still a draft PR because the performance impact of these changes, when using a bulk size of 1, seems to be significant.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11517
https://github.com/root-project/root/pull/11517:238,Modifiability,parameteriz,parameterized,238,"With this (large) patch, RAction, RFilter, RDefine, RRange and RVariation learn how to operate on ranges of N masked entries instead of one entry at a time. Currently ranges are always of size 1, but most of RDF's internal logic has been parameterized over that size. Notably, RAction, RFilter, RDefine and RDefineReader should be now almost completely ""bulkified"" while RVariation and other column readers (e.g. RVariationReader and RTreeColumnReader) still have some logic that assumes a bulk size of 1 (e.g. they only store a single result/value at a time). **Note**: This is still a draft PR because the performance impact of these changes, when using a bulk size of 1, seems to be significant.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11517
https://github.com/root-project/root/pull/11517:608,Performance,perform,performance,608,"With this (large) patch, RAction, RFilter, RDefine, RRange and RVariation learn how to operate on ranges of N masked entries instead of one entry at a time. Currently ranges are always of size 1, but most of RDF's internal logic has been parameterized over that size. Notably, RAction, RFilter, RDefine and RDefineReader should be now almost completely ""bulkified"" while RVariation and other column readers (e.g. RVariationReader and RTreeColumnReader) still have some logic that assumes a bulk size of 1 (e.g. they only store a single result/value at a time). **Note**: This is still a draft PR because the performance impact of these changes, when using a bulk size of 1, seems to be significant.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11517
https://github.com/root-project/root/pull/11517:223,Testability,log,logic,223,"With this (large) patch, RAction, RFilter, RDefine, RRange and RVariation learn how to operate on ranges of N masked entries instead of one entry at a time. Currently ranges are always of size 1, but most of RDF's internal logic has been parameterized over that size. Notably, RAction, RFilter, RDefine and RDefineReader should be now almost completely ""bulkified"" while RVariation and other column readers (e.g. RVariationReader and RTreeColumnReader) still have some logic that assumes a bulk size of 1 (e.g. they only store a single result/value at a time). **Note**: This is still a draft PR because the performance impact of these changes, when using a bulk size of 1, seems to be significant.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11517
https://github.com/root-project/root/pull/11517:469,Testability,log,logic,469,"With this (large) patch, RAction, RFilter, RDefine, RRange and RVariation learn how to operate on ranges of N masked entries instead of one entry at a time. Currently ranges are always of size 1, but most of RDF's internal logic has been parameterized over that size. Notably, RAction, RFilter, RDefine and RDefineReader should be now almost completely ""bulkified"" while RVariation and other column readers (e.g. RVariationReader and RTreeColumnReader) still have some logic that assumes a bulk size of 1 (e.g. they only store a single result/value at a time). **Note**: This is still a draft PR because the performance impact of these changes, when using a bulk size of 1, seems to be significant.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11517
https://github.com/root-project/root/pull/11517:74,Usability,learn,learn,74,"With this (large) patch, RAction, RFilter, RDefine, RRange and RVariation learn how to operate on ranges of N masked entries instead of one entry at a time. Currently ranges are always of size 1, but most of RDF's internal logic has been parameterized over that size. Notably, RAction, RFilter, RDefine and RDefineReader should be now almost completely ""bulkified"" while RVariation and other column readers (e.g. RVariationReader and RTreeColumnReader) still have some logic that assumes a bulk size of 1 (e.g. they only store a single result/value at a time). **Note**: This is still a draft PR because the performance impact of these changes, when using a bulk size of 1, seems to be significant.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11517
https://github.com/root-project/root/pull/11518:523,Modifiability,inherit,inherits,523,"## Changes or fixes:. Use registry pattern for the ONNX parser. Now the operators and the tensor types are stored in a std::unordered_map. All the implemented operators are registered automatically when creating an object of type RModelParser_ONNX. When parsing an onnx graph the parser checks the type of the onnx node and throw an exception if it's not implemented or call the corresponding function to parse it. This PR also makes SOFIE more modular. Now operators can be added simply by defining an operator class that inherits from ROperator, defining a function to parse the onnx node and registering this function to the parser. ## Example of adding a new ONNX operator. ```{c++}; #include ""onnx_proto3.pb.h""; #include ""TMVA/RModel.hxx""; #include ""TMVA/RModelParser_ONNX.hxx"". using namespace TMVA::Experimental::SOFIE;. template<typename T>; struct ROperator_Sign : public ROperator {; std::string fNX;; std::string fNY;; std::vector<size_t> fShapeX;; std::vector<size_t> fShapeY;. ROperator_Sign(std::string nameX, std::string nameY) : fNX(nameX), fNY(nameY) {}. std::vector<std::vector<size_t>> ShapeInference(std::vector<std::vector<size_t>> input) override {; return input;; }. std::vector<ETensorType> TypeInference(std::vector<ETensorType> input) override {; return input;; }. void Initialize(RModel& model) override {; if (!model.CheckIfTensorAlreadyExist(fNX)) {; throw std::runtime_error(""TMVA::SOFIE - Tensor "" + fNX + "" not found."");; }; fShapeX = model.GetTensorShape(fNX);; fShapeY = fShapeX;; //fShapeY = ShapeInference({fShapeX})[0];; model.AddIntermediateTensor(fNY, model.GetTensorType(fNX), fShapeY);; }. std::string Generate(std::string OpName) override {; OpName = ""op_"" + OpName;; std::stringstream out;. out << SP << ""\n//---- Operator"" << OpName << ""\n"";; size_t length = ConvertShapeToLength(fShapeX);; out << SP << ""for (size_t i = 0; i < "" << length << ""; i++) {\n"";; out << SP << SP << ""if (tensor_"" << fNX << ""[i] > 0.) {\n"";; out << SP << SP << SP << ""tensor_"" << ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11518
https://github.com/root-project/root/pull/11518:4567,Testability,test,tested,4567,":string input_name = nodeproto.input(0);; if (parser.IsRegisteredTensorType(input_name)) {; input_type = parser.GetTensorType(input_name);; } else {; throw std::runtime_error(""TMVA::SOFIE ONNX Parser Sign op has input tensor "" + input_name +; "" but its type is not yet registered"");; }. const std::string output_name = nodeproto.output(0);; switch (input_type) {; case ETensorType::FLOAT: op.reset(new ROperator_Sign<float>(input_name, output_name)); break;; default:; throw std::runtime_error(""TMVA::SOFIE - Unsupported - Sign Operator does not support imput type "" +; std::to_string(static_cast<int>(input_type)));; }. if (!parser.IsRegisteredTensorType(output_name)) {; parser.RegisterTensorType(output_name, input_type);; }; return op;; };. void SofieSign() {. RModelParser_ONNX parser;. // Register the Sign operator; parser.RegisterOperator(""Sign"", ParseSign);. // Parse the model; RModel model = parser.Parse(""Sign.onnx"");; model.Generate();; model.OutputGenerated();; }; ```; the ``onnx_proto3.pb.h`` is generated from the ``onnx_proto3`` file by runing ``protoc --cpp_out=. onnx_proto3``. The generated code looks like this:; ```{c++}; //Code generated automatically by TMVA for Inference of Model file [Sign.onnx] at [Sat Oct 8 13:10:40 2022] . #ifndef TMVA_SOFIE_SIGN; #define TMVA_SOFIE_SIGN. #include<vector>; #include ""TMVA/SOFIE_common.hxx""; #include <fstream>. namespace TMVA_SOFIE_Sign{; struct Session {; std::vector<float> fTensor_Y = std::vector<float>(5);; float * tensor_Y = fTensor_Y.data();. Session(std::string filename ="""") {; if (filename.empty()) filename = ""Sign.dat"";; }. std::vector<float> infer(float* tensor_X){; ; //---- Operatorop_0; for (size_t i = 0; i < 5; i++) {; if (tensor_X[i] > 0.) {; tensor_Y[i] = 1.;; } else if (tensor_X[i] < 0.) {; tensor_Y[i] = -1.;; } else {; tensor_Y[i] = 0.;; }; }; std::vector<float> ret (tensor_Y, tensor_Y + 5);; return ret;; }; };; } //TMVA_SOFIE_Sign. #endif // TMVA_SOFIE_SIGN; ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11518
https://github.com/root-project/root/pull/11518:481,Usability,simpl,simply,481,"## Changes or fixes:. Use registry pattern for the ONNX parser. Now the operators and the tensor types are stored in a std::unordered_map. All the implemented operators are registered automatically when creating an object of type RModelParser_ONNX. When parsing an onnx graph the parser checks the type of the onnx node and throw an exception if it's not implemented or call the corresponding function to parse it. This PR also makes SOFIE more modular. Now operators can be added simply by defining an operator class that inherits from ROperator, defining a function to parse the onnx node and registering this function to the parser. ## Example of adding a new ONNX operator. ```{c++}; #include ""onnx_proto3.pb.h""; #include ""TMVA/RModel.hxx""; #include ""TMVA/RModelParser_ONNX.hxx"". using namespace TMVA::Experimental::SOFIE;. template<typename T>; struct ROperator_Sign : public ROperator {; std::string fNX;; std::string fNY;; std::vector<size_t> fShapeX;; std::vector<size_t> fShapeY;. ROperator_Sign(std::string nameX, std::string nameY) : fNX(nameX), fNY(nameY) {}. std::vector<std::vector<size_t>> ShapeInference(std::vector<std::vector<size_t>> input) override {; return input;; }. std::vector<ETensorType> TypeInference(std::vector<ETensorType> input) override {; return input;; }. void Initialize(RModel& model) override {; if (!model.CheckIfTensorAlreadyExist(fNX)) {; throw std::runtime_error(""TMVA::SOFIE - Tensor "" + fNX + "" not found."");; }; fShapeX = model.GetTensorShape(fNX);; fShapeY = fShapeX;; //fShapeY = ShapeInference({fShapeX})[0];; model.AddIntermediateTensor(fNY, model.GetTensorType(fNX), fShapeY);; }. std::string Generate(std::string OpName) override {; OpName = ""op_"" + OpName;; std::stringstream out;. out << SP << ""\n//---- Operator"" << OpName << ""\n"";; size_t length = ConvertShapeToLength(fShapeX);; out << SP << ""for (size_t i = 0; i < "" << length << ""; i++) {\n"";; out << SP << SP << ""if (tensor_"" << fNX << ""[i] > 0.) {\n"";; out << SP << SP << SP << ""tensor_"" << ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11518
https://github.com/root-project/root/issues/11519:636,Availability,down,download,636,"- [x] Checked for duplicates. ### Describe the bug; Windows running on non utf-8 code page will see scramble text for non-ascii folders and files in the current new html `TBrowser` implementation, and fails selection and opening. Older `TRootBrowser` did not have this issue but does not support 64 bit on windows. ### Expected behavior; TBrowser can see files and folders, select files and folders normally. ### To Reproduce; Used non-ascii windows system (should already have some non-ascii text in filesystem already), install root. ### Setup; 1. ROOT version: 6.26/06; 2. Operating system: Windows; 3. How you obtained ROOT binary: download from cern site. ### Additional context; Should be self explanatory. ### Suggested fix:; A post-build step should fix this on newer windows systems, as this documentation says:; https://learn.microsoft.com/en-us/windows/apps/design/globalizing/use-utf8-code-page. Tested and works on my machine. Related forum topic:; https://root-forum.cern.ch/t/tbrowser-non-ascii-text-scrambles-on-windows/51899",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11519
https://github.com/root-project/root/issues/11519:522,Deployability,install,install,522,"- [x] Checked for duplicates. ### Describe the bug; Windows running on non utf-8 code page will see scramble text for non-ascii folders and files in the current new html `TBrowser` implementation, and fails selection and opening. Older `TRootBrowser` did not have this issue but does not support 64 bit on windows. ### Expected behavior; TBrowser can see files and folders, select files and folders normally. ### To Reproduce; Used non-ascii windows system (should already have some non-ascii text in filesystem already), install root. ### Setup; 1. ROOT version: 6.26/06; 2. Operating system: Windows; 3. How you obtained ROOT binary: download from cern site. ### Additional context; Should be self explanatory. ### Suggested fix:; A post-build step should fix this on newer windows systems, as this documentation says:; https://learn.microsoft.com/en-us/windows/apps/design/globalizing/use-utf8-code-page. Tested and works on my machine. Related forum topic:; https://root-forum.cern.ch/t/tbrowser-non-ascii-text-scrambles-on-windows/51899",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11519
https://github.com/root-project/root/issues/11519:908,Testability,Test,Tested,908,"- [x] Checked for duplicates. ### Describe the bug; Windows running on non utf-8 code page will see scramble text for non-ascii folders and files in the current new html `TBrowser` implementation, and fails selection and opening. Older `TRootBrowser` did not have this issue but does not support 64 bit on windows. ### Expected behavior; TBrowser can see files and folders, select files and folders normally. ### To Reproduce; Used non-ascii windows system (should already have some non-ascii text in filesystem already), install root. ### Setup; 1. ROOT version: 6.26/06; 2. Operating system: Windows; 3. How you obtained ROOT binary: download from cern site. ### Additional context; Should be self explanatory. ### Suggested fix:; A post-build step should fix this on newer windows systems, as this documentation says:; https://learn.microsoft.com/en-us/windows/apps/design/globalizing/use-utf8-code-page. Tested and works on my machine. Related forum topic:; https://root-forum.cern.ch/t/tbrowser-non-ascii-text-scrambles-on-windows/51899",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11519
https://github.com/root-project/root/issues/11519:830,Usability,learn,learn,830,"- [x] Checked for duplicates. ### Describe the bug; Windows running on non utf-8 code page will see scramble text for non-ascii folders and files in the current new html `TBrowser` implementation, and fails selection and opening. Older `TRootBrowser` did not have this issue but does not support 64 bit on windows. ### Expected behavior; TBrowser can see files and folders, select files and folders normally. ### To Reproduce; Used non-ascii windows system (should already have some non-ascii text in filesystem already), install root. ### Setup; 1. ROOT version: 6.26/06; 2. Operating system: Windows; 3. How you obtained ROOT binary: download from cern site. ### Additional context; Should be self explanatory. ### Suggested fix:; A post-build step should fix this on newer windows systems, as this documentation says:; https://learn.microsoft.com/en-us/windows/apps/design/globalizing/use-utf8-code-page. Tested and works on my machine. Related forum topic:; https://root-forum.cern.ch/t/tbrowser-non-ascii-text-scrambles-on-windows/51899",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11519
https://github.com/root-project/root/pull/11522:143,Modifiability,variab,variable,143,"When reading in-memory trees that have just been filled in the same scope, TTreeReaderValue re-uses, as storage for the values being read, the variable that was used to fill the tree. When the same variable is used to fill more than one branch, this means that the addresses of the values of these branches will be the same when reading them back. This breaks the fundamental assumption in RDataFrame that TTreeReaderValues for different columns will store their values at different addresses. The test happens to work at the moment, but it will break once we switch to bulk I/O because of a different call order inside RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11522
https://github.com/root-project/root/pull/11522:198,Modifiability,variab,variable,198,"When reading in-memory trees that have just been filled in the same scope, TTreeReaderValue re-uses, as storage for the values being read, the variable that was used to fill the tree. When the same variable is used to fill more than one branch, this means that the addresses of the values of these branches will be the same when reading them back. This breaks the fundamental assumption in RDataFrame that TTreeReaderValues for different columns will store their values at different addresses. The test happens to work at the moment, but it will break once we switch to bulk I/O because of a different call order inside RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11522
https://github.com/root-project/root/pull/11522:498,Testability,test,test,498,"When reading in-memory trees that have just been filled in the same scope, TTreeReaderValue re-uses, as storage for the values being read, the variable that was used to fill the tree. When the same variable is used to fill more than one branch, this means that the addresses of the values of these branches will be the same when reading them back. This breaks the fundamental assumption in RDataFrame that TTreeReaderValues for different columns will store their values at different addresses. The test happens to work at the moment, but it will break once we switch to bulk I/O because of a different call order inside RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11522
https://github.com/root-project/root/issues/11523:465,Integrability,interface,interface,465,"### Explain what you would like to see improved; Support the storage of user-defined classes that behave as collections of elements. Such classes provide access to the collection via a class that overrides member functions in the `TVirtualCollectionProxy` class. . The collection proxy for a class is typically set during initialization, usually using `TClass::CopyCollectionProxy()` or similar. In later stages, RNTuple might provide this functionality through an interface different from the legacy `TVirtualCollectionProxy`. . ### Additional context; This is required for ATLAS data model, more specifically the `DataVector<T>` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11523
https://github.com/root-project/root/issues/11523:154,Security,access,access,154,"### Explain what you would like to see improved; Support the storage of user-defined classes that behave as collections of elements. Such classes provide access to the collection via a class that overrides member functions in the `TVirtualCollectionProxy` class. . The collection proxy for a class is typically set during initialization, usually using `TClass::CopyCollectionProxy()` or similar. In later stages, RNTuple might provide this functionality through an interface different from the legacy `TVirtualCollectionProxy`. . ### Additional context; This is required for ATLAS data model, more specifically the `DataVector<T>` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11523
https://github.com/root-project/root/pull/11524:115,Modifiability,variab,variable,115,"Fixes #11344 . Mostly quoting @eguiraud in #11344 :. import ROOT (via cppyy) causes the setting of the environment variable EXTRA_CLING_ARGS to -O2 -- but too late (after interpreter initialization), so that the setting actually has no effect: cling will still use its default of -O1, but checking EXTRA_CLING_ARGS will give users the wrong impression. Since there is no reason to set the environment variable in the first place, it has no effect anyway, and it can be confusing for users trying to figure out what options cling is running with, this PR removes the behavior from PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11524
https://github.com/root-project/root/pull/11524:401,Modifiability,variab,variable,401,"Fixes #11344 . Mostly quoting @eguiraud in #11344 :. import ROOT (via cppyy) causes the setting of the environment variable EXTRA_CLING_ARGS to -O2 -- but too late (after interpreter initialization), so that the setting actually has no effect: cling will still use its default of -O1, but checking EXTRA_CLING_ARGS will give users the wrong impression. Since there is no reason to set the environment variable in the first place, it has no effect anyway, and it can be confusing for users trying to figure out what options cling is running with, this PR removes the behavior from PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11524
https://github.com/root-project/root/pull/11525:2878,Deployability,Update,Update,2878,"r element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyClass>(""fieldKlass""); // Regular class; auto fieldCollection = model->MakeField<ProxiedCollection>(""fieldCollection""); // Class with associated collection proxy; ```; **This tag is not required when using the type-erased interface** (i.e., `RFieldBase::Create()`), as the use of a collection proxy can be determined at run time via `TClass`.; - `RCollectionClassField::ReadGlobalImpl()`: reduce the number of virtual calls to `TVirtualCollectionProxy::Insert()` by reading and inserting a block of elements at once. The size of the buffer that holds the elements is set by `RCollectionClassField::kReadChunkSize` (in bytes).; - Provide implementation and tests for `RPrintValueVisitor::VisitCollectionClassField()`; - Add unit tests for collections of fundamental types, compound types, vector of a collection proxy, and nested collection proxies.; - Update `doc/specifications.md`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11523.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11525
https://github.com/root-project/root/pull/11525:2961,Deployability,update,updated,2961,"r element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyClass>(""fieldKlass""); // Regular class; auto fieldCollection = model->MakeField<ProxiedCollection>(""fieldCollection""); // Class with associated collection proxy; ```; **This tag is not required when using the type-erased interface** (i.e., `RFieldBase::Create()`), as the use of a collection proxy can be determined at run time via `TClass`.; - `RCollectionClassField::ReadGlobalImpl()`: reduce the number of virtual calls to `TVirtualCollectionProxy::Insert()` by reading and inserting a block of elements at once. The size of the buffer that holds the elements is set by `RCollectionClassField::kReadChunkSize` (in bytes).; - Provide implementation and tests for `RPrintValueVisitor::VisitCollectionClassField()`; - Add unit tests for collections of fundamental types, compound types, vector of a collection proxy, and nested collection proxies.; - Update `doc/specifications.md`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11523.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11525
https://github.com/root-project/root/pull/11525:2415,Energy Efficiency,reduce,reduce,2415,"r element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyClass>(""fieldKlass""); // Regular class; auto fieldCollection = model->MakeField<ProxiedCollection>(""fieldCollection""); // Class with associated collection proxy; ```; **This tag is not required when using the type-erased interface** (i.e., `RFieldBase::Create()`), as the use of a collection proxy can be determined at run time via `TClass`.; - `RCollectionClassField::ReadGlobalImpl()`: reduce the number of virtual calls to `TVirtualCollectionProxy::Insert()` by reading and inserting a block of elements at once. The size of the buffer that holds the elements is set by `RCollectionClassField::kReadChunkSize` (in bytes).; - Provide implementation and tests for `RPrintValueVisitor::VisitCollectionClassField()`; - Add unit tests for collections of fundamental types, compound types, vector of a collection proxy, and nested collection proxies.; - Update `doc/specifications.md`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11523.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11525
https://github.com/root-project/root/pull/11525:657,Integrability,interface,interface,657,"This pull request introduces RField support for user-defined classes that behave as collections of elements. These classes specify a ""collection proxy"" that provides access to the elements in the collection.; A legacy collection proxy is provided in the form of an instance of a class derived from `TVirtualCollectionProxy`. The collection proxy for a class is typically set during initialization, usually using `TClass::CopyCollectionProxy()` or similar. In this pull request, we introduce support for legacy collection proxies derived from the `TVirtualCollectionProxy` class, although in later stages, RNTuple might provide this functionality through an interface different interface. At a bare minimum, the user is required to provide an implementation for the following functions in `TVirtualCollectionProxy`:; - `HasPointers()`, `GetProperties()`, `GetValueClass()`, `GetType()`, `Sizeof()`: for general information about the collection and its value type.; - `Sizeof()`, `At()`, `Clear()`, and `Insert()`: for element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldK",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11525
https://github.com/root-project/root/pull/11525:677,Integrability,interface,interface,677,"This pull request introduces RField support for user-defined classes that behave as collections of elements. These classes specify a ""collection proxy"" that provides access to the elements in the collection.; A legacy collection proxy is provided in the form of an instance of a class derived from `TVirtualCollectionProxy`. The collection proxy for a class is typically set during initialization, usually using `TClass::CopyCollectionProxy()` or similar. In this pull request, we introduce support for legacy collection proxies derived from the `TVirtualCollectionProxy` class, although in later stages, RNTuple might provide this functionality through an interface different interface. At a bare minimum, the user is required to provide an implementation for the following functions in `TVirtualCollectionProxy`:; - `HasPointers()`, `GetProperties()`, `GetValueClass()`, `GetType()`, `Sizeof()`: for general information about the collection and its value type.; - `Sizeof()`, `At()`, `Clear()`, and `Insert()`: for element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldK",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11525
https://github.com/root-project/root/pull/11525:1446,Integrability,interface,interface,1446,"s is typically set during initialization, usually using `TClass::CopyCollectionProxy()` or similar. In this pull request, we introduce support for legacy collection proxies derived from the `TVirtualCollectionProxy` class, although in later stages, RNTuple might provide this functionality through an interface different interface. At a bare minimum, the user is required to provide an implementation for the following functions in `TVirtualCollectionProxy`:; - `HasPointers()`, `GetProperties()`, `GetValueClass()`, `GetType()`, `Sizeof()`: for general information about the collection and its value type.; - `Sizeof()`, `At()`, `Clear()`, and `Insert()`: for element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyClass>(""fieldKlass""); // Regular class; auto fieldCollection = model->MakeField<ProxiedCollection>(""fieldCollection""); // Class with associated collection proxy; ```; **This tag is not required when using the type-erased interface** (i.e., `RFieldBase::Create()`), as the use of a collection proxy can be determined at run time vi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11525
https://github.com/root-project/root/pull/11525:2248,Integrability,interface,interface,2248,"r element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyClass>(""fieldKlass""); // Regular class; auto fieldCollection = model->MakeField<ProxiedCollection>(""fieldCollection""); // Class with associated collection proxy; ```; **This tag is not required when using the type-erased interface** (i.e., `RFieldBase::Create()`), as the use of a collection proxy can be determined at run time via `TClass`.; - `RCollectionClassField::ReadGlobalImpl()`: reduce the number of virtual calls to `TVirtualCollectionProxy::Insert()` by reading and inserting a block of elements at once. The size of the buffer that holds the elements is set by `RCollectionClassField::kReadChunkSize` (in bytes).; - Provide implementation and tests for `RPrintValueVisitor::VisitCollectionClassField()`; - Add unit tests for collections of fundamental types, compound types, vector of a collection proxy, and nested collection proxies.; - Update `doc/specifications.md`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11523.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11525
https://github.com/root-project/root/pull/11525:166,Security,access,access,166,"This pull request introduces RField support for user-defined classes that behave as collections of elements. These classes specify a ""collection proxy"" that provides access to the elements in the collection.; A legacy collection proxy is provided in the form of an instance of a class derived from `TVirtualCollectionProxy`. The collection proxy for a class is typically set during initialization, usually using `TClass::CopyCollectionProxy()` or similar. In this pull request, we introduce support for legacy collection proxies derived from the `TVirtualCollectionProxy` class, although in later stages, RNTuple might provide this functionality through an interface different interface. At a bare minimum, the user is required to provide an implementation for the following functions in `TVirtualCollectionProxy`:; - `HasPointers()`, `GetProperties()`, `GetValueClass()`, `GetType()`, `Sizeof()`: for general information about the collection and its value type.; - `Sizeof()`, `At()`, `Clear()`, and `Insert()`: for element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldK",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11525
https://github.com/root-project/root/pull/11525:1025,Security,access,access,1025,"RField support for user-defined classes that behave as collections of elements. These classes specify a ""collection proxy"" that provides access to the elements in the collection.; A legacy collection proxy is provided in the form of an instance of a class derived from `TVirtualCollectionProxy`. The collection proxy for a class is typically set during initialization, usually using `TClass::CopyCollectionProxy()` or similar. In this pull request, we introduce support for legacy collection proxies derived from the `TVirtualCollectionProxy` class, although in later stages, RNTuple might provide this functionality through an interface different interface. At a bare minimum, the user is required to provide an implementation for the following functions in `TVirtualCollectionProxy`:; - `HasPointers()`, `GetProperties()`, `GetValueClass()`, `GetType()`, `Sizeof()`: for general information about the collection and its value type.; - `Sizeof()`, `At()`, `Clear()`, and `Insert()`: for element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11525
https://github.com/root-project/root/pull/11525:2682,Testability,test,tests,2682,"r element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyClass>(""fieldKlass""); // Regular class; auto fieldCollection = model->MakeField<ProxiedCollection>(""fieldCollection""); // Class with associated collection proxy; ```; **This tag is not required when using the type-erased interface** (i.e., `RFieldBase::Create()`), as the use of a collection proxy can be determined at run time via `TClass`.; - `RCollectionClassField::ReadGlobalImpl()`: reduce the number of virtual calls to `TVirtualCollectionProxy::Insert()` by reading and inserting a block of elements at once. The size of the buffer that holds the elements is set by `RCollectionClassField::kReadChunkSize` (in bytes).; - Provide implementation and tests for `RPrintValueVisitor::VisitCollectionClassField()`; - Add unit tests for collections of fundamental types, compound types, vector of a collection proxy, and nested collection proxies.; - Update `doc/specifications.md`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11523.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11525
https://github.com/root-project/root/pull/11525:2754,Testability,test,tests,2754,"r element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyClass>(""fieldKlass""); // Regular class; auto fieldCollection = model->MakeField<ProxiedCollection>(""fieldCollection""); // Class with associated collection proxy; ```; **This tag is not required when using the type-erased interface** (i.e., `RFieldBase::Create()`), as the use of a collection proxy can be determined at run time via `TClass`.; - `RCollectionClassField::ReadGlobalImpl()`: reduce the number of virtual calls to `TVirtualCollectionProxy::Insert()` by reading and inserting a block of elements at once. The size of the buffer that holds the elements is set by `RCollectionClassField::kReadChunkSize` (in bytes).; - Provide implementation and tests for `RPrintValueVisitor::VisitCollectionClassField()`; - Add unit tests for collections of fundamental types, compound types, vector of a collection proxy, and nested collection proxies.; - Update `doc/specifications.md`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11523.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11525
https://github.com/root-project/root/pull/11525:2931,Testability,test,tested,2931,"r element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyClass>(""fieldKlass""); // Regular class; auto fieldCollection = model->MakeField<ProxiedCollection>(""fieldCollection""); // Class with associated collection proxy; ```; **This tag is not required when using the type-erased interface** (i.e., `RFieldBase::Create()`), as the use of a collection proxy can be determined at run time via `TClass`.; - `RCollectionClassField::ReadGlobalImpl()`: reduce the number of virtual calls to `TVirtualCollectionProxy::Insert()` by reading and inserting a block of elements at once. The size of the buffer that holds the elements is set by `RCollectionClassField::kReadChunkSize` (in bytes).; - Provide implementation and tests for `RPrintValueVisitor::VisitCollectionClassField()`; - Add unit tests for collections of fundamental types, compound types, vector of a collection proxy, and nested collection proxies.; - Update `doc/specifications.md`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11523.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11525
https://github.com/root-project/root/pull/11525:987,Usability,Clear,Clear,987,"RField support for user-defined classes that behave as collections of elements. These classes specify a ""collection proxy"" that provides access to the elements in the collection.; A legacy collection proxy is provided in the form of an instance of a class derived from `TVirtualCollectionProxy`. The collection proxy for a class is typically set during initialization, usually using `TClass::CopyCollectionProxy()` or similar. In this pull request, we introduce support for legacy collection proxies derived from the `TVirtualCollectionProxy` class, although in later stages, RNTuple might provide this functionality through an interface different interface. At a bare minimum, the user is required to provide an implementation for the following functions in `TVirtualCollectionProxy`:; - `HasPointers()`, `GetProperties()`, `GetValueClass()`, `GetType()`, `Sizeof()`: for general information about the collection and its value type.; - `Sizeof()`, `At()`, `Clear()`, and `Insert()`: for element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11525
https://github.com/root-project/root/pull/11526:992,Deployability,update,updated,992,"Introducing a class acting as a heterogenuous container to store; metadata. Since the intended use case would be obtaining metadata from; json files, the nlohmann::json is used as the underlying container.; This required an extra dependency in tree/dataframe. The RDatasetSpec now only has attributes (treenames, fileglobs, friendinfo,; entryrange, groupinfo), getters and only a single ctor taking a RSpecBuilder.; The user is no longer supposed to build a RDatasetSpec directly.; Therefore all corresponding tests are now removed. The RSpecBuilder has exactly the same attributes as RDatasetSpec, and writable; methods only - e.g. AddGroup, WithFriends, WithRange, Build (but no getters). The RLoopManager now has an extra attribute storing the group; information. It could be set only by the ctor taking a RDatasetSpec. The RDatasetSpec was holding the number of fileglobs in each group.; In the RLoopManager ctor (accepting a RDatasetSpec) the globs are; expanded and the group sizes are updated. However, group positioning; remains relevant to the global TChain in RLoopManager and hence; currently accesing groups/metadata requires global TTreeProcessorMT; chain creation. RSampleInfo now holds RMetadata and thus, could be accessed from DefinePerSample. ---; Example of a valid json file to be parsed:; ```json; {; 	""groups"": [{; 			""tag"": ""SIMULATED"",; 			""trees"": [""tree"", ""subTree"", ""subTree""],; 			""files"": [""test_dir/specTestFile00*.root"", ""specTestFile1.root"", ""specTestFile2.root""],; 			""metadata"": {; 				""year"": 2040,; 				""lumi"": 3.14,; 				""edeposit"": 19.0,; 				""datatype"": ""MC""; 			}; 		},; 		{; 			""tag"": ""REAL"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2012,; 				""century"": 20,; 				""experiment"": ""CMS""; 			}; 		},; 		{; 			""tag"": ""BLABLA"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2030,; 				""century"": 20,; 				""experiment"":",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11526
https://github.com/root-project/root/pull/11526:230,Integrability,depend,dependency,230,"Introducing a class acting as a heterogenuous container to store; metadata. Since the intended use case would be obtaining metadata from; json files, the nlohmann::json is used as the underlying container.; This required an extra dependency in tree/dataframe. The RDatasetSpec now only has attributes (treenames, fileglobs, friendinfo,; entryrange, groupinfo), getters and only a single ctor taking a RSpecBuilder.; The user is no longer supposed to build a RDatasetSpec directly.; Therefore all corresponding tests are now removed. The RSpecBuilder has exactly the same attributes as RDatasetSpec, and writable; methods only - e.g. AddGroup, WithFriends, WithRange, Build (but no getters). The RLoopManager now has an extra attribute storing the group; information. It could be set only by the ctor taking a RDatasetSpec. The RDatasetSpec was holding the number of fileglobs in each group.; In the RLoopManager ctor (accepting a RDatasetSpec) the globs are; expanded and the group sizes are updated. However, group positioning; remains relevant to the global TChain in RLoopManager and hence; currently accesing groups/metadata requires global TTreeProcessorMT; chain creation. RSampleInfo now holds RMetadata and thus, could be accessed from DefinePerSample. ---; Example of a valid json file to be parsed:; ```json; {; 	""groups"": [{; 			""tag"": ""SIMULATED"",; 			""trees"": [""tree"", ""subTree"", ""subTree""],; 			""files"": [""test_dir/specTestFile00*.root"", ""specTestFile1.root"", ""specTestFile2.root""],; 			""metadata"": {; 				""year"": 2040,; 				""lumi"": 3.14,; 				""edeposit"": 19.0,; 				""datatype"": ""MC""; 			}; 		},; 		{; 			""tag"": ""REAL"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2012,; 				""century"": 20,; 				""experiment"": ""CMS""; 			}; 		},; 		{; 			""tag"": ""BLABLA"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2030,; 				""century"": 20,; 				""experiment"":",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11526
https://github.com/root-project/root/pull/11526:1230,Security,access,accessed,1230,"d an extra dependency in tree/dataframe. The RDatasetSpec now only has attributes (treenames, fileglobs, friendinfo,; entryrange, groupinfo), getters and only a single ctor taking a RSpecBuilder.; The user is no longer supposed to build a RDatasetSpec directly.; Therefore all corresponding tests are now removed. The RSpecBuilder has exactly the same attributes as RDatasetSpec, and writable; methods only - e.g. AddGroup, WithFriends, WithRange, Build (but no getters). The RLoopManager now has an extra attribute storing the group; information. It could be set only by the ctor taking a RDatasetSpec. The RDatasetSpec was holding the number of fileglobs in each group.; In the RLoopManager ctor (accepting a RDatasetSpec) the globs are; expanded and the group sizes are updated. However, group positioning; remains relevant to the global TChain in RLoopManager and hence; currently accesing groups/metadata requires global TTreeProcessorMT; chain creation. RSampleInfo now holds RMetadata and thus, could be accessed from DefinePerSample. ---; Example of a valid json file to be parsed:; ```json; {; 	""groups"": [{; 			""tag"": ""SIMULATED"",; 			""trees"": [""tree"", ""subTree"", ""subTree""],; 			""files"": [""test_dir/specTestFile00*.root"", ""specTestFile1.root"", ""specTestFile2.root""],; 			""metadata"": {; 				""year"": 2040,; 				""lumi"": 3.14,; 				""edeposit"": 19.0,; 				""datatype"": ""MC""; 			}; 		},; 		{; 			""tag"": ""REAL"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2012,; 				""century"": 20,; 				""experiment"": ""CMS""; 			}; 		},; 		{; 			""tag"": ""BLABLA"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2030,; 				""century"": 20,; 				""experiment"": ""CMS""; 			}; 		}; 	],; 	""friends"": {; 		""friendAlias1"": {; 			""trees"": [""subTree0""],; 			""files"": [""specTestFile6*.root"", ""specTestFile6.root""]; 		},; 		""friendAlias2"": {; 			""trees"": [""subTree1"", ""subTree2""],; 			""fi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11526
https://github.com/root-project/root/pull/11526:510,Testability,test,tests,510,"Introducing a class acting as a heterogenuous container to store; metadata. Since the intended use case would be obtaining metadata from; json files, the nlohmann::json is used as the underlying container.; This required an extra dependency in tree/dataframe. The RDatasetSpec now only has attributes (treenames, fileglobs, friendinfo,; entryrange, groupinfo), getters and only a single ctor taking a RSpecBuilder.; The user is no longer supposed to build a RDatasetSpec directly.; Therefore all corresponding tests are now removed. The RSpecBuilder has exactly the same attributes as RDatasetSpec, and writable; methods only - e.g. AddGroup, WithFriends, WithRange, Build (but no getters). The RLoopManager now has an extra attribute storing the group; information. It could be set only by the ctor taking a RDatasetSpec. The RDatasetSpec was holding the number of fileglobs in each group.; In the RLoopManager ctor (accepting a RDatasetSpec) the globs are; expanded and the group sizes are updated. However, group positioning; remains relevant to the global TChain in RLoopManager and hence; currently accesing groups/metadata requires global TTreeProcessorMT; chain creation. RSampleInfo now holds RMetadata and thus, could be accessed from DefinePerSample. ---; Example of a valid json file to be parsed:; ```json; {; 	""groups"": [{; 			""tag"": ""SIMULATED"",; 			""trees"": [""tree"", ""subTree"", ""subTree""],; 			""files"": [""test_dir/specTestFile00*.root"", ""specTestFile1.root"", ""specTestFile2.root""],; 			""metadata"": {; 				""year"": 2040,; 				""lumi"": 3.14,; 				""edeposit"": 19.0,; 				""datatype"": ""MC""; 			}; 		},; 		{; 			""tag"": ""REAL"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2012,; 				""century"": 20,; 				""experiment"": ""CMS""; 			}; 		},; 		{; 			""tag"": ""BLABLA"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2030,; 				""century"": 20,; 				""experiment"":",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11526
https://github.com/root-project/root/pull/11526:2337,Testability,test,test,2337,"setSpec, and writable; methods only - e.g. AddGroup, WithFriends, WithRange, Build (but no getters). The RLoopManager now has an extra attribute storing the group; information. It could be set only by the ctor taking a RDatasetSpec. The RDatasetSpec was holding the number of fileglobs in each group.; In the RLoopManager ctor (accepting a RDatasetSpec) the globs are; expanded and the group sizes are updated. However, group positioning; remains relevant to the global TChain in RLoopManager and hence; currently accesing groups/metadata requires global TTreeProcessorMT; chain creation. RSampleInfo now holds RMetadata and thus, could be accessed from DefinePerSample. ---; Example of a valid json file to be parsed:; ```json; {; 	""groups"": [{; 			""tag"": ""SIMULATED"",; 			""trees"": [""tree"", ""subTree"", ""subTree""],; 			""files"": [""test_dir/specTestFile00*.root"", ""specTestFile1.root"", ""specTestFile2.root""],; 			""metadata"": {; 				""year"": 2040,; 				""lumi"": 3.14,; 				""edeposit"": 19.0,; 				""datatype"": ""MC""; 			}; 		},; 		{; 			""tag"": ""REAL"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2012,; 				""century"": 20,; 				""experiment"": ""CMS""; 			}; 		},; 		{; 			""tag"": ""BLABLA"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2030,; 				""century"": 20,; 				""experiment"": ""CMS""; 			}; 		}; 	],; 	""friends"": {; 		""friendAlias1"": {; 			""trees"": [""subTree0""],; 			""files"": [""specTestFile6*.root"", ""specTestFile6.root""]; 		},; 		""friendAlias2"": {; 			""trees"": [""subTree1"", ""subTree2""],; 			""files"": [""specTestFile7.root"", ""specTestFile8.root""]; 		}; 	},; 	""range"": [5, 10]; }; ```; TODO:; - [ ] Polish and push test suite. Open discussion items:; - [ ] Which implicit type conversitions are allowed?; - [ ] (How) can we pass chains locally in MT runs?; - [ ] Renaming classes/methods/functions?; - [ ] Which components of the Json file are mandatory and which not?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11526
https://github.com/root-project/root/pull/11528:108,Deployability,patch,patches,108,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11507; 2. https://github.com/root-project/root/pull/10811; 3. https://github.com/root-project/root/pull/11531; Except for the second commit that fixes something that was introduced in the 6.28 development cycle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11528
https://github.com/root-project/root/pull/11529:226,Availability,error,error,226,-Fix the correct dependency of sofie tests. No ned to depend on protobuf; - Use weight file for Linear tests from ROOT; - Test also the case where the weight file is not present but the session is enabled; - Produce a runtime error when a weight file is enabled but the Session is disabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11529
https://github.com/root-project/root/pull/11529:17,Integrability,depend,dependency,17,-Fix the correct dependency of sofie tests. No ned to depend on protobuf; - Use weight file for Linear tests from ROOT; - Test also the case where the weight file is not present but the session is enabled; - Produce a runtime error when a weight file is enabled but the Session is disabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11529
https://github.com/root-project/root/pull/11529:54,Integrability,depend,depend,54,-Fix the correct dependency of sofie tests. No ned to depend on protobuf; - Use weight file for Linear tests from ROOT; - Test also the case where the weight file is not present but the session is enabled; - Produce a runtime error when a weight file is enabled but the Session is disabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11529
https://github.com/root-project/root/pull/11529:37,Testability,test,tests,37,-Fix the correct dependency of sofie tests. No ned to depend on protobuf; - Use weight file for Linear tests from ROOT; - Test also the case where the weight file is not present but the session is enabled; - Produce a runtime error when a weight file is enabled but the Session is disabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11529
https://github.com/root-project/root/pull/11529:103,Testability,test,tests,103,-Fix the correct dependency of sofie tests. No ned to depend on protobuf; - Use weight file for Linear tests from ROOT; - Test also the case where the weight file is not present but the session is enabled; - Produce a runtime error when a weight file is enabled but the Session is disabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11529
https://github.com/root-project/root/pull/11529:122,Testability,Test,Test,122,-Fix the correct dependency of sofie tests. No ned to depend on protobuf; - Use weight file for Linear tests from ROOT; - Test also the case where the weight file is not present but the session is enabled; - Produce a runtime error when a weight file is enabled but the Session is disabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11529
https://github.com/root-project/root/pull/11531:100,Modifiability,variab,variable,100,"The recently-introduced `RooDataSet.from_numpy()` function was clipping; out-of-range events to the variable boundaries instead of clipping them. This behavior was misleading and confusing to the users, because the; import of a TTree just skips out out-of-range events. This commit implements the skipping for `RooDataSet.from_numpy()` as; well, logging also the same warnings when that happens. A unit test that checks the skipping works correctly for categories and; real-valued variables is also implemented. Closes https://github.com/root-project/root/issues/10447. Some other things are also fixed by the two first commits, see more detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11531
https://github.com/root-project/root/pull/11531:481,Modifiability,variab,variables,481,"The recently-introduced `RooDataSet.from_numpy()` function was clipping; out-of-range events to the variable boundaries instead of clipping them. This behavior was misleading and confusing to the users, because the; import of a TTree just skips out out-of-range events. This commit implements the skipping for `RooDataSet.from_numpy()` as; well, logging also the same warnings when that happens. A unit test that checks the skipping works correctly for categories and; real-valued variables is also implemented. Closes https://github.com/root-project/root/issues/10447. Some other things are also fixed by the two first commits, see more detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11531
https://github.com/root-project/root/pull/11531:346,Testability,log,logging,346,"The recently-introduced `RooDataSet.from_numpy()` function was clipping; out-of-range events to the variable boundaries instead of clipping them. This behavior was misleading and confusing to the users, because the; import of a TTree just skips out out-of-range events. This commit implements the skipping for `RooDataSet.from_numpy()` as; well, logging also the same warnings when that happens. A unit test that checks the skipping works correctly for categories and; real-valued variables is also implemented. Closes https://github.com/root-project/root/issues/10447. Some other things are also fixed by the two first commits, see more detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11531
https://github.com/root-project/root/pull/11531:403,Testability,test,test,403,"The recently-introduced `RooDataSet.from_numpy()` function was clipping; out-of-range events to the variable boundaries instead of clipping them. This behavior was misleading and confusing to the users, because the; import of a TTree just skips out out-of-range events. This commit implements the skipping for `RooDataSet.from_numpy()` as; well, logging also the same warnings when that happens. A unit test that checks the skipping works correctly for categories and; real-valued variables is also implemented. Closes https://github.com/root-project/root/issues/10447. Some other things are also fixed by the two first commits, see more detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11531
https://github.com/root-project/root/pull/11532:155,Testability,test,test,155,"Since the new Pythonization of the RooSimultaneous constructor that takes a Python dictionary is used in the `rf501_simultaneouspdf.py` tutorial, the unit test corresponding to the tutorial fails on the Windows nightlies. The tutorial unit test is therefore disabled on Windows by this commit. See:; * https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/#showFailuresLink; * https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows64,SPEC=default,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11532
https://github.com/root-project/root/pull/11532:240,Testability,test,test,240,"Since the new Pythonization of the RooSimultaneous constructor that takes a Python dictionary is used in the `rf501_simultaneouspdf.py` tutorial, the unit test corresponding to the tutorial fails on the Windows nightlies. The tutorial unit test is therefore disabled on Windows by this commit. See:; * https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/#showFailuresLink; * https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows64,SPEC=default,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11532
https://github.com/root-project/root/issues/11533:972,Modifiability,variab,variable,972,"Hi everybody,. I am using root on Win64:; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for win64 on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With MSVC 19.32.31332.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```; and I have the following function:; ```; void test() {; FILE *fid = fopen(""testfile.txt"", ""wt"");; if (fid != NULL) {; fprintf(fid, ""text\n"");; //fprintf(fid, "" %d \n"", 1);; fclose(fid);; } else {; printf(""File is not created.\n"");; }; }; ```; This function is working correctly. But if I remove the comment mark // with the intention to write a decimal number in the file (in this case, the decimal number is just 1), root terminates and the file is empty. This happens in all cases when I am trying to write any variable to the file. Do you have some idea where the problem is?; ([See also the forum](https://root-forum.cern.ch/t/problem-with-fprintf-in-root/51924)); Vladimir",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11533
https://github.com/root-project/root/issues/11533:505,Testability,test,test,505,"Hi everybody,. I am using root on Win64:; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for win64 on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With MSVC 19.32.31332.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```; and I have the following function:; ```; void test() {; FILE *fid = fopen(""testfile.txt"", ""wt"");; if (fid != NULL) {; fprintf(fid, ""text\n"");; //fprintf(fid, "" %d \n"", 1);; fclose(fid);; } else {; printf(""File is not created.\n"");; }; }; ```; This function is working correctly. But if I remove the comment mark // with the intention to write a decimal number in the file (in this case, the decimal number is just 1), root terminates and the file is empty. This happens in all cases when I am trying to write any variable to the file. Do you have some idea where the problem is?; ([See also the forum](https://root-forum.cern.ch/t/problem-with-fprintf-in-root/51924)); Vladimir",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11533
https://github.com/root-project/root/issues/11533:534,Testability,test,testfile,534,"Hi everybody,. I am using root on Win64:; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for win64 on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With MSVC 19.32.31332.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```; and I have the following function:; ```; void test() {; FILE *fid = fopen(""testfile.txt"", ""wt"");; if (fid != NULL) {; fprintf(fid, ""text\n"");; //fprintf(fid, "" %d \n"", 1);; fclose(fid);; } else {; printf(""File is not created.\n"");; }; }; ```; This function is working correctly. But if I remove the comment mark // with the intention to write a decimal number in the file (in this case, the decimal number is just 1), root terminates and the file is empty. This happens in all cases when I am trying to write any variable to the file. Do you have some idea where the problem is?; ([See also the forum](https://root-forum.cern.ch/t/problem-with-fprintf-in-root/51924)); Vladimir",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11533
https://github.com/root-project/root/issues/11534:70,Deployability,patch,patch,70,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.10. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758; 5. https://github.com/root-project/root/issues/11059. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11760. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11566; - [x] https://github.com/root-project/root/pull/11584; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/10873; - [x] https://github.com/root-project/root/pull/11455; Only the third commit that fixes a problem with the `RooBinSamplingPdf`, backporting the full multi-range fit implementation is way too dangerous.; - [x] https://github.com/root-project/root/pull/11912; Only the second and third commit about the `RooBinIntegrator`; - [x] https://github.com/root-project/root/pull/12119; - [x] https://github.com/root-project/root/pull/12305; Only the first commit that is not code modernization.; - [x] https://github.com/root-project/root/pull/12696; - [x] https://github.com/root-project/root/pull/12707; - [x] https://github.com/root-project/root/pull/12867; - [x] https://github.com/root-project/root/pull/12969; - [x] https://github.com/root-project/root/pull/12973. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/11748; 2. https://github.com/root-project/root/pull/11848; 3. https://github.com/root-project/root/pull/11961; 4. https://github.com/root-project/root/pull/12322; 5. https://github.com/root-project/root/pull/12709; 6. https://github.co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11534
https://github.com/root-project/root/issues/11534:76,Deployability,release,release,76,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.10. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758; 5. https://github.com/root-project/root/issues/11059. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11760. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11566; - [x] https://github.com/root-project/root/pull/11584; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/10873; - [x] https://github.com/root-project/root/pull/11455; Only the third commit that fixes a problem with the `RooBinSamplingPdf`, backporting the full multi-range fit implementation is way too dangerous.; - [x] https://github.com/root-project/root/pull/11912; Only the second and third commit about the `RooBinIntegrator`; - [x] https://github.com/root-project/root/pull/12119; - [x] https://github.com/root-project/root/pull/12305; Only the first commit that is not code modernization.; - [x] https://github.com/root-project/root/pull/12696; - [x] https://github.com/root-project/root/pull/12707; - [x] https://github.com/root-project/root/pull/12867; - [x] https://github.com/root-project/root/pull/12969; - [x] https://github.com/root-project/root/pull/12973. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/11748; 2. https://github.com/root-project/root/pull/11848; 3. https://github.com/root-project/root/pull/11961; 4. https://github.com/root-project/root/pull/12322; 5. https://github.com/root-project/root/pull/12709; 6. https://github.co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11534
https://github.com/root-project/root/issues/11534:149,Deployability,release,releases,149,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.10. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758; 5. https://github.com/root-project/root/issues/11059. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11760. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11566; - [x] https://github.com/root-project/root/pull/11584; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/10873; - [x] https://github.com/root-project/root/pull/11455; Only the third commit that fixes a problem with the `RooBinSamplingPdf`, backporting the full multi-range fit implementation is way too dangerous.; - [x] https://github.com/root-project/root/pull/11912; Only the second and third commit about the `RooBinIntegrator`; - [x] https://github.com/root-project/root/pull/12119; - [x] https://github.com/root-project/root/pull/12305; Only the first commit that is not code modernization.; - [x] https://github.com/root-project/root/pull/12696; - [x] https://github.com/root-project/root/pull/12707; - [x] https://github.com/root-project/root/pull/12867; - [x] https://github.com/root-project/root/pull/12969; - [x] https://github.com/root-project/root/pull/12973. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/11748; 2. https://github.com/root-project/root/pull/11848; 3. https://github.com/root-project/root/pull/11961; 4. https://github.com/root-project/root/pull/12322; 5. https://github.com/root-project/root/pull/12709; 6. https://github.co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11534
https://github.com/root-project/root/issues/11534:492,Deployability,patch,patch,492,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.10. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758; 5. https://github.com/root-project/root/issues/11059. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11760. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11566; - [x] https://github.com/root-project/root/pull/11584; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/10873; - [x] https://github.com/root-project/root/pull/11455; Only the third commit that fixes a problem with the `RooBinSamplingPdf`, backporting the full multi-range fit implementation is way too dangerous.; - [x] https://github.com/root-project/root/pull/11912; Only the second and third commit about the `RooBinIntegrator`; - [x] https://github.com/root-project/root/pull/12119; - [x] https://github.com/root-project/root/pull/12305; Only the first commit that is not code modernization.; - [x] https://github.com/root-project/root/pull/12696; - [x] https://github.com/root-project/root/pull/12707; - [x] https://github.com/root-project/root/pull/12867; - [x] https://github.com/root-project/root/pull/12969; - [x] https://github.com/root-project/root/pull/12973. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/11748; 2. https://github.com/root-project/root/pull/11848; 3. https://github.com/root-project/root/pull/11961; 4. https://github.com/root-project/root/pull/12322; 5. https://github.com/root-project/root/pull/12709; 6. https://github.co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11534
https://github.com/root-project/root/issues/11534:498,Deployability,release,release,498,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.10. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758; 5. https://github.com/root-project/root/issues/11059. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11760. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11566; - [x] https://github.com/root-project/root/pull/11584; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/10873; - [x] https://github.com/root-project/root/pull/11455; Only the third commit that fixes a problem with the `RooBinSamplingPdf`, backporting the full multi-range fit implementation is way too dangerous.; - [x] https://github.com/root-project/root/pull/11912; Only the second and third commit about the `RooBinIntegrator`; - [x] https://github.com/root-project/root/pull/12119; - [x] https://github.com/root-project/root/pull/12305; Only the first commit that is not code modernization.; - [x] https://github.com/root-project/root/pull/12696; - [x] https://github.com/root-project/root/pull/12707; - [x] https://github.com/root-project/root/pull/12867; - [x] https://github.com/root-project/root/pull/12969; - [x] https://github.com/root-project/root/pull/12973. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/11748; 2. https://github.com/root-project/root/pull/11848; 3. https://github.com/root-project/root/pull/11961; 4. https://github.com/root-project/root/pull/12322; 5. https://github.com/root-project/root/pull/12709; 6. https://github.co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11534
https://github.com/root-project/root/issues/11534:661,Deployability,patch,patch,661,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.10. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758; 5. https://github.com/root-project/root/issues/11059. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11760. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11566; - [x] https://github.com/root-project/root/pull/11584; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/10873; - [x] https://github.com/root-project/root/pull/11455; Only the third commit that fixes a problem with the `RooBinSamplingPdf`, backporting the full multi-range fit implementation is way too dangerous.; - [x] https://github.com/root-project/root/pull/11912; Only the second and third commit about the `RooBinIntegrator`; - [x] https://github.com/root-project/root/pull/12119; - [x] https://github.com/root-project/root/pull/12305; Only the first commit that is not code modernization.; - [x] https://github.com/root-project/root/pull/12696; - [x] https://github.com/root-project/root/pull/12707; - [x] https://github.com/root-project/root/pull/12867; - [x] https://github.com/root-project/root/pull/12969; - [x] https://github.com/root-project/root/pull/12973. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/11748; 2. https://github.com/root-project/root/pull/11848; 3. https://github.com/root-project/root/pull/11961; 4. https://github.com/root-project/root/pull/12322; 5. https://github.com/root-project/root/pull/12709; 6. https://github.co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11534
https://github.com/root-project/root/issues/11534:667,Deployability,release,release,667,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.10. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758; 5. https://github.com/root-project/root/issues/11059. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11760. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11566; - [x] https://github.com/root-project/root/pull/11584; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/10873; - [x] https://github.com/root-project/root/pull/11455; Only the third commit that fixes a problem with the `RooBinSamplingPdf`, backporting the full multi-range fit implementation is way too dangerous.; - [x] https://github.com/root-project/root/pull/11912; Only the second and third commit about the `RooBinIntegrator`; - [x] https://github.com/root-project/root/pull/12119; - [x] https://github.com/root-project/root/pull/12305; Only the first commit that is not code modernization.; - [x] https://github.com/root-project/root/pull/12696; - [x] https://github.com/root-project/root/pull/12707; - [x] https://github.com/root-project/root/pull/12867; - [x] https://github.com/root-project/root/pull/12969; - [x] https://github.com/root-project/root/pull/12973. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/11748; 2. https://github.com/root-project/root/pull/11848; 3. https://github.com/root-project/root/pull/11961; 4. https://github.com/root-project/root/pull/12322; 5. https://github.com/root-project/root/pull/12709; 6. https://github.co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11534
https://github.com/root-project/root/issues/11534:1710,Deployability,patch,patches,1710,", this time for 6.26.10. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758; 5. https://github.com/root-project/root/issues/11059. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11760. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11566; - [x] https://github.com/root-project/root/pull/11584; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/10873; - [x] https://github.com/root-project/root/pull/11455; Only the third commit that fixes a problem with the `RooBinSamplingPdf`, backporting the full multi-range fit implementation is way too dangerous.; - [x] https://github.com/root-project/root/pull/11912; Only the second and third commit about the `RooBinIntegrator`; - [x] https://github.com/root-project/root/pull/12119; - [x] https://github.com/root-project/root/pull/12305; Only the first commit that is not code modernization.; - [x] https://github.com/root-project/root/pull/12696; - [x] https://github.com/root-project/root/pull/12707; - [x] https://github.com/root-project/root/pull/12867; - [x] https://github.com/root-project/root/pull/12969; - [x] https://github.com/root-project/root/pull/12973. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/11748; 2. https://github.com/root-project/root/pull/11848; 3. https://github.com/root-project/root/pull/11961; 4. https://github.com/root-project/root/pull/12322; 5. https://github.com/root-project/root/pull/12709; 6. https://github.com/root-project/root/pull/13728; 7. https://github.com/root-project/root/pull/13773",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11534
https://github.com/root-project/root/pull/11535:268,Deployability,patch,patch,268,This fixes a display issue on TBrowser on the mac (compiled to coca) where items in the list that had checkboxes against them have their text erroneously displayed that the top of the list rather than next to the item. Please can we backport this fix as well into the patch releases. Thanks!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11535
https://github.com/root-project/root/pull/11535:274,Deployability,release,releases,274,This fixes a display issue on TBrowser on the mac (compiled to coca) where items in the list that had checkboxes against them have their text erroneously displayed that the top of the list rather than next to the item. Please can we backport this fix as well into the patch releases. Thanks!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11535
https://github.com/root-project/root/pull/11538:90,Deployability,patch,patch,90,"If subBranchName is already in bNamesReg, then we don't need to try to reinsert it.; This patch shaves off ~10% from the runtime of an exploration of a large test TTree.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11538
https://github.com/root-project/root/pull/11538:158,Testability,test,test,158,"If subBranchName is already in bNamesReg, then we don't need to try to reinsert it.; This patch shaves off ~10% from the runtime of an exploration of a large test TTree.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11538
https://github.com/root-project/root/pull/11541:145,Integrability,message,message,145,These include:; - Bumping minimum Dask version to 2022.08.1 (see #11515); - Bumping minimum Python version to 3.8 (required by Dask); - Adding a message to signal whether distributed RDataFrame is included in the build or not,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11541
https://github.com/root-project/root/pull/11544:232,Availability,Error,Error,232,This new release includes some improvements:; * Add support for pushforward- and pullback-style functions; * More supported constructs in forward and reverse mode; * Forward mode support for CUDA programs; * AD-based Floating Point Error Estimation Framework; * Integration with Enzyme. See more at: https://github.com/vgvassilev/clad/blob/v1.0/docs/internalDocs/ReleaseNotes.md. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11544
https://github.com/root-project/root/pull/11544:9,Deployability,release,release,9,This new release includes some improvements:; * Add support for pushforward- and pullback-style functions; * More supported constructs in forward and reverse mode; * Forward mode support for CUDA programs; * AD-based Floating Point Error Estimation Framework; * Integration with Enzyme. See more at: https://github.com/vgvassilev/clad/blob/v1.0/docs/internalDocs/ReleaseNotes.md. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11544
https://github.com/root-project/root/pull/11544:262,Deployability,Integrat,Integration,262,This new release includes some improvements:; * Add support for pushforward- and pullback-style functions; * More supported constructs in forward and reverse mode; * Forward mode support for CUDA programs; * AD-based Floating Point Error Estimation Framework; * Integration with Enzyme. See more at: https://github.com/vgvassilev/clad/blob/v1.0/docs/internalDocs/ReleaseNotes.md. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11544
https://github.com/root-project/root/pull/11544:363,Deployability,Release,ReleaseNotes,363,This new release includes some improvements:; * Add support for pushforward- and pullback-style functions; * More supported constructs in forward and reverse mode; * Forward mode support for CUDA programs; * AD-based Floating Point Error Estimation Framework; * Integration with Enzyme. See more at: https://github.com/vgvassilev/clad/blob/v1.0/docs/internalDocs/ReleaseNotes.md. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11544
https://github.com/root-project/root/pull/11544:475,Deployability,update,updated,475,This new release includes some improvements:; * Add support for pushforward- and pullback-style functions; * More supported constructs in forward and reverse mode; * Forward mode support for CUDA programs; * AD-based Floating Point Error Estimation Framework; * Integration with Enzyme. See more at: https://github.com/vgvassilev/clad/blob/v1.0/docs/internalDocs/ReleaseNotes.md. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11544
https://github.com/root-project/root/pull/11544:262,Integrability,Integrat,Integration,262,This new release includes some improvements:; * Add support for pushforward- and pullback-style functions; * More supported constructs in forward and reverse mode; * Forward mode support for CUDA programs; * AD-based Floating Point Error Estimation Framework; * Integration with Enzyme. See more at: https://github.com/vgvassilev/clad/blob/v1.0/docs/internalDocs/ReleaseNotes.md. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11544
https://github.com/root-project/root/pull/11544:445,Testability,test,tested,445,This new release includes some improvements:; * Add support for pushforward- and pullback-style functions; * More supported constructs in forward and reverse mode; * Forward mode support for CUDA programs; * AD-based Floating Point Error Estimation Framework; * Integration with Enzyme. See more at: https://github.com/vgvassilev/clad/blob/v1.0/docs/internalDocs/ReleaseNotes.md. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11544
https://github.com/root-project/root/pull/11545:31,Availability,failure,failure,31,This Pull request should fix a failure seen in the nortcxxmod builds,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11545
https://github.com/root-project/root/pull/11546:36,Availability,avail,available,36,- Protect usage of pymva when it is available; - Enable tf.keras by default in MethodPyKeras since this is now the standard for Keras. Call also the option `tfkeras`; in addition to `tf.keras` since this form will not work as cmd arg in Python.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11546
https://github.com/root-project/root/pull/11548:25,Deployability,integrat,integrated,25,"Introducing RTreeViewer, integrated with RBrowser. Activated when `TTree` item clicked in the browser. Main features:; 1. Edit draw expressions, cut, options; 2. Input help branch/leafs names as suggested items; 3. Select dialog with fulllist and search over branch list; 4. Drawing performed into recent canvas created in `RBrowser`. Several changes in RBrowser to let implement special features required by tree viewer - ; like activate canvas widget after tree draw. ![tree_draw0](https://user-images.githubusercontent.com/4936580/195348575-b207f199-35fc-4cd6-8d09-d2894c5dba16.png); ![tree_draw1](https://user-images.githubusercontent.com/4936580/195348581-30ca4aae-9d27-4f42-98e7-dc5b596cbefc.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11548
https://github.com/root-project/root/pull/11548:25,Integrability,integrat,integrated,25,"Introducing RTreeViewer, integrated with RBrowser. Activated when `TTree` item clicked in the browser. Main features:; 1. Edit draw expressions, cut, options; 2. Input help branch/leafs names as suggested items; 3. Select dialog with fulllist and search over branch list; 4. Drawing performed into recent canvas created in `RBrowser`. Several changes in RBrowser to let implement special features required by tree viewer - ; like activate canvas widget after tree draw. ![tree_draw0](https://user-images.githubusercontent.com/4936580/195348575-b207f199-35fc-4cd6-8d09-d2894c5dba16.png); ![tree_draw1](https://user-images.githubusercontent.com/4936580/195348581-30ca4aae-9d27-4f42-98e7-dc5b596cbefc.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11548
https://github.com/root-project/root/pull/11548:283,Performance,perform,performed,283,"Introducing RTreeViewer, integrated with RBrowser. Activated when `TTree` item clicked in the browser. Main features:; 1. Edit draw expressions, cut, options; 2. Input help branch/leafs names as suggested items; 3. Select dialog with fulllist and search over branch list; 4. Drawing performed into recent canvas created in `RBrowser`. Several changes in RBrowser to let implement special features required by tree viewer - ; like activate canvas widget after tree draw. ![tree_draw0](https://user-images.githubusercontent.com/4936580/195348575-b207f199-35fc-4cd6-8d09-d2894c5dba16.png); ![tree_draw1](https://user-images.githubusercontent.com/4936580/195348581-30ca4aae-9d27-4f42-98e7-dc5b596cbefc.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11548
https://github.com/root-project/root/pull/11549:301,Deployability,configurat,configuration,301,"# This Pull request:. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer, these setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11549
https://github.com/root-project/root/pull/11549:367,Deployability,configurat,configuration,367,"# This Pull request:. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer, these setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11549
https://github.com/root-project/root/pull/11549:605,Deployability,configurat,configuration,605,"# This Pull request:. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer, these setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11549
https://github.com/root-project/root/pull/11549:1120,Deployability,update,updated,1120,"# This Pull request:. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer, these setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11549
https://github.com/root-project/root/pull/11549:31,Integrability,interface,interface,31,"# This Pull request:. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer, these setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11549
https://github.com/root-project/root/pull/11549:301,Modifiability,config,configuration,301,"# This Pull request:. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer, these setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11549
https://github.com/root-project/root/pull/11549:367,Modifiability,config,configuration,367,"# This Pull request:. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer, these setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11549
https://github.com/root-project/root/pull/11549:459,Modifiability,config,config,459,"# This Pull request:. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer, these setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11549
https://github.com/root-project/root/pull/11549:605,Modifiability,config,configuration,605,"# This Pull request:. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer, these setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11549
https://github.com/root-project/root/pull/11549:127,Testability,test,teststatistics,127,"# This Pull request:. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer, these setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11549
https://github.com/root-project/root/pull/11549:863,Testability,test,tests,863,"# This Pull request:. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer, these setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11549
https://github.com/root-project/root/pull/11549:872,Testability,test,test,872,"# This Pull request:. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer, these setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11549
https://github.com/root-project/root/pull/11549:1090,Testability,test,tested,1090,"# This Pull request:. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer, these setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11549
https://github.com/root-project/root/pull/11551:412,Integrability,message,message,412,"The test autoloads an `Outer` class that has `Inner<int>` as a member. Because we suspend autoloading, the `Inner<int>` specialization may not be complete at all times, which triggers a `static_assert` in newer versions of libstdc++. Backport of [D86765](https://reviews.llvm.org/D86765), commit [bf890dcb0f](https://github.com/llvm/llvm-project/commit/bf890dcb0f5eb05b1a98cbd1cdd24c0c4ece8f8d); original commit message:; ```; [clang] Don't emit ""no member"" diagnostic if the lookup fails on an invalid record decl. The ""no member"" diagnostic is likely bogus.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11551
https://github.com/root-project/root/pull/11551:4,Testability,test,test,4,"The test autoloads an `Outer` class that has `Inner<int>` as a member. Because we suspend autoloading, the `Inner<int>` specialization may not be complete at all times, which triggers a `static_assert` in newer versions of libstdc++. Backport of [D86765](https://reviews.llvm.org/D86765), commit [bf890dcb0f](https://github.com/llvm/llvm-project/commit/bf890dcb0f5eb05b1a98cbd1cdd24c0c4ece8f8d); original commit message:; ```; [clang] Don't emit ""no member"" diagnostic if the lookup fails on an invalid record decl. The ""no member"" diagnostic is likely bogus.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11551
https://github.com/root-project/root/pull/11554:302,Deployability,Update,Update,302,"Web-based geometry viewer now extracted into separate library. Rename classes: `REveGeomViewer` -> `RGeomViewer`. By this also simplify handling of so-called ""server-side shapes"" - less data can be transferred, no extra workaround for normals calculations. Ease usage of geometry viewer in `RBrowser`. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11554
https://github.com/root-project/root/pull/11554:127,Usability,simpl,simplify,127,"Web-based geometry viewer now extracted into separate library. Rename classes: `REveGeomViewer` -> `RGeomViewer`. By this also simplify handling of so-called ""server-side shapes"" - less data can be transferred, no extra workaround for normals calculations. Ease usage of geometry viewer in `RBrowser`. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11554
https://github.com/root-project/root/pull/11555:260,Deployability,update,updated,260,"When using `TLegend::AddEntry()`, it is not necessary to get a pointer to the plotted object via `RooPlot::findObject()`. One can just use the `AddEntry` overload that takes the name as a string, and then looks up the object in the plot itself. This should be updated to avoid that users copy-paste overly verbose code from the tutorials. I noticed this when copy pasting code myself for a RooFit tutorial. Also fixes a typo in `rf711_lagrangianmorph.py`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11555
https://github.com/root-project/root/pull/11555:271,Safety,avoid,avoid,271,"When using `TLegend::AddEntry()`, it is not necessary to get a pointer to the plotted object via `RooPlot::findObject()`. One can just use the `AddEntry` overload that takes the name as a string, and then looks up the object in the plot itself. This should be updated to avoid that users copy-paste overly verbose code from the tutorials. I noticed this when copy pasting code myself for a RooFit tutorial. Also fixes a typo in `rf711_lagrangianmorph.py`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11555
https://github.com/root-project/root/pull/11556:56,Integrability,message,message,56,"On Ubuntu 22, gcc 11.2 with get the apparently spurious message:; ```; aliceesdProjectSource.cxx: In copy constructor ‘AliESDkink::AliESDkink(const AliESDkink&)’:; aliceesdProjectSource.cxx:992:54: warning: writing 16 bytes into a region of size 8 [-Wstringop-overflow=]; 992 | for (Int_t i=0;i<4;i++) (&(fTPCdensity[0][0]))[i] = (&(rhs.fTPCdensity[0][0]))[i];; | ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from aliceesdProjectHeaders.h:20,; from aliceesdProjectSource.cxx:3:; AliESDkink.h:36:26: note: destination object ‘AliESDkink::fTPCdensity’ of size 8; 36 | Float_t fTPCdensity[2][2]; //tpc cluster density before and after kink; | ^~~~~~~~~~~; ^~~~~~~~~~~; ```; I.e. complaining about having only 8 bytes when 16 are reserved. We work around this issue by using:; ```; for (Int_t i=0;i<4;i++) reinterpret_cast<Float_t*>(fTPCdensity)[i] = (&(rhs.fTPCdensity[0][0]))[i];; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11556
https://github.com/root-project/root/pull/11557:1106,Deployability,update,updated,1106,"# This Pull request:. ## Changes or fixes:; * `thisroot.sh`:; * Pass `shellcheck`; ```sh; shellcheck -s sh config/thisroot.sh; shellcheck -s dash config/thisroot.sh; shellcheck -s ksh config/thisroot.sh; shellcheck -s bash config/thisroot.sh; ```; Notable fixes:; * <code>&DiacriticalGrave;my-command&DiacriticalGrave;</code> -> `$(my-command)`; (SC2006, &DiacriticalGrave;&DiacriticalGrave; is a legacy Bourn shell syntax with several issues); * `[ ""x$foo"" = ""x"" ]` -> `[ -z ""${foo-}"" ]` and `[ ""x$foo"" != ""x"" ]` -> `[ -n ""${foo-}""]`; * `cond && run-true || run-false` -> `if cond; then run-true; else run false; fi`; (SC2015: run-false may be triggered when run-true fails); * [ ""$foo"" == ""$bar"" ] -> [ ""$foo"" = ""$bar"" ] (SC3014, POSIX-conformance). * Fix unbound variables; * Whenever a variable `$foo` is possibly not set, call it like `${foo-}`; * Now it can be sourced with `set -u`. * Unify indentation: use three spaces everywhere. * `thisroot.fish`:; * `dirname` -> `path dirname` so that Fish users don't have to call the `dirname` executable.; ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11557
https://github.com/root-project/root/pull/11557:107,Modifiability,config,config,107,"# This Pull request:. ## Changes or fixes:; * `thisroot.sh`:; * Pass `shellcheck`; ```sh; shellcheck -s sh config/thisroot.sh; shellcheck -s dash config/thisroot.sh; shellcheck -s ksh config/thisroot.sh; shellcheck -s bash config/thisroot.sh; ```; Notable fixes:; * <code>&DiacriticalGrave;my-command&DiacriticalGrave;</code> -> `$(my-command)`; (SC2006, &DiacriticalGrave;&DiacriticalGrave; is a legacy Bourn shell syntax with several issues); * `[ ""x$foo"" = ""x"" ]` -> `[ -z ""${foo-}"" ]` and `[ ""x$foo"" != ""x"" ]` -> `[ -n ""${foo-}""]`; * `cond && run-true || run-false` -> `if cond; then run-true; else run false; fi`; (SC2015: run-false may be triggered when run-true fails); * [ ""$foo"" == ""$bar"" ] -> [ ""$foo"" = ""$bar"" ] (SC3014, POSIX-conformance). * Fix unbound variables; * Whenever a variable `$foo` is possibly not set, call it like `${foo-}`; * Now it can be sourced with `set -u`. * Unify indentation: use three spaces everywhere. * `thisroot.fish`:; * `dirname` -> `path dirname` so that Fish users don't have to call the `dirname` executable.; ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11557
https://github.com/root-project/root/pull/11557:146,Modifiability,config,config,146,"# This Pull request:. ## Changes or fixes:; * `thisroot.sh`:; * Pass `shellcheck`; ```sh; shellcheck -s sh config/thisroot.sh; shellcheck -s dash config/thisroot.sh; shellcheck -s ksh config/thisroot.sh; shellcheck -s bash config/thisroot.sh; ```; Notable fixes:; * <code>&DiacriticalGrave;my-command&DiacriticalGrave;</code> -> `$(my-command)`; (SC2006, &DiacriticalGrave;&DiacriticalGrave; is a legacy Bourn shell syntax with several issues); * `[ ""x$foo"" = ""x"" ]` -> `[ -z ""${foo-}"" ]` and `[ ""x$foo"" != ""x"" ]` -> `[ -n ""${foo-}""]`; * `cond && run-true || run-false` -> `if cond; then run-true; else run false; fi`; (SC2015: run-false may be triggered when run-true fails); * [ ""$foo"" == ""$bar"" ] -> [ ""$foo"" = ""$bar"" ] (SC3014, POSIX-conformance). * Fix unbound variables; * Whenever a variable `$foo` is possibly not set, call it like `${foo-}`; * Now it can be sourced with `set -u`. * Unify indentation: use three spaces everywhere. * `thisroot.fish`:; * `dirname` -> `path dirname` so that Fish users don't have to call the `dirname` executable.; ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11557
https://github.com/root-project/root/pull/11557:184,Modifiability,config,config,184,"# This Pull request:. ## Changes or fixes:; * `thisroot.sh`:; * Pass `shellcheck`; ```sh; shellcheck -s sh config/thisroot.sh; shellcheck -s dash config/thisroot.sh; shellcheck -s ksh config/thisroot.sh; shellcheck -s bash config/thisroot.sh; ```; Notable fixes:; * <code>&DiacriticalGrave;my-command&DiacriticalGrave;</code> -> `$(my-command)`; (SC2006, &DiacriticalGrave;&DiacriticalGrave; is a legacy Bourn shell syntax with several issues); * `[ ""x$foo"" = ""x"" ]` -> `[ -z ""${foo-}"" ]` and `[ ""x$foo"" != ""x"" ]` -> `[ -n ""${foo-}""]`; * `cond && run-true || run-false` -> `if cond; then run-true; else run false; fi`; (SC2015: run-false may be triggered when run-true fails); * [ ""$foo"" == ""$bar"" ] -> [ ""$foo"" = ""$bar"" ] (SC3014, POSIX-conformance). * Fix unbound variables; * Whenever a variable `$foo` is possibly not set, call it like `${foo-}`; * Now it can be sourced with `set -u`. * Unify indentation: use three spaces everywhere. * `thisroot.fish`:; * `dirname` -> `path dirname` so that Fish users don't have to call the `dirname` executable.; ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11557
https://github.com/root-project/root/pull/11557:223,Modifiability,config,config,223,"# This Pull request:. ## Changes or fixes:; * `thisroot.sh`:; * Pass `shellcheck`; ```sh; shellcheck -s sh config/thisroot.sh; shellcheck -s dash config/thisroot.sh; shellcheck -s ksh config/thisroot.sh; shellcheck -s bash config/thisroot.sh; ```; Notable fixes:; * <code>&DiacriticalGrave;my-command&DiacriticalGrave;</code> -> `$(my-command)`; (SC2006, &DiacriticalGrave;&DiacriticalGrave; is a legacy Bourn shell syntax with several issues); * `[ ""x$foo"" = ""x"" ]` -> `[ -z ""${foo-}"" ]` and `[ ""x$foo"" != ""x"" ]` -> `[ -n ""${foo-}""]`; * `cond && run-true || run-false` -> `if cond; then run-true; else run false; fi`; (SC2015: run-false may be triggered when run-true fails); * [ ""$foo"" == ""$bar"" ] -> [ ""$foo"" = ""$bar"" ] (SC3014, POSIX-conformance). * Fix unbound variables; * Whenever a variable `$foo` is possibly not set, call it like `${foo-}`; * Now it can be sourced with `set -u`. * Unify indentation: use three spaces everywhere. * `thisroot.fish`:; * `dirname` -> `path dirname` so that Fish users don't have to call the `dirname` executable.; ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11557
https://github.com/root-project/root/pull/11557:766,Modifiability,variab,variables,766,"# This Pull request:. ## Changes or fixes:; * `thisroot.sh`:; * Pass `shellcheck`; ```sh; shellcheck -s sh config/thisroot.sh; shellcheck -s dash config/thisroot.sh; shellcheck -s ksh config/thisroot.sh; shellcheck -s bash config/thisroot.sh; ```; Notable fixes:; * <code>&DiacriticalGrave;my-command&DiacriticalGrave;</code> -> `$(my-command)`; (SC2006, &DiacriticalGrave;&DiacriticalGrave; is a legacy Bourn shell syntax with several issues); * `[ ""x$foo"" = ""x"" ]` -> `[ -z ""${foo-}"" ]` and `[ ""x$foo"" != ""x"" ]` -> `[ -n ""${foo-}""]`; * `cond && run-true || run-false` -> `if cond; then run-true; else run false; fi`; (SC2015: run-false may be triggered when run-true fails); * [ ""$foo"" == ""$bar"" ] -> [ ""$foo"" = ""$bar"" ] (SC3014, POSIX-conformance). * Fix unbound variables; * Whenever a variable `$foo` is possibly not set, call it like `${foo-}`; * Now it can be sourced with `set -u`. * Unify indentation: use three spaces everywhere. * `thisroot.fish`:; * `dirname` -> `path dirname` so that Fish users don't have to call the `dirname` executable.; ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11557
https://github.com/root-project/root/pull/11557:790,Modifiability,variab,variable,790,"# This Pull request:. ## Changes or fixes:; * `thisroot.sh`:; * Pass `shellcheck`; ```sh; shellcheck -s sh config/thisroot.sh; shellcheck -s dash config/thisroot.sh; shellcheck -s ksh config/thisroot.sh; shellcheck -s bash config/thisroot.sh; ```; Notable fixes:; * <code>&DiacriticalGrave;my-command&DiacriticalGrave;</code> -> `$(my-command)`; (SC2006, &DiacriticalGrave;&DiacriticalGrave; is a legacy Bourn shell syntax with several issues); * `[ ""x$foo"" = ""x"" ]` -> `[ -z ""${foo-}"" ]` and `[ ""x$foo"" != ""x"" ]` -> `[ -n ""${foo-}""]`; * `cond && run-true || run-false` -> `if cond; then run-true; else run false; fi`; (SC2015: run-false may be triggered when run-true fails); * [ ""$foo"" == ""$bar"" ] -> [ ""$foo"" = ""$bar"" ] (SC3014, POSIX-conformance). * Fix unbound variables; * Whenever a variable `$foo` is possibly not set, call it like `${foo-}`; * Now it can be sourced with `set -u`. * Unify indentation: use three spaces everywhere. * `thisroot.fish`:; * `dirname` -> `path dirname` so that Fish users don't have to call the `dirname` executable.; ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11557
https://github.com/root-project/root/pull/11557:1076,Testability,test,tested,1076,"# This Pull request:. ## Changes or fixes:; * `thisroot.sh`:; * Pass `shellcheck`; ```sh; shellcheck -s sh config/thisroot.sh; shellcheck -s dash config/thisroot.sh; shellcheck -s ksh config/thisroot.sh; shellcheck -s bash config/thisroot.sh; ```; Notable fixes:; * <code>&DiacriticalGrave;my-command&DiacriticalGrave;</code> -> `$(my-command)`; (SC2006, &DiacriticalGrave;&DiacriticalGrave; is a legacy Bourn shell syntax with several issues); * `[ ""x$foo"" = ""x"" ]` -> `[ -z ""${foo-}"" ]` and `[ ""x$foo"" != ""x"" ]` -> `[ -n ""${foo-}""]`; * `cond && run-true || run-false` -> `if cond; then run-true; else run false; fi`; (SC2015: run-false may be triggered when run-true fails); * [ ""$foo"" == ""$bar"" ] -> [ ""$foo"" = ""$bar"" ] (SC3014, POSIX-conformance). * Fix unbound variables; * Whenever a variable `$foo` is possibly not set, call it like `${foo-}`; * Now it can be sourced with `set -u`. * Unify indentation: use three spaces everywhere. * `thisroot.fish`:; * `dirname` -> `path dirname` so that Fish users don't have to call the `dirname` executable.; ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11557
https://github.com/root-project/root/pull/11560:289,Integrability,message,message,289,"The test autoloads an `Outer` class that has `Inner<int>` as a member. Because we suspend autoloading, the `Inner<int>` specialization may not be complete at all times, which triggers a `static_assert` in newer versions of libstdc++. Backport of D86765, commit bf890dcb0f; original commit message:; ```; [clang] Don't emit ""no member"" diagnostic if the lookup fails on an invalid record decl. The ""no member"" diagnostic is likely bogus.; ```. (cherry picked from commit 06fd8e9e798919fdc29d8d6ec65d13d55ea30aa7, backport of PR https://github.com/root-project/root/pull/11551)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11560
https://github.com/root-project/root/pull/11560:4,Testability,test,test,4,"The test autoloads an `Outer` class that has `Inner<int>` as a member. Because we suspend autoloading, the `Inner<int>` specialization may not be complete at all times, which triggers a `static_assert` in newer versions of libstdc++. Backport of D86765, commit bf890dcb0f; original commit message:; ```; [clang] Don't emit ""no member"" diagnostic if the lookup fails on an invalid record decl. The ""no member"" diagnostic is likely bogus.; ```. (cherry picked from commit 06fd8e9e798919fdc29d8d6ec65d13d55ea30aa7, backport of PR https://github.com/root-project/root/pull/11551)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11560
https://github.com/root-project/root/pull/11563:56,Deployability,Update,Update,56,It behaves exactly as Chrome; Provided only on Windows; Update release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11563
https://github.com/root-project/root/pull/11563:63,Deployability,release,release,63,It behaves exactly as Chrome; Provided only on Windows; Update release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11563
https://github.com/root-project/root/issues/11565:362,Testability,Test,Tested,362,"- [x] Checked for duplicates. ### Describe the bug; A segmentation violation is encountered when trying to run fit on toys during the toy generation. ### To Reproduce; To reproduce the crash, please use the attached (minimal) code and the ROOT file with the RooWorkspace inside: [link to cernbox](https://cernbox.cern.ch/index.php/s/ADF23igrMghZPzk). ### Setup; Tested on; ROOT Version: 6.27/01; Built for linuxx8664gcc on Jul 18 2022, 09:11:00; From heads/master@ffdbbb6d. as well as ; LCG_101 x86_64-centos7-gcc8-opt. ### Additional context; Note that the code here tries to reproduce what is done in a bigger framework, It is entirely possible that we are doing something dumb and this is not an actual bug in GenerateToyData, but it is interestingly seen only for ""gammas"" NPs (i.e. one NP per bin)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11565
https://github.com/root-project/root/pull/11568:19,Deployability,update,update,19,"With the new MacOS update python (and python2) is not existing anymore, only python3. Add then a new function TMVA::Python_executable() using ROOT config to determine if ROOT is using python version 2 or 3. In case of 3 returns as executable ""python3"". Fix also the correct location of the input ONNX file for TMVA_SOFIE_ONNX.C (copying the file at configure time). This PR is a backport in 6.26 of PR #10160",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11568
https://github.com/root-project/root/pull/11568:147,Modifiability,config,config,147,"With the new MacOS update python (and python2) is not existing anymore, only python3. Add then a new function TMVA::Python_executable() using ROOT config to determine if ROOT is using python version 2 or 3. In case of 3 returns as executable ""python3"". Fix also the correct location of the input ONNX file for TMVA_SOFIE_ONNX.C (copying the file at configure time). This PR is a backport in 6.26 of PR #10160",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11568
https://github.com/root-project/root/pull/11568:349,Modifiability,config,configure,349,"With the new MacOS update python (and python2) is not existing anymore, only python3. Add then a new function TMVA::Python_executable() using ROOT config to determine if ROOT is using python version 2 or 3. In case of 3 returns as executable ""python3"". Fix also the correct location of the input ONNX file for TMVA_SOFIE_ONNX.C (copying the file at configure time). This PR is a backport in 6.26 of PR #10160",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11568
https://github.com/root-project/root/pull/11573:554,Deployability,patch,patch,554,"…rt it. The C++ modules marks the std::vector<int> instantiation as not visible because it came from the `regex` header file which we did not explicitly include. root-project/root@a785402 introduces checks if certain declaration is visible in dictionary generation time which was intending to semantically improve the coherence by what the user ""allowed"" (or requested) rootcling to see vs what it can see globally. While this model works well it seems to not work for template instantiations as they won't be re-instantiated with visible modifier. This patch works around the current issue seen with libstdc++ 12 but a better solution would be to implement a finer grained control over the implicit template instatiations when generating a dictionary. Fixes root-project/root#11329",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11573
https://github.com/root-project/root/pull/11574:554,Deployability,patch,patch,554,"…rt it. The C++ modules marks the std::vector<int> instantiation as not visible because it came from the `regex` header file which we did not explicitly include. root-project/root@a785402 introduces checks if certain declaration is visible in dictionary generation time which was intending to semantically improve the coherence by what the user ""allowed"" (or requested) rootcling to see vs what it can see globally. While this model works well it seems to not work for template instantiations as they won't be re-instantiated with visible modifier. This patch works around the current issue seen with libstdc++ 12 but a better solution would be to implement a finer grained control over the implicit template instatiations when generating a dictionary. Fixes root-project/root#11329",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11574
https://github.com/root-project/root/pull/11575:77,Availability,avail,available,77,Explicitly include `arrow/testing/builder.h` to make sure ArrayFromVector is available. Probably it was being included implicitly before.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11575
https://github.com/root-project/root/pull/11575:26,Testability,test,testing,26,Explicitly include `arrow/testing/builder.h` to make sure ArrayFromVector is available. Probably it was being included implicitly before.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11575
https://github.com/root-project/root/pull/11576:62,Deployability,configurat,configuration,62,This PR backports in 6.26 some fixes from master in the build configuration for SOFIE. . - backport fix from #PR 11481 (movie some Sofie parser definition in implementation); - backport fix from #PR 11545 (fix some issues with no rt modules); - backport fix from the tests #11529 (apply some fixes in the building of SOFIE tests),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11576
https://github.com/root-project/root/pull/11576:62,Modifiability,config,configuration,62,This PR backports in 6.26 some fixes from master in the build configuration for SOFIE. . - backport fix from #PR 11481 (movie some Sofie parser definition in implementation); - backport fix from #PR 11545 (fix some issues with no rt modules); - backport fix from the tests #11529 (apply some fixes in the building of SOFIE tests),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11576
https://github.com/root-project/root/pull/11576:267,Testability,test,tests,267,This PR backports in 6.26 some fixes from master in the build configuration for SOFIE. . - backport fix from #PR 11481 (movie some Sofie parser definition in implementation); - backport fix from #PR 11545 (fix some issues with no rt modules); - backport fix from the tests #11529 (apply some fixes in the building of SOFIE tests),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11576
https://github.com/root-project/root/pull/11576:323,Testability,test,tests,323,This PR backports in 6.26 some fixes from master in the build configuration for SOFIE. . - backport fix from #PR 11481 (movie some Sofie parser definition in implementation); - backport fix from #PR 11545 (fix some issues with no rt modules); - backport fix from the tests #11529 (apply some fixes in the building of SOFIE tests),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11576
https://github.com/root-project/root/pull/11577:320,Deployability,configurat,configuration,320,"# This Pull request:. Overwrites #11549. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer. These setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format.; - Finally, this PR includes also makes the setters to the static _theFitter attribute on the RooMinimizer static. Note there is some weird behaviour with this still, on which I comment in the code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11577
https://github.com/root-project/root/pull/11577:386,Deployability,configurat,configuration,386,"# This Pull request:. Overwrites #11549. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer. These setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format.; - Finally, this PR includes also makes the setters to the static _theFitter attribute on the RooMinimizer static. Note there is some weird behaviour with this still, on which I comment in the code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11577
https://github.com/root-project/root/pull/11577:624,Deployability,configurat,configuration,624,"# This Pull request:. Overwrites #11549. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer. These setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format.; - Finally, this PR includes also makes the setters to the static _theFitter attribute on the RooMinimizer static. Note there is some weird behaviour with this still, on which I comment in the code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11577
https://github.com/root-project/root/pull/11577:1338,Deployability,update,updated,1338,"# This Pull request:. Overwrites #11549. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer. These setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format.; - Finally, this PR includes also makes the setters to the static _theFitter attribute on the RooMinimizer static. Note there is some weird behaviour with this still, on which I comment in the code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11577
https://github.com/root-project/root/pull/11577:50,Integrability,interface,interface,50,"# This Pull request:. Overwrites #11549. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer. These setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format.; - Finally, this PR includes also makes the setters to the static _theFitter attribute on the RooMinimizer static. Note there is some weird behaviour with this still, on which I comment in the code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11577
https://github.com/root-project/root/pull/11577:320,Modifiability,config,configuration,320,"# This Pull request:. Overwrites #11549. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer. These setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format.; - Finally, this PR includes also makes the setters to the static _theFitter attribute on the RooMinimizer static. Note there is some weird behaviour with this still, on which I comment in the code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11577
https://github.com/root-project/root/pull/11577:386,Modifiability,config,configuration,386,"# This Pull request:. Overwrites #11549. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer. These setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format.; - Finally, this PR includes also makes the setters to the static _theFitter attribute on the RooMinimizer static. Note there is some weird behaviour with this still, on which I comment in the code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11577
https://github.com/root-project/root/pull/11577:478,Modifiability,config,config,478,"# This Pull request:. Overwrites #11549. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer. These setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format.; - Finally, this PR includes also makes the setters to the static _theFitter attribute on the RooMinimizer static. Note there is some weird behaviour with this still, on which I comment in the code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11577
https://github.com/root-project/root/pull/11577:624,Modifiability,config,configuration,624,"# This Pull request:. Overwrites #11549. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer. These setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format.; - Finally, this PR includes also makes the setters to the static _theFitter attribute on the RooMinimizer static. Note there is some weird behaviour with this still, on which I comment in the code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11577
https://github.com/root-project/root/pull/11577:146,Testability,test,teststatistics,146,"# This Pull request:. Overwrites #11549. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer. These setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format.; - Finally, this PR includes also makes the setters to the static _theFitter attribute on the RooMinimizer static. Note there is some weird behaviour with this still, on which I comment in the code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11577
https://github.com/root-project/root/pull/11577:882,Testability,test,tests,882,"# This Pull request:. Overwrites #11549. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer. These setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format.; - Finally, this PR includes also makes the setters to the static _theFitter attribute on the RooMinimizer static. Note there is some weird behaviour with this still, on which I comment in the code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11577
https://github.com/root-project/root/pull/11577:891,Testability,test,test,891,"# This Pull request:. Overwrites #11549. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer. These setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format.; - Finally, this PR includes also makes the setters to the static _theFitter attribute on the RooMinimizer static. Note there is some weird behaviour with this still, on which I comment in the code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11577
https://github.com/root-project/root/pull/11577:1308,Testability,test,tested,1308,"# This Pull request:. Overwrites #11549. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer. These setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format.; - Finally, this PR includes also makes the setters to the static _theFitter attribute on the RooMinimizer static. Note there is some weird behaviour with this still, on which I comment in the code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11577
https://github.com/root-project/root/issues/11578:2883,Availability,down,download,2883,"he correct value, it's just the integral which uses the wrong one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Integral uses correct parameters. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testIntegralDesync() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);; ; RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct par_mod(""par_mod"", """", RooArgSet(par, RooConst(10)));; ; // RooPolyVar fn(""fn"", """", x, RooArgList(RooConst(1), par_mod));; // RooRealSumPdf pdf(""pdf"", """", fn, RooConst(1));; ; RooGaussModel gm(""gm"", """", x, RooConst(0), RooConst(0.001));; RooFormulaVar formula(""formula"", ""exp(-@0/@1)"", RooArgList(x, par_mod));; auto fn = gm.convolution(&formula, &x);; RooRealSumPdf pdf(""pdf"", """", *fn, RooConst(1));; ; auto data = pdf.generate(x, NumEvents(1));; ; auto nllBase = pdf.createNLL(*data);; auto nllBatch = pdf.createNLL(*data, BatchMode(""cpu""));; ; gm.verboseEval(10); // printout helps showing the exact problem, since it prints the parameter; ; double nllBaseVal = nllBase->getVal();; double nllBatchVal = nllBatch->getVal();; clog << ""Before changing: "" << nllBaseVal << "" vs "" << nllBatchVal << endl;; ; par.setVal(-0.1);; nllBaseVal = nllBase->getVal();; nllBatchVal = nllBatch->getVal(); ; clog << ""After changing: "" << nllBaseVal << "" vs "" << nllBatchVal << endl; ; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->; I tested this with a `RooRealSumPdf` but I'm not sure it is the only one affected or if it is anything with an internal integral.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11578
https://github.com/root-project/root/issues/11578:2865,Deployability,install,install,2865,"he correct value, it's just the integral which uses the wrong one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Integral uses correct parameters. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testIntegralDesync() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);; ; RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct par_mod(""par_mod"", """", RooArgSet(par, RooConst(10)));; ; // RooPolyVar fn(""fn"", """", x, RooArgList(RooConst(1), par_mod));; // RooRealSumPdf pdf(""pdf"", """", fn, RooConst(1));; ; RooGaussModel gm(""gm"", """", x, RooConst(0), RooConst(0.001));; RooFormulaVar formula(""formula"", ""exp(-@0/@1)"", RooArgList(x, par_mod));; auto fn = gm.convolution(&formula, &x);; RooRealSumPdf pdf(""pdf"", """", *fn, RooConst(1));; ; auto data = pdf.generate(x, NumEvents(1));; ; auto nllBase = pdf.createNLL(*data);; auto nllBatch = pdf.createNLL(*data, BatchMode(""cpu""));; ; gm.verboseEval(10); // printout helps showing the exact problem, since it prints the parameter; ; double nllBaseVal = nllBase->getVal();; double nllBatchVal = nllBatch->getVal();; clog << ""Before changing: "" << nllBaseVal << "" vs "" << nllBatchVal << endl;; ; par.setVal(-0.1);; nllBaseVal = nllBase->getVal();; nllBatchVal = nllBatch->getVal(); ; clog << ""After changing: "" << nllBaseVal << "" vs "" << nllBatchVal << endl; ; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->; I tested this with a `RooRealSumPdf` but I'm not sure it is the only one affected or if it is anything with an internal integral.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11578
https://github.com/root-project/root/issues/11578:508,Integrability,wrap,wraps,508,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have a model containing a `RooRealSumPdf` which wraps a `RooAbsReal` with an analytical integral (I tested with `RooGaussModel` and `RooPolyVar`). One of the parameters of the `RooAbsReal` is a function of the actual fit parameter (a `RooProduct` containing a `RooRealVar` for example).; When using batchmode, in the computation of the integral of the `RooAbsReal` (which is internal to the `RooRealSumPdf`, since it overrides `analyticalIntegralWN`), the value of the transformed parameter is not synced with the changes of the `RooRealVar` it contains, leading to a wrong integral.; Inspecting the `RooFitDriver` contents shows that the dataMap entry corresponding to the transformed parameter has the correct value, it's just the integral which uses the wrong one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Integral uses correct parameters. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testIntegralDesync() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);; ; RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct par_mod(""par_mod"", """", RooArgSet(par, RooConst(10)));; ; // RooPolyVar fn(""fn"", """", x, RooArgList(RooConst(1), par_mod));; // RooRealSumPdf pdf(""pdf"", """", fn, RooConst(1));; ; RooGaussModel gm(""gm"", """", x, Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11578
https://github.com/root-project/root/issues/11578:560,Testability,test,tested,560,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have a model containing a `RooRealSumPdf` which wraps a `RooAbsReal` with an analytical integral (I tested with `RooGaussModel` and `RooPolyVar`). One of the parameters of the `RooAbsReal` is a function of the actual fit parameter (a `RooProduct` containing a `RooRealVar` for example).; When using batchmode, in the computation of the integral of the `RooAbsReal` (which is internal to the `RooRealSumPdf`, since it overrides `analyticalIntegralWN`), the value of the transformed parameter is not synced with the changes of the `RooRealVar` it contains, leading to a wrong integral.; Inspecting the `RooFitDriver` contents shows that the dataMap entry corresponding to the transformed parameter has the correct value, it's just the integral which uses the wrong one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Integral uses correct parameters. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testIntegralDesync() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);; ; RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct par_mod(""par_mod"", """", RooArgSet(par, RooConst(10)));; ; // RooPolyVar fn(""fn"", """", x, RooArgList(RooConst(1), par_mod));; // RooRealSumPdf pdf(""pdf"", """", fn, RooConst(1));; ; RooGaussModel gm(""gm"", """", x, Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11578
https://github.com/root-project/root/issues/11578:1657,Testability,test,testIntegralDesync,1657,"uct` containing a `RooRealVar` for example).; When using batchmode, in the computation of the integral of the `RooAbsReal` (which is internal to the `RooRealSumPdf`, since it overrides `analyticalIntegralWN`), the value of the transformed parameter is not synced with the changes of the `RooRealVar` it contains, leading to a wrong integral.; Inspecting the `RooFitDriver` contents shows that the dataMap entry corresponding to the transformed parameter has the correct value, it's just the integral which uses the wrong one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Integral uses correct parameters. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testIntegralDesync() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);; ; RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct par_mod(""par_mod"", """", RooArgSet(par, RooConst(10)));; ; // RooPolyVar fn(""fn"", """", x, RooArgList(RooConst(1), par_mod));; // RooRealSumPdf pdf(""pdf"", """", fn, RooConst(1));; ; RooGaussModel gm(""gm"", """", x, RooConst(0), RooConst(0.001));; RooFormulaVar formula(""formula"", ""exp(-@0/@1)"", RooArgList(x, par_mod));; auto fn = gm.convolution(&formula, &x);; RooRealSumPdf pdf(""pdf"", """", *fn, RooConst(1));; ; auto data = pdf.generate(x, NumEvents(1));; ; auto nllBase = pdf.createNLL(*data);; auto nllBatch = pdf.createNLL(*data, BatchMode(""cpu""));; ; gm.verboseEval(10); // printout helps showing the exact problem, since it prints the parameter; ; double nllBaseVal = nllBase->getVal();; double nllBatchVal = nllBatch->getVal();; clog << ""Before changing: "" << nllBaseVal << "" vs "" << nllBatchVal << endl;; ; par.setVal(-0.1);; nllBaseVal = nllBase->getVal();; nllBatchVal = nllBatch->getVal(); ; clog << ""After c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11578
https://github.com/root-project/root/issues/11578:3034,Testability,test,tested,3034,"he correct value, it's just the integral which uses the wrong one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Integral uses correct parameters. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testIntegralDesync() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);; ; RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct par_mod(""par_mod"", """", RooArgSet(par, RooConst(10)));; ; // RooPolyVar fn(""fn"", """", x, RooArgList(RooConst(1), par_mod));; // RooRealSumPdf pdf(""pdf"", """", fn, RooConst(1));; ; RooGaussModel gm(""gm"", """", x, RooConst(0), RooConst(0.001));; RooFormulaVar formula(""formula"", ""exp(-@0/@1)"", RooArgList(x, par_mod));; auto fn = gm.convolution(&formula, &x);; RooRealSumPdf pdf(""pdf"", """", *fn, RooConst(1));; ; auto data = pdf.generate(x, NumEvents(1));; ; auto nllBase = pdf.createNLL(*data);; auto nllBatch = pdf.createNLL(*data, BatchMode(""cpu""));; ; gm.verboseEval(10); // printout helps showing the exact problem, since it prints the parameter; ; double nllBaseVal = nllBase->getVal();; double nllBatchVal = nllBatch->getVal();; clog << ""Before changing: "" << nllBaseVal << "" vs "" << nllBatchVal << endl;; ; par.setVal(-0.1);; nllBaseVal = nllBase->getVal();; nllBatchVal = nllBatch->getVal(); ; clog << ""After changing: "" << nllBaseVal << "" vs "" << nllBatchVal << endl; ; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->; I tested this with a `RooRealSumPdf` but I'm not sure it is the only one affected or if it is anything with an internal integral.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11578
https://github.com/root-project/root/issues/11578:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have a model containing a `RooRealSumPdf` which wraps a `RooAbsReal` with an analytical integral (I tested with `RooGaussModel` and `RooPolyVar`). One of the parameters of the `RooAbsReal` is a function of the actual fit parameter (a `RooProduct` containing a `RooRealVar` for example).; When using batchmode, in the computation of the integral of the `RooAbsReal` (which is internal to the `RooRealSumPdf`, since it overrides `analyticalIntegralWN`), the value of the transformed parameter is not synced with the changes of the `RooRealVar` it contains, leading to a wrong integral.; Inspecting the `RooFitDriver` contents shows that the dataMap entry corresponding to the transformed parameter has the correct value, it's just the integral which uses the wrong one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Integral uses correct parameters. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testIntegralDesync() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);; ; RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct par_mod(""par_mod"", """", RooArgSet(par, RooConst(10)));; ; // RooPolyVar fn(""fn"", """", x, RooArgList(RooConst(1), par_mod));; // RooRealSumPdf pdf(""pdf"", """", fn, RooConst(1));; ; RooGaussModel gm(""gm"", """", x, Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11578
https://github.com/root-project/root/issues/11578:1259,Usability,clear,clear,1259," add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have a model containing a `RooRealSumPdf` which wraps a `RooAbsReal` with an analytical integral (I tested with `RooGaussModel` and `RooPolyVar`). One of the parameters of the `RooAbsReal` is a function of the actual fit parameter (a `RooProduct` containing a `RooRealVar` for example).; When using batchmode, in the computation of the integral of the `RooAbsReal` (which is internal to the `RooRealSumPdf`, since it overrides `analyticalIntegralWN`), the value of the transformed parameter is not synced with the changes of the `RooRealVar` it contains, leading to a wrong integral.; Inspecting the `RooFitDriver` contents shows that the dataMap entry corresponding to the transformed parameter has the correct value, it's just the integral which uses the wrong one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Integral uses correct parameters. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testIntegralDesync() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);; ; RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct par_mod(""par_mod"", """", RooArgSet(par, RooConst(10)));; ; // RooPolyVar fn(""fn"", """", x, RooArgList(RooConst(1), par_mod));; // RooRealSumPdf pdf(""pdf"", """", fn, RooConst(1));; ; RooGaussModel gm(""gm"", """", x, RooConst(0), RooConst(0.001));; RooFormulaVar formula(""formula"", ""exp(-@0/@1)"", RooArgList(x, par_mod));; auto fn = gm.convolution(&formula, &x);; RooRealSumPdf pdf(""pdf"", """", *fn, RooConst(1));; ; auto data = pdf.generate(x, NumEvents(1));; ; auto nllBase = pdf.createNLL(*da",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11578
https://github.com/root-project/root/pull/11579:14,Availability,error,error,14,"Try to fix an error when building the system PCH with cppyy's Root on Android, as described [on the forum](https://root-forum.cern.ch/t/errors-building-system-pch-with-cppyys-root-on-android/51961)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11579
https://github.com/root-project/root/pull/11579:136,Availability,error,errors-building-system-pch-with-cppyys-root-on-android,136,"Try to fix an error when building the system PCH with cppyy's Root on Android, as described [on the forum](https://root-forum.cern.ch/t/errors-building-system-pch-with-cppyys-root-on-android/51961)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11579
https://github.com/root-project/root/issues/11580:22,Performance,concurren,concurrent,22,### Describe the bug; concurrent call to methods like `TDatabasePDG::Instance()->GetParticle(xxx)->GetName()` can cause segmentation violation. Even with `ROOT::EnableImplicitMT()` Set. ### Expected behavior; ROOT::EnableImplicitMT() should make TDatabasePDG::GetParticle(...) thread safe without user taking locks. ### To Reproduce; Any program calling `TDatabasePDG::Instance()->GetParticle(xxx)->GetName()` at different thread. ### Setup; ```; ROOT Version: 6.26/06; Platform: Fedora 37 Beta; Compiler: g++ (GCC) 12.2.1 20220819 (Red Hat 12.2.1-2); ```. ### Additional context; https://root-forum.cern.ch/t/tdatabasepdg-is-not-thread-safe-while-creating-multiple-thread-only-instance-cause-log-spam/51957,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11580
https://github.com/root-project/root/issues/11580:284,Safety,safe,safe,284,### Describe the bug; concurrent call to methods like `TDatabasePDG::Instance()->GetParticle(xxx)->GetName()` can cause segmentation violation. Even with `ROOT::EnableImplicitMT()` Set. ### Expected behavior; ROOT::EnableImplicitMT() should make TDatabasePDG::GetParticle(...) thread safe without user taking locks. ### To Reproduce; Any program calling `TDatabasePDG::Instance()->GetParticle(xxx)->GetName()` at different thread. ### Setup; ```; ROOT Version: 6.26/06; Platform: Fedora 37 Beta; Compiler: g++ (GCC) 12.2.1 20220819 (Red Hat 12.2.1-2); ```. ### Additional context; https://root-forum.cern.ch/t/tdatabasepdg-is-not-thread-safe-while-creating-multiple-thread-only-instance-cause-log-spam/51957,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11580
https://github.com/root-project/root/issues/11580:637,Safety,safe,safe-while-creating-multiple-thread-only-instance-cause-log-spam,637,### Describe the bug; concurrent call to methods like `TDatabasePDG::Instance()->GetParticle(xxx)->GetName()` can cause segmentation violation. Even with `ROOT::EnableImplicitMT()` Set. ### Expected behavior; ROOT::EnableImplicitMT() should make TDatabasePDG::GetParticle(...) thread safe without user taking locks. ### To Reproduce; Any program calling `TDatabasePDG::Instance()->GetParticle(xxx)->GetName()` at different thread. ### Setup; ```; ROOT Version: 6.26/06; Platform: Fedora 37 Beta; Compiler: g++ (GCC) 12.2.1 20220819 (Red Hat 12.2.1-2); ```. ### Additional context; https://root-forum.cern.ch/t/tdatabasepdg-is-not-thread-safe-while-creating-multiple-thread-only-instance-cause-log-spam/51957,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11580
https://github.com/root-project/root/issues/11580:693,Testability,log,log-spam,693,### Describe the bug; concurrent call to methods like `TDatabasePDG::Instance()->GetParticle(xxx)->GetName()` can cause segmentation violation. Even with `ROOT::EnableImplicitMT()` Set. ### Expected behavior; ROOT::EnableImplicitMT() should make TDatabasePDG::GetParticle(...) thread safe without user taking locks. ### To Reproduce; Any program calling `TDatabasePDG::Instance()->GetParticle(xxx)->GetName()` at different thread. ### Setup; ```; ROOT Version: 6.26/06; Platform: Fedora 37 Beta; Compiler: g++ (GCC) 12.2.1 20220819 (Red Hat 12.2.1-2); ```. ### Additional context; https://root-forum.cern.ch/t/tdatabasepdg-is-not-thread-safe-while-creating-multiple-thread-only-instance-cause-log-spam/51957,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11580
https://github.com/root-project/root/issues/11581:425,Availability,Error,Error,425,"- [x] Checked for duplicates: seems to be similar to #10522 but this is unrelated to complex numbers. ### Describe the bug. Trying to declare a `std::vector<const char*>` from python fails in ROOT 6.26 (also tested in master) with:; ```; In [1]: import ROOT. In [2]: ROOT.gROOT.GetVersion(); Out[2]: '6.26/00'. In [3]: ROOT.gInterpreter.Declare('std::vector<const char*> test = {""hello""};'); Out[3]: True. In [4]: ROOT.test; Error pythonizing class std::vector<const char*>:; Traceback (most recent call last):; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/__init__.py"", line 233, in _invoke ; user_pythonizor(klass, fqn); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/_stl_vector.py"", line 37, in pythonize_stl_vector ; if klass.value_type == 'char':; AttributeError: <class cppyy.gbl.std.vector<const char*> at 0x78c6370> has no attribute 'value_type'. Full details:; type object 'vector<const char*>' has no attribute 'value_type'; 'std::vector<const char*>::value_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-4-9dea63bfe1b1> in <module>; ----> 1 ROOT.test. /cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_facade.py in _fallback_getattr(self, name); 193 if res:; 194 return res; --> 195 raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); 196; 197 def _finalSetup(self):. AttributeError: Failed to get attribute test from ROOT; ```. Creating the object directly from python does not work either:; ```; In [5]: t = ROOT.std.vector[""const char*""]([""hello""]); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-5-fac447a0dff2> in <module>; ----> 1 t = ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11581
https://github.com/root-project/root/issues/11581:208,Testability,test,tested,208,"- [x] Checked for duplicates: seems to be similar to #10522 but this is unrelated to complex numbers. ### Describe the bug. Trying to declare a `std::vector<const char*>` from python fails in ROOT 6.26 (also tested in master) with:; ```; In [1]: import ROOT. In [2]: ROOT.gROOT.GetVersion(); Out[2]: '6.26/00'. In [3]: ROOT.gInterpreter.Declare('std::vector<const char*> test = {""hello""};'); Out[3]: True. In [4]: ROOT.test; Error pythonizing class std::vector<const char*>:; Traceback (most recent call last):; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/__init__.py"", line 233, in _invoke ; user_pythonizor(klass, fqn); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/_stl_vector.py"", line 37, in pythonize_stl_vector ; if klass.value_type == 'char':; AttributeError: <class cppyy.gbl.std.vector<const char*> at 0x78c6370> has no attribute 'value_type'. Full details:; type object 'vector<const char*>' has no attribute 'value_type'; 'std::vector<const char*>::value_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-4-9dea63bfe1b1> in <module>; ----> 1 ROOT.test. /cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_facade.py in _fallback_getattr(self, name); 193 if res:; 194 return res; --> 195 raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); 196; 197 def _finalSetup(self):. AttributeError: Failed to get attribute test from ROOT; ```. Creating the object directly from python does not work either:; ```; In [5]: t = ROOT.std.vector[""const char*""]([""hello""]); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-5-fac447a0dff2> in <module>; ----> 1 t = ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11581
https://github.com/root-project/root/issues/11581:371,Testability,test,test,371,"- [x] Checked for duplicates: seems to be similar to #10522 but this is unrelated to complex numbers. ### Describe the bug. Trying to declare a `std::vector<const char*>` from python fails in ROOT 6.26 (also tested in master) with:; ```; In [1]: import ROOT. In [2]: ROOT.gROOT.GetVersion(); Out[2]: '6.26/00'. In [3]: ROOT.gInterpreter.Declare('std::vector<const char*> test = {""hello""};'); Out[3]: True. In [4]: ROOT.test; Error pythonizing class std::vector<const char*>:; Traceback (most recent call last):; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/__init__.py"", line 233, in _invoke ; user_pythonizor(klass, fqn); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/_stl_vector.py"", line 37, in pythonize_stl_vector ; if klass.value_type == 'char':; AttributeError: <class cppyy.gbl.std.vector<const char*> at 0x78c6370> has no attribute 'value_type'. Full details:; type object 'vector<const char*>' has no attribute 'value_type'; 'std::vector<const char*>::value_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-4-9dea63bfe1b1> in <module>; ----> 1 ROOT.test. /cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_facade.py in _fallback_getattr(self, name); 193 if res:; 194 return res; --> 195 raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); 196; 197 def _finalSetup(self):. AttributeError: Failed to get attribute test from ROOT; ```. Creating the object directly from python does not work either:; ```; In [5]: t = ROOT.std.vector[""const char*""]([""hello""]); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-5-fac447a0dff2> in <module>; ----> 1 t = ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11581
https://github.com/root-project/root/issues/11581:419,Testability,test,test,419,"- [x] Checked for duplicates: seems to be similar to #10522 but this is unrelated to complex numbers. ### Describe the bug. Trying to declare a `std::vector<const char*>` from python fails in ROOT 6.26 (also tested in master) with:; ```; In [1]: import ROOT. In [2]: ROOT.gROOT.GetVersion(); Out[2]: '6.26/00'. In [3]: ROOT.gInterpreter.Declare('std::vector<const char*> test = {""hello""};'); Out[3]: True. In [4]: ROOT.test; Error pythonizing class std::vector<const char*>:; Traceback (most recent call last):; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/__init__.py"", line 233, in _invoke ; user_pythonizor(klass, fqn); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/_stl_vector.py"", line 37, in pythonize_stl_vector ; if klass.value_type == 'char':; AttributeError: <class cppyy.gbl.std.vector<const char*> at 0x78c6370> has no attribute 'value_type'. Full details:; type object 'vector<const char*>' has no attribute 'value_type'; 'std::vector<const char*>::value_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-4-9dea63bfe1b1> in <module>; ----> 1 ROOT.test. /cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_facade.py in _fallback_getattr(self, name); 193 if res:; 194 return res; --> 195 raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); 196; 197 def _finalSetup(self):. AttributeError: Failed to get attribute test from ROOT; ```. Creating the object directly from python does not work either:; ```; In [5]: t = ROOT.std.vector[""const char*""]([""hello""]); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-5-fac447a0dff2> in <module>; ----> 1 t = ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11581
https://github.com/root-project/root/issues/11581:1363,Testability,test,test,1363,"har*> test = {""hello""};'); Out[3]: True. In [4]: ROOT.test; Error pythonizing class std::vector<const char*>:; Traceback (most recent call last):; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/__init__.py"", line 233, in _invoke ; user_pythonizor(klass, fqn); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/_stl_vector.py"", line 37, in pythonize_stl_vector ; if klass.value_type == 'char':; AttributeError: <class cppyy.gbl.std.vector<const char*> at 0x78c6370> has no attribute 'value_type'. Full details:; type object 'vector<const char*>' has no attribute 'value_type'; 'std::vector<const char*>::value_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-4-9dea63bfe1b1> in <module>; ----> 1 ROOT.test. /cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_facade.py in _fallback_getattr(self, name); 193 if res:; 194 return res; --> 195 raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); 196; 197 def _finalSetup(self):. AttributeError: Failed to get attribute test from ROOT; ```. Creating the object directly from python does not work either:; ```; In [5]: t = ROOT.std.vector[""const char*""]([""hello""]); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-5-fac447a0dff2> in <module>; ----> 1 t = ROOT.std.vector[""const char*""]([""hello""]). TypeError: none of the 2 overloaded methods succeeded. Full details:; void std::vector<const char*>::push_back(const char*&& __x) =>; TypeError: could not convert argument 1; void std::vector<const char*>::push_back(const char*const& __x) =>; TypeError: could not convert argument 1; ```. ### Expected behavior. In ROOT 6.24, I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11581
https://github.com/root-project/root/issues/11581:1673,Testability,test,test,1673,"ass, fqn); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/_stl_vector.py"", line 37, in pythonize_stl_vector ; if klass.value_type == 'char':; AttributeError: <class cppyy.gbl.std.vector<const char*> at 0x78c6370> has no attribute 'value_type'. Full details:; type object 'vector<const char*>' has no attribute 'value_type'; 'std::vector<const char*>::value_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-4-9dea63bfe1b1> in <module>; ----> 1 ROOT.test. /cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_facade.py in _fallback_getattr(self, name); 193 if res:; 194 return res; --> 195 raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); 196; 197 def _finalSetup(self):. AttributeError: Failed to get attribute test from ROOT; ```. Creating the object directly from python does not work either:; ```; In [5]: t = ROOT.std.vector[""const char*""]([""hello""]); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-5-fac447a0dff2> in <module>; ----> 1 t = ROOT.std.vector[""const char*""]([""hello""]). TypeError: none of the 2 overloaded methods succeeded. Full details:; void std::vector<const char*>::push_back(const char*&& __x) =>; TypeError: could not convert argument 1; void std::vector<const char*>::push_back(const char*const& __x) =>; TypeError: could not convert argument 1; ```. ### Expected behavior. In ROOT 6.24, I can get a reference to the object:; ```; In [1]: import ROOT. In [2]: ROOT.gInterpreter.Declare('std::vector<const char*> test = {""hello""};'); Out[2]: True. In [3]: ROOT.test; Out[3]: <cppyy.gbl.std.vector<const char*> object at 0x7f2c7fa19020>. In [4]: ROOT.test[0]; Out[4]: <cppyy.LowLevelView ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11581
https://github.com/root-project/root/issues/11581:2489,Testability,test,test,2489,"ue_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-4-9dea63bfe1b1> in <module>; ----> 1 ROOT.test. /cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_facade.py in _fallback_getattr(self, name); 193 if res:; 194 return res; --> 195 raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); 196; 197 def _finalSetup(self):. AttributeError: Failed to get attribute test from ROOT; ```. Creating the object directly from python does not work either:; ```; In [5]: t = ROOT.std.vector[""const char*""]([""hello""]); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-5-fac447a0dff2> in <module>; ----> 1 t = ROOT.std.vector[""const char*""]([""hello""]). TypeError: none of the 2 overloaded methods succeeded. Full details:; void std::vector<const char*>::push_back(const char*&& __x) =>; TypeError: could not convert argument 1; void std::vector<const char*>::push_back(const char*const& __x) =>; TypeError: could not convert argument 1; ```. ### Expected behavior. In ROOT 6.24, I can get a reference to the object:; ```; In [1]: import ROOT. In [2]: ROOT.gInterpreter.Declare('std::vector<const char*> test = {""hello""};'); Out[2]: True. In [3]: ROOT.test; Out[3]: <cppyy.gbl.std.vector<const char*> object at 0x7f2c7fa19020>. In [4]: ROOT.test[0]; Out[4]: <cppyy.LowLevelView at 0x7f2c6f18e490>. In [5]: ROOT.gROOT.GetVersion(); Out[5]: '6.24/06'; ```. Note that I don't need to use the object in python as such, I just need to pass it to a C++ function that happens to expect a `std::vector<const char*>`, so I do not care about pythonizations. ### Setup. Tested on ROOT 6.24/06 (LCG101), 6.26/00 (LCG102rc1), master (LCGdev3): the pythonization issue does not appear in 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11581
https://github.com/root-project/root/issues/11581:2537,Testability,test,test,2537,"ue_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-4-9dea63bfe1b1> in <module>; ----> 1 ROOT.test. /cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_facade.py in _fallback_getattr(self, name); 193 if res:; 194 return res; --> 195 raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); 196; 197 def _finalSetup(self):. AttributeError: Failed to get attribute test from ROOT; ```. Creating the object directly from python does not work either:; ```; In [5]: t = ROOT.std.vector[""const char*""]([""hello""]); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-5-fac447a0dff2> in <module>; ----> 1 t = ROOT.std.vector[""const char*""]([""hello""]). TypeError: none of the 2 overloaded methods succeeded. Full details:; void std::vector<const char*>::push_back(const char*&& __x) =>; TypeError: could not convert argument 1; void std::vector<const char*>::push_back(const char*const& __x) =>; TypeError: could not convert argument 1; ```. ### Expected behavior. In ROOT 6.24, I can get a reference to the object:; ```; In [1]: import ROOT. In [2]: ROOT.gInterpreter.Declare('std::vector<const char*> test = {""hello""};'); Out[2]: True. In [3]: ROOT.test; Out[3]: <cppyy.gbl.std.vector<const char*> object at 0x7f2c7fa19020>. In [4]: ROOT.test[0]; Out[4]: <cppyy.LowLevelView at 0x7f2c6f18e490>. In [5]: ROOT.gROOT.GetVersion(); Out[5]: '6.24/06'; ```. Note that I don't need to use the object in python as such, I just need to pass it to a C++ function that happens to expect a `std::vector<const char*>`, so I do not care about pythonizations. ### Setup. Tested on ROOT 6.24/06 (LCG101), 6.26/00 (LCG102rc1), master (LCGdev3): the pythonization issue does not appear in 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11581
https://github.com/root-project/root/issues/11581:2626,Testability,test,test,2626,"ue_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-4-9dea63bfe1b1> in <module>; ----> 1 ROOT.test. /cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_facade.py in _fallback_getattr(self, name); 193 if res:; 194 return res; --> 195 raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); 196; 197 def _finalSetup(self):. AttributeError: Failed to get attribute test from ROOT; ```. Creating the object directly from python does not work either:; ```; In [5]: t = ROOT.std.vector[""const char*""]([""hello""]); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-5-fac447a0dff2> in <module>; ----> 1 t = ROOT.std.vector[""const char*""]([""hello""]). TypeError: none of the 2 overloaded methods succeeded. Full details:; void std::vector<const char*>::push_back(const char*&& __x) =>; TypeError: could not convert argument 1; void std::vector<const char*>::push_back(const char*const& __x) =>; TypeError: could not convert argument 1; ```. ### Expected behavior. In ROOT 6.24, I can get a reference to the object:; ```; In [1]: import ROOT. In [2]: ROOT.gInterpreter.Declare('std::vector<const char*> test = {""hello""};'); Out[2]: True. In [3]: ROOT.test; Out[3]: <cppyy.gbl.std.vector<const char*> object at 0x7f2c7fa19020>. In [4]: ROOT.test[0]; Out[4]: <cppyy.LowLevelView at 0x7f2c6f18e490>. In [5]: ROOT.gROOT.GetVersion(); Out[5]: '6.24/06'; ```. Note that I don't need to use the object in python as such, I just need to pass it to a C++ function that happens to expect a `std::vector<const char*>`, so I do not care about pythonizations. ### Setup. Tested on ROOT 6.24/06 (LCG101), 6.26/00 (LCG102rc1), master (LCGdev3): the pythonization issue does not appear in 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11581
https://github.com/root-project/root/issues/11581:2944,Testability,Test,Tested,2944,"ue_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-4-9dea63bfe1b1> in <module>; ----> 1 ROOT.test. /cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_facade.py in _fallback_getattr(self, name); 193 if res:; 194 return res; --> 195 raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); 196; 197 def _finalSetup(self):. AttributeError: Failed to get attribute test from ROOT; ```. Creating the object directly from python does not work either:; ```; In [5]: t = ROOT.std.vector[""const char*""]([""hello""]); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-5-fac447a0dff2> in <module>; ----> 1 t = ROOT.std.vector[""const char*""]([""hello""]). TypeError: none of the 2 overloaded methods succeeded. Full details:; void std::vector<const char*>::push_back(const char*&& __x) =>; TypeError: could not convert argument 1; void std::vector<const char*>::push_back(const char*const& __x) =>; TypeError: could not convert argument 1; ```. ### Expected behavior. In ROOT 6.24, I can get a reference to the object:; ```; In [1]: import ROOT. In [2]: ROOT.gInterpreter.Declare('std::vector<const char*> test = {""hello""};'); Out[2]: True. In [3]: ROOT.test; Out[3]: <cppyy.gbl.std.vector<const char*> object at 0x7f2c7fa19020>. In [4]: ROOT.test[0]; Out[4]: <cppyy.LowLevelView at 0x7f2c6f18e490>. In [5]: ROOT.gROOT.GetVersion(); Out[5]: '6.24/06'; ```. Note that I don't need to use the object in python as such, I just need to pass it to a C++ function that happens to expect a `std::vector<const char*>`, so I do not care about pythonizations. ### Setup. Tested on ROOT 6.24/06 (LCG101), 6.26/00 (LCG102rc1), master (LCGdev3): the pythonization issue does not appear in 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11581
https://github.com/root-project/root/pull/11584:95,Availability,error,error,95,"In this forum post, the point was made that; `RooWorkspace::getSnapshot()` should not print an error if a snapshot; with the passed name is not found. https://root-forum.cern.ch/t/roofit-check-if-snapshot-exist-without-showing-objecthandling-error. Just like in the other `RooWorkspace` access functions, like `arg()`,; `pdf()`, or `function()`, users expect to use `getSnapshot()` also to; query if a snapshot exists and check if the returned value is `nullptr`.; So there should be no error printed in `getSnapshot()` itself. If it is; actually an error for th caller that no snapshot has been found, an; error or exception should be raised by the caller. A second commit in this PR applies some general code modernization to `RooWorkspace.cxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11584
https://github.com/root-project/root/pull/11584:242,Availability,error,error,242,"In this forum post, the point was made that; `RooWorkspace::getSnapshot()` should not print an error if a snapshot; with the passed name is not found. https://root-forum.cern.ch/t/roofit-check-if-snapshot-exist-without-showing-objecthandling-error. Just like in the other `RooWorkspace` access functions, like `arg()`,; `pdf()`, or `function()`, users expect to use `getSnapshot()` also to; query if a snapshot exists and check if the returned value is `nullptr`.; So there should be no error printed in `getSnapshot()` itself. If it is; actually an error for th caller that no snapshot has been found, an; error or exception should be raised by the caller. A second commit in this PR applies some general code modernization to `RooWorkspace.cxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11584
https://github.com/root-project/root/pull/11584:487,Availability,error,error,487,"In this forum post, the point was made that; `RooWorkspace::getSnapshot()` should not print an error if a snapshot; with the passed name is not found. https://root-forum.cern.ch/t/roofit-check-if-snapshot-exist-without-showing-objecthandling-error. Just like in the other `RooWorkspace` access functions, like `arg()`,; `pdf()`, or `function()`, users expect to use `getSnapshot()` also to; query if a snapshot exists and check if the returned value is `nullptr`.; So there should be no error printed in `getSnapshot()` itself. If it is; actually an error for th caller that no snapshot has been found, an; error or exception should be raised by the caller. A second commit in this PR applies some general code modernization to `RooWorkspace.cxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11584
https://github.com/root-project/root/pull/11584:550,Availability,error,error,550,"In this forum post, the point was made that; `RooWorkspace::getSnapshot()` should not print an error if a snapshot; with the passed name is not found. https://root-forum.cern.ch/t/roofit-check-if-snapshot-exist-without-showing-objecthandling-error. Just like in the other `RooWorkspace` access functions, like `arg()`,; `pdf()`, or `function()`, users expect to use `getSnapshot()` also to; query if a snapshot exists and check if the returned value is `nullptr`.; So there should be no error printed in `getSnapshot()` itself. If it is; actually an error for th caller that no snapshot has been found, an; error or exception should be raised by the caller. A second commit in this PR applies some general code modernization to `RooWorkspace.cxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11584
https://github.com/root-project/root/pull/11584:607,Availability,error,error,607,"In this forum post, the point was made that; `RooWorkspace::getSnapshot()` should not print an error if a snapshot; with the passed name is not found. https://root-forum.cern.ch/t/roofit-check-if-snapshot-exist-without-showing-objecthandling-error. Just like in the other `RooWorkspace` access functions, like `arg()`,; `pdf()`, or `function()`, users expect to use `getSnapshot()` also to; query if a snapshot exists and check if the returned value is `nullptr`.; So there should be no error printed in `getSnapshot()` itself. If it is; actually an error for th caller that no snapshot has been found, an; error or exception should be raised by the caller. A second commit in this PR applies some general code modernization to `RooWorkspace.cxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11584
https://github.com/root-project/root/pull/11584:287,Security,access,access,287,"In this forum post, the point was made that; `RooWorkspace::getSnapshot()` should not print an error if a snapshot; with the passed name is not found. https://root-forum.cern.ch/t/roofit-check-if-snapshot-exist-without-showing-objecthandling-error. Just like in the other `RooWorkspace` access functions, like `arg()`,; `pdf()`, or `function()`, users expect to use `getSnapshot()` also to; query if a snapshot exists and check if the returned value is `nullptr`.; So there should be no error printed in `getSnapshot()` itself. If it is; actually an error for th caller that no snapshot has been found, an; error or exception should be raised by the caller. A second commit in this PR applies some general code modernization to `RooWorkspace.cxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11584
https://github.com/root-project/root/pull/11585:385,Integrability,depend,dependency,385,"1. When filter expression entered, reopen folders again. Means if `TFile` keys were shown, they will be shown again. ; 2. When object like `TH1` or `TTree` read from `TFile`, it will be removed from managed objects and owned by `RBrowser`. This allows to correctly work with different histograms version at the time.; 3. Show `TFile` size ; 4. Fix two LGTM warnings; 5. Add `root7` as dependency for `RGeomViewer`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11585
https://github.com/root-project/root/pull/11586:130,Testability,test,tested,130,## This Pull request:. Development of the nary operators with multi directional broadcasting for TMVA/SOFIE. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11586
https://github.com/root-project/root/issues/11587:638,Availability,error,error,638,"Hello,. The `TCollection.h` header file cannot be included at the same time as the standard `span` header file. This bug impacts all the headers that include `TCollection.h` including `TCanvas.h`. Here is a minimal example to reproduce the bug when compiled with GCC 12.2.0 in C++20, with ROOT 6.26.06:. ```cpp; #include <span>; #include <TCollection.h>; ```. and here is the output:. ```; Consolidate compiler generated dependencies of target main; [ 50%] Building CXX object CMakeFiles/main.dir/main.cpp.o; In file included from /usr/include/TCollection.h:33,; from /tmp/scratchpad/main.cpp:2:; /usr/include/ROOT/RRangeCast.hxx:186:33: error: template argument 3 is invalid; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeStaticCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:188:16: error: reference to ‘span’ is ambiguous; 188 | return std::span<U>(arr, arr + N);; | ^~~~; In file included from /usr/include/ROOT/RSpan.hxx:33,; from /usr/include/ROOT/RRangeCast.hxx:17:; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; In file included from /tmp/scratchpad/main.cpp:1:; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:188:22: error: expected primary-expression before ‘>’ token; 188 | return std::span<U>(arr, arr + N);; | ^; /usr/include/ROOT/RRangeCast.hxx: At global scope:; /usr/include/ROOT/RRangeCast.hxx:225:32: error: template argument 3 is invalid; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeDynCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:227:16: error: reference to ‘span’ is ambiguous; 227 | return std::span<U>(arr, arr + N);; | ^~~~; /usr/include/ROOT/span.hxx:155:7: note: candidates are",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11587
https://github.com/root-project/root/issues/11587:881,Availability,error,error,881,"Hello,. The `TCollection.h` header file cannot be included at the same time as the standard `span` header file. This bug impacts all the headers that include `TCollection.h` including `TCanvas.h`. Here is a minimal example to reproduce the bug when compiled with GCC 12.2.0 in C++20, with ROOT 6.26.06:. ```cpp; #include <span>; #include <TCollection.h>; ```. and here is the output:. ```; Consolidate compiler generated dependencies of target main; [ 50%] Building CXX object CMakeFiles/main.dir/main.cpp.o; In file included from /usr/include/TCollection.h:33,; from /tmp/scratchpad/main.cpp:2:; /usr/include/ROOT/RRangeCast.hxx:186:33: error: template argument 3 is invalid; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeStaticCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:188:16: error: reference to ‘span’ is ambiguous; 188 | return std::span<U>(arr, arr + N);; | ^~~~; In file included from /usr/include/ROOT/RSpan.hxx:33,; from /usr/include/ROOT/RRangeCast.hxx:17:; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; In file included from /tmp/scratchpad/main.cpp:1:; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:188:22: error: expected primary-expression before ‘>’ token; 188 | return std::span<U>(arr, arr + N);; | ^; /usr/include/ROOT/RRangeCast.hxx: At global scope:; /usr/include/ROOT/RRangeCast.hxx:225:32: error: template argument 3 is invalid; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeDynCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:227:16: error: reference to ‘span’ is ambiguous; 227 | return std::span<U>(arr, arr + N);; | ^~~~; /usr/include/ROOT/span.hxx:155:7: note: candidates are",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11587
https://github.com/root-project/root/issues/11587:1427,Availability,error,error,1427,"es/main.dir/main.cpp.o; In file included from /usr/include/TCollection.h:33,; from /tmp/scratchpad/main.cpp:2:; /usr/include/ROOT/RRangeCast.hxx:186:33: error: template argument 3 is invalid; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeStaticCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:188:16: error: reference to ‘span’ is ambiguous; 188 | return std::span<U>(arr, arr + N);; | ^~~~; In file included from /usr/include/ROOT/RSpan.hxx:33,; from /usr/include/ROOT/RRangeCast.hxx:17:; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; In file included from /tmp/scratchpad/main.cpp:1:; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:188:22: error: expected primary-expression before ‘>’ token; 188 | return std::span<U>(arr, arr + N);; | ^; /usr/include/ROOT/RRangeCast.hxx: At global scope:; /usr/include/ROOT/RRangeCast.hxx:225:32: error: template argument 3 is invalid; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeDynCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:227:16: error: reference to ‘span’ is ambiguous; 227 | return std::span<U>(arr, arr + N);; | ^~~~; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:227:22: error: expected primary-expression before ‘>’ token; 227 | return std::span<U>(arr, arr + N);; | ^; make[2]: *** [CMakeFiles/main.dir/build.make:76: CMakeFiles/main.dir/main.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:83: CMak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11587
https://github.com/root-project/root/issues/11587:1620,Availability,error,error,1620,":33,; from /tmp/scratchpad/main.cpp:2:; /usr/include/ROOT/RRangeCast.hxx:186:33: error: template argument 3 is invalid; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeStaticCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:188:16: error: reference to ‘span’ is ambiguous; 188 | return std::span<U>(arr, arr + N);; | ^~~~; In file included from /usr/include/ROOT/RSpan.hxx:33,; from /usr/include/ROOT/RRangeCast.hxx:17:; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; In file included from /tmp/scratchpad/main.cpp:1:; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:188:22: error: expected primary-expression before ‘>’ token; 188 | return std::span<U>(arr, arr + N);; | ^; /usr/include/ROOT/RRangeCast.hxx: At global scope:; /usr/include/ROOT/RRangeCast.hxx:225:32: error: template argument 3 is invalid; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeDynCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:227:16: error: reference to ‘span’ is ambiguous; 227 | return std::span<U>(arr, arr + N);; | ^~~~; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:227:22: error: expected primary-expression before ‘>’ token; 227 | return std::span<U>(arr, arr + N);; | ^; make[2]: *** [CMakeFiles/main.dir/build.make:76: CMakeFiles/main.dir/main.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/main.dir/all] Error 2; make: *** [Makefile:91: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11587
https://github.com/root-project/root/issues/11587:1856,Availability,error,error,1856,":33,; from /tmp/scratchpad/main.cpp:2:; /usr/include/ROOT/RRangeCast.hxx:186:33: error: template argument 3 is invalid; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeStaticCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:188:16: error: reference to ‘span’ is ambiguous; 188 | return std::span<U>(arr, arr + N);; | ^~~~; In file included from /usr/include/ROOT/RSpan.hxx:33,; from /usr/include/ROOT/RRangeCast.hxx:17:; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; In file included from /tmp/scratchpad/main.cpp:1:; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:188:22: error: expected primary-expression before ‘>’ token; 188 | return std::span<U>(arr, arr + N);; | ^; /usr/include/ROOT/RRangeCast.hxx: At global scope:; /usr/include/ROOT/RRangeCast.hxx:225:32: error: template argument 3 is invalid; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeDynCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:227:16: error: reference to ‘span’ is ambiguous; 227 | return std::span<U>(arr, arr + N);; | ^~~~; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:227:22: error: expected primary-expression before ‘>’ token; 227 | return std::span<U>(arr, arr + N);; | ^; make[2]: *** [CMakeFiles/main.dir/build.make:76: CMakeFiles/main.dir/main.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/main.dir/all] Error 2; make: *** [Makefile:91: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11587
https://github.com/root-project/root/issues/11587:2253,Availability,error,error,2253,":33,; from /tmp/scratchpad/main.cpp:2:; /usr/include/ROOT/RRangeCast.hxx:186:33: error: template argument 3 is invalid; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeStaticCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:188:16: error: reference to ‘span’ is ambiguous; 188 | return std::span<U>(arr, arr + N);; | ^~~~; In file included from /usr/include/ROOT/RSpan.hxx:33,; from /usr/include/ROOT/RRangeCast.hxx:17:; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; In file included from /tmp/scratchpad/main.cpp:1:; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:188:22: error: expected primary-expression before ‘>’ token; 188 | return std::span<U>(arr, arr + N);; | ^; /usr/include/ROOT/RRangeCast.hxx: At global scope:; /usr/include/ROOT/RRangeCast.hxx:225:32: error: template argument 3 is invalid; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeDynCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:227:16: error: reference to ‘span’ is ambiguous; 227 | return std::span<U>(arr, arr + N);; | ^~~~; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:227:22: error: expected primary-expression before ‘>’ token; 227 | return std::span<U>(arr, arr + N);; | ^; make[2]: *** [CMakeFiles/main.dir/build.make:76: CMakeFiles/main.dir/main.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/main.dir/all] Error 2; make: *** [Makefile:91: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11587
https://github.com/root-project/root/issues/11587:2434,Availability,Error,Error,2434,":33,; from /tmp/scratchpad/main.cpp:2:; /usr/include/ROOT/RRangeCast.hxx:186:33: error: template argument 3 is invalid; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeStaticCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:188:16: error: reference to ‘span’ is ambiguous; 188 | return std::span<U>(arr, arr + N);; | ^~~~; In file included from /usr/include/ROOT/RSpan.hxx:33,; from /usr/include/ROOT/RRangeCast.hxx:17:; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; In file included from /tmp/scratchpad/main.cpp:1:; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:188:22: error: expected primary-expression before ‘>’ token; 188 | return std::span<U>(arr, arr + N);; | ^; /usr/include/ROOT/RRangeCast.hxx: At global scope:; /usr/include/ROOT/RRangeCast.hxx:225:32: error: template argument 3 is invalid; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeDynCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:227:16: error: reference to ‘span’ is ambiguous; 227 | return std::span<U>(arr, arr + N);; | ^~~~; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:227:22: error: expected primary-expression before ‘>’ token; 227 | return std::span<U>(arr, arr + N);; | ^; make[2]: *** [CMakeFiles/main.dir/build.make:76: CMakeFiles/main.dir/main.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/main.dir/all] Error 2; make: *** [Makefile:91: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11587
https://github.com/root-project/root/issues/11587:2507,Availability,Error,Error,2507,":33,; from /tmp/scratchpad/main.cpp:2:; /usr/include/ROOT/RRangeCast.hxx:186:33: error: template argument 3 is invalid; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeStaticCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:188:16: error: reference to ‘span’ is ambiguous; 188 | return std::span<U>(arr, arr + N);; | ^~~~; In file included from /usr/include/ROOT/RSpan.hxx:33,; from /usr/include/ROOT/RRangeCast.hxx:17:; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; In file included from /tmp/scratchpad/main.cpp:1:; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:188:22: error: expected primary-expression before ‘>’ token; 188 | return std::span<U>(arr, arr + N);; | ^; /usr/include/ROOT/RRangeCast.hxx: At global scope:; /usr/include/ROOT/RRangeCast.hxx:225:32: error: template argument 3 is invalid; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeDynCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:227:16: error: reference to ‘span’ is ambiguous; 227 | return std::span<U>(arr, arr + N);; | ^~~~; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:227:22: error: expected primary-expression before ‘>’ token; 227 | return std::span<U>(arr, arr + N);; | ^; make[2]: *** [CMakeFiles/main.dir/build.make:76: CMakeFiles/main.dir/main.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/main.dir/all] Error 2; make: *** [Makefile:91: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11587
https://github.com/root-project/root/issues/11587:2545,Availability,Error,Error,2545,":33,; from /tmp/scratchpad/main.cpp:2:; /usr/include/ROOT/RRangeCast.hxx:186:33: error: template argument 3 is invalid; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeStaticCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:188:16: error: reference to ‘span’ is ambiguous; 188 | return std::span<U>(arr, arr + N);; | ^~~~; In file included from /usr/include/ROOT/RSpan.hxx:33,; from /usr/include/ROOT/RRangeCast.hxx:17:; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; In file included from /tmp/scratchpad/main.cpp:1:; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:188:22: error: expected primary-expression before ‘>’ token; 188 | return std::span<U>(arr, arr + N);; | ^; /usr/include/ROOT/RRangeCast.hxx: At global scope:; /usr/include/ROOT/RRangeCast.hxx:225:32: error: template argument 3 is invalid; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeDynCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:227:16: error: reference to ‘span’ is ambiguous; 227 | return std::span<U>(arr, arr + N);; | ^~~~; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:227:22: error: expected primary-expression before ‘>’ token; 227 | return std::span<U>(arr, arr + N);; | ^; make[2]: *** [CMakeFiles/main.dir/build.make:76: CMakeFiles/main.dir/main.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/main.dir/all] Error 2; make: *** [Makefile:91: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11587
https://github.com/root-project/root/issues/11587:421,Integrability,depend,dependencies,421,"Hello,. The `TCollection.h` header file cannot be included at the same time as the standard `span` header file. This bug impacts all the headers that include `TCollection.h` including `TCanvas.h`. Here is a minimal example to reproduce the bug when compiled with GCC 12.2.0 in C++20, with ROOT 6.26.06:. ```cpp; #include <span>; #include <TCollection.h>; ```. and here is the output:. ```; Consolidate compiler generated dependencies of target main; [ 50%] Building CXX object CMakeFiles/main.dir/main.cpp.o; In file included from /usr/include/TCollection.h:33,; from /tmp/scratchpad/main.cpp:2:; /usr/include/ROOT/RRangeCast.hxx:186:33: error: template argument 3 is invalid; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeStaticCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:188:16: error: reference to ‘span’ is ambiguous; 188 | return std::span<U>(arr, arr + N);; | ^~~~; In file included from /usr/include/ROOT/RSpan.hxx:33,; from /usr/include/ROOT/RRangeCast.hxx:17:; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; In file included from /tmp/scratchpad/main.cpp:1:; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:188:22: error: expected primary-expression before ‘>’ token; 188 | return std::span<U>(arr, arr + N);; | ^; /usr/include/ROOT/RRangeCast.hxx: At global scope:; /usr/include/ROOT/RRangeCast.hxx:225:32: error: template argument 3 is invalid; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeDynCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:227:16: error: reference to ‘span’ is ambiguous; 227 | return std::span<U>(arr, arr + N);; | ^~~~; /usr/include/ROOT/span.hxx:155:7: note: candidates are",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11587
https://github.com/root-project/root/pull/11588:221,Deployability,update,updated,221,# This Pull request:. ## Changes or fixes:; thread safety of DirName; as suggested by pcanal here: https://github.com/root-project/root/pull/11443#discussion_r997428823. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11588
https://github.com/root-project/root/pull/11588:51,Safety,safe,safety,51,# This Pull request:. ## Changes or fixes:; thread safety of DirName; as suggested by pcanal here: https://github.com/root-project/root/pull/11443#discussion_r997428823. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11588
https://github.com/root-project/root/pull/11588:191,Testability,test,tested,191,# This Pull request:. ## Changes or fixes:; thread safety of DirName; as suggested by pcanal here: https://github.com/root-project/root/pull/11443#discussion_r997428823. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11588
https://github.com/root-project/root/pull/11592:140,Availability,resilien,resilient,140,Fixes #11581 . `std::vector<const char*>` does not provide a `value_type` attribute. This PR makes the pythonization of `std::vector<char>` resilient to the absence of such attribute.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11592
https://github.com/root-project/root/pull/11594:91,Testability,test,test,91,This PR fixes the Concat operator for concatenating on the 0th axis and adds corresponding test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11594
https://github.com/root-project/root/pull/11595:107,Testability,test,tested,107,## This Pull request:; Development of the LayerNormalization operator for TMVA/SOFIE. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11595
https://github.com/root-project/root/pull/11597:1746,Deployability,integrat,integration,1746,"_mod"", """", RooArgSet(par, RooConst(10)));. RooGaussian gauss(""gauss"", """", x, parMod, RooConst(2.0));; RooGenericPdf pdf(""pdf"", ""gauss"", gauss);. std::unique_ptr<RooAbsReal> integ1{gauss.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ1->Print(""v"");. std::cout << std::endl;. std::unique_ptr<RooAbsReal> integ2{pdf.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ2->Print(""v"");; }; ```. The integral of the Gaussian has the correct value (`V`) servers (the parameters of the Gaussian):; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bf240,--) RooGaussian::gauss """"; (0x7ffc9b9bff68,V-) RooProduct::par_mod """"; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. The integral of the `RooGenericPdf` should have the same value servers,; but it doesn't. Instead, it uses the leaves of the computation graph:; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bec88,--) RooRealSumPdf::pdf """"; (0x7ffc9b9bfb80,V-) RooRealVar::par """"; (0x55ac51984c50,V-) RooConstVar::10 ""10""; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. That means, the direct value server `par_mod` is **skipped** now,; misrepresenting the client-server relationship. The new BatchMode makes strong use of the value-server interface for the; `RooFitDriver`, so it's very sensitive to `RooRealIntegrals` getting it; wrong. That's why this commit suggests to change the logic in `RooRealIntegral`; to always add the next direct value servers that don't depend on the; integration variable, and not the leaves. A unit test that verifies that the value servers of the integral are the; mathematically direct value servers and not the computation graph leaves; is also implemented. Closes https://github.com/root-project/root/issues/11578. The PR also fixes the same problem for the RooProjectedPdf, which is essentially a integral wrapper but it also got the server-client interface wrong. Now, it simply takes over the shape and value servers from the underlying integral, which is now implemented correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11597
https://github.com/root-project/root/pull/11597:51,Integrability,interface,interface,51,"Integrals of derived PDFs have their client-server interface messed up,; and it's inconsistent with non-derived PDFs. Here is a reproducer:. ```C++; void repro() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);. RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct parMod(""par_mod"", """", RooArgSet(par, RooConst(10)));. RooGaussian gauss(""gauss"", """", x, parMod, RooConst(2.0));; RooGenericPdf pdf(""pdf"", ""gauss"", gauss);. std::unique_ptr<RooAbsReal> integ1{gauss.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ1->Print(""v"");. std::cout << std::endl;. std::unique_ptr<RooAbsReal> integ2{pdf.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ2->Print(""v"");; }; ```. The integral of the Gaussian has the correct value (`V`) servers (the parameters of the Gaussian):; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bf240,--) RooGaussian::gauss """"; (0x7ffc9b9bff68,V-) RooProduct::par_mod """"; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. The integral of the `RooGenericPdf` should have the same value servers,; but it doesn't. Instead, it uses the leaves of the computation graph:; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bec88,--) RooRealSumPdf::pdf """"; (0x7ffc9b9bfb80,V-) RooRealVar::par """"; (0x55ac51984c50,V-) RooConstVar::10 ""10""; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. That means, the direct value server `par_mod` is **skipped** now,; misrepresenting the client-server relationship. The new BatchMode makes strong use of the value-server interface for the; `RooFitDriver`, so it's very sensitive to `RooRealIntegrals` getting it; wrong. That's why this commit suggests to change the logic in `RooRealIntegral`; to always add the next direct value servers that don't depend on the; integration variable, and not the leaves. A unit test that verifies that the value servers of the integral are the; mathematically direct value servers and not the computation graph leaves; is also implemented. Closes https://github.com/root-project/root/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11597
https://github.com/root-project/root/pull/11597:1503,Integrability,interface,interface,1503,"_mod"", """", RooArgSet(par, RooConst(10)));. RooGaussian gauss(""gauss"", """", x, parMod, RooConst(2.0));; RooGenericPdf pdf(""pdf"", ""gauss"", gauss);. std::unique_ptr<RooAbsReal> integ1{gauss.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ1->Print(""v"");. std::cout << std::endl;. std::unique_ptr<RooAbsReal> integ2{pdf.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ2->Print(""v"");; }; ```. The integral of the Gaussian has the correct value (`V`) servers (the parameters of the Gaussian):; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bf240,--) RooGaussian::gauss """"; (0x7ffc9b9bff68,V-) RooProduct::par_mod """"; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. The integral of the `RooGenericPdf` should have the same value servers,; but it doesn't. Instead, it uses the leaves of the computation graph:; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bec88,--) RooRealSumPdf::pdf """"; (0x7ffc9b9bfb80,V-) RooRealVar::par """"; (0x55ac51984c50,V-) RooConstVar::10 ""10""; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. That means, the direct value server `par_mod` is **skipped** now,; misrepresenting the client-server relationship. The new BatchMode makes strong use of the value-server interface for the; `RooFitDriver`, so it's very sensitive to `RooRealIntegrals` getting it; wrong. That's why this commit suggests to change the logic in `RooRealIntegral`; to always add the next direct value servers that don't depend on the; integration variable, and not the leaves. A unit test that verifies that the value servers of the integral are the; mathematically direct value servers and not the computation graph leaves; is also implemented. Closes https://github.com/root-project/root/issues/11578. The PR also fixes the same problem for the RooProjectedPdf, which is essentially a integral wrapper but it also got the server-client interface wrong. Now, it simply takes over the shape and value servers from the underlying integral, which is now implemented correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11597
https://github.com/root-project/root/pull/11597:1731,Integrability,depend,depend,1731,"_mod"", """", RooArgSet(par, RooConst(10)));. RooGaussian gauss(""gauss"", """", x, parMod, RooConst(2.0));; RooGenericPdf pdf(""pdf"", ""gauss"", gauss);. std::unique_ptr<RooAbsReal> integ1{gauss.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ1->Print(""v"");. std::cout << std::endl;. std::unique_ptr<RooAbsReal> integ2{pdf.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ2->Print(""v"");; }; ```. The integral of the Gaussian has the correct value (`V`) servers (the parameters of the Gaussian):; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bf240,--) RooGaussian::gauss """"; (0x7ffc9b9bff68,V-) RooProduct::par_mod """"; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. The integral of the `RooGenericPdf` should have the same value servers,; but it doesn't. Instead, it uses the leaves of the computation graph:; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bec88,--) RooRealSumPdf::pdf """"; (0x7ffc9b9bfb80,V-) RooRealVar::par """"; (0x55ac51984c50,V-) RooConstVar::10 ""10""; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. That means, the direct value server `par_mod` is **skipped** now,; misrepresenting the client-server relationship. The new BatchMode makes strong use of the value-server interface for the; `RooFitDriver`, so it's very sensitive to `RooRealIntegrals` getting it; wrong. That's why this commit suggests to change the logic in `RooRealIntegral`; to always add the next direct value servers that don't depend on the; integration variable, and not the leaves. A unit test that verifies that the value servers of the integral are the; mathematically direct value servers and not the computation graph leaves; is also implemented. Closes https://github.com/root-project/root/issues/11578. The PR also fixes the same problem for the RooProjectedPdf, which is essentially a integral wrapper but it also got the server-client interface wrong. Now, it simply takes over the shape and value servers from the underlying integral, which is now implemented correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11597
https://github.com/root-project/root/pull/11597:1746,Integrability,integrat,integration,1746,"_mod"", """", RooArgSet(par, RooConst(10)));. RooGaussian gauss(""gauss"", """", x, parMod, RooConst(2.0));; RooGenericPdf pdf(""pdf"", ""gauss"", gauss);. std::unique_ptr<RooAbsReal> integ1{gauss.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ1->Print(""v"");. std::cout << std::endl;. std::unique_ptr<RooAbsReal> integ2{pdf.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ2->Print(""v"");; }; ```. The integral of the Gaussian has the correct value (`V`) servers (the parameters of the Gaussian):; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bf240,--) RooGaussian::gauss """"; (0x7ffc9b9bff68,V-) RooProduct::par_mod """"; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. The integral of the `RooGenericPdf` should have the same value servers,; but it doesn't. Instead, it uses the leaves of the computation graph:; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bec88,--) RooRealSumPdf::pdf """"; (0x7ffc9b9bfb80,V-) RooRealVar::par """"; (0x55ac51984c50,V-) RooConstVar::10 ""10""; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. That means, the direct value server `par_mod` is **skipped** now,; misrepresenting the client-server relationship. The new BatchMode makes strong use of the value-server interface for the; `RooFitDriver`, so it's very sensitive to `RooRealIntegrals` getting it; wrong. That's why this commit suggests to change the logic in `RooRealIntegral`; to always add the next direct value servers that don't depend on the; integration variable, and not the leaves. A unit test that verifies that the value servers of the integral are the; mathematically direct value servers and not the computation graph leaves; is also implemented. Closes https://github.com/root-project/root/issues/11578. The PR also fixes the same problem for the RooProjectedPdf, which is essentially a integral wrapper but it also got the server-client interface wrong. Now, it simply takes over the shape and value servers from the underlying integral, which is now implemented correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11597
https://github.com/root-project/root/pull/11597:2107,Integrability,wrap,wrapper,2107,"_mod"", """", RooArgSet(par, RooConst(10)));. RooGaussian gauss(""gauss"", """", x, parMod, RooConst(2.0));; RooGenericPdf pdf(""pdf"", ""gauss"", gauss);. std::unique_ptr<RooAbsReal> integ1{gauss.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ1->Print(""v"");. std::cout << std::endl;. std::unique_ptr<RooAbsReal> integ2{pdf.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ2->Print(""v"");; }; ```. The integral of the Gaussian has the correct value (`V`) servers (the parameters of the Gaussian):; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bf240,--) RooGaussian::gauss """"; (0x7ffc9b9bff68,V-) RooProduct::par_mod """"; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. The integral of the `RooGenericPdf` should have the same value servers,; but it doesn't. Instead, it uses the leaves of the computation graph:; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bec88,--) RooRealSumPdf::pdf """"; (0x7ffc9b9bfb80,V-) RooRealVar::par """"; (0x55ac51984c50,V-) RooConstVar::10 ""10""; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. That means, the direct value server `par_mod` is **skipped** now,; misrepresenting the client-server relationship. The new BatchMode makes strong use of the value-server interface for the; `RooFitDriver`, so it's very sensitive to `RooRealIntegrals` getting it; wrong. That's why this commit suggests to change the logic in `RooRealIntegral`; to always add the next direct value servers that don't depend on the; integration variable, and not the leaves. A unit test that verifies that the value servers of the integral are the; mathematically direct value servers and not the computation graph leaves; is also implemented. Closes https://github.com/root-project/root/issues/11578. The PR also fixes the same problem for the RooProjectedPdf, which is essentially a integral wrapper but it also got the server-client interface wrong. Now, it simply takes over the shape and value servers from the underlying integral, which is now implemented correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11597
https://github.com/root-project/root/pull/11597:2149,Integrability,interface,interface,2149,"_mod"", """", RooArgSet(par, RooConst(10)));. RooGaussian gauss(""gauss"", """", x, parMod, RooConst(2.0));; RooGenericPdf pdf(""pdf"", ""gauss"", gauss);. std::unique_ptr<RooAbsReal> integ1{gauss.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ1->Print(""v"");. std::cout << std::endl;. std::unique_ptr<RooAbsReal> integ2{pdf.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ2->Print(""v"");; }; ```. The integral of the Gaussian has the correct value (`V`) servers (the parameters of the Gaussian):; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bf240,--) RooGaussian::gauss """"; (0x7ffc9b9bff68,V-) RooProduct::par_mod """"; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. The integral of the `RooGenericPdf` should have the same value servers,; but it doesn't. Instead, it uses the leaves of the computation graph:; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bec88,--) RooRealSumPdf::pdf """"; (0x7ffc9b9bfb80,V-) RooRealVar::par """"; (0x55ac51984c50,V-) RooConstVar::10 ""10""; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. That means, the direct value server `par_mod` is **skipped** now,; misrepresenting the client-server relationship. The new BatchMode makes strong use of the value-server interface for the; `RooFitDriver`, so it's very sensitive to `RooRealIntegrals` getting it; wrong. That's why this commit suggests to change the logic in `RooRealIntegral`; to always add the next direct value servers that don't depend on the; integration variable, and not the leaves. A unit test that verifies that the value servers of the integral are the; mathematically direct value servers and not the computation graph leaves; is also implemented. Closes https://github.com/root-project/root/issues/11578. The PR also fixes the same problem for the RooProjectedPdf, which is essentially a integral wrapper but it also got the server-client interface wrong. Now, it simply takes over the shape and value servers from the underlying integral, which is now implemented correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11597
https://github.com/root-project/root/pull/11597:1758,Modifiability,variab,variable,1758,"_mod"", """", RooArgSet(par, RooConst(10)));. RooGaussian gauss(""gauss"", """", x, parMod, RooConst(2.0));; RooGenericPdf pdf(""pdf"", ""gauss"", gauss);. std::unique_ptr<RooAbsReal> integ1{gauss.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ1->Print(""v"");. std::cout << std::endl;. std::unique_ptr<RooAbsReal> integ2{pdf.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ2->Print(""v"");; }; ```. The integral of the Gaussian has the correct value (`V`) servers (the parameters of the Gaussian):; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bf240,--) RooGaussian::gauss """"; (0x7ffc9b9bff68,V-) RooProduct::par_mod """"; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. The integral of the `RooGenericPdf` should have the same value servers,; but it doesn't. Instead, it uses the leaves of the computation graph:; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bec88,--) RooRealSumPdf::pdf """"; (0x7ffc9b9bfb80,V-) RooRealVar::par """"; (0x55ac51984c50,V-) RooConstVar::10 ""10""; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. That means, the direct value server `par_mod` is **skipped** now,; misrepresenting the client-server relationship. The new BatchMode makes strong use of the value-server interface for the; `RooFitDriver`, so it's very sensitive to `RooRealIntegrals` getting it; wrong. That's why this commit suggests to change the logic in `RooRealIntegral`; to always add the next direct value servers that don't depend on the; integration variable, and not the leaves. A unit test that verifies that the value servers of the integral are the; mathematically direct value servers and not the computation graph leaves; is also implemented. Closes https://github.com/root-project/root/issues/11578. The PR also fixes the same problem for the RooProjectedPdf, which is essentially a integral wrapper but it also got the server-client interface wrong. Now, it simply takes over the shape and value servers from the underlying integral, which is now implemented correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11597
https://github.com/root-project/root/pull/11597:1648,Testability,log,logic,1648,"_mod"", """", RooArgSet(par, RooConst(10)));. RooGaussian gauss(""gauss"", """", x, parMod, RooConst(2.0));; RooGenericPdf pdf(""pdf"", ""gauss"", gauss);. std::unique_ptr<RooAbsReal> integ1{gauss.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ1->Print(""v"");. std::cout << std::endl;. std::unique_ptr<RooAbsReal> integ2{pdf.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ2->Print(""v"");; }; ```. The integral of the Gaussian has the correct value (`V`) servers (the parameters of the Gaussian):; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bf240,--) RooGaussian::gauss """"; (0x7ffc9b9bff68,V-) RooProduct::par_mod """"; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. The integral of the `RooGenericPdf` should have the same value servers,; but it doesn't. Instead, it uses the leaves of the computation graph:; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bec88,--) RooRealSumPdf::pdf """"; (0x7ffc9b9bfb80,V-) RooRealVar::par """"; (0x55ac51984c50,V-) RooConstVar::10 ""10""; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. That means, the direct value server `par_mod` is **skipped** now,; misrepresenting the client-server relationship. The new BatchMode makes strong use of the value-server interface for the; `RooFitDriver`, so it's very sensitive to `RooRealIntegrals` getting it; wrong. That's why this commit suggests to change the logic in `RooRealIntegral`; to always add the next direct value servers that don't depend on the; integration variable, and not the leaves. A unit test that verifies that the value servers of the integral are the; mathematically direct value servers and not the computation graph leaves; is also implemented. Closes https://github.com/root-project/root/issues/11578. The PR also fixes the same problem for the RooProjectedPdf, which is essentially a integral wrapper but it also got the server-client interface wrong. Now, it simply takes over the shape and value servers from the underlying integral, which is now implemented correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11597
https://github.com/root-project/root/pull/11597:1795,Testability,test,test,1795,"_mod"", """", RooArgSet(par, RooConst(10)));. RooGaussian gauss(""gauss"", """", x, parMod, RooConst(2.0));; RooGenericPdf pdf(""pdf"", ""gauss"", gauss);. std::unique_ptr<RooAbsReal> integ1{gauss.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ1->Print(""v"");. std::cout << std::endl;. std::unique_ptr<RooAbsReal> integ2{pdf.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ2->Print(""v"");; }; ```. The integral of the Gaussian has the correct value (`V`) servers (the parameters of the Gaussian):; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bf240,--) RooGaussian::gauss """"; (0x7ffc9b9bff68,V-) RooProduct::par_mod """"; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. The integral of the `RooGenericPdf` should have the same value servers,; but it doesn't. Instead, it uses the leaves of the computation graph:; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bec88,--) RooRealSumPdf::pdf """"; (0x7ffc9b9bfb80,V-) RooRealVar::par """"; (0x55ac51984c50,V-) RooConstVar::10 ""10""; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. That means, the direct value server `par_mod` is **skipped** now,; misrepresenting the client-server relationship. The new BatchMode makes strong use of the value-server interface for the; `RooFitDriver`, so it's very sensitive to `RooRealIntegrals` getting it; wrong. That's why this commit suggests to change the logic in `RooRealIntegral`; to always add the next direct value servers that don't depend on the; integration variable, and not the leaves. A unit test that verifies that the value servers of the integral are the; mathematically direct value servers and not the computation graph leaves; is also implemented. Closes https://github.com/root-project/root/issues/11578. The PR also fixes the same problem for the RooProjectedPdf, which is essentially a integral wrapper but it also got the server-client interface wrong. Now, it simply takes over the shape and value servers from the underlying integral, which is now implemented correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11597
https://github.com/root-project/root/pull/11597:2174,Usability,simpl,simply,2174,"_mod"", """", RooArgSet(par, RooConst(10)));. RooGaussian gauss(""gauss"", """", x, parMod, RooConst(2.0));; RooGenericPdf pdf(""pdf"", ""gauss"", gauss);. std::unique_ptr<RooAbsReal> integ1{gauss.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ1->Print(""v"");. std::cout << std::endl;. std::unique_ptr<RooAbsReal> integ2{pdf.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ2->Print(""v"");; }; ```. The integral of the Gaussian has the correct value (`V`) servers (the parameters of the Gaussian):; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bf240,--) RooGaussian::gauss """"; (0x7ffc9b9bff68,V-) RooProduct::par_mod """"; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. The integral of the `RooGenericPdf` should have the same value servers,; but it doesn't. Instead, it uses the leaves of the computation graph:; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bec88,--) RooRealSumPdf::pdf """"; (0x7ffc9b9bfb80,V-) RooRealVar::par """"; (0x55ac51984c50,V-) RooConstVar::10 ""10""; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. That means, the direct value server `par_mod` is **skipped** now,; misrepresenting the client-server relationship. The new BatchMode makes strong use of the value-server interface for the; `RooFitDriver`, so it's very sensitive to `RooRealIntegrals` getting it; wrong. That's why this commit suggests to change the logic in `RooRealIntegral`; to always add the next direct value servers that don't depend on the; integration variable, and not the leaves. A unit test that verifies that the value servers of the integral are the; mathematically direct value servers and not the computation graph leaves; is also implemented. Closes https://github.com/root-project/root/issues/11578. The PR also fixes the same problem for the RooProjectedPdf, which is essentially a integral wrapper but it also got the server-client interface wrong. Now, it simply takes over the shape and value servers from the underlying integral, which is now implemented correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11597
https://github.com/root-project/root/pull/11600:6,Testability,test,tested,6,- [x] tested changes locally. This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11600
https://github.com/root-project/root/issues/11601:147,Deployability,configurat,configuration,147,"After updating to `clang-14.0.6-1.module_el8.7.0+1198+0c3eb6e2.x86_64`, many tests started failing when compiling ROOT with Clang (134 tests in my configuration). The reason seems to be that Clang is now built with [`GCC_INSTALL_PREFIX=/opt/rh/gcc-toolset-12/root/usr`](https://git.centos.org/rpms/clang/c/4e0495208f843a286dc0d06d9abdc3433a66983a) to detect and use `libstdc++` from GCC 12. Even if that was not the case, https://github.com/llvm/llvm-project/commit/35aaf548237a4f213ba9d95de53b33c5ce1eadce in Clang 15 will have a similar effect for people building the compiler from source. According to our own documentation, ROOT does not guarantee [""compatibility with compilers shipped with `devtoolsets` on CentOS or Red Hat""](https://root.cern/install/build_from_source/#caveats) which right now only leaves building with the system-default GCC 8.5 to get a fully working installation of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11601
https://github.com/root-project/root/issues/11601:751,Deployability,install,install,751,"After updating to `clang-14.0.6-1.module_el8.7.0+1198+0c3eb6e2.x86_64`, many tests started failing when compiling ROOT with Clang (134 tests in my configuration). The reason seems to be that Clang is now built with [`GCC_INSTALL_PREFIX=/opt/rh/gcc-toolset-12/root/usr`](https://git.centos.org/rpms/clang/c/4e0495208f843a286dc0d06d9abdc3433a66983a) to detect and use `libstdc++` from GCC 12. Even if that was not the case, https://github.com/llvm/llvm-project/commit/35aaf548237a4f213ba9d95de53b33c5ce1eadce in Clang 15 will have a similar effect for people building the compiler from source. According to our own documentation, ROOT does not guarantee [""compatibility with compilers shipped with `devtoolsets` on CentOS or Red Hat""](https://root.cern/install/build_from_source/#caveats) which right now only leaves building with the system-default GCC 8.5 to get a fully working installation of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11601
https://github.com/root-project/root/issues/11601:879,Deployability,install,installation,879,"After updating to `clang-14.0.6-1.module_el8.7.0+1198+0c3eb6e2.x86_64`, many tests started failing when compiling ROOT with Clang (134 tests in my configuration). The reason seems to be that Clang is now built with [`GCC_INSTALL_PREFIX=/opt/rh/gcc-toolset-12/root/usr`](https://git.centos.org/rpms/clang/c/4e0495208f843a286dc0d06d9abdc3433a66983a) to detect and use `libstdc++` from GCC 12. Even if that was not the case, https://github.com/llvm/llvm-project/commit/35aaf548237a4f213ba9d95de53b33c5ce1eadce in Clang 15 will have a similar effect for people building the compiler from source. According to our own documentation, ROOT does not guarantee [""compatibility with compilers shipped with `devtoolsets` on CentOS or Red Hat""](https://root.cern/install/build_from_source/#caveats) which right now only leaves building with the system-default GCC 8.5 to get a fully working installation of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11601
https://github.com/root-project/root/issues/11601:147,Modifiability,config,configuration,147,"After updating to `clang-14.0.6-1.module_el8.7.0+1198+0c3eb6e2.x86_64`, many tests started failing when compiling ROOT with Clang (134 tests in my configuration). The reason seems to be that Clang is now built with [`GCC_INSTALL_PREFIX=/opt/rh/gcc-toolset-12/root/usr`](https://git.centos.org/rpms/clang/c/4e0495208f843a286dc0d06d9abdc3433a66983a) to detect and use `libstdc++` from GCC 12. Even if that was not the case, https://github.com/llvm/llvm-project/commit/35aaf548237a4f213ba9d95de53b33c5ce1eadce in Clang 15 will have a similar effect for people building the compiler from source. According to our own documentation, ROOT does not guarantee [""compatibility with compilers shipped with `devtoolsets` on CentOS or Red Hat""](https://root.cern/install/build_from_source/#caveats) which right now only leaves building with the system-default GCC 8.5 to get a fully working installation of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11601
https://github.com/root-project/root/issues/11601:351,Safety,detect,detect,351,"After updating to `clang-14.0.6-1.module_el8.7.0+1198+0c3eb6e2.x86_64`, many tests started failing when compiling ROOT with Clang (134 tests in my configuration). The reason seems to be that Clang is now built with [`GCC_INSTALL_PREFIX=/opt/rh/gcc-toolset-12/root/usr`](https://git.centos.org/rpms/clang/c/4e0495208f843a286dc0d06d9abdc3433a66983a) to detect and use `libstdc++` from GCC 12. Even if that was not the case, https://github.com/llvm/llvm-project/commit/35aaf548237a4f213ba9d95de53b33c5ce1eadce in Clang 15 will have a similar effect for people building the compiler from source. According to our own documentation, ROOT does not guarantee [""compatibility with compilers shipped with `devtoolsets` on CentOS or Red Hat""](https://root.cern/install/build_from_source/#caveats) which right now only leaves building with the system-default GCC 8.5 to get a fully working installation of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11601
https://github.com/root-project/root/issues/11601:77,Testability,test,tests,77,"After updating to `clang-14.0.6-1.module_el8.7.0+1198+0c3eb6e2.x86_64`, many tests started failing when compiling ROOT with Clang (134 tests in my configuration). The reason seems to be that Clang is now built with [`GCC_INSTALL_PREFIX=/opt/rh/gcc-toolset-12/root/usr`](https://git.centos.org/rpms/clang/c/4e0495208f843a286dc0d06d9abdc3433a66983a) to detect and use `libstdc++` from GCC 12. Even if that was not the case, https://github.com/llvm/llvm-project/commit/35aaf548237a4f213ba9d95de53b33c5ce1eadce in Clang 15 will have a similar effect for people building the compiler from source. According to our own documentation, ROOT does not guarantee [""compatibility with compilers shipped with `devtoolsets` on CentOS or Red Hat""](https://root.cern/install/build_from_source/#caveats) which right now only leaves building with the system-default GCC 8.5 to get a fully working installation of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11601
https://github.com/root-project/root/issues/11601:135,Testability,test,tests,135,"After updating to `clang-14.0.6-1.module_el8.7.0+1198+0c3eb6e2.x86_64`, many tests started failing when compiling ROOT with Clang (134 tests in my configuration). The reason seems to be that Clang is now built with [`GCC_INSTALL_PREFIX=/opt/rh/gcc-toolset-12/root/usr`](https://git.centos.org/rpms/clang/c/4e0495208f843a286dc0d06d9abdc3433a66983a) to detect and use `libstdc++` from GCC 12. Even if that was not the case, https://github.com/llvm/llvm-project/commit/35aaf548237a4f213ba9d95de53b33c5ce1eadce in Clang 15 will have a similar effect for people building the compiler from source. According to our own documentation, ROOT does not guarantee [""compatibility with compilers shipped with `devtoolsets` on CentOS or Red Hat""](https://root.cern/install/build_from_source/#caveats) which right now only leaves building with the system-default GCC 8.5 to get a fully working installation of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11601
https://github.com/root-project/root/issues/11602:605,Availability,FAILURE,FAILURES,605,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The exception occurs with `pytest` running the test code:; ```python; ============================================================================ FAILURES =============================================================================; _______________________________________________________________ test_data_frame_vec_of_vec_of_real ________________________________________________________________; RuntimeWarning: awkward::ListArray_63uTHafmYE: base class awkward::ArrayView has no streamer or dictionary it will not be saved. The above exception was the direct cause of the following exception:. tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). def test_data_frame_vec_of_vec_of_real(tmp_path):; filename = os.path.join(tmp_path, ""test-listarray.root""); ; ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); ; data_frame = ak.to_rdataframe({""x"": ak_array_in}); ; assert data_frame.GetColumnType(""x"").startswith(""awkward::ListArray_""); ; ak_array_out = ak.from_rdataframe(; data_frame,; columns=(""x"",),; ); assert ak_array_in.to_list() == ak_array_out[""x""].to_list(); ; #with pytest.raises(SystemError):; > data_frame.Snapshot(""ListArray"", filename, (""x"",)); E SystemError: ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11602
https://github.com/root-project/root/issues/11602:3701,Availability,Error,Error,3701,"ame, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) returned a result with an exception set. ak_array_in = <Array [[[1.1], [2.2]], [[3.3], ...]] type='2 * var * var * float64'>; ak_array_out = <Array [{x: [[1.1], [2.2]]}, {...}] type='2 * {x: var * var * float64}'>; data_frame = <cppyy.gbl.ROOT.RDF.RInterface<ROOT::Detail::RDF::RLoopManager,void> object at 0x7f857a496dc0>; filename = '/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0/test-listarray.root'; tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). tests/test_1781-rdataframe-snapshot.py:53: SystemError; ```; while running the same code line by line in `Python` or in `lldb`:; ```python; >>> data_frame.Snapshot(""ListArray"", ""listarray.root"", (""x"",)); Error in <TStreamerInfo::Build>: awkward::ArrayView, discarding: long* ptrs_, no [dimension]. TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_zKlKkVLNo: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x1dc7b5090>; ```; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The first `TStreamerInfo::Build` error can be avoided by appending a comment `//!` to `long* ptrs_` line.; Would it be possible to propagate the `TStreamerInfo::Build:0: RuntimeWarning` message to the user?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Unfortunately, it is not reproducible if the code is run line by line in `Python`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11602
https://github.com/root-project/root/issues/11602:4201,Availability,error,error,4201,"e = '/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0/test-listarray.root'; tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). tests/test_1781-rdataframe-snapshot.py:53: SystemError; ```; while running the same code line by line in `Python` or in `lldb`:; ```python; >>> data_frame.Snapshot(""ListArray"", ""listarray.root"", (""x"",)); Error in <TStreamerInfo::Build>: awkward::ArrayView, discarding: long* ptrs_, no [dimension]. TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_zKlKkVLNo: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x1dc7b5090>; ```; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The first `TStreamerInfo::Build` error can be avoided by appending a comment `//!` to `long* ptrs_` line.; Would it be possible to propagate the `TStreamerInfo::Build:0: RuntimeWarning` message to the user?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Unfortunately, it is not reproducible if the code is run line by line in `Python`:; ```python; % python ; Python 3.10.6 | packaged by conda-forge | (main, Aug 22 2022, 20:43:44) [Clang 13.0.1 ] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import awkward as ak; >>> import ROOT; >>> ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); >>> data_frame = ak.to_rdataframe({""x"": ak_array_in}); >>> data_frame.Snapshot(""ListArray"", ""filename.root"", (""x"",)); TStreamerInfo::Build:0: RuntimeWarning: awkward::List",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11602
https://github.com/root-project/root/issues/11602:5561,Availability,down,download,5561,"ng: long* ptrs_, no [dimension]. TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_zKlKkVLNo: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x1dc7b5090>; ```; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The first `TStreamerInfo::Build` error can be avoided by appending a comment `//!` to `long* ptrs_` line.; Would it be possible to propagate the `TStreamerInfo::Build:0: RuntimeWarning` message to the user?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Unfortunately, it is not reproducible if the code is run line by line in `Python`:; ```python; % python ; Python 3.10.6 | packaged by conda-forge | (main, Aug 22 2022, 20:43:44) [Clang 13.0.1 ] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import awkward as ak; >>> import ROOT; >>> ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); >>> data_frame = ak.to_rdataframe({""x"": ak_array_in}); >>> data_frame.Snapshot(""ListArray"", ""filename.root"", (""x"",)); TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_T4lNHLu6jVU: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7fc2238521d0>; >>> ; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ```python; >>> ROOT.__version__; '6.26/06'; >>> ak.__version__; '2.0.0rc1'; ```; ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11602
https://github.com/root-project/root/issues/11602:5543,Deployability,install,install,5543,"ng: long* ptrs_, no [dimension]. TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_zKlKkVLNo: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x1dc7b5090>; ```; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The first `TStreamerInfo::Build` error can be avoided by appending a comment `//!` to `long* ptrs_` line.; Would it be possible to propagate the `TStreamerInfo::Build:0: RuntimeWarning` message to the user?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Unfortunately, it is not reproducible if the code is run line by line in `Python`:; ```python; % python ; Python 3.10.6 | packaged by conda-forge | (main, Aug 22 2022, 20:43:44) [Clang 13.0.1 ] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import awkward as ak; >>> import ROOT; >>> ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); >>> data_frame = ak.to_rdataframe({""x"": ak_array_in}); >>> data_frame.Snapshot(""ListArray"", ""filename.root"", (""x"",)); TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_T4lNHLu6jVU: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7fc2238521d0>; >>> ; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ```python; >>> ROOT.__version__; '6.26/06'; >>> ak.__version__; '2.0.0rc1'; ```; ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11602
https://github.com/root-project/root/issues/11602:4354,Integrability,message,message,4354,"of_vec_of_0/test-listarray.root'; tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). tests/test_1781-rdataframe-snapshot.py:53: SystemError; ```; while running the same code line by line in `Python` or in `lldb`:; ```python; >>> data_frame.Snapshot(""ListArray"", ""listarray.root"", (""x"",)); Error in <TStreamerInfo::Build>: awkward::ArrayView, discarding: long* ptrs_, no [dimension]. TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_zKlKkVLNo: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x1dc7b5090>; ```; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The first `TStreamerInfo::Build` error can be avoided by appending a comment `//!` to `long* ptrs_` line.; Would it be possible to propagate the `TStreamerInfo::Build:0: RuntimeWarning` message to the user?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Unfortunately, it is not reproducible if the code is run line by line in `Python`:; ```python; % python ; Python 3.10.6 | packaged by conda-forge | (main, Aug 22 2022, 20:43:44) [Clang 13.0.1 ] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import awkward as ak; >>> import ROOT; >>> ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); >>> data_frame = ak.to_rdataframe({""x"": ak_array_in}); >>> data_frame.Snapshot(""ListArray"", ""filename.root"", (""x"",)); TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_T4lNHLu6jVU: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11602
https://github.com/root-project/root/issues/11602:4214,Safety,avoid,avoided,4214,"e = '/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0/test-listarray.root'; tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). tests/test_1781-rdataframe-snapshot.py:53: SystemError; ```; while running the same code line by line in `Python` or in `lldb`:; ```python; >>> data_frame.Snapshot(""ListArray"", ""listarray.root"", (""x"",)); Error in <TStreamerInfo::Build>: awkward::ArrayView, discarding: long* ptrs_, no [dimension]. TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_zKlKkVLNo: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x1dc7b5090>; ```; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The first `TStreamerInfo::Build` error can be avoided by appending a comment `//!` to `long* ptrs_` line.; Would it be possible to propagate the `TStreamerInfo::Build:0: RuntimeWarning` message to the user?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Unfortunately, it is not reproducible if the code is run line by line in `Python`:; ```python; % python ; Python 3.10.6 | packaged by conda-forge | (main, Aug 22 2022, 20:43:44) [Clang 13.0.1 ] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import awkward as ak; >>> import ROOT; >>> ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); >>> data_frame = ak.to_rdataframe({""x"": ak_array_in}); >>> data_frame.Snapshot(""ListArray"", ""filename.root"", (""x"",)); TStreamerInfo::Build:0: RuntimeWarning: awkward::List",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11602
https://github.com/root-project/root/issues/11602:505,Testability,test,test,505,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The exception occurs with `pytest` running the test code:; ```python; ============================================================================ FAILURES =============================================================================; _______________________________________________________________ test_data_frame_vec_of_vec_of_real ________________________________________________________________; RuntimeWarning: awkward::ListArray_63uTHafmYE: base class awkward::ArrayView has no streamer or dictionary it will not be saved. The above exception was the direct cause of the following exception:. tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). def test_data_frame_vec_of_vec_of_real(tmp_path):; filename = os.path.join(tmp_path, ""test-listarray.root""); ; ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); ; data_frame = ak.to_rdataframe({""x"": ak_array_in}); ; assert data_frame.GetColumnType(""x"").startswith(""awkward::ListArray_""); ; ak_array_out = ak.from_rdataframe(; data_frame,; columns=(""x"",),; ); assert ak_array_in.to_list() == ak_array_out[""x""].to_list(); ; #with pytest.raises(SystemError):; > data_frame.Snapshot(""ListArray"", filename, (""x"",)); E SystemError: ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11602
https://github.com/root-project/root/issues/11602:1282,Testability,test,test-listarray,1282,"the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The exception occurs with `pytest` running the test code:; ```python; ============================================================================ FAILURES =============================================================================; _______________________________________________________________ test_data_frame_vec_of_vec_of_real ________________________________________________________________; RuntimeWarning: awkward::ListArray_63uTHafmYE: base class awkward::ArrayView has no streamer or dictionary it will not be saved. The above exception was the direct cause of the following exception:. tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). def test_data_frame_vec_of_vec_of_real(tmp_path):; filename = os.path.join(tmp_path, ""test-listarray.root""); ; ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); ; data_frame = ak.to_rdataframe({""x"": ak_array_in}); ; assert data_frame.GetColumnType(""x"").startswith(""awkward::ListArray_""); ; ak_array_out = ak.from_rdataframe(; data_frame,; columns=(""x"",),; ); assert ak_array_in.to_list() == ak_array_out[""x""].to_list(); ; #with pytest.raises(SystemError):; > data_frame.Snapshot(""ListArray"", filename, (""x"",)); E SystemError: ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()); E ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11602
https://github.com/root-project/root/issues/11602:1425,Testability,assert,assert,1425,"ption of what the wrong behavior is.; -->; The exception occurs with `pytest` running the test code:; ```python; ============================================================================ FAILURES =============================================================================; _______________________________________________________________ test_data_frame_vec_of_vec_of_real ________________________________________________________________; RuntimeWarning: awkward::ListArray_63uTHafmYE: base class awkward::ArrayView has no streamer or dictionary it will not be saved. The above exception was the direct cause of the following exception:. tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). def test_data_frame_vec_of_vec_of_real(tmp_path):; filename = os.path.join(tmp_path, ""test-listarray.root""); ; ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); ; data_frame = ak.to_rdataframe({""x"": ak_array_in}); ; assert data_frame.GetColumnType(""x"").startswith(""awkward::ListArray_""); ; ak_array_out = ak.from_rdataframe(; data_frame,; columns=(""x"",),; ); assert ak_array_in.to_list() == ak_array_out[""x""].to_list(); ; #with pytest.raises(SystemError):; > data_frame.Snapshot(""ListArray"", filename, (""x"",)); E SystemError: ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()); E ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11602
https://github.com/root-project/root/issues/11602:1568,Testability,assert,assert,1568,"==================================================== FAILURES =============================================================================; _______________________________________________________________ test_data_frame_vec_of_vec_of_real ________________________________________________________________; RuntimeWarning: awkward::ListArray_63uTHafmYE: base class awkward::ArrayView has no streamer or dictionary it will not be saved. The above exception was the direct cause of the following exception:. tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). def test_data_frame_vec_of_vec_of_real(tmp_path):; filename = os.path.join(tmp_path, ""test-listarray.root""); ; ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); ; data_frame = ak.to_rdataframe({""x"": ak_array_in}); ; assert data_frame.GetColumnType(""x"").startswith(""awkward::ListArray_""); ; ak_array_out = ak.from_rdataframe(; data_frame,; columns=(""x"",),; ); assert ak_array_in.to_list() == ak_array_out[""x""].to_list(); ; #with pytest.raises(SystemError):; > data_frame.Snapshot(""ListArray"", filename, (""x"",)); E SystemError: ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()); E ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()); E ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoop",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11602
https://github.com/root-project/root/issues/11602:3336,Testability,test,test-listarray,3336,"anager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()); E ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) returned a result with an exception set. ak_array_in = <Array [[[1.1], [2.2]], [[3.3], ...]] type='2 * var * var * float64'>; ak_array_out = <Array [{x: [[1.1], [2.2]]}, {...}] type='2 * {x: var * var * float64}'>; data_frame = <cppyy.gbl.ROOT.RDF.RInterface<ROOT::Detail::RDF::RLoopManager,void> object at 0x7f857a496dc0>; filename = '/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0/test-listarray.root'; tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). tests/test_1781-rdataframe-snapshot.py:53: SystemError; ```; while running the same code line by line in `Python` or in `lldb`:; ```python; >>> data_frame.Snapshot(""ListArray"", ""listarray.root"", (""x"",)); Error in <TStreamerInfo::Build>: awkward::ArrayView, discarding: long* ptrs_, no [dimension]. TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_zKlKkVLNo: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x1dc7b5090>; ```; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The first `TStreamerInfo::Build` error can be avoided by appending a commen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11602
https://github.com/root-project/root/issues/11602:3497,Testability,test,tests,3497,"F::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) returned a result with an exception set. ak_array_in = <Array [[[1.1], [2.2]], [[3.3], ...]] type='2 * var * var * float64'>; ak_array_out = <Array [{x: [[1.1], [2.2]]}, {...}] type='2 * {x: var * var * float64}'>; data_frame = <cppyy.gbl.ROOT.RDF.RInterface<ROOT::Detail::RDF::RLoopManager,void> object at 0x7f857a496dc0>; filename = '/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0/test-listarray.root'; tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). tests/test_1781-rdataframe-snapshot.py:53: SystemError; ```; while running the same code line by line in `Python` or in `lldb`:; ```python; >>> data_frame.Snapshot(""ListArray"", ""listarray.root"", (""x"",)); Error in <TStreamerInfo::Build>: awkward::ArrayView, discarding: long* ptrs_, no [dimension]. TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_zKlKkVLNo: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x1dc7b5090>; ```; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The first `TStreamerInfo::Build` error can be avoided by appending a comment `//!` to `long* ptrs_` line.; Would it be possible to propagate the `TStreamerInfo::Build:0: RuntimeWarning` message to the user?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11602
https://github.com/root-project/root/issues/11602:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The exception occurs with `pytest` running the test code:; ```python; ============================================================================ FAILURES =============================================================================; _______________________________________________________________ test_data_frame_vec_of_vec_of_real ________________________________________________________________; RuntimeWarning: awkward::ListArray_63uTHafmYE: base class awkward::ArrayView has no streamer or dictionary it will not be saved. The above exception was the direct cause of the following exception:. tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). def test_data_frame_vec_of_vec_of_real(tmp_path):; filename = os.path.join(tmp_path, ""test-listarray.root""); ; ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); ; data_frame = ak.to_rdataframe({""x"": ak_array_in}); ; assert data_frame.GetColumnType(""x"").startswith(""awkward::ListArray_""); ; ak_array_out = ak.from_rdataframe(; data_frame,; columns=(""x"",),; ); assert ak_array_in.to_list() == ak_array_out[""x""].to_list(); ; #with pytest.raises(SystemError):; > data_frame.Snapshot(""ListArray"", filename, (""x"",)); E SystemError: ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11602
https://github.com/root-project/root/issues/11602:4100,Usability,clear,clear,4100,"ype='2 * {x: var * var * float64}'>; data_frame = <cppyy.gbl.ROOT.RDF.RInterface<ROOT::Detail::RDF::RLoopManager,void> object at 0x7f857a496dc0>; filename = '/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0/test-listarray.root'; tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). tests/test_1781-rdataframe-snapshot.py:53: SystemError; ```; while running the same code line by line in `Python` or in `lldb`:; ```python; >>> data_frame.Snapshot(""ListArray"", ""listarray.root"", (""x"",)); Error in <TStreamerInfo::Build>: awkward::ArrayView, discarding: long* ptrs_, no [dimension]. TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_zKlKkVLNo: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x1dc7b5090>; ```; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The first `TStreamerInfo::Build` error can be avoided by appending a comment `//!` to `long* ptrs_` line.; Would it be possible to propagate the `TStreamerInfo::Build:0: RuntimeWarning` message to the user?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Unfortunately, it is not reproducible if the code is run line by line in `Python`:; ```python; % python ; Python 3.10.6 | packaged by conda-forge | (main, Aug 22 2022, 20:43:44) [Clang 13.0.1 ] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import awkward as ak; >>> import ROOT; >>> ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); >>> data_frame = a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11602
https://github.com/root-project/root/issues/11603:610,Availability,down,downloaded,610,"### Is your feature request related to a problem? Please describe.; 1. We would like to compile ROOT without triggering a 'call home' in the CMakeLists.txt, at https://github.com/root-project/root/blob/master/CMakeLists.txt#L124, so we can install ROOT on network-isolated nodes without incurring artificial build delays, or on network-connected nodes which we would prefer to remain private.; 2. When desired, we would like the ROOT internet connection check to work regardless of captive portals and other web screening portals, since currently those sites may appear as connected because the content of the downloaded file is not checked for accuracy.; 3. We would like to be notified in advance of the privacy policy that governs the data that is (inevitably) collected by the root.cern webservers without the user's consent or knowledge, since there exist user privacy expectations here. [GDPR principles](https://gdpr.eu/what-is-gdpr/) that may apply: lack of transparency, collection beyond the limited purpose, lack of data minimization, and probably some others (I am not a laywer). ### Describe the solution you'd like; The 'call home' in https://github.com/root-project/root/blob/master/CMakeLists.txt#L124 should default to off, and should only be called when explicitly requested by a user, and only when the features (`builtin_gsl` and `clad`) that depend on it are enabled. When it is used, the internet connection check should check a checksum of the downloaded file. ### Describe alternatives you've considered; Alternatively, the user can be alerted upon downloading the ROOT source code from any of its various locations that compiling this software may trigger data collection on the root.cern server, e.g. https://root.cern/install/build_from_source/, https://github.com/root-project/root/releases, etc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11603
https://github.com/root-project/root/issues/11603:1467,Availability,down,downloaded,1467,"### Is your feature request related to a problem? Please describe.; 1. We would like to compile ROOT without triggering a 'call home' in the CMakeLists.txt, at https://github.com/root-project/root/blob/master/CMakeLists.txt#L124, so we can install ROOT on network-isolated nodes without incurring artificial build delays, or on network-connected nodes which we would prefer to remain private.; 2. When desired, we would like the ROOT internet connection check to work regardless of captive portals and other web screening portals, since currently those sites may appear as connected because the content of the downloaded file is not checked for accuracy.; 3. We would like to be notified in advance of the privacy policy that governs the data that is (inevitably) collected by the root.cern webservers without the user's consent or knowledge, since there exist user privacy expectations here. [GDPR principles](https://gdpr.eu/what-is-gdpr/) that may apply: lack of transparency, collection beyond the limited purpose, lack of data minimization, and probably some others (I am not a laywer). ### Describe the solution you'd like; The 'call home' in https://github.com/root-project/root/blob/master/CMakeLists.txt#L124 should default to off, and should only be called when explicitly requested by a user, and only when the features (`builtin_gsl` and `clad`) that depend on it are enabled. When it is used, the internet connection check should check a checksum of the downloaded file. ### Describe alternatives you've considered; Alternatively, the user can be alerted upon downloading the ROOT source code from any of its various locations that compiling this software may trigger data collection on the root.cern server, e.g. https://root.cern/install/build_from_source/, https://github.com/root-project/root/releases, etc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11603
https://github.com/root-project/root/issues/11603:1573,Availability,down,downloading,1573,"### Is your feature request related to a problem? Please describe.; 1. We would like to compile ROOT without triggering a 'call home' in the CMakeLists.txt, at https://github.com/root-project/root/blob/master/CMakeLists.txt#L124, so we can install ROOT on network-isolated nodes without incurring artificial build delays, or on network-connected nodes which we would prefer to remain private.; 2. When desired, we would like the ROOT internet connection check to work regardless of captive portals and other web screening portals, since currently those sites may appear as connected because the content of the downloaded file is not checked for accuracy.; 3. We would like to be notified in advance of the privacy policy that governs the data that is (inevitably) collected by the root.cern webservers without the user's consent or knowledge, since there exist user privacy expectations here. [GDPR principles](https://gdpr.eu/what-is-gdpr/) that may apply: lack of transparency, collection beyond the limited purpose, lack of data minimization, and probably some others (I am not a laywer). ### Describe the solution you'd like; The 'call home' in https://github.com/root-project/root/blob/master/CMakeLists.txt#L124 should default to off, and should only be called when explicitly requested by a user, and only when the features (`builtin_gsl` and `clad`) that depend on it are enabled. When it is used, the internet connection check should check a checksum of the downloaded file. ### Describe alternatives you've considered; Alternatively, the user can be alerted upon downloading the ROOT source code from any of its various locations that compiling this software may trigger data collection on the root.cern server, e.g. https://root.cern/install/build_from_source/, https://github.com/root-project/root/releases, etc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11603
https://github.com/root-project/root/issues/11603:240,Deployability,install,install,240,"### Is your feature request related to a problem? Please describe.; 1. We would like to compile ROOT without triggering a 'call home' in the CMakeLists.txt, at https://github.com/root-project/root/blob/master/CMakeLists.txt#L124, so we can install ROOT on network-isolated nodes without incurring artificial build delays, or on network-connected nodes which we would prefer to remain private.; 2. When desired, we would like the ROOT internet connection check to work regardless of captive portals and other web screening portals, since currently those sites may appear as connected because the content of the downloaded file is not checked for accuracy.; 3. We would like to be notified in advance of the privacy policy that governs the data that is (inevitably) collected by the root.cern webservers without the user's consent or knowledge, since there exist user privacy expectations here. [GDPR principles](https://gdpr.eu/what-is-gdpr/) that may apply: lack of transparency, collection beyond the limited purpose, lack of data minimization, and probably some others (I am not a laywer). ### Describe the solution you'd like; The 'call home' in https://github.com/root-project/root/blob/master/CMakeLists.txt#L124 should default to off, and should only be called when explicitly requested by a user, and only when the features (`builtin_gsl` and `clad`) that depend on it are enabled. When it is used, the internet connection check should check a checksum of the downloaded file. ### Describe alternatives you've considered; Alternatively, the user can be alerted upon downloading the ROOT source code from any of its various locations that compiling this software may trigger data collection on the root.cern server, e.g. https://root.cern/install/build_from_source/, https://github.com/root-project/root/releases, etc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11603
https://github.com/root-project/root/issues/11603:1745,Deployability,install,install,1745,"### Is your feature request related to a problem? Please describe.; 1. We would like to compile ROOT without triggering a 'call home' in the CMakeLists.txt, at https://github.com/root-project/root/blob/master/CMakeLists.txt#L124, so we can install ROOT on network-isolated nodes without incurring artificial build delays, or on network-connected nodes which we would prefer to remain private.; 2. When desired, we would like the ROOT internet connection check to work regardless of captive portals and other web screening portals, since currently those sites may appear as connected because the content of the downloaded file is not checked for accuracy.; 3. We would like to be notified in advance of the privacy policy that governs the data that is (inevitably) collected by the root.cern webservers without the user's consent or knowledge, since there exist user privacy expectations here. [GDPR principles](https://gdpr.eu/what-is-gdpr/) that may apply: lack of transparency, collection beyond the limited purpose, lack of data minimization, and probably some others (I am not a laywer). ### Describe the solution you'd like; The 'call home' in https://github.com/root-project/root/blob/master/CMakeLists.txt#L124 should default to off, and should only be called when explicitly requested by a user, and only when the features (`builtin_gsl` and `clad`) that depend on it are enabled. When it is used, the internet connection check should check a checksum of the downloaded file. ### Describe alternatives you've considered; Alternatively, the user can be alerted upon downloading the ROOT source code from any of its various locations that compiling this software may trigger data collection on the root.cern server, e.g. https://root.cern/install/build_from_source/, https://github.com/root-project/root/releases, etc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11603
https://github.com/root-project/root/issues/11603:1810,Deployability,release,releases,1810,"### Is your feature request related to a problem? Please describe.; 1. We would like to compile ROOT without triggering a 'call home' in the CMakeLists.txt, at https://github.com/root-project/root/blob/master/CMakeLists.txt#L124, so we can install ROOT on network-isolated nodes without incurring artificial build delays, or on network-connected nodes which we would prefer to remain private.; 2. When desired, we would like the ROOT internet connection check to work regardless of captive portals and other web screening portals, since currently those sites may appear as connected because the content of the downloaded file is not checked for accuracy.; 3. We would like to be notified in advance of the privacy policy that governs the data that is (inevitably) collected by the root.cern webservers without the user's consent or knowledge, since there exist user privacy expectations here. [GDPR principles](https://gdpr.eu/what-is-gdpr/) that may apply: lack of transparency, collection beyond the limited purpose, lack of data minimization, and probably some others (I am not a laywer). ### Describe the solution you'd like; The 'call home' in https://github.com/root-project/root/blob/master/CMakeLists.txt#L124 should default to off, and should only be called when explicitly requested by a user, and only when the features (`builtin_gsl` and `clad`) that depend on it are enabled. When it is used, the internet connection check should check a checksum of the downloaded file. ### Describe alternatives you've considered; Alternatively, the user can be alerted upon downloading the ROOT source code from any of its various locations that compiling this software may trigger data collection on the root.cern server, e.g. https://root.cern/install/build_from_source/, https://github.com/root-project/root/releases, etc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11603
https://github.com/root-project/root/issues/11603:1363,Integrability,depend,depend,1363,"### Is your feature request related to a problem? Please describe.; 1. We would like to compile ROOT without triggering a 'call home' in the CMakeLists.txt, at https://github.com/root-project/root/blob/master/CMakeLists.txt#L124, so we can install ROOT on network-isolated nodes without incurring artificial build delays, or on network-connected nodes which we would prefer to remain private.; 2. When desired, we would like the ROOT internet connection check to work regardless of captive portals and other web screening portals, since currently those sites may appear as connected because the content of the downloaded file is not checked for accuracy.; 3. We would like to be notified in advance of the privacy policy that governs the data that is (inevitably) collected by the root.cern webservers without the user's consent or knowledge, since there exist user privacy expectations here. [GDPR principles](https://gdpr.eu/what-is-gdpr/) that may apply: lack of transparency, collection beyond the limited purpose, lack of data minimization, and probably some others (I am not a laywer). ### Describe the solution you'd like; The 'call home' in https://github.com/root-project/root/blob/master/CMakeLists.txt#L124 should default to off, and should only be called when explicitly requested by a user, and only when the features (`builtin_gsl` and `clad`) that depend on it are enabled. When it is used, the internet connection check should check a checksum of the downloaded file. ### Describe alternatives you've considered; Alternatively, the user can be alerted upon downloading the ROOT source code from any of its various locations that compiling this software may trigger data collection on the root.cern server, e.g. https://root.cern/install/build_from_source/, https://github.com/root-project/root/releases, etc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11603
https://github.com/root-project/root/issues/11603:1451,Security,checksum,checksum,1451,"### Is your feature request related to a problem? Please describe.; 1. We would like to compile ROOT without triggering a 'call home' in the CMakeLists.txt, at https://github.com/root-project/root/blob/master/CMakeLists.txt#L124, so we can install ROOT on network-isolated nodes without incurring artificial build delays, or on network-connected nodes which we would prefer to remain private.; 2. When desired, we would like the ROOT internet connection check to work regardless of captive portals and other web screening portals, since currently those sites may appear as connected because the content of the downloaded file is not checked for accuracy.; 3. We would like to be notified in advance of the privacy policy that governs the data that is (inevitably) collected by the root.cern webservers without the user's consent or knowledge, since there exist user privacy expectations here. [GDPR principles](https://gdpr.eu/what-is-gdpr/) that may apply: lack of transparency, collection beyond the limited purpose, lack of data minimization, and probably some others (I am not a laywer). ### Describe the solution you'd like; The 'call home' in https://github.com/root-project/root/blob/master/CMakeLists.txt#L124 should default to off, and should only be called when explicitly requested by a user, and only when the features (`builtin_gsl` and `clad`) that depend on it are enabled. When it is used, the internet connection check should check a checksum of the downloaded file. ### Describe alternatives you've considered; Alternatively, the user can be alerted upon downloading the ROOT source code from any of its various locations that compiling this software may trigger data collection on the root.cern server, e.g. https://root.cern/install/build_from_source/, https://github.com/root-project/root/releases, etc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11603
https://github.com/root-project/root/issues/11605:155,Performance,perform,performance-,155,As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157773/console which the result of; ```; @phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On -Droofit=OFF; ```. Several tutorials fails because they can load the intentionally non existent roofit libraries. ```; 15:15:19 The following tests FAILED:; 15:15:19 	909 - tutorial-roostats-FourBinInstructional-py (Failed); 15:15:19 	910 - tutorial-roostats-IntervalExamples-py (Failed); 15:15:19 	911 - tutorial-roostats-MultivariateGaussianTest-py (Failed); 15:15:19 	912 - tutorial-roostats-Zbi_Zgamma-py (Failed); 15:15:19 	913 - tutorial-roostats-rs101_limitexample-py (Failed); 15:15:19 	914 - tutorial-roostats-rs401c_FeldmanCousins-py (Failed); 15:15:19 	915 - tutorial-roostats-rs601_HLFactoryexample-py (Failed); 15:15:19 	916 - tutorial-roostats-rs701_BayesianCalculator-py (Failed); 15:15:19 	917 - tutorial-roostats-rs_bernsteinCorrection-py (Failed); 15:15:19 	918 - tutorial-roostats-rs_numbercountingutils-py (Failed); 15:15:19 	1193 - roottest-python-pickle-write (Failed); 15:15:19 	1194 - roottest-python-pickle-read (Failed); 15:15:19 	1195 - roottest-python-pythonizations-pythonizations (Failed); 15:15:19 	1197 - roottest-python-regression-regression (Failed); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11605
https://github.com/root-project/root/issues/11605:293,Performance,load,load,293,As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157773/console which the result of; ```; @phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On -Droofit=OFF; ```. Several tutorials fails because they can load the intentionally non existent roofit libraries. ```; 15:15:19 The following tests FAILED:; 15:15:19 	909 - tutorial-roostats-FourBinInstructional-py (Failed); 15:15:19 	910 - tutorial-roostats-IntervalExamples-py (Failed); 15:15:19 	911 - tutorial-roostats-MultivariateGaussianTest-py (Failed); 15:15:19 	912 - tutorial-roostats-Zbi_Zgamma-py (Failed); 15:15:19 	913 - tutorial-roostats-rs101_limitexample-py (Failed); 15:15:19 	914 - tutorial-roostats-rs401c_FeldmanCousins-py (Failed); 15:15:19 	915 - tutorial-roostats-rs601_HLFactoryexample-py (Failed); 15:15:19 	916 - tutorial-roostats-rs701_BayesianCalculator-py (Failed); 15:15:19 	917 - tutorial-roostats-rs_bernsteinCorrection-py (Failed); 15:15:19 	918 - tutorial-roostats-rs_numbercountingutils-py (Failed); 15:15:19 	1193 - roottest-python-pickle-write (Failed); 15:15:19 	1194 - roottest-python-pickle-read (Failed); 15:15:19 	1195 - roottest-python-pythonizations-pythonizations (Failed); 15:15:19 	1197 - roottest-python-regression-regression (Failed); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11605
https://github.com/root-project/root/issues/11605:375,Testability,test,tests,375,As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157773/console which the result of; ```; @phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On -Droofit=OFF; ```. Several tutorials fails because they can load the intentionally non existent roofit libraries. ```; 15:15:19 The following tests FAILED:; 15:15:19 	909 - tutorial-roostats-FourBinInstructional-py (Failed); 15:15:19 	910 - tutorial-roostats-IntervalExamples-py (Failed); 15:15:19 	911 - tutorial-roostats-MultivariateGaussianTest-py (Failed); 15:15:19 	912 - tutorial-roostats-Zbi_Zgamma-py (Failed); 15:15:19 	913 - tutorial-roostats-rs101_limitexample-py (Failed); 15:15:19 	914 - tutorial-roostats-rs401c_FeldmanCousins-py (Failed); 15:15:19 	915 - tutorial-roostats-rs601_HLFactoryexample-py (Failed); 15:15:19 	916 - tutorial-roostats-rs701_BayesianCalculator-py (Failed); 15:15:19 	917 - tutorial-roostats-rs_bernsteinCorrection-py (Failed); 15:15:19 	918 - tutorial-roostats-rs_numbercountingutils-py (Failed); 15:15:19 	1193 - roottest-python-pickle-write (Failed); 15:15:19 	1194 - roottest-python-pickle-read (Failed); 15:15:19 	1195 - roottest-python-pythonizations-pythonizations (Failed); 15:15:19 	1197 - roottest-python-regression-regression (Failed); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11605
https://github.com/root-project/root/pull/11606:874,Availability,down,downstream,874,"The new BatchMode was so far very hacky in the way it dealt with constraint terms, there were two places where it tried to consider them but they both failed in different scenarios:. * hack in `RooProdPdf::computeBatch()`, where PDFs with a span of size one in the datamap were ignored (failed if there was only one bin in the dataset because all PDFs were ignored then); * hack in `NormalizationHelpers`, where constrained RooProdPdfs were assumed to have only one factor that is a constraint. This was only the case in HistFactory and failed in other cases, like in `stressRooStats` and the `ATALS` Higgs combination fit. The new implementation in this PR follows a safer approach: when the constraints are obtained from the RooProdPdf via `getConstraints`, a new option is added to remove the obtained constraints from the RooProdPdf. This way, no other code is required downstream to deal with constraints. This means, to avoid mutating the computation graph, the constraint sum also needs to be extracted **after** the PDF is cloned. All changes in this PR follow from that line of thought and are explained more in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11606
https://github.com/root-project/root/pull/11606:668,Safety,safe,safer,668,"The new BatchMode was so far very hacky in the way it dealt with constraint terms, there were two places where it tried to consider them but they both failed in different scenarios:. * hack in `RooProdPdf::computeBatch()`, where PDFs with a span of size one in the datamap were ignored (failed if there was only one bin in the dataset because all PDFs were ignored then); * hack in `NormalizationHelpers`, where constrained RooProdPdfs were assumed to have only one factor that is a constraint. This was only the case in HistFactory and failed in other cases, like in `stressRooStats` and the `ATALS` Higgs combination fit. The new implementation in this PR follows a safer approach: when the constraints are obtained from the RooProdPdf via `getConstraints`, a new option is added to remove the obtained constraints from the RooProdPdf. This way, no other code is required downstream to deal with constraints. This means, to avoid mutating the computation graph, the constraint sum also needs to be extracted **after** the PDF is cloned. All changes in this PR follow from that line of thought and are explained more in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11606
https://github.com/root-project/root/pull/11606:926,Safety,avoid,avoid,926,"The new BatchMode was so far very hacky in the way it dealt with constraint terms, there were two places where it tried to consider them but they both failed in different scenarios:. * hack in `RooProdPdf::computeBatch()`, where PDFs with a span of size one in the datamap were ignored (failed if there was only one bin in the dataset because all PDFs were ignored then); * hack in `NormalizationHelpers`, where constrained RooProdPdfs were assumed to have only one factor that is a constraint. This was only the case in HistFactory and failed in other cases, like in `stressRooStats` and the `ATALS` Higgs combination fit. The new implementation in this PR follows a safer approach: when the constraints are obtained from the RooProdPdf via `getConstraints`, a new option is added to remove the obtained constraints from the RooProdPdf. This way, no other code is required downstream to deal with constraints. This means, to avoid mutating the computation graph, the constraint sum also needs to be extracted **after** the PDF is cloned. All changes in this PR follow from that line of thought and are explained more in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11606
https://github.com/root-project/root/pull/11608:112,Deployability,update,updated,112,# This Pull request: Adds the Expand ONNX Operator in SOFIE. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11608
https://github.com/root-project/root/pull/11608:82,Testability,test,tested,82,# This Pull request: Adds the Expand ONNX Operator in SOFIE. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11608
https://github.com/root-project/root/pull/11609:19,Testability,test,tests,19,"Veto also tutorial tests of RooStats and HistFactory if ROOT was built without RooFit. Also removes the `fit/RooFitdemo.C` tutorial from the veto list, as this tutorial doesn't exist anymore. Partially closes #11605.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11609
https://github.com/root-project/root/pull/11610:44,Testability,test,tests,44,"This is more practical, because most RooFit tests are already here and and different from when these tests were in `roottest`, it's also to exclude them if ROOT is not built with RooFit enabled. Technically independent of https://github.com/root-project/roottest/pull/909, but they go together. Closes https://github.com/root-project/root/issues/11605.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11610
https://github.com/root-project/root/pull/11610:101,Testability,test,tests,101,"This is more practical, because most RooFit tests are already here and and different from when these tests were in `roottest`, it's also to exclude them if ROOT is not built with RooFit enabled. Technically independent of https://github.com/root-project/roottest/pull/909, but they go together. Closes https://github.com/root-project/root/issues/11605.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11610
https://github.com/root-project/root/issues/11612:1241,Deployability,configurat,configuration,1241,"er/CMakeLists.txt` and runtime searches in `interpreter/cling/lib/Interpreter/CIFactory.cpp`. Below I'm listing a number of things I noticed, and I think it would be worth it to clean up this business:. - [ ] Let's start with the obvious: `CLING_CXX_PATH` and `CLING_CXX_HEADERS` are declared as `option`s in `interpreter/cling/lib/Interpreter/CMakeLists.txt`. This gives them a type of `BOOL` instead of `STRING` (or maybe `FILEPATH` for `CLING_CXX_PATH`?).; - [ ] If these variables are not set by the user, the build system starts to make some guesses. These choices are not `FORCE`d back into the `CACHE`, so it will be re-computed on every CMake invocation.; - [ ] The code for determining `CLING_CXX_PATH` has a large section dealing with `ccache` and `distcc`, which can only be taken if users set the environment variable `CXX=""ccache g++""`. Since CMake 3.4, it is recommended to instead use `CMAKE_CXX_COMPILER_LAUNCHER=ccache`, or ROOT's `ccache=ON`, so this may be obsolete?; - [ ] The header lookup is inconsistent between the build system and the `CIFactory`: The messages during configuration suggest that the order is; 1. Determined directories of C++ headers, or if not found; 2. Invocation of the compiler's full path, or as a fallback; 3. Invocation of the compiler's relative path. I think this matches the initial implementation, but it's not true anymore since commit afabc3b63885427251fd69b4aeda887bae35a289 switched to asking the compiler in the `PATH` first, to address a problem report from CMS.; - [ ] It also appears that the default guess from the build system is to *either* set the compiler's full path *or* its relative path. This is potentially problematic because changing the `PATH` could make the interpreter pick up a different compiler, even though it could still ask the existing full path. It's also inconsistent with respect to the previous point because a compiler in `PATH` takes precedence over the directories determined at build time, while a compiler out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11612
https://github.com/root-project/root/issues/11612:1225,Integrability,message,messages,1225,"er/CMakeLists.txt` and runtime searches in `interpreter/cling/lib/Interpreter/CIFactory.cpp`. Below I'm listing a number of things I noticed, and I think it would be worth it to clean up this business:. - [ ] Let's start with the obvious: `CLING_CXX_PATH` and `CLING_CXX_HEADERS` are declared as `option`s in `interpreter/cling/lib/Interpreter/CMakeLists.txt`. This gives them a type of `BOOL` instead of `STRING` (or maybe `FILEPATH` for `CLING_CXX_PATH`?).; - [ ] If these variables are not set by the user, the build system starts to make some guesses. These choices are not `FORCE`d back into the `CACHE`, so it will be re-computed on every CMake invocation.; - [ ] The code for determining `CLING_CXX_PATH` has a large section dealing with `ccache` and `distcc`, which can only be taken if users set the environment variable `CXX=""ccache g++""`. Since CMake 3.4, it is recommended to instead use `CMAKE_CXX_COMPILER_LAUNCHER=ccache`, or ROOT's `ccache=ON`, so this may be obsolete?; - [ ] The header lookup is inconsistent between the build system and the `CIFactory`: The messages during configuration suggest that the order is; 1. Determined directories of C++ headers, or if not found; 2. Invocation of the compiler's full path, or as a fallback; 3. Invocation of the compiler's relative path. I think this matches the initial implementation, but it's not true anymore since commit afabc3b63885427251fd69b4aeda887bae35a289 switched to asking the compiler in the `PATH` first, to address a problem report from CMS.; - [ ] It also appears that the default guess from the build system is to *either* set the compiler's full path *or* its relative path. This is potentially problematic because changing the `PATH` could make the interpreter pick up a different compiler, even though it could still ask the existing full path. It's also inconsistent with respect to the previous point because a compiler in `PATH` takes precedence over the directories determined at build time, while a compiler out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11612
https://github.com/root-project/root/issues/11612:623,Modifiability,variab,variables,623,"Clang's search for the standard C++ headers is complex, up to messy. It is a combination of build-time decisions in `interpreter/cling/lib/Interpreter/CMakeLists.txt` and runtime searches in `interpreter/cling/lib/Interpreter/CIFactory.cpp`. Below I'm listing a number of things I noticed, and I think it would be worth it to clean up this business:. - [ ] Let's start with the obvious: `CLING_CXX_PATH` and `CLING_CXX_HEADERS` are declared as `option`s in `interpreter/cling/lib/Interpreter/CMakeLists.txt`. This gives them a type of `BOOL` instead of `STRING` (or maybe `FILEPATH` for `CLING_CXX_PATH`?).; - [ ] If these variables are not set by the user, the build system starts to make some guesses. These choices are not `FORCE`d back into the `CACHE`, so it will be re-computed on every CMake invocation.; - [ ] The code for determining `CLING_CXX_PATH` has a large section dealing with `ccache` and `distcc`, which can only be taken if users set the environment variable `CXX=""ccache g++""`. Since CMake 3.4, it is recommended to instead use `CMAKE_CXX_COMPILER_LAUNCHER=ccache`, or ROOT's `ccache=ON`, so this may be obsolete?; - [ ] The header lookup is inconsistent between the build system and the `CIFactory`: The messages during configuration suggest that the order is; 1. Determined directories of C++ headers, or if not found; 2. Invocation of the compiler's full path, or as a fallback; 3. Invocation of the compiler's relative path. I think this matches the initial implementation, but it's not true anymore since commit afabc3b63885427251fd69b4aeda887bae35a289 switched to asking the compiler in the `PATH` first, to address a problem report from CMS.; - [ ] It also appears that the default guess from the build system is to *either* set the compiler's full path *or* its relative path. This is potentially problematic because changing the `PATH` could make the interpreter pick up a different compiler, even though it could still ask the existing full path. It's also inconsistent w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11612
https://github.com/root-project/root/issues/11612:969,Modifiability,variab,variable,969,"Clang's search for the standard C++ headers is complex, up to messy. It is a combination of build-time decisions in `interpreter/cling/lib/Interpreter/CMakeLists.txt` and runtime searches in `interpreter/cling/lib/Interpreter/CIFactory.cpp`. Below I'm listing a number of things I noticed, and I think it would be worth it to clean up this business:. - [ ] Let's start with the obvious: `CLING_CXX_PATH` and `CLING_CXX_HEADERS` are declared as `option`s in `interpreter/cling/lib/Interpreter/CMakeLists.txt`. This gives them a type of `BOOL` instead of `STRING` (or maybe `FILEPATH` for `CLING_CXX_PATH`?).; - [ ] If these variables are not set by the user, the build system starts to make some guesses. These choices are not `FORCE`d back into the `CACHE`, so it will be re-computed on every CMake invocation.; - [ ] The code for determining `CLING_CXX_PATH` has a large section dealing with `ccache` and `distcc`, which can only be taken if users set the environment variable `CXX=""ccache g++""`. Since CMake 3.4, it is recommended to instead use `CMAKE_CXX_COMPILER_LAUNCHER=ccache`, or ROOT's `ccache=ON`, so this may be obsolete?; - [ ] The header lookup is inconsistent between the build system and the `CIFactory`: The messages during configuration suggest that the order is; 1. Determined directories of C++ headers, or if not found; 2. Invocation of the compiler's full path, or as a fallback; 3. Invocation of the compiler's relative path. I think this matches the initial implementation, but it's not true anymore since commit afabc3b63885427251fd69b4aeda887bae35a289 switched to asking the compiler in the `PATH` first, to address a problem report from CMS.; - [ ] It also appears that the default guess from the build system is to *either* set the compiler's full path *or* its relative path. This is potentially problematic because changing the `PATH` could make the interpreter pick up a different compiler, even though it could still ask the existing full path. It's also inconsistent w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11612
https://github.com/root-project/root/issues/11612:1241,Modifiability,config,configuration,1241,"er/CMakeLists.txt` and runtime searches in `interpreter/cling/lib/Interpreter/CIFactory.cpp`. Below I'm listing a number of things I noticed, and I think it would be worth it to clean up this business:. - [ ] Let's start with the obvious: `CLING_CXX_PATH` and `CLING_CXX_HEADERS` are declared as `option`s in `interpreter/cling/lib/Interpreter/CMakeLists.txt`. This gives them a type of `BOOL` instead of `STRING` (or maybe `FILEPATH` for `CLING_CXX_PATH`?).; - [ ] If these variables are not set by the user, the build system starts to make some guesses. These choices are not `FORCE`d back into the `CACHE`, so it will be re-computed on every CMake invocation.; - [ ] The code for determining `CLING_CXX_PATH` has a large section dealing with `ccache` and `distcc`, which can only be taken if users set the environment variable `CXX=""ccache g++""`. Since CMake 3.4, it is recommended to instead use `CMAKE_CXX_COMPILER_LAUNCHER=ccache`, or ROOT's `ccache=ON`, so this may be obsolete?; - [ ] The header lookup is inconsistent between the build system and the `CIFactory`: The messages during configuration suggest that the order is; 1. Determined directories of C++ headers, or if not found; 2. Invocation of the compiler's full path, or as a fallback; 3. Invocation of the compiler's relative path. I think this matches the initial implementation, but it's not true anymore since commit afabc3b63885427251fd69b4aeda887bae35a289 switched to asking the compiler in the `PATH` first, to address a problem report from CMS.; - [ ] It also appears that the default guess from the build system is to *either* set the compiler's full path *or* its relative path. This is potentially problematic because changing the `PATH` could make the interpreter pick up a different compiler, even though it could still ask the existing full path. It's also inconsistent with respect to the previous point because a compiler in `PATH` takes precedence over the directories determined at build time, while a compiler out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11612
https://github.com/root-project/root/issues/11612:750,Performance,CACHE,CACHE,750,"Clang's search for the standard C++ headers is complex, up to messy. It is a combination of build-time decisions in `interpreter/cling/lib/Interpreter/CMakeLists.txt` and runtime searches in `interpreter/cling/lib/Interpreter/CIFactory.cpp`. Below I'm listing a number of things I noticed, and I think it would be worth it to clean up this business:. - [ ] Let's start with the obvious: `CLING_CXX_PATH` and `CLING_CXX_HEADERS` are declared as `option`s in `interpreter/cling/lib/Interpreter/CMakeLists.txt`. This gives them a type of `BOOL` instead of `STRING` (or maybe `FILEPATH` for `CLING_CXX_PATH`?).; - [ ] If these variables are not set by the user, the build system starts to make some guesses. These choices are not `FORCE`d back into the `CACHE`, so it will be re-computed on every CMake invocation.; - [ ] The code for determining `CLING_CXX_PATH` has a large section dealing with `ccache` and `distcc`, which can only be taken if users set the environment variable `CXX=""ccache g++""`. Since CMake 3.4, it is recommended to instead use `CMAKE_CXX_COMPILER_LAUNCHER=ccache`, or ROOT's `ccache=ON`, so this may be obsolete?; - [ ] The header lookup is inconsistent between the build system and the `CIFactory`: The messages during configuration suggest that the order is; 1. Determined directories of C++ headers, or if not found; 2. Invocation of the compiler's full path, or as a fallback; 3. Invocation of the compiler's relative path. I think this matches the initial implementation, but it's not true anymore since commit afabc3b63885427251fd69b4aeda887bae35a289 switched to asking the compiler in the `PATH` first, to address a problem report from CMS.; - [ ] It also appears that the default guess from the build system is to *either* set the compiler's full path *or* its relative path. This is potentially problematic because changing the `PATH` could make the interpreter pick up a different compiler, even though it could still ask the existing full path. It's also inconsistent w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11612
https://github.com/root-project/root/pull/11613:24,Deployability,Update,Update,24,# This Pull request:. * Update XRootD builtin from v5.5.0 to v5.5.1; - c.f. https://github.com/xrootd/xrootd/releases/tag/v5.5.1; * Follow up to PR #11328; * Requires https://sft.its.cern.ch/jira/browse/SPI-2231. ## Changes or fixes:. * Update XRootD builtin from v5.5.0 to v5.5.1. ## Checklist:. - [x] tested changes locally. I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/75 for a source build with effectively this change). - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11613
https://github.com/root-project/root/pull/11613:109,Deployability,release,releases,109,# This Pull request:. * Update XRootD builtin from v5.5.0 to v5.5.1; - c.f. https://github.com/xrootd/xrootd/releases/tag/v5.5.1; * Follow up to PR #11328; * Requires https://sft.its.cern.ch/jira/browse/SPI-2231. ## Changes or fixes:. * Update XRootD builtin from v5.5.0 to v5.5.1. ## Checklist:. - [x] tested changes locally. I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/75 for a source build with effectively this change). - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11613
https://github.com/root-project/root/pull/11613:237,Deployability,Update,Update,237,# This Pull request:. * Update XRootD builtin from v5.5.0 to v5.5.1; - c.f. https://github.com/xrootd/xrootd/releases/tag/v5.5.1; * Follow up to PR #11328; * Requires https://sft.its.cern.ch/jira/browse/SPI-2231. ## Changes or fixes:. * Update XRootD builtin from v5.5.0 to v5.5.1. ## Checklist:. - [x] tested changes locally. I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/75 for a source build with effectively this change). - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11613
https://github.com/root-project/root/pull/11613:495,Deployability,update,updated,495,# This Pull request:. * Update XRootD builtin from v5.5.0 to v5.5.1; - c.f. https://github.com/xrootd/xrootd/releases/tag/v5.5.1; * Follow up to PR #11328; * Requires https://sft.its.cern.ch/jira/browse/SPI-2231. ## Changes or fixes:. * Update XRootD builtin from v5.5.0 to v5.5.1. ## Checklist:. - [x] tested changes locally. I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/75 for a source build with effectively this change). - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11613
https://github.com/root-project/root/pull/11613:303,Testability,test,tested,303,# This Pull request:. * Update XRootD builtin from v5.5.0 to v5.5.1; - c.f. https://github.com/xrootd/xrootd/releases/tag/v5.5.1; * Follow up to PR #11328; * Requires https://sft.its.cern.ch/jira/browse/SPI-2231. ## Changes or fixes:. * Update XRootD builtin from v5.5.0 to v5.5.1. ## Checklist:. - [x] tested changes locally. I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/75 for a source build with effectively this change). - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11613
https://github.com/root-project/root/pull/11614:249,Availability,down,down,249,"# This Pull request:. ## Changes or fixes:. Currently, building the documentation issues 3700 warnings, see https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/lastBuild/parsed_console/. With the current hack, we would go down to just 2700. By the way, it would be nice to fine-tune the parser: see https://github.com/root-project/jenkins-pipelines/issues/10. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). See related discussion https://github.com/doxygen/doxygen/issues/9044",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11614
https://github.com/root-project/root/pull/11614:366,Deployability,pipeline,pipelines,366,"# This Pull request:. ## Changes or fixes:. Currently, building the documentation issues 3700 warnings, see https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/lastBuild/parsed_console/. With the current hack, we would go down to just 2700. By the way, it would be nice to fine-tune the parser: see https://github.com/root-project/jenkins-pipelines/issues/10. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). See related discussion https://github.com/doxygen/doxygen/issues/9044",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11614
https://github.com/root-project/root/pull/11614:438,Deployability,update,updated,438,"# This Pull request:. ## Changes or fixes:. Currently, building the documentation issues 3700 warnings, see https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/lastBuild/parsed_console/. With the current hack, we would go down to just 2700. By the way, it would be nice to fine-tune the parser: see https://github.com/root-project/jenkins-pipelines/issues/10. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). See related discussion https://github.com/doxygen/doxygen/issues/9044",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11614
https://github.com/root-project/root/pull/11614:305,Performance,tune,tune,305,"# This Pull request:. ## Changes or fixes:. Currently, building the documentation issues 3700 warnings, see https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/lastBuild/parsed_console/. With the current hack, we would go down to just 2700. By the way, it would be nice to fine-tune the parser: see https://github.com/root-project/jenkins-pipelines/issues/10. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). See related discussion https://github.com/doxygen/doxygen/issues/9044",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11614
https://github.com/root-project/root/pull/11614:408,Testability,test,tested,408,"# This Pull request:. ## Changes or fixes:. Currently, building the documentation issues 3700 warnings, see https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/lastBuild/parsed_console/. With the current hack, we would go down to just 2700. By the way, it would be nice to fine-tune the parser: see https://github.com/root-project/jenkins-pipelines/issues/10. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). See related discussion https://github.com/doxygen/doxygen/issues/9044",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11614
https://github.com/root-project/root/pull/11617:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11617
https://github.com/root-project/root/pull/11617:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11617
https://github.com/root-project/root/pull/11618:829,Performance,load,loading,829,"1. Get information for client (`Browsable::RItem` instance) directly from `Browsable::RElement`. This unifies handling of different classes in browser; before one uses extra logic to guess class functionality without creating of dedicated `Browsable::RElement` instance; 2. Fix problem with `TObject`-derived classes where `TObject` is not direct parent - like `TQClass`. Improve browsing of top ROOT folder.; 3. Provide in `RBrowser` size/modification time information for `TKey`/`TFile` instances; 4. Significantly improve `RTreeViewer` functionality. Better handle special branches like `@size`. Double-click on branch element either involves `TTree::Draw` or add proposed expression to tree viewer. Handle special symbols in branch names like `\` or `#`.; 5. Fix several bugs in usage of `GED` inside canvas. After JSROOT v7 loading of custom code is more tricky, therefore it is better to load it directly from JSROOT components - not try to select some parts from outside.; 6. Fix several bugs in JSROOT (see changelog)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11618
https://github.com/root-project/root/pull/11618:894,Performance,load,load,894,"1. Get information for client (`Browsable::RItem` instance) directly from `Browsable::RElement`. This unifies handling of different classes in browser; before one uses extra logic to guess class functionality without creating of dedicated `Browsable::RElement` instance; 2. Fix problem with `TObject`-derived classes where `TObject` is not direct parent - like `TQClass`. Improve browsing of top ROOT folder.; 3. Provide in `RBrowser` size/modification time information for `TKey`/`TFile` instances; 4. Significantly improve `RTreeViewer` functionality. Better handle special branches like `@size`. Double-click on branch element either involves `TTree::Draw` or add proposed expression to tree viewer. Handle special symbols in branch names like `\` or `#`.; 5. Fix several bugs in usage of `GED` inside canvas. After JSROOT v7 loading of custom code is more tricky, therefore it is better to load it directly from JSROOT components - not try to select some parts from outside.; 6. Fix several bugs in JSROOT (see changelog)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11618
https://github.com/root-project/root/pull/11618:174,Testability,log,logic,174,"1. Get information for client (`Browsable::RItem` instance) directly from `Browsable::RElement`. This unifies handling of different classes in browser; before one uses extra logic to guess class functionality without creating of dedicated `Browsable::RElement` instance; 2. Fix problem with `TObject`-derived classes where `TObject` is not direct parent - like `TQClass`. Improve browsing of top ROOT folder.; 3. Provide in `RBrowser` size/modification time information for `TKey`/`TFile` instances; 4. Significantly improve `RTreeViewer` functionality. Better handle special branches like `@size`. Double-click on branch element either involves `TTree::Draw` or add proposed expression to tree viewer. Handle special symbols in branch names like `\` or `#`.; 5. Fix several bugs in usage of `GED` inside canvas. After JSROOT v7 loading of custom code is more tricky, therefore it is better to load it directly from JSROOT components - not try to select some parts from outside.; 6. Fix several bugs in JSROOT (see changelog)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11618
https://github.com/root-project/root/pull/11619:468,Deployability,integrat,integration,468,"This is a followup to commit 47c250898f3. The new algorithm to figure out the servers of a RooRealIntegral could get very expensive for large computation graphs, as seen with the ATLAS Higgs combinaiton. The problem was that there was a loop over an arguments clients for each argument in the computation graph. In this commit, loop is replaced by another loop over the computation graph in which one iterates only over the servers of the arguments that depend on the integration variables. I think this logic is even more intuitive to understand as well. I learned also that iterating over clients is never a good idea, because while the number of servers is well defined, there can be arbitrary many clients, making the performance very unpredictable. It was verified with flamegraphs that the performance of the likelihood creation for the ATLAS Higgs combinaiton model is now again identical to the state before commit 47c250898f3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11619
https://github.com/root-project/root/pull/11619:454,Integrability,depend,depend,454,"This is a followup to commit 47c250898f3. The new algorithm to figure out the servers of a RooRealIntegral could get very expensive for large computation graphs, as seen with the ATLAS Higgs combinaiton. The problem was that there was a loop over an arguments clients for each argument in the computation graph. In this commit, loop is replaced by another loop over the computation graph in which one iterates only over the servers of the arguments that depend on the integration variables. I think this logic is even more intuitive to understand as well. I learned also that iterating over clients is never a good idea, because while the number of servers is well defined, there can be arbitrary many clients, making the performance very unpredictable. It was verified with flamegraphs that the performance of the likelihood creation for the ATLAS Higgs combinaiton model is now again identical to the state before commit 47c250898f3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11619
https://github.com/root-project/root/pull/11619:468,Integrability,integrat,integration,468,"This is a followup to commit 47c250898f3. The new algorithm to figure out the servers of a RooRealIntegral could get very expensive for large computation graphs, as seen with the ATLAS Higgs combinaiton. The problem was that there was a loop over an arguments clients for each argument in the computation graph. In this commit, loop is replaced by another loop over the computation graph in which one iterates only over the servers of the arguments that depend on the integration variables. I think this logic is even more intuitive to understand as well. I learned also that iterating over clients is never a good idea, because while the number of servers is well defined, there can be arbitrary many clients, making the performance very unpredictable. It was verified with flamegraphs that the performance of the likelihood creation for the ATLAS Higgs combinaiton model is now again identical to the state before commit 47c250898f3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11619
https://github.com/root-project/root/pull/11619:480,Modifiability,variab,variables,480,"This is a followup to commit 47c250898f3. The new algorithm to figure out the servers of a RooRealIntegral could get very expensive for large computation graphs, as seen with the ATLAS Higgs combinaiton. The problem was that there was a loop over an arguments clients for each argument in the computation graph. In this commit, loop is replaced by another loop over the computation graph in which one iterates only over the servers of the arguments that depend on the integration variables. I think this logic is even more intuitive to understand as well. I learned also that iterating over clients is never a good idea, because while the number of servers is well defined, there can be arbitrary many clients, making the performance very unpredictable. It was verified with flamegraphs that the performance of the likelihood creation for the ATLAS Higgs combinaiton model is now again identical to the state before commit 47c250898f3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11619
https://github.com/root-project/root/pull/11619:722,Performance,perform,performance,722,"This is a followup to commit 47c250898f3. The new algorithm to figure out the servers of a RooRealIntegral could get very expensive for large computation graphs, as seen with the ATLAS Higgs combinaiton. The problem was that there was a loop over an arguments clients for each argument in the computation graph. In this commit, loop is replaced by another loop over the computation graph in which one iterates only over the servers of the arguments that depend on the integration variables. I think this logic is even more intuitive to understand as well. I learned also that iterating over clients is never a good idea, because while the number of servers is well defined, there can be arbitrary many clients, making the performance very unpredictable. It was verified with flamegraphs that the performance of the likelihood creation for the ATLAS Higgs combinaiton model is now again identical to the state before commit 47c250898f3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11619
https://github.com/root-project/root/pull/11619:796,Performance,perform,performance,796,"This is a followup to commit 47c250898f3. The new algorithm to figure out the servers of a RooRealIntegral could get very expensive for large computation graphs, as seen with the ATLAS Higgs combinaiton. The problem was that there was a loop over an arguments clients for each argument in the computation graph. In this commit, loop is replaced by another loop over the computation graph in which one iterates only over the servers of the arguments that depend on the integration variables. I think this logic is even more intuitive to understand as well. I learned also that iterating over clients is never a good idea, because while the number of servers is well defined, there can be arbitrary many clients, making the performance very unpredictable. It was verified with flamegraphs that the performance of the likelihood creation for the ATLAS Higgs combinaiton model is now again identical to the state before commit 47c250898f3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11619
https://github.com/root-project/root/pull/11619:504,Testability,log,logic,504,"This is a followup to commit 47c250898f3. The new algorithm to figure out the servers of a RooRealIntegral could get very expensive for large computation graphs, as seen with the ATLAS Higgs combinaiton. The problem was that there was a loop over an arguments clients for each argument in the computation graph. In this commit, loop is replaced by another loop over the computation graph in which one iterates only over the servers of the arguments that depend on the integration variables. I think this logic is even more intuitive to understand as well. I learned also that iterating over clients is never a good idea, because while the number of servers is well defined, there can be arbitrary many clients, making the performance very unpredictable. It was verified with flamegraphs that the performance of the likelihood creation for the ATLAS Higgs combinaiton model is now again identical to the state before commit 47c250898f3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11619
https://github.com/root-project/root/pull/11619:523,Usability,intuit,intuitive,523,"This is a followup to commit 47c250898f3. The new algorithm to figure out the servers of a RooRealIntegral could get very expensive for large computation graphs, as seen with the ATLAS Higgs combinaiton. The problem was that there was a loop over an arguments clients for each argument in the computation graph. In this commit, loop is replaced by another loop over the computation graph in which one iterates only over the servers of the arguments that depend on the integration variables. I think this logic is even more intuitive to understand as well. I learned also that iterating over clients is never a good idea, because while the number of servers is well defined, there can be arbitrary many clients, making the performance very unpredictable. It was verified with flamegraphs that the performance of the likelihood creation for the ATLAS Higgs combinaiton model is now again identical to the state before commit 47c250898f3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11619
https://github.com/root-project/root/pull/11619:558,Usability,learn,learned,558,"This is a followup to commit 47c250898f3. The new algorithm to figure out the servers of a RooRealIntegral could get very expensive for large computation graphs, as seen with the ATLAS Higgs combinaiton. The problem was that there was a loop over an arguments clients for each argument in the computation graph. In this commit, loop is replaced by another loop over the computation graph in which one iterates only over the servers of the arguments that depend on the integration variables. I think this logic is even more intuitive to understand as well. I learned also that iterating over clients is never a good idea, because while the number of servers is well defined, there can be arbitrary many clients, making the performance very unpredictable. It was verified with flamegraphs that the performance of the likelihood creation for the ATLAS Higgs combinaiton model is now again identical to the state before commit 47c250898f3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11619
https://github.com/root-project/root/pull/11620:74,Deployability,patch,patch,74,"This is not intended to enter master (as of now at least). I am sharing a patch to produce taskstream for RunTreeProcessorMT. The RLoopManager produces a raw data, that can very easily be given to this small program that does the magic:; ```py; import pandas as pd; samples = pd.read_csv('test.csv'). startTime = min(samples['StartTime']) # the earliest ; allEntries = sum(samples['EntriesProcessed']); samples['StartTime'] -= startTime; samples['EndTime'] -= startTime; samples['Duration'] = samples['EndTime'] - samples['StartTime']; samples['EntriesPercentProc'] = samples['EntriesProcessed']/allEntries*100. import altair as alt; import altair_saver. chart = alt.Chart(samples[['Slot','ThreadID','CoreID',; 'StartTime','EndTime','EntriesProcessed', 'EntriesPercentProc', 'Duration']]).mark_bar(; cornerRadiusTopLeft=2,; cornerRadiusTopRight=2,; cornerRadiusBottomLeft=2,; cornerRadiusBottomRight=2; ).encode(; x='StartTime',; x2='EndTime',; y='ThreadID',; tooltip=['Slot', 'CoreID', 'EntriesProcessed', 'EntriesPercentProc', 'Duration']; ).properties(width=1200).interactive(). chart.save('taskstream.html'); ```; Requirements are pandas, altair and altair_saver. Example resulting taskstream is in this draft PR: https://github.com/root-project/root/blob/2dffbaab2ef3c280cc1b5a98fe8123250353d35e/tutorials/dataframe/dashboard/taskstream.html. Any suggestions for improvements are welcome :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11620
https://github.com/root-project/root/pull/11620:289,Testability,test,test,289,"This is not intended to enter master (as of now at least). I am sharing a patch to produce taskstream for RunTreeProcessorMT. The RLoopManager produces a raw data, that can very easily be given to this small program that does the magic:; ```py; import pandas as pd; samples = pd.read_csv('test.csv'). startTime = min(samples['StartTime']) # the earliest ; allEntries = sum(samples['EntriesProcessed']); samples['StartTime'] -= startTime; samples['EndTime'] -= startTime; samples['Duration'] = samples['EndTime'] - samples['StartTime']; samples['EntriesPercentProc'] = samples['EntriesProcessed']/allEntries*100. import altair as alt; import altair_saver. chart = alt.Chart(samples[['Slot','ThreadID','CoreID',; 'StartTime','EndTime','EntriesProcessed', 'EntriesPercentProc', 'Duration']]).mark_bar(; cornerRadiusTopLeft=2,; cornerRadiusTopRight=2,; cornerRadiusBottomLeft=2,; cornerRadiusBottomRight=2; ).encode(; x='StartTime',; x2='EndTime',; y='ThreadID',; tooltip=['Slot', 'CoreID', 'EntriesProcessed', 'EntriesPercentProc', 'Duration']; ).properties(width=1200).interactive(). chart.save('taskstream.html'); ```; Requirements are pandas, altair and altair_saver. Example resulting taskstream is in this draft PR: https://github.com/root-project/root/blob/2dffbaab2ef3c280cc1b5a98fe8123250353d35e/tutorials/dataframe/dashboard/taskstream.html. Any suggestions for improvements are welcome :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11620
https://github.com/root-project/root/pull/11621:37,Availability,failure,failures,37,"Address a number of AddressSanitizer failures with Python tests, due to the way we need to preload the ASan runtime and our configuration. If I count correctly (there were a number of failures introduced last night, so I don't have a proper baseline), this fixes 7 tests:; * `pyunittests-pyroot-import-load-libs`; * `tutorial-roofit-rf104_classfactory-py`; * `roottest-python-JupyROOT-simpleCppMagic_notebook`; * `roottest-python-JupyROOT-thread_local_notebook`; * `roottest-python-JupyROOT-ROOT_kernel_notebook`; * `roottest-python-basic-basic`; * `roottest-python-regression-regression`. Moreover, `tutorial-rcanvas-df104-py` will show a proper AdressSanitizer failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11621
https://github.com/root-project/root/pull/11621:184,Availability,failure,failures,184,"Address a number of AddressSanitizer failures with Python tests, due to the way we need to preload the ASan runtime and our configuration. If I count correctly (there were a number of failures introduced last night, so I don't have a proper baseline), this fixes 7 tests:; * `pyunittests-pyroot-import-load-libs`; * `tutorial-roofit-rf104_classfactory-py`; * `roottest-python-JupyROOT-simpleCppMagic_notebook`; * `roottest-python-JupyROOT-thread_local_notebook`; * `roottest-python-JupyROOT-ROOT_kernel_notebook`; * `roottest-python-basic-basic`; * `roottest-python-regression-regression`. Moreover, `tutorial-rcanvas-df104-py` will show a proper AdressSanitizer failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11621
https://github.com/root-project/root/pull/11621:663,Availability,failure,failure,663,"Address a number of AddressSanitizer failures with Python tests, due to the way we need to preload the ASan runtime and our configuration. If I count correctly (there were a number of failures introduced last night, so I don't have a proper baseline), this fixes 7 tests:; * `pyunittests-pyroot-import-load-libs`; * `tutorial-roofit-rf104_classfactory-py`; * `roottest-python-JupyROOT-simpleCppMagic_notebook`; * `roottest-python-JupyROOT-thread_local_notebook`; * `roottest-python-JupyROOT-ROOT_kernel_notebook`; * `roottest-python-basic-basic`; * `roottest-python-regression-regression`. Moreover, `tutorial-rcanvas-df104-py` will show a proper AdressSanitizer failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11621
https://github.com/root-project/root/pull/11621:124,Deployability,configurat,configuration,124,"Address a number of AddressSanitizer failures with Python tests, due to the way we need to preload the ASan runtime and our configuration. If I count correctly (there were a number of failures introduced last night, so I don't have a proper baseline), this fixes 7 tests:; * `pyunittests-pyroot-import-load-libs`; * `tutorial-roofit-rf104_classfactory-py`; * `roottest-python-JupyROOT-simpleCppMagic_notebook`; * `roottest-python-JupyROOT-thread_local_notebook`; * `roottest-python-JupyROOT-ROOT_kernel_notebook`; * `roottest-python-basic-basic`; * `roottest-python-regression-regression`. Moreover, `tutorial-rcanvas-df104-py` will show a proper AdressSanitizer failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11621
https://github.com/root-project/root/pull/11621:124,Modifiability,config,configuration,124,"Address a number of AddressSanitizer failures with Python tests, due to the way we need to preload the ASan runtime and our configuration. If I count correctly (there were a number of failures introduced last night, so I don't have a proper baseline), this fixes 7 tests:; * `pyunittests-pyroot-import-load-libs`; * `tutorial-roofit-rf104_classfactory-py`; * `roottest-python-JupyROOT-simpleCppMagic_notebook`; * `roottest-python-JupyROOT-thread_local_notebook`; * `roottest-python-JupyROOT-ROOT_kernel_notebook`; * `roottest-python-basic-basic`; * `roottest-python-regression-regression`. Moreover, `tutorial-rcanvas-df104-py` will show a proper AdressSanitizer failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11621
https://github.com/root-project/root/pull/11621:302,Performance,load,load-libs,302,"Address a number of AddressSanitizer failures with Python tests, due to the way we need to preload the ASan runtime and our configuration. If I count correctly (there were a number of failures introduced last night, so I don't have a proper baseline), this fixes 7 tests:; * `pyunittests-pyroot-import-load-libs`; * `tutorial-roofit-rf104_classfactory-py`; * `roottest-python-JupyROOT-simpleCppMagic_notebook`; * `roottest-python-JupyROOT-thread_local_notebook`; * `roottest-python-JupyROOT-ROOT_kernel_notebook`; * `roottest-python-basic-basic`; * `roottest-python-regression-regression`. Moreover, `tutorial-rcanvas-df104-py` will show a proper AdressSanitizer failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11621
https://github.com/root-project/root/pull/11621:58,Testability,test,tests,58,"Address a number of AddressSanitizer failures with Python tests, due to the way we need to preload the ASan runtime and our configuration. If I count correctly (there were a number of failures introduced last night, so I don't have a proper baseline), this fixes 7 tests:; * `pyunittests-pyroot-import-load-libs`; * `tutorial-roofit-rf104_classfactory-py`; * `roottest-python-JupyROOT-simpleCppMagic_notebook`; * `roottest-python-JupyROOT-thread_local_notebook`; * `roottest-python-JupyROOT-ROOT_kernel_notebook`; * `roottest-python-basic-basic`; * `roottest-python-regression-regression`. Moreover, `tutorial-rcanvas-df104-py` will show a proper AdressSanitizer failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11621
https://github.com/root-project/root/pull/11621:265,Testability,test,tests,265,"Address a number of AddressSanitizer failures with Python tests, due to the way we need to preload the ASan runtime and our configuration. If I count correctly (there were a number of failures introduced last night, so I don't have a proper baseline), this fixes 7 tests:; * `pyunittests-pyroot-import-load-libs`; * `tutorial-roofit-rf104_classfactory-py`; * `roottest-python-JupyROOT-simpleCppMagic_notebook`; * `roottest-python-JupyROOT-thread_local_notebook`; * `roottest-python-JupyROOT-ROOT_kernel_notebook`; * `roottest-python-basic-basic`; * `roottest-python-regression-regression`. Moreover, `tutorial-rcanvas-df104-py` will show a proper AdressSanitizer failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11621
https://github.com/root-project/root/pull/11623:123,Safety,detect,detected,123,"This is a follow up of what was investigated for https://github.com/root-project/root/issues/11581. In that ticket, it was detected that for certain types, for example `const char*`, the attribute `value_type` was not set for std::vector classes. This PR aligns with upstream cppyy in terms of setting the `value_type` and `value_size` attributes of a std::vector class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11623
https://github.com/root-project/root/issues/11624:823,Deployability,configurat,configuration,823,"Many analyses and frameworks offer the possibility of using a semi-structured format to represent both the full dataset (in terms of the files that need to be processed) and some metadata attached to it. Most often, the files are split into multiple groupings, which are usually called ""samples"" or ""datasets"". A few examples of this pattern are:. * [AGC](https://github.com/iris-hep/analysis-grand-challenge/blob/main/analyses/cms-open-data-ttbar/ntuples.json); * [PocketCoffea](https://github.com/PocketCoffea/PocketCoffea/blob/main/datasets/DATA_DoubleMuon_local.json); * [WRemnants](https://github.com/WMass/WRemnants/blob/4068b8622fd54867ae779ee3d79a4d4aa270a4a5/wremnants/datasets/datasetDict_v9.py); * [Bamboo](https://gitlab.cern.ch/swertz/bambooexamples/-/blob/master/samples.yml). This helps a lot in keeping the configuration of the analysis dataset tidy and short, so that it can also be more easily shared to others and compared between different executions. But this also calls for a discussion on providing a standard schema that all frameworks could accept and digest into their own execution workflows. For example, it is quite natural to always include a list of files in each ""sample"". This new standard schema should support a few key features of the definition of a dataset:. * Specify groups of several input files, each with associated metadata; * Decide what term to use instead of ""groups""; * Cover TTree but plan for RNTuple support; * Should support friend trees per group; * Should support entry ranges per group; * No indexed friend trees (at least for now). One possible starting point would be (using ""samples""=""groups""=""datasets""):; ```python; {; ""samples"":{; ""sample_a"":{; ""treenames"": [""Events""],; ""files"": [""fa*.root""],; ""friends"":{; ""treenames"": [""Friend""],; ""files"": [""fr*.root""],; },; ""entry_range"": [0, 1000],; ""metadata"": {...}; },; ""sample_b"":{; ""treenames"": [""treeb_1"", ""treeb_2""],; ""files"": [""fileb_1.root"", ""fileb_2.root""],; ""friends"":{; ""treenames"": [""Frie",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11624
https://github.com/root-project/root/issues/11624:823,Modifiability,config,configuration,823,"Many analyses and frameworks offer the possibility of using a semi-structured format to represent both the full dataset (in terms of the files that need to be processed) and some metadata attached to it. Most often, the files are split into multiple groupings, which are usually called ""samples"" or ""datasets"". A few examples of this pattern are:. * [AGC](https://github.com/iris-hep/analysis-grand-challenge/blob/main/analyses/cms-open-data-ttbar/ntuples.json); * [PocketCoffea](https://github.com/PocketCoffea/PocketCoffea/blob/main/datasets/DATA_DoubleMuon_local.json); * [WRemnants](https://github.com/WMass/WRemnants/blob/4068b8622fd54867ae779ee3d79a4d4aa270a4a5/wremnants/datasets/datasetDict_v9.py); * [Bamboo](https://gitlab.cern.ch/swertz/bambooexamples/-/blob/master/samples.yml). This helps a lot in keeping the configuration of the analysis dataset tidy and short, so that it can also be more easily shared to others and compared between different executions. But this also calls for a discussion on providing a standard schema that all frameworks could accept and digest into their own execution workflows. For example, it is quite natural to always include a list of files in each ""sample"". This new standard schema should support a few key features of the definition of a dataset:. * Specify groups of several input files, each with associated metadata; * Decide what term to use instead of ""groups""; * Cover TTree but plan for RNTuple support; * Should support friend trees per group; * Should support entry ranges per group; * No indexed friend trees (at least for now). One possible starting point would be (using ""samples""=""groups""=""datasets""):; ```python; {; ""samples"":{; ""sample_a"":{; ""treenames"": [""Events""],; ""files"": [""fa*.root""],; ""friends"":{; ""treenames"": [""Friend""],; ""files"": [""fr*.root""],; },; ""entry_range"": [0, 1000],; ""metadata"": {...}; },; ""sample_b"":{; ""treenames"": [""treeb_1"", ""treeb_2""],; ""files"": [""fileb_1.root"", ""fileb_2.root""],; ""friends"":{; ""treenames"": [""Frie",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11624
https://github.com/root-project/root/pull/11625:268,Modifiability,layers,layers,268,"This PR fixes the ordering of input tensors in the generated `infer` function. Previously, the tensors were iterated from an unordered map and thus were not in the order in which they were added. The correct ordering in which they are added is necessary for different layers in other parsers like Keras, and in the inference of GNN. With this PR, the tensors are iterated from a vector, thus the ordering is correct.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11625
https://github.com/root-project/root/issues/11626:409,Availability,error,error,409,I installed root via this video [https://www.youtube.com/watch?v=pmfM4Zq6OQU&list=PLLybgCU6QCGWLdDO4ZDaB0kLrO3maeYAe&index=30](https://www.youtube.com/watch?v=pmfM4Zq6OQU&list=PLLybgCU6QCGWLdDO4ZDaB0kLrO3maeYAe&index=30) . To build a starlight ; ![Screenshot 2022-10-23 133107](https://user-images.githubusercontent.com/116489914/197387186-122e8d49-1751-4152-bc5c-c9ce70a8f60a.png); I tried a lot to fix this error ; ![Screenshot 2022-10-22 220723](https://user-images.githubusercontent.com/116489914/197386889-d40c094c-b457-4e2c-a549-caf0d6d39a61.png) . Please help me,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11626
https://github.com/root-project/root/issues/11626:2,Deployability,install,installed,2,I installed root via this video [https://www.youtube.com/watch?v=pmfM4Zq6OQU&list=PLLybgCU6QCGWLdDO4ZDaB0kLrO3maeYAe&index=30](https://www.youtube.com/watch?v=pmfM4Zq6OQU&list=PLLybgCU6QCGWLdDO4ZDaB0kLrO3maeYAe&index=30) . To build a starlight ; ![Screenshot 2022-10-23 133107](https://user-images.githubusercontent.com/116489914/197387186-122e8d49-1751-4152-bc5c-c9ce70a8f60a.png); I tried a lot to fix this error ; ![Screenshot 2022-10-22 220723](https://user-images.githubusercontent.com/116489914/197386889-d40c094c-b457-4e2c-a549-caf0d6d39a61.png) . Please help me,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11626
https://github.com/root-project/root/pull/11627:758,Deployability,update,updated,758,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627
https://github.com/root-project/root/pull/11627:692,Modifiability,Config,Config,692,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627
https://github.com/root-project/root/pull/11627:70,Performance,optimiz,optimizations,70,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627
https://github.com/root-project/root/pull/11627:141,Performance,Queue,Queue,141,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627
https://github.com/root-project/root/pull/11627:151,Performance,Queue,Queue,151,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627
https://github.com/root-project/root/pull/11627:266,Performance,Queue,Queue,266,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627
https://github.com/root-project/root/pull/11627:309,Performance,Queue,Queue,309,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627
https://github.com/root-project/root/pull/11627:335,Performance,Queue,Queue,335,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627
https://github.com/root-project/root/pull/11627:370,Performance,Queue,Queue,370,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627
https://github.com/root-project/root/pull/11627:485,Performance,Queue,Queue,485,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627
https://github.com/root-project/root/pull/11627:601,Performance,queue,queue,601,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627
https://github.com/root-project/root/pull/11627:620,Performance,Queue,Queue,620,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627
https://github.com/root-project/root/pull/11627:700,Performance,Queue,Queue,700,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627
https://github.com/root-project/root/pull/11627:214,Security,access,access,214,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627
https://github.com/root-project/root/pull/11627:728,Testability,test,tested,728,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627
https://github.com/root-project/root/pull/11628:91,Integrability,wrap,wrapped,91,"Introduces the ""trivially constructible"" and ""trivially destructible"" traits for the types wrapped by an RField. Maintaining these traits allows for optimizations when reading collections: for collections of simple types (e.g., `int`s, `float`s), we don't need to call the element constructors and destructors when the collection changes size from event to event. For the vector-heavy ATLAS OpenData benchmark, this results in a 5-10% performance improvement both with RDF and with RNTuple views (hot disk cache, zstd compressed input). Fixes #10520",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11628
https://github.com/root-project/root/pull/11628:149,Performance,optimiz,optimizations,149,"Introduces the ""trivially constructible"" and ""trivially destructible"" traits for the types wrapped by an RField. Maintaining these traits allows for optimizations when reading collections: for collections of simple types (e.g., `int`s, `float`s), we don't need to call the element constructors and destructors when the collection changes size from event to event. For the vector-heavy ATLAS OpenData benchmark, this results in a 5-10% performance improvement both with RDF and with RNTuple views (hot disk cache, zstd compressed input). Fixes #10520",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11628
https://github.com/root-project/root/pull/11628:435,Performance,perform,performance,435,"Introduces the ""trivially constructible"" and ""trivially destructible"" traits for the types wrapped by an RField. Maintaining these traits allows for optimizations when reading collections: for collections of simple types (e.g., `int`s, `float`s), we don't need to call the element constructors and destructors when the collection changes size from event to event. For the vector-heavy ATLAS OpenData benchmark, this results in a 5-10% performance improvement both with RDF and with RNTuple views (hot disk cache, zstd compressed input). Fixes #10520",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11628
https://github.com/root-project/root/pull/11628:506,Performance,cache,cache,506,"Introduces the ""trivially constructible"" and ""trivially destructible"" traits for the types wrapped by an RField. Maintaining these traits allows for optimizations when reading collections: for collections of simple types (e.g., `int`s, `float`s), we don't need to call the element constructors and destructors when the collection changes size from event to event. For the vector-heavy ATLAS OpenData benchmark, this results in a 5-10% performance improvement both with RDF and with RNTuple views (hot disk cache, zstd compressed input). Fixes #10520",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11628
https://github.com/root-project/root/pull/11628:400,Testability,benchmark,benchmark,400,"Introduces the ""trivially constructible"" and ""trivially destructible"" traits for the types wrapped by an RField. Maintaining these traits allows for optimizations when reading collections: for collections of simple types (e.g., `int`s, `float`s), we don't need to call the element constructors and destructors when the collection changes size from event to event. For the vector-heavy ATLAS OpenData benchmark, this results in a 5-10% performance improvement both with RDF and with RNTuple views (hot disk cache, zstd compressed input). Fixes #10520",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11628
https://github.com/root-project/root/pull/11628:208,Usability,simpl,simple,208,"Introduces the ""trivially constructible"" and ""trivially destructible"" traits for the types wrapped by an RField. Maintaining these traits allows for optimizations when reading collections: for collections of simple types (e.g., `int`s, `float`s), we don't need to call the element constructors and destructors when the collection changes size from event to event. For the vector-heavy ATLAS OpenData benchmark, this results in a 5-10% performance improvement both with RDF and with RNTuple views (hot disk cache, zstd compressed input). Fixes #10520",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11628
https://github.com/root-project/root/issues/11629:230,Availability,ERROR,ERROR,230,"After recent fixes on the interaction between Python and AddressSanitizer (https://github.com/root-project/root/pull/11621), there is now a `global-buffer-overflow` reported for `tutorial-rcanvas-df104-py`:; ```; 1148: ==4075620==ERROR: AddressSanitizer: global-buffer-overflow on address 0x7f7b0e15ea65 at pc 0x7f7b14df7aaa bp 0x7fff988d9ab0 sp 0x7fff988d9258; 1148: READ of size 156 at 0x7f7b0e15ea65 thread T0; 1148: #0 0x7f7b14df7aa9 in __asan_memcpy (/usr/lib64/clang/14.0.6/lib/linux/libclang_rt.asan-x86_64.so+0x101aa9) (BuildId: e896d268897cea67bde300bc334ab7b2bfb702db); 1148: #1 0x7f7b0fa19ba1 in TString::Replace(int, int, char const*, int) /home/jhahnfel/ROOT/src/core/base/src/TString.cxx:1069:16; 1148: #2 0x7f7b0e2d9e7d in TString::Append(char const*) /home/jhahnfel/ROOT/src/core/base/inc/TString.h:565:10; 1148: #3 0x7f7b0e2d9e7d in TBufferJSON::JsonWriteBasic(bool) /home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:3963:11; 1148: #4 0x7f7b0e2d9e7d in TBufferJSON::WriteBool(bool) /home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:3724:4; 1148: #5 0x7f7b0e5a62bc in operator<<(TBuffer&, bool) /home/jhahnfel/ROOT/src/core/base/inc/TBuffer.h:361:60; 1148: #6 0x7f7b0e5a62bc in int TStreamerInfoActions::WriteBasicType<bool>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) /home/jhahnfel/ROOT/src/io/io/src/TStreamerInfoActions.cxx:253:11; 1148: #7 0x7f7b0e21d31d in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const /home/jhahnfel/ROOT/src/io/io/inc/TStreamerInfoActions.h:123:17; 1148: #8 0x7f7b0e21d31d in TBufferText::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) /home/jhahnfel/ROOT/src/io/io/src/TBufferText.cxx:91:10; 1148: #9 0x7f7b0e21e1c1 in TBufferText::WriteClassBuffer(TClass const*, void*) /home/jhahnfel/ROOT/src/io/io/src/TBufferText.cxx:211:4; 1148: #10 0x7f7ae6a268ba in TFormula::Streamer(TBuffer&) /home/jhahnfel/ROOT/src/hist/hist/src/TFormula.cxx:3901:9; 1148: #11 0x7f7b0e2278c8 in TClass::Streamer(voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11629
https://github.com/root-project/root/issues/11629:12525,Integrability,Wrap,WrapperCall,12525,"TClass const*, bool) /home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1416:35; 1148: #72 0x7f7b0e2265db in TBufferJSON::StoreObject(void const*, TClass const*) /home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:708:7; 1148: #73 0x7f7ad3c6329b in ROOT::Experimental::RCanvasPainter::CreateSnapshot[abi:cxx11](ROOT::Experimental::RDrawable::RDisplayContext&) /home/jhahnfel/ROOT/src/gui/canvaspainter/src/RCanvasPainter.cxx:739:20; 1148: #74 0x7f7ad3c669ad in ROOT::Experimental::RCanvasPainter::ProduceBatchOutput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, int) /home/jhahnfel/ROOT/src/gui/canvaspainter/src/RCanvasPainter.cxx:461:20; 1148: #75 0x7f7afc354443 in ROOT::Experimental::RCanvas::SaveAs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/jhahnfel/ROOT/src/graf2d/gpadv7/src/RCanvas.cxx:176:21; 1148: #76 0x7f7afeafe017 (<unknown module>); 1148: #77 0x7f7b121bc8c9 in WrapperCall(long, unsigned long, void*, void*, void*) /home/jhahnfel/ROOT/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778:13; 1148: #78 0x7f7b121bd174 in unsigned char CallT<unsigned char>(long, void*, unsigned long, void*) /home/jhahnfel/ROOT/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:816:9; 1148: #79 0x7f7b121bd174 in Cppyy::CallB(long, void*, unsigned long, void*) /home/jhahnfel/ROOT/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:833:1; 1148: #80 0x7f7b0ffe1a61 in CPyCppyy::(anonymous namespace)::BoolExecutor::Execute(long, void*, CPyCppyy::CallContext*) /home/jhahnfel/ROOT/src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:148:19; 1148: #81 0x7f7b0ffaf717 in CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) /home/jhahnfel/ROOT/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74:29; 1148: #82 0x7f7b0ffaeb24 in CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) /home/jhahnfel/ROOT/src/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11629
https://github.com/root-project/root/issues/11629:15635,Modifiability,variab,variable,15635,babd2) (BuildId: 465cb4e335b590c1226116d08bd8586548d89519); 1148: #90 0x7f7b144d3941 (/lib64/libpython3.6m.so.1.0+0x209941) (BuildId: 465cb4e335b590c1226116d08bd8586548d89519); 1148: #91 0x7f7b143a44ea in PyRun_FileExFlags (/lib64/libpython3.6m.so.1.0+0xda4ea) (BuildId: 465cb4e335b590c1226116d08bd8586548d89519); 1148: #92 0x7f7b143a9624 in PyRun_SimpleFileExFlags (/lib64/libpython3.6m.so.1.0+0xdf624) (BuildId: 465cb4e335b590c1226116d08bd8586548d89519); 1148: #93 0x7f7b143a9f73 (/lib64/libpython3.6m.so.1.0+0xdff73) (BuildId: 465cb4e335b590c1226116d08bd8586548d89519); 1148: #94 0x562b1934eb95 in main (/usr/libexec/platform-python3.6+0xb95) (BuildId: f236d8f7fc650f4e7be110015de1de715f85b20c); 1148: #95 0x7f7b13594d84 in __libc_start_main (/lib64/libc.so.6+0x3ad84) (BuildId: f65c85bfdb904b623d4fe2139b4d7c25cf8c0b58); 1148: #96 0x562b1934ed1d in _start (/usr/libexec/platform-python3.6+0xd1d) (BuildId: f236d8f7fc650f4e7be110015de1de715f85b20c); 1148:; 1148: 0x7f7b0e15ea65 is located 59 bytes to the left of global variable '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1353:110' (0x7f7b0e15eaa0) of size 12; 1148: '<string literal>' is ascii string 'JSON_object'; 1148: 0x7f7b0e15ea65 is located 27 bytes to the left of global variable '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1330:33' (0x7f7b0e15ea80) of size 6; 1148: '<string literal>' is ascii string 'false'; 1148: 0x7f7b0e15ea65 is located 0 bytes to the right of global variable '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1330:24' (0x7f7b0e15ea60) of size 5; 1148: '<string literal>' is ascii string 'true'; 1148: SUMMARY: AddressSanitizer: global-buffer-overflow (/usr/lib64/clang/14.0.6/lib/linux/libclang_rt.asan-x86_64.so+0x101aa9) (BuildId: e896d268897cea67bde300bc334ab7b2bfb702db) in __asan_memcpy; 1148: Shadow bytes around the buggy address:; 1148: 0x0fefe1c23cf0: 00 00 03 f9 f9 f9 f9 f9 00 06 f9 f9 00 00 03 f9,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11629
https://github.com/root-project/root/issues/11629:15883,Modifiability,variab,variable,15883,bpython3.6m.so.1.0+0xda4ea) (BuildId: 465cb4e335b590c1226116d08bd8586548d89519); 1148: #92 0x7f7b143a9624 in PyRun_SimpleFileExFlags (/lib64/libpython3.6m.so.1.0+0xdf624) (BuildId: 465cb4e335b590c1226116d08bd8586548d89519); 1148: #93 0x7f7b143a9f73 (/lib64/libpython3.6m.so.1.0+0xdff73) (BuildId: 465cb4e335b590c1226116d08bd8586548d89519); 1148: #94 0x562b1934eb95 in main (/usr/libexec/platform-python3.6+0xb95) (BuildId: f236d8f7fc650f4e7be110015de1de715f85b20c); 1148: #95 0x7f7b13594d84 in __libc_start_main (/lib64/libc.so.6+0x3ad84) (BuildId: f65c85bfdb904b623d4fe2139b4d7c25cf8c0b58); 1148: #96 0x562b1934ed1d in _start (/usr/libexec/platform-python3.6+0xd1d) (BuildId: f236d8f7fc650f4e7be110015de1de715f85b20c); 1148:; 1148: 0x7f7b0e15ea65 is located 59 bytes to the left of global variable '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1353:110' (0x7f7b0e15eaa0) of size 12; 1148: '<string literal>' is ascii string 'JSON_object'; 1148: 0x7f7b0e15ea65 is located 27 bytes to the left of global variable '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1330:33' (0x7f7b0e15ea80) of size 6; 1148: '<string literal>' is ascii string 'false'; 1148: 0x7f7b0e15ea65 is located 0 bytes to the right of global variable '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1330:24' (0x7f7b0e15ea60) of size 5; 1148: '<string literal>' is ascii string 'true'; 1148: SUMMARY: AddressSanitizer: global-buffer-overflow (/usr/lib64/clang/14.0.6/lib/linux/libclang_rt.asan-x86_64.so+0x101aa9) (BuildId: e896d268897cea67bde300bc334ab7b2bfb702db) in __asan_memcpy; 1148: Shadow bytes around the buggy address:; 1148: 0x0fefe1c23cf0: 00 00 03 f9 f9 f9 f9 f9 00 06 f9 f9 00 00 03 f9; 1148: 0x0fefe1c23d00: f9 f9 f9 f9 00 f9 f9 f9 07 f9 f9 f9 00 f9 f9 f9; 1148: 0x0fefe1c23d10: 00 00 01 f9 f9 f9 f9 f9 00 00 00 00 06 f9 f9 f9; 1148: 0x0fefe1c23d20: f9 f9 f9 f9 00 00 00 00 00 00 07 f9 f9 f9 f9 f9; 1148: 0x0fefe1c23d,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11629
https://github.com/root-project/root/issues/11629:16123,Modifiability,variab,variable,16123,9f73 (/lib64/libpython3.6m.so.1.0+0xdff73) (BuildId: 465cb4e335b590c1226116d08bd8586548d89519); 1148: #94 0x562b1934eb95 in main (/usr/libexec/platform-python3.6+0xb95) (BuildId: f236d8f7fc650f4e7be110015de1de715f85b20c); 1148: #95 0x7f7b13594d84 in __libc_start_main (/lib64/libc.so.6+0x3ad84) (BuildId: f65c85bfdb904b623d4fe2139b4d7c25cf8c0b58); 1148: #96 0x562b1934ed1d in _start (/usr/libexec/platform-python3.6+0xd1d) (BuildId: f236d8f7fc650f4e7be110015de1de715f85b20c); 1148:; 1148: 0x7f7b0e15ea65 is located 59 bytes to the left of global variable '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1353:110' (0x7f7b0e15eaa0) of size 12; 1148: '<string literal>' is ascii string 'JSON_object'; 1148: 0x7f7b0e15ea65 is located 27 bytes to the left of global variable '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1330:33' (0x7f7b0e15ea80) of size 6; 1148: '<string literal>' is ascii string 'false'; 1148: 0x7f7b0e15ea65 is located 0 bytes to the right of global variable '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1330:24' (0x7f7b0e15ea60) of size 5; 1148: '<string literal>' is ascii string 'true'; 1148: SUMMARY: AddressSanitizer: global-buffer-overflow (/usr/lib64/clang/14.0.6/lib/linux/libclang_rt.asan-x86_64.so+0x101aa9) (BuildId: e896d268897cea67bde300bc334ab7b2bfb702db) in __asan_memcpy; 1148: Shadow bytes around the buggy address:; 1148: 0x0fefe1c23cf0: 00 00 03 f9 f9 f9 f9 f9 00 06 f9 f9 00 00 03 f9; 1148: 0x0fefe1c23d00: f9 f9 f9 f9 00 f9 f9 f9 07 f9 f9 f9 00 f9 f9 f9; 1148: 0x0fefe1c23d10: 00 00 01 f9 f9 f9 f9 f9 00 00 00 00 06 f9 f9 f9; 1148: 0x0fefe1c23d20: f9 f9 f9 f9 00 00 00 00 00 00 07 f9 f9 f9 f9 f9; 1148: 0x0fefe1c23d30: 00 00 00 00 05 f9 f9 f9 f9 f9 f9 f9 07 f9 f9 f9; 1148: =>0x0fefe1c23d40: 00 00 f9 f9 00 00 00 00 f9 f9 f9 f9[05]f9 f9 f9; 1148: 0x0fefe1c23d50: 06 f9 f9 f9 00 04 f9 f9 00 04 f9 f9 00 04 f9 f9; 1148: 0x0fefe1c23d60: 00 00 00 00 07 f9 f9 f9 f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11629
https://github.com/root-project/root/issues/11629:17961,Safety,ABORT,ABORTING,17961,le '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1330:24' (0x7f7b0e15ea60) of size 5; 1148: '<string literal>' is ascii string 'true'; 1148: SUMMARY: AddressSanitizer: global-buffer-overflow (/usr/lib64/clang/14.0.6/lib/linux/libclang_rt.asan-x86_64.so+0x101aa9) (BuildId: e896d268897cea67bde300bc334ab7b2bfb702db) in __asan_memcpy; 1148: Shadow bytes around the buggy address:; 1148: 0x0fefe1c23cf0: 00 00 03 f9 f9 f9 f9 f9 00 06 f9 f9 00 00 03 f9; 1148: 0x0fefe1c23d00: f9 f9 f9 f9 00 f9 f9 f9 07 f9 f9 f9 00 f9 f9 f9; 1148: 0x0fefe1c23d10: 00 00 01 f9 f9 f9 f9 f9 00 00 00 00 06 f9 f9 f9; 1148: 0x0fefe1c23d20: f9 f9 f9 f9 00 00 00 00 00 00 07 f9 f9 f9 f9 f9; 1148: 0x0fefe1c23d30: 00 00 00 00 05 f9 f9 f9 f9 f9 f9 f9 07 f9 f9 f9; 1148: =>0x0fefe1c23d40: 00 00 f9 f9 00 00 00 00 f9 f9 f9 f9[05]f9 f9 f9; 1148: 0x0fefe1c23d50: 06 f9 f9 f9 00 04 f9 f9 00 04 f9 f9 00 04 f9 f9; 1148: 0x0fefe1c23d60: 00 00 00 00 07 f9 f9 f9 f9 f9 f9 f9 00 00 00 00; 1148: 0x0fefe1c23d70: 03 f9 f9 f9 f9 f9 f9 f9 00 00 00 03 f9 f9 f9 f9; 1148: 0x0fefe1c23d80: 00 00 00 00 00 04 f9 f9 f9 f9 f9 f9 03 f9 f9 f9; 1148: 0x0fefe1c23d90: 02 f9 f9 f9 00 00 00 03 f9 f9 f9 f9 00 00 00 00; 1148: Shadow byte legend (one shadow byte represents 8 application bytes):; 1148: Addressable: 00; 1148: Partially addressable: 01 02 03 04 05 06 07; 1148: Heap left redzone: fa; 1148: Freed heap region: fd; 1148: Stack left redzone: f1; 1148: Stack mid redzone: f2; 1148: Stack right redzone: f3; 1148: Stack after return: f5; 1148: Stack use after scope: f8; 1148: Global redzone: f9; 1148: Global init order: f6; 1148: Poisoned by user: f7; 1148: Container overflow: fc; 1148: Array cookie: ac; 1148: Intra object redzone: bb; 1148: ASan internal: fe; 1148: Left alloca redzone: ca; 1148: Right alloca redzone: cb; 1148: ==4075620==ABORTING; ```. Note: There may be other problems in the test after this issue is fixed. Please check locally with an instrumented build that the test passes afterwards!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11629
https://github.com/root-project/root/issues/11629:18017,Testability,test,test,18017,le '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1330:24' (0x7f7b0e15ea60) of size 5; 1148: '<string literal>' is ascii string 'true'; 1148: SUMMARY: AddressSanitizer: global-buffer-overflow (/usr/lib64/clang/14.0.6/lib/linux/libclang_rt.asan-x86_64.so+0x101aa9) (BuildId: e896d268897cea67bde300bc334ab7b2bfb702db) in __asan_memcpy; 1148: Shadow bytes around the buggy address:; 1148: 0x0fefe1c23cf0: 00 00 03 f9 f9 f9 f9 f9 00 06 f9 f9 00 00 03 f9; 1148: 0x0fefe1c23d00: f9 f9 f9 f9 00 f9 f9 f9 07 f9 f9 f9 00 f9 f9 f9; 1148: 0x0fefe1c23d10: 00 00 01 f9 f9 f9 f9 f9 00 00 00 00 06 f9 f9 f9; 1148: 0x0fefe1c23d20: f9 f9 f9 f9 00 00 00 00 00 00 07 f9 f9 f9 f9 f9; 1148: 0x0fefe1c23d30: 00 00 00 00 05 f9 f9 f9 f9 f9 f9 f9 07 f9 f9 f9; 1148: =>0x0fefe1c23d40: 00 00 f9 f9 00 00 00 00 f9 f9 f9 f9[05]f9 f9 f9; 1148: 0x0fefe1c23d50: 06 f9 f9 f9 00 04 f9 f9 00 04 f9 f9 00 04 f9 f9; 1148: 0x0fefe1c23d60: 00 00 00 00 07 f9 f9 f9 f9 f9 f9 f9 00 00 00 00; 1148: 0x0fefe1c23d70: 03 f9 f9 f9 f9 f9 f9 f9 00 00 00 03 f9 f9 f9 f9; 1148: 0x0fefe1c23d80: 00 00 00 00 00 04 f9 f9 f9 f9 f9 f9 03 f9 f9 f9; 1148: 0x0fefe1c23d90: 02 f9 f9 f9 00 00 00 03 f9 f9 f9 f9 00 00 00 00; 1148: Shadow byte legend (one shadow byte represents 8 application bytes):; 1148: Addressable: 00; 1148: Partially addressable: 01 02 03 04 05 06 07; 1148: Heap left redzone: fa; 1148: Freed heap region: fd; 1148: Stack left redzone: f1; 1148: Stack mid redzone: f2; 1148: Stack right redzone: f3; 1148: Stack after return: f5; 1148: Stack use after scope: f8; 1148: Global redzone: f9; 1148: Global init order: f6; 1148: Poisoned by user: f7; 1148: Container overflow: fc; 1148: Array cookie: ac; 1148: Intra object redzone: bb; 1148: ASan internal: fe; 1148: Left alloca redzone: ca; 1148: Right alloca redzone: cb; 1148: ==4075620==ABORTING; ```. Note: There may be other problems in the test after this issue is fixed. Please check locally with an instrumented build that the test passes afterwards!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11629
https://github.com/root-project/root/issues/11629:18106,Testability,test,test,18106,le '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1330:24' (0x7f7b0e15ea60) of size 5; 1148: '<string literal>' is ascii string 'true'; 1148: SUMMARY: AddressSanitizer: global-buffer-overflow (/usr/lib64/clang/14.0.6/lib/linux/libclang_rt.asan-x86_64.so+0x101aa9) (BuildId: e896d268897cea67bde300bc334ab7b2bfb702db) in __asan_memcpy; 1148: Shadow bytes around the buggy address:; 1148: 0x0fefe1c23cf0: 00 00 03 f9 f9 f9 f9 f9 00 06 f9 f9 00 00 03 f9; 1148: 0x0fefe1c23d00: f9 f9 f9 f9 00 f9 f9 f9 07 f9 f9 f9 00 f9 f9 f9; 1148: 0x0fefe1c23d10: 00 00 01 f9 f9 f9 f9 f9 00 00 00 00 06 f9 f9 f9; 1148: 0x0fefe1c23d20: f9 f9 f9 f9 00 00 00 00 00 00 07 f9 f9 f9 f9 f9; 1148: 0x0fefe1c23d30: 00 00 00 00 05 f9 f9 f9 f9 f9 f9 f9 07 f9 f9 f9; 1148: =>0x0fefe1c23d40: 00 00 f9 f9 00 00 00 00 f9 f9 f9 f9[05]f9 f9 f9; 1148: 0x0fefe1c23d50: 06 f9 f9 f9 00 04 f9 f9 00 04 f9 f9 00 04 f9 f9; 1148: 0x0fefe1c23d60: 00 00 00 00 07 f9 f9 f9 f9 f9 f9 f9 00 00 00 00; 1148: 0x0fefe1c23d70: 03 f9 f9 f9 f9 f9 f9 f9 00 00 00 03 f9 f9 f9 f9; 1148: 0x0fefe1c23d80: 00 00 00 00 00 04 f9 f9 f9 f9 f9 f9 03 f9 f9 f9; 1148: 0x0fefe1c23d90: 02 f9 f9 f9 00 00 00 03 f9 f9 f9 f9 00 00 00 00; 1148: Shadow byte legend (one shadow byte represents 8 application bytes):; 1148: Addressable: 00; 1148: Partially addressable: 01 02 03 04 05 06 07; 1148: Heap left redzone: fa; 1148: Freed heap region: fd; 1148: Stack left redzone: f1; 1148: Stack mid redzone: f2; 1148: Stack right redzone: f3; 1148: Stack after return: f5; 1148: Stack use after scope: f8; 1148: Global redzone: f9; 1148: Global init order: f6; 1148: Poisoned by user: f7; 1148: Container overflow: fc; 1148: Array cookie: ac; 1148: Intra object redzone: bb; 1148: ASan internal: fe; 1148: Left alloca redzone: ca; 1148: Right alloca redzone: cb; 1148: ==4075620==ABORTING; ```. Note: There may be other problems in the test after this issue is fixed. Please check locally with an instrumented build that the test passes afterwards!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11629
https://github.com/root-project/root/pull/11631:167,Performance,Load,LoadPlugin,167,"When running RDF/TTreeProcessorMT with large numbers of threads and files with files on xrootd significant lock contention is still present through ```TPluginHandler::LoadPlugin()``` and ```TPluginHandler::ExecPlugin()``` which are called from ```TFile::Open()```. This PR minimizes the use of locks, which are now only needed the first time a given TPluginHandler is called for various initialization steps. This change now completely eliminates the use of the global write lock during RDF event loops also for files read from xrootd and finishes addressing https://github.com/root-project/root/issues/7710. For a simple test case:. Create the files:; ```cpp; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;; const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {; TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");; TTree *tree = new TTree(""tree"", """");; tree->Branch(""outval"", &outval);; for (unsigned int ientry = 0; ientry < nentries; ++ientry) {; tree->Fill();; }; tree->Write();; fout->Close();; }. }; ```. run the event loop:; ```python; import ROOT; ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""); chain.Add(""root://eoscms.cern.ch//store/cmst3/group/wmass/bendavid/iotestinput/test_*.root""). d = ROOT.ROOT.RDataFrame(chain); res = d.Sum(""outval""). resval = res.GetValue(); print(resval); ```. Testing with 256 threads:. before:; ```; Percent of CPU this job got: 1077%; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.82; ```. after:; ```; Percent of CPU this job got: 5626%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:54.89; ```; (in fact there is still some possible lock contention/parameter tuning within the xrootd client itself which could improve things further)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11631
https://github.com/root-project/root/pull/11631:622,Testability,test,test,622,"When running RDF/TTreeProcessorMT with large numbers of threads and files with files on xrootd significant lock contention is still present through ```TPluginHandler::LoadPlugin()``` and ```TPluginHandler::ExecPlugin()``` which are called from ```TFile::Open()```. This PR minimizes the use of locks, which are now only needed the first time a given TPluginHandler is called for various initialization steps. This change now completely eliminates the use of the global write lock during RDF event loops also for files read from xrootd and finishes addressing https://github.com/root-project/root/issues/7710. For a simple test case:. Create the files:; ```cpp; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;; const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {; TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");; TTree *tree = new TTree(""tree"", """");; tree->Branch(""outval"", &outval);; for (unsigned int ientry = 0; ientry < nentries; ++ientry) {; tree->Fill();; }; tree->Write();; fout->Close();; }. }; ```. run the event loop:; ```python; import ROOT; ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""); chain.Add(""root://eoscms.cern.ch//store/cmst3/group/wmass/bendavid/iotestinput/test_*.root""). d = ROOT.ROOT.RDataFrame(chain); res = d.Sum(""outval""). resval = res.GetValue(); print(resval); ```. Testing with 256 threads:. before:; ```; Percent of CPU this job got: 1077%; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.82; ```. after:; ```; Percent of CPU this job got: 5626%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:54.89; ```; (in fact there is still some possible lock contention/parameter tuning within the xrootd client itself which could improve things further)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11631
https://github.com/root-project/root/pull/11631:747,Testability,test,testwrite,747,"When running RDF/TTreeProcessorMT with large numbers of threads and files with files on xrootd significant lock contention is still present through ```TPluginHandler::LoadPlugin()``` and ```TPluginHandler::ExecPlugin()``` which are called from ```TFile::Open()```. This PR minimizes the use of locks, which are now only needed the first time a given TPluginHandler is called for various initialization steps. This change now completely eliminates the use of the global write lock during RDF event loops also for files read from xrootd and finishes addressing https://github.com/root-project/root/issues/7710. For a simple test case:. Create the files:; ```cpp; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;; const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {; TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");; TTree *tree = new TTree(""tree"", """");; tree->Branch(""outval"", &outval);; for (unsigned int ientry = 0; ientry < nentries; ++ientry) {; tree->Fill();; }; tree->Write();; fout->Close();; }. }; ```. run the event loop:; ```python; import ROOT; ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""); chain.Add(""root://eoscms.cern.ch//store/cmst3/group/wmass/bendavid/iotestinput/test_*.root""). d = ROOT.ROOT.RDataFrame(chain); res = d.Sum(""outval""). resval = res.GetValue(); print(resval); ```. Testing with 256 threads:. before:; ```; Percent of CPU this job got: 1077%; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.82; ```. after:; ```; Percent of CPU this job got: 5626%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:54.89; ```; (in fact there is still some possible lock contention/parameter tuning within the xrootd client itself which could improve things further)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11631
https://github.com/root-project/root/pull/11631:1490,Testability,Test,Testing,1490,"When running RDF/TTreeProcessorMT with large numbers of threads and files with files on xrootd significant lock contention is still present through ```TPluginHandler::LoadPlugin()``` and ```TPluginHandler::ExecPlugin()``` which are called from ```TFile::Open()```. This PR minimizes the use of locks, which are now only needed the first time a given TPluginHandler is called for various initialization steps. This change now completely eliminates the use of the global write lock during RDF event loops also for files read from xrootd and finishes addressing https://github.com/root-project/root/issues/7710. For a simple test case:. Create the files:; ```cpp; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;; const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {; TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");; TTree *tree = new TTree(""tree"", """");; tree->Branch(""outval"", &outval);; for (unsigned int ientry = 0; ientry < nentries; ++ientry) {; tree->Fill();; }; tree->Write();; fout->Close();; }. }; ```. run the event loop:; ```python; import ROOT; ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""); chain.Add(""root://eoscms.cern.ch//store/cmst3/group/wmass/bendavid/iotestinput/test_*.root""). d = ROOT.ROOT.RDataFrame(chain); res = d.Sum(""outval""). resval = res.GetValue(); print(resval); ```. Testing with 256 threads:. before:; ```; Percent of CPU this job got: 1077%; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.82; ```. after:; ```; Percent of CPU this job got: 5626%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:54.89; ```; (in fact there is still some possible lock contention/parameter tuning within the xrootd client itself which could improve things further)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11631
https://github.com/root-project/root/pull/11631:615,Usability,simpl,simple,615,"When running RDF/TTreeProcessorMT with large numbers of threads and files with files on xrootd significant lock contention is still present through ```TPluginHandler::LoadPlugin()``` and ```TPluginHandler::ExecPlugin()``` which are called from ```TFile::Open()```. This PR minimizes the use of locks, which are now only needed the first time a given TPluginHandler is called for various initialization steps. This change now completely eliminates the use of the global write lock during RDF event loops also for files read from xrootd and finishes addressing https://github.com/root-project/root/issues/7710. For a simple test case:. Create the files:; ```cpp; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;; const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {; TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");; TTree *tree = new TTree(""tree"", """");; tree->Branch(""outval"", &outval);; for (unsigned int ientry = 0; ientry < nentries; ++ientry) {; tree->Fill();; }; tree->Write();; fout->Close();; }. }; ```. run the event loop:; ```python; import ROOT; ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""); chain.Add(""root://eoscms.cern.ch//store/cmst3/group/wmass/bendavid/iotestinput/test_*.root""). d = ROOT.ROOT.RDataFrame(chain); res = d.Sum(""outval""). resval = res.GetValue(); print(resval); ```. Testing with 256 threads:. before:; ```; Percent of CPU this job got: 1077%; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.82; ```. after:; ```; Percent of CPU this job got: 5626%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:54.89; ```; (in fact there is still some possible lock contention/parameter tuning within the xrootd client itself which could improve things further)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11631
https://github.com/root-project/root/pull/11632:392,Deployability,install,install,392,"# This Pull request:. ## Changes or fixes:. - The `CMAKE_GENERATOR_PLATFORM` is only set when manually specified with `cmake -A <platform>`. The `CMAKE_SIZEOF_VOID_P` variable is set automatically by the `project()` call (and it's used elsewhere in the code). This also breaks building with Ninja for Windows x64; - The `ClingTargets.cmake` where no correctly generated when running `cmake --install` on Cling. It looks like the `CLING_HAS_EXPORTS` was removed at some point, but the packaging code was never updated. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes # . Closes https://github.com/root-project/cling/issues/454",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11632
https://github.com/root-project/root/pull/11632:509,Deployability,update,updated,509,"# This Pull request:. ## Changes or fixes:. - The `CMAKE_GENERATOR_PLATFORM` is only set when manually specified with `cmake -A <platform>`. The `CMAKE_SIZEOF_VOID_P` variable is set automatically by the `project()` call (and it's used elsewhere in the code). This also breaks building with Ninja for Windows x64; - The `ClingTargets.cmake` where no correctly generated when running `cmake --install` on Cling. It looks like the `CLING_HAS_EXPORTS` was removed at some point, but the packaging code was never updated. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes # . Closes https://github.com/root-project/cling/issues/454",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11632
https://github.com/root-project/root/pull/11632:569,Deployability,update,updated,569,"# This Pull request:. ## Changes or fixes:. - The `CMAKE_GENERATOR_PLATFORM` is only set when manually specified with `cmake -A <platform>`. The `CMAKE_SIZEOF_VOID_P` variable is set automatically by the `project()` call (and it's used elsewhere in the code). This also breaks building with Ninja for Windows x64; - The `ClingTargets.cmake` where no correctly generated when running `cmake --install` on Cling. It looks like the `CLING_HAS_EXPORTS` was removed at some point, but the packaging code was never updated. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes # . Closes https://github.com/root-project/cling/issues/454",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11632
https://github.com/root-project/root/pull/11632:167,Modifiability,variab,variable,167,"# This Pull request:. ## Changes or fixes:. - The `CMAKE_GENERATOR_PLATFORM` is only set when manually specified with `cmake -A <platform>`. The `CMAKE_SIZEOF_VOID_P` variable is set automatically by the `project()` call (and it's used elsewhere in the code). This also breaks building with Ninja for Windows x64; - The `ClingTargets.cmake` where no correctly generated when running `cmake --install` on Cling. It looks like the `CLING_HAS_EXPORTS` was removed at some point, but the packaging code was never updated. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes # . Closes https://github.com/root-project/cling/issues/454",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11632
https://github.com/root-project/root/pull/11632:539,Testability,test,tested,539,"# This Pull request:. ## Changes or fixes:. - The `CMAKE_GENERATOR_PLATFORM` is only set when manually specified with `cmake -A <platform>`. The `CMAKE_SIZEOF_VOID_P` variable is set automatically by the `project()` call (and it's used elsewhere in the code). This also breaks building with Ninja for Windows x64; - The `ClingTargets.cmake` where no correctly generated when running `cmake --install` on Cling. It looks like the `CLING_HAS_EXPORTS` was removed at some point, but the packaging code was never updated. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes # . Closes https://github.com/root-project/cling/issues/454",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11632
https://github.com/root-project/root/issues/11634:0,Modifiability,Extend,Extend,0,Extend the [TGaxis](https://root.cern/doc/master/classTGaxis.html) so that nice “arrows” could be added on its ends.; As requested [here](https://root-forum.cern.ch/t/how-to-change-the-position-of-axes-of-a-graph/51970/16):,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11634
https://github.com/root-project/root/pull/11635:1750,Testability,test,tests,1750,"# This Pull request:. Fix the following issue in SOFIE:. ```; n file included from /usr/include/c++/12.2.0/vector:70,; from /home/ahmat/cern/root/tmva/sofie/inc/TMVA/RModel.hxx:6,; from /home/ahmat/cern/root/tmva/sofie_parsers/inc/TMVA/RModelParser_ONNX.hxx:4,; from /home/ahmat/cern/root/tmva/sofie_parsers/src/ParseShape.cxx:1:; In member function ‘std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {long unsigned int}; _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>]’,; inlined from ‘void std::vector<_Tp, _Alloc>::push_back(value_type&&) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>]’ at /usr/include/c++/12.2.0/bits/stl_vector.h:1294:21,; inlined from ‘virtual std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Shape::ShapeInference(std::vector<std::vector<long unsigned int> >)’ at /home/ahmat/cern/root/tmva/sofie/inc/TMVA/ROperator_Shape.hxx:42:23:; /usr/include/c++/12.2.0/bits/vector.tcc:123:28: warning: ‘this’ pointer is null [-Wnonnull]; 123 | _M_realloc_insert(end(), std::forward<_Args>(__args)...);; | ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/12.2.0/bits/vector.tcc: In member function ‘virtual std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Shape::ShapeInference(std::vector<std::vector<long unsigned int> >)’:; /usr/include/c++/12.2.0/bits/vector.tcc:439:7: note: in a call to non-static member function ‘void std::vector<_Tp, _Alloc>::_M_realloc_insert(iterator, _Args&& ...) [with _Args = {long unsigned int}; _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>]’; 439 | vector<_Tp, _Alloc>::. ... ```. Now the tests in tmva/sofie/test/TestCustonModelsFromONNX.cxx can be build with gcc. The others tests still fail. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11635
https://github.com/root-project/root/pull/11635:1770,Testability,test,test,1770,"# This Pull request:. Fix the following issue in SOFIE:. ```; n file included from /usr/include/c++/12.2.0/vector:70,; from /home/ahmat/cern/root/tmva/sofie/inc/TMVA/RModel.hxx:6,; from /home/ahmat/cern/root/tmva/sofie_parsers/inc/TMVA/RModelParser_ONNX.hxx:4,; from /home/ahmat/cern/root/tmva/sofie_parsers/src/ParseShape.cxx:1:; In member function ‘std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {long unsigned int}; _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>]’,; inlined from ‘void std::vector<_Tp, _Alloc>::push_back(value_type&&) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>]’ at /usr/include/c++/12.2.0/bits/stl_vector.h:1294:21,; inlined from ‘virtual std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Shape::ShapeInference(std::vector<std::vector<long unsigned int> >)’ at /home/ahmat/cern/root/tmva/sofie/inc/TMVA/ROperator_Shape.hxx:42:23:; /usr/include/c++/12.2.0/bits/vector.tcc:123:28: warning: ‘this’ pointer is null [-Wnonnull]; 123 | _M_realloc_insert(end(), std::forward<_Args>(__args)...);; | ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/12.2.0/bits/vector.tcc: In member function ‘virtual std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Shape::ShapeInference(std::vector<std::vector<long unsigned int> >)’:; /usr/include/c++/12.2.0/bits/vector.tcc:439:7: note: in a call to non-static member function ‘void std::vector<_Tp, _Alloc>::_M_realloc_insert(iterator, _Args&& ...) [with _Args = {long unsigned int}; _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>]’; 439 | vector<_Tp, _Alloc>::. ... ```. Now the tests in tmva/sofie/test/TestCustonModelsFromONNX.cxx can be build with gcc. The others tests still fail. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11635
https://github.com/root-project/root/pull/11635:1775,Testability,Test,TestCustonModelsFromONNX,1775,"# This Pull request:. Fix the following issue in SOFIE:. ```; n file included from /usr/include/c++/12.2.0/vector:70,; from /home/ahmat/cern/root/tmva/sofie/inc/TMVA/RModel.hxx:6,; from /home/ahmat/cern/root/tmva/sofie_parsers/inc/TMVA/RModelParser_ONNX.hxx:4,; from /home/ahmat/cern/root/tmva/sofie_parsers/src/ParseShape.cxx:1:; In member function ‘std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {long unsigned int}; _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>]’,; inlined from ‘void std::vector<_Tp, _Alloc>::push_back(value_type&&) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>]’ at /usr/include/c++/12.2.0/bits/stl_vector.h:1294:21,; inlined from ‘virtual std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Shape::ShapeInference(std::vector<std::vector<long unsigned int> >)’ at /home/ahmat/cern/root/tmva/sofie/inc/TMVA/ROperator_Shape.hxx:42:23:; /usr/include/c++/12.2.0/bits/vector.tcc:123:28: warning: ‘this’ pointer is null [-Wnonnull]; 123 | _M_realloc_insert(end(), std::forward<_Args>(__args)...);; | ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/12.2.0/bits/vector.tcc: In member function ‘virtual std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Shape::ShapeInference(std::vector<std::vector<long unsigned int> >)’:; /usr/include/c++/12.2.0/bits/vector.tcc:439:7: note: in a call to non-static member function ‘void std::vector<_Tp, _Alloc>::_M_realloc_insert(iterator, _Args&& ...) [with _Args = {long unsigned int}; _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>]’; 439 | vector<_Tp, _Alloc>::. ... ```. Now the tests in tmva/sofie/test/TestCustonModelsFromONNX.cxx can be build with gcc. The others tests still fail. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11635
https://github.com/root-project/root/pull/11635:1838,Testability,test,tests,1838,"# This Pull request:. Fix the following issue in SOFIE:. ```; n file included from /usr/include/c++/12.2.0/vector:70,; from /home/ahmat/cern/root/tmva/sofie/inc/TMVA/RModel.hxx:6,; from /home/ahmat/cern/root/tmva/sofie_parsers/inc/TMVA/RModelParser_ONNX.hxx:4,; from /home/ahmat/cern/root/tmva/sofie_parsers/src/ParseShape.cxx:1:; In member function ‘std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {long unsigned int}; _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>]’,; inlined from ‘void std::vector<_Tp, _Alloc>::push_back(value_type&&) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>]’ at /usr/include/c++/12.2.0/bits/stl_vector.h:1294:21,; inlined from ‘virtual std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Shape::ShapeInference(std::vector<std::vector<long unsigned int> >)’ at /home/ahmat/cern/root/tmva/sofie/inc/TMVA/ROperator_Shape.hxx:42:23:; /usr/include/c++/12.2.0/bits/vector.tcc:123:28: warning: ‘this’ pointer is null [-Wnonnull]; 123 | _M_realloc_insert(end(), std::forward<_Args>(__args)...);; | ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/12.2.0/bits/vector.tcc: In member function ‘virtual std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Shape::ShapeInference(std::vector<std::vector<long unsigned int> >)’:; /usr/include/c++/12.2.0/bits/vector.tcc:439:7: note: in a call to non-static member function ‘void std::vector<_Tp, _Alloc>::_M_realloc_insert(iterator, _Args&& ...) [with _Args = {long unsigned int}; _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>]’; 439 | vector<_Tp, _Alloc>::. ... ```. Now the tests in tmva/sofie/test/TestCustonModelsFromONNX.cxx can be build with gcc. The others tests still fail. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11635
https://github.com/root-project/root/pull/11635:1862,Testability,test,tested,1862,"# This Pull request:. Fix the following issue in SOFIE:. ```; n file included from /usr/include/c++/12.2.0/vector:70,; from /home/ahmat/cern/root/tmva/sofie/inc/TMVA/RModel.hxx:6,; from /home/ahmat/cern/root/tmva/sofie_parsers/inc/TMVA/RModelParser_ONNX.hxx:4,; from /home/ahmat/cern/root/tmva/sofie_parsers/src/ParseShape.cxx:1:; In member function ‘std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {long unsigned int}; _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>]’,; inlined from ‘void std::vector<_Tp, _Alloc>::push_back(value_type&&) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>]’ at /usr/include/c++/12.2.0/bits/stl_vector.h:1294:21,; inlined from ‘virtual std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Shape::ShapeInference(std::vector<std::vector<long unsigned int> >)’ at /home/ahmat/cern/root/tmva/sofie/inc/TMVA/ROperator_Shape.hxx:42:23:; /usr/include/c++/12.2.0/bits/vector.tcc:123:28: warning: ‘this’ pointer is null [-Wnonnull]; 123 | _M_realloc_insert(end(), std::forward<_Args>(__args)...);; | ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/12.2.0/bits/vector.tcc: In member function ‘virtual std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Shape::ShapeInference(std::vector<std::vector<long unsigned int> >)’:; /usr/include/c++/12.2.0/bits/vector.tcc:439:7: note: in a call to non-static member function ‘void std::vector<_Tp, _Alloc>::_M_realloc_insert(iterator, _Args&& ...) [with _Args = {long unsigned int}; _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>]’; 439 | vector<_Tp, _Alloc>::. ... ```. Now the tests in tmva/sofie/test/TestCustonModelsFromONNX.cxx can be build with gcc. The others tests still fail. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11635
https://github.com/root-project/root/issues/11637:11,Testability,test,testing,11,"Hi,; while testing root master ( commit a0d62ca8ad ) in to CMSSW we noticed that `RooAddPdf::fitTo()` now very slow. The [test](https://cmssdt.cern.ch/SDT/cgi-bin/logreader/el8_amd64_gcc10/CMSSW_12_6_ROOT626_X_2022-10-25-2300/unitTestLogs/DQMOffline/Alignment#/) takes 6 mins for root 6.24 and 6.26 but for root master it takes over an hour ( and still does not finish). Running under GDB shows [this stacktrace](https://muzaffar.web.cern.ch/master-RooAddPdf-fitTo.txt) . Any idea what has changed in root master which is causing this slowness?. https://github.com/cms-sw/cmssw/blob/master/DQMOffline/Alignment/src/DiMuonMassBiasClient.cc#L189 is call which is very slow now as compare to root 6.24/6.26. Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11637
https://github.com/root-project/root/issues/11637:122,Testability,test,test,122,"Hi,; while testing root master ( commit a0d62ca8ad ) in to CMSSW we noticed that `RooAddPdf::fitTo()` now very slow. The [test](https://cmssdt.cern.ch/SDT/cgi-bin/logreader/el8_amd64_gcc10/CMSSW_12_6_ROOT626_X_2022-10-25-2300/unitTestLogs/DQMOffline/Alignment#/) takes 6 mins for root 6.24 and 6.26 but for root master it takes over an hour ( and still does not finish). Running under GDB shows [this stacktrace](https://muzaffar.web.cern.ch/master-RooAddPdf-fitTo.txt) . Any idea what has changed in root master which is causing this slowness?. https://github.com/cms-sw/cmssw/blob/master/DQMOffline/Alignment/src/DiMuonMassBiasClient.cc#L189 is call which is very slow now as compare to root 6.24/6.26. Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11637
https://github.com/root-project/root/issues/11637:163,Testability,log,logreader,163,"Hi,; while testing root master ( commit a0d62ca8ad ) in to CMSSW we noticed that `RooAddPdf::fitTo()` now very slow. The [test](https://cmssdt.cern.ch/SDT/cgi-bin/logreader/el8_amd64_gcc10/CMSSW_12_6_ROOT626_X_2022-10-25-2300/unitTestLogs/DQMOffline/Alignment#/) takes 6 mins for root 6.24 and 6.26 but for root master it takes over an hour ( and still does not finish). Running under GDB shows [this stacktrace](https://muzaffar.web.cern.ch/master-RooAddPdf-fitTo.txt) . Any idea what has changed in root master which is causing this slowness?. https://github.com/cms-sw/cmssw/blob/master/DQMOffline/Alignment/src/DiMuonMassBiasClient.cc#L189 is call which is very slow now as compare to root 6.24/6.26. Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11637
https://github.com/root-project/root/pull/11639:116,Integrability,rout,routines,116,## This Pull request:; Use the member functions GetBlasRoutines and GetStdLibs in the operators to specify the blas routines and the standard library headers needed to compile and run the generated code. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11639
https://github.com/root-project/root/pull/11639:210,Testability,test,tested,210,## This Pull request:; Use the member functions GetBlasRoutines and GetStdLibs in the operators to specify the blas routines and the standard library headers needed to compile and run the generated code. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11639
https://github.com/root-project/root/pull/11641:102,Deployability,update,updated,102,## This Pull request:; Register operators in the constructor of RModelParser_ONNX so that they can be updated when RegisterOperator is called with the name of an existing operator. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11641
https://github.com/root-project/root/pull/11641:202,Testability,test,tested,202,## This Pull request:; Register operators in the constructor of RModelParser_ONNX so that they can be updated when RegisterOperator is called with the name of an existing operator. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11641
https://github.com/root-project/root/pull/11642:323,Performance,perform,performance,323,## This Pull request:; Broadcast the bias of Conv to ouput channels x output depth x output height x output width and add it to the output of each batch inside the loop. This makes it faster for Conv models with large batch size and especially for models with large input images and large batch size. It doesn't affect the performance of SOFIE for single event inference. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11642
https://github.com/root-project/root/pull/11642:378,Testability,test,tested,378,## This Pull request:; Broadcast the bias of Conv to ouput channels x output depth x output height x output width and add it to the output of each batch inside the loop. This makes it faster for Conv models with large batch size and especially for models with large input images and large batch size. It doesn't affect the performance of SOFIE for single event inference. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11642
https://github.com/root-project/root/pull/11643:68,Availability,error,error,68,When run in parallel they delete eachother's files:. cc1plus: fatal error: /builddir/build/BUILD/root-6.26.08/redhat-linux-build/runtutorials/RooCFAuto000Pdf_cxx_ACLiC_dict.cxx: No such file or directory compilation terminated.; /usr/bin/ld: cannot find /builddir/build/BUILD/root-6.26.08/redhat-linux-build/runtutorials/RooCFAuto000Pdf_cxx_ACLiC_dict.o: No such file or directory; collect2: error: ld returned 1 exit status,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11643
https://github.com/root-project/root/pull/11643:392,Availability,error,error,392,When run in parallel they delete eachother's files:. cc1plus: fatal error: /builddir/build/BUILD/root-6.26.08/redhat-linux-build/runtutorials/RooCFAuto000Pdf_cxx_ACLiC_dict.cxx: No such file or directory compilation terminated.; /usr/bin/ld: cannot find /builddir/build/BUILD/root-6.26.08/redhat-linux-build/runtutorials/RooCFAuto000Pdf_cxx_ACLiC_dict.o: No such file or directory; collect2: error: ld returned 1 exit status,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11643
https://github.com/root-project/root/pull/11644:224,Deployability,patch,patch,224,"In a meeting in IT I saw that ~200PB/year are being read from the `eoshome` instance via fuse, and I thought that maybe ROOT at least could try to do something smart and just redirect fuse traffic to XRootD if possible. The patch in this pull request does just that. When I talked to Axel about making this work, we wanted the redirection to not happen when using `file://file.root`, but it created some inconsistencies when using `TFile::Open` vs using `TChain` so the final implementation always attempts to redirect. Below is a demo session of ROOT opening a file on EOS with (a former version of) the patch:; ```sh; $ pwd; /eos/home-a/amadio; $ ls *.root; Run2012BC_DoubleMuParked_Muons.root; $ root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 28 2022, 09:49:15 |; | From heads/redirect-xrootd@v6-09-01-24773-gd85df4c5e9 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-15) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f1 = TFile::Open(""file://Run2012BC_DoubleMuParked_Muons.root"");; root [1] auto f2 = TFile::Open(""Run2012BC_DoubleMuParked_Muons.root"");; root [2] f1->GetName(); (const char *) ""Run2012BC_DoubleMuParked_Muons.root""; root [3] f2->GetName(); (const char *) ""root://eoshome-a.cern.ch//eos/user/a/amadio/Run2012BC_DoubleMuParked_Muons.root""; root [4] .q; $; ```; and with a slightly modified `df102_NanoAODDimuonAnalysis` tutorial to avoid `TChain`:; ```diff; void df102_NanoAODDimuonAnalysis(const char* filename); {; // Enable multi-threading; ROOT::EnableImplicitMT();; ; - // std::cout << ""Using filename: "" << filename << std::endl;; + auto f = TFile::Open(filename);; + auto t = f->Get<TTree>(""Events"");; ; - ROOT::RDataFrame df(""Events"", filename);; + ROOT::RDataFrame df(*t);; ```. I go",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11644
https://github.com/root-project/root/pull/11644:605,Deployability,patch,patch,605,"In a meeting in IT I saw that ~200PB/year are being read from the `eoshome` instance via fuse, and I thought that maybe ROOT at least could try to do something smart and just redirect fuse traffic to XRootD if possible. The patch in this pull request does just that. When I talked to Axel about making this work, we wanted the redirection to not happen when using `file://file.root`, but it created some inconsistencies when using `TFile::Open` vs using `TChain` so the final implementation always attempts to redirect. Below is a demo session of ROOT opening a file on EOS with (a former version of) the patch:; ```sh; $ pwd; /eos/home-a/amadio; $ ls *.root; Run2012BC_DoubleMuParked_Muons.root; $ root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 28 2022, 09:49:15 |; | From heads/redirect-xrootd@v6-09-01-24773-gd85df4c5e9 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-15) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f1 = TFile::Open(""file://Run2012BC_DoubleMuParked_Muons.root"");; root [1] auto f2 = TFile::Open(""Run2012BC_DoubleMuParked_Muons.root"");; root [2] f1->GetName(); (const char *) ""Run2012BC_DoubleMuParked_Muons.root""; root [3] f2->GetName(); (const char *) ""root://eoshome-a.cern.ch//eos/user/a/amadio/Run2012BC_DoubleMuParked_Muons.root""; root [4] .q; $; ```; and with a slightly modified `df102_NanoAODDimuonAnalysis` tutorial to avoid `TChain`:; ```diff; void df102_NanoAODDimuonAnalysis(const char* filename); {; // Enable multi-threading; ROOT::EnableImplicitMT();; ; - // std::cout << ""Using filename: "" << filename << std::endl;; + auto f = TFile::Open(filename);; + auto t = f->Get<TTree>(""Events"");; ; - ROOT::RDataFrame df(""Events"", filename);; + ROOT::RDataFrame df(*t);; ```. I go",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11644
https://github.com/root-project/root/pull/11644:2730,Deployability,patch,patch,2730,"direct-xrootd@v6-09-01-24773-gd85df4c5e9 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-15) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f1 = TFile::Open(""file://Run2012BC_DoubleMuParked_Muons.root"");; root [1] auto f2 = TFile::Open(""Run2012BC_DoubleMuParked_Muons.root"");; root [2] f1->GetName(); (const char *) ""Run2012BC_DoubleMuParked_Muons.root""; root [3] f2->GetName(); (const char *) ""root://eoshome-a.cern.ch//eos/user/a/amadio/Run2012BC_DoubleMuParked_Muons.root""; root [4] .q; $; ```; and with a slightly modified `df102_NanoAODDimuonAnalysis` tutorial to avoid `TChain`:; ```diff; void df102_NanoAODDimuonAnalysis(const char* filename); {; // Enable multi-threading; ROOT::EnableImplicitMT();; ; - // std::cout << ""Using filename: "" << filename << std::endl;; + auto f = TFile::Open(filename);; + auto t = f->Get<TTree>(""Events"");; ; - ROOT::RDataFrame df(""Events"", filename);; + ROOT::RDataFrame df(*t);; ```. I got the following:. ```sh; $ time ./dimuon file://Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 13.34; $ time ./dimuon Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 8.81; $; ```. **Note:** With the final version of the patch, instead of using `file://`, which now does not disable the redirection anymore, one should add `TFile.CrossProtocolRedirects: no` to their `rootrc` configuration file in order to disable this feature (I checked that it works).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11644
https://github.com/root-project/root/pull/11644:2885,Deployability,configurat,configuration,2885,"direct-xrootd@v6-09-01-24773-gd85df4c5e9 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-15) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f1 = TFile::Open(""file://Run2012BC_DoubleMuParked_Muons.root"");; root [1] auto f2 = TFile::Open(""Run2012BC_DoubleMuParked_Muons.root"");; root [2] f1->GetName(); (const char *) ""Run2012BC_DoubleMuParked_Muons.root""; root [3] f2->GetName(); (const char *) ""root://eoshome-a.cern.ch//eos/user/a/amadio/Run2012BC_DoubleMuParked_Muons.root""; root [4] .q; $; ```; and with a slightly modified `df102_NanoAODDimuonAnalysis` tutorial to avoid `TChain`:; ```diff; void df102_NanoAODDimuonAnalysis(const char* filename); {; // Enable multi-threading; ROOT::EnableImplicitMT();; ; - // std::cout << ""Using filename: "" << filename << std::endl;; + auto f = TFile::Open(filename);; + auto t = f->Get<TTree>(""Events"");; ; - ROOT::RDataFrame df(""Events"", filename);; + ROOT::RDataFrame df(*t);; ```. I got the following:. ```sh; $ time ./dimuon file://Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 13.34; $ time ./dimuon Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 8.81; $; ```. **Note:** With the final version of the patch, instead of using `file://`, which now does not disable the redirection anymore, one should add `TFile.CrossProtocolRedirects: no` to their `rootrc` configuration file in order to disable this feature (I checked that it works).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11644
https://github.com/root-project/root/pull/11644:2277,Energy Efficiency,charge,charge,2277,"direct-xrootd@v6-09-01-24773-gd85df4c5e9 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-15) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f1 = TFile::Open(""file://Run2012BC_DoubleMuParked_Muons.root"");; root [1] auto f2 = TFile::Open(""Run2012BC_DoubleMuParked_Muons.root"");; root [2] f1->GetName(); (const char *) ""Run2012BC_DoubleMuParked_Muons.root""; root [3] f2->GetName(); (const char *) ""root://eoshome-a.cern.ch//eos/user/a/amadio/Run2012BC_DoubleMuParked_Muons.root""; root [4] .q; $; ```; and with a slightly modified `df102_NanoAODDimuonAnalysis` tutorial to avoid `TChain`:; ```diff; void df102_NanoAODDimuonAnalysis(const char* filename); {; // Enable multi-threading; ROOT::EnableImplicitMT();; ; - // std::cout << ""Using filename: "" << filename << std::endl;; + auto f = TFile::Open(filename);; + auto t = f->Get<TTree>(""Events"");; ; - ROOT::RDataFrame df(""Events"", filename);; + ROOT::RDataFrame df(*t);; ```. I got the following:. ```sh; $ time ./dimuon file://Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 13.34; $ time ./dimuon Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 8.81; $; ```. **Note:** With the final version of the patch, instead of using `file://`, which now does not disable the redirection anymore, one should add `TFile.CrossProtocolRedirects: no` to their `rootrc` configuration file in order to disable this feature (I checked that it works).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11644
https://github.com/root-project/root/pull/11644:2602,Energy Efficiency,charge,charge,2602,"direct-xrootd@v6-09-01-24773-gd85df4c5e9 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-15) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f1 = TFile::Open(""file://Run2012BC_DoubleMuParked_Muons.root"");; root [1] auto f2 = TFile::Open(""Run2012BC_DoubleMuParked_Muons.root"");; root [2] f1->GetName(); (const char *) ""Run2012BC_DoubleMuParked_Muons.root""; root [3] f2->GetName(); (const char *) ""root://eoshome-a.cern.ch//eos/user/a/amadio/Run2012BC_DoubleMuParked_Muons.root""; root [4] .q; $; ```; and with a slightly modified `df102_NanoAODDimuonAnalysis` tutorial to avoid `TChain`:; ```diff; void df102_NanoAODDimuonAnalysis(const char* filename); {; // Enable multi-threading; ROOT::EnableImplicitMT();; ; - // std::cout << ""Using filename: "" << filename << std::endl;; + auto f = TFile::Open(filename);; + auto t = f->Get<TTree>(""Events"");; ; - ROOT::RDataFrame df(""Events"", filename);; + ROOT::RDataFrame df(*t);; ```. I got the following:. ```sh; $ time ./dimuon file://Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 13.34; $ time ./dimuon Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 8.81; $; ```. **Note:** With the final version of the patch, instead of using `file://`, which now does not disable the redirection anymore, one should add `TFile.CrossProtocolRedirects: no` to their `rootrc` configuration file in order to disable this feature (I checked that it works).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11644
https://github.com/root-project/root/pull/11644:2885,Modifiability,config,configuration,2885,"direct-xrootd@v6-09-01-24773-gd85df4c5e9 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-15) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f1 = TFile::Open(""file://Run2012BC_DoubleMuParked_Muons.root"");; root [1] auto f2 = TFile::Open(""Run2012BC_DoubleMuParked_Muons.root"");; root [2] f1->GetName(); (const char *) ""Run2012BC_DoubleMuParked_Muons.root""; root [3] f2->GetName(); (const char *) ""root://eoshome-a.cern.ch//eos/user/a/amadio/Run2012BC_DoubleMuParked_Muons.root""; root [4] .q; $; ```; and with a slightly modified `df102_NanoAODDimuonAnalysis` tutorial to avoid `TChain`:; ```diff; void df102_NanoAODDimuonAnalysis(const char* filename); {; // Enable multi-threading; ROOT::EnableImplicitMT();; ; - // std::cout << ""Using filename: "" << filename << std::endl;; + auto f = TFile::Open(filename);; + auto t = f->Get<TTree>(""Events"");; ; - ROOT::RDataFrame df(""Events"", filename);; + ROOT::RDataFrame df(*t);; ```. I got the following:. ```sh; $ time ./dimuon file://Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 13.34; $ time ./dimuon Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 8.81; $; ```. **Note:** With the final version of the patch, instead of using `file://`, which now does not disable the redirection anymore, one should add `TFile.CrossProtocolRedirects: no` to their `rootrc` configuration file in order to disable this feature (I checked that it works).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11644
https://github.com/root-project/root/pull/11644:1736,Performance,multi-thread,multi-threading,1736,"| Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 28 2022, 09:49:15 |; | From heads/redirect-xrootd@v6-09-01-24773-gd85df4c5e9 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-15) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f1 = TFile::Open(""file://Run2012BC_DoubleMuParked_Muons.root"");; root [1] auto f2 = TFile::Open(""Run2012BC_DoubleMuParked_Muons.root"");; root [2] f1->GetName(); (const char *) ""Run2012BC_DoubleMuParked_Muons.root""; root [3] f2->GetName(); (const char *) ""root://eoshome-a.cern.ch//eos/user/a/amadio/Run2012BC_DoubleMuParked_Muons.root""; root [4] .q; $; ```; and with a slightly modified `df102_NanoAODDimuonAnalysis` tutorial to avoid `TChain`:; ```diff; void df102_NanoAODDimuonAnalysis(const char* filename); {; // Enable multi-threading; ROOT::EnableImplicitMT();; ; - // std::cout << ""Using filename: "" << filename << std::endl;; + auto f = TFile::Open(filename);; + auto t = f->Get<TTree>(""Events"");; ; - ROOT::RDataFrame df(""Events"", filename);; + ROOT::RDataFrame df(*t);; ```. I got the following:. ```sh; $ time ./dimuon file://Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 13.34; $ time ./dimuon Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 8.81; $; ```. **Note:** With the final version of the patch, instead of using `file://`, which now doe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11644
https://github.com/root-project/root/pull/11644:1641,Safety,avoid,avoid,1641,"| Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 28 2022, 09:49:15 |; | From heads/redirect-xrootd@v6-09-01-24773-gd85df4c5e9 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-15) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f1 = TFile::Open(""file://Run2012BC_DoubleMuParked_Muons.root"");; root [1] auto f2 = TFile::Open(""Run2012BC_DoubleMuParked_Muons.root"");; root [2] f1->GetName(); (const char *) ""Run2012BC_DoubleMuParked_Muons.root""; root [3] f2->GetName(); (const char *) ""root://eoshome-a.cern.ch//eos/user/a/amadio/Run2012BC_DoubleMuParked_Muons.root""; root [4] .q; $; ```; and with a slightly modified `df102_NanoAODDimuonAnalysis` tutorial to avoid `TChain`:; ```diff; void df102_NanoAODDimuonAnalysis(const char* filename); {; // Enable multi-threading; ROOT::EnableImplicitMT();; ; - // std::cout << ""Using filename: "" << filename << std::endl;; + auto f = TFile::Open(filename);; + auto t = f->Get<TTree>(""Events"");; ; - ROOT::RDataFrame df(""Events"", filename);; + ROOT::RDataFrame df(*t);; ```. I got the following:. ```sh; $ time ./dimuon file://Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 13.34; $ time ./dimuon Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 8.81; $; ```. **Note:** With the final version of the patch, instead of using `file://`, which now doe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11644
https://github.com/root-project/root/pull/11646:508,Availability,error,errors,508,The bogus XML designation causes the file to fail XML diagnostic tests. Test description:; Check that XML files included in the RPM payload are well-formed. ======================================== Test Output ========================================. xml:; ----. Result: VERIFY; 1) /usr/share/doc/root/tutorials/xml/person.dtd is not a well-formed XML file in root-tutorial on noarch. Waiver Authorization: Anyone. Details:; Extra content at the end of the document. Suggested Remedy:; Correct the reported errors in the XML document,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11646
https://github.com/root-project/root/pull/11646:393,Security,Authoriz,Authorization,393,The bogus XML designation causes the file to fail XML diagnostic tests. Test description:; Check that XML files included in the RPM payload are well-formed. ======================================== Test Output ========================================. xml:; ----. Result: VERIFY; 1) /usr/share/doc/root/tutorials/xml/person.dtd is not a well-formed XML file in root-tutorial on noarch. Waiver Authorization: Anyone. Details:; Extra content at the end of the document. Suggested Remedy:; Correct the reported errors in the XML document,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11646
https://github.com/root-project/root/pull/11646:65,Testability,test,tests,65,The bogus XML designation causes the file to fail XML diagnostic tests. Test description:; Check that XML files included in the RPM payload are well-formed. ======================================== Test Output ========================================. xml:; ----. Result: VERIFY; 1) /usr/share/doc/root/tutorials/xml/person.dtd is not a well-formed XML file in root-tutorial on noarch. Waiver Authorization: Anyone. Details:; Extra content at the end of the document. Suggested Remedy:; Correct the reported errors in the XML document,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11646
https://github.com/root-project/root/pull/11646:72,Testability,Test,Test,72,The bogus XML designation causes the file to fail XML diagnostic tests. Test description:; Check that XML files included in the RPM payload are well-formed. ======================================== Test Output ========================================. xml:; ----. Result: VERIFY; 1) /usr/share/doc/root/tutorials/xml/person.dtd is not a well-formed XML file in root-tutorial on noarch. Waiver Authorization: Anyone. Details:; Extra content at the end of the document. Suggested Remedy:; Correct the reported errors in the XML document,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11646
https://github.com/root-project/root/pull/11646:198,Testability,Test,Test,198,The bogus XML designation causes the file to fail XML diagnostic tests. Test description:; Check that XML files included in the RPM payload are well-formed. ======================================== Test Output ========================================. xml:; ----. Result: VERIFY; 1) /usr/share/doc/root/tutorials/xml/person.dtd is not a well-formed XML file in root-tutorial on noarch. Waiver Authorization: Anyone. Details:; Extra content at the end of the document. Suggested Remedy:; Correct the reported errors in the XML document,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11646
https://github.com/root-project/root/pull/11648:11,Usability,clear,clear,11,It was not clear in Doxygen which methods are not implemented in TH2Poly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11648
https://github.com/root-project/root/pull/11649:77,Availability,avail,available,77,Explicitly include `arrow/testing/builder.h` to make sure ArrayFromVector is available. Probably it was being included implicitly before.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11649
https://github.com/root-project/root/pull/11649:26,Testability,test,testing,26,Explicitly include `arrow/testing/builder.h` to make sure ArrayFromVector is available. Probably it was being included implicitly before.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11649
https://github.com/root-project/root/pull/11650:473,Deployability,update,updated,473,"# This Pull request:. ## Changes or fixes:. Adds some info on the special case where a user tries to make a new-style teststatistics based likelihood and requests to minimise it in serial mode with offsetting enabled. This case is currently not yet supported. The added comment in `RooMinimizer.cxx` explains in more detail why this does not work currently, and gives a suggestion for how to make this work in the future. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11650
https://github.com/root-project/root/pull/11650:118,Testability,test,teststatistics,118,"# This Pull request:. ## Changes or fixes:. Adds some info on the special case where a user tries to make a new-style teststatistics based likelihood and requests to minimise it in serial mode with offsetting enabled. This case is currently not yet supported. The added comment in `RooMinimizer.cxx` explains in more detail why this does not work currently, and gives a suggestion for how to make this work in the future. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11650
https://github.com/root-project/root/pull/11650:443,Testability,test,tested,443,"# This Pull request:. ## Changes or fixes:. Adds some info on the special case where a user tries to make a new-style teststatistics based likelihood and requests to minimise it in serial mode with offsetting enabled. This case is currently not yet supported. The added comment in `RooMinimizer.cxx` explains in more detail why this does not work currently, and gives a suggestion for how to make this work in the future. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11650
https://github.com/root-project/root/issues/11651:113,Availability,error,error,113,"- [x] Checked for duplicates. ### Describe the bug; Opening a file containing a `TTree` and then typing a syntax error at the same time as reading the tree (i.e. using the name of the `TKey` to access it) triggers the `Must not nest within unloading transaction` assert and terminates `root.exe`. . ### Expected behavior; Interpreter recovers. . ### To Reproduce; #### Prepare a file; ```; $ root -l; root [0] TFile *file = new TFile(""foo.root"", ""RECREATE"");; root [1] TTree *foo = new TTree(""t"",""t"");; root [2] foo->Write(); root [3] file->Close(); root [4] .q; ```; Open the file and read the tree in conjunction with a syntax error:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(=); ROOT_prompt_1:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_1:1:11: error: expected expression; t->Print(=); ^; root.exe: /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/interpreter/cling/lib/Interpreter/Transaction.cpp:98: void cling::Transaction::addNestedTransaction(cling::Transaction*): Assertion `!m_Unloading && ""Must not nest within unloading transaction""' failed.; ```; ROOT terminates. . Note that when issuing a correct command first, the interpreter recovers fine:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(); .... correct output ...; root [2] t->Print(=); ROOT_prompt_2:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_2:1:11: error: expected expression; t->Print(=); ^; root [3]; ```. So the issue seems to happen when an object is not yet in memory, but implicitly read from disk by being accessed via the name of the `TKey`. . ### Setup; 1. ROOT version: 6.26/08; 2. Operating system: Gentoo Linux; 3. How you obtained ROOT: `emerge root` (i.e. via package manager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11651
https://github.com/root-project/root/issues/11651:334,Availability,recover,recovers,334,"- [x] Checked for duplicates. ### Describe the bug; Opening a file containing a `TTree` and then typing a syntax error at the same time as reading the tree (i.e. using the name of the `TKey` to access it) triggers the `Must not nest within unloading transaction` assert and terminates `root.exe`. . ### Expected behavior; Interpreter recovers. . ### To Reproduce; #### Prepare a file; ```; $ root -l; root [0] TFile *file = new TFile(""foo.root"", ""RECREATE"");; root [1] TTree *foo = new TTree(""t"",""t"");; root [2] foo->Write(); root [3] file->Close(); root [4] .q; ```; Open the file and read the tree in conjunction with a syntax error:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(=); ROOT_prompt_1:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_1:1:11: error: expected expression; t->Print(=); ^; root.exe: /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/interpreter/cling/lib/Interpreter/Transaction.cpp:98: void cling::Transaction::addNestedTransaction(cling::Transaction*): Assertion `!m_Unloading && ""Must not nest within unloading transaction""' failed.; ```; ROOT terminates. . Note that when issuing a correct command first, the interpreter recovers fine:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(); .... correct output ...; root [2] t->Print(=); ROOT_prompt_2:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_2:1:11: error: expected expression; t->Print(=); ^; root [3]; ```. So the issue seems to happen when an object is not yet in memory, but implicitly read from disk by being accessed via the name of the `TKey`. . ### Setup; 1. ROOT version: 6.26/08; 2. Operating system: Gentoo Linux; 3. How you obtained ROOT: `emerge root` (i.e. via package manager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11651
https://github.com/root-project/root/issues/11651:629,Availability,error,error,629,"- [x] Checked for duplicates. ### Describe the bug; Opening a file containing a `TTree` and then typing a syntax error at the same time as reading the tree (i.e. using the name of the `TKey` to access it) triggers the `Must not nest within unloading transaction` assert and terminates `root.exe`. . ### Expected behavior; Interpreter recovers. . ### To Reproduce; #### Prepare a file; ```; $ root -l; root [0] TFile *file = new TFile(""foo.root"", ""RECREATE"");; root [1] TTree *foo = new TTree(""t"",""t"");; root [2] foo->Write(); root [3] file->Close(); root [4] .q; ```; Open the file and read the tree in conjunction with a syntax error:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(=); ROOT_prompt_1:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_1:1:11: error: expected expression; t->Print(=); ^; root.exe: /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/interpreter/cling/lib/Interpreter/Transaction.cpp:98: void cling::Transaction::addNestedTransaction(cling::Transaction*): Assertion `!m_Unloading && ""Must not nest within unloading transaction""' failed.; ```; ROOT terminates. . Note that when issuing a correct command first, the interpreter recovers fine:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(); .... correct output ...; root [2] t->Print(=); ROOT_prompt_2:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_2:1:11: error: expected expression; t->Print(=); ^; root [3]; ```. So the issue seems to happen when an object is not yet in memory, but implicitly read from disk by being accessed via the name of the `TKey`. . ### Setup; 1. ROOT version: 6.26/08; 2. Operating system: Gentoo Linux; 3. How you obtained ROOT: `emerge root` (i.e. via package manager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11651
https://github.com/root-project/root/issues/11651:780,Availability,error,error,780,"- [x] Checked for duplicates. ### Describe the bug; Opening a file containing a `TTree` and then typing a syntax error at the same time as reading the tree (i.e. using the name of the `TKey` to access it) triggers the `Must not nest within unloading transaction` assert and terminates `root.exe`. . ### Expected behavior; Interpreter recovers. . ### To Reproduce; #### Prepare a file; ```; $ root -l; root [0] TFile *file = new TFile(""foo.root"", ""RECREATE"");; root [1] TTree *foo = new TTree(""t"",""t"");; root [2] foo->Write(); root [3] file->Close(); root [4] .q; ```; Open the file and read the tree in conjunction with a syntax error:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(=); ROOT_prompt_1:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_1:1:11: error: expected expression; t->Print(=); ^; root.exe: /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/interpreter/cling/lib/Interpreter/Transaction.cpp:98: void cling::Transaction::addNestedTransaction(cling::Transaction*): Assertion `!m_Unloading && ""Must not nest within unloading transaction""' failed.; ```; ROOT terminates. . Note that when issuing a correct command first, the interpreter recovers fine:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(); .... correct output ...; root [2] t->Print(=); ROOT_prompt_2:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_2:1:11: error: expected expression; t->Print(=); ^; root [3]; ```. So the issue seems to happen when an object is not yet in memory, but implicitly read from disk by being accessed via the name of the `TKey`. . ### Setup; 1. ROOT version: 6.26/08; 2. Operating system: Gentoo Linux; 3. How you obtained ROOT: `emerge root` (i.e. via package manager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11651
https://github.com/root-project/root/issues/11651:844,Availability,error,error,844,"- [x] Checked for duplicates. ### Describe the bug; Opening a file containing a `TTree` and then typing a syntax error at the same time as reading the tree (i.e. using the name of the `TKey` to access it) triggers the `Must not nest within unloading transaction` assert and terminates `root.exe`. . ### Expected behavior; Interpreter recovers. . ### To Reproduce; #### Prepare a file; ```; $ root -l; root [0] TFile *file = new TFile(""foo.root"", ""RECREATE"");; root [1] TTree *foo = new TTree(""t"",""t"");; root [2] foo->Write(); root [3] file->Close(); root [4] .q; ```; Open the file and read the tree in conjunction with a syntax error:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(=); ROOT_prompt_1:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_1:1:11: error: expected expression; t->Print(=); ^; root.exe: /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/interpreter/cling/lib/Interpreter/Transaction.cpp:98: void cling::Transaction::addNestedTransaction(cling::Transaction*): Assertion `!m_Unloading && ""Must not nest within unloading transaction""' failed.; ```; ROOT terminates. . Note that when issuing a correct command first, the interpreter recovers fine:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(); .... correct output ...; root [2] t->Print(=); ROOT_prompt_2:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_2:1:11: error: expected expression; t->Print(=); ^; root [3]; ```. So the issue seems to happen when an object is not yet in memory, but implicitly read from disk by being accessed via the name of the `TKey`. . ### Setup; 1. ROOT version: 6.26/08; 2. Operating system: Gentoo Linux; 3. How you obtained ROOT: `emerge root` (i.e. via package manager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11651
https://github.com/root-project/root/issues/11651:1250,Availability,recover,recovers,1250,"- [x] Checked for duplicates. ### Describe the bug; Opening a file containing a `TTree` and then typing a syntax error at the same time as reading the tree (i.e. using the name of the `TKey` to access it) triggers the `Must not nest within unloading transaction` assert and terminates `root.exe`. . ### Expected behavior; Interpreter recovers. . ### To Reproduce; #### Prepare a file; ```; $ root -l; root [0] TFile *file = new TFile(""foo.root"", ""RECREATE"");; root [1] TTree *foo = new TTree(""t"",""t"");; root [2] foo->Write(); root [3] file->Close(); root [4] .q; ```; Open the file and read the tree in conjunction with a syntax error:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(=); ROOT_prompt_1:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_1:1:11: error: expected expression; t->Print(=); ^; root.exe: /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/interpreter/cling/lib/Interpreter/Transaction.cpp:98: void cling::Transaction::addNestedTransaction(cling::Transaction*): Assertion `!m_Unloading && ""Must not nest within unloading transaction""' failed.; ```; ROOT terminates. . Note that when issuing a correct command first, the interpreter recovers fine:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(); .... correct output ...; root [2] t->Print(=); ROOT_prompt_2:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_2:1:11: error: expected expression; t->Print(=); ^; root [3]; ```. So the issue seems to happen when an object is not yet in memory, but implicitly read from disk by being accessed via the name of the `TKey`. . ### Setup; 1. ROOT version: 6.26/08; 2. Operating system: Gentoo Linux; 3. How you obtained ROOT: `emerge root` (i.e. via package manager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11651
https://github.com/root-project/root/issues/11651:1455,Availability,error,error,1455,"- [x] Checked for duplicates. ### Describe the bug; Opening a file containing a `TTree` and then typing a syntax error at the same time as reading the tree (i.e. using the name of the `TKey` to access it) triggers the `Must not nest within unloading transaction` assert and terminates `root.exe`. . ### Expected behavior; Interpreter recovers. . ### To Reproduce; #### Prepare a file; ```; $ root -l; root [0] TFile *file = new TFile(""foo.root"", ""RECREATE"");; root [1] TTree *foo = new TTree(""t"",""t"");; root [2] foo->Write(); root [3] file->Close(); root [4] .q; ```; Open the file and read the tree in conjunction with a syntax error:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(=); ROOT_prompt_1:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_1:1:11: error: expected expression; t->Print(=); ^; root.exe: /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/interpreter/cling/lib/Interpreter/Transaction.cpp:98: void cling::Transaction::addNestedTransaction(cling::Transaction*): Assertion `!m_Unloading && ""Must not nest within unloading transaction""' failed.; ```; ROOT terminates. . Note that when issuing a correct command first, the interpreter recovers fine:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(); .... correct output ...; root [2] t->Print(=); ROOT_prompt_2:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_2:1:11: error: expected expression; t->Print(=); ^; root [3]; ```. So the issue seems to happen when an object is not yet in memory, but implicitly read from disk by being accessed via the name of the `TKey`. . ### Setup; 1. ROOT version: 6.26/08; 2. Operating system: Gentoo Linux; 3. How you obtained ROOT: `emerge root` (i.e. via package manager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11651
https://github.com/root-project/root/issues/11651:1519,Availability,error,error,1519,"- [x] Checked for duplicates. ### Describe the bug; Opening a file containing a `TTree` and then typing a syntax error at the same time as reading the tree (i.e. using the name of the `TKey` to access it) triggers the `Must not nest within unloading transaction` assert and terminates `root.exe`. . ### Expected behavior; Interpreter recovers. . ### To Reproduce; #### Prepare a file; ```; $ root -l; root [0] TFile *file = new TFile(""foo.root"", ""RECREATE"");; root [1] TTree *foo = new TTree(""t"",""t"");; root [2] foo->Write(); root [3] file->Close(); root [4] .q; ```; Open the file and read the tree in conjunction with a syntax error:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(=); ROOT_prompt_1:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_1:1:11: error: expected expression; t->Print(=); ^; root.exe: /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/interpreter/cling/lib/Interpreter/Transaction.cpp:98: void cling::Transaction::addNestedTransaction(cling::Transaction*): Assertion `!m_Unloading && ""Must not nest within unloading transaction""' failed.; ```; ROOT terminates. . Note that when issuing a correct command first, the interpreter recovers fine:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(); .... correct output ...; root [2] t->Print(=); ROOT_prompt_2:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_2:1:11: error: expected expression; t->Print(=); ^; root [3]; ```. So the issue seems to happen when an object is not yet in memory, but implicitly read from disk by being accessed via the name of the `TKey`. . ### Setup; 1. ROOT version: 6.26/08; 2. Operating system: Gentoo Linux; 3. How you obtained ROOT: `emerge root` (i.e. via package manager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11651
https://github.com/root-project/root/issues/11651:334,Safety,recover,recovers,334,"- [x] Checked for duplicates. ### Describe the bug; Opening a file containing a `TTree` and then typing a syntax error at the same time as reading the tree (i.e. using the name of the `TKey` to access it) triggers the `Must not nest within unloading transaction` assert and terminates `root.exe`. . ### Expected behavior; Interpreter recovers. . ### To Reproduce; #### Prepare a file; ```; $ root -l; root [0] TFile *file = new TFile(""foo.root"", ""RECREATE"");; root [1] TTree *foo = new TTree(""t"",""t"");; root [2] foo->Write(); root [3] file->Close(); root [4] .q; ```; Open the file and read the tree in conjunction with a syntax error:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(=); ROOT_prompt_1:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_1:1:11: error: expected expression; t->Print(=); ^; root.exe: /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/interpreter/cling/lib/Interpreter/Transaction.cpp:98: void cling::Transaction::addNestedTransaction(cling::Transaction*): Assertion `!m_Unloading && ""Must not nest within unloading transaction""' failed.; ```; ROOT terminates. . Note that when issuing a correct command first, the interpreter recovers fine:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(); .... correct output ...; root [2] t->Print(=); ROOT_prompt_2:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_2:1:11: error: expected expression; t->Print(=); ^; root [3]; ```. So the issue seems to happen when an object is not yet in memory, but implicitly read from disk by being accessed via the name of the `TKey`. . ### Setup; 1. ROOT version: 6.26/08; 2. Operating system: Gentoo Linux; 3. How you obtained ROOT: `emerge root` (i.e. via package manager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11651
https://github.com/root-project/root/issues/11651:1250,Safety,recover,recovers,1250,"- [x] Checked for duplicates. ### Describe the bug; Opening a file containing a `TTree` and then typing a syntax error at the same time as reading the tree (i.e. using the name of the `TKey` to access it) triggers the `Must not nest within unloading transaction` assert and terminates `root.exe`. . ### Expected behavior; Interpreter recovers. . ### To Reproduce; #### Prepare a file; ```; $ root -l; root [0] TFile *file = new TFile(""foo.root"", ""RECREATE"");; root [1] TTree *foo = new TTree(""t"",""t"");; root [2] foo->Write(); root [3] file->Close(); root [4] .q; ```; Open the file and read the tree in conjunction with a syntax error:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(=); ROOT_prompt_1:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_1:1:11: error: expected expression; t->Print(=); ^; root.exe: /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/interpreter/cling/lib/Interpreter/Transaction.cpp:98: void cling::Transaction::addNestedTransaction(cling::Transaction*): Assertion `!m_Unloading && ""Must not nest within unloading transaction""' failed.; ```; ROOT terminates. . Note that when issuing a correct command first, the interpreter recovers fine:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(); .... correct output ...; root [2] t->Print(=); ROOT_prompt_2:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_2:1:11: error: expected expression; t->Print(=); ^; root [3]; ```. So the issue seems to happen when an object is not yet in memory, but implicitly read from disk by being accessed via the name of the `TKey`. . ### Setup; 1. ROOT version: 6.26/08; 2. Operating system: Gentoo Linux; 3. How you obtained ROOT: `emerge root` (i.e. via package manager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11651
https://github.com/root-project/root/issues/11651:194,Security,access,access,194,"- [x] Checked for duplicates. ### Describe the bug; Opening a file containing a `TTree` and then typing a syntax error at the same time as reading the tree (i.e. using the name of the `TKey` to access it) triggers the `Must not nest within unloading transaction` assert and terminates `root.exe`. . ### Expected behavior; Interpreter recovers. . ### To Reproduce; #### Prepare a file; ```; $ root -l; root [0] TFile *file = new TFile(""foo.root"", ""RECREATE"");; root [1] TTree *foo = new TTree(""t"",""t"");; root [2] foo->Write(); root [3] file->Close(); root [4] .q; ```; Open the file and read the tree in conjunction with a syntax error:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(=); ROOT_prompt_1:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_1:1:11: error: expected expression; t->Print(=); ^; root.exe: /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/interpreter/cling/lib/Interpreter/Transaction.cpp:98: void cling::Transaction::addNestedTransaction(cling::Transaction*): Assertion `!m_Unloading && ""Must not nest within unloading transaction""' failed.; ```; ROOT terminates. . Note that when issuing a correct command first, the interpreter recovers fine:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(); .... correct output ...; root [2] t->Print(=); ROOT_prompt_2:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_2:1:11: error: expected expression; t->Print(=); ^; root [3]; ```. So the issue seems to happen when an object is not yet in memory, but implicitly read from disk by being accessed via the name of the `TKey`. . ### Setup; 1. ROOT version: 6.26/08; 2. Operating system: Gentoo Linux; 3. How you obtained ROOT: `emerge root` (i.e. via package manager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11651
https://github.com/root-project/root/issues/11651:1683,Security,access,accessed,1683,"- [x] Checked for duplicates. ### Describe the bug; Opening a file containing a `TTree` and then typing a syntax error at the same time as reading the tree (i.e. using the name of the `TKey` to access it) triggers the `Must not nest within unloading transaction` assert and terminates `root.exe`. . ### Expected behavior; Interpreter recovers. . ### To Reproduce; #### Prepare a file; ```; $ root -l; root [0] TFile *file = new TFile(""foo.root"", ""RECREATE"");; root [1] TTree *foo = new TTree(""t"",""t"");; root [2] foo->Write(); root [3] file->Close(); root [4] .q; ```; Open the file and read the tree in conjunction with a syntax error:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(=); ROOT_prompt_1:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_1:1:11: error: expected expression; t->Print(=); ^; root.exe: /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/interpreter/cling/lib/Interpreter/Transaction.cpp:98: void cling::Transaction::addNestedTransaction(cling::Transaction*): Assertion `!m_Unloading && ""Must not nest within unloading transaction""' failed.; ```; ROOT terminates. . Note that when issuing a correct command first, the interpreter recovers fine:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(); .... correct output ...; root [2] t->Print(=); ROOT_prompt_2:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_2:1:11: error: expected expression; t->Print(=); ^; root [3]; ```. So the issue seems to happen when an object is not yet in memory, but implicitly read from disk by being accessed via the name of the `TKey`. . ### Setup; 1. ROOT version: 6.26/08; 2. Operating system: Gentoo Linux; 3. How you obtained ROOT: `emerge root` (i.e. via package manager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11651
https://github.com/root-project/root/issues/11651:263,Testability,assert,assert,263,"- [x] Checked for duplicates. ### Describe the bug; Opening a file containing a `TTree` and then typing a syntax error at the same time as reading the tree (i.e. using the name of the `TKey` to access it) triggers the `Must not nest within unloading transaction` assert and terminates `root.exe`. . ### Expected behavior; Interpreter recovers. . ### To Reproduce; #### Prepare a file; ```; $ root -l; root [0] TFile *file = new TFile(""foo.root"", ""RECREATE"");; root [1] TTree *foo = new TTree(""t"",""t"");; root [2] foo->Write(); root [3] file->Close(); root [4] .q; ```; Open the file and read the tree in conjunction with a syntax error:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(=); ROOT_prompt_1:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_1:1:11: error: expected expression; t->Print(=); ^; root.exe: /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/interpreter/cling/lib/Interpreter/Transaction.cpp:98: void cling::Transaction::addNestedTransaction(cling::Transaction*): Assertion `!m_Unloading && ""Must not nest within unloading transaction""' failed.; ```; ROOT terminates. . Note that when issuing a correct command first, the interpreter recovers fine:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(); .... correct output ...; root [2] t->Print(=); ROOT_prompt_2:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_2:1:11: error: expected expression; t->Print(=); ^; root [3]; ```. So the issue seems to happen when an object is not yet in memory, but implicitly read from disk by being accessed via the name of the `TKey`. . ### Setup; 1. ROOT version: 6.26/08; 2. Operating system: Gentoo Linux; 3. How you obtained ROOT: `emerge root` (i.e. via package manager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11651
https://github.com/root-project/root/issues/11651:1080,Testability,Assert,Assertion,1080,"- [x] Checked for duplicates. ### Describe the bug; Opening a file containing a `TTree` and then typing a syntax error at the same time as reading the tree (i.e. using the name of the `TKey` to access it) triggers the `Must not nest within unloading transaction` assert and terminates `root.exe`. . ### Expected behavior; Interpreter recovers. . ### To Reproduce; #### Prepare a file; ```; $ root -l; root [0] TFile *file = new TFile(""foo.root"", ""RECREATE"");; root [1] TTree *foo = new TTree(""t"",""t"");; root [2] foo->Write(); root [3] file->Close(); root [4] .q; ```; Open the file and read the tree in conjunction with a syntax error:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(=); ROOT_prompt_1:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_1:1:11: error: expected expression; t->Print(=); ^; root.exe: /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/interpreter/cling/lib/Interpreter/Transaction.cpp:98: void cling::Transaction::addNestedTransaction(cling::Transaction*): Assertion `!m_Unloading && ""Must not nest within unloading transaction""' failed.; ```; ROOT terminates. . Note that when issuing a correct command first, the interpreter recovers fine:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(); .... correct output ...; root [2] t->Print(=); ROOT_prompt_2:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_2:1:11: error: expected expression; t->Print(=); ^; root [3]; ```. So the issue seems to happen when an object is not yet in memory, but implicitly read from disk by being accessed via the name of the `TKey`. . ### Setup; 1. ROOT version: 6.26/08; 2. Operating system: Gentoo Linux; 3. How you obtained ROOT: `emerge root` (i.e. via package manager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11651
https://github.com/root-project/root/pull/11652:249,Integrability,message,messages,249,"This Pull Request adds more speaking information to users to make warnings of the type; `delgam < 0 : first derivatives increasing along search line`; useful. Note that I do not have too much knowledge on the details of Minuit2, and the information messages of course reflect my state of knowledge. If someone else with more in-depth knowledge on Minuit2 could check that this is valid, that would of course be very valuable!. The motivation for this PR is that these warnings can hint to significant issues in the minimized function, however as a user, it is difficult to understand the problem or what to look for if one does not know how Minuit exactly works. Also they so far miss information needed to actually use these warnings to find problems with the minimized function. This commit adds explanatory text printed in loglevel `Info`, and a short discovery note in the old warnings. To demonstrate why this warning + info with the new `s0` and `p1` information is useful, this is an example where I encountered them in the wild and used its newly printed `s0` and `p1` information to plot the function between `s0` and `p1`, pointing to an issue in the likelihood function I use:. ![image](https://user-images.githubusercontent.com/31772910/199365936-6994973a-8946-4083-b1b9-da2f4f69cc6f.png). This commit also adds a link to the ""Tutorial"" that is referenced for documentation, since otherwise it is very non-trivial for inexperienced people to find it just based on its mention in a comment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11652
https://github.com/root-project/root/pull/11652:826,Testability,log,loglevel,826,"This Pull Request adds more speaking information to users to make warnings of the type; `delgam < 0 : first derivatives increasing along search line`; useful. Note that I do not have too much knowledge on the details of Minuit2, and the information messages of course reflect my state of knowledge. If someone else with more in-depth knowledge on Minuit2 could check that this is valid, that would of course be very valuable!. The motivation for this PR is that these warnings can hint to significant issues in the minimized function, however as a user, it is difficult to understand the problem or what to look for if one does not know how Minuit exactly works. Also they so far miss information needed to actually use these warnings to find problems with the minimized function. This commit adds explanatory text printed in loglevel `Info`, and a short discovery note in the old warnings. To demonstrate why this warning + info with the new `s0` and `p1` information is useful, this is an example where I encountered them in the wild and used its newly printed `s0` and `p1` information to plot the function between `s0` and `p1`, pointing to an issue in the likelihood function I use:. ![image](https://user-images.githubusercontent.com/31772910/199365936-6994973a-8946-4083-b1b9-da2f4f69cc6f.png). This commit also adds a link to the ""Tutorial"" that is referenced for documentation, since otherwise it is very non-trivial for inexperienced people to find it just based on its mention in a comment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11652
https://github.com/root-project/root/issues/11653:683,Performance,concurren,concurrent,683,"### Is your feature request related to a problem? Please describe.; Not a problem but a usage of XRootD feature that is not used by TFile::Open. ### Describe the solution you'd like; It would be useful that .meta4 files in `TFile::Open(""whatever_name.meta4"")`; to be passed for processing to TNetXNGFile (XRootD). ### Describe alternatives you've considered; There are no alternatives, TFile::Open (TNetXNGFile::Open) does not know to pass; to XrdCl the meta file for processing. ### Additional context; XRootD (XrdCl) know to use a meta file (`.meta4`) which is a virtual redirector. This allows not only fallback through a list a replicas to the same file but (at least for xrdcp) concurrent access (with `-y | --sources <n> `). There would be 2 problems to be solved:; 1. Add a signature to TNetXNGFile to allow to process a call like `TNetXNGFile::Open(""whatever_name.meta4"")`; 2. Tell TFile to redirect an access to a `.meta4` file to TNetXNGFile. For reference, just in case the file type is identified by content (but from what i seen in TFile::GetType this is not the case) a meta4 file is an xml with the signature like:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <metalink xmlns=""urn:ietf:params:xml:ns:metalink"">. ... </metalink>; ```. I tried something on my own but i got entangled on my lack of knowledge of TFile mechanics, so i though to ask expert help here, maybe the solution is fast and simple (in expert eyes).; Adding here @simonmichal in case there are questions on XrdCl feature.; Thanks a lot!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11653
https://github.com/root-project/root/issues/11653:694,Security,access,access,694,"### Is your feature request related to a problem? Please describe.; Not a problem but a usage of XRootD feature that is not used by TFile::Open. ### Describe the solution you'd like; It would be useful that .meta4 files in `TFile::Open(""whatever_name.meta4"")`; to be passed for processing to TNetXNGFile (XRootD). ### Describe alternatives you've considered; There are no alternatives, TFile::Open (TNetXNGFile::Open) does not know to pass; to XrdCl the meta file for processing. ### Additional context; XRootD (XrdCl) know to use a meta file (`.meta4`) which is a virtual redirector. This allows not only fallback through a list a replicas to the same file but (at least for xrdcp) concurrent access (with `-y | --sources <n> `). There would be 2 problems to be solved:; 1. Add a signature to TNetXNGFile to allow to process a call like `TNetXNGFile::Open(""whatever_name.meta4"")`; 2. Tell TFile to redirect an access to a `.meta4` file to TNetXNGFile. For reference, just in case the file type is identified by content (but from what i seen in TFile::GetType this is not the case) a meta4 file is an xml with the signature like:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <metalink xmlns=""urn:ietf:params:xml:ns:metalink"">. ... </metalink>; ```. I tried something on my own but i got entangled on my lack of knowledge of TFile mechanics, so i though to ask expert help here, maybe the solution is fast and simple (in expert eyes).; Adding here @simonmichal in case there are questions on XrdCl feature.; Thanks a lot!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11653
https://github.com/root-project/root/issues/11653:911,Security,access,access,911,"### Is your feature request related to a problem? Please describe.; Not a problem but a usage of XRootD feature that is not used by TFile::Open. ### Describe the solution you'd like; It would be useful that .meta4 files in `TFile::Open(""whatever_name.meta4"")`; to be passed for processing to TNetXNGFile (XRootD). ### Describe alternatives you've considered; There are no alternatives, TFile::Open (TNetXNGFile::Open) does not know to pass; to XrdCl the meta file for processing. ### Additional context; XRootD (XrdCl) know to use a meta file (`.meta4`) which is a virtual redirector. This allows not only fallback through a list a replicas to the same file but (at least for xrdcp) concurrent access (with `-y | --sources <n> `). There would be 2 problems to be solved:; 1. Add a signature to TNetXNGFile to allow to process a call like `TNetXNGFile::Open(""whatever_name.meta4"")`; 2. Tell TFile to redirect an access to a `.meta4` file to TNetXNGFile. For reference, just in case the file type is identified by content (but from what i seen in TFile::GetType this is not the case) a meta4 file is an xml with the signature like:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <metalink xmlns=""urn:ietf:params:xml:ns:metalink"">. ... </metalink>; ```. I tried something on my own but i got entangled on my lack of knowledge of TFile mechanics, so i though to ask expert help here, maybe the solution is fast and simple (in expert eyes).; Adding here @simonmichal in case there are questions on XrdCl feature.; Thanks a lot!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11653
https://github.com/root-project/root/issues/11653:1410,Usability,simpl,simple,1410,"### Is your feature request related to a problem? Please describe.; Not a problem but a usage of XRootD feature that is not used by TFile::Open. ### Describe the solution you'd like; It would be useful that .meta4 files in `TFile::Open(""whatever_name.meta4"")`; to be passed for processing to TNetXNGFile (XRootD). ### Describe alternatives you've considered; There are no alternatives, TFile::Open (TNetXNGFile::Open) does not know to pass; to XrdCl the meta file for processing. ### Additional context; XRootD (XrdCl) know to use a meta file (`.meta4`) which is a virtual redirector. This allows not only fallback through a list a replicas to the same file but (at least for xrdcp) concurrent access (with `-y | --sources <n> `). There would be 2 problems to be solved:; 1. Add a signature to TNetXNGFile to allow to process a call like `TNetXNGFile::Open(""whatever_name.meta4"")`; 2. Tell TFile to redirect an access to a `.meta4` file to TNetXNGFile. For reference, just in case the file type is identified by content (but from what i seen in TFile::GetType this is not the case) a meta4 file is an xml with the signature like:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <metalink xmlns=""urn:ietf:params:xml:ns:metalink"">. ... </metalink>; ```. I tried something on my own but i got entangled on my lack of knowledge of TFile mechanics, so i though to ask expert help here, maybe the solution is fast and simple (in expert eyes).; Adding here @simonmichal in case there are questions on XrdCl feature.; Thanks a lot!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11653
https://github.com/root-project/root/pull/11655:36,Availability,error,errors,36,"The changed tests were failing with errors like the one below:. ```; Traceback (most recent call last):; File ""root/bindings/pyroot/pythonizations/test/tclass_dynamiccast.py"",; line 22, in test_dynamiccast; self.assertEquals(type(o_upcast), TObject); ^^^^^^^^^^^^^^^^^; AttributeError: 'TClassDynamicCast' object has no attribute 'assertEquals'.; Did you mean: 'assertEqual'?; ```. These errors were observed with Python 3.12, but I guess they also happen with earlier versions of Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11655
https://github.com/root-project/root/pull/11655:388,Availability,error,errors,388,"The changed tests were failing with errors like the one below:. ```; Traceback (most recent call last):; File ""root/bindings/pyroot/pythonizations/test/tclass_dynamiccast.py"",; line 22, in test_dynamiccast; self.assertEquals(type(o_upcast), TObject); ^^^^^^^^^^^^^^^^^; AttributeError: 'TClassDynamicCast' object has no attribute 'assertEquals'.; Did you mean: 'assertEqual'?; ```. These errors were observed with Python 3.12, but I guess they also happen with earlier versions of Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11655
https://github.com/root-project/root/pull/11655:12,Testability,test,tests,12,"The changed tests were failing with errors like the one below:. ```; Traceback (most recent call last):; File ""root/bindings/pyroot/pythonizations/test/tclass_dynamiccast.py"",; line 22, in test_dynamiccast; self.assertEquals(type(o_upcast), TObject); ^^^^^^^^^^^^^^^^^; AttributeError: 'TClassDynamicCast' object has no attribute 'assertEquals'.; Did you mean: 'assertEqual'?; ```. These errors were observed with Python 3.12, but I guess they also happen with earlier versions of Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11655
https://github.com/root-project/root/pull/11655:147,Testability,test,test,147,"The changed tests were failing with errors like the one below:. ```; Traceback (most recent call last):; File ""root/bindings/pyroot/pythonizations/test/tclass_dynamiccast.py"",; line 22, in test_dynamiccast; self.assertEquals(type(o_upcast), TObject); ^^^^^^^^^^^^^^^^^; AttributeError: 'TClassDynamicCast' object has no attribute 'assertEquals'.; Did you mean: 'assertEqual'?; ```. These errors were observed with Python 3.12, but I guess they also happen with earlier versions of Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11655
https://github.com/root-project/root/pull/11655:212,Testability,assert,assertEquals,212,"The changed tests were failing with errors like the one below:. ```; Traceback (most recent call last):; File ""root/bindings/pyroot/pythonizations/test/tclass_dynamiccast.py"",; line 22, in test_dynamiccast; self.assertEquals(type(o_upcast), TObject); ^^^^^^^^^^^^^^^^^; AttributeError: 'TClassDynamicCast' object has no attribute 'assertEquals'.; Did you mean: 'assertEqual'?; ```. These errors were observed with Python 3.12, but I guess they also happen with earlier versions of Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11655
https://github.com/root-project/root/pull/11655:331,Testability,assert,assertEquals,331,"The changed tests were failing with errors like the one below:. ```; Traceback (most recent call last):; File ""root/bindings/pyroot/pythonizations/test/tclass_dynamiccast.py"",; line 22, in test_dynamiccast; self.assertEquals(type(o_upcast), TObject); ^^^^^^^^^^^^^^^^^; AttributeError: 'TClassDynamicCast' object has no attribute 'assertEquals'.; Did you mean: 'assertEqual'?; ```. These errors were observed with Python 3.12, but I guess they also happen with earlier versions of Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11655
https://github.com/root-project/root/pull/11655:362,Testability,assert,assertEqual,362,"The changed tests were failing with errors like the one below:. ```; Traceback (most recent call last):; File ""root/bindings/pyroot/pythonizations/test/tclass_dynamiccast.py"",; line 22, in test_dynamiccast; self.assertEquals(type(o_upcast), TObject); ^^^^^^^^^^^^^^^^^; AttributeError: 'TClassDynamicCast' object has no attribute 'assertEquals'.; Did you mean: 'assertEqual'?; ```. These errors were observed with Python 3.12, but I guess they also happen with earlier versions of Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11655
https://github.com/root-project/root/issues/11657:403,Availability,error,error,403,"Full bug report is at https://bugs.gentoo.org/879323. Important part of the build log is below.; ```. /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/jets.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/jets.C; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/zebra.f:767:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 767 | + ISTAT); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:107:6: note: ‘cfget_’ was previously declared here; 107 | void cfget_(int *lundes, int *medium, int *nwrec, int *nwtak, char *mbuf,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:107:6: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:398:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 398 | CFSTAT = CFSTATI (NAME, INFO, LGN); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: type mismatch in parameter 4; 171 | int cfstati_(char *fname, int *info, int *lgname); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: type ‘void’ should match type ‘long int’; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: ‘cfstati_’ was previously declared here; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:386:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 386 | CALL CFOPEI (LUNDES,MEDIUM,NWREC,NVMODE,NBUF,NAME,ISTAT,LGN); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: type mismatch in parameter 9; 225 | void cfopei_(int *lundes, int *medium, int *nwrec, int *mode, int *nbuf,; | ^; /var/tmp/portage/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11657
https://github.com/root-project/root/issues/11657:965,Availability,error,error,965,"//bugs.gentoo.org/879323. Important part of the build log is below.; ```. /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/jets.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/jets.C; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/zebra.f:767:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 767 | + ISTAT); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:107:6: note: ‘cfget_’ was previously declared here; 107 | void cfget_(int *lundes, int *medium, int *nwrec, int *nwtak, char *mbuf,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:107:6: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:398:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 398 | CFSTAT = CFSTATI (NAME, INFO, LGN); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: type mismatch in parameter 4; 171 | int cfstati_(char *fname, int *info, int *lgname); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: type ‘void’ should match type ‘long int’; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: ‘cfstati_’ was previously declared here; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:386:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 386 | CALL CFOPEI (LUNDES,MEDIUM,NWREC,NVMODE,NBUF,NAME,ISTAT,LGN); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: type mismatch in parameter 9; 225 | void cfopei_(int *lundes, int *medium, int *nwrec, int *mode, int *nbuf,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11657
https://github.com/root-project/root/issues/11657:1640,Availability,error,error,1640,"tage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:107:6: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:398:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 398 | CFSTAT = CFSTATI (NAME, INFO, LGN); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: type mismatch in parameter 4; 171 | int cfstati_(char *fname, int *info, int *lgname); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: type ‘void’ should match type ‘long int’; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: ‘cfstati_’ was previously declared here; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:386:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 386 | CALL CFOPEI (LUNDES,MEDIUM,NWREC,NVMODE,NBUF,NAME,ISTAT,LGN); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: type mismatch in parameter 9; 225 | void cfopei_(int *lundes, int *medium, int *nwrec, int *mode, int *nbuf,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: type ‘void’ should match type ‘long int’; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: ‘cfopei_’ was previously declared here; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:542:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 542 | CALL UCOPY2(IQ(LCID+ITAG1),IQ(LCID+32),NW); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:403:23: note: ‘ucopy2’ was previously declared here; 403 | SUBROUTINE UCOPY2 (A,B,N); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/min",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11657
https://github.com/root-project/root/issues/11657:2361,Availability,error,error,2361,"cs/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: ‘cfstati_’ was previously declared here; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:386:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 386 | CALL CFOPEI (LUNDES,MEDIUM,NWREC,NVMODE,NBUF,NAME,ISTAT,LGN); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: type mismatch in parameter 9; 225 | void cfopei_(int *lundes, int *medium, int *nwrec, int *mode, int *nbuf,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: type ‘void’ should match type ‘long int’; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: ‘cfopei_’ was previously declared here; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:542:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 542 | CALL UCOPY2(IQ(LCID+ITAG1),IQ(LCID+32),NW); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:403:23: note: ‘ucopy2’ was previously declared here; 403 | SUBROUTINE UCOPY2 (A,B,N); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:403:23: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:1581:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1581 | CALL VZERO(JNAMES,20); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:2184:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 2184 | CALL VZERO(I1,37); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: ‘vzero’ was previously declared here; 105 | SUBROUTINE VZERO (A,N); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11657
https://github.com/root-project/root/issues/11657:2902,Availability,error,error,2902,"*mode, int *nbuf,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: type ‘void’ should match type ‘long int’; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: ‘cfopei_’ was previously declared here; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:542:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 542 | CALL UCOPY2(IQ(LCID+ITAG1),IQ(LCID+32),NW); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:403:23: note: ‘ucopy2’ was previously declared here; 403 | SUBROUTINE UCOPY2 (A,B,N); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:403:23: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:1581:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1581 | CALL VZERO(JNAMES,20); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:2184:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 2184 | CALL VZERO(I1,37); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: ‘vzero’ was previously declared here; 105 | SUBROUTINE VZERO (A,N); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:1959:18: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1959 | COMMON/PAWC/NWPAW,IXPAWC,IHDIV,IXHIGZ,IXKU,FENC(5),LMAIN,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/zebra.f:205:19: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 205 | COMMON /PAWC/ NWPAW,IXPAWC,IHBOOK,IXHIGZ,IXKU,IFENCE(5); | ^; /var/tmp/po",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11657
https://github.com/root-project/root/issues/11657:3086,Availability,error,error,3086,"e/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: ‘cfopei_’ was previously declared here; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:542:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 542 | CALL UCOPY2(IQ(LCID+ITAG1),IQ(LCID+32),NW); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:403:23: note: ‘ucopy2’ was previously declared here; 403 | SUBROUTINE UCOPY2 (A,B,N); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:403:23: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:1581:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1581 | CALL VZERO(JNAMES,20); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:2184:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 2184 | CALL VZERO(I1,37); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: ‘vzero’ was previously declared here; 105 | SUBROUTINE VZERO (A,N); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:1959:18: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1959 | COMMON/PAWC/NWPAW,IXPAWC,IHDIV,IXHIGZ,IXKU,FENC(5),LMAIN,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/zebra.f:205:19: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 205 | COMMON /PAWC/ NWPAW,IXPAWC,IHBOOK,IXHIGZ,IXKU,IFENCE(5); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: ‘pawc’ was previously declared here; 278 | common/pawc/paw(nwpaw); | ^; /var/tmp/portage/sci-physics/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11657
https://github.com/root-project/root/issues/11657:3607,Availability,error,error,3607,"-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:403:23: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:1581:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1581 | CALL VZERO(JNAMES,20); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:2184:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 2184 | CALL VZERO(I1,37); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: ‘vzero’ was previously declared here; 105 | SUBROUTINE VZERO (A,N); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:1959:18: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1959 | COMMON/PAWC/NWPAW,IXPAWC,IHDIV,IXHIGZ,IXKU,FENC(5),LMAIN,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/zebra.f:205:19: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 205 | COMMON /PAWC/ NWPAW,IXPAWC,IHBOOK,IXHIGZ,IXKU,IFENCE(5); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: ‘pawc’ was previously declared here; 278 | common/pawc/paw(nwpaw); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/ntuple1.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelco",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11657
https://github.com/root-project/root/issues/11657:3826,Availability,error,error,3826,": error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1581 | CALL VZERO(JNAMES,20); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:2184:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 2184 | CALL VZERO(I1,37); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: ‘vzero’ was previously declared here; 105 | SUBROUTINE VZERO (A,N); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:1959:18: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1959 | COMMON/PAWC/NWPAW,IXPAWC,IHDIV,IXHIGZ,IXKU,FENC(5),LMAIN,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/zebra.f:205:19: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 205 | COMMON /PAWC/ NWPAW,IXPAWC,IHBOOK,IXHIGZ,IXKU,IFENCE(5); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: ‘pawc’ was previously declared here; 278 | common/pawc/paw(nwpaw); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/ntuple1.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/par",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11657
https://github.com/root-project/root/issues/11657:5621,Availability,error,errors,5621," /PAWC/ NWPAW,IXPAWC,IHBOOK,IXHIGZ,IXKU,IFENCE(5); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: ‘pawc’ was previously declared here; 278 | common/pawc/paw(nwpaw); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/ntuple1.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/parallelcoord.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoordtrans.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoordtrans.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/parallelcoordtrans.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/printSizes.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/printSizes.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/printSizes.C; lto1: some warnings being treated as errors; lto-wrapper: fatal error: /usr/bin/x86_64-pc-linux-gnu-gfortran returned 1 exit status; compilation terminated.; /usr/lib/gcc/x86_64-pc-linux-gnu/12/../../../../x86_64-pc-linux-gnu/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11657
https://github.com/root-project/root/issues/11657:5648,Availability,error,error,5648," /PAWC/ NWPAW,IXPAWC,IHBOOK,IXHIGZ,IXKU,IFENCE(5); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: ‘pawc’ was previously declared here; 278 | common/pawc/paw(nwpaw); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/ntuple1.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/parallelcoord.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoordtrans.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoordtrans.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/parallelcoordtrans.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/printSizes.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/printSizes.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/printSizes.C; lto1: some warnings being treated as errors; lto-wrapper: fatal error: /usr/bin/x86_64-pc-linux-gnu-gfortran returned 1 exit status; compilation terminated.; /usr/lib/gcc/x86_64-pc-linux-gnu/12/../../../../x86_64-pc-linux-gnu/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11657
https://github.com/root-project/root/issues/11657:5818,Availability,error,error,5818," /PAWC/ NWPAW,IXPAWC,IHBOOK,IXHIGZ,IXKU,IFENCE(5); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: ‘pawc’ was previously declared here; 278 | common/pawc/paw(nwpaw); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/ntuple1.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/parallelcoord.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoordtrans.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoordtrans.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/parallelcoordtrans.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/printSizes.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/printSizes.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/printSizes.C; lto1: some warnings being treated as errors; lto-wrapper: fatal error: /usr/bin/x86_64-pc-linux-gnu-gfortran returned 1 exit status; compilation terminated.; /usr/lib/gcc/x86_64-pc-linux-gnu/12/../../../../x86_64-pc-linux-gnu/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11657
https://github.com/root-project/root/issues/11657:5855,Availability,error,error,5855," /PAWC/ NWPAW,IXPAWC,IHBOOK,IXHIGZ,IXKU,IFENCE(5); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: ‘pawc’ was previously declared here; 278 | common/pawc/paw(nwpaw); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/ntuple1.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/parallelcoord.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoordtrans.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoordtrans.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/parallelcoordtrans.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/printSizes.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/printSizes.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/printSizes.C; lto1: some warnings being treated as errors; lto-wrapper: fatal error: /usr/bin/x86_64-pc-linux-gnu-gfortran returned 1 exit status; compilation terminated.; /usr/lib/gcc/x86_64-pc-linux-gnu/12/../../../../x86_64-pc-linux-gnu/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11657
https://github.com/root-project/root/issues/11657:5633,Integrability,wrap,wrapper,5633," /PAWC/ NWPAW,IXPAWC,IHBOOK,IXHIGZ,IXKU,IFENCE(5); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: ‘pawc’ was previously declared here; 278 | common/pawc/paw(nwpaw); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/ntuple1.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/parallelcoord.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoordtrans.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoordtrans.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/parallelcoordtrans.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/printSizes.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/printSizes.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/printSizes.C; lto1: some warnings being treated as errors; lto-wrapper: fatal error: /usr/bin/x86_64-pc-linux-gnu-gfortran returned 1 exit status; compilation terminated.; /usr/lib/gcc/x86_64-pc-linux-gnu/12/../../../../x86_64-pc-linux-gnu/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11657
https://github.com/root-project/root/issues/11657:5829,Integrability,wrap,wrapper,5829," /PAWC/ NWPAW,IXPAWC,IHBOOK,IXHIGZ,IXKU,IFENCE(5); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: ‘pawc’ was previously declared here; 278 | common/pawc/paw(nwpaw); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/ntuple1.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/parallelcoord.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoordtrans.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoordtrans.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/parallelcoordtrans.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/printSizes.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/printSizes.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/printSizes.C; lto1: some warnings being treated as errors; lto-wrapper: fatal error: /usr/bin/x86_64-pc-linux-gnu-gfortran returned 1 exit status; compilation terminated.; /usr/lib/gcc/x86_64-pc-linux-gnu/12/../../../../x86_64-pc-linux-gnu/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11657
https://github.com/root-project/root/issues/11657:82,Testability,log,log,82,"Full bug report is at https://bugs.gentoo.org/879323. Important part of the build log is below.; ```. /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/jets.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/jets.C; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/zebra.f:767:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 767 | + ISTAT); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:107:6: note: ‘cfget_’ was previously declared here; 107 | void cfget_(int *lundes, int *medium, int *nwrec, int *nwtak, char *mbuf,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:107:6: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:398:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 398 | CFSTAT = CFSTATI (NAME, INFO, LGN); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: type mismatch in parameter 4; 171 | int cfstati_(char *fname, int *info, int *lgname); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: type ‘void’ should match type ‘long int’; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: ‘cfstati_’ was previously declared here; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:386:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 386 | CALL CFOPEI (LUNDES,MEDIUM,NWREC,NVMODE,NBUF,NAME,ISTAT,LGN); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: type mismatch in parameter 9; 225 | void cfopei_(int *lundes, int *medium, int *nwrec, int *mode, int *nbuf,; | ^; /var/tmp/portage/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11657
https://github.com/root-project/root/pull/11659:52,Integrability,synchroniz,synchronization,52,requested here: https://root-forum.cern.ch/t/tgraph-synchronization/52211/4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11659
https://github.com/root-project/root/issues/11660:55,Availability,error,errors-when-using-roofit-asymptoticerror,55,"As reported in https://root-forum.cern.ch/t/very-large-errors-when-using-roofit-asymptoticerror/52003 some large errors are obtained when using `RooFit::AsymptoticError`. Other problems have been reported when using extended fits, see [ROOT-10827](https://sft.its.cern.ch/jira/browse/ROOT-10827) Missing contribution of extended term in the error Correction for extended weighted likelihood fits. Or when computing the derivatives needed for the asymptotic correction, see [ROOT-10866](https://sft.its.cern.ch/jira/browse/ROOT-10866) Numerical instabilities when calculating the derivatives for the asymptotically correct errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11660
https://github.com/root-project/root/issues/11660:113,Availability,error,errors,113,"As reported in https://root-forum.cern.ch/t/very-large-errors-when-using-roofit-asymptoticerror/52003 some large errors are obtained when using `RooFit::AsymptoticError`. Other problems have been reported when using extended fits, see [ROOT-10827](https://sft.its.cern.ch/jira/browse/ROOT-10827) Missing contribution of extended term in the error Correction for extended weighted likelihood fits. Or when computing the derivatives needed for the asymptotic correction, see [ROOT-10866](https://sft.its.cern.ch/jira/browse/ROOT-10866) Numerical instabilities when calculating the derivatives for the asymptotically correct errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11660
https://github.com/root-project/root/issues/11660:341,Availability,error,error,341,"As reported in https://root-forum.cern.ch/t/very-large-errors-when-using-roofit-asymptoticerror/52003 some large errors are obtained when using `RooFit::AsymptoticError`. Other problems have been reported when using extended fits, see [ROOT-10827](https://sft.its.cern.ch/jira/browse/ROOT-10827) Missing contribution of extended term in the error Correction for extended weighted likelihood fits. Or when computing the derivatives needed for the asymptotic correction, see [ROOT-10866](https://sft.its.cern.ch/jira/browse/ROOT-10866) Numerical instabilities when calculating the derivatives for the asymptotically correct errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11660
https://github.com/root-project/root/issues/11660:622,Availability,error,errors,622,"As reported in https://root-forum.cern.ch/t/very-large-errors-when-using-roofit-asymptoticerror/52003 some large errors are obtained when using `RooFit::AsymptoticError`. Other problems have been reported when using extended fits, see [ROOT-10827](https://sft.its.cern.ch/jira/browse/ROOT-10827) Missing contribution of extended term in the error Correction for extended weighted likelihood fits. Or when computing the derivatives needed for the asymptotic correction, see [ROOT-10866](https://sft.its.cern.ch/jira/browse/ROOT-10866) Numerical instabilities when calculating the derivatives for the asymptotically correct errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11660
https://github.com/root-project/root/issues/11660:216,Modifiability,extend,extended,216,"As reported in https://root-forum.cern.ch/t/very-large-errors-when-using-roofit-asymptoticerror/52003 some large errors are obtained when using `RooFit::AsymptoticError`. Other problems have been reported when using extended fits, see [ROOT-10827](https://sft.its.cern.ch/jira/browse/ROOT-10827) Missing contribution of extended term in the error Correction for extended weighted likelihood fits. Or when computing the derivatives needed for the asymptotic correction, see [ROOT-10866](https://sft.its.cern.ch/jira/browse/ROOT-10866) Numerical instabilities when calculating the derivatives for the asymptotically correct errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11660
https://github.com/root-project/root/issues/11660:320,Modifiability,extend,extended,320,"As reported in https://root-forum.cern.ch/t/very-large-errors-when-using-roofit-asymptoticerror/52003 some large errors are obtained when using `RooFit::AsymptoticError`. Other problems have been reported when using extended fits, see [ROOT-10827](https://sft.its.cern.ch/jira/browse/ROOT-10827) Missing contribution of extended term in the error Correction for extended weighted likelihood fits. Or when computing the derivatives needed for the asymptotic correction, see [ROOT-10866](https://sft.its.cern.ch/jira/browse/ROOT-10866) Numerical instabilities when calculating the derivatives for the asymptotically correct errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11660
https://github.com/root-project/root/issues/11660:362,Modifiability,extend,extended,362,"As reported in https://root-forum.cern.ch/t/very-large-errors-when-using-roofit-asymptoticerror/52003 some large errors are obtained when using `RooFit::AsymptoticError`. Other problems have been reported when using extended fits, see [ROOT-10827](https://sft.its.cern.ch/jira/browse/ROOT-10827) Missing contribution of extended term in the error Correction for extended weighted likelihood fits. Or when computing the derivatives needed for the asymptotic correction, see [ROOT-10866](https://sft.its.cern.ch/jira/browse/ROOT-10866) Numerical instabilities when calculating the derivatives for the asymptotically correct errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11660
https://github.com/root-project/root/pull/11662:333,Deployability,integrat,integration,333,"Recently, in commit https://github.com/root-project/root/commit/47c250898f3d3a1bb1718c73b84014a70809ffdf, the algorithm to figure out the value; and shape servers of integrals was rewritten. However, the new; implementation analyzed the computation graph by pointer, which caused a; wrong list of servers if one passed clones of the integration variables; to the integral constructor. This commit fixes that, and also implements a unit test for this case. Closes https://github.com/root-project/root/issues/11637, as the issue was caused by the integration variable; wrongly being registered as a value server of the integral. This made; the reproducer code in the issue thread very slow, because the integral; was reevaluated for each event.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11662
https://github.com/root-project/root/pull/11662:545,Deployability,integrat,integration,545,"Recently, in commit https://github.com/root-project/root/commit/47c250898f3d3a1bb1718c73b84014a70809ffdf, the algorithm to figure out the value; and shape servers of integrals was rewritten. However, the new; implementation analyzed the computation graph by pointer, which caused a; wrong list of servers if one passed clones of the integration variables; to the integral constructor. This commit fixes that, and also implements a unit test for this case. Closes https://github.com/root-project/root/issues/11637, as the issue was caused by the integration variable; wrongly being registered as a value server of the integral. This made; the reproducer code in the issue thread very slow, because the integral; was reevaluated for each event.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11662
https://github.com/root-project/root/pull/11662:333,Integrability,integrat,integration,333,"Recently, in commit https://github.com/root-project/root/commit/47c250898f3d3a1bb1718c73b84014a70809ffdf, the algorithm to figure out the value; and shape servers of integrals was rewritten. However, the new; implementation analyzed the computation graph by pointer, which caused a; wrong list of servers if one passed clones of the integration variables; to the integral constructor. This commit fixes that, and also implements a unit test for this case. Closes https://github.com/root-project/root/issues/11637, as the issue was caused by the integration variable; wrongly being registered as a value server of the integral. This made; the reproducer code in the issue thread very slow, because the integral; was reevaluated for each event.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11662
https://github.com/root-project/root/pull/11662:545,Integrability,integrat,integration,545,"Recently, in commit https://github.com/root-project/root/commit/47c250898f3d3a1bb1718c73b84014a70809ffdf, the algorithm to figure out the value; and shape servers of integrals was rewritten. However, the new; implementation analyzed the computation graph by pointer, which caused a; wrong list of servers if one passed clones of the integration variables; to the integral constructor. This commit fixes that, and also implements a unit test for this case. Closes https://github.com/root-project/root/issues/11637, as the issue was caused by the integration variable; wrongly being registered as a value server of the integral. This made; the reproducer code in the issue thread very slow, because the integral; was reevaluated for each event.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11662
https://github.com/root-project/root/pull/11662:345,Modifiability,variab,variables,345,"Recently, in commit https://github.com/root-project/root/commit/47c250898f3d3a1bb1718c73b84014a70809ffdf, the algorithm to figure out the value; and shape servers of integrals was rewritten. However, the new; implementation analyzed the computation graph by pointer, which caused a; wrong list of servers if one passed clones of the integration variables; to the integral constructor. This commit fixes that, and also implements a unit test for this case. Closes https://github.com/root-project/root/issues/11637, as the issue was caused by the integration variable; wrongly being registered as a value server of the integral. This made; the reproducer code in the issue thread very slow, because the integral; was reevaluated for each event.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11662
https://github.com/root-project/root/pull/11662:557,Modifiability,variab,variable,557,"Recently, in commit https://github.com/root-project/root/commit/47c250898f3d3a1bb1718c73b84014a70809ffdf, the algorithm to figure out the value; and shape servers of integrals was rewritten. However, the new; implementation analyzed the computation graph by pointer, which caused a; wrong list of servers if one passed clones of the integration variables; to the integral constructor. This commit fixes that, and also implements a unit test for this case. Closes https://github.com/root-project/root/issues/11637, as the issue was caused by the integration variable; wrongly being registered as a value server of the integral. This made; the reproducer code in the issue thread very slow, because the integral; was reevaluated for each event.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11662
https://github.com/root-project/root/pull/11662:436,Testability,test,test,436,"Recently, in commit https://github.com/root-project/root/commit/47c250898f3d3a1bb1718c73b84014a70809ffdf, the algorithm to figure out the value; and shape servers of integrals was rewritten. However, the new; implementation analyzed the computation graph by pointer, which caused a; wrong list of servers if one passed clones of the integration variables; to the integral constructor. This commit fixes that, and also implements a unit test for this case. Closes https://github.com/root-project/root/issues/11637, as the issue was caused by the integration variable; wrongly being registered as a value server of the integral. This made; the reproducer code in the issue thread very slow, because the integral; was reevaluated for each event.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11662
https://github.com/root-project/root/issues/11663:453,Availability,error,errors,453,"TTask exposes fTasks through (non-const) GetListOfTasks, so the invariant ""fTasks only contains pointers to TTask"" can not be enforced. ; This makes ; ``` while((task=(TTask*)next())) {```; an unsafe type cast. dynamic_cast should be used instead to avoid undefined behavior. . Generally, any C-style casts (or static_casts) should be avoided unless there is encapsulation to enforce an adequate invariant. ; C++ is a strongly typed language where type errors have to be caught at compile time because they will not lead to graceful failure at runtime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11663
https://github.com/root-project/root/issues/11663:533,Availability,failure,failure,533,"TTask exposes fTasks through (non-const) GetListOfTasks, so the invariant ""fTasks only contains pointers to TTask"" can not be enforced. ; This makes ; ``` while((task=(TTask*)next())) {```; an unsafe type cast. dynamic_cast should be used instead to avoid undefined behavior. . Generally, any C-style casts (or static_casts) should be avoided unless there is encapsulation to enforce an adequate invariant. ; C++ is a strongly typed language where type errors have to be caught at compile time because they will not lead to graceful failure at runtime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11663
https://github.com/root-project/root/issues/11663:193,Safety,unsafe,unsafe,193,"TTask exposes fTasks through (non-const) GetListOfTasks, so the invariant ""fTasks only contains pointers to TTask"" can not be enforced. ; This makes ; ``` while((task=(TTask*)next())) {```; an unsafe type cast. dynamic_cast should be used instead to avoid undefined behavior. . Generally, any C-style casts (or static_casts) should be avoided unless there is encapsulation to enforce an adequate invariant. ; C++ is a strongly typed language where type errors have to be caught at compile time because they will not lead to graceful failure at runtime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11663
https://github.com/root-project/root/issues/11663:250,Safety,avoid,avoid,250,"TTask exposes fTasks through (non-const) GetListOfTasks, so the invariant ""fTasks only contains pointers to TTask"" can not be enforced. ; This makes ; ``` while((task=(TTask*)next())) {```; an unsafe type cast. dynamic_cast should be used instead to avoid undefined behavior. . Generally, any C-style casts (or static_casts) should be avoided unless there is encapsulation to enforce an adequate invariant. ; C++ is a strongly typed language where type errors have to be caught at compile time because they will not lead to graceful failure at runtime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11663
https://github.com/root-project/root/issues/11663:335,Safety,avoid,avoided,335,"TTask exposes fTasks through (non-const) GetListOfTasks, so the invariant ""fTasks only contains pointers to TTask"" can not be enforced. ; This makes ; ``` while((task=(TTask*)next())) {```; an unsafe type cast. dynamic_cast should be used instead to avoid undefined behavior. . Generally, any C-style casts (or static_casts) should be avoided unless there is encapsulation to enforce an adequate invariant. ; C++ is a strongly typed language where type errors have to be caught at compile time because they will not lead to graceful failure at runtime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11663
https://github.com/root-project/root/issues/11663:6,Security,expose,exposes,6,"TTask exposes fTasks through (non-const) GetListOfTasks, so the invariant ""fTasks only contains pointers to TTask"" can not be enforced. ; This makes ; ``` while((task=(TTask*)next())) {```; an unsafe type cast. dynamic_cast should be used instead to avoid undefined behavior. . Generally, any C-style casts (or static_casts) should be avoided unless there is encapsulation to enforce an adequate invariant. ; C++ is a strongly typed language where type errors have to be caught at compile time because they will not lead to graceful failure at runtime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11663
https://github.com/root-project/root/pull/11668:618,Integrability,wrap,wrapper,618,"The old test statistic classes also supported enabling the offset; feature after their construction via the `RooAbsReal::enableOffsetting`; hook. This function is now also correctly overloaded in the; `RooNLLVarNew` for the BatchMode. Furthermore, the implementation of `RooAddition::enableOffsetting` is; now moved to the base class `RooAbsReal`. This implementation was only; recursively calling `enableOffsetting` for the servers, which did the; job for the old test statistics, which were only combined with; `RooAdditions`. The new BatchMode also adds the NLLs with RooAdditions,; but on top of them sits another wrapper class, the; `RooFitDriverWrapper`. It should also forward the `enableOffsetting`; calls correctly. The most general solution to this problem is probably; to forward the `enableOffsetting` call for all `RooAbsReal`-derived; classed, up to the point where the recursion ends either at an old or a; new test statistic object. This PR also includes two minor commits. One for avoiding some warnings in tests, and another one that cleans unused includes of `RooNLLVar.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11668
https://github.com/root-project/root/pull/11668:998,Safety,avoid,avoiding,998,"The old test statistic classes also supported enabling the offset; feature after their construction via the `RooAbsReal::enableOffsetting`; hook. This function is now also correctly overloaded in the; `RooNLLVarNew` for the BatchMode. Furthermore, the implementation of `RooAddition::enableOffsetting` is; now moved to the base class `RooAbsReal`. This implementation was only; recursively calling `enableOffsetting` for the servers, which did the; job for the old test statistics, which were only combined with; `RooAdditions`. The new BatchMode also adds the NLLs with RooAdditions,; but on top of them sits another wrapper class, the; `RooFitDriverWrapper`. It should also forward the `enableOffsetting`; calls correctly. The most general solution to this problem is probably; to forward the `enableOffsetting` call for all `RooAbsReal`-derived; classed, up to the point where the recursion ends either at an old or a; new test statistic object. This PR also includes two minor commits. One for avoiding some warnings in tests, and another one that cleans unused includes of `RooNLLVar.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11668
https://github.com/root-project/root/pull/11668:8,Testability,test,test,8,"The old test statistic classes also supported enabling the offset; feature after their construction via the `RooAbsReal::enableOffsetting`; hook. This function is now also correctly overloaded in the; `RooNLLVarNew` for the BatchMode. Furthermore, the implementation of `RooAddition::enableOffsetting` is; now moved to the base class `RooAbsReal`. This implementation was only; recursively calling `enableOffsetting` for the servers, which did the; job for the old test statistics, which were only combined with; `RooAdditions`. The new BatchMode also adds the NLLs with RooAdditions,; but on top of them sits another wrapper class, the; `RooFitDriverWrapper`. It should also forward the `enableOffsetting`; calls correctly. The most general solution to this problem is probably; to forward the `enableOffsetting` call for all `RooAbsReal`-derived; classed, up to the point where the recursion ends either at an old or a; new test statistic object. This PR also includes two minor commits. One for avoiding some warnings in tests, and another one that cleans unused includes of `RooNLLVar.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11668
https://github.com/root-project/root/pull/11668:465,Testability,test,test,465,"The old test statistic classes also supported enabling the offset; feature after their construction via the `RooAbsReal::enableOffsetting`; hook. This function is now also correctly overloaded in the; `RooNLLVarNew` for the BatchMode. Furthermore, the implementation of `RooAddition::enableOffsetting` is; now moved to the base class `RooAbsReal`. This implementation was only; recursively calling `enableOffsetting` for the servers, which did the; job for the old test statistics, which were only combined with; `RooAdditions`. The new BatchMode also adds the NLLs with RooAdditions,; but on top of them sits another wrapper class, the; `RooFitDriverWrapper`. It should also forward the `enableOffsetting`; calls correctly. The most general solution to this problem is probably; to forward the `enableOffsetting` call for all `RooAbsReal`-derived; classed, up to the point where the recursion ends either at an old or a; new test statistic object. This PR also includes two minor commits. One for avoiding some warnings in tests, and another one that cleans unused includes of `RooNLLVar.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11668
https://github.com/root-project/root/pull/11668:926,Testability,test,test,926,"The old test statistic classes also supported enabling the offset; feature after their construction via the `RooAbsReal::enableOffsetting`; hook. This function is now also correctly overloaded in the; `RooNLLVarNew` for the BatchMode. Furthermore, the implementation of `RooAddition::enableOffsetting` is; now moved to the base class `RooAbsReal`. This implementation was only; recursively calling `enableOffsetting` for the servers, which did the; job for the old test statistics, which were only combined with; `RooAdditions`. The new BatchMode also adds the NLLs with RooAdditions,; but on top of them sits another wrapper class, the; `RooFitDriverWrapper`. It should also forward the `enableOffsetting`; calls correctly. The most general solution to this problem is probably; to forward the `enableOffsetting` call for all `RooAbsReal`-derived; classed, up to the point where the recursion ends either at an old or a; new test statistic object. This PR also includes two minor commits. One for avoiding some warnings in tests, and another one that cleans unused includes of `RooNLLVar.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11668
https://github.com/root-project/root/pull/11668:1024,Testability,test,tests,1024,"The old test statistic classes also supported enabling the offset; feature after their construction via the `RooAbsReal::enableOffsetting`; hook. This function is now also correctly overloaded in the; `RooNLLVarNew` for the BatchMode. Furthermore, the implementation of `RooAddition::enableOffsetting` is; now moved to the base class `RooAbsReal`. This implementation was only; recursively calling `enableOffsetting` for the servers, which did the; job for the old test statistics, which were only combined with; `RooAdditions`. The new BatchMode also adds the NLLs with RooAdditions,; but on top of them sits another wrapper class, the; `RooFitDriverWrapper`. It should also forward the `enableOffsetting`; calls correctly. The most general solution to this problem is probably; to forward the `enableOffsetting` call for all `RooAbsReal`-derived; classed, up to the point where the recursion ends either at an old or a; new test statistic object. This PR also includes two minor commits. One for avoiding some warnings in tests, and another one that cleans unused includes of `RooNLLVar.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11668
https://github.com/root-project/root/pull/11669:272,Availability,failure,failures,272,"Even though cloning the constraint term is technically only required when the computation graph is changed because global observables are taken from data, it is safer to clone the constraint model in general to reset the normalization integral caches and avoid ASAN build failures (the PDF of the main measurement is cloned too anyway, so not much overhead). This can be reconsidered after the caching of normalization sets by pointer is changed to a more memory-safe solution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11669
https://github.com/root-project/root/pull/11669:244,Performance,cache,caches,244,"Even though cloning the constraint term is technically only required when the computation graph is changed because global observables are taken from data, it is safer to clone the constraint model in general to reset the normalization integral caches and avoid ASAN build failures (the PDF of the main measurement is cloned too anyway, so not much overhead). This can be reconsidered after the caching of normalization sets by pointer is changed to a more memory-safe solution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11669
https://github.com/root-project/root/pull/11669:161,Safety,safe,safer,161,"Even though cloning the constraint term is technically only required when the computation graph is changed because global observables are taken from data, it is safer to clone the constraint model in general to reset the normalization integral caches and avoid ASAN build failures (the PDF of the main measurement is cloned too anyway, so not much overhead). This can be reconsidered after the caching of normalization sets by pointer is changed to a more memory-safe solution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11669
https://github.com/root-project/root/pull/11669:255,Safety,avoid,avoid,255,"Even though cloning the constraint term is technically only required when the computation graph is changed because global observables are taken from data, it is safer to clone the constraint model in general to reset the normalization integral caches and avoid ASAN build failures (the PDF of the main measurement is cloned too anyway, so not much overhead). This can be reconsidered after the caching of normalization sets by pointer is changed to a more memory-safe solution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11669
https://github.com/root-project/root/pull/11669:463,Safety,safe,safe,463,"Even though cloning the constraint term is technically only required when the computation graph is changed because global observables are taken from data, it is safer to clone the constraint model in general to reset the normalization integral caches and avoid ASAN build failures (the PDF of the main measurement is cloned too anyway, so not much overhead). This can be reconsidered after the caching of normalization sets by pointer is changed to a more memory-safe solution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11669
https://github.com/root-project/root/pull/11670:29,Testability,test,tested,29,"For some reason, `UNAME` was tested instead of `OS`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11670
https://github.com/root-project/root/issues/11671:170,Performance,optimiz,optimizations,170,"After pull-request #11525 is merged (which introduces `RField` support for user-defined classes that have an associated collection proxy), it is planned to apply further optimizations to the base implementation. ### Optional: share how it could be improved; Three different optimizations can be applied, in order:; - [x] Iteration over collection elements: suggestion by @pcanal [here](https://github.com/root-project/root/pull/11525#discussion_r997334570) is to use iterators instead of relying in `TVirtualCollectionProxy::At()`.; - [x] Reuse vs. destruct/reallocate for collection items: suggested by @pcanal [here](https://github.com/root-project/root/pull/11525#discussion_r997337292) and [here](https://github.com/root-project/root/pull/11525#discussion_r997343681).; - [ ] Maybe optimize the case of a `kSTLvector` collection, as elements are contiguous in memory (see [here](https://github.com/root-project/root/pull/11525#discussion_r997335574)). [marked as `TODO` in the source code]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11671
https://github.com/root-project/root/issues/11671:274,Performance,optimiz,optimizations,274,"After pull-request #11525 is merged (which introduces `RField` support for user-defined classes that have an associated collection proxy), it is planned to apply further optimizations to the base implementation. ### Optional: share how it could be improved; Three different optimizations can be applied, in order:; - [x] Iteration over collection elements: suggestion by @pcanal [here](https://github.com/root-project/root/pull/11525#discussion_r997334570) is to use iterators instead of relying in `TVirtualCollectionProxy::At()`.; - [x] Reuse vs. destruct/reallocate for collection items: suggested by @pcanal [here](https://github.com/root-project/root/pull/11525#discussion_r997337292) and [here](https://github.com/root-project/root/pull/11525#discussion_r997343681).; - [ ] Maybe optimize the case of a `kSTLvector` collection, as elements are contiguous in memory (see [here](https://github.com/root-project/root/pull/11525#discussion_r997335574)). [marked as `TODO` in the source code]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11671
https://github.com/root-project/root/issues/11671:786,Performance,optimiz,optimize,786,"After pull-request #11525 is merged (which introduces `RField` support for user-defined classes that have an associated collection proxy), it is planned to apply further optimizations to the base implementation. ### Optional: share how it could be improved; Three different optimizations can be applied, in order:; - [x] Iteration over collection elements: suggestion by @pcanal [here](https://github.com/root-project/root/pull/11525#discussion_r997334570) is to use iterators instead of relying in `TVirtualCollectionProxy::At()`.; - [x] Reuse vs. destruct/reallocate for collection items: suggested by @pcanal [here](https://github.com/root-project/root/pull/11525#discussion_r997337292) and [here](https://github.com/root-project/root/pull/11525#discussion_r997343681).; - [ ] Maybe optimize the case of a `kSTLvector` collection, as elements are contiguous in memory (see [here](https://github.com/root-project/root/pull/11525#discussion_r997335574)). [marked as `TODO` in the source code]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11671
https://github.com/root-project/root/issues/11673:69,Security,access,accessible,69,"As per a request from @Nowakus, making `REntry::AddValue()` publicly accessible would be useful in some specific cases. @Nowakus could you please comment in this issue why (I cannot recall now). Also, it would be helpful if you also attach your current workaround.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11673
https://github.com/root-project/root/pull/11674:332,Deployability,update,updated,332,"As per a request by @mnowakgit, it would be useful if `RNTupleWriter::Fill()` returns the number of (uncompressed) bytes written - IIRC, TTree does a similar thing. As `RFieldBase::Append()` already provides the count of written bytes, the changes included in this PR are minimal. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11672.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11674
https://github.com/root-project/root/pull/11674:302,Testability,test,tested,302,"As per a request by @mnowakgit, it would be useful if `RNTupleWriter::Fill()` returns the number of (uncompressed) bytes written - IIRC, TTree does a similar thing. As `RFieldBase::Append()` already provides the count of written bytes, the changes included in this PR are minimal. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11672.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11674
https://github.com/root-project/root/issues/11675:118,Availability,error,errors,118,See https://root-forum.cern.ch/t/open-a-file-to-read-data/52234/7. `rootls -t yourfile.root:*` will spit out overload errors if it encounters a branch of an unknown class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11675
https://github.com/root-project/root/pull/11678:98,Performance,perform,perform,98,"It generates all stack primitives - axis histogram and legend as Paint; method does, but does not perform Paint. ; Will be used in TWebCanvas. Replace NULL by nullptr in hist tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11678
https://github.com/root-project/root/pull/11681:73,Safety,detect,detection,73,The latest version of Apache Arrow requires C++17. This commit fixes the detection of Arrow and disable the arrow option if `CMAKE_CXX_STANDARD` is less than 17,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11681
https://github.com/root-project/root/pull/11683:293,Deployability,update,updated,293,"This pull request adds the attribute `uint64_t iod_flags`, introduced in DAOS v2.0, to the definition of `daos_iod_t` in our mock implementation of libdaos for development. See: https://docs.daos.io/v2.0/doxygen/html/structdaos__iod__t.html. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11683
https://github.com/root-project/root/pull/11683:125,Testability,mock,mock,125,"This pull request adds the attribute `uint64_t iod_flags`, introduced in DAOS v2.0, to the definition of `daos_iod_t` in our mock implementation of libdaos for development. See: https://docs.daos.io/v2.0/doxygen/html/structdaos__iod__t.html. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11683
https://github.com/root-project/root/pull/11683:263,Testability,test,tested,263,"This pull request adds the attribute `uint64_t iod_flags`, introduced in DAOS v2.0, to the definition of `daos_iod_t` in our mock implementation of libdaos for development. See: https://docs.daos.io/v2.0/doxygen/html/structdaos__iod__t.html. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11683
https://github.com/root-project/root/pull/11684:73,Safety,detect,detection,73,The latest version of Apache Arrow requires C++17. This commit fixes the detection of Arrow and disable the arrow option if `CMAKE_CXX_STANDARD` is less than 17,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11684
https://github.com/root-project/root/pull/11685:92,Deployability,patch,patch,92,"As returning an unpacked tuple without parenthesis is only supported since Python 3.8. This patch fixes the following:; ```; python3.7 -m py_compile _rdf_pyz.py; File ""_rdf_pyz.py"", line 253; return v, *args[1:]; ^; SyntaxError: invalid syntax; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11685
https://github.com/root-project/root/issues/11686:62,Availability,error,error-rint-pcm-is-out-of-date-cannot-read-module-signature,62,"As seen in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/38, there is missing dependency on Rint that leads to out of order creation:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. while indeed. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. This out of order build is seen when using `CMake` with `gnu make` on Ubuntu 22 (on WSL). On the same platform, using `Ninja` leads to the creation in the right order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11686
https://github.com/root-project/root/issues/11686:257,Availability,error,error,257,"As seen in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/38, there is missing dependency on Rint that leads to out of order creation:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. while indeed. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. This out of order build is seen when using `CMake` with `gnu make` on Ubuntu 22 (on WSL). On the same platform, using `Ninja` leads to the creation in the right order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11686
https://github.com/root-project/root/issues/11686:524,Availability,Error,Error,524,"As seen in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/38, there is missing dependency on Rint that leads to out of order creation:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. while indeed. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. This out of order build is seen when using `CMake` with `gnu make` on Ubuntu 22 (on WSL). On the same platform, using `Ninja` leads to the creation in the right order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11686
https://github.com/root-project/root/issues/11686:570,Availability,Error,Error,570,"As seen in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/38, there is missing dependency on Rint that leads to out of order creation:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. while indeed. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. This out of order build is seen when using `CMake` with `gnu make` on Ubuntu 22 (on WSL). On the same platform, using `Ninja` leads to the creation in the right order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11686
https://github.com/root-project/root/issues/11686:577,Availability,Error,Error,577,"As seen in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/38, there is missing dependency on Rint that leads to out of order creation:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. while indeed. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. This out of order build is seen when using `CMake` with `gnu make` on Ubuntu 22 (on WSL). On the same platform, using `Ninja` leads to the creation in the right order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11686
https://github.com/root-project/root/issues/11686:730,Availability,Error,Error,730,"As seen in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/38, there is missing dependency on Rint that leads to out of order creation:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. while indeed. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. This out of order build is seen when using `CMake` with `gnu make` on Ubuntu 22 (on WSL). On the same platform, using `Ninja` leads to the creation in the right order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11686
https://github.com/root-project/root/issues/11686:148,Integrability,depend,dependency,148,"As seen in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/38, there is missing dependency on Rint that leads to out of order creation:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. while indeed. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. This out of order build is seen when using `CMake` with `gnu make` on Ubuntu 22 (on WSL). On the same platform, using `Ninja` leads to the creation in the right order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11686
https://github.com/root-project/root/issues/11686:563,Performance,load,load,563,"As seen in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/38, there is missing dependency on Rint that leads to out of order creation:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. while indeed. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. This out of order build is seen when using `CMake` with `gnu make` on Ubuntu 22 (on WSL). On the same platform, using `Ninja` leads to the creation in the right order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11686
https://github.com/root-project/root/issues/11686:583,Performance,load,loading,583,"As seen in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/38, there is missing dependency on Rint that leads to out of order creation:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. while indeed. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. This out of order build is seen when using `CMake` with `gnu make` on Ubuntu 22 (on WSL). On the same platform, using `Ninja` leads to the creation in the right order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11686
https://github.com/root-project/root/pull/11687:940,Availability,error,error,940,"`TCling.cxx`’s `RegisterCxxModules` loads explicitly several modules including `Core`, `Rint` and `RIO`. When executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11687
https://github.com/root-project/root/pull/11687:1008,Availability,error,error,1008,"`’s `RegisterCxxModules` loads explicitly several modules including `Core`, `Rint` and `RIO`. When executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:872;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11687
https://github.com/root-project/root/pull/11687:1275,Availability,Error,Error,1275," executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; at /home/pcanal/root_working/code/master/core/metacling/src/TCling.cxx:1590. This PR fixes #11686",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11687
https://github.com/root-project/root/pull/11687:1321,Availability,Error,Error,1321," executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; at /home/pcanal/root_working/code/master/core/metacling/src/TCling.cxx:1590. This PR fixes #11686",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11687
https://github.com/root-project/root/pull/11687:1328,Availability,Error,Error,1328," executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; at /home/pcanal/root_working/code/master/core/metacling/src/TCling.cxx:1590. This PR fixes #11686",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11687
https://github.com/root-project/root/pull/11687:1481,Availability,Error,Error,1481," executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; at /home/pcanal/root_working/code/master/core/metacling/src/TCling.cxx:1590. This PR fixes #11686",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11687
https://github.com/root-project/root/pull/11687:1579,Availability,error,error-rint-pcm-is-out-of-date-cannot-read-module-signature,1579," executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; at /home/pcanal/root_working/code/master/core/metacling/src/TCling.cxx:1590. This PR fixes #11686",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11687
https://github.com/root-project/root/pull/11687:319,Integrability,depend,dependencies,319,"`TCling.cxx`’s `RegisterCxxModules` loads explicitly several modules including `Core`, `Rint` and `RIO`. When executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11687
https://github.com/root-project/root/pull/11687:422,Integrability,depend,depends-on,422,"`TCling.cxx`’s `RegisterCxxModules` loads explicitly several modules including `Core`, `Rint` and `RIO`. When executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11687
https://github.com/root-project/root/pull/11687:946,Integrability,message,message,946,"`TCling.cxx`’s `RegisterCxxModules` loads explicitly several modules including `Core`, `Rint` and `RIO`. When executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11687
https://github.com/root-project/root/pull/11687:36,Performance,load,loads,36,"`TCling.cxx`’s `RegisterCxxModules` loads explicitly several modules including `Core`, `Rint` and `RIO`. When executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11687
https://github.com/root-project/root/pull/11687:1314,Performance,load,load,1314," executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; at /home/pcanal/root_working/code/master/core/metacling/src/TCling.cxx:1590. This PR fixes #11686",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11687
https://github.com/root-project/root/pull/11687:1334,Performance,load,loading,1334," executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; at /home/pcanal/root_working/code/master/core/metacling/src/TCling.cxx:1590. This PR fixes #11686",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11687
https://github.com/root-project/root/pull/11688:391,Deployability,Update,Update,391,"IMPORTANT! It is not yet enabling web canvas as default. 1. By default enable all `TWebCanvas` interactive features. Now zooming, log scale change, pad clicking, tooltip is reflected on C++ back. See `hlHisto[1/2/3/4].C` tutorials; 2. Testing all tutorials in `tutorials/hist/` subfolder. Basic display works for all of them, some interactive features (especially with `TExec`) not yet.; 3. Update JSROOT with correspondent changes plus many other improvements,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11688
https://github.com/root-project/root/pull/11688:130,Testability,log,log,130,"IMPORTANT! It is not yet enabling web canvas as default. 1. By default enable all `TWebCanvas` interactive features. Now zooming, log scale change, pad clicking, tooltip is reflected on C++ back. See `hlHisto[1/2/3/4].C` tutorials; 2. Testing all tutorials in `tutorials/hist/` subfolder. Basic display works for all of them, some interactive features (especially with `TExec`) not yet.; 3. Update JSROOT with correspondent changes plus many other improvements,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11688
https://github.com/root-project/root/pull/11688:235,Testability,Test,Testing,235,"IMPORTANT! It is not yet enabling web canvas as default. 1. By default enable all `TWebCanvas` interactive features. Now zooming, log scale change, pad clicking, tooltip is reflected on C++ back. See `hlHisto[1/2/3/4].C` tutorials; 2. Testing all tutorials in `tutorials/hist/` subfolder. Basic display works for all of them, some interactive features (especially with `TExec`) not yet.; 3. Update JSROOT with correspondent changes plus many other improvements,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11688
https://github.com/root-project/root/pull/11693:274,Deployability,update,updated,274,"""suppress"" ignores any unresolved symbol. This requires flat_namespace, see man ld. (cherry picked from commit a05d4beded1481a86a65e450826352eb528b03e7). v626 version of #11690 . # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11693
https://github.com/root-project/root/pull/11693:244,Testability,test,tested,244,"""suppress"" ignores any unresolved symbol. This requires flat_namespace, see man ld. (cherry picked from commit a05d4beded1481a86a65e450826352eb528b03e7). v626 version of #11690 . # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11693
https://github.com/root-project/root/issues/11694:46,Availability,error,error,46,"https://starlight.hepforge.org/ . I found the error which run make but I can't fix that. ; ![Screenshot 2022-11-12 141541](https://user-images.githubusercontent.com/116489914/201471628-4dc9d225-537d-40da-a2da-e8d6d4922a79.png); ![Screenshot 2022-11-12 141807](https://user-images.githubusercontent.com/116489914/201471631-aca47583-d887-475b-a267-5f21d44ee3d9.png); ![Screenshot 2022-11-12 141825](https://user-images.githubusercontent.com/116489914/201471634-b3fc3b8d-aa65-4afa-983c-5d1ad9fc7909.png). Please, I need help.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11694
https://github.com/root-project/root/pull/11695:604,Deployability,configurat,configuration,604,"In https://github.com/root-project/root/pull/11604, many redundancies in the RooMinimizer design became apparent,; and this PR aims to avoid them. The following changes are made:. * The signature of `RooAbsMinimizerFcn::Synchronize()` is changed to not; take a `bool optConst` argument anymore. Ths is because the value of; the argument that was passed by the RooMinimizer instance was always a; member of the `RooAbsMinimizerFcn` anyway. * Change type of `RooMinimizer::Config::verbose` to `bool`, because; `setVerbose()` also takes a `bool` flag. * Give `RooAbsMinimizerFcn` access to the RooMinimizer configuration; such that configuration data does not need to be duplicated. A separate commit in this PR formats the code of the `RooMinimizerFcn`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11695
https://github.com/root-project/root/pull/11695:629,Deployability,configurat,configuration,629,"In https://github.com/root-project/root/pull/11604, many redundancies in the RooMinimizer design became apparent,; and this PR aims to avoid them. The following changes are made:. * The signature of `RooAbsMinimizerFcn::Synchronize()` is changed to not; take a `bool optConst` argument anymore. Ths is because the value of; the argument that was passed by the RooMinimizer instance was always a; member of the `RooAbsMinimizerFcn` anyway. * Change type of `RooMinimizer::Config::verbose` to `bool`, because; `setVerbose()` also takes a `bool` flag. * Give `RooAbsMinimizerFcn` access to the RooMinimizer configuration; such that configuration data does not need to be duplicated. A separate commit in this PR formats the code of the `RooMinimizerFcn`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11695
https://github.com/root-project/root/pull/11695:220,Integrability,Synchroniz,Synchronize,220,"In https://github.com/root-project/root/pull/11604, many redundancies in the RooMinimizer design became apparent,; and this PR aims to avoid them. The following changes are made:. * The signature of `RooAbsMinimizerFcn::Synchronize()` is changed to not; take a `bool optConst` argument anymore. Ths is because the value of; the argument that was passed by the RooMinimizer instance was always a; member of the `RooAbsMinimizerFcn` anyway. * Change type of `RooMinimizer::Config::verbose` to `bool`, because; `setVerbose()` also takes a `bool` flag. * Give `RooAbsMinimizerFcn` access to the RooMinimizer configuration; such that configuration data does not need to be duplicated. A separate commit in this PR formats the code of the `RooMinimizerFcn`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11695
https://github.com/root-project/root/pull/11695:471,Modifiability,Config,Config,471,"In https://github.com/root-project/root/pull/11604, many redundancies in the RooMinimizer design became apparent,; and this PR aims to avoid them. The following changes are made:. * The signature of `RooAbsMinimizerFcn::Synchronize()` is changed to not; take a `bool optConst` argument anymore. Ths is because the value of; the argument that was passed by the RooMinimizer instance was always a; member of the `RooAbsMinimizerFcn` anyway. * Change type of `RooMinimizer::Config::verbose` to `bool`, because; `setVerbose()` also takes a `bool` flag. * Give `RooAbsMinimizerFcn` access to the RooMinimizer configuration; such that configuration data does not need to be duplicated. A separate commit in this PR formats the code of the `RooMinimizerFcn`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11695
https://github.com/root-project/root/pull/11695:604,Modifiability,config,configuration,604,"In https://github.com/root-project/root/pull/11604, many redundancies in the RooMinimizer design became apparent,; and this PR aims to avoid them. The following changes are made:. * The signature of `RooAbsMinimizerFcn::Synchronize()` is changed to not; take a `bool optConst` argument anymore. Ths is because the value of; the argument that was passed by the RooMinimizer instance was always a; member of the `RooAbsMinimizerFcn` anyway. * Change type of `RooMinimizer::Config::verbose` to `bool`, because; `setVerbose()` also takes a `bool` flag. * Give `RooAbsMinimizerFcn` access to the RooMinimizer configuration; such that configuration data does not need to be duplicated. A separate commit in this PR formats the code of the `RooMinimizerFcn`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11695
https://github.com/root-project/root/pull/11695:629,Modifiability,config,configuration,629,"In https://github.com/root-project/root/pull/11604, many redundancies in the RooMinimizer design became apparent,; and this PR aims to avoid them. The following changes are made:. * The signature of `RooAbsMinimizerFcn::Synchronize()` is changed to not; take a `bool optConst` argument anymore. Ths is because the value of; the argument that was passed by the RooMinimizer instance was always a; member of the `RooAbsMinimizerFcn` anyway. * Change type of `RooMinimizer::Config::verbose` to `bool`, because; `setVerbose()` also takes a `bool` flag. * Give `RooAbsMinimizerFcn` access to the RooMinimizer configuration; such that configuration data does not need to be duplicated. A separate commit in this PR formats the code of the `RooMinimizerFcn`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11695
https://github.com/root-project/root/pull/11695:57,Safety,redund,redundancies,57,"In https://github.com/root-project/root/pull/11604, many redundancies in the RooMinimizer design became apparent,; and this PR aims to avoid them. The following changes are made:. * The signature of `RooAbsMinimizerFcn::Synchronize()` is changed to not; take a `bool optConst` argument anymore. Ths is because the value of; the argument that was passed by the RooMinimizer instance was always a; member of the `RooAbsMinimizerFcn` anyway. * Change type of `RooMinimizer::Config::verbose` to `bool`, because; `setVerbose()` also takes a `bool` flag. * Give `RooAbsMinimizerFcn` access to the RooMinimizer configuration; such that configuration data does not need to be duplicated. A separate commit in this PR formats the code of the `RooMinimizerFcn`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11695
https://github.com/root-project/root/pull/11695:135,Safety,avoid,avoid,135,"In https://github.com/root-project/root/pull/11604, many redundancies in the RooMinimizer design became apparent,; and this PR aims to avoid them. The following changes are made:. * The signature of `RooAbsMinimizerFcn::Synchronize()` is changed to not; take a `bool optConst` argument anymore. Ths is because the value of; the argument that was passed by the RooMinimizer instance was always a; member of the `RooAbsMinimizerFcn` anyway. * Change type of `RooMinimizer::Config::verbose` to `bool`, because; `setVerbose()` also takes a `bool` flag. * Give `RooAbsMinimizerFcn` access to the RooMinimizer configuration; such that configuration data does not need to be duplicated. A separate commit in this PR formats the code of the `RooMinimizerFcn`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11695
https://github.com/root-project/root/pull/11695:577,Security,access,access,577,"In https://github.com/root-project/root/pull/11604, many redundancies in the RooMinimizer design became apparent,; and this PR aims to avoid them. The following changes are made:. * The signature of `RooAbsMinimizerFcn::Synchronize()` is changed to not; take a `bool optConst` argument anymore. Ths is because the value of; the argument that was passed by the RooMinimizer instance was always a; member of the `RooAbsMinimizerFcn` anyway. * Change type of `RooMinimizer::Config::verbose` to `bool`, because; `setVerbose()` also takes a `bool` flag. * Give `RooAbsMinimizerFcn` access to the RooMinimizer configuration; such that configuration data does not need to be duplicated. A separate commit in this PR formats the code of the `RooMinimizerFcn`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11695
https://github.com/root-project/root/pull/11696:167,Deployability,integrat,integrated,167,"In the RooRealIntegral and RooGenProdProj classes, the normalization sets were so far not forwarded to the servers, which resulted in undefined normalization sets for integrated PDFs as reported in #11476. A unit test that covers #11476 and the related JIRA issue ROOT-9436 is also implemented. Closes #11476.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11696
https://github.com/root-project/root/pull/11696:167,Integrability,integrat,integrated,167,"In the RooRealIntegral and RooGenProdProj classes, the normalization sets were so far not forwarded to the servers, which resulted in undefined normalization sets for integrated PDFs as reported in #11476. A unit test that covers #11476 and the related JIRA issue ROOT-9436 is also implemented. Closes #11476.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11696
https://github.com/root-project/root/pull/11696:213,Testability,test,test,213,"In the RooRealIntegral and RooGenProdProj classes, the normalization sets were so far not forwarded to the servers, which resulted in undefined normalization sets for integrated PDFs as reported in #11476. A unit test that covers #11476 and the related JIRA issue ROOT-9436 is also implemented. Closes #11476.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11696
https://github.com/root-project/root/pull/11697:18,Deployability,integrat,integration,18,"In the RooPoisson integration code, it is hardcoded to return 1.0 if the upper boundary is infinite. But this should only be done if the lower boundary is not greater than zero. Closes #10868.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11697
https://github.com/root-project/root/pull/11697:18,Integrability,integrat,integration,18,"In the RooPoisson integration code, it is hardcoded to return 1.0 if the upper boundary is infinite. But this should only be done if the lower boundary is not greater than zero. Closes #10868.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11697
https://github.com/root-project/root/pull/11698:226,Availability,failure,failure,226,"When iterating over the `clients()` to clear the clients caches, the list of clients itself might also be changed during the iteration. We therefore can't do a range-based loop. This fixes the last remaining RooFit ASAN build failure in `testRooAddPdf`. This is a followup to efd468b4947.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11698
https://github.com/root-project/root/pull/11698:57,Performance,cache,caches,57,"When iterating over the `clients()` to clear the clients caches, the list of clients itself might also be changed during the iteration. We therefore can't do a range-based loop. This fixes the last remaining RooFit ASAN build failure in `testRooAddPdf`. This is a followup to efd468b4947.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11698
https://github.com/root-project/root/pull/11698:238,Testability,test,testRooAddPdf,238,"When iterating over the `clients()` to clear the clients caches, the list of clients itself might also be changed during the iteration. We therefore can't do a range-based loop. This fixes the last remaining RooFit ASAN build failure in `testRooAddPdf`. This is a followup to efd468b4947.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11698
https://github.com/root-project/root/pull/11698:39,Usability,clear,clear,39,"When iterating over the `clients()` to clear the clients caches, the list of clients itself might also be changed during the iteration. We therefore can't do a range-based loop. This fixes the last remaining RooFit ASAN build failure in `testRooAddPdf`. This is a followup to efd468b4947.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11698
https://github.com/root-project/root/pull/11700:86,Modifiability,variab,variable,86,This fixes a warning seen on macOS:; ```; zstd_compress_superblock.c:412:12: warning: variable 'litLengthSum' set but not used; ```; As we won't fix those there's no need to emit them. (cherry picked from commit 660ef262c064fbb7eaedc560f0466b7d6eb24fd1),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11700
https://github.com/root-project/root/pull/11701:664,Deployability,update,updated,664,"In the implementation of `RooHistPdf::plotSamplingHint`, some of the; returned values can be outside the variable definition range. This might; lead to invalid evaluations when the sampling hints are also used to; evaluate other PDF components of a composite PDF, as reported in https://github.com/root-project/root/issues/11482. This commit suggests an improved algorithm for the sampling hint:; consider only bin boundaries that are strictly between the plot limits; within some epsilon, and for the limits just sample two additional; points left and light that are some epsilon aways from the plot limits. The `stressRooFit_ref.root` reference file needs to be updated with this; change, because the sampling changes the RooPlots that are used as; reference objects. The final commit in this PR avoids code redundancy by calling the implementation of `RooHistPdf::plotSamplingHint` also in the `RooHistFunc`. Closes https://github.com/root-project/root/issues/11482.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11701
https://github.com/root-project/root/pull/11701:105,Modifiability,variab,variable,105,"In the implementation of `RooHistPdf::plotSamplingHint`, some of the; returned values can be outside the variable definition range. This might; lead to invalid evaluations when the sampling hints are also used to; evaluate other PDF components of a composite PDF, as reported in https://github.com/root-project/root/issues/11482. This commit suggests an improved algorithm for the sampling hint:; consider only bin boundaries that are strictly between the plot limits; within some epsilon, and for the limits just sample two additional; points left and light that are some epsilon aways from the plot limits. The `stressRooFit_ref.root` reference file needs to be updated with this; change, because the sampling changes the RooPlots that are used as; reference objects. The final commit in this PR avoids code redundancy by calling the implementation of `RooHistPdf::plotSamplingHint` also in the `RooHistFunc`. Closes https://github.com/root-project/root/issues/11482.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11701
https://github.com/root-project/root/pull/11701:798,Safety,avoid,avoids,798,"In the implementation of `RooHistPdf::plotSamplingHint`, some of the; returned values can be outside the variable definition range. This might; lead to invalid evaluations when the sampling hints are also used to; evaluate other PDF components of a composite PDF, as reported in https://github.com/root-project/root/issues/11482. This commit suggests an improved algorithm for the sampling hint:; consider only bin boundaries that are strictly between the plot limits; within some epsilon, and for the limits just sample two additional; points left and light that are some epsilon aways from the plot limits. The `stressRooFit_ref.root` reference file needs to be updated with this; change, because the sampling changes the RooPlots that are used as; reference objects. The final commit in this PR avoids code redundancy by calling the implementation of `RooHistPdf::plotSamplingHint` also in the `RooHistFunc`. Closes https://github.com/root-project/root/issues/11482.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11701
https://github.com/root-project/root/pull/11701:810,Safety,redund,redundancy,810,"In the implementation of `RooHistPdf::plotSamplingHint`, some of the; returned values can be outside the variable definition range. This might; lead to invalid evaluations when the sampling hints are also used to; evaluate other PDF components of a composite PDF, as reported in https://github.com/root-project/root/issues/11482. This commit suggests an improved algorithm for the sampling hint:; consider only bin boundaries that are strictly between the plot limits; within some epsilon, and for the limits just sample two additional; points left and light that are some epsilon aways from the plot limits. The `stressRooFit_ref.root` reference file needs to be updated with this; change, because the sampling changes the RooPlots that are used as; reference objects. The final commit in this PR avoids code redundancy by calling the implementation of `RooHistPdf::plotSamplingHint` also in the `RooHistFunc`. Closes https://github.com/root-project/root/issues/11482.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11701
https://github.com/root-project/root/pull/11702:29,Availability,error,error,29,"```; rulevisCorr.cxx:173:43: error: ‘snprintf’ output may be truncated before the last format character [-Werror=format-truncation=]; 173 | snprintf( cn, 20, ""rulecorr%d_"", countCanvas+1 );; | ^; rulevisCorr.cxx:173:21: note: ‘snprintf’ output between 11 and 21 bytes into a destination of size 20; 173 | snprintf( cn, 20, ""rulecorr%d_"", countCanvas+1 );; | ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11702
https://github.com/root-project/root/pull/11702:508,Deployability,update,updated,508,"```; rulevisCorr.cxx:173:43: error: ‘snprintf’ output may be truncated before the last format character [-Werror=format-truncation=]; 173 | snprintf( cn, 20, ""rulecorr%d_"", countCanvas+1 );; | ^; rulevisCorr.cxx:173:21: note: ‘snprintf’ output between 11 and 21 bytes into a destination of size 20; 173 | snprintf( cn, 20, ""rulecorr%d_"", countCanvas+1 );; | ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11702
https://github.com/root-project/root/pull/11702:478,Testability,test,tested,478,"```; rulevisCorr.cxx:173:43: error: ‘snprintf’ output may be truncated before the last format character [-Werror=format-truncation=]; 173 | snprintf( cn, 20, ""rulecorr%d_"", countCanvas+1 );; | ^; rulevisCorr.cxx:173:21: note: ‘snprintf’ output between 11 and 21 bytes into a destination of size 20; 173 | snprintf( cn, 20, ""rulecorr%d_"", countCanvas+1 );; | ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11702
https://github.com/root-project/root/pull/11703:111,Performance,load,loaded,111,"LLVM component must be registered as LLVM_LINK_COMPONENTS to be compatible with LLVM Dylib. Otherwise they are loaded twice in the final binary, once through LLVM Dylmib and once through individual component, and this results in some options being registered twice. Fix root-project/cling#440",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11703
https://github.com/root-project/root/pull/11704:44,Availability,failure,failure,44,"# This Pull request:. This PR fixes a build failure due to out-of-bounds vector element access in SOFIE. ## Changes or fixes:; ~~~~; cd <SRCDIR>/redhat-linux-build/tmva/sofie/test && /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 ./emitFromONNX <SRCDIR>/tmva/sofie/test/input_models/ConvTranspose1d.onnx <SRCDIR>/redhat-linux-build/tmva/sofie/test/ConvTranspose1d; /usr/include/c++/12/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>; reference = long unsigned int&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Subprocess aborted; gmake[2]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/build.make:84: SofieCompileModels_ONNX] Error 1; gmake[2]: Leaving directory '<SRCDIR>/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:50024: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11704
https://github.com/root-project/root/pull/11704:796,Availability,Error,Error,796,"# This Pull request:. This PR fixes a build failure due to out-of-bounds vector element access in SOFIE. ## Changes or fixes:; ~~~~; cd <SRCDIR>/redhat-linux-build/tmva/sofie/test && /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 ./emitFromONNX <SRCDIR>/tmva/sofie/test/input_models/ConvTranspose1d.onnx <SRCDIR>/redhat-linux-build/tmva/sofie/test/ConvTranspose1d; /usr/include/c++/12/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>; reference = long unsigned int&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Subprocess aborted; gmake[2]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/build.make:84: SofieCompileModels_ONNX] Error 1; gmake[2]: Leaving directory '<SRCDIR>/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:50024: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11704
https://github.com/root-project/root/pull/11704:967,Availability,Error,Error,967,"# This Pull request:. This PR fixes a build failure due to out-of-bounds vector element access in SOFIE. ## Changes or fixes:; ~~~~; cd <SRCDIR>/redhat-linux-build/tmva/sofie/test && /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 ./emitFromONNX <SRCDIR>/tmva/sofie/test/input_models/ConvTranspose1d.onnx <SRCDIR>/redhat-linux-build/tmva/sofie/test/ConvTranspose1d; /usr/include/c++/12/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>; reference = long unsigned int&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Subprocess aborted; gmake[2]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/build.make:84: SofieCompileModels_ONNX] Error 1; gmake[2]: Leaving directory '<SRCDIR>/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:50024: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11704
https://github.com/root-project/root/pull/11704:1080,Deployability,update,updated,1080,"# This Pull request:. This PR fixes a build failure due to out-of-bounds vector element access in SOFIE. ## Changes or fixes:; ~~~~; cd <SRCDIR>/redhat-linux-build/tmva/sofie/test && /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 ./emitFromONNX <SRCDIR>/tmva/sofie/test/input_models/ConvTranspose1d.onnx <SRCDIR>/redhat-linux-build/tmva/sofie/test/ConvTranspose1d; /usr/include/c++/12/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>; reference = long unsigned int&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Subprocess aborted; gmake[2]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/build.make:84: SofieCompileModels_ONNX] Error 1; gmake[2]: Leaving directory '<SRCDIR>/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:50024: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11704
https://github.com/root-project/root/pull/11704:677,Safety,abort,aborted,677,"# This Pull request:. This PR fixes a build failure due to out-of-bounds vector element access in SOFIE. ## Changes or fixes:; ~~~~; cd <SRCDIR>/redhat-linux-build/tmva/sofie/test && /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 ./emitFromONNX <SRCDIR>/tmva/sofie/test/input_models/ConvTranspose1d.onnx <SRCDIR>/redhat-linux-build/tmva/sofie/test/ConvTranspose1d; /usr/include/c++/12/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>; reference = long unsigned int&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Subprocess aborted; gmake[2]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/build.make:84: SofieCompileModels_ONNX] Error 1; gmake[2]: Leaving directory '<SRCDIR>/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:50024: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11704
https://github.com/root-project/root/pull/11704:88,Security,access,access,88,"# This Pull request:. This PR fixes a build failure due to out-of-bounds vector element access in SOFIE. ## Changes or fixes:; ~~~~; cd <SRCDIR>/redhat-linux-build/tmva/sofie/test && /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 ./emitFromONNX <SRCDIR>/tmva/sofie/test/input_models/ConvTranspose1d.onnx <SRCDIR>/redhat-linux-build/tmva/sofie/test/ConvTranspose1d; /usr/include/c++/12/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>; reference = long unsigned int&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Subprocess aborted; gmake[2]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/build.make:84: SofieCompileModels_ONNX] Error 1; gmake[2]: Leaving directory '<SRCDIR>/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:50024: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11704
https://github.com/root-project/root/pull/11704:175,Testability,test,test,175,"# This Pull request:. This PR fixes a build failure due to out-of-bounds vector element access in SOFIE. ## Changes or fixes:; ~~~~; cd <SRCDIR>/redhat-linux-build/tmva/sofie/test && /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 ./emitFromONNX <SRCDIR>/tmva/sofie/test/input_models/ConvTranspose1d.onnx <SRCDIR>/redhat-linux-build/tmva/sofie/test/ConvTranspose1d; /usr/include/c++/12/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>; reference = long unsigned int&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Subprocess aborted; gmake[2]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/build.make:84: SofieCompileModels_ONNX] Error 1; gmake[2]: Leaving directory '<SRCDIR>/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:50024: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11704
https://github.com/root-project/root/pull/11704:259,Testability,test,test,259,"# This Pull request:. This PR fixes a build failure due to out-of-bounds vector element access in SOFIE. ## Changes or fixes:; ~~~~; cd <SRCDIR>/redhat-linux-build/tmva/sofie/test && /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 ./emitFromONNX <SRCDIR>/tmva/sofie/test/input_models/ConvTranspose1d.onnx <SRCDIR>/redhat-linux-build/tmva/sofie/test/ConvTranspose1d; /usr/include/c++/12/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>; reference = long unsigned int&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Subprocess aborted; gmake[2]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/build.make:84: SofieCompileModels_ONNX] Error 1; gmake[2]: Leaving directory '<SRCDIR>/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:50024: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11704
https://github.com/root-project/root/pull/11704:337,Testability,test,test,337,"# This Pull request:. This PR fixes a build failure due to out-of-bounds vector element access in SOFIE. ## Changes or fixes:; ~~~~; cd <SRCDIR>/redhat-linux-build/tmva/sofie/test && /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 ./emitFromONNX <SRCDIR>/tmva/sofie/test/input_models/ConvTranspose1d.onnx <SRCDIR>/redhat-linux-build/tmva/sofie/test/ConvTranspose1d; /usr/include/c++/12/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>; reference = long unsigned int&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Subprocess aborted; gmake[2]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/build.make:84: SofieCompileModels_ONNX] Error 1; gmake[2]: Leaving directory '<SRCDIR>/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:50024: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11704
https://github.com/root-project/root/pull/11704:626,Testability,Assert,Assertion,626,"# This Pull request:. This PR fixes a build failure due to out-of-bounds vector element access in SOFIE. ## Changes or fixes:; ~~~~; cd <SRCDIR>/redhat-linux-build/tmva/sofie/test && /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 ./emitFromONNX <SRCDIR>/tmva/sofie/test/input_models/ConvTranspose1d.onnx <SRCDIR>/redhat-linux-build/tmva/sofie/test/ConvTranspose1d; /usr/include/c++/12/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>; reference = long unsigned int&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Subprocess aborted; gmake[2]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/build.make:84: SofieCompileModels_ONNX] Error 1; gmake[2]: Leaving directory '<SRCDIR>/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:50024: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11704
https://github.com/root-project/root/pull/11704:712,Testability,test,test,712,"# This Pull request:. This PR fixes a build failure due to out-of-bounds vector element access in SOFIE. ## Changes or fixes:; ~~~~; cd <SRCDIR>/redhat-linux-build/tmva/sofie/test && /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 ./emitFromONNX <SRCDIR>/tmva/sofie/test/input_models/ConvTranspose1d.onnx <SRCDIR>/redhat-linux-build/tmva/sofie/test/ConvTranspose1d; /usr/include/c++/12/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>; reference = long unsigned int&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Subprocess aborted; gmake[2]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/build.make:84: SofieCompileModels_ONNX] Error 1; gmake[2]: Leaving directory '<SRCDIR>/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:50024: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11704
https://github.com/root-project/root/pull/11704:918,Testability,test,test,918,"# This Pull request:. This PR fixes a build failure due to out-of-bounds vector element access in SOFIE. ## Changes or fixes:; ~~~~; cd <SRCDIR>/redhat-linux-build/tmva/sofie/test && /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 ./emitFromONNX <SRCDIR>/tmva/sofie/test/input_models/ConvTranspose1d.onnx <SRCDIR>/redhat-linux-build/tmva/sofie/test/ConvTranspose1d; /usr/include/c++/12/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>; reference = long unsigned int&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Subprocess aborted; gmake[2]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/build.make:84: SofieCompileModels_ONNX] Error 1; gmake[2]: Leaving directory '<SRCDIR>/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:50024: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11704
https://github.com/root-project/root/pull/11704:1050,Testability,test,tested,1050,"# This Pull request:. This PR fixes a build failure due to out-of-bounds vector element access in SOFIE. ## Changes or fixes:; ~~~~; cd <SRCDIR>/redhat-linux-build/tmva/sofie/test && /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 ./emitFromONNX <SRCDIR>/tmva/sofie/test/input_models/ConvTranspose1d.onnx <SRCDIR>/redhat-linux-build/tmva/sofie/test/ConvTranspose1d; /usr/include/c++/12/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>; reference = long unsigned int&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Subprocess aborted; gmake[2]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/build.make:84: SofieCompileModels_ONNX] Error 1; gmake[2]: Leaving directory '<SRCDIR>/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:50024: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11704
https://github.com/root-project/root/pull/11705:227,Deployability,update,update,227,"1. Y-axis range with histogram without content; 2. Do not create title when not required (especially for TGraph); 3. Provide ""Clear canvas"", ""Clear pad"" and ""Interrupt"" menu items; 4. Editing line attributes in GED - correctly update on ROOT side; 5. Handling of complex TLatex like `{a}_{b}^{e}^{2}`; 6. Adjust several tutorials; 7. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11705
https://github.com/root-project/root/pull/11705:334,Deployability,Update,Update,334,"1. Y-axis range with histogram without content; 2. Do not create title when not required (especially for TGraph); 3. Provide ""Clear canvas"", ""Clear pad"" and ""Interrupt"" menu items; 4. Editing line attributes in GED - correctly update on ROOT side; 5. Handling of complex TLatex like `{a}_{b}^{e}^{2}`; 6. Adjust several tutorials; 7. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11705
https://github.com/root-project/root/pull/11705:126,Usability,Clear,Clear,126,"1. Y-axis range with histogram without content; 2. Do not create title when not required (especially for TGraph); 3. Provide ""Clear canvas"", ""Clear pad"" and ""Interrupt"" menu items; 4. Editing line attributes in GED - correctly update on ROOT side; 5. Handling of complex TLatex like `{a}_{b}^{e}^{2}`; 6. Adjust several tutorials; 7. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11705
https://github.com/root-project/root/pull/11705:142,Usability,Clear,Clear,142,"1. Y-axis range with histogram without content; 2. Do not create title when not required (especially for TGraph); 3. Provide ""Clear canvas"", ""Clear pad"" and ""Interrupt"" menu items; 4. Editing line attributes in GED - correctly update on ROOT side; 5. Handling of complex TLatex like `{a}_{b}^{e}^{2}`; 6. Adjust several tutorials; 7. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11705
https://github.com/root-project/root/pull/11706:73,Availability,Error,Error,73,"cmake fails if `arrow` not installed while ARROW_VERSION is not defined. Error message is:; ```; CMake Error at cmake/modules/FindArrow.cmake:40 (if):; if given arguments:. ""0"" ""AND"" ""VERSION_GREATER_EQUAL"" ""10.0.0"". Unknown arguments specified; Call Stack (most recent call first):; cmake/modules/SearchInstalledSoftware.cmake:18 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1062 (find_package); CMakeLists.txt:249 (include); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11706
https://github.com/root-project/root/pull/11706:103,Availability,Error,Error,103,"cmake fails if `arrow` not installed while ARROW_VERSION is not defined. Error message is:; ```; CMake Error at cmake/modules/FindArrow.cmake:40 (if):; if given arguments:. ""0"" ""AND"" ""VERSION_GREATER_EQUAL"" ""10.0.0"". Unknown arguments specified; Call Stack (most recent call first):; cmake/modules/SearchInstalledSoftware.cmake:18 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1062 (find_package); CMakeLists.txt:249 (include); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11706
https://github.com/root-project/root/pull/11706:27,Deployability,install,installed,27,"cmake fails if `arrow` not installed while ARROW_VERSION is not defined. Error message is:; ```; CMake Error at cmake/modules/FindArrow.cmake:40 (if):; if given arguments:. ""0"" ""AND"" ""VERSION_GREATER_EQUAL"" ""10.0.0"". Unknown arguments specified; Call Stack (most recent call first):; cmake/modules/SearchInstalledSoftware.cmake:18 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1062 (find_package); CMakeLists.txt:249 (include); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11706
https://github.com/root-project/root/pull/11706:79,Integrability,message,message,79,"cmake fails if `arrow` not installed while ARROW_VERSION is not defined. Error message is:; ```; CMake Error at cmake/modules/FindArrow.cmake:40 (if):; if given arguments:. ""0"" ""AND"" ""VERSION_GREATER_EQUAL"" ""10.0.0"". Unknown arguments specified; Call Stack (most recent call first):; cmake/modules/SearchInstalledSoftware.cmake:18 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1062 (find_package); CMakeLists.txt:249 (include); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11706
https://github.com/root-project/root/issues/11707:3218,Availability,error,error,3218,"540109c in main (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:78; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:115; #12 0x00005620a5400eba in handle_notebook_option (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:39; #13 0x00005620a540109c in main (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:78; ===========================================================. Root > .q; ```. - If compiled, there is no crash, but you get a cryptic error:; ```; root -l main.cpp+; root [0] ; Processing main.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp//tmp/./main_cpp.so; Error in <TApplication::TApplication>: only one instance of TApplication allowed; ```; - If one uses `void main` instead of `int main`, you get this error:; ```; /tmp/main.cpp:2:1: error: 'main' must return 'int'; void main(); ^~~~; int; ```; - If one uses an unnamed macro, the problem is not there. ### Expected behavior; An error should be printed if the user tries to execute such kind of named macros, rather than the current crashes or error messages. ### To Reproduce; - Write a file called `main.cpp` with the content `int main() { return 0;}`; - root -l main.cpp. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2022, 13:52:01 |; | From hea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11707
https://github.com/root-project/root/issues/11707:3365,Availability,Error,Error,3365,"forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:115; #12 0x00005620a5400eba in handle_notebook_option (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:39; #13 0x00005620a540109c in main (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:78; ===========================================================. Root > .q; ```. - If compiled, there is no crash, but you get a cryptic error:; ```; root -l main.cpp+; root [0] ; Processing main.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp//tmp/./main_cpp.so; Error in <TApplication::TApplication>: only one instance of TApplication allowed; ```; - If one uses `void main` instead of `int main`, you get this error:; ```; /tmp/main.cpp:2:1: error: 'main' must return 'int'; void main(); ^~~~; int; ```; - If one uses an unnamed macro, the problem is not there. ### Expected behavior; An error should be printed if the user tries to execute such kind of named macros, rather than the current crashes or error messages. ### To Reproduce; - Write a file called `main.cpp` with the content `int main() { return 0;}`; - root -l main.cpp. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2022, 13:52:01 |; | From heads/master@v6-25-01-4921-gdfd0f52391 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11707
https://github.com/root-project/root/issues/11707:3514,Availability,error,error,3514,"forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:115; #12 0x00005620a5400eba in handle_notebook_option (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:39; #13 0x00005620a540109c in main (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:78; ===========================================================. Root > .q; ```. - If compiled, there is no crash, but you get a cryptic error:; ```; root -l main.cpp+; root [0] ; Processing main.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp//tmp/./main_cpp.so; Error in <TApplication::TApplication>: only one instance of TApplication allowed; ```; - If one uses `void main` instead of `int main`, you get this error:; ```; /tmp/main.cpp:2:1: error: 'main' must return 'int'; void main(); ^~~~; int; ```; - If one uses an unnamed macro, the problem is not there. ### Expected behavior; An error should be printed if the user tries to execute such kind of named macros, rather than the current crashes or error messages. ### To Reproduce; - Write a file called `main.cpp` with the content `int main() { return 0;}`; - root -l main.cpp. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2022, 13:52:01 |; | From heads/master@v6-25-01-4921-gdfd0f52391 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11707
https://github.com/root-project/root/issues/11707:3546,Availability,error,error,3546,"s://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:115; #12 0x00005620a5400eba in handle_notebook_option (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:39; #13 0x00005620a540109c in main (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:78; ===========================================================. Root > .q; ```. - If compiled, there is no crash, but you get a cryptic error:; ```; root -l main.cpp+; root [0] ; Processing main.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp//tmp/./main_cpp.so; Error in <TApplication::TApplication>: only one instance of TApplication allowed; ```; - If one uses `void main` instead of `int main`, you get this error:; ```; /tmp/main.cpp:2:1: error: 'main' must return 'int'; void main(); ^~~~; int; ```; - If one uses an unnamed macro, the problem is not there. ### Expected behavior; An error should be printed if the user tries to execute such kind of named macros, rather than the current crashes or error messages. ### To Reproduce; - Write a file called `main.cpp` with the content `int main() { return 0;}`; - root -l main.cpp. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2022, 13:52:01 |; | From heads/master@v6-25-01-4921-gdfd0f52391 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://stackoverflow.com/questions/74247557/warning-failed-to-call-main-to-execute-the-macro/74445395#74445395",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11707
https://github.com/root-project/root/issues/11707:3692,Availability,error,error,3692,"s://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:115; #12 0x00005620a5400eba in handle_notebook_option (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:39; #13 0x00005620a540109c in main (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:78; ===========================================================. Root > .q; ```. - If compiled, there is no crash, but you get a cryptic error:; ```; root -l main.cpp+; root [0] ; Processing main.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp//tmp/./main_cpp.so; Error in <TApplication::TApplication>: only one instance of TApplication allowed; ```; - If one uses `void main` instead of `int main`, you get this error:; ```; /tmp/main.cpp:2:1: error: 'main' must return 'int'; void main(); ^~~~; int; ```; - If one uses an unnamed macro, the problem is not there. ### Expected behavior; An error should be printed if the user tries to execute such kind of named macros, rather than the current crashes or error messages. ### To Reproduce; - Write a file called `main.cpp` with the content `int main() { return 0;}`; - root -l main.cpp. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2022, 13:52:01 |; | From heads/master@v6-25-01-4921-gdfd0f52391 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://stackoverflow.com/questions/74247557/warning-failed-to-call-main-to-execute-the-macro/74445395#74445395",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11707
https://github.com/root-project/root/issues/11707:3807,Availability,error,error,3807,"s://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:115; #12 0x00005620a5400eba in handle_notebook_option (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:39; #13 0x00005620a540109c in main (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:78; ===========================================================. Root > .q; ```. - If compiled, there is no crash, but you get a cryptic error:; ```; root -l main.cpp+; root [0] ; Processing main.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp//tmp/./main_cpp.so; Error in <TApplication::TApplication>: only one instance of TApplication allowed; ```; - If one uses `void main` instead of `int main`, you get this error:; ```; /tmp/main.cpp:2:1: error: 'main' must return 'int'; void main(); ^~~~; int; ```; - If one uses an unnamed macro, the problem is not there. ### Expected behavior; An error should be printed if the user tries to execute such kind of named macros, rather than the current crashes or error messages. ### To Reproduce; - Write a file called `main.cpp` with the content `int main() { return 0;}`; - root -l main.cpp. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2022, 13:52:01 |; | From heads/master@v6-25-01-4921-gdfd0f52391 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://stackoverflow.com/questions/74247557/warning-failed-to-call-main-to-execute-the-macro/74445395#74445395",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11707
https://github.com/root-project/root/issues/11707:3813,Integrability,message,messages,3813,"s://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:115; #12 0x00005620a5400eba in handle_notebook_option (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:39; #13 0x00005620a540109c in main (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:78; ===========================================================. Root > .q; ```. - If compiled, there is no crash, but you get a cryptic error:; ```; root -l main.cpp+; root [0] ; Processing main.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp//tmp/./main_cpp.so; Error in <TApplication::TApplication>: only one instance of TApplication allowed; ```; - If one uses `void main` instead of `int main`, you get this error:; ```; /tmp/main.cpp:2:1: error: 'main' must return 'int'; void main(); ^~~~; int; ```; - If one uses an unnamed macro, the problem is not there. ### Expected behavior; An error should be printed if the user tries to execute such kind of named macros, rather than the current crashes or error messages. ### To Reproduce; - Write a file called `main.cpp` with the content `int main() { return 0;}`; - root -l main.cpp. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2022, 13:52:01 |; | From heads/master@v6-25-01-4921-gdfd0f52391 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://stackoverflow.com/questions/74247557/warning-failed-to-call-main-to-execute-the-macro/74445395#74445395",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11707
https://github.com/root-project/root/issues/11707:686,Performance,optimiz,optimized,686,"### Describe the bug; - Some users may name their macro main.cpp or main.c, with content `int main() { return 0;}`, but this leads to a crash; ```; root -l main.cpp ; root [0] ; Processing main.cpp... *** Break *** segmentation violation. ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f349a49845a in __GI___wait4 (pid=57745, stat_loc=stat_loc; entry=0x7ffe007656d8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f349a49841b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffe007656d8, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f349a3febcb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f349ac5bc22 in TUnixSystem::Exec (this=0x5620a717b800, shellcmd=0x5620a837aa50 ""/opt/root_bld/etc/gdb-backtrace.sh 57715 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2104; #4 0x00007f349ac5c4d3 in TUnixSystem::StackTrace (this=0x5620a717b800) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007f349ac60174 in TUnixSystem::DispatchSignals (this=0x5620a717b800, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3615; #6 0x00007f349ac5790e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395; #7 0x00007f349ac60081 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3586; #8 0x00007f349ac509d0 in textinput::TerminalConfigUnix::HandleSignal (this=0x7f349b144ae0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99; #9 0x00007f349ac506ec in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #10 <signal handler called>; #11 __strc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11707
https://github.com/root-project/root/issues/11707:836,Performance,optimiz,optimized,836,"### Describe the bug; - Some users may name their macro main.cpp or main.c, with content `int main() { return 0;}`, but this leads to a crash; ```; root -l main.cpp ; root [0] ; Processing main.cpp... *** Break *** segmentation violation. ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f349a49845a in __GI___wait4 (pid=57745, stat_loc=stat_loc; entry=0x7ffe007656d8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f349a49841b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffe007656d8, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f349a3febcb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f349ac5bc22 in TUnixSystem::Exec (this=0x5620a717b800, shellcmd=0x5620a837aa50 ""/opt/root_bld/etc/gdb-backtrace.sh 57715 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2104; #4 0x00007f349ac5c4d3 in TUnixSystem::StackTrace (this=0x5620a717b800) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007f349ac60174 in TUnixSystem::DispatchSignals (this=0x5620a717b800, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3615; #6 0x00007f349ac5790e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395; #7 0x00007f349ac60081 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3586; #8 0x00007f349ac509d0 in textinput::TerminalConfigUnix::HandleSignal (this=0x7f349b144ae0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99; #9 0x00007f349ac506ec in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #10 <signal handler called>; #11 __strc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11707
https://github.com/root-project/root/pull/11708:27,Deployability,install,installed,27,cmake fails if `arrow` not installed while ARROW_VERSION is not defined,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11708
https://github.com/root-project/root/pull/11710:299,Deployability,patch,patch,299,"Before this commit, calling `RVec<T> v(n)` where `T` is a move-only type would fail to compile because, internally, the operation was implemented in terms of a std::uninitalized_fill of the first `n` elements in the buffer, and std::uninitalized_fill needs the type to be copy-assignable. With this patch we use (a backport of) C++17's; std::uninitialized_value_construct instead for that case, which is works for move-only types as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11710
https://github.com/root-project/root/issues/11712:214,Energy Efficiency,energy,energy,214,"### Describe the bug; When accessing arrays in TTree::Scan() (or Draw()) if the array index is a formula like 1-1 it should be enclosed by ""()"" otherwise it does not work as expected. See:. ```; root [3] t1->Scan(""energy[1-1]:energy[(1-1)]:energy[0]""); ************************************************; * Row * energy[1- * energy[(1 * energy[0] *; ************************************************; * 0 * 275.16714 * 326.72375 * 326.72375 *; * 1 * 213.84567 * 261.90139 * 261.90139 *; * 2 * 413.62146 * 415.01107 * 415.01107 *; ```; The problem was [posted on the forum](https://root-forum.cern.ch/t/strange-operations-with-array-indices/52384). ### Expected behavior; `1-1` should be the same as `(1-1)`. ### To Reproduce; Use any tree with an array `x` and access` x[1-1]` and `x[(1-1)]`. ### Setup; Any ROOT version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11712
https://github.com/root-project/root/issues/11712:226,Energy Efficiency,energy,energy,226,"### Describe the bug; When accessing arrays in TTree::Scan() (or Draw()) if the array index is a formula like 1-1 it should be enclosed by ""()"" otherwise it does not work as expected. See:. ```; root [3] t1->Scan(""energy[1-1]:energy[(1-1)]:energy[0]""); ************************************************; * Row * energy[1- * energy[(1 * energy[0] *; ************************************************; * 0 * 275.16714 * 326.72375 * 326.72375 *; * 1 * 213.84567 * 261.90139 * 261.90139 *; * 2 * 413.62146 * 415.01107 * 415.01107 *; ```; The problem was [posted on the forum](https://root-forum.cern.ch/t/strange-operations-with-array-indices/52384). ### Expected behavior; `1-1` should be the same as `(1-1)`. ### To Reproduce; Use any tree with an array `x` and access` x[1-1]` and `x[(1-1)]`. ### Setup; Any ROOT version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11712
https://github.com/root-project/root/issues/11712:240,Energy Efficiency,energy,energy,240,"### Describe the bug; When accessing arrays in TTree::Scan() (or Draw()) if the array index is a formula like 1-1 it should be enclosed by ""()"" otherwise it does not work as expected. See:. ```; root [3] t1->Scan(""energy[1-1]:energy[(1-1)]:energy[0]""); ************************************************; * Row * energy[1- * energy[(1 * energy[0] *; ************************************************; * 0 * 275.16714 * 326.72375 * 326.72375 *; * 1 * 213.84567 * 261.90139 * 261.90139 *; * 2 * 413.62146 * 415.01107 * 415.01107 *; ```; The problem was [posted on the forum](https://root-forum.cern.ch/t/strange-operations-with-array-indices/52384). ### Expected behavior; `1-1` should be the same as `(1-1)`. ### To Reproduce; Use any tree with an array `x` and access` x[1-1]` and `x[(1-1)]`. ### Setup; Any ROOT version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11712
https://github.com/root-project/root/issues/11712:311,Energy Efficiency,energy,energy,311,"### Describe the bug; When accessing arrays in TTree::Scan() (or Draw()) if the array index is a formula like 1-1 it should be enclosed by ""()"" otherwise it does not work as expected. See:. ```; root [3] t1->Scan(""energy[1-1]:energy[(1-1)]:energy[0]""); ************************************************; * Row * energy[1- * energy[(1 * energy[0] *; ************************************************; * 0 * 275.16714 * 326.72375 * 326.72375 *; * 1 * 213.84567 * 261.90139 * 261.90139 *; * 2 * 413.62146 * 415.01107 * 415.01107 *; ```; The problem was [posted on the forum](https://root-forum.cern.ch/t/strange-operations-with-array-indices/52384). ### Expected behavior; `1-1` should be the same as `(1-1)`. ### To Reproduce; Use any tree with an array `x` and access` x[1-1]` and `x[(1-1)]`. ### Setup; Any ROOT version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11712
https://github.com/root-project/root/issues/11712:323,Energy Efficiency,energy,energy,323,"### Describe the bug; When accessing arrays in TTree::Scan() (or Draw()) if the array index is a formula like 1-1 it should be enclosed by ""()"" otherwise it does not work as expected. See:. ```; root [3] t1->Scan(""energy[1-1]:energy[(1-1)]:energy[0]""); ************************************************; * Row * energy[1- * energy[(1 * energy[0] *; ************************************************; * 0 * 275.16714 * 326.72375 * 326.72375 *; * 1 * 213.84567 * 261.90139 * 261.90139 *; * 2 * 413.62146 * 415.01107 * 415.01107 *; ```; The problem was [posted on the forum](https://root-forum.cern.ch/t/strange-operations-with-array-indices/52384). ### Expected behavior; `1-1` should be the same as `(1-1)`. ### To Reproduce; Use any tree with an array `x` and access` x[1-1]` and `x[(1-1)]`. ### Setup; Any ROOT version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11712
https://github.com/root-project/root/issues/11712:335,Energy Efficiency,energy,energy,335,"### Describe the bug; When accessing arrays in TTree::Scan() (or Draw()) if the array index is a formula like 1-1 it should be enclosed by ""()"" otherwise it does not work as expected. See:. ```; root [3] t1->Scan(""energy[1-1]:energy[(1-1)]:energy[0]""); ************************************************; * Row * energy[1- * energy[(1 * energy[0] *; ************************************************; * 0 * 275.16714 * 326.72375 * 326.72375 *; * 1 * 213.84567 * 261.90139 * 261.90139 *; * 2 * 413.62146 * 415.01107 * 415.01107 *; ```; The problem was [posted on the forum](https://root-forum.cern.ch/t/strange-operations-with-array-indices/52384). ### Expected behavior; `1-1` should be the same as `(1-1)`. ### To Reproduce; Use any tree with an array `x` and access` x[1-1]` and `x[(1-1)]`. ### Setup; Any ROOT version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11712
https://github.com/root-project/root/issues/11712:27,Security,access,accessing,27,"### Describe the bug; When accessing arrays in TTree::Scan() (or Draw()) if the array index is a formula like 1-1 it should be enclosed by ""()"" otherwise it does not work as expected. See:. ```; root [3] t1->Scan(""energy[1-1]:energy[(1-1)]:energy[0]""); ************************************************; * Row * energy[1- * energy[(1 * energy[0] *; ************************************************; * 0 * 275.16714 * 326.72375 * 326.72375 *; * 1 * 213.84567 * 261.90139 * 261.90139 *; * 2 * 413.62146 * 415.01107 * 415.01107 *; ```; The problem was [posted on the forum](https://root-forum.cern.ch/t/strange-operations-with-array-indices/52384). ### Expected behavior; `1-1` should be the same as `(1-1)`. ### To Reproduce; Use any tree with an array `x` and access` x[1-1]` and `x[(1-1)]`. ### Setup; Any ROOT version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11712
https://github.com/root-project/root/issues/11712:758,Security,access,access,758,"### Describe the bug; When accessing arrays in TTree::Scan() (or Draw()) if the array index is a formula like 1-1 it should be enclosed by ""()"" otherwise it does not work as expected. See:. ```; root [3] t1->Scan(""energy[1-1]:energy[(1-1)]:energy[0]""); ************************************************; * Row * energy[1- * energy[(1 * energy[0] *; ************************************************; * 0 * 275.16714 * 326.72375 * 326.72375 *; * 1 * 213.84567 * 261.90139 * 261.90139 *; * 2 * 413.62146 * 415.01107 * 415.01107 *; ```; The problem was [posted on the forum](https://root-forum.cern.ch/t/strange-operations-with-array-indices/52384). ### Expected behavior; `1-1` should be the same as `(1-1)`. ### To Reproduce; Use any tree with an array `x` and access` x[1-1]` and `x[(1-1)]`. ### Setup; Any ROOT version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11712
https://github.com/root-project/root/issues/11713:226,Availability,error,error,226,According to the list of changes in Python 3.11:; ; https://docs.python.org/3.11/whatsnew/3.11.html; ; types defined with the Py_TPFLAGS_HAVE_GC flag set but with no; traverse function (PyTypeObject.tp_traverse) will cause an error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11713
https://github.com/root-project/root/pull/11715:229,Availability,down,download,229,"# This Pull request: . I created a Read The Docs (RTD) webpage for Cling. This project derives from a discussion I had in August 2022 with @vgvassilev, @davidlange6 , and @Axel-Naumann. ; The RTD webpage DOES NOT include Cling's download link, how to build, last release, or other developer-related info. These info will stay on a dedicated Cling's Github page (Axel, David, Vassil, you should discuss whether the Cling's GitHub webpage will stay in within ROOT, or it will be a separate one). ; Cling's RTD webpage includes, instead, a broader description of the Cling project, history of development, insights about the concepts of interpreter, JIT compilation, REPL, a short description of all Cling-based-projects, and a list of existing literature. . ## Checklist:. - [ ] Cling RTD webpage should include a link to Cling's Github webpage. We should discuss whether the GitHub webpage will be this: https://github.com/root-project/cling or another one (if we want to separate Cling from ROOT); - [ ] (https://root.cern/cling/) should be deleted; - [ ] (https://rawgit.com/root-project/cling/master/www/index.html) should be deleted",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11715
https://github.com/root-project/root/pull/11715:263,Deployability,release,release,263,"# This Pull request: . I created a Read The Docs (RTD) webpage for Cling. This project derives from a discussion I had in August 2022 with @vgvassilev, @davidlange6 , and @Axel-Naumann. ; The RTD webpage DOES NOT include Cling's download link, how to build, last release, or other developer-related info. These info will stay on a dedicated Cling's Github page (Axel, David, Vassil, you should discuss whether the Cling's GitHub webpage will stay in within ROOT, or it will be a separate one). ; Cling's RTD webpage includes, instead, a broader description of the Cling project, history of development, insights about the concepts of interpreter, JIT compilation, REPL, a short description of all Cling-based-projects, and a list of existing literature. . ## Checklist:. - [ ] Cling RTD webpage should include a link to Cling's Github webpage. We should discuss whether the GitHub webpage will be this: https://github.com/root-project/cling or another one (if we want to separate Cling from ROOT); - [ ] (https://root.cern/cling/) should be deleted; - [ ] (https://rawgit.com/root-project/cling/master/www/index.html) should be deleted",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11715
https://github.com/root-project/root/pull/11716:654,Deployability,configurat,configuration,654,"# This Pull request:. Note that this PR does not need to be merged, although it could be, I'm mainly putting it up here to test it on CI. I needed it to rebase another branch on top of, which I will submit for a PR soon too. I leave it up to you whether you want to consider these two things separately. ## Changes or fixes:. The `RooGradMinimizerFcn` was not necessary anymore, so it has been removed. We do plan to repurpose its code later on for a ""`LikelihoodGradientSerial`"" implementation of `LikelihoodGradientWrapper`. This removal also simplifies construction of `RooMinimizer`, which no longer needs it. That, in turn, simplifies the test case configuration in testLikelihoodGradientJob.cpp. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11716
https://github.com/root-project/root/pull/11716:753,Deployability,update,updated,753,"# This Pull request:. Note that this PR does not need to be merged, although it could be, I'm mainly putting it up here to test it on CI. I needed it to rebase another branch on top of, which I will submit for a PR soon too. I leave it up to you whether you want to consider these two things separately. ## Changes or fixes:. The `RooGradMinimizerFcn` was not necessary anymore, so it has been removed. We do plan to repurpose its code later on for a ""`LikelihoodGradientSerial`"" implementation of `LikelihoodGradientWrapper`. This removal also simplifies construction of `RooMinimizer`, which no longer needs it. That, in turn, simplifies the test case configuration in testLikelihoodGradientJob.cpp. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11716
https://github.com/root-project/root/pull/11716:654,Modifiability,config,configuration,654,"# This Pull request:. Note that this PR does not need to be merged, although it could be, I'm mainly putting it up here to test it on CI. I needed it to rebase another branch on top of, which I will submit for a PR soon too. I leave it up to you whether you want to consider these two things separately. ## Changes or fixes:. The `RooGradMinimizerFcn` was not necessary anymore, so it has been removed. We do plan to repurpose its code later on for a ""`LikelihoodGradientSerial`"" implementation of `LikelihoodGradientWrapper`. This removal also simplifies construction of `RooMinimizer`, which no longer needs it. That, in turn, simplifies the test case configuration in testLikelihoodGradientJob.cpp. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11716
https://github.com/root-project/root/pull/11716:123,Testability,test,test,123,"# This Pull request:. Note that this PR does not need to be merged, although it could be, I'm mainly putting it up here to test it on CI. I needed it to rebase another branch on top of, which I will submit for a PR soon too. I leave it up to you whether you want to consider these two things separately. ## Changes or fixes:. The `RooGradMinimizerFcn` was not necessary anymore, so it has been removed. We do plan to repurpose its code later on for a ""`LikelihoodGradientSerial`"" implementation of `LikelihoodGradientWrapper`. This removal also simplifies construction of `RooMinimizer`, which no longer needs it. That, in turn, simplifies the test case configuration in testLikelihoodGradientJob.cpp. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11716
https://github.com/root-project/root/pull/11716:644,Testability,test,test,644,"# This Pull request:. Note that this PR does not need to be merged, although it could be, I'm mainly putting it up here to test it on CI. I needed it to rebase another branch on top of, which I will submit for a PR soon too. I leave it up to you whether you want to consider these two things separately. ## Changes or fixes:. The `RooGradMinimizerFcn` was not necessary anymore, so it has been removed. We do plan to repurpose its code later on for a ""`LikelihoodGradientSerial`"" implementation of `LikelihoodGradientWrapper`. This removal also simplifies construction of `RooMinimizer`, which no longer needs it. That, in turn, simplifies the test case configuration in testLikelihoodGradientJob.cpp. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11716
https://github.com/root-project/root/pull/11716:671,Testability,test,testLikelihoodGradientJob,671,"# This Pull request:. Note that this PR does not need to be merged, although it could be, I'm mainly putting it up here to test it on CI. I needed it to rebase another branch on top of, which I will submit for a PR soon too. I leave it up to you whether you want to consider these two things separately. ## Changes or fixes:. The `RooGradMinimizerFcn` was not necessary anymore, so it has been removed. We do plan to repurpose its code later on for a ""`LikelihoodGradientSerial`"" implementation of `LikelihoodGradientWrapper`. This removal also simplifies construction of `RooMinimizer`, which no longer needs it. That, in turn, simplifies the test case configuration in testLikelihoodGradientJob.cpp. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11716
https://github.com/root-project/root/pull/11716:723,Testability,test,tested,723,"# This Pull request:. Note that this PR does not need to be merged, although it could be, I'm mainly putting it up here to test it on CI. I needed it to rebase another branch on top of, which I will submit for a PR soon too. I leave it up to you whether you want to consider these two things separately. ## Changes or fixes:. The `RooGradMinimizerFcn` was not necessary anymore, so it has been removed. We do plan to repurpose its code later on for a ""`LikelihoodGradientSerial`"" implementation of `LikelihoodGradientWrapper`. This removal also simplifies construction of `RooMinimizer`, which no longer needs it. That, in turn, simplifies the test case configuration in testLikelihoodGradientJob.cpp. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11716
https://github.com/root-project/root/pull/11716:545,Usability,simpl,simplifies,545,"# This Pull request:. Note that this PR does not need to be merged, although it could be, I'm mainly putting it up here to test it on CI. I needed it to rebase another branch on top of, which I will submit for a PR soon too. I leave it up to you whether you want to consider these two things separately. ## Changes or fixes:. The `RooGradMinimizerFcn` was not necessary anymore, so it has been removed. We do plan to repurpose its code later on for a ""`LikelihoodGradientSerial`"" implementation of `LikelihoodGradientWrapper`. This removal also simplifies construction of `RooMinimizer`, which no longer needs it. That, in turn, simplifies the test case configuration in testLikelihoodGradientJob.cpp. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11716
https://github.com/root-project/root/pull/11716:629,Usability,simpl,simplifies,629,"# This Pull request:. Note that this PR does not need to be merged, although it could be, I'm mainly putting it up here to test it on CI. I needed it to rebase another branch on top of, which I will submit for a PR soon too. I leave it up to you whether you want to consider these two things separately. ## Changes or fixes:. The `RooGradMinimizerFcn` was not necessary anymore, so it has been removed. We do plan to repurpose its code later on for a ""`LikelihoodGradientSerial`"" implementation of `LikelihoodGradientWrapper`. This removal also simplifies construction of `RooMinimizer`, which no longer needs it. That, in turn, simplifies the test case configuration in testLikelihoodGradientJob.cpp. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11716
https://github.com/root-project/root/pull/11717:749,Deployability,update,updated,749,"# This Pull request:. Note that this PR includes the commit of #11716. ## Changes or fixes:. Apart from the stuff in #11716, this PR fixes the additions previously made in #10966. The implementation there had some bugs, most importantly:. 1. Creation went wrong when using MultiProcess-mode for the gradient, but serial mode for the likelihood. This led to larger differences from full-serial mode than expected. We can now tighten expectations in tests again due to this fix.; 2. Double-MultiProcess-mode (both gradient and likelihood) did not work when using offsetting, because setOffsetting would not propagate to worker processes correctly for all involved objects. This is now fixed as well. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11717
https://github.com/root-project/root/pull/11717:448,Testability,test,tests,448,"# This Pull request:. Note that this PR includes the commit of #11716. ## Changes or fixes:. Apart from the stuff in #11716, this PR fixes the additions previously made in #10966. The implementation there had some bugs, most importantly:. 1. Creation went wrong when using MultiProcess-mode for the gradient, but serial mode for the likelihood. This led to larger differences from full-serial mode than expected. We can now tighten expectations in tests again due to this fix.; 2. Double-MultiProcess-mode (both gradient and likelihood) did not work when using offsetting, because setOffsetting would not propagate to worker processes correctly for all involved objects. This is now fixed as well. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11717
https://github.com/root-project/root/pull/11717:719,Testability,test,tested,719,"# This Pull request:. Note that this PR includes the commit of #11716. ## Changes or fixes:. Apart from the stuff in #11716, this PR fixes the additions previously made in #10966. The implementation there had some bugs, most importantly:. 1. Creation went wrong when using MultiProcess-mode for the gradient, but serial mode for the likelihood. This led to larger differences from full-serial mode than expected. We can now tighten expectations in tests again due to this fix.; 2. Double-MultiProcess-mode (both gradient and likelihood) did not work when using offsetting, because setOffsetting would not propagate to worker processes correctly for all involved objects. This is now fixed as well. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11717
https://github.com/root-project/root/pull/11719:332,Modifiability,variab,variable,332,"In order to mark the file as zombie when this happens, I had to change a `goto zombie` into calls to a dedicated helper lambda (done in a separate commit). Otherwise I would have had to move around a few lines just so that the compiler would let me jump from the sanity check to the zombie label (compilers don't allow jumps across variable initializations). This fixes https://github.com/root-project/root/issues/10039.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11719
https://github.com/root-project/root/pull/11719:263,Safety,sanity check,sanity check,263,"In order to mark the file as zombie when this happens, I had to change a `goto zombie` into calls to a dedicated helper lambda (done in a separate commit). Otherwise I would have had to move around a few lines just so that the compiler would let me jump from the sanity check to the zombie label (compilers don't allow jumps across variable initializations). This fixes https://github.com/root-project/root/issues/10039.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11719
https://github.com/root-project/root/pull/11721:43,Testability,test,tests,43,This Pull request exclude running of SOFIE tests when Blas is not found (this is when `tmva-cpu=Off`),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11721
https://github.com/root-project/root/issues/11722:71,Availability,error,errors,71,"### Existing issues; On the forums we didn't find any existing issues, errors, bug or Jira ticket related to this.; @rpezzi . ### Describe the bug; We are creating an object of the type: e.g. `std::array<std::array<std::vector<std::vector<Int_t>>, 4>, 4>`; Then, we fill it in a loop and ensure all elements of a size different than 0 and we write it in a root file using `WriteObjectAny`.; However, later we are loading this object using functionalities from ROOT `GetObjectChecked`, and we are getting elements with size 0. We use exactly the same function to print the zero elements if existing, at the creation and loading level. ### Expected behavior; We expect that when loading later this object we fully recover it without empty elements (without size 0). ### To Reproduce; 1. Open root in a terminal, compile the macro: `.L example.C`; 2. Create the object, fill it, and print the elements with size zero if exisiting: `finderBinner()`; 3. Loading the object and print the elements with size zero if exisiting: `loadFinderBinning()`. ### Setup; 1. ROOT 6.26/04 ; 2. macOSx64 Monterey version 12.6; 3. ROOT built from `aliBuild build O2 --defaults o2`, on Nov 09 2022, alibuild software used for the ALICE experiment @CERN with all dependencies . ### Code ; You can download the code `example.C` which reproduce the bug here at this cernbox link:; https://cernbox.cern.ch/s/fbiqsIdjVUqYISe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11722
https://github.com/root-project/root/issues/11722:712,Availability,recover,recover,712,"### Existing issues; On the forums we didn't find any existing issues, errors, bug or Jira ticket related to this.; @rpezzi . ### Describe the bug; We are creating an object of the type: e.g. `std::array<std::array<std::vector<std::vector<Int_t>>, 4>, 4>`; Then, we fill it in a loop and ensure all elements of a size different than 0 and we write it in a root file using `WriteObjectAny`.; However, later we are loading this object using functionalities from ROOT `GetObjectChecked`, and we are getting elements with size 0. We use exactly the same function to print the zero elements if existing, at the creation and loading level. ### Expected behavior; We expect that when loading later this object we fully recover it without empty elements (without size 0). ### To Reproduce; 1. Open root in a terminal, compile the macro: `.L example.C`; 2. Create the object, fill it, and print the elements with size zero if exisiting: `finderBinner()`; 3. Loading the object and print the elements with size zero if exisiting: `loadFinderBinning()`. ### Setup; 1. ROOT 6.26/04 ; 2. macOSx64 Monterey version 12.6; 3. ROOT built from `aliBuild build O2 --defaults o2`, on Nov 09 2022, alibuild software used for the ALICE experiment @CERN with all dependencies . ### Code ; You can download the code `example.C` which reproduce the bug here at this cernbox link:; https://cernbox.cern.ch/s/fbiqsIdjVUqYISe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11722
https://github.com/root-project/root/issues/11722:1274,Availability,down,download,1274,"### Existing issues; On the forums we didn't find any existing issues, errors, bug or Jira ticket related to this.; @rpezzi . ### Describe the bug; We are creating an object of the type: e.g. `std::array<std::array<std::vector<std::vector<Int_t>>, 4>, 4>`; Then, we fill it in a loop and ensure all elements of a size different than 0 and we write it in a root file using `WriteObjectAny`.; However, later we are loading this object using functionalities from ROOT `GetObjectChecked`, and we are getting elements with size 0. We use exactly the same function to print the zero elements if existing, at the creation and loading level. ### Expected behavior; We expect that when loading later this object we fully recover it without empty elements (without size 0). ### To Reproduce; 1. Open root in a terminal, compile the macro: `.L example.C`; 2. Create the object, fill it, and print the elements with size zero if exisiting: `finderBinner()`; 3. Loading the object and print the elements with size zero if exisiting: `loadFinderBinning()`. ### Setup; 1. ROOT 6.26/04 ; 2. macOSx64 Monterey version 12.6; 3. ROOT built from `aliBuild build O2 --defaults o2`, on Nov 09 2022, alibuild software used for the ALICE experiment @CERN with all dependencies . ### Code ; You can download the code `example.C` which reproduce the bug here at this cernbox link:; https://cernbox.cern.ch/s/fbiqsIdjVUqYISe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11722
https://github.com/root-project/root/issues/11722:1240,Integrability,depend,dependencies,1240,"### Existing issues; On the forums we didn't find any existing issues, errors, bug or Jira ticket related to this.; @rpezzi . ### Describe the bug; We are creating an object of the type: e.g. `std::array<std::array<std::vector<std::vector<Int_t>>, 4>, 4>`; Then, we fill it in a loop and ensure all elements of a size different than 0 and we write it in a root file using `WriteObjectAny`.; However, later we are loading this object using functionalities from ROOT `GetObjectChecked`, and we are getting elements with size 0. We use exactly the same function to print the zero elements if existing, at the creation and loading level. ### Expected behavior; We expect that when loading later this object we fully recover it without empty elements (without size 0). ### To Reproduce; 1. Open root in a terminal, compile the macro: `.L example.C`; 2. Create the object, fill it, and print the elements with size zero if exisiting: `finderBinner()`; 3. Loading the object and print the elements with size zero if exisiting: `loadFinderBinning()`. ### Setup; 1. ROOT 6.26/04 ; 2. macOSx64 Monterey version 12.6; 3. ROOT built from `aliBuild build O2 --defaults o2`, on Nov 09 2022, alibuild software used for the ALICE experiment @CERN with all dependencies . ### Code ; You can download the code `example.C` which reproduce the bug here at this cernbox link:; https://cernbox.cern.ch/s/fbiqsIdjVUqYISe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11722
https://github.com/root-project/root/issues/11722:413,Performance,load,loading,413,"### Existing issues; On the forums we didn't find any existing issues, errors, bug or Jira ticket related to this.; @rpezzi . ### Describe the bug; We are creating an object of the type: e.g. `std::array<std::array<std::vector<std::vector<Int_t>>, 4>, 4>`; Then, we fill it in a loop and ensure all elements of a size different than 0 and we write it in a root file using `WriteObjectAny`.; However, later we are loading this object using functionalities from ROOT `GetObjectChecked`, and we are getting elements with size 0. We use exactly the same function to print the zero elements if existing, at the creation and loading level. ### Expected behavior; We expect that when loading later this object we fully recover it without empty elements (without size 0). ### To Reproduce; 1. Open root in a terminal, compile the macro: `.L example.C`; 2. Create the object, fill it, and print the elements with size zero if exisiting: `finderBinner()`; 3. Loading the object and print the elements with size zero if exisiting: `loadFinderBinning()`. ### Setup; 1. ROOT 6.26/04 ; 2. macOSx64 Monterey version 12.6; 3. ROOT built from `aliBuild build O2 --defaults o2`, on Nov 09 2022, alibuild software used for the ALICE experiment @CERN with all dependencies . ### Code ; You can download the code `example.C` which reproduce the bug here at this cernbox link:; https://cernbox.cern.ch/s/fbiqsIdjVUqYISe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11722
https://github.com/root-project/root/issues/11722:619,Performance,load,loading,619,"### Existing issues; On the forums we didn't find any existing issues, errors, bug or Jira ticket related to this.; @rpezzi . ### Describe the bug; We are creating an object of the type: e.g. `std::array<std::array<std::vector<std::vector<Int_t>>, 4>, 4>`; Then, we fill it in a loop and ensure all elements of a size different than 0 and we write it in a root file using `WriteObjectAny`.; However, later we are loading this object using functionalities from ROOT `GetObjectChecked`, and we are getting elements with size 0. We use exactly the same function to print the zero elements if existing, at the creation and loading level. ### Expected behavior; We expect that when loading later this object we fully recover it without empty elements (without size 0). ### To Reproduce; 1. Open root in a terminal, compile the macro: `.L example.C`; 2. Create the object, fill it, and print the elements with size zero if exisiting: `finderBinner()`; 3. Loading the object and print the elements with size zero if exisiting: `loadFinderBinning()`. ### Setup; 1. ROOT 6.26/04 ; 2. macOSx64 Monterey version 12.6; 3. ROOT built from `aliBuild build O2 --defaults o2`, on Nov 09 2022, alibuild software used for the ALICE experiment @CERN with all dependencies . ### Code ; You can download the code `example.C` which reproduce the bug here at this cernbox link:; https://cernbox.cern.ch/s/fbiqsIdjVUqYISe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11722
https://github.com/root-project/root/issues/11722:677,Performance,load,loading,677,"### Existing issues; On the forums we didn't find any existing issues, errors, bug or Jira ticket related to this.; @rpezzi . ### Describe the bug; We are creating an object of the type: e.g. `std::array<std::array<std::vector<std::vector<Int_t>>, 4>, 4>`; Then, we fill it in a loop and ensure all elements of a size different than 0 and we write it in a root file using `WriteObjectAny`.; However, later we are loading this object using functionalities from ROOT `GetObjectChecked`, and we are getting elements with size 0. We use exactly the same function to print the zero elements if existing, at the creation and loading level. ### Expected behavior; We expect that when loading later this object we fully recover it without empty elements (without size 0). ### To Reproduce; 1. Open root in a terminal, compile the macro: `.L example.C`; 2. Create the object, fill it, and print the elements with size zero if exisiting: `finderBinner()`; 3. Loading the object and print the elements with size zero if exisiting: `loadFinderBinning()`. ### Setup; 1. ROOT 6.26/04 ; 2. macOSx64 Monterey version 12.6; 3. ROOT built from `aliBuild build O2 --defaults o2`, on Nov 09 2022, alibuild software used for the ALICE experiment @CERN with all dependencies . ### Code ; You can download the code `example.C` which reproduce the bug here at this cernbox link:; https://cernbox.cern.ch/s/fbiqsIdjVUqYISe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11722
https://github.com/root-project/root/issues/11722:949,Performance,Load,Loading,949,"### Existing issues; On the forums we didn't find any existing issues, errors, bug or Jira ticket related to this.; @rpezzi . ### Describe the bug; We are creating an object of the type: e.g. `std::array<std::array<std::vector<std::vector<Int_t>>, 4>, 4>`; Then, we fill it in a loop and ensure all elements of a size different than 0 and we write it in a root file using `WriteObjectAny`.; However, later we are loading this object using functionalities from ROOT `GetObjectChecked`, and we are getting elements with size 0. We use exactly the same function to print the zero elements if existing, at the creation and loading level. ### Expected behavior; We expect that when loading later this object we fully recover it without empty elements (without size 0). ### To Reproduce; 1. Open root in a terminal, compile the macro: `.L example.C`; 2. Create the object, fill it, and print the elements with size zero if exisiting: `finderBinner()`; 3. Loading the object and print the elements with size zero if exisiting: `loadFinderBinning()`. ### Setup; 1. ROOT 6.26/04 ; 2. macOSx64 Monterey version 12.6; 3. ROOT built from `aliBuild build O2 --defaults o2`, on Nov 09 2022, alibuild software used for the ALICE experiment @CERN with all dependencies . ### Code ; You can download the code `example.C` which reproduce the bug here at this cernbox link:; https://cernbox.cern.ch/s/fbiqsIdjVUqYISe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11722
https://github.com/root-project/root/issues/11722:1021,Performance,load,loadFinderBinning,1021,"### Existing issues; On the forums we didn't find any existing issues, errors, bug or Jira ticket related to this.; @rpezzi . ### Describe the bug; We are creating an object of the type: e.g. `std::array<std::array<std::vector<std::vector<Int_t>>, 4>, 4>`; Then, we fill it in a loop and ensure all elements of a size different than 0 and we write it in a root file using `WriteObjectAny`.; However, later we are loading this object using functionalities from ROOT `GetObjectChecked`, and we are getting elements with size 0. We use exactly the same function to print the zero elements if existing, at the creation and loading level. ### Expected behavior; We expect that when loading later this object we fully recover it without empty elements (without size 0). ### To Reproduce; 1. Open root in a terminal, compile the macro: `.L example.C`; 2. Create the object, fill it, and print the elements with size zero if exisiting: `finderBinner()`; 3. Loading the object and print the elements with size zero if exisiting: `loadFinderBinning()`. ### Setup; 1. ROOT 6.26/04 ; 2. macOSx64 Monterey version 12.6; 3. ROOT built from `aliBuild build O2 --defaults o2`, on Nov 09 2022, alibuild software used for the ALICE experiment @CERN with all dependencies . ### Code ; You can download the code `example.C` which reproduce the bug here at this cernbox link:; https://cernbox.cern.ch/s/fbiqsIdjVUqYISe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11722
https://github.com/root-project/root/issues/11722:712,Safety,recover,recover,712,"### Existing issues; On the forums we didn't find any existing issues, errors, bug or Jira ticket related to this.; @rpezzi . ### Describe the bug; We are creating an object of the type: e.g. `std::array<std::array<std::vector<std::vector<Int_t>>, 4>, 4>`; Then, we fill it in a loop and ensure all elements of a size different than 0 and we write it in a root file using `WriteObjectAny`.; However, later we are loading this object using functionalities from ROOT `GetObjectChecked`, and we are getting elements with size 0. We use exactly the same function to print the zero elements if existing, at the creation and loading level. ### Expected behavior; We expect that when loading later this object we fully recover it without empty elements (without size 0). ### To Reproduce; 1. Open root in a terminal, compile the macro: `.L example.C`; 2. Create the object, fill it, and print the elements with size zero if exisiting: `finderBinner()`; 3. Loading the object and print the elements with size zero if exisiting: `loadFinderBinning()`. ### Setup; 1. ROOT 6.26/04 ; 2. macOSx64 Monterey version 12.6; 3. ROOT built from `aliBuild build O2 --defaults o2`, on Nov 09 2022, alibuild software used for the ALICE experiment @CERN with all dependencies . ### Code ; You can download the code `example.C` which reproduce the bug here at this cernbox link:; https://cernbox.cern.ch/s/fbiqsIdjVUqYISe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11722
https://github.com/root-project/root/pull/11724:112,Testability,test,test,112,# This Pull request:. ## Changes or fixes:. The file dataframe_rdatasetspec.py does not exist in tree/dataframe/test:; ~~~~; $ ls tree/dataframe/test/*.py; tree/dataframe/test/dataframe_cache.py; tree/dataframe/test/dataframe_datasetspec.py; tree/dataframe/test/dataframe_histograms.py; tree/dataframe/test/dataframe_merge_results.py; tree/dataframe/test/dataframe_misc.py; ~~~~. This PR changes to the existing dataframe_datasetspec.py.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11724
https://github.com/root-project/root/pull/11724:145,Testability,test,test,145,# This Pull request:. ## Changes or fixes:. The file dataframe_rdatasetspec.py does not exist in tree/dataframe/test:; ~~~~; $ ls tree/dataframe/test/*.py; tree/dataframe/test/dataframe_cache.py; tree/dataframe/test/dataframe_datasetspec.py; tree/dataframe/test/dataframe_histograms.py; tree/dataframe/test/dataframe_merge_results.py; tree/dataframe/test/dataframe_misc.py; ~~~~. This PR changes to the existing dataframe_datasetspec.py.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11724
https://github.com/root-project/root/pull/11724:171,Testability,test,test,171,# This Pull request:. ## Changes or fixes:. The file dataframe_rdatasetspec.py does not exist in tree/dataframe/test:; ~~~~; $ ls tree/dataframe/test/*.py; tree/dataframe/test/dataframe_cache.py; tree/dataframe/test/dataframe_datasetspec.py; tree/dataframe/test/dataframe_histograms.py; tree/dataframe/test/dataframe_merge_results.py; tree/dataframe/test/dataframe_misc.py; ~~~~. This PR changes to the existing dataframe_datasetspec.py.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11724
https://github.com/root-project/root/pull/11724:211,Testability,test,test,211,# This Pull request:. ## Changes or fixes:. The file dataframe_rdatasetspec.py does not exist in tree/dataframe/test:; ~~~~; $ ls tree/dataframe/test/*.py; tree/dataframe/test/dataframe_cache.py; tree/dataframe/test/dataframe_datasetspec.py; tree/dataframe/test/dataframe_histograms.py; tree/dataframe/test/dataframe_merge_results.py; tree/dataframe/test/dataframe_misc.py; ~~~~. This PR changes to the existing dataframe_datasetspec.py.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11724
https://github.com/root-project/root/pull/11724:257,Testability,test,test,257,# This Pull request:. ## Changes or fixes:. The file dataframe_rdatasetspec.py does not exist in tree/dataframe/test:; ~~~~; $ ls tree/dataframe/test/*.py; tree/dataframe/test/dataframe_cache.py; tree/dataframe/test/dataframe_datasetspec.py; tree/dataframe/test/dataframe_histograms.py; tree/dataframe/test/dataframe_merge_results.py; tree/dataframe/test/dataframe_misc.py; ~~~~. This PR changes to the existing dataframe_datasetspec.py.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11724
https://github.com/root-project/root/pull/11724:302,Testability,test,test,302,# This Pull request:. ## Changes or fixes:. The file dataframe_rdatasetspec.py does not exist in tree/dataframe/test:; ~~~~; $ ls tree/dataframe/test/*.py; tree/dataframe/test/dataframe_cache.py; tree/dataframe/test/dataframe_datasetspec.py; tree/dataframe/test/dataframe_histograms.py; tree/dataframe/test/dataframe_merge_results.py; tree/dataframe/test/dataframe_misc.py; ~~~~. This PR changes to the existing dataframe_datasetspec.py.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11724
https://github.com/root-project/root/pull/11724:350,Testability,test,test,350,# This Pull request:. ## Changes or fixes:. The file dataframe_rdatasetspec.py does not exist in tree/dataframe/test:; ~~~~; $ ls tree/dataframe/test/*.py; tree/dataframe/test/dataframe_cache.py; tree/dataframe/test/dataframe_datasetspec.py; tree/dataframe/test/dataframe_histograms.py; tree/dataframe/test/dataframe_merge_results.py; tree/dataframe/test/dataframe_misc.py; ~~~~. This PR changes to the existing dataframe_datasetspec.py.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11724
https://github.com/root-project/root/pull/11725:468,Availability,Error,Error,468,# This Pull request:. ## Changes or fixes:. ~~~~; Start 672: tutorial-io-loopdir; 690/1156 Test #666: tutorial-io-double32 ................................................ Passed 2.42 sec; Start 673: tutorial-io-loopdir11; 691/1156 Test #673: tutorial-io-loopdir11 ............................................... Passed 0.76 sec; Start 674: tutorial-io-mergeSelective; 692/1156 Test #672: tutorial-io-loopdir .................................................***Failed Error regular expression found in output. Regex=[Error in <] 1.23 sec; Processing /builddir/build/BUILD/root-6.26.10/tutorials/io/loopdir.C...; Info in <TCanvas::Print>: ps file hsimple.ps has been created; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: ps file hsimple.ps has been closed; Error in <TPostScript::Text>: Cannot open temporary file: hsimple.ps_tmp_2089748; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11725
https://github.com/root-project/root/pull/11725:517,Availability,Error,Error,517,# This Pull request:. ## Changes or fixes:. ~~~~; Start 672: tutorial-io-loopdir; 690/1156 Test #666: tutorial-io-double32 ................................................ Passed 2.42 sec; Start 673: tutorial-io-loopdir11; 691/1156 Test #673: tutorial-io-loopdir11 ............................................... Passed 0.76 sec; Start 674: tutorial-io-mergeSelective; 692/1156 Test #672: tutorial-io-loopdir .................................................***Failed Error regular expression found in output. Regex=[Error in <] 1.23 sec; Processing /builddir/build/BUILD/root-6.26.10/tutorials/io/loopdir.C...; Info in <TCanvas::Print>: ps file hsimple.ps has been created; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: ps file hsimple.ps has been closed; Error in <TPostScript::Text>: Cannot open temporary file: hsimple.ps_tmp_2089748; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11725
https://github.com/root-project/root/pull/11725:947,Availability,Error,Error,947,# This Pull request:. ## Changes or fixes:. ~~~~; Start 672: tutorial-io-loopdir; 690/1156 Test #666: tutorial-io-double32 ................................................ Passed 2.42 sec; Start 673: tutorial-io-loopdir11; 691/1156 Test #673: tutorial-io-loopdir11 ............................................... Passed 0.76 sec; Start 674: tutorial-io-mergeSelective; 692/1156 Test #672: tutorial-io-loopdir .................................................***Failed Error regular expression found in output. Regex=[Error in <] 1.23 sec; Processing /builddir/build/BUILD/root-6.26.10/tutorials/io/loopdir.C...; Info in <TCanvas::Print>: ps file hsimple.ps has been created; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: ps file hsimple.ps has been closed; Error in <TPostScript::Text>: Cannot open temporary file: hsimple.ps_tmp_2089748; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11725
https://github.com/root-project/root/pull/11725:1086,Deployability,update,updated,1086,# This Pull request:. ## Changes or fixes:. ~~~~; Start 672: tutorial-io-loopdir; 690/1156 Test #666: tutorial-io-double32 ................................................ Passed 2.42 sec; Start 673: tutorial-io-loopdir11; 691/1156 Test #673: tutorial-io-loopdir11 ............................................... Passed 0.76 sec; Start 674: tutorial-io-mergeSelective; 692/1156 Test #672: tutorial-io-loopdir .................................................***Failed Error regular expression found in output. Regex=[Error in <] 1.23 sec; Processing /builddir/build/BUILD/root-6.26.10/tutorials/io/loopdir.C...; Info in <TCanvas::Print>: ps file hsimple.ps has been created; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: ps file hsimple.ps has been closed; Error in <TPostScript::Text>: Cannot open temporary file: hsimple.ps_tmp_2089748; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11725
https://github.com/root-project/root/pull/11725:91,Testability,Test,Test,91,# This Pull request:. ## Changes or fixes:. ~~~~; Start 672: tutorial-io-loopdir; 690/1156 Test #666: tutorial-io-double32 ................................................ Passed 2.42 sec; Start 673: tutorial-io-loopdir11; 691/1156 Test #673: tutorial-io-loopdir11 ............................................... Passed 0.76 sec; Start 674: tutorial-io-mergeSelective; 692/1156 Test #672: tutorial-io-loopdir .................................................***Failed Error regular expression found in output. Regex=[Error in <] 1.23 sec; Processing /builddir/build/BUILD/root-6.26.10/tutorials/io/loopdir.C...; Info in <TCanvas::Print>: ps file hsimple.ps has been created; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: ps file hsimple.ps has been closed; Error in <TPostScript::Text>: Cannot open temporary file: hsimple.ps_tmp_2089748; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11725
https://github.com/root-project/root/pull/11725:232,Testability,Test,Test,232,# This Pull request:. ## Changes or fixes:. ~~~~; Start 672: tutorial-io-loopdir; 690/1156 Test #666: tutorial-io-double32 ................................................ Passed 2.42 sec; Start 673: tutorial-io-loopdir11; 691/1156 Test #673: tutorial-io-loopdir11 ............................................... Passed 0.76 sec; Start 674: tutorial-io-mergeSelective; 692/1156 Test #672: tutorial-io-loopdir .................................................***Failed Error regular expression found in output. Regex=[Error in <] 1.23 sec; Processing /builddir/build/BUILD/root-6.26.10/tutorials/io/loopdir.C...; Info in <TCanvas::Print>: ps file hsimple.ps has been created; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: ps file hsimple.ps has been closed; Error in <TPostScript::Text>: Cannot open temporary file: hsimple.ps_tmp_2089748; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11725
https://github.com/root-project/root/pull/11725:378,Testability,Test,Test,378,# This Pull request:. ## Changes or fixes:. ~~~~; Start 672: tutorial-io-loopdir; 690/1156 Test #666: tutorial-io-double32 ................................................ Passed 2.42 sec; Start 673: tutorial-io-loopdir11; 691/1156 Test #673: tutorial-io-loopdir11 ............................................... Passed 0.76 sec; Start 674: tutorial-io-mergeSelective; 692/1156 Test #672: tutorial-io-loopdir .................................................***Failed Error regular expression found in output. Regex=[Error in <] 1.23 sec; Processing /builddir/build/BUILD/root-6.26.10/tutorials/io/loopdir.C...; Info in <TCanvas::Print>: ps file hsimple.ps has been created; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: ps file hsimple.ps has been closed; Error in <TPostScript::Text>: Cannot open temporary file: hsimple.ps_tmp_2089748; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11725
https://github.com/root-project/root/pull/11725:1056,Testability,test,tested,1056,# This Pull request:. ## Changes or fixes:. ~~~~; Start 672: tutorial-io-loopdir; 690/1156 Test #666: tutorial-io-double32 ................................................ Passed 2.42 sec; Start 673: tutorial-io-loopdir11; 691/1156 Test #673: tutorial-io-loopdir11 ............................................... Passed 0.76 sec; Start 674: tutorial-io-mergeSelective; 692/1156 Test #672: tutorial-io-loopdir .................................................***Failed Error regular expression found in output. Regex=[Error in <] 1.23 sec; Processing /builddir/build/BUILD/root-6.26.10/tutorials/io/loopdir.C...; Info in <TCanvas::Print>: ps file hsimple.ps has been created; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: ps file hsimple.ps has been closed; Error in <TPostScript::Text>: Cannot open temporary file: hsimple.ps_tmp_2089748; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11725
https://github.com/root-project/root/pull/11727:809,Deployability,Update,Update,809,"1. Process active pad `TExec` when pad click/mouse move event is produced. JSROOT client deliver such events only when execs are configured. Good example is `hist/DynamicSlice.C` tutorial; 2. Process `TExec` from histogram list of functions. Here execs processed when client confirms drawing and returns applied ranges. Working example is `hist/htproj.C` tutorial; 3. Analyze modification of sub-pads, only data for modified pads send to the client. Improve performance when canvas with many sub-pads, but only few of them are modified. Good example is `hist/tprofile2polyRealistic.C` tutorial, which currently working very slow. ; 4. Optimize server/client communication. If canvas marked modified without real change of data, no extra message will be send to client. Also allows break self-triggered Modify/Update loops with `TExec` ; 5. Adjust several `TExec` tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11727
https://github.com/root-project/root/pull/11727:737,Integrability,message,message,737,"1. Process active pad `TExec` when pad click/mouse move event is produced. JSROOT client deliver such events only when execs are configured. Good example is `hist/DynamicSlice.C` tutorial; 2. Process `TExec` from histogram list of functions. Here execs processed when client confirms drawing and returns applied ranges. Working example is `hist/htproj.C` tutorial; 3. Analyze modification of sub-pads, only data for modified pads send to the client. Improve performance when canvas with many sub-pads, but only few of them are modified. Good example is `hist/tprofile2polyRealistic.C` tutorial, which currently working very slow. ; 4. Optimize server/client communication. If canvas marked modified without real change of data, no extra message will be send to client. Also allows break self-triggered Modify/Update loops with `TExec` ; 5. Adjust several `TExec` tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11727
https://github.com/root-project/root/pull/11727:129,Modifiability,config,configured,129,"1. Process active pad `TExec` when pad click/mouse move event is produced. JSROOT client deliver such events only when execs are configured. Good example is `hist/DynamicSlice.C` tutorial; 2. Process `TExec` from histogram list of functions. Here execs processed when client confirms drawing and returns applied ranges. Working example is `hist/htproj.C` tutorial; 3. Analyze modification of sub-pads, only data for modified pads send to the client. Improve performance when canvas with many sub-pads, but only few of them are modified. Good example is `hist/tprofile2polyRealistic.C` tutorial, which currently working very slow. ; 4. Optimize server/client communication. If canvas marked modified without real change of data, no extra message will be send to client. Also allows break self-triggered Modify/Update loops with `TExec` ; 5. Adjust several `TExec` tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11727
https://github.com/root-project/root/pull/11727:458,Performance,perform,performance,458,"1. Process active pad `TExec` when pad click/mouse move event is produced. JSROOT client deliver such events only when execs are configured. Good example is `hist/DynamicSlice.C` tutorial; 2. Process `TExec` from histogram list of functions. Here execs processed when client confirms drawing and returns applied ranges. Working example is `hist/htproj.C` tutorial; 3. Analyze modification of sub-pads, only data for modified pads send to the client. Improve performance when canvas with many sub-pads, but only few of them are modified. Good example is `hist/tprofile2polyRealistic.C` tutorial, which currently working very slow. ; 4. Optimize server/client communication. If canvas marked modified without real change of data, no extra message will be send to client. Also allows break self-triggered Modify/Update loops with `TExec` ; 5. Adjust several `TExec` tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11727
https://github.com/root-project/root/pull/11727:635,Performance,Optimiz,Optimize,635,"1. Process active pad `TExec` when pad click/mouse move event is produced. JSROOT client deliver such events only when execs are configured. Good example is `hist/DynamicSlice.C` tutorial; 2. Process `TExec` from histogram list of functions. Here execs processed when client confirms drawing and returns applied ranges. Working example is `hist/htproj.C` tutorial; 3. Analyze modification of sub-pads, only data for modified pads send to the client. Improve performance when canvas with many sub-pads, but only few of them are modified. Good example is `hist/tprofile2polyRealistic.C` tutorial, which currently working very slow. ; 4. Optimize server/client communication. If canvas marked modified without real change of data, no extra message will be send to client. Also allows break self-triggered Modify/Update loops with `TExec` ; 5. Adjust several `TExec` tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11727
https://github.com/root-project/root/issues/11730:595,Integrability,interface,interface,595,"As per a conversation with @jblomer on 16/11/2022 (and probably also related to https://github.com/root-project/root/pull/11628#discussion_r1023123773), it would be useful to provide a way for users to set a per-field callback function to be invoked after reading a value object. As an alternative to the (yet to be supported) manual schema evolution rules, this can be used as a simple way to inspect/modify the value object after reading. ### Describe the solution you'd like; Something similar to `RFieldBase::SetReadCallback(void (*)(RFieldValue&))` might be part of the `RFieldBase` public interface in order to allow users to set such callback.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11730
https://github.com/root-project/root/issues/11730:380,Usability,simpl,simple,380,"As per a conversation with @jblomer on 16/11/2022 (and probably also related to https://github.com/root-project/root/pull/11628#discussion_r1023123773), it would be useful to provide a way for users to set a per-field callback function to be invoked after reading a value object. As an alternative to the (yet to be supported) manual schema evolution rules, this can be used as a simple way to inspect/modify the value object after reading. ### Describe the solution you'd like; Something similar to `RFieldBase::SetReadCallback(void (*)(RFieldValue&))` might be part of the `RFieldBase` public interface in order to allow users to set such callback.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11730
https://github.com/root-project/root/pull/11731:2141,Deployability,patch,patch,2141,"s discussion is that we should not allow views on fields with a mappable type and that have a read callback.; The signature of a read callback function is; ```c++; void callback_func(RFieldValue &);; ```. ## Changes of fixes:; - Fields with a mappable type need to be distinguished from ""simple"" fields (i.e. those that have no additional actions after reading). Thus, the `kTraitMappable` trait is introduced in this PR; it is set for fields of fundamental types that can be directly mapped via `RField<T>::Map()`. These fields also map as-is to a single column.; The `fIsSimple` member now takes a different meaning: a field is simple if it is both mappable (i.e. kTraitMappable) and has no post-read callback.; - Read callbacks are managed via the _protected_ member functions `RFieldBase::{Add,Remove}ReadCallback()`.; - `RFieldBase::Read()` calls the read callbacks as appropriate. The fast path still only calls `fPrincipalColumn->Read()`.; Callbacks should be relatively rare; thus, the branch is marked as `R__unlikely()`, as it provides a small performance increase for non-mappable types that have no read callback.; - As discussed, views are disallowed on fields with a mappable type and a read callback. ## Experimental measurements; The overhead of the changes in this PR was measured in a synthetic test case. The schema is comprised of 4 fields of fundamental data types + 2 fields referring to user-defined `struct`s (containing 4 and 8 members of fundamental data types, respectively). The test program reads all fields across 10000k entries. The file lies in a tmpfs. The overhead has been measured to be:; - No callbacks: **~0.5%** w.r.t. the state of RNTuple before this patch set.; - 1 _nop_ callback function for one of the `struct` fields: **~2.7%** w.r.t. the base time.; - 2 _nop_ callback functions, one for each of the `struct` fields: **~3.4%** w.r.t. the base time. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11730.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11731
https://github.com/root-project/root/pull/11731:2396,Deployability,update,updated,2396,"s discussion is that we should not allow views on fields with a mappable type and that have a read callback.; The signature of a read callback function is; ```c++; void callback_func(RFieldValue &);; ```. ## Changes of fixes:; - Fields with a mappable type need to be distinguished from ""simple"" fields (i.e. those that have no additional actions after reading). Thus, the `kTraitMappable` trait is introduced in this PR; it is set for fields of fundamental types that can be directly mapped via `RField<T>::Map()`. These fields also map as-is to a single column.; The `fIsSimple` member now takes a different meaning: a field is simple if it is both mappable (i.e. kTraitMappable) and has no post-read callback.; - Read callbacks are managed via the _protected_ member functions `RFieldBase::{Add,Remove}ReadCallback()`.; - `RFieldBase::Read()` calls the read callbacks as appropriate. The fast path still only calls `fPrincipalColumn->Read()`.; Callbacks should be relatively rare; thus, the branch is marked as `R__unlikely()`, as it provides a small performance increase for non-mappable types that have no read callback.; - As discussed, views are disallowed on fields with a mappable type and a read callback. ## Experimental measurements; The overhead of the changes in this PR was measured in a synthetic test case. The schema is comprised of 4 fields of fundamental data types + 2 fields referring to user-defined `struct`s (containing 4 and 8 members of fundamental data types, respectively). The test program reads all fields across 10000k entries. The file lies in a tmpfs. The overhead has been measured to be:; - No callbacks: **~0.5%** w.r.t. the state of RNTuple before this patch set.; - 1 _nop_ callback function for one of the `struct` fields: **~2.7%** w.r.t. the base time.; - 2 _nop_ callback functions, one for each of the `struct` fields: **~3.4%** w.r.t. the base time. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11730.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11731
https://github.com/root-project/root/pull/11731:1504,Performance,perform,performance,1504,"s discussion is that we should not allow views on fields with a mappable type and that have a read callback.; The signature of a read callback function is; ```c++; void callback_func(RFieldValue &);; ```. ## Changes of fixes:; - Fields with a mappable type need to be distinguished from ""simple"" fields (i.e. those that have no additional actions after reading). Thus, the `kTraitMappable` trait is introduced in this PR; it is set for fields of fundamental types that can be directly mapped via `RField<T>::Map()`. These fields also map as-is to a single column.; The `fIsSimple` member now takes a different meaning: a field is simple if it is both mappable (i.e. kTraitMappable) and has no post-read callback.; - Read callbacks are managed via the _protected_ member functions `RFieldBase::{Add,Remove}ReadCallback()`.; - `RFieldBase::Read()` calls the read callbacks as appropriate. The fast path still only calls `fPrincipalColumn->Read()`.; Callbacks should be relatively rare; thus, the branch is marked as `R__unlikely()`, as it provides a small performance increase for non-mappable types that have no read callback.; - As discussed, views are disallowed on fields with a mappable type and a read callback. ## Experimental measurements; The overhead of the changes in this PR was measured in a synthetic test case. The schema is comprised of 4 fields of fundamental data types + 2 fields referring to user-defined `struct`s (containing 4 and 8 members of fundamental data types, respectively). The test program reads all fields across 10000k entries. The file lies in a tmpfs. The overhead has been measured to be:; - No callbacks: **~0.5%** w.r.t. the state of RNTuple before this patch set.; - 1 _nop_ callback function for one of the `struct` fields: **~2.7%** w.r.t. the base time.; - 2 _nop_ callback functions, one for each of the `struct` fields: **~3.4%** w.r.t. the base time. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11730.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11731
https://github.com/root-project/root/pull/11731:1763,Testability,test,test,1763,"s discussion is that we should not allow views on fields with a mappable type and that have a read callback.; The signature of a read callback function is; ```c++; void callback_func(RFieldValue &);; ```. ## Changes of fixes:; - Fields with a mappable type need to be distinguished from ""simple"" fields (i.e. those that have no additional actions after reading). Thus, the `kTraitMappable` trait is introduced in this PR; it is set for fields of fundamental types that can be directly mapped via `RField<T>::Map()`. These fields also map as-is to a single column.; The `fIsSimple` member now takes a different meaning: a field is simple if it is both mappable (i.e. kTraitMappable) and has no post-read callback.; - Read callbacks are managed via the _protected_ member functions `RFieldBase::{Add,Remove}ReadCallback()`.; - `RFieldBase::Read()` calls the read callbacks as appropriate. The fast path still only calls `fPrincipalColumn->Read()`.; Callbacks should be relatively rare; thus, the branch is marked as `R__unlikely()`, as it provides a small performance increase for non-mappable types that have no read callback.; - As discussed, views are disallowed on fields with a mappable type and a read callback. ## Experimental measurements; The overhead of the changes in this PR was measured in a synthetic test case. The schema is comprised of 4 fields of fundamental data types + 2 fields referring to user-defined `struct`s (containing 4 and 8 members of fundamental data types, respectively). The test program reads all fields across 10000k entries. The file lies in a tmpfs. The overhead has been measured to be:; - No callbacks: **~0.5%** w.r.t. the state of RNTuple before this patch set.; - 1 _nop_ callback function for one of the `struct` fields: **~2.7%** w.r.t. the base time.; - 2 _nop_ callback functions, one for each of the `struct` fields: **~3.4%** w.r.t. the base time. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11730.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11731
https://github.com/root-project/root/pull/11731:1957,Testability,test,test,1957,"s discussion is that we should not allow views on fields with a mappable type and that have a read callback.; The signature of a read callback function is; ```c++; void callback_func(RFieldValue &);; ```. ## Changes of fixes:; - Fields with a mappable type need to be distinguished from ""simple"" fields (i.e. those that have no additional actions after reading). Thus, the `kTraitMappable` trait is introduced in this PR; it is set for fields of fundamental types that can be directly mapped via `RField<T>::Map()`. These fields also map as-is to a single column.; The `fIsSimple` member now takes a different meaning: a field is simple if it is both mappable (i.e. kTraitMappable) and has no post-read callback.; - Read callbacks are managed via the _protected_ member functions `RFieldBase::{Add,Remove}ReadCallback()`.; - `RFieldBase::Read()` calls the read callbacks as appropriate. The fast path still only calls `fPrincipalColumn->Read()`.; Callbacks should be relatively rare; thus, the branch is marked as `R__unlikely()`, as it provides a small performance increase for non-mappable types that have no read callback.; - As discussed, views are disallowed on fields with a mappable type and a read callback. ## Experimental measurements; The overhead of the changes in this PR was measured in a synthetic test case. The schema is comprised of 4 fields of fundamental data types + 2 fields referring to user-defined `struct`s (containing 4 and 8 members of fundamental data types, respectively). The test program reads all fields across 10000k entries. The file lies in a tmpfs. The overhead has been measured to be:; - No callbacks: **~0.5%** w.r.t. the state of RNTuple before this patch set.; - 1 _nop_ callback function for one of the `struct` fields: **~2.7%** w.r.t. the base time.; - 2 _nop_ callback functions, one for each of the `struct` fields: **~3.4%** w.r.t. the base time. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11730.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11731
https://github.com/root-project/root/pull/11731:2366,Testability,test,tested,2366,"s discussion is that we should not allow views on fields with a mappable type and that have a read callback.; The signature of a read callback function is; ```c++; void callback_func(RFieldValue &);; ```. ## Changes of fixes:; - Fields with a mappable type need to be distinguished from ""simple"" fields (i.e. those that have no additional actions after reading). Thus, the `kTraitMappable` trait is introduced in this PR; it is set for fields of fundamental types that can be directly mapped via `RField<T>::Map()`. These fields also map as-is to a single column.; The `fIsSimple` member now takes a different meaning: a field is simple if it is both mappable (i.e. kTraitMappable) and has no post-read callback.; - Read callbacks are managed via the _protected_ member functions `RFieldBase::{Add,Remove}ReadCallback()`.; - `RFieldBase::Read()` calls the read callbacks as appropriate. The fast path still only calls `fPrincipalColumn->Read()`.; Callbacks should be relatively rare; thus, the branch is marked as `R__unlikely()`, as it provides a small performance increase for non-mappable types that have no read callback.; - As discussed, views are disallowed on fields with a mappable type and a read callback. ## Experimental measurements; The overhead of the changes in this PR was measured in a synthetic test case. The schema is comprised of 4 fields of fundamental data types + 2 fields referring to user-defined `struct`s (containing 4 and 8 members of fundamental data types, respectively). The test program reads all fields across 10000k entries. The file lies in a tmpfs. The overhead has been measured to be:; - No callbacks: **~0.5%** w.r.t. the state of RNTuple before this patch set.; - 1 _nop_ callback function for one of the `struct` fields: **~2.7%** w.r.t. the base time.; - 2 _nop_ callback functions, one for each of the `struct` fields: **~3.4%** w.r.t. the base time. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11730.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11731
https://github.com/root-project/root/pull/11731:738,Usability,simpl,simple,738,"As per a conversation with @jblomer on 16/11/2022, and ROOT I/O meeting on 25/11/2022 (and probably also related to https://github.com/root-project/root/pull/11628#discussion_r1023123773), this pull request adds support for per field post-read callback functions to be invoked after reading a value object.; Such callbacks can be used to inspect/modify the value object after reading, e.g. to initialize transient members. The conclusion of a previous discussion is that we should not allow views on fields with a mappable type and that have a read callback.; The signature of a read callback function is; ```c++; void callback_func(RFieldValue &);; ```. ## Changes of fixes:; - Fields with a mappable type need to be distinguished from ""simple"" fields (i.e. those that have no additional actions after reading). Thus, the `kTraitMappable` trait is introduced in this PR; it is set for fields of fundamental types that can be directly mapped via `RField<T>::Map()`. These fields also map as-is to a single column.; The `fIsSimple` member now takes a different meaning: a field is simple if it is both mappable (i.e. kTraitMappable) and has no post-read callback.; - Read callbacks are managed via the _protected_ member functions `RFieldBase::{Add,Remove}ReadCallback()`.; - `RFieldBase::Read()` calls the read callbacks as appropriate. The fast path still only calls `fPrincipalColumn->Read()`.; Callbacks should be relatively rare; thus, the branch is marked as `R__unlikely()`, as it provides a small performance increase for non-mappable types that have no read callback.; - As discussed, views are disallowed on fields with a mappable type and a read callback. ## Experimental measurements; The overhead of the changes in this PR was measured in a synthetic test case. The schema is comprised of 4 fields of fundamental data types + 2 fields referring to user-defined `struct`s (containing 4 and 8 members of fundamental data types, respectively). The test program reads all fields across 10000k ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11731
https://github.com/root-project/root/pull/11731:1080,Usability,simpl,simple,1080," meeting on 25/11/2022 (and probably also related to https://github.com/root-project/root/pull/11628#discussion_r1023123773), this pull request adds support for per field post-read callback functions to be invoked after reading a value object.; Such callbacks can be used to inspect/modify the value object after reading, e.g. to initialize transient members. The conclusion of a previous discussion is that we should not allow views on fields with a mappable type and that have a read callback.; The signature of a read callback function is; ```c++; void callback_func(RFieldValue &);; ```. ## Changes of fixes:; - Fields with a mappable type need to be distinguished from ""simple"" fields (i.e. those that have no additional actions after reading). Thus, the `kTraitMappable` trait is introduced in this PR; it is set for fields of fundamental types that can be directly mapped via `RField<T>::Map()`. These fields also map as-is to a single column.; The `fIsSimple` member now takes a different meaning: a field is simple if it is both mappable (i.e. kTraitMappable) and has no post-read callback.; - Read callbacks are managed via the _protected_ member functions `RFieldBase::{Add,Remove}ReadCallback()`.; - `RFieldBase::Read()` calls the read callbacks as appropriate. The fast path still only calls `fPrincipalColumn->Read()`.; Callbacks should be relatively rare; thus, the branch is marked as `R__unlikely()`, as it provides a small performance increase for non-mappable types that have no read callback.; - As discussed, views are disallowed on fields with a mappable type and a read callback. ## Experimental measurements; The overhead of the changes in this PR was measured in a synthetic test case. The schema is comprised of 4 fields of fundamental data types + 2 fields referring to user-defined `struct`s (containing 4 and 8 members of fundamental data types, respectively). The test program reads all fields across 10000k entries. The file lies in a tmpfs. The overhead has been measu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11731
https://github.com/root-project/root/pull/11736:556,Deployability,update,updated,556,"# This Pull request:. ## Changes or fixes:; Commit 23d861273f56c28a6bad45028115f80228816b6f removed `get_wgt`, but this is used in RooFitExtensions, which in turn is used for Higgs combination fits. This commit adds `get_wgt` back in. It also adds it in places where it was missing before; some new additions since `get_wgt` was added (about 6 years ago) did not use `get_wgt`, but rather directly accessed the `_wgt` array, which again breaks the usecase within RooFitExtensions (`RooExpandedDataHist`). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11736
https://github.com/root-project/root/pull/11736:398,Security,access,accessed,398,"# This Pull request:. ## Changes or fixes:; Commit 23d861273f56c28a6bad45028115f80228816b6f removed `get_wgt`, but this is used in RooFitExtensions, which in turn is used for Higgs combination fits. This commit adds `get_wgt` back in. It also adds it in places where it was missing before; some new additions since `get_wgt` was added (about 6 years ago) did not use `get_wgt`, but rather directly accessed the `_wgt` array, which again breaks the usecase within RooFitExtensions (`RooExpandedDataHist`). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11736
https://github.com/root-project/root/pull/11736:526,Testability,test,tested,526,"# This Pull request:. ## Changes or fixes:; Commit 23d861273f56c28a6bad45028115f80228816b6f removed `get_wgt`, but this is used in RooFitExtensions, which in turn is used for Higgs combination fits. This commit adds `get_wgt` back in. It also adds it in places where it was missing before; some new additions since `get_wgt` was added (about 6 years ago) did not use `get_wgt`, but rather directly accessed the `_wgt` array, which again breaks the usecase within RooFitExtensions (`RooExpandedDataHist`). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11736
https://github.com/root-project/root/pull/11737:163,Deployability,update,update,163,1. Adjust several tutorials from `graphics` folder to work with TWebCanvas; 2. Optimize openui5-based code - avoid direct import of JSROOT modules; 3. Fix zooming update problem on lego plots; 4. Fix GED visibility update problem,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11737
https://github.com/root-project/root/pull/11737:215,Deployability,update,update,215,1. Adjust several tutorials from `graphics` folder to work with TWebCanvas; 2. Optimize openui5-based code - avoid direct import of JSROOT modules; 3. Fix zooming update problem on lego plots; 4. Fix GED visibility update problem,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11737
https://github.com/root-project/root/pull/11737:79,Performance,Optimiz,Optimize,79,1. Adjust several tutorials from `graphics` folder to work with TWebCanvas; 2. Optimize openui5-based code - avoid direct import of JSROOT modules; 3. Fix zooming update problem on lego plots; 4. Fix GED visibility update problem,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11737
https://github.com/root-project/root/pull/11737:109,Safety,avoid,avoid,109,1. Adjust several tutorials from `graphics` folder to work with TWebCanvas; 2. Optimize openui5-based code - avoid direct import of JSROOT modules; 3. Fix zooming update problem on lego plots; 4. Fix GED visibility update problem,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11737
https://github.com/root-project/root/issues/11738:1029,Testability,Test,Tested,1029,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; With the recent version of ROOT (v6.26/08), I found out that when plotting the pull distribution after a fit with pullHist, the wrong distribution is shown with respect to the one produced with ROOT v6.26/06, for example. ### Expected behavior; When the fit converges, a gaussian-like pull distribution is expected, while with ROOT v6.26/08 the histogram bars are unreasonably high. ### To Reproduce; You can find the needed code and data to reproduce the bug at the following link:; https://cernbox.cern.ch/s/hnMmXVjUtbwlZJN; Simply run `bug_reproducer.py` with ROOT v6.26/06 and v6.26/08 and see the difference in the plot produced. ### Setup; Tested with ROOT setup from `lb-conda`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11738
https://github.com/root-project/root/issues/11738:910,Usability,Simpl,Simply,910,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; With the recent version of ROOT (v6.26/08), I found out that when plotting the pull distribution after a fit with pullHist, the wrong distribution is shown with respect to the one produced with ROOT v6.26/06, for example. ### Expected behavior; When the fit converges, a gaussian-like pull distribution is expected, while with ROOT v6.26/08 the histogram bars are unreasonably high. ### To Reproduce; You can find the needed code and data to reproduce the bug at the following link:; https://cernbox.cern.ch/s/hnMmXVjUtbwlZJN; Simply run `bug_reproducer.py` with ROOT v6.26/06 and v6.26/08 and see the difference in the plot produced. ### Setup; Tested with ROOT setup from `lb-conda`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11738
https://github.com/root-project/root/pull/11739:64,Modifiability,plugin,plugin,64,There is fictional `TVirtualTreeViewer` class and `RTreeViewer` plugin is activated when web display is configured. Allows to use web-based canvas and tree viewer together like in `tutorials/tree/tree0.C` example,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11739
https://github.com/root-project/root/pull/11739:104,Modifiability,config,configured,104,There is fictional `TVirtualTreeViewer` class and `RTreeViewer` plugin is activated when web display is configured. Allows to use web-based canvas and tree viewer together like in `tutorials/tree/tree0.C` example,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11739
https://github.com/root-project/root/pull/11742:283,Integrability,depend,dependencies,283,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. For anything with ""./configure"", force the timestamp as stored in the tar file. Fixes https://github.com/root-project/root/issues/11743",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11742
https://github.com/root-project/root/pull/11742:224,Modifiability,config,configure,224,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. For anything with ""./configure"", force the timestamp as stored in the tar file. Fixes https://github.com/root-project/root/issues/11743",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11742
https://github.com/root-project/root/pull/11742:264,Modifiability,config,configure,264,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. For anything with ""./configure"", force the timestamp as stored in the tar file. Fixes https://github.com/root-project/root/issues/11743",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11742
https://github.com/root-project/root/pull/11742:332,Modifiability,config,configure,332,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. For anything with ""./configure"", force the timestamp as stored in the tar file. Fixes https://github.com/root-project/root/issues/11743",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11742
https://github.com/root-project/root/pull/11742:360,Modifiability,config,configure,360,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. For anything with ""./configure"", force the timestamp as stored in the tar file. Fixes https://github.com/root-project/root/issues/11743",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11742
https://github.com/root-project/root/pull/11742:477,Modifiability,config,configure,477,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. For anything with ""./configure"", force the timestamp as stored in the tar file. Fixes https://github.com/root-project/root/issues/11743",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11742
https://github.com/root-project/root/issues/11743:708,Availability,Error,Error,708,"- [X] Checked for duplicates. With CMake >= 3.24 we get; ```; .../LZMA-prefix/src/LZMA-stamp/LZMA-build-Release.cmake:49 (message):; Command failed: 2. 'make'. See also. .../LZMA-prefix/src/LZMA-stamp/LZMA-build-*.log; ```; which has; ```; WARNING: 'aclocal-1.15' is missing on your system.; You should only need it if you modified 'acinclude.m4' or; 'configure.ac' or m4 files included by 'configure.ac'.; The 'aclocal' program is part of the GNU Automake package:; <http://www.gnu.org/software/automake>; It also requires GNU Autoconf, GNU m4 and Perl in order to run:; <http://www.gnu.org/software/autoconf>; <http://www.gnu.org/software/m4/>; <http://www.perl.org/>; make: *** [Makefile:514: aclocal.m4] Error 127; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11743
https://github.com/root-project/root/issues/11743:104,Deployability,Release,Release,104,"- [X] Checked for duplicates. With CMake >= 3.24 we get; ```; .../LZMA-prefix/src/LZMA-stamp/LZMA-build-Release.cmake:49 (message):; Command failed: 2. 'make'. See also. .../LZMA-prefix/src/LZMA-stamp/LZMA-build-*.log; ```; which has; ```; WARNING: 'aclocal-1.15' is missing on your system.; You should only need it if you modified 'acinclude.m4' or; 'configure.ac' or m4 files included by 'configure.ac'.; The 'aclocal' program is part of the GNU Automake package:; <http://www.gnu.org/software/automake>; It also requires GNU Autoconf, GNU m4 and Perl in order to run:; <http://www.gnu.org/software/autoconf>; <http://www.gnu.org/software/m4/>; <http://www.perl.org/>; make: *** [Makefile:514: aclocal.m4] Error 127; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11743
https://github.com/root-project/root/issues/11743:122,Integrability,message,message,122,"- [X] Checked for duplicates. With CMake >= 3.24 we get; ```; .../LZMA-prefix/src/LZMA-stamp/LZMA-build-Release.cmake:49 (message):; Command failed: 2. 'make'. See also. .../LZMA-prefix/src/LZMA-stamp/LZMA-build-*.log; ```; which has; ```; WARNING: 'aclocal-1.15' is missing on your system.; You should only need it if you modified 'acinclude.m4' or; 'configure.ac' or m4 files included by 'configure.ac'.; The 'aclocal' program is part of the GNU Automake package:; <http://www.gnu.org/software/automake>; It also requires GNU Autoconf, GNU m4 and Perl in order to run:; <http://www.gnu.org/software/autoconf>; <http://www.gnu.org/software/m4/>; <http://www.perl.org/>; make: *** [Makefile:514: aclocal.m4] Error 127; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11743
https://github.com/root-project/root/issues/11743:352,Modifiability,config,configure,352,"- [X] Checked for duplicates. With CMake >= 3.24 we get; ```; .../LZMA-prefix/src/LZMA-stamp/LZMA-build-Release.cmake:49 (message):; Command failed: 2. 'make'. See also. .../LZMA-prefix/src/LZMA-stamp/LZMA-build-*.log; ```; which has; ```; WARNING: 'aclocal-1.15' is missing on your system.; You should only need it if you modified 'acinclude.m4' or; 'configure.ac' or m4 files included by 'configure.ac'.; The 'aclocal' program is part of the GNU Automake package:; <http://www.gnu.org/software/automake>; It also requires GNU Autoconf, GNU m4 and Perl in order to run:; <http://www.gnu.org/software/autoconf>; <http://www.gnu.org/software/m4/>; <http://www.perl.org/>; make: *** [Makefile:514: aclocal.m4] Error 127; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11743
https://github.com/root-project/root/issues/11743:391,Modifiability,config,configure,391,"- [X] Checked for duplicates. With CMake >= 3.24 we get; ```; .../LZMA-prefix/src/LZMA-stamp/LZMA-build-Release.cmake:49 (message):; Command failed: 2. 'make'. See also. .../LZMA-prefix/src/LZMA-stamp/LZMA-build-*.log; ```; which has; ```; WARNING: 'aclocal-1.15' is missing on your system.; You should only need it if you modified 'acinclude.m4' or; 'configure.ac' or m4 files included by 'configure.ac'.; The 'aclocal' program is part of the GNU Automake package:; <http://www.gnu.org/software/automake>; It also requires GNU Autoconf, GNU m4 and Perl in order to run:; <http://www.gnu.org/software/autoconf>; <http://www.gnu.org/software/m4/>; <http://www.perl.org/>; make: *** [Makefile:514: aclocal.m4] Error 127; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11743
https://github.com/root-project/root/issues/11743:214,Testability,log,log,214,"- [X] Checked for duplicates. With CMake >= 3.24 we get; ```; .../LZMA-prefix/src/LZMA-stamp/LZMA-build-Release.cmake:49 (message):; Command failed: 2. 'make'. See also. .../LZMA-prefix/src/LZMA-stamp/LZMA-build-*.log; ```; which has; ```; WARNING: 'aclocal-1.15' is missing on your system.; You should only need it if you modified 'acinclude.m4' or; 'configure.ac' or m4 files included by 'configure.ac'.; The 'aclocal' program is part of the GNU Automake package:; <http://www.gnu.org/software/automake>; It also requires GNU Autoconf, GNU m4 and Perl in order to run:; <http://www.gnu.org/software/autoconf>; <http://www.gnu.org/software/m4/>; <http://www.perl.org/>; make: *** [Makefile:514: aclocal.m4] Error 127; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11743
https://github.com/root-project/root/pull/11744:0,Energy Efficiency,Reduce,Reduce,0,"Reduce usage of unsafe `Form()` function, especially in Thread.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11744
https://github.com/root-project/root/pull/11744:16,Safety,unsafe,unsafe,16,"Reduce usage of unsafe `Form()` function, especially in Thread.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11744
https://github.com/root-project/root/issues/11746:294,Deployability,update,updated,294,"This line:; https://github.com/root-project/root/blob/7aab9a2be02967dc75342b4fb3c01c98f2a5a2c9/hist/hist/src/TH2.cxx#L485. Should be `fTsumwxy += z * x * y;` instead, as in the other versions `TH2::Fill`.; This was changed by 4465976d5da9b6c18adff75c430958112e79bf94, previously `fTsumwxy` was updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11746
https://github.com/root-project/root/issues/11747:671,Safety,avoid,avoiding,671,"As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:; ```; if (fPrimitives); fPrimitives->Clear();; if (fView) {; if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;; fView = nullptr;; }; if (fFrame) {; if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;; fFrame = nullptr;; }; ```; is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11747
https://github.com/root-project/root/issues/11747:120,Usability,Clear,Clear,120,"As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:; ```; if (fPrimitives); fPrimitives->Clear();; if (fView) {; if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;; fView = nullptr;; }; if (fFrame) {; if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;; fFrame = nullptr;; }; ```; is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11747
https://github.com/root-project/root/issues/11747:745,Usability,Clear,Clear,745,"As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:; ```; if (fPrimitives); fPrimitives->Clear();; if (fView) {; if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;; fView = nullptr;; }; if (fFrame) {; if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;; fFrame = nullptr;; }; ```; is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11747
https://github.com/root-project/root/pull/11748:105,Deployability,patch,patches,105,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to master to v6-26-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11566; 2. https://github.com/root-project/root/pull/11584; Only the first commit that is not code modernization. Related to https://github.com/root-project/root/issues/11534.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11748
https://github.com/root-project/root/issues/11749:610,Deployability,Install,Install,610,"### Explain what you would like to see improved; While running [slackbuild](https://slackbuilds.org/repository/15.0/academic/root/) for the latest stable ROOT (v6.26/10), as well as for some previous versions, I receive the following warning from package utils:; ```; WARNING: zero length file opt/ROOT-6.26.10/tutorials/doc/v602/index.md; ```. ### Optional: share how it could be improved; You could delete the empty files from the distributed tarball or synchronize with the git repo: https://github.com/root-project/root/blob/master/doc/v602/index.md. ### To Reproduce; Steps to reproduce the behavior:; 1. Install full Slackware 15.0; 2. Install ROOT dependencies; 3. Build ROOT package. The warnings will be shown at the end of the slackbuild output . ### Setup; 1. ROOT version: 6.26/10; 2. Operating system: Slackware 15.0; 3. ROOT built from the official source tarball",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11749
https://github.com/root-project/root/issues/11749:642,Deployability,Install,Install,642,"### Explain what you would like to see improved; While running [slackbuild](https://slackbuilds.org/repository/15.0/academic/root/) for the latest stable ROOT (v6.26/10), as well as for some previous versions, I receive the following warning from package utils:; ```; WARNING: zero length file opt/ROOT-6.26.10/tutorials/doc/v602/index.md; ```. ### Optional: share how it could be improved; You could delete the empty files from the distributed tarball or synchronize with the git repo: https://github.com/root-project/root/blob/master/doc/v602/index.md. ### To Reproduce; Steps to reproduce the behavior:; 1. Install full Slackware 15.0; 2. Install ROOT dependencies; 3. Build ROOT package. The warnings will be shown at the end of the slackbuild output . ### Setup; 1. ROOT version: 6.26/10; 2. Operating system: Slackware 15.0; 3. ROOT built from the official source tarball",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11749
https://github.com/root-project/root/issues/11749:456,Integrability,synchroniz,synchronize,456,"### Explain what you would like to see improved; While running [slackbuild](https://slackbuilds.org/repository/15.0/academic/root/) for the latest stable ROOT (v6.26/10), as well as for some previous versions, I receive the following warning from package utils:; ```; WARNING: zero length file opt/ROOT-6.26.10/tutorials/doc/v602/index.md; ```. ### Optional: share how it could be improved; You could delete the empty files from the distributed tarball or synchronize with the git repo: https://github.com/root-project/root/blob/master/doc/v602/index.md. ### To Reproduce; Steps to reproduce the behavior:; 1. Install full Slackware 15.0; 2. Install ROOT dependencies; 3. Build ROOT package. The warnings will be shown at the end of the slackbuild output . ### Setup; 1. ROOT version: 6.26/10; 2. Operating system: Slackware 15.0; 3. ROOT built from the official source tarball",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11749
https://github.com/root-project/root/issues/11749:655,Integrability,depend,dependencies,655,"### Explain what you would like to see improved; While running [slackbuild](https://slackbuilds.org/repository/15.0/academic/root/) for the latest stable ROOT (v6.26/10), as well as for some previous versions, I receive the following warning from package utils:; ```; WARNING: zero length file opt/ROOT-6.26.10/tutorials/doc/v602/index.md; ```. ### Optional: share how it could be improved; You could delete the empty files from the distributed tarball or synchronize with the git repo: https://github.com/root-project/root/blob/master/doc/v602/index.md. ### To Reproduce; Steps to reproduce the behavior:; 1. Install full Slackware 15.0; 2. Install ROOT dependencies; 3. Build ROOT package. The warnings will be shown at the end of the slackbuild output . ### Setup; 1. ROOT version: 6.26/10; 2. Operating system: Slackware 15.0; 3. ROOT built from the official source tarball",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11749
https://github.com/root-project/root/issues/11750:447,Deployability,install,installed,447,"Dear ROOT devs,. These lines in the FindXROOTD. https://github.com/root-project/root/blob/323c21416cea9a64080698c23a7e2f6f6d1808bf/cmake/modules/FindXROOTD.cmake#L137-L149. make some root libraries, e.g., libNetxNG.so, link against old versions of xrootd if they are found on the system, even though one wants to build against the new version of xrootd.; We for SPI run into this problem when building on a machine which just happens to have this installed, and we cannot control the packages. e.g. this is printed during configure:; ```; -- Found Xrootd version num: 5.3.1 (setting -DROOTXRDVERS=500030001); --; -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- include_dirs: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd/private; -- libraries: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdUtils.so;/usr/lib64/libXrdClient.so;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdCl.so. ```; This then causes problem when our ROOT is used on some other machine.; So at the moment we just patch these lines out. If you could consider dropping them, or some check based on xrootd version?. Thanks,; Andre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11750
https://github.com/root-project/root/issues/11750:748,Deployability,install,install,748,"Dear ROOT devs,. These lines in the FindXROOTD. https://github.com/root-project/root/blob/323c21416cea9a64080698c23a7e2f6f6d1808bf/cmake/modules/FindXROOTD.cmake#L137-L149. make some root libraries, e.g., libNetxNG.so, link against old versions of xrootd if they are found on the system, even though one wants to build against the new version of xrootd.; We for SPI run into this problem when building on a machine which just happens to have this installed, and we cannot control the packages. e.g. this is printed during configure:; ```; -- Found Xrootd version num: 5.3.1 (setting -DROOTXRDVERS=500030001); --; -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- include_dirs: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd/private; -- libraries: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdUtils.so;/usr/lib64/libXrdClient.so;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdCl.so. ```; This then causes problem when our ROOT is used on some other machine.; So at the moment we just patch these lines out. If you could consider dropping them, or some check based on xrootd version?. Thanks,; Andre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11750
https://github.com/root-project/root/issues/11750:861,Deployability,install,install,861,"Dear ROOT devs,. These lines in the FindXROOTD. https://github.com/root-project/root/blob/323c21416cea9a64080698c23a7e2f6f6d1808bf/cmake/modules/FindXROOTD.cmake#L137-L149. make some root libraries, e.g., libNetxNG.so, link against old versions of xrootd if they are found on the system, even though one wants to build against the new version of xrootd.; We for SPI run into this problem when building on a machine which just happens to have this installed, and we cannot control the packages. e.g. this is printed during configure:; ```; -- Found Xrootd version num: 5.3.1 (setting -DROOTXRDVERS=500030001); --; -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- include_dirs: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd/private; -- libraries: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdUtils.so;/usr/lib64/libXrdClient.so;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdCl.so. ```; This then causes problem when our ROOT is used on some other machine.; So at the moment we just patch these lines out. If you could consider dropping them, or some check based on xrootd version?. Thanks,; Andre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11750
https://github.com/root-project/root/issues/11750:997,Deployability,install,install,997,"Dear ROOT devs,. These lines in the FindXROOTD. https://github.com/root-project/root/blob/323c21416cea9a64080698c23a7e2f6f6d1808bf/cmake/modules/FindXROOTD.cmake#L137-L149. make some root libraries, e.g., libNetxNG.so, link against old versions of xrootd if they are found on the system, even though one wants to build against the new version of xrootd.; We for SPI run into this problem when building on a machine which just happens to have this installed, and we cannot control the packages. e.g. this is printed during configure:; ```; -- Found Xrootd version num: 5.3.1 (setting -DROOTXRDVERS=500030001); --; -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- include_dirs: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd/private; -- libraries: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdUtils.so;/usr/lib64/libXrdClient.so;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdCl.so. ```; This then causes problem when our ROOT is used on some other machine.; So at the moment we just patch these lines out. If you could consider dropping them, or some check based on xrootd version?. Thanks,; Andre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11750
https://github.com/root-project/root/issues/11750:1143,Deployability,install,install,1143,"Dear ROOT devs,. These lines in the FindXROOTD. https://github.com/root-project/root/blob/323c21416cea9a64080698c23a7e2f6f6d1808bf/cmake/modules/FindXROOTD.cmake#L137-L149. make some root libraries, e.g., libNetxNG.so, link against old versions of xrootd if they are found on the system, even though one wants to build against the new version of xrootd.; We for SPI run into this problem when building on a machine which just happens to have this installed, and we cannot control the packages. e.g. this is printed during configure:; ```; -- Found Xrootd version num: 5.3.1 (setting -DROOTXRDVERS=500030001); --; -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- include_dirs: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd/private; -- libraries: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdUtils.so;/usr/lib64/libXrdClient.so;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdCl.so. ```; This then causes problem when our ROOT is used on some other machine.; So at the moment we just patch these lines out. If you could consider dropping them, or some check based on xrootd version?. Thanks,; Andre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11750
https://github.com/root-project/root/issues/11750:1309,Deployability,patch,patch,1309,"Dear ROOT devs,. These lines in the FindXROOTD. https://github.com/root-project/root/blob/323c21416cea9a64080698c23a7e2f6f6d1808bf/cmake/modules/FindXROOTD.cmake#L137-L149. make some root libraries, e.g., libNetxNG.so, link against old versions of xrootd if they are found on the system, even though one wants to build against the new version of xrootd.; We for SPI run into this problem when building on a machine which just happens to have this installed, and we cannot control the packages. e.g. this is printed during configure:; ```; -- Found Xrootd version num: 5.3.1 (setting -DROOTXRDVERS=500030001); --; -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- include_dirs: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd/private; -- libraries: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdUtils.so;/usr/lib64/libXrdClient.so;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdCl.so. ```; This then causes problem when our ROOT is used on some other machine.; So at the moment we just patch these lines out. If you could consider dropping them, or some check based on xrootd version?. Thanks,; Andre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11750
https://github.com/root-project/root/issues/11750:656,Integrability,wrap,wrapper,656,"Dear ROOT devs,. These lines in the FindXROOTD. https://github.com/root-project/root/blob/323c21416cea9a64080698c23a7e2f6f6d1808bf/cmake/modules/FindXROOTD.cmake#L137-L149. make some root libraries, e.g., libNetxNG.so, link against old versions of xrootd if they are found on the system, even though one wants to build against the new version of xrootd.; We for SPI run into this problem when building on a machine which just happens to have this installed, and we cannot control the packages. e.g. this is printed during configure:; ```; -- Found Xrootd version num: 5.3.1 (setting -DROOTXRDVERS=500030001); --; -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- include_dirs: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd/private; -- libraries: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdUtils.so;/usr/lib64/libXrdClient.so;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdCl.so. ```; This then causes problem when our ROOT is used on some other machine.; So at the moment we just patch these lines out. If you could consider dropping them, or some check based on xrootd version?. Thanks,; Andre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11750
https://github.com/root-project/root/issues/11750:522,Modifiability,config,configure,522,"Dear ROOT devs,. These lines in the FindXROOTD. https://github.com/root-project/root/blob/323c21416cea9a64080698c23a7e2f6f6d1808bf/cmake/modules/FindXROOTD.cmake#L137-L149. make some root libraries, e.g., libNetxNG.so, link against old versions of xrootd if they are found on the system, even though one wants to build against the new version of xrootd.; We for SPI run into this problem when building on a machine which just happens to have this installed, and we cannot control the packages. e.g. this is printed during configure:; ```; -- Found Xrootd version num: 5.3.1 (setting -DROOTXRDVERS=500030001); --; -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- include_dirs: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd/private; -- libraries: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdUtils.so;/usr/lib64/libXrdClient.so;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdCl.so. ```; This then causes problem when our ROOT is used on some other machine.; So at the moment we just patch these lines out. If you could consider dropping them, or some check based on xrootd version?. Thanks,; Andre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11750
https://github.com/root-project/root/pull/11751:27,Deployability,update,updated,27,The Sum in x and y was not updated when the X and Y axis are not extendable or are not alphanumerics. . This PR fixes ROOT #11746,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11751
https://github.com/root-project/root/pull/11751:65,Modifiability,extend,extendable,65,The Sum in x and y was not updated when the X and Y axis are not extendable or are not alphanumerics. . This PR fixes ROOT #11746,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11751
https://github.com/root-project/root/pull/11752:777,Deployability,update,updated,777,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date.; This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:283,Integrability,depend,dependencies,283,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date.; This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:224,Modifiability,config,configure,224,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date.; This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:264,Modifiability,config,configure,264,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date.; This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:344,Modifiability,config,configure,344,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date.; This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:372,Modifiability,config,configure,372,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date.; This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:553,Modifiability,config,configure,553,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date.; This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:747,Testability,test,tested,747,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date.; This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11753:320,Integrability,depend,dependencies,320,"The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:362,Integrability,depend,depend,362,"The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:134,Testability,stub,stub,134,"The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11754:125,Deployability,update,updated,125,## This Pull request:. Development of the Gather operator for TMVA/SOFIE. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11754
https://github.com/root-project/root/pull/11754:95,Testability,test,tested,95,## This Pull request:. Development of the Gather operator for TMVA/SOFIE. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11754
https://github.com/root-project/root/pull/11756:805,Deployability,Update,Update,805,"This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details).; The implementation provided here also fixes issue #11732.; ; ## Changes or fixes:; - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays.; - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. ; - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`; - Add array unit tests. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:1241,Deployability,update,updated,1241,"This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details).; The implementation provided here also fixes issue #11732.; ; ## Changes or fixes:; - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays.; - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. ; - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`; - Add array unit tests. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:365,Modifiability,extend,extend,365,"This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details).; The implementation provided here also fixes issue #11732.; ; ## Changes or fixes:; - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays.; - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. ; - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`; - Add array unit tests. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:1183,Testability,test,tests,1183,"This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details).; The implementation provided here also fixes issue #11732.; ; ## Changes or fixes:; - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays.; - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. ; - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`; - Add array unit tests. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:1211,Testability,test,tested,1211,"This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details).; The implementation provided here also fixes issue #11732.; ; ## Changes or fixes:; - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays.; - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. ; - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`; - Add array unit tests. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/issues/11757:1143,Availability,down,download,1143,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes.; Thanks,; Emil. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:1125,Deployability,install,install,1125,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes.; Thanks,; Emil. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11758:486,Deployability,update,updated,486,"### Explain what you would like to see improved; As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key.; Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/issues/11758:349,Integrability,depend,dependent,349,"### Explain what you would like to see improved; As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key.; Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/issues/11758:477,Integrability,rout,routines,477,"### Explain what you would like to see improved; As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key.; Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/issues/11758:549,Performance,throughput,throughput,549,"### Explain what you would like to see improved; As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key.; Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/pull/11759:385,Deployability,update,updated,385,# This Pull request:. Adds small improvements to RooLagrangianMorphing and RooPolyFunc. ## Changes or fixes:. - RooLagrangianMorphing now allows observable names to be controlled more explicitly; - RooLagrangianMorphing now correctly handles normalization sets; - RooPolyFunc now provides a method to obtain the function as a string. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11759
https://github.com/root-project/root/pull/11759:355,Testability,test,tested,355,# This Pull request:. Adds small improvements to RooLagrangianMorphing and RooPolyFunc. ## Changes or fixes:. - RooLagrangianMorphing now allows observable names to be controlled more explicitly; - RooLagrangianMorphing now correctly handles normalization sets; - RooPolyFunc now provides a method to obtain the function as a string. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11759
https://github.com/root-project/root/issues/11760:369,Availability,error,errors,369,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; I tried to shift a RooHistPdf by using RooFormulaVar. This lead to the following problems:; RooFit cannot normalize the RooHistPdf correctly (always some random heights); RooFit cannot fit the RooHistPdf to a RooArgSet or RooDataHist and a lot of evaluation errors occur. As soon as I let my code run on root 6.24 there is no problem anymore and both things work. Therefor I suspect a problem with Root 6.26. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->; The combination of RooFormulaVar and RooHistPdf seems to bring up problems. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; ```C++; using namespace RooFit;. void test2(); {; RooRealVar x(""x"",""x"",800,1800);; RooPlot *frame = x.frame();. RooRealVar mean(""mean"",""mean"",1200,1000,1400);; RooRealVar sigma(""sigma"",""sigma"",80,50,90);; RooGaussian Gauss(""Gauss"",""Gauss"",x,mean,sigma);. RooRealVar mean3(""mean3"",""mean3"",1400,1200,1600);; RooRealVar sigma3(""sigma3"",""sigma3"",80,50,90);; RooGaussian Gauss3(""Gauss3"",""Gauss3"",x,mean3,sigma3);. RooRealVar part1(""p1"",""p1"",1000.,0.,1000.);; RooRealVar part2(""p2"",""p2"",1000,0,1000);. RooAddPdf Data_Model(""DM"",""DM"",RooArgList(Gauss,Gauss3),RooArgList(part1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));; Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);; RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);; RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);; RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);; RooGaussian Gauss4(""Gauss4"",""Gauss4"",",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3220,Availability,down,download,3220,"part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));; Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);; RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);; RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);; RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);; RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);; RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);; RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);; RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);; RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);; RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));; std::cout<<Func.getNorm()<<std::endl;; Func1.fitTo(*Data, Range(1000,1600));; Func1.plotOn(frame);; std::cout<<Func.getNorm()<<std::endl;; //Normalization(2500000,RooAbsReal::NumEvent); Func1.paramOn(frame);; frame->Draw();; }; ```. Sorry, its ugly code, but I am not really good at programming. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Root Version 6.26/06 and 6.24/06; Operating System: MacOS Monterey and Linux respectively; Obtained via homebrew. ### Additional context; <!--; Add any other context about the problem here.; -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3202,Deployability,install,install,3202,"part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));; Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);; RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);; RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);; RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);; RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);; RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);; RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);; RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);; RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);; RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));; std::cout<<Func.getNorm()<<std::endl;; Func1.fitTo(*Data, Range(1000,1600));; Func1.plotOn(frame);; std::cout<<Func.getNorm()<<std::endl;; //Normalization(2500000,RooAbsReal::NumEvent); Func1.paramOn(frame);; frame->Draw();; }; ```. Sorry, its ugly code, but I am not really good at programming. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Root Version 6.26/06 and 6.24/06; Operating System: MacOS Monterey and Linux respectively; Obtained via homebrew. ### Additional context; <!--; Add any other context about the problem here.; -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3514,Deployability,install,install,3514,"part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));; Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);; RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);; RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);; RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);; RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);; RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);; RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);; RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);; RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);; RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));; std::cout<<Func.getNorm()<<std::endl;; Func1.fitTo(*Data, Range(1000,1600));; Func1.plotOn(frame);; std::cout<<Func.getNorm()<<std::endl;; //Normalization(2500000,RooAbsReal::NumEvent); Func1.paramOn(frame);; frame->Draw();; }; ```. Sorry, its ugly code, but I am not really good at programming. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Root Version 6.26/06 and 6.24/06; Operating System: MacOS Monterey and Linux respectively; Obtained via homebrew. ### Additional context; <!--; Add any other context about the problem here.; -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/pull/11762:92,Security,access,access,92,"All these classes using additional histogram to draw axes, therefore one need to create and access such ; histogram before drawing object in web canvas. web canvas can address these histograms for context menu or when axis attributes are changed. Special handling of zoomed axis implemented. When necessary, `fMinimum`/`fMaximum` members are changed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11762
https://github.com/root-project/root/pull/11763:703,Safety,avoid,avoiding,703,"This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:; ```; if (fPrimitives); fPrimitives->Clear();; if (fView) {; if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;; fView = nullptr;; }; if (fFrame) {; if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;; fFrame = nullptr;; }; ```; is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11763
https://github.com/root-project/root/pull/11763:139,Usability,Clear,Clear,139,"This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:; ```; if (fPrimitives); fPrimitives->Clear();; if (fView) {; if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;; fView = nullptr;; }; if (fFrame) {; if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;; fFrame = nullptr;; }; ```; is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11763
https://github.com/root-project/root/pull/11763:777,Usability,Clear,Clear,777,"This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:; ```; if (fPrimitives); fPrimitives->Clear();; if (fView) {; if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;; fView = nullptr;; }; if (fFrame) {; if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;; fFrame = nullptr;; }; ```; is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11763
https://github.com/root-project/root/issues/11765:102,Availability,error,errors,102,"Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:; ```; >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd33",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:130,Availability,error,error,130,"Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:; ```; >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd33",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4466,Availability,Error,Error,4466,"ude -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml; In file included from input_line_8:57:; In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]; #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h""; ^; Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a ; dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' import",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:7098,Availability,error,error,7098,"ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9123,Availability,avail,available,9123,"c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }; ^; ```; Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197.; Are you already aware of any fix for that?. Thank you,; Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4010,Integrability,interface,interface,4010,"nal/xz/5.2.5-83d0a00b575efd1701e07bedf7977343/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml; In file included from input_line_8:57:; In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]; #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h""; ^; Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a ; dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4418,Integrability,interface,interface,4418,"8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml; In file included from input_line_8:57:; In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]; #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h""; ^; Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a ; dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/Ev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4585,Integrability,depend,dependency,4585,".h tmp/el8_amd64_gcc11/classes/classes_def.xml; In file included from input_line_8:57:; In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]; #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h""; ^; Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a ; dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4696,Integrability,depend,depends,4696,"d from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]; #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h""; ^; Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a ; dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/Service",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5098,Integrability,interface,interface,5098,"1-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]; #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h""; ^; Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a ; dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5402,Integrability,interface,interface,5402,"md64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]; #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h""; ^; Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a ; dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5692,Integrability,interface,interface,5692,"ify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXX",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6019,Integrability,interface,interface,6019,/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6382,Integrability,interface,interface,6382,/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6626,Integrability,interface,interface,6626,ce/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f55,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8118,Integrability,interface,interface,8118,"n of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }; ^; ```; Full ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9067,Integrability,interface,interface,9067,"c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }; ^; ```; Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197.; Are you already aware of any fix for that?. Thank you,; Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6368,Modifiability,Plugin,PluginManager,6368,/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6612,Modifiability,Plugin,PluginManager,6612,ce/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f55,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6636,Modifiability,Plugin,PluginInfo,6636,ce/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f55,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8104,Modifiability,Plugin,PluginManager,8104,"n of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }; ^; ```; Full ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8675,Modifiability,Plugin,PluginInfo,8675,"c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }; ^; ```; Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197.; Are you already aware of any fix for that?. Thank you,; Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8974,Modifiability,Plugin,PluginInfo,8974,"c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }; ^; ```; Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197.; Are you already aware of any fix for that?. Thank you,; Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9009,Modifiability,Plugin,PluginInfo,9009,"c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }; ^; ```; Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197.; Are you already aware of any fix for that?. Thank you,; Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9053,Modifiability,Plugin,PluginManager,9053,"c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }; ^; ```; Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197.; Are you already aware of any fix for that?. Thank you,; Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9077,Modifiability,Plugin,PluginInfo,9077,"c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }; ^; ```; Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197.; Are you already aware of any fix for that?. Thank you,; Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6392,Performance,Cache,CacheParser,6392,/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:7723,Performance,Cache,CacheParser,7723,"64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8023,Performance,Cache,CacheParser,8023,"inux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { head",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8059,Performance,Cache,CacheParser,8059,"/../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8128,Performance,Cache,CacheParser,8128,"n of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }; ^; ```; Full ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9116,Testability,log,log,9116,"c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }; ^; ```; Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197.; Are you already aware of any fix for that?. Thank you,; Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/pull/11767:319,Availability,avail,available,319,Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`.; This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:100,Performance,load,loaded,100,Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`.; This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:249,Safety,avoid,avoided,249,Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`.; This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/issues/11768:0,Availability,Error,Error,0,"Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result; * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:; https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11768
https://github.com/root-project/root/issues/11768:34,Modifiability,variab,variable,34,"Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result; * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:; https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11768
https://github.com/root-project/root/issues/11768:92,Modifiability,variab,variable,92,"Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result; * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:; https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11768
https://github.com/root-project/root/issues/11770:86,Modifiability,variab,variable,86,So that users don't have to know/find out that they need to set the `CLING_DEBUG` env variable in order to have proper stacktraces when debugging programs that include jitted code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11770
https://github.com/root-project/root/pull/11772:123,Availability,error,error,123,"Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11772
https://github.com/root-project/root/pull/11772:129,Integrability,message,messages,129,"Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11772
https://github.com/root-project/root/pull/11773:17,Deployability,integrat,integration,17,"Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:17,Integrability,integrat,integration,17,"Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:378,Integrability,interface,interfaces,378,"Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:495,Integrability,wrap,wrapper,495,"Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:514,Integrability,wrap,wraps,514,"Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:33,Testability,test,test,33,"Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:143,Usability,simpl,simple,143,"Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:208,Usability,simpl,simple,208,"Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11775:21,Safety,detect,detect,21,"1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client.; 2. Interactive changes of draw options or histogram status bits send directly to server; 3. Small adjust of CEF build, tested with latest code; 4. Syntax adjusting of hist tutorials; 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11775:76,Safety,detect,detected,76,"1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client.; 2. Interactive changes of draw options or histogram status bits send directly to server; 3. Small adjust of CEF build, tested with latest code; 4. Syntax adjusting of hist tutorials; 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11775:7,Security,hash,hash,7,"1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client.; 2. Interactive changes of draw options or histogram status bits send directly to server; 3. Small adjust of CEF build, tested with latest code; 4. Syntax adjusting of hist tutorials; 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11775:239,Testability,test,tested,239,"1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client.; 2. Interactive changes of draw options or histogram status bits send directly to server; 3. Small adjust of CEF build, tested with latest code; 4. Syntax adjusting of hist tutorials; 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11776:597,Performance,Load,Loaded,597,"As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed.; Example:; ```; root [0] gSystem->ListLibraries(""Core""); ; Loaded shared libraries; =======================; -----------------------; 0 libraries loaded; =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE); ; Loaded shared libraries; =======================; /Users/couet/git/couet-root-bin/lib/libCore.so; /Users/couet/git/couet-root-bin/lib/libMathCore.so; -----------------------; 2 libraries loaded; =======================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:684,Performance,load,loaded,684,"As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed.; Example:; ```; root [0] gSystem->ListLibraries(""Core""); ; Loaded shared libraries; =======================; -----------------------; 0 libraries loaded; =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE); ; Loaded shared libraries; =======================; /Users/couet/git/couet-root-bin/lib/libCore.so; /Users/couet/git/couet-root-bin/lib/libMathCore.so; -----------------------; 2 libraries loaded; =======================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:767,Performance,Load,Loaded,767,"As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed.; Example:; ```; root [0] gSystem->ListLibraries(""Core""); ; Loaded shared libraries; =======================; -----------------------; 0 libraries loaded; =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE); ; Loaded shared libraries; =======================; /Users/couet/git/couet-root-bin/lib/libCore.so; /Users/couet/git/couet-root-bin/lib/libMathCore.so; -----------------------; 2 libraries loaded; =======================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:954,Performance,load,loaded,954,"As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed.; Example:; ```; root [0] gSystem->ListLibraries(""Core""); ; Loaded shared libraries; =======================; -----------------------; 0 libraries loaded; =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE); ; Loaded shared libraries; =======================; /Users/couet/git/couet-root-bin/lib/libCore.so; /Users/couet/git/couet-root-bin/lib/libMathCore.so; -----------------------; 2 libraries loaded; =======================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:455,Usability,simpl,simple,455,"As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed.; Example:; ```; root [0] gSystem->ListLibraries(""Core""); ; Loaded shared libraries; =======================; -----------------------; 0 libraries loaded; =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE); ; Loaded shared libraries; =======================; /Users/couet/git/couet-root-bin/lib/libCore.so; /Users/couet/git/couet-root-bin/lib/libMathCore.so; -----------------------; 2 libraries loaded; =======================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11777:153,Deployability,integrat,integration,153,"The functionality to fit pulls in the RooMCStudy with a Gaussian is; widely used, and it's not good that it uses a RooGenericPdf because of; the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the; RooGaussian is not in RooFitCore and using it would result in a circular; dependency. This commit suggests a way to use the RooGaussian anyway, via the; RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:153,Integrability,integrat,integration,153,"The functionality to fit pulls in the RooMCStudy with a Gaussian is; widely used, and it's not good that it uses a RooGenericPdf because of; the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the; RooGaussian is not in RooFitCore and using it would result in a circular; dependency. This commit suggests a way to use the RooGaussian anyway, via the; RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:314,Integrability,depend,dependency,314,"The functionality to fit pulls in the RooMCStudy with a Gaussian is; widely used, and it's not good that it uses a RooGenericPdf because of; the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the; RooGaussian is not in RooFitCore and using it would result in a circular; dependency. This commit suggests a way to use the RooGaussian anyway, via the; RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:414,Integrability,interface,interface,414,"The functionality to fit pulls in the RooMCStudy with a Gaussian is; widely used, and it's not good that it uses a RooGenericPdf because of; the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the; RooGaussian is not in RooFitCore and using it would result in a circular; dependency. This commit suggests a way to use the RooGaussian anyway, via the; RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:594,Security,access,accesses,594,"The functionality to fit pulls in the RooMCStudy with a Gaussian is; widely used, and it's not good that it uses a RooGenericPdf because of; the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the; RooGaussian is not in RooFitCore and using it would result in a circular; dependency. This commit suggests a way to use the RooGaussian anyway, via the; RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11778:47,Usability,guid,guide,47,Now the .C scripts used to build the reference guide are compiled using AClic to build the doc faster.; Some includes were missing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11778
https://github.com/root-project/root/issues/11781:2499,Deployability,install,installer,2499,"; root [0] TGeoManager* myGeo = new TGeoManager();; root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2; Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; (TGeoManager *) 0x556b33e2bc60; root [2] myGeo->CheckOverlaps(); Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1; Check overlaps: [==========] 3 [100.00 %] 00:00 ; Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(); === Overlaps for Default ===; = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311; ```. ### Setup; ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):; ```; cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm dataframe davix exceptions gdml gnuinstall gsl_shared http imt mathmore minuit2 opengl pyroot roofit root7 rpath shared soversion ssl unuran vc vdt veccore x11 xml xrootd; ```. ### Additional context; I'm going to verify this is still present in `master` and confirm here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:1654,Performance,cache,cache,1654,"86f4-3679424e4d17.png). ### To Reproduce; - `TGeoManager* myGeo = new TGeoManager();`; - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`; - `myGeo->CheckOverlaps()`; - `myGeo->PrintOverlaps()`. ```; 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l ; root [0] TGeoManager* myGeo = new TGeoManager();; root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2; Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; (TGeoManager *) 0x556b33e2bc60; root [2] myGeo->CheckOverlaps(); Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1; Check overlaps: [==========] 3 [100.00 %] 00:00 ; Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(); === Overlaps for Default ===; = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311; ```. ### Setup; ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):; ```; cxx17 asimage builtin_afterimage builtin_clang builtin_cling builti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:871,Safety,detect,detectors,871,"- [x] Checked for duplicates. ### Describe the bug; Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior; ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):; ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce; - `TGeoManager* myGeo = new TGeoManager();`; - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`; - `myGeo->CheckOverlaps()`; - `myGeo->PrintOverlaps()`. ```; 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l ; root [0] TGeoManager* myGeo = new TGeoManager();; root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2; Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; (TGeoManager *) 0x556b33e2bc60; root [2] myGeo->CheckOverlaps(); Info in <TGeoNodeMatri",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:887,Testability,test,testcase,887,"- [x] Checked for duplicates. ### Describe the bug; Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior; ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):; ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce; - `TGeoManager* myGeo = new TGeoManager();`; - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`; - `myGeo->CheckOverlaps()`; - `myGeo->PrintOverlaps()`. ```; 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l ; root [0] TGeoManager* myGeo = new TGeoManager();; root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2; Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; (TGeoManager *) 0x556b33e2bc60; root [2] myGeo->CheckOverlaps(); Info in <TGeoNodeMatri",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:212,Usability,simpl,simple,212,"- [x] Checked for duplicates. ### Describe the bug; Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior; ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):; ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce; - `TGeoManager* myGeo = new TGeoManager();`; - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`; - `myGeo->CheckOverlaps()`; - `myGeo->PrintOverlaps()`. ```; 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l ; root [0] TGeoManager* myGeo = new TGeoManager();; root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2; Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; (TGeoManager *) 0x556b33e2bc60; root [2] myGeo->CheckOverlaps(); Info in <TGeoNodeMatri",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/pull/11782:16,Availability,error,error,16,Fix compilation error on MSVC after the merge of https://github.com/root-project/root/pull/11756.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11782
https://github.com/root-project/root/pull/11783:189,Deployability,integrat,integration,189,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:255,Deployability,integrat,integration,255,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:311,Deployability,integrat,integrated,311,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:485,Deployability,integrat,integrated,485,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:1027,Energy Efficiency,reduce,reduces,1027,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:189,Integrability,integrat,integration,189,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:255,Integrability,integrat,integration,255,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:311,Integrability,integrat,integrated,311,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:485,Integrability,integrat,integrated,485,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:748,Integrability,interface,interface,748,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:971,Integrability,depend,depend,971,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:170,Modifiability,variab,variable,170,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:201,Modifiability,variab,variables,201,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:267,Modifiability,variab,variable,267,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:436,Modifiability,variab,variable,436,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:552,Modifiability,variab,variable,552,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:611,Testability,test,test,611,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:951,Testability,test,tests,951,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:1129,Testability,test,tests,1129,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/issues/11784:4429,Availability,down,down,4429,"eady----------------; (TGeoManager *) 0x556180ad1d50; root [1] geo->CheckOverlaps(); Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1; warning: Failed to call `P020_REveGeoPainter()` to execute the macro.; Add this function or rename the macro. Falling back to `.L`.; Check overlaps: [==========] 3 [100.00 %] 00:00 ; Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(); === Overlaps for Default ===; = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823; root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(); (TGeoVolume *) 0x556181070960; root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(); (TGeoVolume *) 0x556181070960; root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(); (TGeoMatrix *) 0x5561811a2390; root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(); (TGeoMatrix *) 0x5561811b19c0; root [7] TGeoChecker ch(geo); (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker; root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1); (TGeoOverlap *) 0x55618132f820; root [9] overlap->Print(); = Overlap : overlap ovlp=3.51789; - first volume: plate at position:; matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0; 0.959245 0.282576 0.000000 Tx = 75.401418; -0.282576 0.959245 0.000000 Ty = 214.140485; 0.000000 0.000000 1.000000 Tz = 25.354000; - second volume: plate at position:; matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0; 0.964608 0.263688 0.000000 Tx = 71.182515; -0.263688 0.964608 0.000000 Ty = 215.579615; 0.000000 0.000000 1.000000 Tz = 25.354000; ```. ### Setup; This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional context; This issue originates in a DD4hep geometry of a detector at the Electron-Ion Collider, but we have been able to narrow it down to this minimal example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:4197,Deployability,install,install,4197,"eady----------------; (TGeoManager *) 0x556180ad1d50; root [1] geo->CheckOverlaps(); Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1; warning: Failed to call `P020_REveGeoPainter()` to execute the macro.; Add this function or rename the macro. Falling back to `.L`.; Check overlaps: [==========] 3 [100.00 %] 00:00 ; Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(); === Overlaps for Default ===; = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823; root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(); (TGeoVolume *) 0x556181070960; root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(); (TGeoVolume *) 0x556181070960; root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(); (TGeoMatrix *) 0x5561811a2390; root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(); (TGeoMatrix *) 0x5561811b19c0; root [7] TGeoChecker ch(geo); (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker; root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1); (TGeoOverlap *) 0x55618132f820; root [9] overlap->Print(); = Overlap : overlap ovlp=3.51789; - first volume: plate at position:; matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0; 0.959245 0.282576 0.000000 Tx = 75.401418; -0.282576 0.959245 0.000000 Ty = 214.140485; 0.000000 0.000000 1.000000 Tz = 25.354000; - second volume: plate at position:; matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0; 0.964608 0.263688 0.000000 Tx = 71.182515; -0.263688 0.964608 0.000000 Ty = 215.579615; 0.000000 0.000000 1.000000 Tz = 25.354000; ```. ### Setup; This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional context; This issue originates in a DD4hep geometry of a detector at the Electron-Ion Collider, but we have been able to narrow it down to this minimal example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:2220,Performance,cache,cache,2220,"lap->Print(); overlap->Draw(); ```; which produces:; ```console; 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l ; root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material; Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2; Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; (TGeoManager *) 0x556180ad1d50; root [1] geo->CheckOverlaps(); Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1; warning: Failed to call `P020_REveGeoPainter()` to execute the macro.; Add this function or rename the macro. Falling back to `.L`.; Check overlaps: [==========] 3 [100.00 %] 00:00 ; Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(); === Overlaps for Default ===; = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823; root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(); (TGeoVolume *) 0x556181070960; root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:1296,Safety,detect,detectors,1296,"lapping, yet for which ROOT reports an overlap. (This is similar to #11781, but this time there is no explanation due to incorrect default units.). ### Expected behavior; There should be no overlap reported. Drawing the overlap (last line in reproduce commands below) shows the two tessellated objects without overlap:; ![image](https://user-images.githubusercontent.com/4656391/204112181-59b9798d-ca48-4426-9ab8-734e11f895d0.png). ### To Reproduce; ```console; auto* geo = TGeoManager::Import(""overlap_issue.gdml""); geo->CheckOverlaps(); geo->PrintOverlaps(); auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(); auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(); auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(); auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(); TGeoChecker ch(geo); overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1); overlap->Print(); overlap->Draw(); ```; which produces:; ```console; 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l ; root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material; Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:4355,Safety,detect,detector,4355,"eady----------------; (TGeoManager *) 0x556180ad1d50; root [1] geo->CheckOverlaps(); Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1; warning: Failed to call `P020_REveGeoPainter()` to execute the macro.; Add this function or rename the macro. Falling back to `.L`.; Check overlaps: [==========] 3 [100.00 %] 00:00 ; Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(); === Overlaps for Default ===; = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823; root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(); (TGeoVolume *) 0x556181070960; root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(); (TGeoVolume *) 0x556181070960; root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(); (TGeoMatrix *) 0x5561811a2390; root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(); (TGeoMatrix *) 0x5561811b19c0; root [7] TGeoChecker ch(geo); (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker; root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1); (TGeoOverlap *) 0x55618132f820; root [9] overlap->Print(); = Overlap : overlap ovlp=3.51789; - first volume: plate at position:; matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0; 0.959245 0.282576 0.000000 Tx = 75.401418; -0.282576 0.959245 0.000000 Ty = 214.140485; 0.000000 0.000000 1.000000 Tz = 25.354000; - second volume: plate at position:; matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0; 0.964608 0.263688 0.000000 Tx = 71.182515; -0.263688 0.964608 0.000000 Ty = 215.579615; 0.000000 0.000000 1.000000 Tz = 25.354000; ```. ### Setup; This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional context; This issue originates in a DD4hep geometry of a detector at the Electron-Ion Collider, but we have been able to narrow it down to this minimal example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:178,Usability,simpl,simple,178,"- [x] Checked for duplicates. ### Describe the bug; Attached ([overlap_issue.gdml.gz](https://github.com/root-project/root/files/10097172/overlap_issue.gdml.gz)) is a relatively simple GDML file (6844 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. (This is similar to #11781, but this time there is no explanation due to incorrect default units.). ### Expected behavior; There should be no overlap reported. Drawing the overlap (last line in reproduce commands below) shows the two tessellated objects without overlap:; ![image](https://user-images.githubusercontent.com/4656391/204112181-59b9798d-ca48-4426-9ab8-734e11f895d0.png). ### To Reproduce; ```console; auto* geo = TGeoManager::Import(""overlap_issue.gdml""); geo->CheckOverlaps(); geo->PrintOverlaps(); auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(); auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(); auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(); auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(); TGeoChecker ch(geo); overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1); overlap->Print(); overlap->Draw(); ```; which produces:; ```console; 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l ; root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material; Warning in <TGeoManager::CheckGeometry>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:3519,Usability,simpl,simple,3519,"Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; (TGeoManager *) 0x556180ad1d50; root [1] geo->CheckOverlaps(); Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1; warning: Failed to call `P020_REveGeoPainter()` to execute the macro.; Add this function or rename the macro. Falling back to `.L`.; Check overlaps: [==========] 3 [100.00 %] 00:00 ; Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(); === Overlaps for Default ===; = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823; root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(); (TGeoVolume *) 0x556181070960; root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(); (TGeoVolume *) 0x556181070960; root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(); (TGeoMatrix *) 0x5561811a2390; root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(); (TGeoMatrix *) 0x5561811b19c0; root [7] TGeoChecker ch(geo); (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker; root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1); (TGeoOverlap *) 0x55618132f820; root [9] overlap->Print(); = Overlap : overlap ovlp=3.51789; - first volume: plate at position:; matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0; 0.959245 0.282576 0.000000 Tx = 75.401418; -0.282576 0.959245 0.000000 Ty = 214.140485; 0.000000 0.000000 1.000000 Tz = 25.354000; - second volume: plate at position:; matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0; 0.964608 0.263688 0.000000 Tx = 71.182515; -0.263688 0.964608 0.000000 Ty = 215.579615; 0.000000 0.000000 1.000000 Tz = 25.354000; ```. ### Setup; This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/pull/11785:441,Integrability,message,message,441,"It is possible to set ranges for a `RooCategory`, suggesting that this; is a possible way to select only a subset of channels in a simultaneous; fit. However, this was not working so far, and this commit implements; that. This commit implements that feature for both the old test statistic; classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the; observables but for the categories only, the message that is printed; when your observables don't define the range is demoted from a warning; to an info message. The debug message that was printed when channels are not selected also; got removed, because it had some overhead from `sumEntries`, the; debugging prints are rarely used, and the message is not true anymore; because chanels might also be skipped now becauese the are not selected; in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`; command argument for fitTo can be used to select specific components; from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:549,Integrability,message,message,549,"It is possible to set ranges for a `RooCategory`, suggesting that this; is a possible way to select only a subset of channels in a simultaneous; fit. However, this was not working so far, and this commit implements; that. This commit implements that feature for both the old test statistic; classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the; observables but for the categories only, the message that is printed; when your observables don't define the range is demoted from a warning; to an info message. The debug message that was printed when channels are not selected also; got removed, because it had some overhead from `sumEntries`, the; debugging prints are rarely used, and the message is not true anymore; because chanels might also be skipped now becauese the are not selected; in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`; command argument for fitTo can be used to select specific components; from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:568,Integrability,message,message,568,"It is possible to set ranges for a `RooCategory`, suggesting that this; is a possible way to select only a subset of channels in a simultaneous; fit. However, this was not working so far, and this commit implements; that. This commit implements that feature for both the old test statistic; classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the; observables but for the categories only, the message that is printed; when your observables don't define the range is demoted from a warning; to an info message. The debug message that was printed when channels are not selected also; got removed, because it had some overhead from `sumEntries`, the; debugging prints are rarely used, and the message is not true anymore; because chanels might also be skipped now becauese the are not selected; in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`; command argument for fitTo can be used to select specific components; from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:738,Integrability,message,message,738,"It is possible to set ranges for a `RooCategory`, suggesting that this; is a possible way to select only a subset of channels in a simultaneous; fit. However, this was not working so far, and this commit implements; that. This commit implements that feature for both the old test statistic; classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the; observables but for the categories only, the message that is printed; when your observables don't define the range is demoted from a warning; to an info message. The debug message that was printed when channels are not selected also; got removed, because it had some overhead from `sumEntries`, the; debugging prints are rarely used, and the message is not true anymore; because chanels might also be skipped now becauese the are not selected; in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`; command argument for fitTo can be used to select specific components; from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:275,Testability,test,test,275,"It is possible to set ranges for a `RooCategory`, suggesting that this; is a possible way to select only a subset of channels in a simultaneous; fit. However, this was not working so far, and this commit implements; that. This commit implements that feature for both the old test statistic; classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the; observables but for the categories only, the message that is printed; when your observables don't define the range is demoted from a warning; to an info message. The debug message that was printed when channels are not selected also; got removed, because it had some overhead from `sumEntries`, the; debugging prints are rarely used, and the message is not true anymore; because chanels might also be skipped now becauese the are not selected; in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`; command argument for fitTo can be used to select specific components; from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:880,Testability,test,test,880,"It is possible to set ranges for a `RooCategory`, suggesting that this; is a possible way to select only a subset of channels in a simultaneous; fit. However, this was not working so far, and this commit implements; that. This commit implements that feature for both the old test statistic; classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the; observables but for the categories only, the message that is printed; when your observables don't define the range is demoted from a warning; to an info message. The debug message that was printed when channels are not selected also; got removed, because it had some overhead from `sumEntries`, the; debugging prints are rarely used, and the message is not true anymore; because chanels might also be skipped now becauese the are not selected; in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`; command argument for fitTo can be used to select specific components; from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/issues/11786:778,Testability,test,testing,778,"### Explain what you would like to see improved; I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```; Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""); ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```; Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""); ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup; 1. ROOT version: 6.26/00; 2. Operating system: CentOS 7; 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11787:152,Availability,error,error,152,"ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue?. **Versions and configuration**; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.19). **Steps to reproduce**; 1. open x64 native tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1277,Availability,Error,Error,1277,"e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue?. **Versions and configuration**; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.19). **Steps to reproduce**; 1. open x64 native tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1436,Availability,error,error,1436,"ch. Could you please help look at this issue?. **Versions and configuration**; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.19). **Steps to reproduce**; 1. open x64 native tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]; 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.target",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1620,Availability,down,download,1620,"tacenter; VS: Visual Studio 2019(16.11.19). **Steps to reproduce**; 1. open x64 native tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]; 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:2493,Availability,error,error,2493,".rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]; 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]; 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]; 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:2990,Availability,error,error,2990,".rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]; 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]; 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]; 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]; 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3478,Availability,error,error,3478,"ot\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]; 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]; 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]; 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]; 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d83",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3984,Availability,error,error,3984,"\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]; 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]; 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]; 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]; 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4459,Availability,error,error,4459,"'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]; 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]; 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]; 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]; 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4953,Availability,error,error,4953,"m build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]; 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]; 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]; 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]; 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5460,Availability,error,error,5460,"MakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]; 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]; 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]; 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]; 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5977,Availability,error,error,5977,"4d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]; 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]; 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]; 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]; 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6452,Availability,error,error,6452,"ild_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]; 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]; 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]; 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]; 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6954,Availability,error,error,6954," 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]; 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]; 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]; 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]; 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:7476,Availability,error,error,7476,"29aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]; 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]; 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]; 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]; 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): er",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8037,Availability,error,error,8037,"F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]; 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]; 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]; 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]; 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8535,Availability,error,error,8535,"ulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]; 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]; 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]; 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]; 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9041,Availability,error,error,9041,"akeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]; 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]; 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]; 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]; 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9559,Availability,error,error,9559,"039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]; 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]; 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]; 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]; 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10067,Availability,error,error,10067,"89f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]; 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]; 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]; 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]; 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10539,Availability,error,error,10539," 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]; 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]; 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]; 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]; 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11041,Availability,error,error,11041,"d for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]; 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]; 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]; 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]; 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11552,Availability,error,error,11552,"s\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]; 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]; 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]; 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]; 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12058,Availability,error,error,12058,"9cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]; 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]; 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]; 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]; 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12560,Availability,error,error,12560,"MakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]; 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]; 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]; 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]; 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b82",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13053,Availability,error,error,13053,"build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]; 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]; 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]; 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]; 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13525,Availability,error,error,13525,"stom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]; 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]; 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]; 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]; 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14044,Availability,error,error,14044,"oot\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]; 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]; 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]; 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]; 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14540,Availability,error,error,14540,"4d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]; 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]; 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]; 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]; 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15049,Availability,error,error,15049,"iles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]; 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]; 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]; 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]; 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15572,Availability,error,error,15572,"3a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]; 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]; 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]; 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]; 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16075,Availability,error,error,16075,"039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]; 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]; 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]; 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]; 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16569,Availability,error,error,16569,"m64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]; 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]; 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]; 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]; 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17072,Availability,error,error,17072,"d_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]; 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]; 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]; 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]; 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefb",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17556,Availability,error,error,17556,"root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]; 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]; 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]; 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]; 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18049,Availability,error,error,18049," for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]; 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]; 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]; 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]; 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18537,Availability,error,error,18537,"for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]; 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]; 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]; 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]; 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19017,Availability,error,error,19017," Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]; 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]; 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]; 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]; 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFile",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19490,Availability,error,error,19490," MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]; 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]; 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]; 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]; 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19999,Availability,error,error,19999,"or 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]; 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]; 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]; 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]; 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20490,Availability,error,error,20490,"4ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]; 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]; 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]; 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]; 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20982,Availability,error,error,20982,"oot\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]; 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]; 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]; 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]; 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21505,Availability,error,error,21505,"iles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]; 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]; 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]; 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21979,Availability,error,error,21979,"4ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]; 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]; 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_libdevice_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_math_forward_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_runtime_wrapper.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__stddef_max_align_t.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__wmmintrin_aes.h.rule;F:\root\build_arm64ec\CMakeFil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24022,Availability,error,error,24022,"mintrin_pclmul.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\adxintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\altivec.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\ammintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm64intr.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_acle.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ...; 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]; 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]; 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24521,Availability,error,error,24521,"7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ...; 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]; 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]; 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]; 	Line 9722: 187>C:\Program Files (x86)\Micro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25162,Availability,error,error,25162,"49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]; 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]; 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]; 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]; 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25665,Availability,error,error,25665,".rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]; 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]; 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]; 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]; 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26217,Availability,error,error,26217,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]; 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]; 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]; 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]; ```; **Error log:**; [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26690,Availability,error,error,26690,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]; 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]; 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]; 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]; ```; **Error log:**; [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27040,Availability,Error,Error,27040,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]; 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]; 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]; 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]; ```; **Error log:**; [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:544,Deployability,configurat,configuration,544,"ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue?. **Versions and configuration**; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.19). **Steps to reproduce**; 1. open x64 native tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1130,Deployability,Release,Release,1130,"41,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue?. **Versions and configuration**; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.19). **Steps to reproduce**; 1. open x64 native tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1222,Deployability,Configurat,Configuration,1222,"4d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue?. **Versions and configuration**; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.19). **Steps to reproduce**; 1. open x64 native tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1236,Deployability,Release,Release,1236,"4d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue?. **Versions and configuration**; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.19). **Steps to reproduce**; 1. open x64 native tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1704,Deployability,update,update,1704,"ive tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]; 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1786,Deployability,patch,patch,1786,"gram Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]; 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:2033,Deployability,install,install,2033,"H:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]; 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]; 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:544,Modifiability,config,configuration,544,"ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue?. **Versions and configuration**; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.19). **Steps to reproduce**; 1. open x64 native tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1222,Modifiability,Config,Configuration,1222,"4d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue?. **Versions and configuration**; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.19). **Steps to reproduce**; 1. open x64 native tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1867,Modifiability,config,configure,1867,""" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]; 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27046,Testability,log,log,27046,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]; 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]; 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]; 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]; ```; **Error log:**; [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27074,Testability,log,log,27074,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]; 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]; 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]; 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]; ```; **Error log:**; [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27150,Testability,log,log,27150,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]; 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]; 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]; 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]; ```; **Error log:**; [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/pull/11788:342,Deployability,update,updated,342,"Fixes #11784. # This Pull request:; Fixes a bug in overlap checking. ## Changes or fixes:; Tessellated shapes cannot be used for overlap checking, because they do not provide navigation functionality. This PR skips checks when one of the two shapes potentially overlapping is a tesselation. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11784",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11788
https://github.com/root-project/root/pull/11788:312,Testability,test,tested,312,"Fixes #11784. # This Pull request:; Fixes a bug in overlap checking. ## Changes or fixes:; Tessellated shapes cannot be used for overlap checking, because they do not provide navigation functionality. This PR skips checks when one of the two shapes potentially overlapping is a tesselation. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11784",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11788
https://github.com/root-project/root/pull/11789:703,Availability,error,error,703,"The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:; Fixes an unintended behavior. ## Changes or fixes:; The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:179,Deployability,patch,patch,179,"The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:; Fixes an unintended behavior. ## Changes or fixes:; The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:761,Deployability,update,updated,761,"The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:; Fixes an unintended behavior. ## Changes or fixes:; The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:731,Testability,test,tested,731,"The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:; Fixes an unintended behavior. ## Changes or fixes:; The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11790:240,Deployability,update,updated,240,"This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11790:210,Testability,test,tested,210,"This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11790:352,Testability,test,test,352,"This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11791:609,Availability,avail,available,609,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:1208,Deployability,update,updated,1208,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:733,Integrability,interface,interface,733,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:802,Modifiability,Config,Config,802,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:885,Modifiability,variab,variable,885,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:970,Modifiability,Config,Config,970,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:453,Testability,log,log,453,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:638,Testability,log,log,638,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:677,Testability,Test,Tests,677,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:760,Testability,log,logging,760,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:938,Testability,log,logged,938,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:1135,Testability,Test,TestStatistics,1135,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:1178,Testability,test,tested,1178,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11793:197,Integrability,depend,depend,197,"Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:39,Safety,avoid,avoid,39,"Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:90,Testability,test,test,90,"Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:191,Testability,test,tests,191,"Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11794:176,Performance,race condition,race condition,176,"As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62; > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:423,Performance,race condition,race condition,423,"As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62; > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:516,Performance,perform,performance,516,"As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62; > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:794,Performance,perform,performance,794,"As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62; > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:318,Security,hash,hash,318,"As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62; > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/issues/11797:1790,Availability,error,error,1790,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:812,Deployability,configurat,configuration,812,"- [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manuall",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1265,Deployability,install,installed,1265,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1295,Deployability,configurat,configuration,1295,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:110,Integrability,depend,dependency,110,"- [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manuall",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:254,Integrability,depend,dependency,254,"- [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manuall",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:366,Integrability,depend,depends,366,"- [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manuall",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:692,Integrability,depend,dependency,692,"- [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manuall",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:974,Integrability,depend,depends,974,"- [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manuall",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:812,Modifiability,config,configuration,812,"- [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manuall",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1295,Modifiability,config,configuration,1295,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:347,Usability,clear,clearly,347,"- [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manuall",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1666,Usability,simpl,simple,1666,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/pull/11798:344,Usability,simpl,simple,344,"The weak pointer was used to track whether the node that Report was hanging from went out of scope, but since a while the ownership model of nodes in the computation graph (child owns parent) guarantees that as long as the ReportHelper (and the corresponding action node) is around, the node it hangs from will be around as well.; We can use a simple raw pointer instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11798
https://github.com/root-project/root/pull/11801:711,Deployability,update,updated,711,"In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:; Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:; The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR addresses #11781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:681,Testability,test,tested,681,"In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:; Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:; The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR addresses #11781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11802:185,Deployability,update,updated,185,# This Pull request:. ## Changes or fixes:; #11627 still had minor compile warnings from wrong printf formatting. This PR fixes that. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11802
https://github.com/root-project/root/pull/11802:155,Testability,test,tested,155,# This Pull request:. ## Changes or fixes:; #11627 still had minor compile warnings from wrong printf formatting. This PR fixes that. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11802
https://github.com/root-project/root/pull/11804:76,Testability,test,test,76,"The `Constrain()` and `GlobalObservables()` arguments were wrong in a; unit test in `testLikelihoodGradientJob`: a global observable was added; as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and; `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11804:85,Testability,test,testLikelihoodGradientJob,85,"The `Constrain()` and `GlobalObservables()` arguments were wrong in a; unit test in `testLikelihoodGradientJob`: a global observable was added; as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and; `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/issues/11806:568,Security,access,accessing,568,"### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp; auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:; TVector2 const vec = func_that_returns_TVector2();; auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);; assert(y == b);; ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:472,Testability,assert,assert,472,"### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp; auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:; TVector2 const vec = func_that_returns_TVector2();; auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);; assert(y == b);; ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:489,Testability,assert,assert,489,"### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp; auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:; TVector2 const vec = func_that_returns_TVector2();; auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);; assert(y == b);; ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/pull/11807:349,Testability,test,tests,349,"It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:420,Testability,test,test,420,"It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:492,Testability,test,tests,492,"It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11808:362,Availability,error,errors,362,"Hi `root-project/root`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull req",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:1042,Availability,error,errors,1042,":. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On ever",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:1625,Availability,error,errors,1625,"t you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:3141,Availability,error,errors,3141,"h and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be remo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:3479,Availability,error,error,3479,"ompute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:3714,Availability,error,errors,3714,"s of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:135,Deployability,integrat,integrated,135,"Hi `root-project/root`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull req",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:408,Deployability,integrat,integrated,408,"Hi `root-project/root`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull req",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:1380,Deployability,configurat,configuration,1380,"nning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs wer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:2316,Deployability,update,updated,2316,"ull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deploy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:3224,Deployability,upgrade,upgrade,3224,"ime — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:3311,Deployability,deploy,deployed,3311,"ime — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:3401,Deployability,release,released,3401,"or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:4021,Deployability,integrat,integration,4021,"rity-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:4397,Deployability,integrat,integrated,4397,"d on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please join the discussion [here](https://github.com/orgs/community/discussions/29534) in the official GitHub community!. #### I have another question / how do I get in touch?; Please join the discussion [here](https://github.com/orgs/community/discussions/29534) to ask further questions and send us suggestions!. </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:2757,Energy Efficiency,power,powers,2757," ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:2815,Energy Efficiency,power,powers,2815," ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:135,Integrability,integrat,integrated,135,"Hi `root-project/root`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull req",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:408,Integrability,integrat,integrated,408,"Hi `root-project/root`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull req",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:4021,Integrability,integrat,integration,4021,"rity-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:4397,Integrability,integrat,integrated,4397,"d on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please join the discussion [here](https://github.com/orgs/community/discussions/29534) in the official GitHub community!. #### I have another question / how do I get in touch?; Please join the discussion [here](https://github.com/orgs/community/discussions/29534) to ask further questions and send us suggestions!. </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:1380,Modifiability,config,configuration,1380,"nning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs wer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:1632,Modifiability,config,configuring-code-scanning,1632,"t you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:3148,Modifiability,config,configuring-code-scanning,3148,"h and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be remo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:282,Security,secur,security,282,"Hi `root-project/root`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull req",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:962,Security,secur,security,962,":. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On ever",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:1545,Security,secur,security,1545,"t you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:2029,Security,secur,security,2029,"-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:2216,Security,Secur,Security,2216,"sted it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:2324,Security,secur,security,2324,"ull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deploy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:2994,Security,secur,security-and-quality,2994," — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-revie",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:3061,Security,secur,security,3061,"h and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be remo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:3634,Security,secur,security,3634,"s of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:1163,Testability,test,tested,1163,":. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On ever",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11808:2591,Usability,learn,learn-github-actions,2591,"/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11808
https://github.com/root-project/root/pull/11809:79,Security,access,access,79,- Modify the examples: no need to return the TCanvas.; - Make an index to ease access to the various sections.; - Resize and reformat the pictures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11809
https://github.com/root-project/root/pull/11810:71,Modifiability,config,configure,71,"1. Support unix sockets in `THttpServer`, fix civetweb warning; 2. Let configure unix socket for webgui widgets; 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket.; In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable.; This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes!. `rootssh.sh` also creates listener which get informed when new window is started on remote session; and automatically popup web browser using `xdg-open $url` command. Typical session should look like:; ```; [localhost] rootssh.sh user@remotehost; [remotehost] root --web=server -e ""new Browser""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:386,Modifiability,variab,variable,386,"1. Support unix sockets in `THttpServer`, fix civetweb warning; 2. Let configure unix socket for webgui widgets; 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket.; In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable.; This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes!. `rootssh.sh` also creates listener which get informed when new window is started on remote session; and automatically popup web browser using `xdg-open $url` command. Typical session should look like:; ```; [localhost] rootssh.sh user@remotehost; [remotehost] root --web=server -e ""new Browser""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:496,Security,secur,security,496,"1. Support unix sockets in `THttpServer`, fix civetweb warning; 2. Let configure unix socket for webgui widgets; 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket.; In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable.; This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes!. `rootssh.sh` also creates listener which get informed when new window is started on remote session; and automatically popup web browser using `xdg-open $url` command. Typical session should look like:; ```; [localhost] rootssh.sh user@remotehost; [remotehost] root --web=server -e ""new Browser""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11812:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11812
https://github.com/root-project/root/pull/11812:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11812
https://github.com/root-project/root/pull/11813:398,Testability,test,test,398,"In the non-uniform binning case, the `RooHist` that you get from; plotting a RooDataHist doesn't contain the number of events, but the; number of events normalized by the bin width. This means that `RooHist::getFitRangeNEvt()` was returning wrong; results. To fix this, a new data member is added to the `RooHist`, which; tracks the original number of events in each bin before the scaling. A unit test that covers this is also implemented. Closes JIRA ticket ROOT-9649:; https://sft.its.cern.ch/jira/browse/ROOT-9649. A second commit in this PR also does some code modernization of the `RooHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11813
https://github.com/root-project/root/issues/11814:453,Deployability,integrat,integrator,453,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:580,Deployability,integrat,integrator,580,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:744,Deployability,integrat,integrator,744,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:871,Deployability,integrat,integrator,871,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:998,Deployability,integrat,integrator,998,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:453,Integrability,integrat,integrator,453,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:580,Integrability,integrat,integrator,580,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:744,Integrability,integrat,integrator,744,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:871,Integrability,integrat,integrator,871,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:998,Integrability,integrat,integrator,998,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:73,Performance,perform,performance,73,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1153,Performance,perform,performance,1153,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1245,Performance,perform,performance,1245,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:332,Testability,log,log,332,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1213,Usability,simpl,simpler,1213,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11819:69,Availability,Error,Error,69,"Hi,; i try to t install root, i get the cMakelists.text issue; CMake Error: The source directory ""/home/said/Desktop/product/root"" does not appear to contain CMakeLists.txt. how i can fix this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11819
https://github.com/root-project/root/issues/11819:16,Deployability,install,install,16,"Hi,; i try to t install root, i get the cMakelists.text issue; CMake Error: The source directory ""/home/said/Desktop/product/root"" does not appear to contain CMakeLists.txt. how i can fix this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11819
https://github.com/root-project/root/pull/11821:89,Energy Efficiency,reduce,reduce,89,"Make CutRange() also considers the variables not selected by electVars(); in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not; specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional; observables not used by the fit model, but you still want to use these; variables to select a subset of the data via the `Range()` command; argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:; https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:35,Modifiability,variab,variables,35,"Make CutRange() also considers the variables not selected by electVars(); in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not; specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional; observables not used by the fit model, but you still want to use these; variables to select a subset of the data via the `Range()` command; argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:; https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:142,Modifiability,variab,variables,142,"Make CutRange() also considers the variables not selected by electVars(); in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not; specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional; observables not used by the fit model, but you still want to use these; variables to select a subset of the data via the `Range()` command; argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:; https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:380,Modifiability,variab,variables,380,"Make CutRange() also considers the variables not selected by electVars(); in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not; specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional; observables not used by the fit model, but you still want to use these; variables to select a subset of the data via the `Range()` command; argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:; https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:221,Usability,clear,clearly,221,"Make CutRange() also considers the variables not selected by electVars(); in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not; specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional; observables not used by the fit model, but you still want to use these; variables to select a subset of the data via the `Range()` command; argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:; https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11822:995,Deployability,Update,Update,995,"1. Rename `rootssh.sh` -> `rootssh`; 2. Let run commands on remote node with `rootssh` like; ```; [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 3. Let specify local port and browser kind for `rootssh`:; ```; [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 4. Provide usage printout when `rootssh` called without arguments; ; 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created.; 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used.; 7. Provide plugin to be able caret `TWebCanvas` via plugin manager.; 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures.; 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:1002,Deployability,release,release,1002,"1. Rename `rootssh.sh` -> `rootssh`; 2. Let run commands on remote node with `rootssh` like; ```; [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 3. Let specify local port and browser kind for `rootssh`:; ```; [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 4. Provide usage printout when `rootssh` called without arguments; ; 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created.; 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used.; 7. Provide plugin to be able caret `TWebCanvas` via plugin manager.; 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures.; 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:701,Integrability,depend,dependency,701,"1. Rename `rootssh.sh` -> `rootssh`; 2. Let run commands on remote node with `rootssh` like; ```; [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 3. Let specify local port and browser kind for `rootssh`:; ```; [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 4. Provide usage printout when `rootssh` called without arguments; ; 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created.; 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used.; 7. Provide plugin to be able caret `TWebCanvas` via plugin manager.; 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures.; 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:568,Modifiability,plugin,plugin,568,"1. Rename `rootssh.sh` -> `rootssh`; 2. Let run commands on remote node with `rootssh` like; ```; [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 3. Let specify local port and browser kind for `rootssh`:; ```; [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 4. Provide usage printout when `rootssh` called without arguments; ; 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created.; 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used.; 7. Provide plugin to be able caret `TWebCanvas` via plugin manager.; 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures.; 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:605,Modifiability,config,configured,605,"1. Rename `rootssh.sh` -> `rootssh`; 2. Let run commands on remote node with `rootssh` like; ```; [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 3. Let specify local port and browser kind for `rootssh`:; ```; [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 4. Provide usage printout when `rootssh` called without arguments; ; 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created.; 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used.; 7. Provide plugin to be able caret `TWebCanvas` via plugin manager.; 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures.; 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:826,Modifiability,plugin,plugin,826,"1. Rename `rootssh.sh` -> `rootssh`; 2. Let run commands on remote node with `rootssh` like; ```; [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 3. Let specify local port and browser kind for `rootssh`:; ```; [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 4. Provide usage printout when `rootssh` called without arguments; ; 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created.; 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used.; 7. Provide plugin to be able caret `TWebCanvas` via plugin manager.; 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures.; 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:867,Modifiability,plugin,plugin,867,"1. Rename `rootssh.sh` -> `rootssh`; 2. Let run commands on remote node with `rootssh` like; ```; [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 3. Let specify local port and browser kind for `rootssh`:; ```; [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 4. Provide usage printout when `rootssh` called without arguments; ; 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created.; 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used.; 7. Provide plugin to be able caret `TWebCanvas` via plugin manager.; 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures.; 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:916,Modifiability,plugin,plugins,916,"1. Rename `rootssh.sh` -> `rootssh`; 2. Let run commands on remote node with `rootssh` like; ```; [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 3. Let specify local port and browser kind for `rootssh`:; ```; [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 4. Provide usage printout when `rootssh` called without arguments; ; 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created.; 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used.; 7. Provide plugin to be able caret `TWebCanvas` via plugin manager.; 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures.; 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/issues/11823:367,Availability,error,error,367,"Opening and closing a TFile in python3.11 occasionally fails. Fresh build of ROOT version 27.01 with newest python (3.11) on macOS. Sometimes the MWE below will fail, and sometimes it will succeed:. ```; if __name__ == ""__main__"": ; with TFile(""file1.root"", ""recreate"") as outfile: ; h = ROOT.TH1F() ; outfile.Close(); ```. about half the time it gives the following error output:. `; *** Break *** segmentation violation; [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) (no debug info); [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:730,Integrability,Wrap,WrapperCall,730,"Opening and closing a TFile in python3.11 occasionally fails. Fresh build of ROOT version 27.01 with newest python (3.11) on macOS. Sometimes the MWE below will fail, and sometimes it will succeed:. ```; if __name__ == ""__main__"": ; with TFile(""file1.root"", ""recreate"") as outfile: ; h = ROOT.TH1F() ; outfile.Close(); ```. about half the time it gives the following error output:. `; *** Break *** segmentation violation; [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) (no debug info); [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:898,Integrability,Wrap,WrapperCall,898,"Opening and closing a TFile in python3.11 occasionally fails. Fresh build of ROOT version 27.01 with newest python (3.11) on macOS. Sometimes the MWE below will fail, and sometimes it will succeed:. ```; if __name__ == ""__main__"": ; with TFile(""file1.root"", ""recreate"") as outfile: ; h = ROOT.TH1F() ; outfile.Close(); ```. about half the time it gives the following error output:. `; *** Break *** segmentation violation; [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) (no debug info); [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3837,Testability,test,testWriting,3837,"amework/Versions/3.11/Python] slot_tp_init (no debug info); [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info); [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info); [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info); [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info); [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info); [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info); [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info); [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info); [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info); [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info); [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info); [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info); [/usr/lib/dyld] start (no debug info); Traceback (most recent call last):; File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>; with TFile(""file1.root"", ""recreate"") as outfile:; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py"", line 87, in _TFileConstructor; self._OriginalConstructor(*args); TypeError: none of the 2 overloaded methods succeeded. Full details:; TFile::TFile() =>; TypeError: takes at most 0 arguments (2 given); TFile::TFile(const char* fname, const char* option = """", const char* ftitle = """", int compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault) =>; SegmentationViolation: segfault in C++; program state was reset; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/pull/11825:824,Testability,benchmark,benchmark,824,"Implements the class `RNTupleImporter` from the ntuple utility package. The class reads a ROOT tree and writes the data out as RNTuple. Most branch types map directly to RNTuple field types, with some exceptions:. - C strings are converted to `std::string`; - C fixed-size arrays are converted to `std::array`; - Leaf lists are converted to untyped records; - Count leaf arrays are converted to untyped collections with generic names (`_collection0`, `_collection1`, etc.). In a follow up PR, RNTuple should receive functionality for ""stored projections"". That will allow storing virtual fields whose data comes from physical columns. In this way, the data from the untyped collections can be presented with their original TTree names (e.g., `njets`, `jet_pt`, etc.). At this point, the importer can process all the RNTuple benchmark files (LHCb ntuples, H1, ATLAS OpenData, CMS nanoAOD). The work is partially based on a [GSoC project](https://hepsoftwarefoundation.org/gsoc/blogs/2022/blog_ROOT_ZifengLuo.html). Todo for this PR:. - [x] Improve code comments; - [x] Add tutorial. In a follow-up PR, importing for leaf count arrays should be improved with vector writes. Use of bulk I/O in general should speed up the import.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11825
https://github.com/root-project/root/pull/11826:139,Deployability,integrat,integration,139,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:354,Deployability,integrat,integrated,354,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:398,Deployability,integrat,integration,398,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:560,Deployability,integrat,integration,560,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:625,Deployability,integrat,integrated,625,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:691,Deployability,integrat,integration,691,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:749,Deployability,integrat,integrated,749,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:922,Deployability,integrat,integrated,922,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:992,Deployability,integrat,integration,992,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:1023,Deployability,integrat,integration,1023,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:1265,Deployability,update,updated,1265,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:48,Energy Efficiency,Adapt,AdaptiveIntegratorMultiDim,48,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:139,Integrability,integrat,integration,139,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:354,Integrability,integrat,integrated,354,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:398,Integrability,integrat,integration,398,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:560,Integrability,integrat,integration,560,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:625,Integrability,integrat,integrated,625,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:691,Integrability,integrat,integration,691,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:749,Integrability,integrat,integrated,749,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:922,Integrability,integrat,integrated,922,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:992,Integrability,integrat,integration,992,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:1023,Integrability,integrat,integration,1023,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:48,Modifiability,Adapt,AdaptiveIntegratorMultiDim,48,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:1235,Testability,test,tested,1235,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11828:2404,Deployability,Update,Update,2404,"). However, _Size_ stored only the size of the payload.; - Use a `std::variant<...>` to represent type-specific information stored in the locator.; - Separate serialization of non-simple locators (i.e. those having the `T` bit set to 1). Serialization for those types is provided by `{Serialize,Deserialize}LocatorPayloadXxx()`.; - For non-disk locators (i.e., those with `T == 1`), add a _Reserved_ 8bit field that can be used by concrete backends to store 8bits of additional information per locator.; To accommodate that, _Size_ has been reduced to 16 bits, i.e. the maximum size of a locator is now 64kB, which is still enough.; - Explicitly store the locator type in a dedicated member in the `RNTupleLocator` structure. This makes it possible to have different type values even if the payload structure is identical, i.e. use the same alternative in the `fPosition` variant.; **NOTE:** given the reorder of members, `sizeof(RNTupleLocator)` is preserved before and after the changes in this branch, at least in x86_64 and libstdc++.; - Reassign the first representable value for the _Type_ (0x01) for URI string locators. This makes the entire contiguous range [0x02, 0x7f] assignable for concrete backends.; **NOTE:** given that URI locators were so far unused in produced files, the change should not break existing ntuples.; - Provide a new locator payload format: `RNTupleLocatorObject64`. This structure groups common data for object stores using 64bit location information.; In some cases, for locators referencing pages, this might not contain the full location of the content. In particular, concrete backends may use this information in conjunction with the cluster and column ID.; - Assign the _Type_ `0x02` for DAOS (layout of payload is given by `RNTupleLocatorObject64`).; - Update `specifications.md` accordingly. Follow-up PRs: use `kTypeDAOS` locators in RPageStorageDaos. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11758.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11828
https://github.com/root-project/root/pull/11828:2556,Deployability,update,updated,2556,"). However, _Size_ stored only the size of the payload.; - Use a `std::variant<...>` to represent type-specific information stored in the locator.; - Separate serialization of non-simple locators (i.e. those having the `T` bit set to 1). Serialization for those types is provided by `{Serialize,Deserialize}LocatorPayloadXxx()`.; - For non-disk locators (i.e., those with `T == 1`), add a _Reserved_ 8bit field that can be used by concrete backends to store 8bits of additional information per locator.; To accommodate that, _Size_ has been reduced to 16 bits, i.e. the maximum size of a locator is now 64kB, which is still enough.; - Explicitly store the locator type in a dedicated member in the `RNTupleLocator` structure. This makes it possible to have different type values even if the payload structure is identical, i.e. use the same alternative in the `fPosition` variant.; **NOTE:** given the reorder of members, `sizeof(RNTupleLocator)` is preserved before and after the changes in this branch, at least in x86_64 and libstdc++.; - Reassign the first representable value for the _Type_ (0x01) for URI string locators. This makes the entire contiguous range [0x02, 0x7f] assignable for concrete backends.; **NOTE:** given that URI locators were so far unused in produced files, the change should not break existing ntuples.; - Provide a new locator payload format: `RNTupleLocatorObject64`. This structure groups common data for object stores using 64bit location information.; In some cases, for locators referencing pages, this might not contain the full location of the content. In particular, concrete backends may use this information in conjunction with the cluster and column ID.; - Assign the _Type_ `0x02` for DAOS (layout of payload is given by `RNTupleLocatorObject64`).; - Update `specifications.md` accordingly. Follow-up PRs: use `kTypeDAOS` locators in RPageStorageDaos. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11758.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11828
https://github.com/root-project/root/pull/11828:1151,Energy Efficiency,reduce,reduced,1151,"o the binary specification (see list of individual changes below). ## Changes or fixes:; - **FIX** discrepancy between non-disk locators specification and implementation: [specifications.md, Section ""Locators and Envelope Links""](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links) stated that on non-disk locators, the 24LSb of _Size_ specify the size of the locator (and not only the size of the payload). However, _Size_ stored only the size of the payload.; - Use a `std::variant<...>` to represent type-specific information stored in the locator.; - Separate serialization of non-simple locators (i.e. those having the `T` bit set to 1). Serialization for those types is provided by `{Serialize,Deserialize}LocatorPayloadXxx()`.; - For non-disk locators (i.e., those with `T == 1`), add a _Reserved_ 8bit field that can be used by concrete backends to store 8bits of additional information per locator.; To accommodate that, _Size_ has been reduced to 16 bits, i.e. the maximum size of a locator is now 64kB, which is still enough.; - Explicitly store the locator type in a dedicated member in the `RNTupleLocator` structure. This makes it possible to have different type values even if the payload structure is identical, i.e. use the same alternative in the `fPosition` variant.; **NOTE:** given the reorder of members, `sizeof(RNTupleLocator)` is preserved before and after the changes in this branch, at least in x86_64 and libstdc++.; - Reassign the first representable value for the _Type_ (0x01) for URI string locators. This makes the entire contiguous range [0x02, 0x7f] assignable for concrete backends.; **NOTE:** given that URI locators were so far unused in produced files, the change should not break existing ntuples.; - Provide a new locator payload format: `RNTupleLocatorObject64`. This structure groups common data for object stores using 64bit location information.; In some cases, for locators referencing pages,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11828
https://github.com/root-project/root/pull/11828:2526,Testability,test,tested,2526,"). However, _Size_ stored only the size of the payload.; - Use a `std::variant<...>` to represent type-specific information stored in the locator.; - Separate serialization of non-simple locators (i.e. those having the `T` bit set to 1). Serialization for those types is provided by `{Serialize,Deserialize}LocatorPayloadXxx()`.; - For non-disk locators (i.e., those with `T == 1`), add a _Reserved_ 8bit field that can be used by concrete backends to store 8bits of additional information per locator.; To accommodate that, _Size_ has been reduced to 16 bits, i.e. the maximum size of a locator is now 64kB, which is still enough.; - Explicitly store the locator type in a dedicated member in the `RNTupleLocator` structure. This makes it possible to have different type values even if the payload structure is identical, i.e. use the same alternative in the `fPosition` variant.; **NOTE:** given the reorder of members, `sizeof(RNTupleLocator)` is preserved before and after the changes in this branch, at least in x86_64 and libstdc++.; - Reassign the first representable value for the _Type_ (0x01) for URI string locators. This makes the entire contiguous range [0x02, 0x7f] assignable for concrete backends.; **NOTE:** given that URI locators were so far unused in produced files, the change should not break existing ntuples.; - Provide a new locator payload format: `RNTupleLocatorObject64`. This structure groups common data for object stores using 64bit location information.; In some cases, for locators referencing pages, this might not contain the full location of the content. In particular, concrete backends may use this information in conjunction with the cluster and column ID.; - Assign the _Type_ `0x02` for DAOS (layout of payload is given by `RNTupleLocatorObject64`).; - Update `specifications.md` accordingly. Follow-up PRs: use `kTypeDAOS` locators in RPageStorageDaos. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11758.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11828
https://github.com/root-project/root/pull/11828:790,Usability,simpl,simple,790,"This pull request improves the internal in-memory layout of `RNTupleLocator`, its serialization/deserialization, and introduces some changes to the binary specification (see list of individual changes below). ## Changes or fixes:; - **FIX** discrepancy between non-disk locators specification and implementation: [specifications.md, Section ""Locators and Envelope Links""](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links) stated that on non-disk locators, the 24LSb of _Size_ specify the size of the locator (and not only the size of the payload). However, _Size_ stored only the size of the payload.; - Use a `std::variant<...>` to represent type-specific information stored in the locator.; - Separate serialization of non-simple locators (i.e. those having the `T` bit set to 1). Serialization for those types is provided by `{Serialize,Deserialize}LocatorPayloadXxx()`.; - For non-disk locators (i.e., those with `T == 1`), add a _Reserved_ 8bit field that can be used by concrete backends to store 8bits of additional information per locator.; To accommodate that, _Size_ has been reduced to 16 bits, i.e. the maximum size of a locator is now 64kB, which is still enough.; - Explicitly store the locator type in a dedicated member in the `RNTupleLocator` structure. This makes it possible to have different type values even if the payload structure is identical, i.e. use the same alternative in the `fPosition` variant.; **NOTE:** given the reorder of members, `sizeof(RNTupleLocator)` is preserved before and after the changes in this branch, at least in x86_64 and libstdc++.; - Reassign the first representable value for the _Type_ (0x01) for URI string locators. This makes the entire contiguous range [0x02, 0x7f] assignable for concrete backends.; **NOTE:** given that URI locators were so far unused in produced files, the change should not break existing ntuples.; - Provide a new locator payload format: `RNTupleLocatorOb",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11828
https://github.com/root-project/root/pull/11830:156,Testability,test,test,156,Commit e97f74d67e changed the tutorials `fit/graph2dfit.C` and `hist/hstack.C` to not return a pointer to `TCanvas`. Remove the special case and expect the test to exit code 0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11830
https://github.com/root-project/root/pull/11832:303,Deployability,patch,patch,303,"RunGraphs makes a summary log entry for the jitting time of all computation graphs that are being run concurrently. Generally this is ok, but in the case users specifically requested a log level of kDebug+10 or higher this would accidentally silence the logging of what code is being jitted.; With this patch, if log level is kDebug+10 or higher, RunGraphs avoids silencing inner logs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11832
https://github.com/root-project/root/pull/11832:102,Performance,concurren,concurrently,102,"RunGraphs makes a summary log entry for the jitting time of all computation graphs that are being run concurrently. Generally this is ok, but in the case users specifically requested a log level of kDebug+10 or higher this would accidentally silence the logging of what code is being jitted.; With this patch, if log level is kDebug+10 or higher, RunGraphs avoids silencing inner logs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11832
https://github.com/root-project/root/pull/11832:357,Safety,avoid,avoids,357,"RunGraphs makes a summary log entry for the jitting time of all computation graphs that are being run concurrently. Generally this is ok, but in the case users specifically requested a log level of kDebug+10 or higher this would accidentally silence the logging of what code is being jitted.; With this patch, if log level is kDebug+10 or higher, RunGraphs avoids silencing inner logs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11832
https://github.com/root-project/root/pull/11832:26,Testability,log,log,26,"RunGraphs makes a summary log entry for the jitting time of all computation graphs that are being run concurrently. Generally this is ok, but in the case users specifically requested a log level of kDebug+10 or higher this would accidentally silence the logging of what code is being jitted.; With this patch, if log level is kDebug+10 or higher, RunGraphs avoids silencing inner logs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11832
https://github.com/root-project/root/pull/11832:185,Testability,log,log,185,"RunGraphs makes a summary log entry for the jitting time of all computation graphs that are being run concurrently. Generally this is ok, but in the case users specifically requested a log level of kDebug+10 or higher this would accidentally silence the logging of what code is being jitted.; With this patch, if log level is kDebug+10 or higher, RunGraphs avoids silencing inner logs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11832
https://github.com/root-project/root/pull/11832:254,Testability,log,logging,254,"RunGraphs makes a summary log entry for the jitting time of all computation graphs that are being run concurrently. Generally this is ok, but in the case users specifically requested a log level of kDebug+10 or higher this would accidentally silence the logging of what code is being jitted.; With this patch, if log level is kDebug+10 or higher, RunGraphs avoids silencing inner logs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11832
https://github.com/root-project/root/pull/11832:313,Testability,log,log,313,"RunGraphs makes a summary log entry for the jitting time of all computation graphs that are being run concurrently. Generally this is ok, but in the case users specifically requested a log level of kDebug+10 or higher this would accidentally silence the logging of what code is being jitted.; With this patch, if log level is kDebug+10 or higher, RunGraphs avoids silencing inner logs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11832
https://github.com/root-project/root/pull/11832:380,Testability,log,logs,380,"RunGraphs makes a summary log entry for the jitting time of all computation graphs that are being run concurrently. Generally this is ok, but in the case users specifically requested a log level of kDebug+10 or higher this would accidentally silence the logging of what code is being jitted.; With this patch, if log level is kDebug+10 or higher, RunGraphs avoids silencing inner logs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11832
https://github.com/root-project/root/pull/11834:274,Deployability,configurat,configurations,274,"This is done because the manual memory management in the `rs101_limitexample` tutorial deleted the object in the wrong way. For example, it deleted the workspace first, and then the `lrinterval` object that pointed to the PDF stored in the workspace. This caused crashes in configurations that are sentitive to the resulting dangling pointers, like in the new BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11834
https://github.com/root-project/root/pull/11834:274,Modifiability,config,configurations,274,"This is done because the manual memory management in the `rs101_limitexample` tutorial deleted the object in the wrong way. For example, it deleted the workspace first, and then the `lrinterval` object that pointed to the PDF stored in the workspace. This caused crashes in configurations that are sentitive to the resulting dangling pointers, like in the new BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11834
https://github.com/root-project/root/pull/11836:743,Availability,avail,available,743,"ROOT batch mode is now automatically web batch mode. Means no web browser starting, no web server running. There is the only exception - when on Linux `DISPLAY` variable not set, ROOT will set batch mode (`fBatchMode = kTRUE`); but `fWebDisplayBatch = kFALSE`. In this case all web widgets remain fully normal and will start interactive. Any call to `gROOT->SetBatch(kTRUE)` also disables interactivity for web widgets. All web widgets (RBrowser, TWebCanvas, RWebWindow in general) will not start browser when `gROOT->IsWebDisplayBatch()` is true. Should fix problems with running many graphics-related tutorials. Small fix in TGX11. ; While TRint.cxx directly calls `gVirtualX->SetKeyAutoRepeat(kTRUE)`, prevent crashing; when display is not available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11836
https://github.com/root-project/root/pull/11836:161,Modifiability,variab,variable,161,"ROOT batch mode is now automatically web batch mode. Means no web browser starting, no web server running. There is the only exception - when on Linux `DISPLAY` variable not set, ROOT will set batch mode (`fBatchMode = kTRUE`); but `fWebDisplayBatch = kFALSE`. In this case all web widgets remain fully normal and will start interactive. Any call to `gROOT->SetBatch(kTRUE)` also disables interactivity for web widgets. All web widgets (RBrowser, TWebCanvas, RWebWindow in general) will not start browser when `gROOT->IsWebDisplayBatch()` is true. Should fix problems with running many graphics-related tutorials. Small fix in TGX11. ; While TRint.cxx directly calls `gVirtualX->SetKeyAutoRepeat(kTRUE)`, prevent crashing; when display is not available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11836
https://github.com/root-project/root/issues/11837:124,Availability,Error,Error,124,"As seen in https://root-forum.cern.ch/t/draw-short-integers-as-numbers-not-characters/52530/10,; in that case we get:; ```; Error in <TTreeReaderArrayBase::CreateContentProxy()>: The branch Jet_idx contains data of type char. It cannot be accessed by a TTreeReaderArray<signed char>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11837
https://github.com/root-project/root/issues/11837:239,Security,access,accessed,239,"As seen in https://root-forum.cern.ch/t/draw-short-integers-as-numbers-not-characters/52530/10,; in that case we get:; ```; Error in <TTreeReaderArrayBase::CreateContentProxy()>: The branch Jet_idx contains data of type char. It cannot be accessed by a TTreeReaderArray<signed char>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11837
https://github.com/root-project/root/pull/11840:347,Deployability,update,updated,347,# This Pull request:. ## Changes or fixes:. nWorkers setting was actually not being set when the RooMinimizer was called with the nWorkers setting enabled in `RooMinimizer::Config`. Now that is fixed by passing the `RooMinimizer::Config::nWorkers` setting to the multiprocessing internal config. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11840
https://github.com/root-project/root/pull/11840:173,Modifiability,Config,Config,173,# This Pull request:. ## Changes or fixes:. nWorkers setting was actually not being set when the RooMinimizer was called with the nWorkers setting enabled in `RooMinimizer::Config`. Now that is fixed by passing the `RooMinimizer::Config::nWorkers` setting to the multiprocessing internal config. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11840
https://github.com/root-project/root/pull/11840:230,Modifiability,Config,Config,230,# This Pull request:. ## Changes or fixes:. nWorkers setting was actually not being set when the RooMinimizer was called with the nWorkers setting enabled in `RooMinimizer::Config`. Now that is fixed by passing the `RooMinimizer::Config::nWorkers` setting to the multiprocessing internal config. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11840
https://github.com/root-project/root/pull/11840:288,Modifiability,config,config,288,# This Pull request:. ## Changes or fixes:. nWorkers setting was actually not being set when the RooMinimizer was called with the nWorkers setting enabled in `RooMinimizer::Config`. Now that is fixed by passing the `RooMinimizer::Config::nWorkers` setting to the multiprocessing internal config. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11840
https://github.com/root-project/root/pull/11840:317,Testability,test,tested,317,# This Pull request:. ## Changes or fixes:. nWorkers setting was actually not being set when the RooMinimizer was called with the nWorkers setting enabled in `RooMinimizer::Config`. Now that is fixed by passing the `RooMinimizer::Config::nWorkers` setting to the multiprocessing internal config. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11840
https://github.com/root-project/root/pull/11841:123,Modifiability,variab,variables,123,"This is a followup to commit 8679898a. In that commit, the RooPlot was changed to not create an internal clone of the plot variables anymore. However, in rare cases like for the RooUnitTest, it is necessary that the RooPlot owns the plot plot variables to avoid dangling pointers when the RooPlot lives longer than the original plot variables. To support these cases, a new member function; `RooPlot::createInternalPlotVarClone()` is introduced. It can be used to convert the RooPlot to a plot that owns a clone of the plot variable at any point in time of the RooPlot lifetime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11841
https://github.com/root-project/root/pull/11841:243,Modifiability,variab,variables,243,"This is a followup to commit 8679898a. In that commit, the RooPlot was changed to not create an internal clone of the plot variables anymore. However, in rare cases like for the RooUnitTest, it is necessary that the RooPlot owns the plot plot variables to avoid dangling pointers when the RooPlot lives longer than the original plot variables. To support these cases, a new member function; `RooPlot::createInternalPlotVarClone()` is introduced. It can be used to convert the RooPlot to a plot that owns a clone of the plot variable at any point in time of the RooPlot lifetime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11841
https://github.com/root-project/root/pull/11841:333,Modifiability,variab,variables,333,"This is a followup to commit 8679898a. In that commit, the RooPlot was changed to not create an internal clone of the plot variables anymore. However, in rare cases like for the RooUnitTest, it is necessary that the RooPlot owns the plot plot variables to avoid dangling pointers when the RooPlot lives longer than the original plot variables. To support these cases, a new member function; `RooPlot::createInternalPlotVarClone()` is introduced. It can be used to convert the RooPlot to a plot that owns a clone of the plot variable at any point in time of the RooPlot lifetime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11841
https://github.com/root-project/root/pull/11841:524,Modifiability,variab,variable,524,"This is a followup to commit 8679898a. In that commit, the RooPlot was changed to not create an internal clone of the plot variables anymore. However, in rare cases like for the RooUnitTest, it is necessary that the RooPlot owns the plot plot variables to avoid dangling pointers when the RooPlot lives longer than the original plot variables. To support these cases, a new member function; `RooPlot::createInternalPlotVarClone()` is introduced. It can be used to convert the RooPlot to a plot that owns a clone of the plot variable at any point in time of the RooPlot lifetime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11841
https://github.com/root-project/root/pull/11841:256,Safety,avoid,avoid,256,"This is a followup to commit 8679898a. In that commit, the RooPlot was changed to not create an internal clone of the plot variables anymore. However, in rare cases like for the RooUnitTest, it is necessary that the RooPlot owns the plot plot variables to avoid dangling pointers when the RooPlot lives longer than the original plot variables. To support these cases, a new member function; `RooPlot::createInternalPlotVarClone()` is introduced. It can be used to convert the RooPlot to a plot that owns a clone of the plot variable at any point in time of the RooPlot lifetime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11841
https://github.com/root-project/root/pull/11843:0,Deployability,UPDATE,UPDATE,0,"UPDATE:; The RDataFrame created in each task can now be modified with the correct entry range of the task via an internal function. The internal representation in case of an RDataFrame with no data source has been modified to store a pair of integers indicating the range, instead of only one integer. This is only for internal purposes, the public API is unchanged. See https://github.com/root-project/roottest/pull/923 for test changes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11843
https://github.com/root-project/root/pull/11843:425,Testability,test,test,425,"UPDATE:; The RDataFrame created in each task can now be modified with the correct entry range of the task via an internal function. The internal representation in case of an RDataFrame with no data source has been modified to store a pair of integers indicating the range, instead of only one integer. This is only for internal purposes, the public API is unchanged. See https://github.com/root-project/roottest/pull/923 for test changes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11843
https://github.com/root-project/root/pull/11844:970,Deployability,update,updated,970,"# This Pull request:. Simplified/fixed how VDT would be used. Did this by making `ROOTVecOps`, `RooBatchCompute` and `TMVA` link against `VDT::VDT` in all circumstances (as long as VDT is being used). Regardless of whether VDT is used as a ""builtin"" or as an ""external"". At the same time made `ROOTVecOps` and `RooBatchCompute` depend on `VDT::VDT` publicly, as they actually do. ## Changes or fixes:. - Made sure that an imported `VDT::VDT` library would be set up when `builtin_vdt` is being used.; - Simplified how `ROOTVecOps`, `RooBatchCompute` and `TMVA` would just (publicly) link against `VDT::VDT` if either `vdt` or `builtin_vdt` is `TRUE`. Instead of the spaghetti of options that it had before.; - Made sure that all of those targets would explicitly depend on the `VDT` target if `builtin_vdt` is set to `TRUE`.; - Made sure that VDT would be searched for when calling `find_package(ROOT)` in client code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11797.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:328,Integrability,depend,depend,328,"# This Pull request:. Simplified/fixed how VDT would be used. Did this by making `ROOTVecOps`, `RooBatchCompute` and `TMVA` link against `VDT::VDT` in all circumstances (as long as VDT is being used). Regardless of whether VDT is used as a ""builtin"" or as an ""external"". At the same time made `ROOTVecOps` and `RooBatchCompute` depend on `VDT::VDT` publicly, as they actually do. ## Changes or fixes:. - Made sure that an imported `VDT::VDT` library would be set up when `builtin_vdt` is being used.; - Simplified how `ROOTVecOps`, `RooBatchCompute` and `TMVA` would just (publicly) link against `VDT::VDT` if either `vdt` or `builtin_vdt` is `TRUE`. Instead of the spaghetti of options that it had before.; - Made sure that all of those targets would explicitly depend on the `VDT` target if `builtin_vdt` is set to `TRUE`.; - Made sure that VDT would be searched for when calling `find_package(ROOT)` in client code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11797.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:763,Integrability,depend,depend,763,"# This Pull request:. Simplified/fixed how VDT would be used. Did this by making `ROOTVecOps`, `RooBatchCompute` and `TMVA` link against `VDT::VDT` in all circumstances (as long as VDT is being used). Regardless of whether VDT is used as a ""builtin"" or as an ""external"". At the same time made `ROOTVecOps` and `RooBatchCompute` depend on `VDT::VDT` publicly, as they actually do. ## Changes or fixes:. - Made sure that an imported `VDT::VDT` library would be set up when `builtin_vdt` is being used.; - Simplified how `ROOTVecOps`, `RooBatchCompute` and `TMVA` would just (publicly) link against `VDT::VDT` if either `vdt` or `builtin_vdt` is `TRUE`. Instead of the spaghetti of options that it had before.; - Made sure that all of those targets would explicitly depend on the `VDT` target if `builtin_vdt` is set to `TRUE`.; - Made sure that VDT would be searched for when calling `find_package(ROOT)` in client code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11797.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:940,Testability,test,tested,940,"# This Pull request:. Simplified/fixed how VDT would be used. Did this by making `ROOTVecOps`, `RooBatchCompute` and `TMVA` link against `VDT::VDT` in all circumstances (as long as VDT is being used). Regardless of whether VDT is used as a ""builtin"" or as an ""external"". At the same time made `ROOTVecOps` and `RooBatchCompute` depend on `VDT::VDT` publicly, as they actually do. ## Changes or fixes:. - Made sure that an imported `VDT::VDT` library would be set up when `builtin_vdt` is being used.; - Simplified how `ROOTVecOps`, `RooBatchCompute` and `TMVA` would just (publicly) link against `VDT::VDT` if either `vdt` or `builtin_vdt` is `TRUE`. Instead of the spaghetti of options that it had before.; - Made sure that all of those targets would explicitly depend on the `VDT` target if `builtin_vdt` is set to `TRUE`.; - Made sure that VDT would be searched for when calling `find_package(ROOT)` in client code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11797.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:22,Usability,Simpl,Simplified,22,"# This Pull request:. Simplified/fixed how VDT would be used. Did this by making `ROOTVecOps`, `RooBatchCompute` and `TMVA` link against `VDT::VDT` in all circumstances (as long as VDT is being used). Regardless of whether VDT is used as a ""builtin"" or as an ""external"". At the same time made `ROOTVecOps` and `RooBatchCompute` depend on `VDT::VDT` publicly, as they actually do. ## Changes or fixes:. - Made sure that an imported `VDT::VDT` library would be set up when `builtin_vdt` is being used.; - Simplified how `ROOTVecOps`, `RooBatchCompute` and `TMVA` would just (publicly) link against `VDT::VDT` if either `vdt` or `builtin_vdt` is `TRUE`. Instead of the spaghetti of options that it had before.; - Made sure that all of those targets would explicitly depend on the `VDT` target if `builtin_vdt` is set to `TRUE`.; - Made sure that VDT would be searched for when calling `find_package(ROOT)` in client code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11797.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:503,Usability,Simpl,Simplified,503,"# This Pull request:. Simplified/fixed how VDT would be used. Did this by making `ROOTVecOps`, `RooBatchCompute` and `TMVA` link against `VDT::VDT` in all circumstances (as long as VDT is being used). Regardless of whether VDT is used as a ""builtin"" or as an ""external"". At the same time made `ROOTVecOps` and `RooBatchCompute` depend on `VDT::VDT` publicly, as they actually do. ## Changes or fixes:. - Made sure that an imported `VDT::VDT` library would be set up when `builtin_vdt` is being used.; - Simplified how `ROOTVecOps`, `RooBatchCompute` and `TMVA` would just (publicly) link against `VDT::VDT` if either `vdt` or `builtin_vdt` is `TRUE`. Instead of the spaghetti of options that it had before.; - Made sure that all of those targets would explicitly depend on the `VDT` target if `builtin_vdt` is set to `TRUE`.; - Made sure that VDT would be searched for when calling `find_package(ROOT)` in client code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11797.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11845:384,Deployability,update,updated,384,"We always wanted to use ""old"", and my prior attept to convince CMake to use ""DOWNLOAD_EXTRACT_TIMESTAMP false"" did not work. So instead of passing this to each ExternalProject_Add, just switch the global policy to OLD. (cherry picked from commit 51302692c483755d4d70a87dc39706bab72b1bf7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11845
https://github.com/root-project/root/pull/11845:354,Testability,test,tested,354,"We always wanted to use ""old"", and my prior attept to convince CMake to use ""DOWNLOAD_EXTRACT_TIMESTAMP false"" did not work. So instead of passing this to each ExternalProject_Add, just switch the global policy to OLD. (cherry picked from commit 51302692c483755d4d70a87dc39706bab72b1bf7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11845
https://github.com/root-project/root/pull/11846:314,Deployability,update,updated,314,"We always wanted to use ""old"", and my prior attept to convince CMake to use ""DOWNLOAD_EXTRACT_TIMESTAMP false"" did not work. So instead of passing this to each ExternalProject_Add, just switch the global policy to OLD. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11846
https://github.com/root-project/root/pull/11846:284,Testability,test,tested,284,"We always wanted to use ""old"", and my prior attept to convince CMake to use ""DOWNLOAD_EXTRACT_TIMESTAMP false"" did not work. So instead of passing this to each ExternalProject_Add, just switch the global policy to OLD. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11846
https://github.com/root-project/root/pull/11848:105,Deployability,patch,patches,105,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to master to v6-26-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10873; 2. https://github.com/root-project/root/pull/11455; Only the third commit that fixes a problem with the `RooBinSamplingPdf`, backporting the full multi-range fit implementation is way too dangerous. Related to https://github.com/root-project/root/issues/11534.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11848
https://github.com/root-project/root/pull/11849:703,Safety,avoid,avoiding,703,"This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:; ```; if (fPrimitives); fPrimitives->Clear();; if (fView) {; if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;; fView = nullptr;; }; if (fFrame) {; if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;; fFrame = nullptr;; }; ```; is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash. Backport of https://github.com/root-project/root/pull/11763",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11849
https://github.com/root-project/root/pull/11849:139,Usability,Clear,Clear,139,"This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:; ```; if (fPrimitives); fPrimitives->Clear();; if (fView) {; if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;; fView = nullptr;; }; if (fFrame) {; if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;; fFrame = nullptr;; }; ```; is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash. Backport of https://github.com/root-project/root/pull/11763",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11849
https://github.com/root-project/root/pull/11849:777,Usability,Clear,Clear,777,"This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:; ```; if (fPrimitives); fPrimitives->Clear();; if (fView) {; if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;; fView = nullptr;; }; if (fFrame) {; if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;; fFrame = nullptr;; }; ```; is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash. Backport of https://github.com/root-project/root/pull/11763",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11849
https://github.com/root-project/root/pull/11851:207,Testability,test,tested,207,"This is an attempt to add xRooFit to ROOT in a way that means the files from xRooFit do not need to be modified but the built code will not interfere with users who build different xRooFit on top of ROOT. I tested this locally and it compiled on my mac with the upstream master, and I was able to compile xRooFit locally on top of it and a few quick tests suggested both were usable. Creating the PR to see what the CI makes of it ....",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11851
https://github.com/root-project/root/pull/11851:350,Testability,test,tests,350,"This is an attempt to add xRooFit to ROOT in a way that means the files from xRooFit do not need to be modified but the built code will not interfere with users who build different xRooFit on top of ROOT. I tested this locally and it compiled on my mac with the upstream master, and I was able to compile xRooFit locally on top of it and a few quick tests suggested both were usable. Creating the PR to see what the CI makes of it ....",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11851
https://github.com/root-project/root/pull/11851:376,Usability,usab,usable,376,"This is an attempt to add xRooFit to ROOT in a way that means the files from xRooFit do not need to be modified but the built code will not interfere with users who build different xRooFit on top of ROOT. I tested this locally and it compiled on my mac with the upstream master, and I was able to compile xRooFit locally on top of it and a few quick tests suggested both were usable. Creating the PR to see what the CI makes of it ....",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11851
https://github.com/root-project/root/issues/11852:258,Availability,Error,Error,258,"[static-lib-pcm-not-found.tar.gz](https://github.com/root-project/root/files/10179206/static-lib-pcm-not-found.tar.gz). With the attached file:; ```; mkdir static-pcm; cd static-pcm; tar xfz ../static-lib-pcm-not-found.tar.gz; ./build.sh; ```; we get:; ```; Error in <TCling::LoadPCM>: ROOT PCM /home/pcanal/root_working/test/2022-dict/bin/dict_rdict.pcm file does not exist; ```. This is because `TCling::Register` looks for the pcm in the directory in which the .o files was found at run-time. Usually it is found in a shared library. In this case we use a static library (and use the `TriggerDictionaryInitialization_modulename` function to load the dictionary) but, of course, the `pcm` file is in the `lib` directory and not along side the executable (i.e. the `bin` directory). We might want to add a fallback to look a bit further for the pcm files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11852
https://github.com/root-project/root/issues/11852:276,Performance,Load,LoadPCM,276,"[static-lib-pcm-not-found.tar.gz](https://github.com/root-project/root/files/10179206/static-lib-pcm-not-found.tar.gz). With the attached file:; ```; mkdir static-pcm; cd static-pcm; tar xfz ../static-lib-pcm-not-found.tar.gz; ./build.sh; ```; we get:; ```; Error in <TCling::LoadPCM>: ROOT PCM /home/pcanal/root_working/test/2022-dict/bin/dict_rdict.pcm file does not exist; ```. This is because `TCling::Register` looks for the pcm in the directory in which the .o files was found at run-time. Usually it is found in a shared library. In this case we use a static library (and use the `TriggerDictionaryInitialization_modulename` function to load the dictionary) but, of course, the `pcm` file is in the `lib` directory and not along side the executable (i.e. the `bin` directory). We might want to add a fallback to look a bit further for the pcm files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11852
https://github.com/root-project/root/issues/11852:644,Performance,load,load,644,"[static-lib-pcm-not-found.tar.gz](https://github.com/root-project/root/files/10179206/static-lib-pcm-not-found.tar.gz). With the attached file:; ```; mkdir static-pcm; cd static-pcm; tar xfz ../static-lib-pcm-not-found.tar.gz; ./build.sh; ```; we get:; ```; Error in <TCling::LoadPCM>: ROOT PCM /home/pcanal/root_working/test/2022-dict/bin/dict_rdict.pcm file does not exist; ```. This is because `TCling::Register` looks for the pcm in the directory in which the .o files was found at run-time. Usually it is found in a shared library. In this case we use a static library (and use the `TriggerDictionaryInitialization_modulename` function to load the dictionary) but, of course, the `pcm` file is in the `lib` directory and not along side the executable (i.e. the `bin` directory). We might want to add a fallback to look a bit further for the pcm files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11852
https://github.com/root-project/root/issues/11852:321,Testability,test,test,321,"[static-lib-pcm-not-found.tar.gz](https://github.com/root-project/root/files/10179206/static-lib-pcm-not-found.tar.gz). With the attached file:; ```; mkdir static-pcm; cd static-pcm; tar xfz ../static-lib-pcm-not-found.tar.gz; ./build.sh; ```; we get:; ```; Error in <TCling::LoadPCM>: ROOT PCM /home/pcanal/root_working/test/2022-dict/bin/dict_rdict.pcm file does not exist; ```. This is because `TCling::Register` looks for the pcm in the directory in which the .o files was found at run-time. Usually it is found in a shared library. In this case we use a static library (and use the `TriggerDictionaryInitialization_modulename` function to load the dictionary) but, of course, the `pcm` file is in the `lib` directory and not along side the executable (i.e. the `bin` directory). We might want to add a fallback to look a bit further for the pcm files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11852
https://github.com/root-project/root/issues/11854:117,Availability,error,error,117,"In some cases with template instantiation from pyroot together with RDF code which should fail to compile with clear error messages leads instead to cryptic output. Even worse, execution continues and gives undefined results. Example. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.helper[ROOT.std.vector[""double""]](). d = ROOT.ROOT.RDataFrame(1000). print(""Define with helper""); d = d.Define(""fx"", helper, []); print(""done define""). res = d.Sum(""fx""). print(res.GetValue()); ```. ```cpp; template <typename T>; class helper {. public:. helper() {}. std::size_t operator() () {; const double res = 0.;; res = T{0, 0}.size();; return res;; }. };; ```. Note the assignment to ```const double``` which should fail to compile. output (centos stream 8, root 6.26/10); ```; declare ret True; creating helper; Define with helper; IncrementalExecutor::executeFunction: symbol '_ZN6helperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of helper<std::vector<double, std::allocator<double> > >::operator()(); Maybe you need to load the corresponding shared library?; done define; 9.408421539373414e+16; ```. (if the spurious const is removed then instead one gets the correct output of 2000 and no error message)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1347,Availability,error,error,1347,"In some cases with template instantiation from pyroot together with RDF code which should fail to compile with clear error messages leads instead to cryptic output. Even worse, execution continues and gives undefined results. Example. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.helper[ROOT.std.vector[""double""]](). d = ROOT.ROOT.RDataFrame(1000). print(""Define with helper""); d = d.Define(""fx"", helper, []); print(""done define""). res = d.Sum(""fx""). print(res.GetValue()); ```. ```cpp; template <typename T>; class helper {. public:. helper() {}. std::size_t operator() () {; const double res = 0.;; res = T{0, 0}.size();; return res;; }. };; ```. Note the assignment to ```const double``` which should fail to compile. output (centos stream 8, root 6.26/10); ```; declare ret True; creating helper; Define with helper; IncrementalExecutor::executeFunction: symbol '_ZN6helperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of helper<std::vector<double, std::allocator<double> > >::operator()(); Maybe you need to load the corresponding shared library?; done define; 9.408421539373414e+16; ```. (if the spurious const is removed then instead one gets the correct output of 2000 and no error message)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:123,Integrability,message,messages,123,"In some cases with template instantiation from pyroot together with RDF code which should fail to compile with clear error messages leads instead to cryptic output. Even worse, execution continues and gives undefined results. Example. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.helper[ROOT.std.vector[""double""]](). d = ROOT.ROOT.RDataFrame(1000). print(""Define with helper""); d = d.Define(""fx"", helper, []); print(""done define""). res = d.Sum(""fx""). print(res.GetValue()); ```. ```cpp; template <typename T>; class helper {. public:. helper() {}. std::size_t operator() () {; const double res = 0.;; res = T{0, 0}.size();; return res;; }. };; ```. Note the assignment to ```const double``` which should fail to compile. output (centos stream 8, root 6.26/10); ```; declare ret True; creating helper; Define with helper; IncrementalExecutor::executeFunction: symbol '_ZN6helperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of helper<std::vector<double, std::allocator<double> > >::operator()(); Maybe you need to load the corresponding shared library?; done define; 9.408421539373414e+16; ```. (if the spurious const is removed then instead one gets the correct output of 2000 and no error message)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1353,Integrability,message,message,1353,"In some cases with template instantiation from pyroot together with RDF code which should fail to compile with clear error messages leads instead to cryptic output. Even worse, execution continues and gives undefined results. Example. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.helper[ROOT.std.vector[""double""]](). d = ROOT.ROOT.RDataFrame(1000). print(""Define with helper""); d = d.Define(""fx"", helper, []); print(""done define""). res = d.Sum(""fx""). print(res.GetValue()); ```. ```cpp; template <typename T>; class helper {. public:. helper() {}. std::size_t operator() () {; const double res = 0.;; res = T{0, 0}.size();; return res;; }. };; ```. Note the assignment to ```const double``` which should fail to compile. output (centos stream 8, root 6.26/10); ```; declare ret True; creating helper; Define with helper; IncrementalExecutor::executeFunction: symbol '_ZN6helperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of helper<std::vector<double, std::allocator<double> > >::operator()(); Maybe you need to load the corresponding shared library?; done define; 9.408421539373414e+16; ```. (if the spurious const is removed then instead one gets the correct output of 2000 and no error message)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1176,Performance,load,load,1176,"In some cases with template instantiation from pyroot together with RDF code which should fail to compile with clear error messages leads instead to cryptic output. Even worse, execution continues and gives undefined results. Example. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.helper[ROOT.std.vector[""double""]](). d = ROOT.ROOT.RDataFrame(1000). print(""Define with helper""); d = d.Define(""fx"", helper, []); print(""done define""). res = d.Sum(""fx""). print(res.GetValue()); ```. ```cpp; template <typename T>; class helper {. public:. helper() {}. std::size_t operator() () {; const double res = 0.;; res = T{0, 0}.size();; return res;; }. };; ```. Note the assignment to ```const double``` which should fail to compile. output (centos stream 8, root 6.26/10); ```; declare ret True; creating helper; Define with helper; IncrementalExecutor::executeFunction: symbol '_ZN6helperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of helper<std::vector<double, std::allocator<double> > >::operator()(); Maybe you need to load the corresponding shared library?; done define; 9.408421539373414e+16; ```. (if the spurious const is removed then instead one gets the correct output of 2000 and no error message)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:302,Testability,test,test,302,"In some cases with template instantiation from pyroot together with RDF code which should fail to compile with clear error messages leads instead to cryptic output. Even worse, execution continues and gives undefined results. Example. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.helper[ROOT.std.vector[""double""]](). d = ROOT.ROOT.RDataFrame(1000). print(""Define with helper""); d = d.Define(""fx"", helper, []); print(""done define""). res = d.Sum(""fx""). print(res.GetValue()); ```. ```cpp; template <typename T>; class helper {. public:. helper() {}. std::size_t operator() () {; const double res = 0.;; res = T{0, 0}.size();; return res;; }. };; ```. Note the assignment to ```const double``` which should fail to compile. output (centos stream 8, root 6.26/10); ```; declare ret True; creating helper; Define with helper; IncrementalExecutor::executeFunction: symbol '_ZN6helperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of helper<std::vector<double, std::allocator<double> > >::operator()(); Maybe you need to load the corresponding shared library?; done define; 9.408421539373414e+16; ```. (if the spurious const is removed then instead one gets the correct output of 2000 and no error message)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:111,Usability,clear,clear,111,"In some cases with template instantiation from pyroot together with RDF code which should fail to compile with clear error messages leads instead to cryptic output. Even worse, execution continues and gives undefined results. Example. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.helper[ROOT.std.vector[""double""]](). d = ROOT.ROOT.RDataFrame(1000). print(""Define with helper""); d = d.Define(""fx"", helper, []); print(""done define""). res = d.Sum(""fx""). print(res.GetValue()); ```. ```cpp; template <typename T>; class helper {. public:. helper() {}. std::size_t operator() () {; const double res = 0.;; res = T{0, 0}.size();; return res;; }. };; ```. Note the assignment to ```const double``` which should fail to compile. output (centos stream 8, root 6.26/10); ```; declare ret True; creating helper; Define with helper; IncrementalExecutor::executeFunction: symbol '_ZN6helperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of helper<std::vector<double, std::allocator<double> > >::operator()(); Maybe you need to load the corresponding shared library?; done define; 9.408421539373414e+16; ```. (if the spurious const is removed then instead one gets the correct output of 2000 and no error message)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11856:943,Availability,error,errors,943,"# 6.28.00. **GitHub issue** that we still want to resolve before the v6.28.00 release:. - [x] https://github.com/root-project/root/issues/11951; Issue is not closed yet because the solution we have is not perfect, but there is a way of doing it already in `v628`: with the `RooBinIntegrator`; - [x] https://github.com/root-project/root/issues/11814; - [x] https://github.com/root-project/root/issues/11954; - [x] https://github.com/root-project/root/issues/8984; Issue is not closed yet because the solution still needs to be validated to the user, but patch is already merged to `master` and `v628` branch. **Other items** that still need to be done without any associated GitHub issue:. - [x] New test statistics should consider the `Offset()` command in `RooAbsPdf::fitTo()`, @Zeff020; - [x] Write release notes for the change in the `KahanSum` class, @egpbos; - [x] If you run the `testInterface` unit test binary in `roofitcore`, you get errors printed out and there is one disabled test. Please take a look, @Zeff020. **Backports** that need to be made for the v6.28 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/11940; - [x] https://github.com/root-project/root/pull/11941; - [x] https://github.com/root-project/root/pull/10210; Except for the commit to RooStats, which is a fixup only relevant to a commit in master; - [x] https://github.com/root-project/root/pull/11953; Excluding the one technical commit about the `snapshot()` overload; - [x] https://github.com/root-project/root/pull/9539; Only the first four commits that are not about code modernization; - [x] https://github.com/root-project/root/pull/11969; - [x] https://github.com/root-project/root/pull/11962; - [x] https://github.com/root-project/root/pull/11970; - [x] https://github.com/root-project/root/pull/11966; - [x] https://github.com/root-project/root/pull/11984; - [x] https://github.com/root-project/root/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11856
https://github.com/root-project/root/issues/11856:78,Deployability,release,release,78,"# 6.28.00. **GitHub issue** that we still want to resolve before the v6.28.00 release:. - [x] https://github.com/root-project/root/issues/11951; Issue is not closed yet because the solution we have is not perfect, but there is a way of doing it already in `v628`: with the `RooBinIntegrator`; - [x] https://github.com/root-project/root/issues/11814; - [x] https://github.com/root-project/root/issues/11954; - [x] https://github.com/root-project/root/issues/8984; Issue is not closed yet because the solution still needs to be validated to the user, but patch is already merged to `master` and `v628` branch. **Other items** that still need to be done without any associated GitHub issue:. - [x] New test statistics should consider the `Offset()` command in `RooAbsPdf::fitTo()`, @Zeff020; - [x] Write release notes for the change in the `KahanSum` class, @egpbos; - [x] If you run the `testInterface` unit test binary in `roofitcore`, you get errors printed out and there is one disabled test. Please take a look, @Zeff020. **Backports** that need to be made for the v6.28 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/11940; - [x] https://github.com/root-project/root/pull/11941; - [x] https://github.com/root-project/root/pull/10210; Except for the commit to RooStats, which is a fixup only relevant to a commit in master; - [x] https://github.com/root-project/root/pull/11953; Excluding the one technical commit about the `snapshot()` overload; - [x] https://github.com/root-project/root/pull/9539; Only the first four commits that are not about code modernization; - [x] https://github.com/root-project/root/pull/11969; - [x] https://github.com/root-project/root/pull/11962; - [x] https://github.com/root-project/root/pull/11970; - [x] https://github.com/root-project/root/pull/11966; - [x] https://github.com/root-project/root/pull/11984; - [x] https://github.com/root-project/root/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11856
https://github.com/root-project/root/issues/11856:553,Deployability,patch,patch,553,"# 6.28.00. **GitHub issue** that we still want to resolve before the v6.28.00 release:. - [x] https://github.com/root-project/root/issues/11951; Issue is not closed yet because the solution we have is not perfect, but there is a way of doing it already in `v628`: with the `RooBinIntegrator`; - [x] https://github.com/root-project/root/issues/11814; - [x] https://github.com/root-project/root/issues/11954; - [x] https://github.com/root-project/root/issues/8984; Issue is not closed yet because the solution still needs to be validated to the user, but patch is already merged to `master` and `v628` branch. **Other items** that still need to be done without any associated GitHub issue:. - [x] New test statistics should consider the `Offset()` command in `RooAbsPdf::fitTo()`, @Zeff020; - [x] Write release notes for the change in the `KahanSum` class, @egpbos; - [x] If you run the `testInterface` unit test binary in `roofitcore`, you get errors printed out and there is one disabled test. Please take a look, @Zeff020. **Backports** that need to be made for the v6.28 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/11940; - [x] https://github.com/root-project/root/pull/11941; - [x] https://github.com/root-project/root/pull/10210; Except for the commit to RooStats, which is a fixup only relevant to a commit in master; - [x] https://github.com/root-project/root/pull/11953; Excluding the one technical commit about the `snapshot()` overload; - [x] https://github.com/root-project/root/pull/9539; Only the first four commits that are not about code modernization; - [x] https://github.com/root-project/root/pull/11969; - [x] https://github.com/root-project/root/pull/11962; - [x] https://github.com/root-project/root/pull/11970; - [x] https://github.com/root-project/root/pull/11966; - [x] https://github.com/root-project/root/pull/11984; - [x] https://github.com/root-project/root/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11856
https://github.com/root-project/root/issues/11856:801,Deployability,release,release,801,"# 6.28.00. **GitHub issue** that we still want to resolve before the v6.28.00 release:. - [x] https://github.com/root-project/root/issues/11951; Issue is not closed yet because the solution we have is not perfect, but there is a way of doing it already in `v628`: with the `RooBinIntegrator`; - [x] https://github.com/root-project/root/issues/11814; - [x] https://github.com/root-project/root/issues/11954; - [x] https://github.com/root-project/root/issues/8984; Issue is not closed yet because the solution still needs to be validated to the user, but patch is already merged to `master` and `v628` branch. **Other items** that still need to be done without any associated GitHub issue:. - [x] New test statistics should consider the `Offset()` command in `RooAbsPdf::fitTo()`, @Zeff020; - [x] Write release notes for the change in the `KahanSum` class, @egpbos; - [x] If you run the `testInterface` unit test binary in `roofitcore`, you get errors printed out and there is one disabled test. Please take a look, @Zeff020. **Backports** that need to be made for the v6.28 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/11940; - [x] https://github.com/root-project/root/pull/11941; - [x] https://github.com/root-project/root/pull/10210; Except for the commit to RooStats, which is a fixup only relevant to a commit in master; - [x] https://github.com/root-project/root/pull/11953; Excluding the one technical commit about the `snapshot()` overload; - [x] https://github.com/root-project/root/pull/9539; Only the first four commits that are not about code modernization; - [x] https://github.com/root-project/root/pull/11969; - [x] https://github.com/root-project/root/pull/11962; - [x] https://github.com/root-project/root/pull/11970; - [x] https://github.com/root-project/root/pull/11966; - [x] https://github.com/root-project/root/pull/11984; - [x] https://github.com/root-project/root/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11856
https://github.com/root-project/root/issues/11856:4096,Deployability,patch,patches,4096, be a bit too unsafe...; - [x] https://github.com/root-project/root/pull/12024; - [x] https://github.com/root-project/root/pull/12029; - [x] https://github.com/root-project/root/pull/12030; - [x] https://github.com/root-project/root/pull/12033; - [x] https://github.com/root-project/root/pull/12039; - [x] https://github.com/root-project/root/pull/12046; - [x] https://github.com/root-project/root/pull/12051; - [x] https://github.com/root-project/root/pull/12048; - [x] https://github.com/root-project/root/pull/12061; - [x] https://github.com/root-project/root/pull/12071; Only the first commit that is not a fixup to a recent typo is `master`; - [x] https://github.com/root-project/root/pull/12089; - [x] https://github.com/root-project/root/pull/12079; - [x] https://github.com/root-project/root/pull/12040; - [x] https://github.com/root-project/root/pull/12064; - [x] https://github.com/root-project/root/pull/12114; - [x] https://github.com/root-project/root/pull/12066; - [x] https://github.com/root-project/root/pull/12001; - [x] https://github.com/root-project/root/pull/12119; - [x] https://github.com/root-project/root/pull/12056; - [x] https://github.com/root-project/root/pull/12103; - [x] https://github.com/root-project/root/pull/12160; - [x] https://github.com/root-project/root/pull/12157; - [x] https://github.com/root-project/root/pull/12161; - [x] https://github.com/root-project/root/pull/12129. The backports were grouped in a few PRs to `v6-28-00-patches`:. 1. https://github.com/root-project/root/pull/11960; 2. https://github.com/root-project/root/pull/11979; 3. https://github.com/root-project/root/pull/11993; 4. https://github.com/root-project/root/pull/12014; 5. https://github.com/root-project/root/pull/12057; 6. https://github.com/root-project/root/pull/12083; 7. https://github.com/root-project/root/pull/12092; 8. https://github.com/root-project/root/pull/12115; 9. https://github.com/root-project/root/pull/12120; 10. https://github.com/root-project/root/pull/12169,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11856
https://github.com/root-project/root/issues/11856:2640,Safety,unsafe,unsafe,2640,"oot-project/root/pull/9539; Only the first four commits that are not about code modernization; - [x] https://github.com/root-project/root/pull/11969; - [x] https://github.com/root-project/root/pull/11962; - [x] https://github.com/root-project/root/pull/11970; - [x] https://github.com/root-project/root/pull/11966; - [x] https://github.com/root-project/root/pull/11984; - [x] https://github.com/root-project/root/pull/11986; - [x] https://github.com/root-project/root/pull/11841; - [x] https://github.com/root-project/root/pull/11985; - [x] https://github.com/root-project/root/pull/11988; - [x] https://github.com/root-project/root/pull/11995; - [x] https://github.com/root-project/root/pull/11999; - [x] https://github.com/root-project/root/pull/12000; - [x] https://github.com/root-project/root/pull/12010; - [x] https://github.com/root-project/root/pull/12011; - [x] https://github.com/root-project/root/pull/12017; - [x] https://github.com/root-project/root/pull/12022; All commits except for the last one for `RooAbsArg`, which might be a bit too unsafe...; - [x] https://github.com/root-project/root/pull/12024; - [x] https://github.com/root-project/root/pull/12029; - [x] https://github.com/root-project/root/pull/12030; - [x] https://github.com/root-project/root/pull/12033; - [x] https://github.com/root-project/root/pull/12039; - [x] https://github.com/root-project/root/pull/12046; - [x] https://github.com/root-project/root/pull/12051; - [x] https://github.com/root-project/root/pull/12048; - [x] https://github.com/root-project/root/pull/12061; - [x] https://github.com/root-project/root/pull/12071; Only the first commit that is not a fixup to a recent typo is `master`; - [x] https://github.com/root-project/root/pull/12089; - [x] https://github.com/root-project/root/pull/12079; - [x] https://github.com/root-project/root/pull/12040; - [x] https://github.com/root-project/root/pull/12064; - [x] https://github.com/root-project/root/pull/12114; - [x] https://github.com/root-project/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11856
https://github.com/root-project/root/issues/11856:526,Security,validat,validated,526,"# 6.28.00. **GitHub issue** that we still want to resolve before the v6.28.00 release:. - [x] https://github.com/root-project/root/issues/11951; Issue is not closed yet because the solution we have is not perfect, but there is a way of doing it already in `v628`: with the `RooBinIntegrator`; - [x] https://github.com/root-project/root/issues/11814; - [x] https://github.com/root-project/root/issues/11954; - [x] https://github.com/root-project/root/issues/8984; Issue is not closed yet because the solution still needs to be validated to the user, but patch is already merged to `master` and `v628` branch. **Other items** that still need to be done without any associated GitHub issue:. - [x] New test statistics should consider the `Offset()` command in `RooAbsPdf::fitTo()`, @Zeff020; - [x] Write release notes for the change in the `KahanSum` class, @egpbos; - [x] If you run the `testInterface` unit test binary in `roofitcore`, you get errors printed out and there is one disabled test. Please take a look, @Zeff020. **Backports** that need to be made for the v6.28 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/11940; - [x] https://github.com/root-project/root/pull/11941; - [x] https://github.com/root-project/root/pull/10210; Except for the commit to RooStats, which is a fixup only relevant to a commit in master; - [x] https://github.com/root-project/root/pull/11953; Excluding the one technical commit about the `snapshot()` overload; - [x] https://github.com/root-project/root/pull/9539; Only the first four commits that are not about code modernization; - [x] https://github.com/root-project/root/pull/11969; - [x] https://github.com/root-project/root/pull/11962; - [x] https://github.com/root-project/root/pull/11970; - [x] https://github.com/root-project/root/pull/11966; - [x] https://github.com/root-project/root/pull/11984; - [x] https://github.com/root-project/root/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11856
https://github.com/root-project/root/issues/11856:699,Testability,test,test,699,"# 6.28.00. **GitHub issue** that we still want to resolve before the v6.28.00 release:. - [x] https://github.com/root-project/root/issues/11951; Issue is not closed yet because the solution we have is not perfect, but there is a way of doing it already in `v628`: with the `RooBinIntegrator`; - [x] https://github.com/root-project/root/issues/11814; - [x] https://github.com/root-project/root/issues/11954; - [x] https://github.com/root-project/root/issues/8984; Issue is not closed yet because the solution still needs to be validated to the user, but patch is already merged to `master` and `v628` branch. **Other items** that still need to be done without any associated GitHub issue:. - [x] New test statistics should consider the `Offset()` command in `RooAbsPdf::fitTo()`, @Zeff020; - [x] Write release notes for the change in the `KahanSum` class, @egpbos; - [x] If you run the `testInterface` unit test binary in `roofitcore`, you get errors printed out and there is one disabled test. Please take a look, @Zeff020. **Backports** that need to be made for the v6.28 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/11940; - [x] https://github.com/root-project/root/pull/11941; - [x] https://github.com/root-project/root/pull/10210; Except for the commit to RooStats, which is a fixup only relevant to a commit in master; - [x] https://github.com/root-project/root/pull/11953; Excluding the one technical commit about the `snapshot()` overload; - [x] https://github.com/root-project/root/pull/9539; Only the first four commits that are not about code modernization; - [x] https://github.com/root-project/root/pull/11969; - [x] https://github.com/root-project/root/pull/11962; - [x] https://github.com/root-project/root/pull/11970; - [x] https://github.com/root-project/root/pull/11966; - [x] https://github.com/root-project/root/pull/11984; - [x] https://github.com/root-project/root/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11856
https://github.com/root-project/root/issues/11856:886,Testability,test,testInterface,886,"# 6.28.00. **GitHub issue** that we still want to resolve before the v6.28.00 release:. - [x] https://github.com/root-project/root/issues/11951; Issue is not closed yet because the solution we have is not perfect, but there is a way of doing it already in `v628`: with the `RooBinIntegrator`; - [x] https://github.com/root-project/root/issues/11814; - [x] https://github.com/root-project/root/issues/11954; - [x] https://github.com/root-project/root/issues/8984; Issue is not closed yet because the solution still needs to be validated to the user, but patch is already merged to `master` and `v628` branch. **Other items** that still need to be done without any associated GitHub issue:. - [x] New test statistics should consider the `Offset()` command in `RooAbsPdf::fitTo()`, @Zeff020; - [x] Write release notes for the change in the `KahanSum` class, @egpbos; - [x] If you run the `testInterface` unit test binary in `roofitcore`, you get errors printed out and there is one disabled test. Please take a look, @Zeff020. **Backports** that need to be made for the v6.28 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/11940; - [x] https://github.com/root-project/root/pull/11941; - [x] https://github.com/root-project/root/pull/10210; Except for the commit to RooStats, which is a fixup only relevant to a commit in master; - [x] https://github.com/root-project/root/pull/11953; Excluding the one technical commit about the `snapshot()` overload; - [x] https://github.com/root-project/root/pull/9539; Only the first four commits that are not about code modernization; - [x] https://github.com/root-project/root/pull/11969; - [x] https://github.com/root-project/root/pull/11962; - [x] https://github.com/root-project/root/pull/11970; - [x] https://github.com/root-project/root/pull/11966; - [x] https://github.com/root-project/root/pull/11984; - [x] https://github.com/root-project/root/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11856
https://github.com/root-project/root/issues/11856:906,Testability,test,test,906,"# 6.28.00. **GitHub issue** that we still want to resolve before the v6.28.00 release:. - [x] https://github.com/root-project/root/issues/11951; Issue is not closed yet because the solution we have is not perfect, but there is a way of doing it already in `v628`: with the `RooBinIntegrator`; - [x] https://github.com/root-project/root/issues/11814; - [x] https://github.com/root-project/root/issues/11954; - [x] https://github.com/root-project/root/issues/8984; Issue is not closed yet because the solution still needs to be validated to the user, but patch is already merged to `master` and `v628` branch. **Other items** that still need to be done without any associated GitHub issue:. - [x] New test statistics should consider the `Offset()` command in `RooAbsPdf::fitTo()`, @Zeff020; - [x] Write release notes for the change in the `KahanSum` class, @egpbos; - [x] If you run the `testInterface` unit test binary in `roofitcore`, you get errors printed out and there is one disabled test. Please take a look, @Zeff020. **Backports** that need to be made for the v6.28 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/11940; - [x] https://github.com/root-project/root/pull/11941; - [x] https://github.com/root-project/root/pull/10210; Except for the commit to RooStats, which is a fixup only relevant to a commit in master; - [x] https://github.com/root-project/root/pull/11953; Excluding the one technical commit about the `snapshot()` overload; - [x] https://github.com/root-project/root/pull/9539; Only the first four commits that are not about code modernization; - [x] https://github.com/root-project/root/pull/11969; - [x] https://github.com/root-project/root/pull/11962; - [x] https://github.com/root-project/root/pull/11970; - [x] https://github.com/root-project/root/pull/11966; - [x] https://github.com/root-project/root/pull/11984; - [x] https://github.com/root-project/root/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11856
https://github.com/root-project/root/issues/11856:988,Testability,test,test,988,"# 6.28.00. **GitHub issue** that we still want to resolve before the v6.28.00 release:. - [x] https://github.com/root-project/root/issues/11951; Issue is not closed yet because the solution we have is not perfect, but there is a way of doing it already in `v628`: with the `RooBinIntegrator`; - [x] https://github.com/root-project/root/issues/11814; - [x] https://github.com/root-project/root/issues/11954; - [x] https://github.com/root-project/root/issues/8984; Issue is not closed yet because the solution still needs to be validated to the user, but patch is already merged to `master` and `v628` branch. **Other items** that still need to be done without any associated GitHub issue:. - [x] New test statistics should consider the `Offset()` command in `RooAbsPdf::fitTo()`, @Zeff020; - [x] Write release notes for the change in the `KahanSum` class, @egpbos; - [x] If you run the `testInterface` unit test binary in `roofitcore`, you get errors printed out and there is one disabled test. Please take a look, @Zeff020. **Backports** that need to be made for the v6.28 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/11940; - [x] https://github.com/root-project/root/pull/11941; - [x] https://github.com/root-project/root/pull/10210; Except for the commit to RooStats, which is a fixup only relevant to a commit in master; - [x] https://github.com/root-project/root/pull/11953; Excluding the one technical commit about the `snapshot()` overload; - [x] https://github.com/root-project/root/pull/9539; Only the first four commits that are not about code modernization; - [x] https://github.com/root-project/root/pull/11969; - [x] https://github.com/root-project/root/pull/11962; - [x] https://github.com/root-project/root/pull/11970; - [x] https://github.com/root-project/root/pull/11966; - [x] https://github.com/root-project/root/pull/11984; - [x] https://github.com/root-project/root/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11856
https://github.com/root-project/root/pull/11857:388,Performance,load,loaded,388,"If respective widget (TBrowser, TCanvas, TTreeViewer) want to start web-based implementation,; only minimal graphics initialization is necessary. Let possibility to really initialize graphics when web display is disabled and normal widget is started. In TCanvas use batch gui factory to create web-based TWebCanvas. It is done for the case when normal graphics (with its gui factory) was loaded, but then web display was enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11857
https://github.com/root-project/root/pull/11858:394,Deployability,update,updated,394,"With `ROOTSYS` unset and no `DISPLAY` variable, this setup causes a spurious warning about an unset `DISPLAY`. `TROOT()` calls `SetBatch(true)`, then cppyy ""agrees"", and `ROOT/__init__.py` tries to revert that. Just let everyone keep their hands off `SetBatch()` (as is done in newer cppyy anyway). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11858
https://github.com/root-project/root/pull/11858:38,Modifiability,variab,variable,38,"With `ROOTSYS` unset and no `DISPLAY` variable, this setup causes a spurious warning about an unset `DISPLAY`. `TROOT()` calls `SetBatch(true)`, then cppyy ""agrees"", and `ROOT/__init__.py` tries to revert that. Just let everyone keep their hands off `SetBatch()` (as is done in newer cppyy anyway). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11858
https://github.com/root-project/root/pull/11858:364,Testability,test,tested,364,"With `ROOTSYS` unset and no `DISPLAY` variable, this setup causes a spurious warning about an unset `DISPLAY`. `TROOT()` calls `SetBatch(true)`, then cppyy ""agrees"", and `ROOT/__init__.py` tries to revert that. Just let everyone keep their hands off `SetBatch()` (as is done in newer cppyy anyway). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11858
https://github.com/root-project/root/pull/11859:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11859
https://github.com/root-project/root/pull/11859:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11859
https://github.com/root-project/root/pull/11861:302,Deployability,update,updated,302,"```; build/rmkdepend/include.c:306:28: warning: ‘%s’ directive writing up to 8190 bytes into a region of size between 1 and 8191 [-Wformat-overflow=]; 306 | sprintf(path, ""%s/%s"", *pp, include);; | ^~; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:272,Testability,test,tested,272,"```; build/rmkdepend/include.c:306:28: warning: ‘%s’ directive writing up to 8190 bytes into a region of size between 1 and 8191 [-Wformat-overflow=]; 306 | sprintf(path, ""%s/%s"", *pp, include);; | ^~; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11862:66,Usability,simpl,simply,66,* TBranch::GetEntriesSerialized: actually reuse baskets inside of simply leaking them; This applies fixes that were introduce to GetBulkEntries in 61c9927 and 60ad148; * Prevent leak of ready-to-reuse basket. This fixes https://github.com/root-project/root/issues/11853,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11862
https://github.com/root-project/root/pull/11863:562,Deployability,update,updates,562,"Bumps [path-parse](https://github.com/jbgutierrez/path-parse) from 1.0.6 to 1.0.7.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/jbgutierrez/path-parse/commits/v1.0.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=path-parse&package-manager=npm_and_yarn&previous-version=1.0.6&new-version=1.0.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11863
https://github.com/root-project/root/pull/11863:1714,Deployability,upgrade,upgrade,1714," commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language; - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language; - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language. You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/root-project/root/network/alerts). </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11863
https://github.com/root-project/root/pull/11863:1890,Deployability,upgrade,upgrade,1890," commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language; - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language; - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language. You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/root-project/root/network/alerts). </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11863
https://github.com/root-project/root/pull/11863:2060,Deployability,upgrade,upgrade,2060," commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language; - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language; - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language. You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/root-project/root/network/alerts). </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11863
