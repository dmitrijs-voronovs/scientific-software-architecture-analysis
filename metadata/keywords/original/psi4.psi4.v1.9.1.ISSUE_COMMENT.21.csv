id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/psi4/psi4/pull/1980#issuecomment-676411057:266,Energy Efficiency,energy,energy,266,"The `pcg_convergence` behavior is a change for the better. Your analysis of the issue is right, but I'd rather couple `pcg_convergence` to `r_convergence`, how tightly the residual equations are satisfied. The CEPA is a touch trickier. My initial tests say that the energy convergence is working just fine. What isn't within convergence tolerance is the decomposition of correlation energy into same-spin and opposite-spin components. Is that what you're seeing? I can investigate, but this may not be an implementation issue, just a quirk of the equations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-676411057
https://github.com/psi4/psi4/pull/1980#issuecomment-676411057:383,Energy Efficiency,energy,energy,383,"The `pcg_convergence` behavior is a change for the better. Your analysis of the issue is right, but I'd rather couple `pcg_convergence` to `r_convergence`, how tightly the residual equations are satisfied. The CEPA is a touch trickier. My initial tests say that the energy convergence is working just fine. What isn't within convergence tolerance is the decomposition of correlation energy into same-spin and opposite-spin components. Is that what you're seeing? I can investigate, but this may not be an implementation issue, just a quirk of the equations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-676411057
https://github.com/psi4/psi4/pull/1980#issuecomment-676411057:247,Testability,test,tests,247,"The `pcg_convergence` behavior is a change for the better. Your analysis of the issue is right, but I'd rather couple `pcg_convergence` to `r_convergence`, how tightly the residual equations are satisfied. The CEPA is a touch trickier. My initial tests say that the energy convergence is working just fine. What isn't within convergence tolerance is the decomposition of correlation energy into same-spin and opposite-spin components. Is that what you're seeing? I can investigate, but this may not be an implementation issue, just a quirk of the equations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-676411057
https://github.com/psi4/psi4/pull/1980#issuecomment-676514270:300,Testability,test,tests,300,"> The pcg_convergence behavior is a change for the better. Your analysis of the issue is right, but I'd rather couple pcg_convergence to r_convergence, how tightly the residual equations are satisfied. Ok, tying to `r_convergence` works great and saves on PCG iterations. Average over 18 aug-cc-pvdz tests w/default convergences:; * original `pcg_convergence = 1.e-6`, 5.9 iter; * first proposed `0.1 * e_convergence = 1.e-9`, 10.2 iter; * new proposed `0.01 * r_convergence = 1.e-7`, 7.8 iter . While this works nicely at default convcrit, it's not getting changed if a user much-tightens e_conv. But I guess that's consistent with other modules.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-676514270
https://github.com/psi4/psi4/pull/1980#issuecomment-676587339:363,Availability,toler,tolerance,363,"I'd prefer not needing to throw in a prefactor at all, but I suppose that's necessary given that `occ` and `dfocc` measure the ""residual"" as the size of the first order update, not the size of the residual proper. No issues there. My thoughts about the CEPA issue are unchanged from my previous comment; as best as I can tell, the energy being within convergence tolerance does not mean all of its spin components are. As for why this doesn't afflict other modules:; * `fnocc` and `occ` compute the energy differently. `fnocc` uses an energy functional that is variational in the amplitudes, where `occ` uses the normal CCD-like energy functional. They'll both agree at convergence, but not at other amplitudes. This difference seems to give `fnocc` its better behaved spin-components.; * There don't seem to be `dfocc` LCCD eneries in the standard suite, so of course those aren't raising errors.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-676587339
https://github.com/psi4/psi4/pull/1980#issuecomment-676587339:890,Availability,error,errors,890,"I'd prefer not needing to throw in a prefactor at all, but I suppose that's necessary given that `occ` and `dfocc` measure the ""residual"" as the size of the first order update, not the size of the residual proper. No issues there. My thoughts about the CEPA issue are unchanged from my previous comment; as best as I can tell, the energy being within convergence tolerance does not mean all of its spin components are. As for why this doesn't afflict other modules:; * `fnocc` and `occ` compute the energy differently. `fnocc` uses an energy functional that is variational in the amplitudes, where `occ` uses the normal CCD-like energy functional. They'll both agree at convergence, but not at other amplitudes. This difference seems to give `fnocc` its better behaved spin-components.; * There don't seem to be `dfocc` LCCD eneries in the standard suite, so of course those aren't raising errors.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-676587339
https://github.com/psi4/psi4/pull/1980#issuecomment-676587339:169,Deployability,update,update,169,"I'd prefer not needing to throw in a prefactor at all, but I suppose that's necessary given that `occ` and `dfocc` measure the ""residual"" as the size of the first order update, not the size of the residual proper. No issues there. My thoughts about the CEPA issue are unchanged from my previous comment; as best as I can tell, the energy being within convergence tolerance does not mean all of its spin components are. As for why this doesn't afflict other modules:; * `fnocc` and `occ` compute the energy differently. `fnocc` uses an energy functional that is variational in the amplitudes, where `occ` uses the normal CCD-like energy functional. They'll both agree at convergence, but not at other amplitudes. This difference seems to give `fnocc` its better behaved spin-components.; * There don't seem to be `dfocc` LCCD eneries in the standard suite, so of course those aren't raising errors.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-676587339
https://github.com/psi4/psi4/pull/1980#issuecomment-676587339:331,Energy Efficiency,energy,energy,331,"I'd prefer not needing to throw in a prefactor at all, but I suppose that's necessary given that `occ` and `dfocc` measure the ""residual"" as the size of the first order update, not the size of the residual proper. No issues there. My thoughts about the CEPA issue are unchanged from my previous comment; as best as I can tell, the energy being within convergence tolerance does not mean all of its spin components are. As for why this doesn't afflict other modules:; * `fnocc` and `occ` compute the energy differently. `fnocc` uses an energy functional that is variational in the amplitudes, where `occ` uses the normal CCD-like energy functional. They'll both agree at convergence, but not at other amplitudes. This difference seems to give `fnocc` its better behaved spin-components.; * There don't seem to be `dfocc` LCCD eneries in the standard suite, so of course those aren't raising errors.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-676587339
https://github.com/psi4/psi4/pull/1980#issuecomment-676587339:499,Energy Efficiency,energy,energy,499,"I'd prefer not needing to throw in a prefactor at all, but I suppose that's necessary given that `occ` and `dfocc` measure the ""residual"" as the size of the first order update, not the size of the residual proper. No issues there. My thoughts about the CEPA issue are unchanged from my previous comment; as best as I can tell, the energy being within convergence tolerance does not mean all of its spin components are. As for why this doesn't afflict other modules:; * `fnocc` and `occ` compute the energy differently. `fnocc` uses an energy functional that is variational in the amplitudes, where `occ` uses the normal CCD-like energy functional. They'll both agree at convergence, but not at other amplitudes. This difference seems to give `fnocc` its better behaved spin-components.; * There don't seem to be `dfocc` LCCD eneries in the standard suite, so of course those aren't raising errors.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-676587339
https://github.com/psi4/psi4/pull/1980#issuecomment-676587339:535,Energy Efficiency,energy,energy,535,"I'd prefer not needing to throw in a prefactor at all, but I suppose that's necessary given that `occ` and `dfocc` measure the ""residual"" as the size of the first order update, not the size of the residual proper. No issues there. My thoughts about the CEPA issue are unchanged from my previous comment; as best as I can tell, the energy being within convergence tolerance does not mean all of its spin components are. As for why this doesn't afflict other modules:; * `fnocc` and `occ` compute the energy differently. `fnocc` uses an energy functional that is variational in the amplitudes, where `occ` uses the normal CCD-like energy functional. They'll both agree at convergence, but not at other amplitudes. This difference seems to give `fnocc` its better behaved spin-components.; * There don't seem to be `dfocc` LCCD eneries in the standard suite, so of course those aren't raising errors.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-676587339
https://github.com/psi4/psi4/pull/1980#issuecomment-676587339:629,Energy Efficiency,energy,energy,629,"I'd prefer not needing to throw in a prefactor at all, but I suppose that's necessary given that `occ` and `dfocc` measure the ""residual"" as the size of the first order update, not the size of the residual proper. No issues there. My thoughts about the CEPA issue are unchanged from my previous comment; as best as I can tell, the energy being within convergence tolerance does not mean all of its spin components are. As for why this doesn't afflict other modules:; * `fnocc` and `occ` compute the energy differently. `fnocc` uses an energy functional that is variational in the amplitudes, where `occ` uses the normal CCD-like energy functional. They'll both agree at convergence, but not at other amplitudes. This difference seems to give `fnocc` its better behaved spin-components.; * There don't seem to be `dfocc` LCCD eneries in the standard suite, so of course those aren't raising errors.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-676587339
https://github.com/psi4/psi4/pull/1980#issuecomment-677068760:315,Availability,error,errors,315,"@JonathonMisiewicz . Let's subdivide further into 3 issues: the dfocc pcg, the occ lccd, and the occ olccd. * dfocc pcg: I think with the switch to coupling to `tol_t2` we're both satisfied. your approach fixes all the tests with far fewer iterations than my original sol'n; * occ lccd: you're right that the three errors were in spin components. I found that a `0.5 * tol_Eod` adds a single iteration about a quarter of the time, and fixes all the tests. Since triggering convergence on a small energy _rise_ is already a little unexpected, this prefactor doesn't bother me. I'm not adamant though -- adjusting e_conv for the stdsuite tests is a lot more palatable than adjusting pcg_conv.; * occ olccd: there's two errors -- one in spin components and another with the correlation energy itself (below). I tried to back off the prefactor, but nothing looser than a full order of magnitude fixed the tests. It's adding 2-4 iterations to every test (so 8-11 iterations becomes 10-14). That's severe, especially as it affects all the oo methods, not just olccd. So if you think it's better to skip this fix for a while, I'm ok with that. . `test_olccd_energy_module[olccd uhf conv ae: * occ -qz2p-ene0] OLCCD CORRELATION ENERGY: computed value (-0.21805777) does not match (-0.21805608) to atol=1e-06 by difference (-0.00000169).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-677068760
https://github.com/psi4/psi4/pull/1980#issuecomment-677068760:717,Availability,error,errors,717,"@JonathonMisiewicz . Let's subdivide further into 3 issues: the dfocc pcg, the occ lccd, and the occ olccd. * dfocc pcg: I think with the switch to coupling to `tol_t2` we're both satisfied. your approach fixes all the tests with far fewer iterations than my original sol'n; * occ lccd: you're right that the three errors were in spin components. I found that a `0.5 * tol_Eod` adds a single iteration about a quarter of the time, and fixes all the tests. Since triggering convergence on a small energy _rise_ is already a little unexpected, this prefactor doesn't bother me. I'm not adamant though -- adjusting e_conv for the stdsuite tests is a lot more palatable than adjusting pcg_conv.; * occ olccd: there's two errors -- one in spin components and another with the correlation energy itself (below). I tried to back off the prefactor, but nothing looser than a full order of magnitude fixed the tests. It's adding 2-4 iterations to every test (so 8-11 iterations becomes 10-14). That's severe, especially as it affects all the oo methods, not just olccd. So if you think it's better to skip this fix for a while, I'm ok with that. . `test_olccd_energy_module[olccd uhf conv ae: * occ -qz2p-ene0] OLCCD CORRELATION ENERGY: computed value (-0.21805777) does not match (-0.21805608) to atol=1e-06 by difference (-0.00000169).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-677068760
https://github.com/psi4/psi4/pull/1980#issuecomment-677068760:496,Energy Efficiency,energy,energy,496,"@JonathonMisiewicz . Let's subdivide further into 3 issues: the dfocc pcg, the occ lccd, and the occ olccd. * dfocc pcg: I think with the switch to coupling to `tol_t2` we're both satisfied. your approach fixes all the tests with far fewer iterations than my original sol'n; * occ lccd: you're right that the three errors were in spin components. I found that a `0.5 * tol_Eod` adds a single iteration about a quarter of the time, and fixes all the tests. Since triggering convergence on a small energy _rise_ is already a little unexpected, this prefactor doesn't bother me. I'm not adamant though -- adjusting e_conv for the stdsuite tests is a lot more palatable than adjusting pcg_conv.; * occ olccd: there's two errors -- one in spin components and another with the correlation energy itself (below). I tried to back off the prefactor, but nothing looser than a full order of magnitude fixed the tests. It's adding 2-4 iterations to every test (so 8-11 iterations becomes 10-14). That's severe, especially as it affects all the oo methods, not just olccd. So if you think it's better to skip this fix for a while, I'm ok with that. . `test_olccd_energy_module[olccd uhf conv ae: * occ -qz2p-ene0] OLCCD CORRELATION ENERGY: computed value (-0.21805777) does not match (-0.21805608) to atol=1e-06 by difference (-0.00000169).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-677068760
https://github.com/psi4/psi4/pull/1980#issuecomment-677068760:783,Energy Efficiency,energy,energy,783,"@JonathonMisiewicz . Let's subdivide further into 3 issues: the dfocc pcg, the occ lccd, and the occ olccd. * dfocc pcg: I think with the switch to coupling to `tol_t2` we're both satisfied. your approach fixes all the tests with far fewer iterations than my original sol'n; * occ lccd: you're right that the three errors were in spin components. I found that a `0.5 * tol_Eod` adds a single iteration about a quarter of the time, and fixes all the tests. Since triggering convergence on a small energy _rise_ is already a little unexpected, this prefactor doesn't bother me. I'm not adamant though -- adjusting e_conv for the stdsuite tests is a lot more palatable than adjusting pcg_conv.; * occ olccd: there's two errors -- one in spin components and another with the correlation energy itself (below). I tried to back off the prefactor, but nothing looser than a full order of magnitude fixed the tests. It's adding 2-4 iterations to every test (so 8-11 iterations becomes 10-14). That's severe, especially as it affects all the oo methods, not just olccd. So if you think it's better to skip this fix for a while, I'm ok with that. . `test_olccd_energy_module[olccd uhf conv ae: * occ -qz2p-ene0] OLCCD CORRELATION ENERGY: computed value (-0.21805777) does not match (-0.21805608) to atol=1e-06 by difference (-0.00000169).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-677068760
https://github.com/psi4/psi4/pull/1980#issuecomment-677068760:1220,Energy Efficiency,ENERGY,ENERGY,1220,"@JonathonMisiewicz . Let's subdivide further into 3 issues: the dfocc pcg, the occ lccd, and the occ olccd. * dfocc pcg: I think with the switch to coupling to `tol_t2` we're both satisfied. your approach fixes all the tests with far fewer iterations than my original sol'n; * occ lccd: you're right that the three errors were in spin components. I found that a `0.5 * tol_Eod` adds a single iteration about a quarter of the time, and fixes all the tests. Since triggering convergence on a small energy _rise_ is already a little unexpected, this prefactor doesn't bother me. I'm not adamant though -- adjusting e_conv for the stdsuite tests is a lot more palatable than adjusting pcg_conv.; * occ olccd: there's two errors -- one in spin components and another with the correlation energy itself (below). I tried to back off the prefactor, but nothing looser than a full order of magnitude fixed the tests. It's adding 2-4 iterations to every test (so 8-11 iterations becomes 10-14). That's severe, especially as it affects all the oo methods, not just olccd. So if you think it's better to skip this fix for a while, I'm ok with that. . `test_olccd_energy_module[olccd uhf conv ae: * occ -qz2p-ene0] OLCCD CORRELATION ENERGY: computed value (-0.21805777) does not match (-0.21805608) to atol=1e-06 by difference (-0.00000169).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-677068760
https://github.com/psi4/psi4/pull/1980#issuecomment-677068760:148,Modifiability,coupling,coupling,148,"@JonathonMisiewicz . Let's subdivide further into 3 issues: the dfocc pcg, the occ lccd, and the occ olccd. * dfocc pcg: I think with the switch to coupling to `tol_t2` we're both satisfied. your approach fixes all the tests with far fewer iterations than my original sol'n; * occ lccd: you're right that the three errors were in spin components. I found that a `0.5 * tol_Eod` adds a single iteration about a quarter of the time, and fixes all the tests. Since triggering convergence on a small energy _rise_ is already a little unexpected, this prefactor doesn't bother me. I'm not adamant though -- adjusting e_conv for the stdsuite tests is a lot more palatable than adjusting pcg_conv.; * occ olccd: there's two errors -- one in spin components and another with the correlation energy itself (below). I tried to back off the prefactor, but nothing looser than a full order of magnitude fixed the tests. It's adding 2-4 iterations to every test (so 8-11 iterations becomes 10-14). That's severe, especially as it affects all the oo methods, not just olccd. So if you think it's better to skip this fix for a while, I'm ok with that. . `test_olccd_energy_module[olccd uhf conv ae: * occ -qz2p-ene0] OLCCD CORRELATION ENERGY: computed value (-0.21805777) does not match (-0.21805608) to atol=1e-06 by difference (-0.00000169).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-677068760
https://github.com/psi4/psi4/pull/1980#issuecomment-677068760:219,Testability,test,tests,219,"@JonathonMisiewicz . Let's subdivide further into 3 issues: the dfocc pcg, the occ lccd, and the occ olccd. * dfocc pcg: I think with the switch to coupling to `tol_t2` we're both satisfied. your approach fixes all the tests with far fewer iterations than my original sol'n; * occ lccd: you're right that the three errors were in spin components. I found that a `0.5 * tol_Eod` adds a single iteration about a quarter of the time, and fixes all the tests. Since triggering convergence on a small energy _rise_ is already a little unexpected, this prefactor doesn't bother me. I'm not adamant though -- adjusting e_conv for the stdsuite tests is a lot more palatable than adjusting pcg_conv.; * occ olccd: there's two errors -- one in spin components and another with the correlation energy itself (below). I tried to back off the prefactor, but nothing looser than a full order of magnitude fixed the tests. It's adding 2-4 iterations to every test (so 8-11 iterations becomes 10-14). That's severe, especially as it affects all the oo methods, not just olccd. So if you think it's better to skip this fix for a while, I'm ok with that. . `test_olccd_energy_module[olccd uhf conv ae: * occ -qz2p-ene0] OLCCD CORRELATION ENERGY: computed value (-0.21805777) does not match (-0.21805608) to atol=1e-06 by difference (-0.00000169).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-677068760
https://github.com/psi4/psi4/pull/1980#issuecomment-677068760:449,Testability,test,tests,449,"@JonathonMisiewicz . Let's subdivide further into 3 issues: the dfocc pcg, the occ lccd, and the occ olccd. * dfocc pcg: I think with the switch to coupling to `tol_t2` we're both satisfied. your approach fixes all the tests with far fewer iterations than my original sol'n; * occ lccd: you're right that the three errors were in spin components. I found that a `0.5 * tol_Eod` adds a single iteration about a quarter of the time, and fixes all the tests. Since triggering convergence on a small energy _rise_ is already a little unexpected, this prefactor doesn't bother me. I'm not adamant though -- adjusting e_conv for the stdsuite tests is a lot more palatable than adjusting pcg_conv.; * occ olccd: there's two errors -- one in spin components and another with the correlation energy itself (below). I tried to back off the prefactor, but nothing looser than a full order of magnitude fixed the tests. It's adding 2-4 iterations to every test (so 8-11 iterations becomes 10-14). That's severe, especially as it affects all the oo methods, not just olccd. So if you think it's better to skip this fix for a while, I'm ok with that. . `test_olccd_energy_module[olccd uhf conv ae: * occ -qz2p-ene0] OLCCD CORRELATION ENERGY: computed value (-0.21805777) does not match (-0.21805608) to atol=1e-06 by difference (-0.00000169).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-677068760
https://github.com/psi4/psi4/pull/1980#issuecomment-677068760:636,Testability,test,tests,636,"@JonathonMisiewicz . Let's subdivide further into 3 issues: the dfocc pcg, the occ lccd, and the occ olccd. * dfocc pcg: I think with the switch to coupling to `tol_t2` we're both satisfied. your approach fixes all the tests with far fewer iterations than my original sol'n; * occ lccd: you're right that the three errors were in spin components. I found that a `0.5 * tol_Eod` adds a single iteration about a quarter of the time, and fixes all the tests. Since triggering convergence on a small energy _rise_ is already a little unexpected, this prefactor doesn't bother me. I'm not adamant though -- adjusting e_conv for the stdsuite tests is a lot more palatable than adjusting pcg_conv.; * occ olccd: there's two errors -- one in spin components and another with the correlation energy itself (below). I tried to back off the prefactor, but nothing looser than a full order of magnitude fixed the tests. It's adding 2-4 iterations to every test (so 8-11 iterations becomes 10-14). That's severe, especially as it affects all the oo methods, not just olccd. So if you think it's better to skip this fix for a while, I'm ok with that. . `test_olccd_energy_module[olccd uhf conv ae: * occ -qz2p-ene0] OLCCD CORRELATION ENERGY: computed value (-0.21805777) does not match (-0.21805608) to atol=1e-06 by difference (-0.00000169).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-677068760
https://github.com/psi4/psi4/pull/1980#issuecomment-677068760:901,Testability,test,tests,901,"@JonathonMisiewicz . Let's subdivide further into 3 issues: the dfocc pcg, the occ lccd, and the occ olccd. * dfocc pcg: I think with the switch to coupling to `tol_t2` we're both satisfied. your approach fixes all the tests with far fewer iterations than my original sol'n; * occ lccd: you're right that the three errors were in spin components. I found that a `0.5 * tol_Eod` adds a single iteration about a quarter of the time, and fixes all the tests. Since triggering convergence on a small energy _rise_ is already a little unexpected, this prefactor doesn't bother me. I'm not adamant though -- adjusting e_conv for the stdsuite tests is a lot more palatable than adjusting pcg_conv.; * occ olccd: there's two errors -- one in spin components and another with the correlation energy itself (below). I tried to back off the prefactor, but nothing looser than a full order of magnitude fixed the tests. It's adding 2-4 iterations to every test (so 8-11 iterations becomes 10-14). That's severe, especially as it affects all the oo methods, not just olccd. So if you think it's better to skip this fix for a while, I'm ok with that. . `test_olccd_energy_module[olccd uhf conv ae: * occ -qz2p-ene0] OLCCD CORRELATION ENERGY: computed value (-0.21805777) does not match (-0.21805608) to atol=1e-06 by difference (-0.00000169).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-677068760
https://github.com/psi4/psi4/pull/1980#issuecomment-677068760:944,Testability,test,test,944,"@JonathonMisiewicz . Let's subdivide further into 3 issues: the dfocc pcg, the occ lccd, and the occ olccd. * dfocc pcg: I think with the switch to coupling to `tol_t2` we're both satisfied. your approach fixes all the tests with far fewer iterations than my original sol'n; * occ lccd: you're right that the three errors were in spin components. I found that a `0.5 * tol_Eod` adds a single iteration about a quarter of the time, and fixes all the tests. Since triggering convergence on a small energy _rise_ is already a little unexpected, this prefactor doesn't bother me. I'm not adamant though -- adjusting e_conv for the stdsuite tests is a lot more palatable than adjusting pcg_conv.; * occ olccd: there's two errors -- one in spin components and another with the correlation energy itself (below). I tried to back off the prefactor, but nothing looser than a full order of magnitude fixed the tests. It's adding 2-4 iterations to every test (so 8-11 iterations becomes 10-14). That's severe, especially as it affects all the oo methods, not just olccd. So if you think it's better to skip this fix for a while, I'm ok with that. . `test_olccd_energy_module[olccd uhf conv ae: * occ -qz2p-ene0] OLCCD CORRELATION ENERGY: computed value (-0.21805777) does not match (-0.21805608) to atol=1e-06 by difference (-0.00000169).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-677068760
https://github.com/psi4/psi4/pull/1980#issuecomment-682100500:10,Deployability,update,update,10,"Here's an update on the effects of your #1988, @JonathonMisiewicz. On the OCC LCCD bullet, no change, since it doesn't hit that mograd code. On the OCC OLCCD bullet, you can see the before and after below of the final iteration of nine cases. No change in number of iterations (final integer) because convergence is energy limited (first inequality) rather than mograd limited (second inequality). Do you think adjusting https://github.com/psi4/psi4/blob/master/psi4/src/psi4/occ/occwave.cc#L144-L155 is in order?. ### olccd conv ae r/u/ro dz/adz/qz2p. pre-1988 WRONG; ```; iter: abs( 3.92e-07) < 1.00e-06 9.61e-08 < 1.00e-04 8; iter: abs( 8.96e-07) < 1.00e-06 2.68e-07 < 1.00e-04 8; iter: abs( 4.92e-07) < 1.00e-06 2.32e-08 < 1.00e-04 10; iter: abs( 1.04e-09) < 1.00e-06 4.03e-07 < 1.00e-04 10; iter: abs( 8.83e-07) < 1.00e-06 1.84e-07 < 1.00e-04 10; iter: abs( 1.94e-07) < 1.00e-06 3.62e-07 < 1.00e-04 9; iter: abs( 1.29e-07) < 1.00e-06 8.37e-07 < 1.00e-04 9; iter: abs( 4.13e-07) < 1.00e-06 1.17e-07 < 1.00e-04 11; iter: abs( 4.27e-07) < 1.00e-06 1.04e-07 < 1.00e-04 11; ```; post-1988 RIGHT; ```; iter: abs( 3.92e-07) < 1.00e-06 8.04e-07 < 1.00e-04 8; iter: abs( 8.96e-07) < 1.00e-06 2.11e-06 < 1.00e-04 8; iter: abs( 4.92e-07) < 1.00e-06 2.03e-07 < 1.00e-04 10; iter: abs( 1.04e-09) < 1.00e-06 2.32e-06 < 1.00e-04 10; iter: abs( 8.83e-07) < 1.00e-06 1.45e-06 < 1.00e-04 10; iter: abs( 1.94e-07) < 1.00e-06 3.03e-06 < 1.00e-04 9; iter: abs( 1.29e-07) < 1.00e-06 4.81e-06 < 1.00e-04 9; iter: abs( 4.13e-07) < 1.00e-06 9.22e-07 < 1.00e-04 11; iter: abs( 4.27e-07) < 1.00e-06 9.10e-07 < 1.00e-04 11; ```. By the way, there's more of those rms formulas. Look suspicious to you, too?. ```; >>> grep sqrt ../psi4/src/psi4/occ/* | grep rms_; ../psi4/src/psi4/occ/iterate_t2o1_amplitudes.cc: rms_t2 = std::sqrt(rms_t2 / nElements);; ../psi4/src/psi4/occ/iterate_t2o1_amplitudes.cc: rms_t2AA = std::sqrt(rms_t2AA) / nElements;; ../psi4/src/psi4/occ/iterate_t2o1_amplitudes.cc: rms_t2BB = std::sqrt(rms_t2BB",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-682100500
https://github.com/psi4/psi4/pull/1980#issuecomment-682100500:316,Energy Efficiency,energy,energy,316,"Here's an update on the effects of your #1988, @JonathonMisiewicz. On the OCC LCCD bullet, no change, since it doesn't hit that mograd code. On the OCC OLCCD bullet, you can see the before and after below of the final iteration of nine cases. No change in number of iterations (final integer) because convergence is energy limited (first inequality) rather than mograd limited (second inequality). Do you think adjusting https://github.com/psi4/psi4/blob/master/psi4/src/psi4/occ/occwave.cc#L144-L155 is in order?. ### olccd conv ae r/u/ro dz/adz/qz2p. pre-1988 WRONG; ```; iter: abs( 3.92e-07) < 1.00e-06 9.61e-08 < 1.00e-04 8; iter: abs( 8.96e-07) < 1.00e-06 2.68e-07 < 1.00e-04 8; iter: abs( 4.92e-07) < 1.00e-06 2.32e-08 < 1.00e-04 10; iter: abs( 1.04e-09) < 1.00e-06 4.03e-07 < 1.00e-04 10; iter: abs( 8.83e-07) < 1.00e-06 1.84e-07 < 1.00e-04 10; iter: abs( 1.94e-07) < 1.00e-06 3.62e-07 < 1.00e-04 9; iter: abs( 1.29e-07) < 1.00e-06 8.37e-07 < 1.00e-04 9; iter: abs( 4.13e-07) < 1.00e-06 1.17e-07 < 1.00e-04 11; iter: abs( 4.27e-07) < 1.00e-06 1.04e-07 < 1.00e-04 11; ```; post-1988 RIGHT; ```; iter: abs( 3.92e-07) < 1.00e-06 8.04e-07 < 1.00e-04 8; iter: abs( 8.96e-07) < 1.00e-06 2.11e-06 < 1.00e-04 8; iter: abs( 4.92e-07) < 1.00e-06 2.03e-07 < 1.00e-04 10; iter: abs( 1.04e-09) < 1.00e-06 2.32e-06 < 1.00e-04 10; iter: abs( 8.83e-07) < 1.00e-06 1.45e-06 < 1.00e-04 10; iter: abs( 1.94e-07) < 1.00e-06 3.03e-06 < 1.00e-04 9; iter: abs( 1.29e-07) < 1.00e-06 4.81e-06 < 1.00e-04 9; iter: abs( 4.13e-07) < 1.00e-06 9.22e-07 < 1.00e-04 11; iter: abs( 4.27e-07) < 1.00e-06 9.10e-07 < 1.00e-04 11; ```. By the way, there's more of those rms formulas. Look suspicious to you, too?. ```; >>> grep sqrt ../psi4/src/psi4/occ/* | grep rms_; ../psi4/src/psi4/occ/iterate_t2o1_amplitudes.cc: rms_t2 = std::sqrt(rms_t2 / nElements);; ../psi4/src/psi4/occ/iterate_t2o1_amplitudes.cc: rms_t2AA = std::sqrt(rms_t2AA) / nElements;; ../psi4/src/psi4/occ/iterate_t2o1_amplitudes.cc: rms_t2BB = std::sqrt(rms_t2BB",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-682100500
https://github.com/psi4/psi4/pull/1980#issuecomment-682319508:923,Energy Efficiency,energy,energy,923,"now looking solely at the third bullet in https://github.com/psi4/psi4/pull/1980#issuecomment-677068760, post-Jonathon's mograd correction. I tried ""healing"" the other rms arithmetic grepped above, but it made no effect on iteration values. Interestingly, the internal array `rms()` fn is also `sqrt(sq) / n` rather than `sqrt(sq / n)`. Below are the 9 olccd r/u/ro ae 3 dz/adz/qz2p tests in occ. ""E"" is the scale for `tol_Eod` from `e_convergence` in `if (rms_wog < tol_grad && biggest_mograd < mograd_max && std::fabs(DE) < (1.0 * tol_Eod)) break;`. ""G"" is the floor (replacing 4.0) for mograd `tol_grad` in. ```; if (options_[""RMS_MOGRAD_CONVERGENCE""].has_changed()) {; tol_grad = options_.get_double(""RMS_MOGRAD_CONVERGENCE"");; } else {; double temp;; temp = (-0.9 * std::log10(tol_Eod)) - 1.6;; if (temp < 4.0) {; temp = 4.0;; }; tol_grad = pow(10.0, -temp);; // tol_grad = 100.0*tol_Eod;; outfile->Printf(""\tFor this energy convergence, default RMS orbital gradient is: %12.2e\n"", tol_grad);; ```. Without interventions (first block below), 2 tests fail. Iterations range is 8-11. This is unchanged from before #1988 because the iterations are E-limited. With my first proposed intervention of meddling with E by 0.1 (middle block below), that heals everything but at a cost of nearly 3 more iterations; range 10-14. Meddling with G instead (third block below) by flooring at 6 fixes everything in avg of 1 more iteration; range 8-12. Plus G is at least all positive, rather than E, which can trigger convergence on small energy _increases_. So I've switched this PR to to the third block case. Note that iteration studies have been looking at olccd only; it may be worth examining # iter for other oo methods that were fine before this PR. E 1.0 G 4 (2 fail) avg 9.6 -- pre PR; ```; iter: abs( 3.92e-07) < 1.00e-06 8.04e-07 < 1.00e-04 8; iter: abs( 8.96e-07) < 1.00e-06 2.11e-06 < 1.00e-04 8; iter: abs( 4.92e-07) < 1.00e-06 2.03e-07 < 1.00e-04 10; iter: abs( 1.04e-09) < 1.00e-06 2.32e-06 < 1.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-682319508
https://github.com/psi4/psi4/pull/1980#issuecomment-682319508:1528,Energy Efficiency,energy,energy,1528," < mograd_max && std::fabs(DE) < (1.0 * tol_Eod)) break;`. ""G"" is the floor (replacing 4.0) for mograd `tol_grad` in. ```; if (options_[""RMS_MOGRAD_CONVERGENCE""].has_changed()) {; tol_grad = options_.get_double(""RMS_MOGRAD_CONVERGENCE"");; } else {; double temp;; temp = (-0.9 * std::log10(tol_Eod)) - 1.6;; if (temp < 4.0) {; temp = 4.0;; }; tol_grad = pow(10.0, -temp);; // tol_grad = 100.0*tol_Eod;; outfile->Printf(""\tFor this energy convergence, default RMS orbital gradient is: %12.2e\n"", tol_grad);; ```. Without interventions (first block below), 2 tests fail. Iterations range is 8-11. This is unchanged from before #1988 because the iterations are E-limited. With my first proposed intervention of meddling with E by 0.1 (middle block below), that heals everything but at a cost of nearly 3 more iterations; range 10-14. Meddling with G instead (third block below) by flooring at 6 fixes everything in avg of 1 more iteration; range 8-12. Plus G is at least all positive, rather than E, which can trigger convergence on small energy _increases_. So I've switched this PR to to the third block case. Note that iteration studies have been looking at olccd only; it may be worth examining # iter for other oo methods that were fine before this PR. E 1.0 G 4 (2 fail) avg 9.6 -- pre PR; ```; iter: abs( 3.92e-07) < 1.00e-06 8.04e-07 < 1.00e-04 8; iter: abs( 8.96e-07) < 1.00e-06 2.11e-06 < 1.00e-04 8; iter: abs( 4.92e-07) < 1.00e-06 2.03e-07 < 1.00e-04 10; iter: abs( 1.04e-09) < 1.00e-06 2.32e-06 < 1.00e-04 10; iter: abs( 8.83e-07) < 1.00e-06 1.45e-06 < 1.00e-04 10; iter: abs( 1.94e-07) < 1.00e-06 3.03e-06 < 1.00e-04 9; iter: abs( 1.29e-07) < 1.00e-06 4.81e-06 < 1.00e-04 9; iter: abs( 4.13e-07) < 1.00e-06 9.22e-07 < 1.00e-04 11; iter: abs( 4.27e-07) < 1.00e-06 9.10e-07 < 1.00e-04 11; ```. E 0.1 G 4 (all pass) avg 12.2 -- early PR; ```; iter: abs( 9.85e-08) < 1.00e-07 1.90e-08 < 1.00e-04 10; iter: abs( 5.65e-08) < 1.00e-07 2.12e-08 < 1.00e-04 12; iter: abs( 5.08e-08) < 1.00e-07 1.91e-0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-682319508
https://github.com/psi4/psi4/pull/1980#issuecomment-682319508:383,Testability,test,tests,383,"now looking solely at the third bullet in https://github.com/psi4/psi4/pull/1980#issuecomment-677068760, post-Jonathon's mograd correction. I tried ""healing"" the other rms arithmetic grepped above, but it made no effect on iteration values. Interestingly, the internal array `rms()` fn is also `sqrt(sq) / n` rather than `sqrt(sq / n)`. Below are the 9 olccd r/u/ro ae 3 dz/adz/qz2p tests in occ. ""E"" is the scale for `tol_Eod` from `e_convergence` in `if (rms_wog < tol_grad && biggest_mograd < mograd_max && std::fabs(DE) < (1.0 * tol_Eod)) break;`. ""G"" is the floor (replacing 4.0) for mograd `tol_grad` in. ```; if (options_[""RMS_MOGRAD_CONVERGENCE""].has_changed()) {; tol_grad = options_.get_double(""RMS_MOGRAD_CONVERGENCE"");; } else {; double temp;; temp = (-0.9 * std::log10(tol_Eod)) - 1.6;; if (temp < 4.0) {; temp = 4.0;; }; tol_grad = pow(10.0, -temp);; // tol_grad = 100.0*tol_Eod;; outfile->Printf(""\tFor this energy convergence, default RMS orbital gradient is: %12.2e\n"", tol_grad);; ```. Without interventions (first block below), 2 tests fail. Iterations range is 8-11. This is unchanged from before #1988 because the iterations are E-limited. With my first proposed intervention of meddling with E by 0.1 (middle block below), that heals everything but at a cost of nearly 3 more iterations; range 10-14. Meddling with G instead (third block below) by flooring at 6 fixes everything in avg of 1 more iteration; range 8-12. Plus G is at least all positive, rather than E, which can trigger convergence on small energy _increases_. So I've switched this PR to to the third block case. Note that iteration studies have been looking at olccd only; it may be worth examining # iter for other oo methods that were fine before this PR. E 1.0 G 4 (2 fail) avg 9.6 -- pre PR; ```; iter: abs( 3.92e-07) < 1.00e-06 8.04e-07 < 1.00e-04 8; iter: abs( 8.96e-07) < 1.00e-06 2.11e-06 < 1.00e-04 8; iter: abs( 4.92e-07) < 1.00e-06 2.03e-07 < 1.00e-04 10; iter: abs( 1.04e-09) < 1.00e-06 2.32e-06 < 1.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-682319508
https://github.com/psi4/psi4/pull/1980#issuecomment-682319508:1049,Testability,test,tests,1049," bullet in https://github.com/psi4/psi4/pull/1980#issuecomment-677068760, post-Jonathon's mograd correction. I tried ""healing"" the other rms arithmetic grepped above, but it made no effect on iteration values. Interestingly, the internal array `rms()` fn is also `sqrt(sq) / n` rather than `sqrt(sq / n)`. Below are the 9 olccd r/u/ro ae 3 dz/adz/qz2p tests in occ. ""E"" is the scale for `tol_Eod` from `e_convergence` in `if (rms_wog < tol_grad && biggest_mograd < mograd_max && std::fabs(DE) < (1.0 * tol_Eod)) break;`. ""G"" is the floor (replacing 4.0) for mograd `tol_grad` in. ```; if (options_[""RMS_MOGRAD_CONVERGENCE""].has_changed()) {; tol_grad = options_.get_double(""RMS_MOGRAD_CONVERGENCE"");; } else {; double temp;; temp = (-0.9 * std::log10(tol_Eod)) - 1.6;; if (temp < 4.0) {; temp = 4.0;; }; tol_grad = pow(10.0, -temp);; // tol_grad = 100.0*tol_Eod;; outfile->Printf(""\tFor this energy convergence, default RMS orbital gradient is: %12.2e\n"", tol_grad);; ```. Without interventions (first block below), 2 tests fail. Iterations range is 8-11. This is unchanged from before #1988 because the iterations are E-limited. With my first proposed intervention of meddling with E by 0.1 (middle block below), that heals everything but at a cost of nearly 3 more iterations; range 10-14. Meddling with G instead (third block below) by flooring at 6 fixes everything in avg of 1 more iteration; range 8-12. Plus G is at least all positive, rather than E, which can trigger convergence on small energy _increases_. So I've switched this PR to to the third block case. Note that iteration studies have been looking at olccd only; it may be worth examining # iter for other oo methods that were fine before this PR. E 1.0 G 4 (2 fail) avg 9.6 -- pre PR; ```; iter: abs( 3.92e-07) < 1.00e-06 8.04e-07 < 1.00e-04 8; iter: abs( 8.96e-07) < 1.00e-06 2.11e-06 < 1.00e-04 8; iter: abs( 4.92e-07) < 1.00e-06 2.03e-07 < 1.00e-04 10; iter: abs( 1.04e-09) < 1.00e-06 2.32e-06 < 1.00e-04 10; iter: abs( 8.83e-07)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-682319508
https://github.com/psi4/psi4/pull/1980#issuecomment-682990959:156,Energy Efficiency,energy,energy,156,"I don't see much more I can do here. The convergence behavior seems perfectly reasonable to me. It's just an annoying case where the next step changing the energy by less than 1e-6 doesn't mean you're within 1e-6 of the converged energy. Do you just need me to check if I agree with the new treatment of `occ` convergence?. The other point which may be valuable for test suite purposes is that there are multiple LCCD energy functions. There's the projective function (linearize the normal CCD energy function) and the variational function (just use the Lagrangian). The projective function is simple but non-variational, where the variational function is variational but as implemented in `occ` reads multiple V^4 quantities from disk. I believe the variational functional is the default in fnocc, but I'd need to read over the code to be certain. I assume Eugene's version doesn't run into the V^4 problem... If you want to try the variational function in the test suite, `set ccl_energy true`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-682990959
https://github.com/psi4/psi4/pull/1980#issuecomment-682990959:230,Energy Efficiency,energy,energy,230,"I don't see much more I can do here. The convergence behavior seems perfectly reasonable to me. It's just an annoying case where the next step changing the energy by less than 1e-6 doesn't mean you're within 1e-6 of the converged energy. Do you just need me to check if I agree with the new treatment of `occ` convergence?. The other point which may be valuable for test suite purposes is that there are multiple LCCD energy functions. There's the projective function (linearize the normal CCD energy function) and the variational function (just use the Lagrangian). The projective function is simple but non-variational, where the variational function is variational but as implemented in `occ` reads multiple V^4 quantities from disk. I believe the variational functional is the default in fnocc, but I'd need to read over the code to be certain. I assume Eugene's version doesn't run into the V^4 problem... If you want to try the variational function in the test suite, `set ccl_energy true`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-682990959
https://github.com/psi4/psi4/pull/1980#issuecomment-682990959:418,Energy Efficiency,energy,energy,418,"I don't see much more I can do here. The convergence behavior seems perfectly reasonable to me. It's just an annoying case where the next step changing the energy by less than 1e-6 doesn't mean you're within 1e-6 of the converged energy. Do you just need me to check if I agree with the new treatment of `occ` convergence?. The other point which may be valuable for test suite purposes is that there are multiple LCCD energy functions. There's the projective function (linearize the normal CCD energy function) and the variational function (just use the Lagrangian). The projective function is simple but non-variational, where the variational function is variational but as implemented in `occ` reads multiple V^4 quantities from disk. I believe the variational functional is the default in fnocc, but I'd need to read over the code to be certain. I assume Eugene's version doesn't run into the V^4 problem... If you want to try the variational function in the test suite, `set ccl_energy true`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-682990959
https://github.com/psi4/psi4/pull/1980#issuecomment-682990959:494,Energy Efficiency,energy,energy,494,"I don't see much more I can do here. The convergence behavior seems perfectly reasonable to me. It's just an annoying case where the next step changing the energy by less than 1e-6 doesn't mean you're within 1e-6 of the converged energy. Do you just need me to check if I agree with the new treatment of `occ` convergence?. The other point which may be valuable for test suite purposes is that there are multiple LCCD energy functions. There's the projective function (linearize the normal CCD energy function) and the variational function (just use the Lagrangian). The projective function is simple but non-variational, where the variational function is variational but as implemented in `occ` reads multiple V^4 quantities from disk. I believe the variational functional is the default in fnocc, but I'd need to read over the code to be certain. I assume Eugene's version doesn't run into the V^4 problem... If you want to try the variational function in the test suite, `set ccl_energy true`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-682990959
https://github.com/psi4/psi4/pull/1980#issuecomment-682990959:366,Testability,test,test,366,"I don't see much more I can do here. The convergence behavior seems perfectly reasonable to me. It's just an annoying case where the next step changing the energy by less than 1e-6 doesn't mean you're within 1e-6 of the converged energy. Do you just need me to check if I agree with the new treatment of `occ` convergence?. The other point which may be valuable for test suite purposes is that there are multiple LCCD energy functions. There's the projective function (linearize the normal CCD energy function) and the variational function (just use the Lagrangian). The projective function is simple but non-variational, where the variational function is variational but as implemented in `occ` reads multiple V^4 quantities from disk. I believe the variational functional is the default in fnocc, but I'd need to read over the code to be certain. I assume Eugene's version doesn't run into the V^4 problem... If you want to try the variational function in the test suite, `set ccl_energy true`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-682990959
https://github.com/psi4/psi4/pull/1980#issuecomment-682990959:962,Testability,test,test,962,"I don't see much more I can do here. The convergence behavior seems perfectly reasonable to me. It's just an annoying case where the next step changing the energy by less than 1e-6 doesn't mean you're within 1e-6 of the converged energy. Do you just need me to check if I agree with the new treatment of `occ` convergence?. The other point which may be valuable for test suite purposes is that there are multiple LCCD energy functions. There's the projective function (linearize the normal CCD energy function) and the variational function (just use the Lagrangian). The projective function is simple but non-variational, where the variational function is variational but as implemented in `occ` reads multiple V^4 quantities from disk. I believe the variational functional is the default in fnocc, but I'd need to read over the code to be certain. I assume Eugene's version doesn't run into the V^4 problem... If you want to try the variational function in the test suite, `set ccl_energy true`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-682990959
https://github.com/psi4/psi4/pull/1980#issuecomment-682990959:594,Usability,simpl,simple,594,"I don't see much more I can do here. The convergence behavior seems perfectly reasonable to me. It's just an annoying case where the next step changing the energy by less than 1e-6 doesn't mean you're within 1e-6 of the converged energy. Do you just need me to check if I agree with the new treatment of `occ` convergence?. The other point which may be valuable for test suite purposes is that there are multiple LCCD energy functions. There's the projective function (linearize the normal CCD energy function) and the variational function (just use the Lagrangian). The projective function is simple but non-variational, where the variational function is variational but as implemented in `occ` reads multiple V^4 quantities from disk. I believe the variational functional is the default in fnocc, but I'd need to read over the code to be certain. I assume Eugene's version doesn't run into the V^4 problem... If you want to try the variational function in the test suite, `set ccl_energy true`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-682990959
https://github.com/psi4/psi4/issues/1983#issuecomment-676629074:102,Availability,error,errors,102,"Yes, `print_out()`s vastly outnumber `printf`s or `print()`s, but there are still a few, with options errors (""Did you mean ...?"") and optimization reports being the most likely encountered. They were left because they were thought helpful for non-background runs and there weren't downsides. Looks like you've found one. (I guess I always redirect with background & disown.) The optimization printing should go away with the switch to pyoptking and the ddd driver. Sounds like considering a purge of other direct printing then would be good, too. Good to leave this open. Thanks for the report.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1983#issuecomment-676629074
https://github.com/psi4/psi4/issues/1983#issuecomment-676629074:282,Availability,down,downsides,282,"Yes, `print_out()`s vastly outnumber `printf`s or `print()`s, but there are still a few, with options errors (""Did you mean ...?"") and optimization reports being the most likely encountered. They were left because they were thought helpful for non-background runs and there weren't downsides. Looks like you've found one. (I guess I always redirect with background & disown.) The optimization printing should go away with the switch to pyoptking and the ddd driver. Sounds like considering a purge of other direct printing then would be good, too. Good to leave this open. Thanks for the report.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1983#issuecomment-676629074
https://github.com/psi4/psi4/issues/1983#issuecomment-676629074:135,Performance,optimiz,optimization,135,"Yes, `print_out()`s vastly outnumber `printf`s or `print()`s, but there are still a few, with options errors (""Did you mean ...?"") and optimization reports being the most likely encountered. They were left because they were thought helpful for non-background runs and there weren't downsides. Looks like you've found one. (I guess I always redirect with background & disown.) The optimization printing should go away with the switch to pyoptking and the ddd driver. Sounds like considering a purge of other direct printing then would be good, too. Good to leave this open. Thanks for the report.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1983#issuecomment-676629074
https://github.com/psi4/psi4/issues/1983#issuecomment-676629074:380,Performance,optimiz,optimization,380,"Yes, `print_out()`s vastly outnumber `printf`s or `print()`s, but there are still a few, with options errors (""Did you mean ...?"") and optimization reports being the most likely encountered. They were left because they were thought helpful for non-background runs and there weren't downsides. Looks like you've found one. (I guess I always redirect with background & disown.) The optimization printing should go away with the switch to pyoptking and the ddd driver. Sounds like considering a purge of other direct printing then would be good, too. Good to leave this open. Thanks for the report.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1983#issuecomment-676629074
https://github.com/psi4/psi4/issues/1983#issuecomment-677268394:23,Safety,safe,safer,23,"Another, and generally safer, option is to use `nohup psi4 &` on remote machines as this will always decouple `stdout` from the job, something `disown` is not doing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1983#issuecomment-677268394
https://github.com/psi4/psi4/issues/1983#issuecomment-677612812:171,Testability,log,logout,171,"In my experience (at least on remote hosts running relatively modern versions of Ubuntu derivatives, 18.04 and up), starting a process in the background and then doing a `logout` keeps the process running indefinitely. Simply closing the Putty window, etc. does not, the same happens if the network connection is interrupted, eventually the process will be killed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1983#issuecomment-677612812
https://github.com/psi4/psi4/issues/1983#issuecomment-677612812:219,Usability,Simpl,Simply,219,"In my experience (at least on remote hosts running relatively modern versions of Ubuntu derivatives, 18.04 and up), starting a process in the background and then doing a `logout` keeps the process running indefinitely. Simply closing the Putty window, etc. does not, the same happens if the network connection is interrupted, eventually the process will be killed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1983#issuecomment-677612812
https://github.com/psi4/psi4/issues/1984#issuecomment-678794270:21,Deployability,update,update,21,"Thanks for the quick update! I did try a new conda environment and ran into the same problem, but I had a hunch conda might be using cached packages and I couldn't remember the command to clear them, so I tried using `python=3.7` and that works fine!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1984#issuecomment-678794270
https://github.com/psi4/psi4/issues/1984#issuecomment-678794270:133,Performance,cache,cached,133,"Thanks for the quick update! I did try a new conda environment and ran into the same problem, but I had a hunch conda might be using cached packages and I couldn't remember the command to clear them, so I tried using `python=3.7` and that works fine!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1984#issuecomment-678794270
https://github.com/psi4/psi4/issues/1984#issuecomment-678794270:188,Usability,clear,clear,188,"Thanks for the quick update! I did try a new conda environment and ran into the same problem, but I had a hunch conda might be using cached packages and I couldn't remember the command to clear them, so I tried using `python=3.7` and that works fine!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1984#issuecomment-678794270
https://github.com/psi4/psi4/issues/1985#issuecomment-679397520:1226,Energy Efficiency,schedul,scheduler,1226,"may have found a memory allocation/usage bug. What kind of; computation is this?. Unfortunately we don't really have a way to estimate scratch usage at; present. It's a feature we'd like to add, but it needs to be added for; every module separately, so is a somewhat daunting task. In principle, can; be known ahead of time based on number of basis functions, number of atoms,; etc., but is different for every method (and sometimes depends on the; particular algorithm used within that method). On Mon, Aug 24, 2020 at 5:55 PM David Slochower <notifications@github.com>; wrote:. > I see memory usage significantly above psi4.set_memory() limit. I do see; > the note in the documentation that memory usage might be *slightly*; > higher, but if I even request within 20% of a node's total memory; > (requesting 300 out of ~376 GB), I risk crashing the entire node. Even now,; > running with psi4.set_memory(""200 GB""), I see persistent VIRT usage of; > 259 GB and RES 256 GB. I know that determining the *actual* amount of memory; > consumed by a process is tricky; > <https://stackoverflow.com/questions/131303/how-to-measure-actual-memory-usage-of-an-application-or-process>,; > but this is important to me to prevent the scheduler from killing my jobs.; > After some troubleshooting, I am requesting 300 GB from the scheduler, but; > 200 GB from psi4, and end up with ~260 GB used. Is this expected?; >; > Relatedly, but separate, is there a way to estimate what the scratch file; > size may be? I was planning to use node-local storage until I found out my; > scratch files are 1.5+ TB. Any rule of thumb way of estimating this ahead; > of time (number of atoms × level of theory × some magic thing?); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1985>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5WFYJDHW36AZTXMGCDSCLOVDANCNFSM4QJ6TFCA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1985#issuecomment-679397520
https://github.com/psi4/psi4/issues/1985#issuecomment-679397520:1321,Energy Efficiency,schedul,scheduler,1321,"may have found a memory allocation/usage bug. What kind of; computation is this?. Unfortunately we don't really have a way to estimate scratch usage at; present. It's a feature we'd like to add, but it needs to be added for; every module separately, so is a somewhat daunting task. In principle, can; be known ahead of time based on number of basis functions, number of atoms,; etc., but is different for every method (and sometimes depends on the; particular algorithm used within that method). On Mon, Aug 24, 2020 at 5:55 PM David Slochower <notifications@github.com>; wrote:. > I see memory usage significantly above psi4.set_memory() limit. I do see; > the note in the documentation that memory usage might be *slightly*; > higher, but if I even request within 20% of a node's total memory; > (requesting 300 out of ~376 GB), I risk crashing the entire node. Even now,; > running with psi4.set_memory(""200 GB""), I see persistent VIRT usage of; > 259 GB and RES 256 GB. I know that determining the *actual* amount of memory; > consumed by a process is tricky; > <https://stackoverflow.com/questions/131303/how-to-measure-actual-memory-usage-of-an-application-or-process>,; > but this is important to me to prevent the scheduler from killing my jobs.; > After some troubleshooting, I am requesting 300 GB from the scheduler, but; > 200 GB from psi4, and end up with ~260 GB used. Is this expected?; >; > Relatedly, but separate, is there a way to estimate what the scratch file; > size may be? I was planning to use node-local storage until I found out my; > scratch files are 1.5+ TB. Any rule of thumb way of estimating this ahead; > of time (number of atoms × level of theory × some magic thing?); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1985>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5WFYJDHW36AZTXMGCDSCLOVDANCNFSM4QJ6TFCA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1985#issuecomment-679397520
https://github.com/psi4/psi4/issues/1985#issuecomment-679397520:437,Integrability,depend,depends,437,"You may have found a memory allocation/usage bug. What kind of; computation is this?. Unfortunately we don't really have a way to estimate scratch usage at; present. It's a feature we'd like to add, but it needs to be added for; every module separately, so is a somewhat daunting task. In principle, can; be known ahead of time based on number of basis functions, number of atoms,; etc., but is different for every method (and sometimes depends on the; particular algorithm used within that method). On Mon, Aug 24, 2020 at 5:55 PM David Slochower <notifications@github.com>; wrote:. > I see memory usage significantly above psi4.set_memory() limit. I do see; > the note in the documentation that memory usage might be *slightly*; > higher, but if I even request within 20% of a node's total memory; > (requesting 300 out of ~376 GB), I risk crashing the entire node. Even now,; > running with psi4.set_memory(""200 GB""), I see persistent VIRT usage of; > 259 GB and RES 256 GB. I know that determining the *actual* amount of memory; > consumed by a process is tricky; > <https://stackoverflow.com/questions/131303/how-to-measure-actual-memory-usage-of-an-application-or-process>,; > but this is important to me to prevent the scheduler from killing my jobs.; > After some troubleshooting, I am requesting 300 GB from the scheduler, but; > 200 GB from psi4, and end up with ~260 GB used. Is this expected?; >; > Relatedly, but separate, is there a way to estimate what the scratch file; > size may be? I was planning to use node-local storage until I found out my; > scratch files are 1.5+ TB. Any rule of thumb way of estimating this ahead; > of time (number of atoms × level of theory × some magic thing?); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1985>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5WFYJDHW36AZTXMGCDSCLOVDANCNFSM4QJ6TFCA>; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1985#issuecomment-679397520
https://github.com/psi4/psi4/issues/1985#issuecomment-679397520:837,Safety,risk,risk,837,"You may have found a memory allocation/usage bug. What kind of; computation is this?. Unfortunately we don't really have a way to estimate scratch usage at; present. It's a feature we'd like to add, but it needs to be added for; every module separately, so is a somewhat daunting task. In principle, can; be known ahead of time based on number of basis functions, number of atoms,; etc., but is different for every method (and sometimes depends on the; particular algorithm used within that method). On Mon, Aug 24, 2020 at 5:55 PM David Slochower <notifications@github.com>; wrote:. > I see memory usage significantly above psi4.set_memory() limit. I do see; > the note in the documentation that memory usage might be *slightly*; > higher, but if I even request within 20% of a node's total memory; > (requesting 300 out of ~376 GB), I risk crashing the entire node. Even now,; > running with psi4.set_memory(""200 GB""), I see persistent VIRT usage of; > 259 GB and RES 256 GB. I know that determining the *actual* amount of memory; > consumed by a process is tricky; > <https://stackoverflow.com/questions/131303/how-to-measure-actual-memory-usage-of-an-application-or-process>,; > but this is important to me to prevent the scheduler from killing my jobs.; > After some troubleshooting, I am requesting 300 GB from the scheduler, but; > 200 GB from psi4, and end up with ~260 GB used. Is this expected?; >; > Relatedly, but separate, is there a way to estimate what the scratch file; > size may be? I was planning to use node-local storage until I found out my; > scratch files are 1.5+ TB. Any rule of thumb way of estimating this ahead; > of time (number of atoms × level of theory × some magic thing?); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1985>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5WFYJDHW36AZTXMGCDSCLOVDANCNFSM4QJ6TFCA>; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1985#issuecomment-679397520
https://github.com/psi4/psi4/issues/1985#issuecomment-679407019:27,Energy Efficiency,energy,energy,27,"I'm running a single point energy calculation with `psi4.energy(""ccsd(t)/aug-cc-pvdz"")`. . The input is simple. Just:. ```; import psi4; from psi4 import *. psi4.core.set_output_file('xxx.dat', False). psi4.set_memory('200 GB'); psi4_io = core.IOManager.shared_object(); psi4_io.set_default_path(""xxx""); psi4.set_num_threads(24); ```; followed by the molecule specification with `psi4.geometry()` and then; ```; psi4.energy(""ccsd(t)/aug-cc-pvdz""); ```. (I know this will take a lot of memory and disk space, but I believe the memory limit should stand.). - psi4 version 1.3.2 in a new python 3.7 conda environment; - RHEL 7.6",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1985#issuecomment-679407019
https://github.com/psi4/psi4/issues/1985#issuecomment-679407019:57,Energy Efficiency,energy,energy,57,"I'm running a single point energy calculation with `psi4.energy(""ccsd(t)/aug-cc-pvdz"")`. . The input is simple. Just:. ```; import psi4; from psi4 import *. psi4.core.set_output_file('xxx.dat', False). psi4.set_memory('200 GB'); psi4_io = core.IOManager.shared_object(); psi4_io.set_default_path(""xxx""); psi4.set_num_threads(24); ```; followed by the molecule specification with `psi4.geometry()` and then; ```; psi4.energy(""ccsd(t)/aug-cc-pvdz""); ```. (I know this will take a lot of memory and disk space, but I believe the memory limit should stand.). - psi4 version 1.3.2 in a new python 3.7 conda environment; - RHEL 7.6",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1985#issuecomment-679407019
https://github.com/psi4/psi4/issues/1985#issuecomment-679407019:417,Energy Efficiency,energy,energy,417,"I'm running a single point energy calculation with `psi4.energy(""ccsd(t)/aug-cc-pvdz"")`. . The input is simple. Just:. ```; import psi4; from psi4 import *. psi4.core.set_output_file('xxx.dat', False). psi4.set_memory('200 GB'); psi4_io = core.IOManager.shared_object(); psi4_io.set_default_path(""xxx""); psi4.set_num_threads(24); ```; followed by the molecule specification with `psi4.geometry()` and then; ```; psi4.energy(""ccsd(t)/aug-cc-pvdz""); ```. (I know this will take a lot of memory and disk space, but I believe the memory limit should stand.). - psi4 version 1.3.2 in a new python 3.7 conda environment; - RHEL 7.6",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1985#issuecomment-679407019
https://github.com/psi4/psi4/issues/1985#issuecomment-679407019:104,Usability,simpl,simple,104,"I'm running a single point energy calculation with `psi4.energy(""ccsd(t)/aug-cc-pvdz"")`. . The input is simple. Just:. ```; import psi4; from psi4 import *. psi4.core.set_output_file('xxx.dat', False). psi4.set_memory('200 GB'); psi4_io = core.IOManager.shared_object(); psi4_io.set_default_path(""xxx""); psi4.set_num_threads(24); ```; followed by the molecule specification with `psi4.geometry()` and then; ```; psi4.energy(""ccsd(t)/aug-cc-pvdz""); ```. (I know this will take a lot of memory and disk space, but I believe the memory limit should stand.). - psi4 version 1.3.2 in a new python 3.7 conda environment; - RHEL 7.6",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1985#issuecomment-679407019
https://github.com/psi4/psi4/issues/1985#issuecomment-680250558:248,Testability,test,test,248,Thanks! This *is* a large calculation (>900bfs) and I fear the conventional CCSD(T) will struggle with disk space and disk I/O once the current slow task of writing the 2e-ints to disk (again) is done.; I have an idea what is happening but need to test it.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1985#issuecomment-680250558
https://github.com/psi4/psi4/issues/1985#issuecomment-683189230:38,Testability,test,test,38,"Thanks, @hokru. I haven't had time to test the particular fix on my job yet, but I appreciate the effort and also the tips :) Feel free to close this issue if you feel like the PR is sufficient.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1985#issuecomment-683189230
https://github.com/psi4/psi4/issues/1987#issuecomment-719726946:186,Availability,error,error,186,"Thanks for fixing that one! I have found another however which comes up when I request to save all wavefunction properties via QCEngine using the latest dev version of psi4, here is the error message.; ```; QCEngine Input Error: Traceback (most recent call last):; File ""/Users/joshua/miniconda3/envs/psi4/lib//python3.8/site-packages/psi4/driver/schema_wrapper.py"", line 410, in run_qcschema; ret = qcel.models.AtomicResult(**ret_data, stdout=_read_output(outfile)); File ""pydantic/main.py"", line 274, in pydantic.main.BaseModel.__init__\npydantic.error_wrappers.ValidationError: 1 validation error for AtomicResult\nwavefunction -> occupations_a; Return quantity scf_occupations_a does not exist in the values. (type=value_error); ```. I think this is related to the lines here which pulls out the occupations which have been commented out I am not sure if these simply need to be uncommented or if there is some formatting that needs to be worked out https://github.com/psi4/psi4/blob/670a85012a2864dd6673ac4a39243156205c500e/psi4/driver/schema_wrapper.py#L344. ccing @dgasmith in case he knows the status of this. @hokru could you please re-open this issue or should I make a new one.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1987#issuecomment-719726946
https://github.com/psi4/psi4/issues/1987#issuecomment-719726946:222,Availability,Error,Error,222,"Thanks for fixing that one! I have found another however which comes up when I request to save all wavefunction properties via QCEngine using the latest dev version of psi4, here is the error message.; ```; QCEngine Input Error: Traceback (most recent call last):; File ""/Users/joshua/miniconda3/envs/psi4/lib//python3.8/site-packages/psi4/driver/schema_wrapper.py"", line 410, in run_qcschema; ret = qcel.models.AtomicResult(**ret_data, stdout=_read_output(outfile)); File ""pydantic/main.py"", line 274, in pydantic.main.BaseModel.__init__\npydantic.error_wrappers.ValidationError: 1 validation error for AtomicResult\nwavefunction -> occupations_a; Return quantity scf_occupations_a does not exist in the values. (type=value_error); ```. I think this is related to the lines here which pulls out the occupations which have been commented out I am not sure if these simply need to be uncommented or if there is some formatting that needs to be worked out https://github.com/psi4/psi4/blob/670a85012a2864dd6673ac4a39243156205c500e/psi4/driver/schema_wrapper.py#L344. ccing @dgasmith in case he knows the status of this. @hokru could you please re-open this issue or should I make a new one.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1987#issuecomment-719726946
https://github.com/psi4/psi4/issues/1987#issuecomment-719726946:594,Availability,error,error,594,"Thanks for fixing that one! I have found another however which comes up when I request to save all wavefunction properties via QCEngine using the latest dev version of psi4, here is the error message.; ```; QCEngine Input Error: Traceback (most recent call last):; File ""/Users/joshua/miniconda3/envs/psi4/lib//python3.8/site-packages/psi4/driver/schema_wrapper.py"", line 410, in run_qcschema; ret = qcel.models.AtomicResult(**ret_data, stdout=_read_output(outfile)); File ""pydantic/main.py"", line 274, in pydantic.main.BaseModel.__init__\npydantic.error_wrappers.ValidationError: 1 validation error for AtomicResult\nwavefunction -> occupations_a; Return quantity scf_occupations_a does not exist in the values. (type=value_error); ```. I think this is related to the lines here which pulls out the occupations which have been commented out I am not sure if these simply need to be uncommented or if there is some formatting that needs to be worked out https://github.com/psi4/psi4/blob/670a85012a2864dd6673ac4a39243156205c500e/psi4/driver/schema_wrapper.py#L344. ccing @dgasmith in case he knows the status of this. @hokru could you please re-open this issue or should I make a new one.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1987#issuecomment-719726946
https://github.com/psi4/psi4/issues/1987#issuecomment-719726946:192,Integrability,message,message,192,"Thanks for fixing that one! I have found another however which comes up when I request to save all wavefunction properties via QCEngine using the latest dev version of psi4, here is the error message.; ```; QCEngine Input Error: Traceback (most recent call last):; File ""/Users/joshua/miniconda3/envs/psi4/lib//python3.8/site-packages/psi4/driver/schema_wrapper.py"", line 410, in run_qcschema; ret = qcel.models.AtomicResult(**ret_data, stdout=_read_output(outfile)); File ""pydantic/main.py"", line 274, in pydantic.main.BaseModel.__init__\npydantic.error_wrappers.ValidationError: 1 validation error for AtomicResult\nwavefunction -> occupations_a; Return quantity scf_occupations_a does not exist in the values. (type=value_error); ```. I think this is related to the lines here which pulls out the occupations which have been commented out I am not sure if these simply need to be uncommented or if there is some formatting that needs to be worked out https://github.com/psi4/psi4/blob/670a85012a2864dd6673ac4a39243156205c500e/psi4/driver/schema_wrapper.py#L344. ccing @dgasmith in case he knows the status of this. @hokru could you please re-open this issue or should I make a new one.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1987#issuecomment-719726946
https://github.com/psi4/psi4/issues/1987#issuecomment-719726946:564,Security,Validat,ValidationError,564,"Thanks for fixing that one! I have found another however which comes up when I request to save all wavefunction properties via QCEngine using the latest dev version of psi4, here is the error message.; ```; QCEngine Input Error: Traceback (most recent call last):; File ""/Users/joshua/miniconda3/envs/psi4/lib//python3.8/site-packages/psi4/driver/schema_wrapper.py"", line 410, in run_qcschema; ret = qcel.models.AtomicResult(**ret_data, stdout=_read_output(outfile)); File ""pydantic/main.py"", line 274, in pydantic.main.BaseModel.__init__\npydantic.error_wrappers.ValidationError: 1 validation error for AtomicResult\nwavefunction -> occupations_a; Return quantity scf_occupations_a does not exist in the values. (type=value_error); ```. I think this is related to the lines here which pulls out the occupations which have been commented out I am not sure if these simply need to be uncommented or if there is some formatting that needs to be worked out https://github.com/psi4/psi4/blob/670a85012a2864dd6673ac4a39243156205c500e/psi4/driver/schema_wrapper.py#L344. ccing @dgasmith in case he knows the status of this. @hokru could you please re-open this issue or should I make a new one.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1987#issuecomment-719726946
https://github.com/psi4/psi4/issues/1987#issuecomment-719726946:583,Security,validat,validation,583,"Thanks for fixing that one! I have found another however which comes up when I request to save all wavefunction properties via QCEngine using the latest dev version of psi4, here is the error message.; ```; QCEngine Input Error: Traceback (most recent call last):; File ""/Users/joshua/miniconda3/envs/psi4/lib//python3.8/site-packages/psi4/driver/schema_wrapper.py"", line 410, in run_qcschema; ret = qcel.models.AtomicResult(**ret_data, stdout=_read_output(outfile)); File ""pydantic/main.py"", line 274, in pydantic.main.BaseModel.__init__\npydantic.error_wrappers.ValidationError: 1 validation error for AtomicResult\nwavefunction -> occupations_a; Return quantity scf_occupations_a does not exist in the values. (type=value_error); ```. I think this is related to the lines here which pulls out the occupations which have been commented out I am not sure if these simply need to be uncommented or if there is some formatting that needs to be worked out https://github.com/psi4/psi4/blob/670a85012a2864dd6673ac4a39243156205c500e/psi4/driver/schema_wrapper.py#L344. ccing @dgasmith in case he knows the status of this. @hokru could you please re-open this issue or should I make a new one.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1987#issuecomment-719726946
https://github.com/psi4/psi4/issues/1987#issuecomment-719726946:865,Usability,simpl,simply,865,"Thanks for fixing that one! I have found another however which comes up when I request to save all wavefunction properties via QCEngine using the latest dev version of psi4, here is the error message.; ```; QCEngine Input Error: Traceback (most recent call last):; File ""/Users/joshua/miniconda3/envs/psi4/lib//python3.8/site-packages/psi4/driver/schema_wrapper.py"", line 410, in run_qcschema; ret = qcel.models.AtomicResult(**ret_data, stdout=_read_output(outfile)); File ""pydantic/main.py"", line 274, in pydantic.main.BaseModel.__init__\npydantic.error_wrappers.ValidationError: 1 validation error for AtomicResult\nwavefunction -> occupations_a; Return quantity scf_occupations_a does not exist in the values. (type=value_error); ```. I think this is related to the lines here which pulls out the occupations which have been commented out I am not sure if these simply need to be uncommented or if there is some formatting that needs to be worked out https://github.com/psi4/psi4/blob/670a85012a2864dd6673ac4a39243156205c500e/psi4/driver/schema_wrapper.py#L344. ccing @dgasmith in case he knows the status of this. @hokru could you please re-open this issue or should I make a new one.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1987#issuecomment-719726946
https://github.com/psi4/psi4/issues/1987#issuecomment-729694797:31,Availability,error,error,31,"Yeah, that `scf_occupations_a` error is exactly what #2036 should fix, I didn't realize an issue had already been raised",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1987#issuecomment-729694797
https://github.com/psi4/psi4/issues/1989#issuecomment-680921886:36,Usability,simpl,simpler,36,He in STO-3G-decon is maybe an even simpler example.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1989#issuecomment-680921886
https://github.com/psi4/psi4/issues/1989#issuecomment-680945095:361,Integrability,contract,contract,361,"The original basis is SO. The behavior for D and F are different because ""AO basis quantities"" mean different things for those two cases. For the F matrix, ""AO basis"" means that you have a formula in terms of one-electron functions, and you just throw those in. To change basis, you just linearity. F_pq = C_mu,p C_nu,q F_mu,nu. For D, ""AO basis"" means ""if you contract this against an AO basis integral, you'll get the same result as if you had contracted an MO basis quantity against MO basis integral."" In that case, D_mu,nu F_mu,nu = D_p,q F_p,q = D_p,q C_mu,p C_nu,q F_mu,nu, so we end with D_mu,nu = C_mu,p C_nu,q D_p,q. Note that it _differs_ whether you need to contract your C matrices against the AO or the MO basis quantity.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1989#issuecomment-680945095
https://github.com/psi4/psi4/issues/1989#issuecomment-680945095:446,Integrability,contract,contracted,446,"The original basis is SO. The behavior for D and F are different because ""AO basis quantities"" mean different things for those two cases. For the F matrix, ""AO basis"" means that you have a formula in terms of one-electron functions, and you just throw those in. To change basis, you just linearity. F_pq = C_mu,p C_nu,q F_mu,nu. For D, ""AO basis"" means ""if you contract this against an AO basis integral, you'll get the same result as if you had contracted an MO basis quantity against MO basis integral."" In that case, D_mu,nu F_mu,nu = D_p,q F_p,q = D_p,q C_mu,p C_nu,q F_mu,nu, so we end with D_mu,nu = C_mu,p C_nu,q D_p,q. Note that it _differs_ whether you need to contract your C matrices against the AO or the MO basis quantity.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1989#issuecomment-680945095
https://github.com/psi4/psi4/issues/1989#issuecomment-680945095:670,Integrability,contract,contract,670,"The original basis is SO. The behavior for D and F are different because ""AO basis quantities"" mean different things for those two cases. For the F matrix, ""AO basis"" means that you have a formula in terms of one-electron functions, and you just throw those in. To change basis, you just linearity. F_pq = C_mu,p C_nu,q F_mu,nu. For D, ""AO basis"" means ""if you contract this against an AO basis integral, you'll get the same result as if you had contracted an MO basis quantity against MO basis integral."" In that case, D_mu,nu F_mu,nu = D_p,q F_p,q = D_p,q C_mu,p C_nu,q F_mu,nu, so we end with D_mu,nu = C_mu,p C_nu,q D_p,q. Note that it _differs_ whether you need to contract your C matrices against the AO or the MO basis quantity.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1989#issuecomment-680945095
https://github.com/psi4/psi4/issues/1989#issuecomment-1533272699:383,Energy Efficiency,energy,energy,383,"Hi All, . I see that this issue is still open. I was wondering if there is a current work around? I tried some simple experiments to see if it was still producing the incorrect output:; `> psi4 --version`; `1.7`; input file contents:; ```; mol = psi4.geometry(""""""; H 0.000 0.000 0.000; H 0.000 0.000 0.740; Symmetry c1; """"""); psi4.set_options({'basis': 'sto-3g'}); scf_e, wfn = psi4.energy('SCF', return_wfn=True); print(""MO coefficients""); print(wfn.Ca().to_array()); print(""Fock in the AO basis""); print(wfn.Fa_subset(""AO"").to_array()); print(""Fock in the MO basis""); print(wfn.Fa_subset(""MO"").to_array()); ```; this gives the following output:; ```; MO coefficients ; [[ 0.54884228 1.21245192]; [ 0.54884228 -1.21245192]]; Fock in the AO basis; [[-0.36607883 -0.59428702]; [-0.59428702 -0.36607883]]; Fock in the MO basis; [[-1.59408547e+00 8.04278118e-16]; [ 7.39285035e-16 7.76197397e-02]]; ```; and in the output file; ```; Orbital Energies [Eh]; ---------------------; Doubly Occupied: ; 1A -0.578578 ; Virtual: ; 2A 0.670950 ; @DF-RHF Final Energy: -1.11678331788308; ```; the orbital energies in the output file are correct, which should be the diagonal elements of the Fock matrix in the MO basis, but these are different. . I check the AO and MO coefficients produced by two other QM programs (pyscf is below) to see where the inconsistency might be, they both produced the ""correct"" Fock matrix (i.e. the diagnoal elements in the MO basis are the orbital energies) with the following MO coefficients:; pyscf input; ```; import numpy; from pyscf import gto, scf, lo. geometry = '''; H 0.000 0.000 0.000; H 0.000 0.000 0.740; ''' . mol = gto.M(atom=geometry,; basis='STO-3G') ; mf = scf.RHF(mol); mf.kernel(); print(mf.kernel()); Fao = mf.get_fock(); print(""MO coefficients""); print(mf.mo_coeff); print(""Fock in AO basis""); print(Fao); Fmo = mf.mo_coeff.T @ Fao @ mf.mo_coeff; print(""Fock in MO basis""); print(Fmo); ```; ```; converged SCF energy = -1.11675930739643; -1.1167593073964255; MO",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1989#issuecomment-1533272699
https://github.com/psi4/psi4/issues/1989#issuecomment-1533272699:1049,Energy Efficiency,Energy,Energy,1049,"en. I was wondering if there is a current work around? I tried some simple experiments to see if it was still producing the incorrect output:; `> psi4 --version`; `1.7`; input file contents:; ```; mol = psi4.geometry(""""""; H 0.000 0.000 0.000; H 0.000 0.000 0.740; Symmetry c1; """"""); psi4.set_options({'basis': 'sto-3g'}); scf_e, wfn = psi4.energy('SCF', return_wfn=True); print(""MO coefficients""); print(wfn.Ca().to_array()); print(""Fock in the AO basis""); print(wfn.Fa_subset(""AO"").to_array()); print(""Fock in the MO basis""); print(wfn.Fa_subset(""MO"").to_array()); ```; this gives the following output:; ```; MO coefficients ; [[ 0.54884228 1.21245192]; [ 0.54884228 -1.21245192]]; Fock in the AO basis; [[-0.36607883 -0.59428702]; [-0.59428702 -0.36607883]]; Fock in the MO basis; [[-1.59408547e+00 8.04278118e-16]; [ 7.39285035e-16 7.76197397e-02]]; ```; and in the output file; ```; Orbital Energies [Eh]; ---------------------; Doubly Occupied: ; 1A -0.578578 ; Virtual: ; 2A 0.670950 ; @DF-RHF Final Energy: -1.11678331788308; ```; the orbital energies in the output file are correct, which should be the diagonal elements of the Fock matrix in the MO basis, but these are different. . I check the AO and MO coefficients produced by two other QM programs (pyscf is below) to see where the inconsistency might be, they both produced the ""correct"" Fock matrix (i.e. the diagnoal elements in the MO basis are the orbital energies) with the following MO coefficients:; pyscf input; ```; import numpy; from pyscf import gto, scf, lo. geometry = '''; H 0.000 0.000 0.000; H 0.000 0.000 0.740; ''' . mol = gto.M(atom=geometry,; basis='STO-3G') ; mf = scf.RHF(mol); mf.kernel(); print(mf.kernel()); Fao = mf.get_fock(); print(""MO coefficients""); print(mf.mo_coeff); print(""Fock in AO basis""); print(Fao); Fmo = mf.mo_coeff.T @ Fao @ mf.mo_coeff; print(""Fock in MO basis""); print(Fmo); ```; ```; converged SCF energy = -1.11675930739643; -1.1167593073964255; MO coefficients; [[ 0.54884228 -1.21245192];",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1989#issuecomment-1533272699
https://github.com/psi4/psi4/issues/1989#issuecomment-1533272699:1950,Energy Efficiency,energy,energy,1950,"`; mol = psi4.geometry(""""""; H 0.000 0.000 0.000; H 0.000 0.000 0.740; Symmetry c1; """"""); psi4.set_options({'basis': 'sto-3g'}); scf_e, wfn = psi4.energy('SCF', return_wfn=True); print(""MO coefficients""); print(wfn.Ca().to_array()); print(""Fock in the AO basis""); print(wfn.Fa_subset(""AO"").to_array()); print(""Fock in the MO basis""); print(wfn.Fa_subset(""MO"").to_array()); ```; this gives the following output:; ```; MO coefficients ; [[ 0.54884228 1.21245192]; [ 0.54884228 -1.21245192]]; Fock in the AO basis; [[-0.36607883 -0.59428702]; [-0.59428702 -0.36607883]]; Fock in the MO basis; [[-1.59408547e+00 8.04278118e-16]; [ 7.39285035e-16 7.76197397e-02]]; ```; and in the output file; ```; Orbital Energies [Eh]; ---------------------; Doubly Occupied: ; 1A -0.578578 ; Virtual: ; 2A 0.670950 ; @DF-RHF Final Energy: -1.11678331788308; ```; the orbital energies in the output file are correct, which should be the diagonal elements of the Fock matrix in the MO basis, but these are different. . I check the AO and MO coefficients produced by two other QM programs (pyscf is below) to see where the inconsistency might be, they both produced the ""correct"" Fock matrix (i.e. the diagnoal elements in the MO basis are the orbital energies) with the following MO coefficients:; pyscf input; ```; import numpy; from pyscf import gto, scf, lo. geometry = '''; H 0.000 0.000 0.000; H 0.000 0.000 0.740; ''' . mol = gto.M(atom=geometry,; basis='STO-3G') ; mf = scf.RHF(mol); mf.kernel(); print(mf.kernel()); Fao = mf.get_fock(); print(""MO coefficients""); print(mf.mo_coeff); print(""Fock in AO basis""); print(Fao); Fmo = mf.mo_coeff.T @ Fao @ mf.mo_coeff; print(""Fock in MO basis""); print(Fmo); ```; ```; converged SCF energy = -1.11675930739643; -1.1167593073964255; MO coefficients; [[ 0.54884228 -1.21245192]; [ 0.54884228 1.21245192]]; Fock in AO basis; [[-0.36602603 -0.59429997]; [-0.59429997 -0.36602603]]; Fock in MO basis; [[-5.78553860e-01 -2.43968808e-16]; [-2.12179326e-16 6.71143492e-01]]. ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1989#issuecomment-1533272699
https://github.com/psi4/psi4/issues/1989#issuecomment-1533272699:111,Usability,simpl,simple,111,"Hi All, . I see that this issue is still open. I was wondering if there is a current work around? I tried some simple experiments to see if it was still producing the incorrect output:; `> psi4 --version`; `1.7`; input file contents:; ```; mol = psi4.geometry(""""""; H 0.000 0.000 0.000; H 0.000 0.000 0.740; Symmetry c1; """"""); psi4.set_options({'basis': 'sto-3g'}); scf_e, wfn = psi4.energy('SCF', return_wfn=True); print(""MO coefficients""); print(wfn.Ca().to_array()); print(""Fock in the AO basis""); print(wfn.Fa_subset(""AO"").to_array()); print(""Fock in the MO basis""); print(wfn.Fa_subset(""MO"").to_array()); ```; this gives the following output:; ```; MO coefficients ; [[ 0.54884228 1.21245192]; [ 0.54884228 -1.21245192]]; Fock in the AO basis; [[-0.36607883 -0.59428702]; [-0.59428702 -0.36607883]]; Fock in the MO basis; [[-1.59408547e+00 8.04278118e-16]; [ 7.39285035e-16 7.76197397e-02]]; ```; and in the output file; ```; Orbital Energies [Eh]; ---------------------; Doubly Occupied: ; 1A -0.578578 ; Virtual: ; 2A 0.670950 ; @DF-RHF Final Energy: -1.11678331788308; ```; the orbital energies in the output file are correct, which should be the diagonal elements of the Fock matrix in the MO basis, but these are different. . I check the AO and MO coefficients produced by two other QM programs (pyscf is below) to see where the inconsistency might be, they both produced the ""correct"" Fock matrix (i.e. the diagnoal elements in the MO basis are the orbital energies) with the following MO coefficients:; pyscf input; ```; import numpy; from pyscf import gto, scf, lo. geometry = '''; H 0.000 0.000 0.000; H 0.000 0.000 0.740; ''' . mol = gto.M(atom=geometry,; basis='STO-3G') ; mf = scf.RHF(mol); mf.kernel(); print(mf.kernel()); Fao = mf.get_fock(); print(""MO coefficients""); print(mf.mo_coeff); print(""Fock in AO basis""); print(Fao); Fmo = mf.mo_coeff.T @ Fao @ mf.mo_coeff; print(""Fock in MO basis""); print(Fmo); ```; ```; converged SCF energy = -1.11675930739643; -1.1167593073964255; MO",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1989#issuecomment-1533272699
https://github.com/psi4/psi4/issues/1989#issuecomment-1533540405:89,Deployability,release,release,89,"How soon do you need this? This bug is an easy fix, and I can include it in the Psi4 1.8 release coming out in a couple weeks. If you need this sooner, the ""workaround"" is simple.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1989#issuecomment-1533540405
https://github.com/psi4/psi4/issues/1989#issuecomment-1533540405:172,Usability,simpl,simple,172,"How soon do you need this? This bug is an easy fix, and I can include it in the Psi4 1.8 release coming out in a couple weeks. If you need this sooner, the ""workaround"" is simple.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1989#issuecomment-1533540405
https://github.com/psi4/psi4/issues/1989#issuecomment-1533558469:237,Testability,test,tests,237,"@JonathonMisiewicz that's great news! I'm in no rush, so I can wait. The purpose of my calculations is to look at Fock, Coulomb and Exchange matrices in different orbital representations (i.e. from some localisation procedure). For your tests have you looked at the J and K matrices as well as orbital rotations? Thanks, Geoff.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1989#issuecomment-1533558469
https://github.com/psi4/psi4/pull/1990#issuecomment-681047414:126,Deployability,pipeline,pipelines,126,"Looks like adcc and I have gotten out of sync, conda-wise. try commenting out https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L102 and OFFing https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L125",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1990#issuecomment-681047414
https://github.com/psi4/psi4/pull/1990#issuecomment-681047414:142,Deployability,pipeline,pipelines-linux,142,"Looks like adcc and I have gotten out of sync, conda-wise. try commenting out https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L102 and OFFing https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L125",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1990#issuecomment-681047414
https://github.com/psi4/psi4/pull/1990#issuecomment-681047414:226,Deployability,pipeline,pipelines,226,"Looks like adcc and I have gotten out of sync, conda-wise. try commenting out https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L102 and OFFing https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L125",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1990#issuecomment-681047414
https://github.com/psi4/psi4/pull/1990#issuecomment-681047414:242,Deployability,pipeline,pipelines-linux,242,"Looks like adcc and I have gotten out of sync, conda-wise. try commenting out https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L102 and OFFing https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L125",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1990#issuecomment-681047414
https://github.com/psi4/psi4/pull/1990#issuecomment-681344451:82,Availability,avail,available,82,"Wow, this would explain some random crashes I got when using `pk` while having no available swap.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1990#issuecomment-681344451
https://github.com/psi4/psi4/pull/1991#issuecomment-683761996:31,Safety,timeout,timeouts,31,"No, I'm still getting `pywrap` timeouts on Windows. Any ideas? I can't debug this readily.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1991#issuecomment-683761996
https://github.com/psi4/psi4/pull/1991#issuecomment-683894617:5,Safety,timeout,timeout,5,"Same timeout as before. `pywrap-alias` doesn't seem to enter `detci`, so I doubt that's the problem. Any other advice on diagnosing this?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1991#issuecomment-683894617
https://github.com/psi4/psi4/pull/1991#issuecomment-683898544:767,Energy Efficiency,energy,energy,767,I think pywrap-alias does use some of detci's more obscure methods (below). I was also remembering a bad bout I had with ddd before last Christmas where Windows only hung up for detci mp5 run only by exe or by api. ```; (py38) >>> grep -e 'PASSED' -e 'D E T C I' ../tests/pywrap-alias/input.out ; [1] Au std...........................................................................PASSED; [2] MP2 sp...........................................................................PASSED; MP2 route check.................................................................PASSED; [3] MP3 occ..........................................................................PASSED; MP3 route check.................................................................PASSED; [4] MP3 detci (energy and route check)...............................................PASSED; [5] MP4 fnocc........................................................................PASSED; (a 'D E T C I' module); [6] MP11 sp..........................................................................PASSED; (a 'D E T C I' module); [7] ZAPT4 sp.........................................................................PASSED; (a 'D E T C I' module); [8] FCI sp...........................................................................PASSED; [9] MP2.5 sp.........................................................................PASSED; [10] cbs()............................................................................PASSED; [11] db().............................................................................PASSED; [12] CISD sp..........................................................................PASSED; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1991#issuecomment-683898544
https://github.com/psi4/psi4/pull/1991#issuecomment-683898544:487,Integrability,rout,route,487,I think pywrap-alias does use some of detci's more obscure methods (below). I was also remembering a bad bout I had with ddd before last Christmas where Windows only hung up for detci mp5 run only by exe or by api. ```; (py38) >>> grep -e 'PASSED' -e 'D E T C I' ../tests/pywrap-alias/input.out ; [1] Au std...........................................................................PASSED; [2] MP2 sp...........................................................................PASSED; MP2 route check.................................................................PASSED; [3] MP3 occ..........................................................................PASSED; MP3 route check.................................................................PASSED; [4] MP3 detci (energy and route check)...............................................PASSED; [5] MP4 fnocc........................................................................PASSED; (a 'D E T C I' module); [6] MP11 sp..........................................................................PASSED; (a 'D E T C I' module); [7] ZAPT4 sp.........................................................................PASSED; (a 'D E T C I' module); [8] FCI sp...........................................................................PASSED; [9] MP2.5 sp.........................................................................PASSED; [10] cbs()............................................................................PASSED; [11] db().............................................................................PASSED; [12] CISD sp..........................................................................PASSED; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1991#issuecomment-683898544
https://github.com/psi4/psi4/pull/1991#issuecomment-683898544:668,Integrability,rout,route,668,I think pywrap-alias does use some of detci's more obscure methods (below). I was also remembering a bad bout I had with ddd before last Christmas where Windows only hung up for detci mp5 run only by exe or by api. ```; (py38) >>> grep -e 'PASSED' -e 'D E T C I' ../tests/pywrap-alias/input.out ; [1] Au std...........................................................................PASSED; [2] MP2 sp...........................................................................PASSED; MP2 route check.................................................................PASSED; [3] MP3 occ..........................................................................PASSED; MP3 route check.................................................................PASSED; [4] MP3 detci (energy and route check)...............................................PASSED; [5] MP4 fnocc........................................................................PASSED; (a 'D E T C I' module); [6] MP11 sp..........................................................................PASSED; (a 'D E T C I' module); [7] ZAPT4 sp.........................................................................PASSED; (a 'D E T C I' module); [8] FCI sp...........................................................................PASSED; [9] MP2.5 sp.........................................................................PASSED; [10] cbs()............................................................................PASSED; [11] db().............................................................................PASSED; [12] CISD sp..........................................................................PASSED; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1991#issuecomment-683898544
https://github.com/psi4/psi4/pull/1991#issuecomment-683898544:778,Integrability,rout,route,778,I think pywrap-alias does use some of detci's more obscure methods (below). I was also remembering a bad bout I had with ddd before last Christmas where Windows only hung up for detci mp5 run only by exe or by api. ```; (py38) >>> grep -e 'PASSED' -e 'D E T C I' ../tests/pywrap-alias/input.out ; [1] Au std...........................................................................PASSED; [2] MP2 sp...........................................................................PASSED; MP2 route check.................................................................PASSED; [3] MP3 occ..........................................................................PASSED; MP3 route check.................................................................PASSED; [4] MP3 detci (energy and route check)...............................................PASSED; [5] MP4 fnocc........................................................................PASSED; (a 'D E T C I' module); [6] MP11 sp..........................................................................PASSED; (a 'D E T C I' module); [7] ZAPT4 sp.........................................................................PASSED; (a 'D E T C I' module); [8] FCI sp...........................................................................PASSED; [9] MP2.5 sp.........................................................................PASSED; [10] cbs()............................................................................PASSED; [11] db().............................................................................PASSED; [12] CISD sp..........................................................................PASSED; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1991#issuecomment-683898544
https://github.com/psi4/psi4/pull/1991#issuecomment-683898544:266,Testability,test,tests,266,I think pywrap-alias does use some of detci's more obscure methods (below). I was also remembering a bad bout I had with ddd before last Christmas where Windows only hung up for detci mp5 run only by exe or by api. ```; (py38) >>> grep -e 'PASSED' -e 'D E T C I' ../tests/pywrap-alias/input.out ; [1] Au std...........................................................................PASSED; [2] MP2 sp...........................................................................PASSED; MP2 route check.................................................................PASSED; [3] MP3 occ..........................................................................PASSED; MP3 route check.................................................................PASSED; [4] MP3 detci (energy and route check)...............................................PASSED; [5] MP4 fnocc........................................................................PASSED; (a 'D E T C I' module); [6] MP11 sp..........................................................................PASSED; (a 'D E T C I' module); [7] ZAPT4 sp.........................................................................PASSED; (a 'D E T C I' module); [8] FCI sp...........................................................................PASSED; [9] MP2.5 sp.........................................................................PASSED; [10] cbs()............................................................................PASSED; [11] db().............................................................................PASSED; [12] CISD sp..........................................................................PASSED; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1991#issuecomment-683898544
https://github.com/psi4/psi4/pull/1991#issuecomment-684170548:289,Modifiability,variab,variable,289,This pull request **introduces 3 alerts** when merging 1d783c29d5f414abf8164be05ad52cef54c2ee72 into 5f017bd3dbcc07b9b854e23e32ef285ab73b7916 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-26252004d1d4cb621e9e2b41af3cf7263833e87d). **new alerts:**. * 2 for Unused local variable; * 1 for Unreachable code,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1991#issuecomment-684170548
https://github.com/psi4/psi4/pull/1991#issuecomment-684999864:563,Security,access,access,563,"We are _finally_ passing on Windows. The problem was quite subtle and involved treacherous raw pointers. The old code used `trans_one` and would pass in a pointer to position N in a `*double`, where N was the number of orbitals from previous irreps. The relevant test cases had a final irrep with no orbitals, so the old code would pass in a pointer to one position _after_ the last value. Which was fine, because it was never used. That stopped being fine, according to the Windows compiler, when I switched from `*double` to `std::array`. To be fair, trying to access a non-existent index should never have worked in the first place. The fix I adopted was to eliminate those `trans_one` calls with `libmints::Matrix` operations, with the result that we're using less specialized `libtrans` tech and fewer LoC. Unsurprisingly, I am okay with that. @loriab, unless you want to Jet to double-check that last commit, I think we're clear to bring this in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1991#issuecomment-684999864
https://github.com/psi4/psi4/pull/1991#issuecomment-684999864:263,Testability,test,test,263,"We are _finally_ passing on Windows. The problem was quite subtle and involved treacherous raw pointers. The old code used `trans_one` and would pass in a pointer to position N in a `*double`, where N was the number of orbitals from previous irreps. The relevant test cases had a final irrep with no orbitals, so the old code would pass in a pointer to one position _after_ the last value. Which was fine, because it was never used. That stopped being fine, according to the Windows compiler, when I switched from `*double` to `std::array`. To be fair, trying to access a non-existent index should never have worked in the first place. The fix I adopted was to eliminate those `trans_one` calls with `libmints::Matrix` operations, with the result that we're using less specialized `libtrans` tech and fewer LoC. Unsurprisingly, I am okay with that. @loriab, unless you want to Jet to double-check that last commit, I think we're clear to bring this in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1991#issuecomment-684999864
https://github.com/psi4/psi4/pull/1991#issuecomment-684999864:929,Usability,clear,clear,929,"We are _finally_ passing on Windows. The problem was quite subtle and involved treacherous raw pointers. The old code used `trans_one` and would pass in a pointer to position N in a `*double`, where N was the number of orbitals from previous irreps. The relevant test cases had a final irrep with no orbitals, so the old code would pass in a pointer to one position _after_ the last value. Which was fine, because it was never used. That stopped being fine, according to the Windows compiler, when I switched from `*double` to `std::array`. To be fair, trying to access a non-existent index should never have worked in the first place. The fix I adopted was to eliminate those `trans_one` calls with `libmints::Matrix` operations, with the result that we're using less specialized `libtrans` tech and fewer LoC. Unsurprisingly, I am okay with that. @loriab, unless you want to Jet to double-check that last commit, I think we're clear to bring this in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1991#issuecomment-684999864
https://github.com/psi4/psi4/pull/1991#issuecomment-685015121:38,Availability,down,down,38,"Wow, congratulations on tracking that down",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1991#issuecomment-685015121
https://github.com/psi4/psi4/issues/1992#issuecomment-681077930:195,Safety,Abort,Aborted,195,"Actually, in addition to the basis set parser, there's something else wrong. Namely, removing the `L=9` functions from the basis, Psi4 crashes:; ```; $ psi4 h2.in . malloc(): corrupted top size; Aborted (core dumped); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1992#issuecomment-681077930
https://github.com/psi4/psi4/issues/1992#issuecomment-681079304:41,Availability,error,error,41,I don't wholly trust the libint/libmints error messages to trigger when requested angmom too high. you've ruled out the libint compilation?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1992#issuecomment-681079304
https://github.com/psi4/psi4/issues/1992#issuecomment-681079304:47,Integrability,message,messages,47,I don't wholly trust the libint/libmints error messages to trigger when requested angmom too high. you've ruled out the libint compilation?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1992#issuecomment-681079304
https://github.com/psi4/psi4/issues/1992#issuecomment-681083674:315,Energy Efficiency,energy,energy,315,The basis set taken from https://github.com/HPQC-LABS/AI_ENERGIES/blob/master/GENBAS is here (just change the suffix): [aV10Z-FELLER_H.txt](https://github.com/psi4/psi4/files/5132469/aV10Z-FELLER_H.txt). Example input; ```; molecule {; 0 1; H; H 1 0.74; }. memory 8 gb; set basis aV10Z-FELLER; set scf_type direct; energy('scf'); ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1992#issuecomment-681083674
https://github.com/psi4/psi4/issues/1992#issuecomment-681870761:229,Availability,error,error,229,Thanks for opening the BSE issue. It looks like the parser will pass on an angular momentum of -1 along and not complain.; https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/libmintsbasissetparser.py#L129-L130; Perhaps an error and the expected order of letters can be printed instead.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1992#issuecomment-681870761
https://github.com/psi4/psi4/issues/1992#issuecomment-681918986:5,Security,attack,attack,5,I'll attack this in #1994 as well.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1992#issuecomment-681918986
https://github.com/psi4/psi4/pull/1993#issuecomment-682369777:718,Energy Efficiency,energy,energy,718,"Welcome to psi4 and thanks for the PR. Could you add a regression test with your example? http://psicode.org/psi4manual/master/add_tests.html; E.g. a third `extern` version would do. If anything is unclear, please ask here or join us on slacks. edit: I forgot. Please rebase your fork to fix the CI. ---. I am wondering. In principle `mol.set_nuclear_charge(0,7.05)` should work to modify Z. However, the C molecule object doesn't get the changes only the python one. ```; molecule mol {; N 0. 0. 1.; N 0. 0. 0.; no_reorient; no_com; symmetry c1; 0 1; }. set basis 6-31G; set reference rhf. mol.set_nuclear_charge(0,7.05); print(mol.Z(0),mol.Z(1)); nn = mol.nuclear_repulsion_energy(); mol.update_geometry(); e, wfn = energy('scf',return_wfn=True); print(nn); print(wfn.variable('NUCLEAR REPULSION ENERGY')); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1993#issuecomment-682369777
https://github.com/psi4/psi4/pull/1993#issuecomment-682369777:798,Energy Efficiency,ENERGY,ENERGY,798,"Welcome to psi4 and thanks for the PR. Could you add a regression test with your example? http://psicode.org/psi4manual/master/add_tests.html; E.g. a third `extern` version would do. If anything is unclear, please ask here or join us on slacks. edit: I forgot. Please rebase your fork to fix the CI. ---. I am wondering. In principle `mol.set_nuclear_charge(0,7.05)` should work to modify Z. However, the C molecule object doesn't get the changes only the python one. ```; molecule mol {; N 0. 0. 1.; N 0. 0. 0.; no_reorient; no_com; symmetry c1; 0 1; }. set basis 6-31G; set reference rhf. mol.set_nuclear_charge(0,7.05); print(mol.Z(0),mol.Z(1)); nn = mol.nuclear_repulsion_energy(); mol.update_geometry(); e, wfn = energy('scf',return_wfn=True); print(nn); print(wfn.variable('NUCLEAR REPULSION ENERGY')); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1993#issuecomment-682369777
https://github.com/psi4/psi4/pull/1993#issuecomment-682369777:770,Modifiability,variab,variable,770,"Welcome to psi4 and thanks for the PR. Could you add a regression test with your example? http://psicode.org/psi4manual/master/add_tests.html; E.g. a third `extern` version would do. If anything is unclear, please ask here or join us on slacks. edit: I forgot. Please rebase your fork to fix the CI. ---. I am wondering. In principle `mol.set_nuclear_charge(0,7.05)` should work to modify Z. However, the C molecule object doesn't get the changes only the python one. ```; molecule mol {; N 0. 0. 1.; N 0. 0. 0.; no_reorient; no_com; symmetry c1; 0 1; }. set basis 6-31G; set reference rhf. mol.set_nuclear_charge(0,7.05); print(mol.Z(0),mol.Z(1)); nn = mol.nuclear_repulsion_energy(); mol.update_geometry(); e, wfn = energy('scf',return_wfn=True); print(nn); print(wfn.variable('NUCLEAR REPULSION ENERGY')); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1993#issuecomment-682369777
https://github.com/psi4/psi4/pull/1993#issuecomment-682369777:66,Testability,test,test,66,"Welcome to psi4 and thanks for the PR. Could you add a regression test with your example? http://psicode.org/psi4manual/master/add_tests.html; E.g. a third `extern` version would do. If anything is unclear, please ask here or join us on slacks. edit: I forgot. Please rebase your fork to fix the CI. ---. I am wondering. In principle `mol.set_nuclear_charge(0,7.05)` should work to modify Z. However, the C molecule object doesn't get the changes only the python one. ```; molecule mol {; N 0. 0. 1.; N 0. 0. 0.; no_reorient; no_com; symmetry c1; 0 1; }. set basis 6-31G; set reference rhf. mol.set_nuclear_charge(0,7.05); print(mol.Z(0),mol.Z(1)); nn = mol.nuclear_repulsion_energy(); mol.update_geometry(); e, wfn = energy('scf',return_wfn=True); print(nn); print(wfn.variable('NUCLEAR REPULSION ENERGY')); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1993#issuecomment-682369777
https://github.com/psi4/psi4/pull/1993#issuecomment-683299239:309,Energy Efficiency,charge,charges,309,"Fix looks good, thanks!. For the test, could you edit it to trigger your original problem and test the solution? I think it's still like extern2 at the moment. > In principle mol.set_nuclear_charge(0,7.05) should work to modify Z. Yeah, I tried for a couple hours once to see about setting fractional nuclear charges in Molecule that made a difference to a calculation; no luck.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1993#issuecomment-683299239
https://github.com/psi4/psi4/pull/1993#issuecomment-683299239:33,Testability,test,test,33,"Fix looks good, thanks!. For the test, could you edit it to trigger your original problem and test the solution? I think it's still like extern2 at the moment. > In principle mol.set_nuclear_charge(0,7.05) should work to modify Z. Yeah, I tried for a couple hours once to see about setting fractional nuclear charges in Molecule that made a difference to a calculation; no luck.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1993#issuecomment-683299239
https://github.com/psi4/psi4/pull/1993#issuecomment-683299239:94,Testability,test,test,94,"Fix looks good, thanks!. For the test, could you edit it to trigger your original problem and test the solution? I think it's still like extern2 at the moment. > In principle mol.set_nuclear_charge(0,7.05) should work to modify Z. Yeah, I tried for a couple hours once to see about setting fractional nuclear charges in Molecule that made a difference to a calculation; no luck.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1993#issuecomment-683299239
https://github.com/psi4/psi4/issues/1995#issuecomment-682052040:214,Deployability,patch,patched,214,"Hi, ; For electron correlation methods like MP2 used in your double-hybrid functional you need at least 2 electrons. . Older psi4 versions didn't catch this case gracefully. I assume you use v1.3.2?; This has been patched earlier this year in the development version (https://github.com/psi4/psi4/pull/1857 by @PeterKraus ).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682052040
https://github.com/psi4/psi4/issues/1995#issuecomment-682069520:153,Energy Efficiency,energy,energy,153,"Well, it still fails for triplet helium, which is a case that is perfectly physical!; ```; molecule {; 0 3; He; }. set basis cc-pVTZ; set reference uhf; energy('mp2'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682069520
https://github.com/psi4/psi4/issues/1995#issuecomment-682129791:355,Safety,avoid,avoid,355,"Yes, the dev version would work for your case. However, there is a small change in the DFT code (see note at the top http://psicode.org/psi4manual/master/dft.html) that is important if you are mid-project since you should not absolute energies between the versions. All mean-field methods (HF/DFT) will work with the current version but you would need to avoid double-hybrids DFT functionals since they contain an MP2 part.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682129791
https://github.com/psi4/psi4/issues/1995#issuecomment-682331057:240,Energy Efficiency,energy,energy,240,"Yeah, I didn't think of higher multiplicity cases. There, the fix will be a little more involved I guess. `DF-MP2` (which is used also for DH-DFT) and CD MP2 in `DFOCC` crash, while conventional MP2 via `OCC` runs fine, but the correlation energy is 0 (Is that correct? Shouldn't there be some same-spin contribution?).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682331057
https://github.com/psi4/psi4/issues/1995#issuecomment-682339122:68,Energy Efficiency,energy,energy,68,"@PeterKraus yes, something like 0.78 mEh of alpha-alpha correlation energy for He triplet in cc-pVTZ.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682339122
https://github.com/psi4/psi4/issues/1995#issuecomment-682348770:389,Energy Efficiency,energy,energy,389,Tagging @JonathonMisiewicz : ; [3he.txt](https://github.com/psi4/psi4/files/5140334/3he.txt); ```; 	IRREP FC AOCC BOCC AVIR BVIR FV ; 	==========================================; 	 Ag 0 2 0 0 2 0; 	 B1g 0 0 0 0 0 0; 	 B2g 0 0 0 0 0 0; 	 B3g 0 0 0 0 0 0; 	 Au 0 0 0 0 0 0; 	 B1u 0 0 0 1 1 0; 	 B2u 0 0 0 1 1 0; 	 B3u 0 0 0 1 1 0; 	==========================================. 	Computing MP2 energy using SCF MOs (Canonical MP2)... ; 	============================================================================== ; 	Nuclear Repulsion Energy (a.u.) : 0.00000000000000; 	SCF Energy (a.u.) : -1.40116327670131; 	REF Energy (a.u.) : -1.40116327670131; 	Alpha-Alpha Contribution (a.u.) : 0.00000000000000; 	Alpha-Beta Contribution (a.u.) : 0.00000000000000; 	Beta-Beta Contribution (a.u.) : 0.00000000000000; 	Scaled_SS Correlation Energy (a.u.): 0.00000000000000; 	Scaled_OS Correlation Energy (a.u.): 0.00000000000000; 	SCS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SOS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCSN-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCS-MP2-VDW Total Energy (a.u.) : -1.40116327670131; 	SOS-PI-MP2 Total Energy (a.u.) : -1.40116327670131; 	MP2 Correlation Energy (a.u.) : 0.00000000000000; 	MP2 Total Energy (a.u.) : -1.40116327670131; 	============================================================================== ; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682348770
https://github.com/psi4/psi4/issues/1995#issuecomment-682348770:532,Energy Efficiency,Energy,Energy,532,Tagging @JonathonMisiewicz : ; [3he.txt](https://github.com/psi4/psi4/files/5140334/3he.txt); ```; 	IRREP FC AOCC BOCC AVIR BVIR FV ; 	==========================================; 	 Ag 0 2 0 0 2 0; 	 B1g 0 0 0 0 0 0; 	 B2g 0 0 0 0 0 0; 	 B3g 0 0 0 0 0 0; 	 Au 0 0 0 0 0 0; 	 B1u 0 0 0 1 1 0; 	 B2u 0 0 0 1 1 0; 	 B3u 0 0 0 1 1 0; 	==========================================. 	Computing MP2 energy using SCF MOs (Canonical MP2)... ; 	============================================================================== ; 	Nuclear Repulsion Energy (a.u.) : 0.00000000000000; 	SCF Energy (a.u.) : -1.40116327670131; 	REF Energy (a.u.) : -1.40116327670131; 	Alpha-Alpha Contribution (a.u.) : 0.00000000000000; 	Alpha-Beta Contribution (a.u.) : 0.00000000000000; 	Beta-Beta Contribution (a.u.) : 0.00000000000000; 	Scaled_SS Correlation Energy (a.u.): 0.00000000000000; 	Scaled_OS Correlation Energy (a.u.): 0.00000000000000; 	SCS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SOS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCSN-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCS-MP2-VDW Total Energy (a.u.) : -1.40116327670131; 	SOS-PI-MP2 Total Energy (a.u.) : -1.40116327670131; 	MP2 Correlation Energy (a.u.) : 0.00000000000000; 	MP2 Total Energy (a.u.) : -1.40116327670131; 	============================================================================== ; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682348770
https://github.com/psi4/psi4/issues/1995#issuecomment-682348770:571,Energy Efficiency,Energy,Energy,571,Tagging @JonathonMisiewicz : ; [3he.txt](https://github.com/psi4/psi4/files/5140334/3he.txt); ```; 	IRREP FC AOCC BOCC AVIR BVIR FV ; 	==========================================; 	 Ag 0 2 0 0 2 0; 	 B1g 0 0 0 0 0 0; 	 B2g 0 0 0 0 0 0; 	 B3g 0 0 0 0 0 0; 	 Au 0 0 0 0 0 0; 	 B1u 0 0 0 1 1 0; 	 B2u 0 0 0 1 1 0; 	 B3u 0 0 0 1 1 0; 	==========================================. 	Computing MP2 energy using SCF MOs (Canonical MP2)... ; 	============================================================================== ; 	Nuclear Repulsion Energy (a.u.) : 0.00000000000000; 	SCF Energy (a.u.) : -1.40116327670131; 	REF Energy (a.u.) : -1.40116327670131; 	Alpha-Alpha Contribution (a.u.) : 0.00000000000000; 	Alpha-Beta Contribution (a.u.) : 0.00000000000000; 	Beta-Beta Contribution (a.u.) : 0.00000000000000; 	Scaled_SS Correlation Energy (a.u.): 0.00000000000000; 	Scaled_OS Correlation Energy (a.u.): 0.00000000000000; 	SCS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SOS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCSN-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCS-MP2-VDW Total Energy (a.u.) : -1.40116327670131; 	SOS-PI-MP2 Total Energy (a.u.) : -1.40116327670131; 	MP2 Correlation Energy (a.u.) : 0.00000000000000; 	MP2 Total Energy (a.u.) : -1.40116327670131; 	============================================================================== ; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682348770
https://github.com/psi4/psi4/issues/1995#issuecomment-682348770:611,Energy Efficiency,Energy,Energy,611,Tagging @JonathonMisiewicz : ; [3he.txt](https://github.com/psi4/psi4/files/5140334/3he.txt); ```; 	IRREP FC AOCC BOCC AVIR BVIR FV ; 	==========================================; 	 Ag 0 2 0 0 2 0; 	 B1g 0 0 0 0 0 0; 	 B2g 0 0 0 0 0 0; 	 B3g 0 0 0 0 0 0; 	 Au 0 0 0 0 0 0; 	 B1u 0 0 0 1 1 0; 	 B2u 0 0 0 1 1 0; 	 B3u 0 0 0 1 1 0; 	==========================================. 	Computing MP2 energy using SCF MOs (Canonical MP2)... ; 	============================================================================== ; 	Nuclear Repulsion Energy (a.u.) : 0.00000000000000; 	SCF Energy (a.u.) : -1.40116327670131; 	REF Energy (a.u.) : -1.40116327670131; 	Alpha-Alpha Contribution (a.u.) : 0.00000000000000; 	Alpha-Beta Contribution (a.u.) : 0.00000000000000; 	Beta-Beta Contribution (a.u.) : 0.00000000000000; 	Scaled_SS Correlation Energy (a.u.): 0.00000000000000; 	Scaled_OS Correlation Energy (a.u.): 0.00000000000000; 	SCS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SOS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCSN-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCS-MP2-VDW Total Energy (a.u.) : -1.40116327670131; 	SOS-PI-MP2 Total Energy (a.u.) : -1.40116327670131; 	MP2 Correlation Energy (a.u.) : 0.00000000000000; 	MP2 Total Energy (a.u.) : -1.40116327670131; 	============================================================================== ; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682348770
https://github.com/psi4/psi4/issues/1995#issuecomment-682348770:825,Energy Efficiency,Energy,Energy,825,Tagging @JonathonMisiewicz : ; [3he.txt](https://github.com/psi4/psi4/files/5140334/3he.txt); ```; 	IRREP FC AOCC BOCC AVIR BVIR FV ; 	==========================================; 	 Ag 0 2 0 0 2 0; 	 B1g 0 0 0 0 0 0; 	 B2g 0 0 0 0 0 0; 	 B3g 0 0 0 0 0 0; 	 Au 0 0 0 0 0 0; 	 B1u 0 0 0 1 1 0; 	 B2u 0 0 0 1 1 0; 	 B3u 0 0 0 1 1 0; 	==========================================. 	Computing MP2 energy using SCF MOs (Canonical MP2)... ; 	============================================================================== ; 	Nuclear Repulsion Energy (a.u.) : 0.00000000000000; 	SCF Energy (a.u.) : -1.40116327670131; 	REF Energy (a.u.) : -1.40116327670131; 	Alpha-Alpha Contribution (a.u.) : 0.00000000000000; 	Alpha-Beta Contribution (a.u.) : 0.00000000000000; 	Beta-Beta Contribution (a.u.) : 0.00000000000000; 	Scaled_SS Correlation Energy (a.u.): 0.00000000000000; 	Scaled_OS Correlation Energy (a.u.): 0.00000000000000; 	SCS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SOS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCSN-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCS-MP2-VDW Total Energy (a.u.) : -1.40116327670131; 	SOS-PI-MP2 Total Energy (a.u.) : -1.40116327670131; 	MP2 Correlation Energy (a.u.) : 0.00000000000000; 	MP2 Total Energy (a.u.) : -1.40116327670131; 	============================================================================== ; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682348770
https://github.com/psi4/psi4/issues/1995#issuecomment-682348770:881,Energy Efficiency,Energy,Energy,881,Tagging @JonathonMisiewicz : ; [3he.txt](https://github.com/psi4/psi4/files/5140334/3he.txt); ```; 	IRREP FC AOCC BOCC AVIR BVIR FV ; 	==========================================; 	 Ag 0 2 0 0 2 0; 	 B1g 0 0 0 0 0 0; 	 B2g 0 0 0 0 0 0; 	 B3g 0 0 0 0 0 0; 	 Au 0 0 0 0 0 0; 	 B1u 0 0 0 1 1 0; 	 B2u 0 0 0 1 1 0; 	 B3u 0 0 0 1 1 0; 	==========================================. 	Computing MP2 energy using SCF MOs (Canonical MP2)... ; 	============================================================================== ; 	Nuclear Repulsion Energy (a.u.) : 0.00000000000000; 	SCF Energy (a.u.) : -1.40116327670131; 	REF Energy (a.u.) : -1.40116327670131; 	Alpha-Alpha Contribution (a.u.) : 0.00000000000000; 	Alpha-Beta Contribution (a.u.) : 0.00000000000000; 	Beta-Beta Contribution (a.u.) : 0.00000000000000; 	Scaled_SS Correlation Energy (a.u.): 0.00000000000000; 	Scaled_OS Correlation Energy (a.u.): 0.00000000000000; 	SCS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SOS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCSN-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCS-MP2-VDW Total Energy (a.u.) : -1.40116327670131; 	SOS-PI-MP2 Total Energy (a.u.) : -1.40116327670131; 	MP2 Correlation Energy (a.u.) : 0.00000000000000; 	MP2 Total Energy (a.u.) : -1.40116327670131; 	============================================================================== ; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682348770
https://github.com/psi4/psi4/issues/1995#issuecomment-682348770:929,Energy Efficiency,Energy,Energy,929,Tagging @JonathonMisiewicz : ; [3he.txt](https://github.com/psi4/psi4/files/5140334/3he.txt); ```; 	IRREP FC AOCC BOCC AVIR BVIR FV ; 	==========================================; 	 Ag 0 2 0 0 2 0; 	 B1g 0 0 0 0 0 0; 	 B2g 0 0 0 0 0 0; 	 B3g 0 0 0 0 0 0; 	 Au 0 0 0 0 0 0; 	 B1u 0 0 0 1 1 0; 	 B2u 0 0 0 1 1 0; 	 B3u 0 0 0 1 1 0; 	==========================================. 	Computing MP2 energy using SCF MOs (Canonical MP2)... ; 	============================================================================== ; 	Nuclear Repulsion Energy (a.u.) : 0.00000000000000; 	SCF Energy (a.u.) : -1.40116327670131; 	REF Energy (a.u.) : -1.40116327670131; 	Alpha-Alpha Contribution (a.u.) : 0.00000000000000; 	Alpha-Beta Contribution (a.u.) : 0.00000000000000; 	Beta-Beta Contribution (a.u.) : 0.00000000000000; 	Scaled_SS Correlation Energy (a.u.): 0.00000000000000; 	Scaled_OS Correlation Energy (a.u.): 0.00000000000000; 	SCS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SOS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCSN-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCS-MP2-VDW Total Energy (a.u.) : -1.40116327670131; 	SOS-PI-MP2 Total Energy (a.u.) : -1.40116327670131; 	MP2 Correlation Energy (a.u.) : 0.00000000000000; 	MP2 Total Energy (a.u.) : -1.40116327670131; 	============================================================================== ; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682348770
https://github.com/psi4/psi4/issues/1995#issuecomment-682348770:979,Energy Efficiency,Energy,Energy,979,Tagging @JonathonMisiewicz : ; [3he.txt](https://github.com/psi4/psi4/files/5140334/3he.txt); ```; 	IRREP FC AOCC BOCC AVIR BVIR FV ; 	==========================================; 	 Ag 0 2 0 0 2 0; 	 B1g 0 0 0 0 0 0; 	 B2g 0 0 0 0 0 0; 	 B3g 0 0 0 0 0 0; 	 Au 0 0 0 0 0 0; 	 B1u 0 0 0 1 1 0; 	 B2u 0 0 0 1 1 0; 	 B3u 0 0 0 1 1 0; 	==========================================. 	Computing MP2 energy using SCF MOs (Canonical MP2)... ; 	============================================================================== ; 	Nuclear Repulsion Energy (a.u.) : 0.00000000000000; 	SCF Energy (a.u.) : -1.40116327670131; 	REF Energy (a.u.) : -1.40116327670131; 	Alpha-Alpha Contribution (a.u.) : 0.00000000000000; 	Alpha-Beta Contribution (a.u.) : 0.00000000000000; 	Beta-Beta Contribution (a.u.) : 0.00000000000000; 	Scaled_SS Correlation Energy (a.u.): 0.00000000000000; 	Scaled_OS Correlation Energy (a.u.): 0.00000000000000; 	SCS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SOS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCSN-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCS-MP2-VDW Total Energy (a.u.) : -1.40116327670131; 	SOS-PI-MP2 Total Energy (a.u.) : -1.40116327670131; 	MP2 Correlation Energy (a.u.) : 0.00000000000000; 	MP2 Total Energy (a.u.) : -1.40116327670131; 	============================================================================== ; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682348770
https://github.com/psi4/psi4/issues/1995#issuecomment-682348770:1030,Energy Efficiency,Energy,Energy,1030,Tagging @JonathonMisiewicz : ; [3he.txt](https://github.com/psi4/psi4/files/5140334/3he.txt); ```; 	IRREP FC AOCC BOCC AVIR BVIR FV ; 	==========================================; 	 Ag 0 2 0 0 2 0; 	 B1g 0 0 0 0 0 0; 	 B2g 0 0 0 0 0 0; 	 B3g 0 0 0 0 0 0; 	 Au 0 0 0 0 0 0; 	 B1u 0 0 0 1 1 0; 	 B2u 0 0 0 1 1 0; 	 B3u 0 0 0 1 1 0; 	==========================================. 	Computing MP2 energy using SCF MOs (Canonical MP2)... ; 	============================================================================== ; 	Nuclear Repulsion Energy (a.u.) : 0.00000000000000; 	SCF Energy (a.u.) : -1.40116327670131; 	REF Energy (a.u.) : -1.40116327670131; 	Alpha-Alpha Contribution (a.u.) : 0.00000000000000; 	Alpha-Beta Contribution (a.u.) : 0.00000000000000; 	Beta-Beta Contribution (a.u.) : 0.00000000000000; 	Scaled_SS Correlation Energy (a.u.): 0.00000000000000; 	Scaled_OS Correlation Energy (a.u.): 0.00000000000000; 	SCS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SOS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCSN-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCS-MP2-VDW Total Energy (a.u.) : -1.40116327670131; 	SOS-PI-MP2 Total Energy (a.u.) : -1.40116327670131; 	MP2 Correlation Energy (a.u.) : 0.00000000000000; 	MP2 Total Energy (a.u.) : -1.40116327670131; 	============================================================================== ; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682348770
https://github.com/psi4/psi4/issues/1995#issuecomment-682348770:1084,Energy Efficiency,Energy,Energy,1084,Tagging @JonathonMisiewicz : ; [3he.txt](https://github.com/psi4/psi4/files/5140334/3he.txt); ```; 	IRREP FC AOCC BOCC AVIR BVIR FV ; 	==========================================; 	 Ag 0 2 0 0 2 0; 	 B1g 0 0 0 0 0 0; 	 B2g 0 0 0 0 0 0; 	 B3g 0 0 0 0 0 0; 	 Au 0 0 0 0 0 0; 	 B1u 0 0 0 1 1 0; 	 B2u 0 0 0 1 1 0; 	 B3u 0 0 0 1 1 0; 	==========================================. 	Computing MP2 energy using SCF MOs (Canonical MP2)... ; 	============================================================================== ; 	Nuclear Repulsion Energy (a.u.) : 0.00000000000000; 	SCF Energy (a.u.) : -1.40116327670131; 	REF Energy (a.u.) : -1.40116327670131; 	Alpha-Alpha Contribution (a.u.) : 0.00000000000000; 	Alpha-Beta Contribution (a.u.) : 0.00000000000000; 	Beta-Beta Contribution (a.u.) : 0.00000000000000; 	Scaled_SS Correlation Energy (a.u.): 0.00000000000000; 	Scaled_OS Correlation Energy (a.u.): 0.00000000000000; 	SCS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SOS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCSN-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCS-MP2-VDW Total Energy (a.u.) : -1.40116327670131; 	SOS-PI-MP2 Total Energy (a.u.) : -1.40116327670131; 	MP2 Correlation Energy (a.u.) : 0.00000000000000; 	MP2 Total Energy (a.u.) : -1.40116327670131; 	============================================================================== ; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682348770
https://github.com/psi4/psi4/issues/1995#issuecomment-682348770:1137,Energy Efficiency,Energy,Energy,1137,Tagging @JonathonMisiewicz : ; [3he.txt](https://github.com/psi4/psi4/files/5140334/3he.txt); ```; 	IRREP FC AOCC BOCC AVIR BVIR FV ; 	==========================================; 	 Ag 0 2 0 0 2 0; 	 B1g 0 0 0 0 0 0; 	 B2g 0 0 0 0 0 0; 	 B3g 0 0 0 0 0 0; 	 Au 0 0 0 0 0 0; 	 B1u 0 0 0 1 1 0; 	 B2u 0 0 0 1 1 0; 	 B3u 0 0 0 1 1 0; 	==========================================. 	Computing MP2 energy using SCF MOs (Canonical MP2)... ; 	============================================================================== ; 	Nuclear Repulsion Energy (a.u.) : 0.00000000000000; 	SCF Energy (a.u.) : -1.40116327670131; 	REF Energy (a.u.) : -1.40116327670131; 	Alpha-Alpha Contribution (a.u.) : 0.00000000000000; 	Alpha-Beta Contribution (a.u.) : 0.00000000000000; 	Beta-Beta Contribution (a.u.) : 0.00000000000000; 	Scaled_SS Correlation Energy (a.u.): 0.00000000000000; 	Scaled_OS Correlation Energy (a.u.): 0.00000000000000; 	SCS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SOS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCSN-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCS-MP2-VDW Total Energy (a.u.) : -1.40116327670131; 	SOS-PI-MP2 Total Energy (a.u.) : -1.40116327670131; 	MP2 Correlation Energy (a.u.) : 0.00000000000000; 	MP2 Total Energy (a.u.) : -1.40116327670131; 	============================================================================== ; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682348770
https://github.com/psi4/psi4/issues/1995#issuecomment-682348770:1189,Energy Efficiency,Energy,Energy,1189,Tagging @JonathonMisiewicz : ; [3he.txt](https://github.com/psi4/psi4/files/5140334/3he.txt); ```; 	IRREP FC AOCC BOCC AVIR BVIR FV ; 	==========================================; 	 Ag 0 2 0 0 2 0; 	 B1g 0 0 0 0 0 0; 	 B2g 0 0 0 0 0 0; 	 B3g 0 0 0 0 0 0; 	 Au 0 0 0 0 0 0; 	 B1u 0 0 0 1 1 0; 	 B2u 0 0 0 1 1 0; 	 B3u 0 0 0 1 1 0; 	==========================================. 	Computing MP2 energy using SCF MOs (Canonical MP2)... ; 	============================================================================== ; 	Nuclear Repulsion Energy (a.u.) : 0.00000000000000; 	SCF Energy (a.u.) : -1.40116327670131; 	REF Energy (a.u.) : -1.40116327670131; 	Alpha-Alpha Contribution (a.u.) : 0.00000000000000; 	Alpha-Beta Contribution (a.u.) : 0.00000000000000; 	Beta-Beta Contribution (a.u.) : 0.00000000000000; 	Scaled_SS Correlation Energy (a.u.): 0.00000000000000; 	Scaled_OS Correlation Energy (a.u.): 0.00000000000000; 	SCS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SOS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCSN-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCS-MP2-VDW Total Energy (a.u.) : -1.40116327670131; 	SOS-PI-MP2 Total Energy (a.u.) : -1.40116327670131; 	MP2 Correlation Energy (a.u.) : 0.00000000000000; 	MP2 Total Energy (a.u.) : -1.40116327670131; 	============================================================================== ; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682348770
https://github.com/psi4/psi4/issues/1995#issuecomment-682348770:1234,Energy Efficiency,Energy,Energy,1234,Tagging @JonathonMisiewicz : ; [3he.txt](https://github.com/psi4/psi4/files/5140334/3he.txt); ```; 	IRREP FC AOCC BOCC AVIR BVIR FV ; 	==========================================; 	 Ag 0 2 0 0 2 0; 	 B1g 0 0 0 0 0 0; 	 B2g 0 0 0 0 0 0; 	 B3g 0 0 0 0 0 0; 	 Au 0 0 0 0 0 0; 	 B1u 0 0 0 1 1 0; 	 B2u 0 0 0 1 1 0; 	 B3u 0 0 0 1 1 0; 	==========================================. 	Computing MP2 energy using SCF MOs (Canonical MP2)... ; 	============================================================================== ; 	Nuclear Repulsion Energy (a.u.) : 0.00000000000000; 	SCF Energy (a.u.) : -1.40116327670131; 	REF Energy (a.u.) : -1.40116327670131; 	Alpha-Alpha Contribution (a.u.) : 0.00000000000000; 	Alpha-Beta Contribution (a.u.) : 0.00000000000000; 	Beta-Beta Contribution (a.u.) : 0.00000000000000; 	Scaled_SS Correlation Energy (a.u.): 0.00000000000000; 	Scaled_OS Correlation Energy (a.u.): 0.00000000000000; 	SCS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SOS-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCSN-MP2 Total Energy (a.u.) : -1.40116327670131; 	SCS-MP2-VDW Total Energy (a.u.) : -1.40116327670131; 	SOS-PI-MP2 Total Energy (a.u.) : -1.40116327670131; 	MP2 Correlation Energy (a.u.) : 0.00000000000000; 	MP2 Total Energy (a.u.) : -1.40116327670131; 	============================================================================== ; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682348770
https://github.com/psi4/psi4/issues/1995#issuecomment-682364344:33,Testability,test,test,33,Seems we should get a He triplet test cases and run various correlation modules. DCT MP2 guess also gives alpha-alpha=0.0; For RI-MP2 with ORCA I get -0.004692354 Eh,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682364344
https://github.com/psi4/psi4/issues/1995#issuecomment-682380332:48,Energy Efficiency,energy,energy,48,"@PeterKraus cc-pVDZ is too small:; | Basis | HF energy| Correlation energy|; |---------|---------------|-------------------------|; |cc-pvdz|-1.40116327670| 0.0000000000E+00|; |cc-pvtz |-1.91416855862|-0.7824302424E-03|; |cc-pvqz|-1.99159607277| -0.1181868464E-02|; |cc-pv5z|-2.04034123742| -0.1285572449E-02|; |aug-cc-pvdz|-2.15018916592 |-0.7346161967E-03|; |aug-cc-pvtz |-2.16888956528|-0.7616780920E-03|; |aug-cc-pvqz |-2.17117882318|-0.7862458950E-03|; |aug-cc-pv5z |-2.17181734050|-0.7961769119E-03|. The triplet ground state is 1s2s, but the outer orbital is very diffuse. The real HF ground state energy is -2.17425077799 so even av5z is quite far off!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682380332
https://github.com/psi4/psi4/issues/1995#issuecomment-682380332:68,Energy Efficiency,energy,energy,68,"@PeterKraus cc-pVDZ is too small:; | Basis | HF energy| Correlation energy|; |---------|---------------|-------------------------|; |cc-pvdz|-1.40116327670| 0.0000000000E+00|; |cc-pvtz |-1.91416855862|-0.7824302424E-03|; |cc-pvqz|-1.99159607277| -0.1181868464E-02|; |cc-pv5z|-2.04034123742| -0.1285572449E-02|; |aug-cc-pvdz|-2.15018916592 |-0.7346161967E-03|; |aug-cc-pvtz |-2.16888956528|-0.7616780920E-03|; |aug-cc-pvqz |-2.17117882318|-0.7862458950E-03|; |aug-cc-pv5z |-2.17181734050|-0.7961769119E-03|. The triplet ground state is 1s2s, but the outer orbital is very diffuse. The real HF ground state energy is -2.17425077799 so even av5z is quite far off!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682380332
https://github.com/psi4/psi4/issues/1995#issuecomment-682380332:605,Energy Efficiency,energy,energy,605,"@PeterKraus cc-pVDZ is too small:; | Basis | HF energy| Correlation energy|; |---------|---------------|-------------------------|; |cc-pvdz|-1.40116327670| 0.0000000000E+00|; |cc-pvtz |-1.91416855862|-0.7824302424E-03|; |cc-pvqz|-1.99159607277| -0.1181868464E-02|; |cc-pv5z|-2.04034123742| -0.1285572449E-02|; |aug-cc-pvdz|-2.15018916592 |-0.7346161967E-03|; |aug-cc-pvtz |-2.16888956528|-0.7616780920E-03|; |aug-cc-pvqz |-2.17117882318|-0.7862458950E-03|; |aug-cc-pv5z |-2.17181734050|-0.7961769119E-03|. The triplet ground state is 1s2s, but the outer orbital is very diffuse. The real HF ground state energy is -2.17425077799 so even av5z is quite far off!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682380332
https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:61,Availability,Error,Error,61,"Dear Alfred,. Yeah, the problem is, as the code says, ""Fatal Error: There are no occupied; orbitals with beta spin."" In our program, you can't run an MP2 calculation; on an atom or molecule that doesn't have any beta spin electrons. More; generally, an MP2 calculation doesn't make any sense for systems with only; one electron. Your method is a ""double hybrid"" that includes MP2 as a part; of it. Also, it's impossible to ""optimize"" (like you are trying to do) the; geometry of an atom. It has no internal degrees of freedom to optimize. These computational chemistry programs require a little bit of training to; be able to use properly... they're not totally bulletproof black boxes. Best,; David. On Thu, Aug 27, 2020 at 12:07 PM Alfred Andersson <notifications@github.com>; wrote:. > Hi,; >; > I've been trying to calculate the energies of monoatomic compounds. All of; > the atoms ran successfully, except for hydrogen with multiplicity 2.; >; > My in-file:; >; > molecule mol_atomic_hydrogen_doublet {; > 0 2; > H 0.000000000 0.000000000 0.000000000; >; > units angstrom; > no_reorient; > }; >; > set globals {; > basis aug-cc-pVQZ; > dft_spherical_points 434; > dft_radial_points 85; > reference uhf; > }; >; > set_memory(100000000000); > try:; > optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > set guess read; > optimize('pwpb95-d3bj'); >; > The error I got (including previous lines):; >; > *** tstart() called on host; > *** at Fri Aug 21 16:21:36 2020; >; > => Loading Basis Set <=; >; > Name: (AUG-CC-PVQZ AUX); > Role: RIFIT; > Keyword: DF_BASIS_MP2; > atoms 1 entry H line 30 file /home/username/miniconda/share/psi4/basis/aug-cc-pvqz-ri.gbs; >; > --------------------------------------------------------; > DF-MP2; > 2nd-Order Density-Fitted Moller-Plesset Theory; > UMP2 Wavefunction, 28 Threads; >; > Rob Parrish, Justin Turney, Andy Simmonett,; > Ed Hohenste",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879
https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:1479,Availability,error,error,1479," little bit of training to; be able to use properly... they're not totally bulletproof black boxes. Best,; David. On Thu, Aug 27, 2020 at 12:07 PM Alfred Andersson <notifications@github.com>; wrote:. > Hi,; >; > I've been trying to calculate the energies of monoatomic compounds. All of; > the atoms ran successfully, except for hydrogen with multiplicity 2.; >; > My in-file:; >; > molecule mol_atomic_hydrogen_doublet {; > 0 2; > H 0.000000000 0.000000000 0.000000000; >; > units angstrom; > no_reorient; > }; >; > set globals {; > basis aug-cc-pVQZ; > dft_spherical_points 434; > dft_radial_points 85; > reference uhf; > }; >; > set_memory(100000000000); > try:; > optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > set guess read; > optimize('pwpb95-d3bj'); >; > The error I got (including previous lines):; >; > *** tstart() called on host; > *** at Fri Aug 21 16:21:36 2020; >; > => Loading Basis Set <=; >; > Name: (AUG-CC-PVQZ AUX); > Role: RIFIT; > Keyword: DF_BASIS_MP2; > atoms 1 entry H line 30 file /home/username/miniconda/share/psi4/basis/aug-cc-pvqz-ri.gbs; >; > --------------------------------------------------------; > DF-MP2; > 2nd-Order Density-Fitted Moller-Plesset Theory; > UMP2 Wavefunction, 28 Threads; >; > Rob Parrish, Justin Turney, Andy Simmonett,; > Ed Hohenstein, and C. David Sherrill; > --------------------------------------------------------; >; > --------------------------------------------------------; > NBF = 46, NAUX = 80; > --------------------------------------------------------; > CLASS FOCC OCC AOCC AVIR VIR FVIR; > ALPHA 0 1 1 45 45 0; > BETA 0 0 0 46 46 0; > --------------------------------------------------------; >; >; > Traceback (most recent call last):; > File ""/home/username/miniconda/bin/psi4"", line 287, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/home/username/miniconda/lib//pyth",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879
https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:3429,Availability,Error,Error,3429,"e/username/miniconda/bin/psi4"", line 287, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 1052, in optimize; > G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 710, in gradient; > **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 183, in _process_displacement; > derivative, wfn = derivfunc(method, return_wfn=True, molecule=clone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 556, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2018, in run_scf; > dfmp2_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: There are no occupied orbitals with beta spin.; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/dfmp2/mp2.cc on line: 196; > The most recent 5 function calls were:; >; >; >; >; > Printing out the relevant lines from the Psithon --> Python processed input file:; > core.set_global_option(""DFT_SPHERICAL_POINTS"", 434); > core.set_global_option(""DFT_RADIAL_POINTS"", 85); > core.set_global_option(""REFERENCE"", ""uhf""); > set_memory(100000000000); > try:; > --> optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > core.set_global_option(""GUESS"", ""read""); > optimize('pwpb95-d3bj'); >; > Psi4 stopped on: Friday, 21 August 2020 04:21PM; > Psi4 wall time for execution: 0:00:04.47; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > As I am fairly new to",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879
https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:3486,Availability,Error,Error,3486,">; > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 1052, in optimize; > G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 710, in gradient; > **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 183, in _process_displacement; > derivative, wfn = derivfunc(method, return_wfn=True, molecule=clone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 556, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2018, in run_scf; > dfmp2_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: There are no occupied orbitals with beta spin.; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/dfmp2/mp2.cc on line: 196; > The most recent 5 function calls were:; >; >; >; >; > Printing out the relevant lines from the Psithon --> Python processed input file:; > core.set_global_option(""DFT_SPHERICAL_POINTS"", 434); > core.set_global_option(""DFT_RADIAL_POINTS"", 85); > core.set_global_option(""REFERENCE"", ""uhf""); > set_memory(100000000000); > try:; > --> optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > core.set_global_option(""GUESS"", ""read""); > optimize('pwpb95-d3bj'); >; > Psi4 stopped on: Friday, 21 August 2020 04:21PM; > Psi4 wall time for execution: 0:00:04.47; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > As I am fairly new to quantum chemistry, I do not really know how to; > interpret this error.; >; > Any pointers are appreciated.;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879
https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:4319,Availability,error,error,4319,"adient; > **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 183, in _process_displacement; > derivative, wfn = derivfunc(method, return_wfn=True, molecule=clone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 556, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2018, in run_scf; > dfmp2_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: There are no occupied orbitals with beta spin.; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/dfmp2/mp2.cc on line: 196; > The most recent 5 function calls were:; >; >; >; >; > Printing out the relevant lines from the Psithon --> Python processed input file:; > core.set_global_option(""DFT_SPHERICAL_POINTS"", 434); > core.set_global_option(""DFT_RADIAL_POINTS"", 85); > core.set_global_option(""REFERENCE"", ""uhf""); > set_memory(100000000000); > try:; > --> optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > core.set_global_option(""GUESS"", ""read""); > optimize('pwpb95-d3bj'); >; > Psi4 stopped on: Friday, 21 August 2020 04:21PM; > Psi4 wall time for execution: 0:00:04.47; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > As I am fairly new to quantum chemistry, I do not really know how to; > interpret this error.; >; > Any pointers are appreciated.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1995>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5SWSSKR4VM2JNJYNU3SC2AEXANCNFSM4QNFCNKQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879
https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:4499,Availability,error,error,4499,"adient; > **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 183, in _process_displacement; > derivative, wfn = derivfunc(method, return_wfn=True, molecule=clone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 556, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2018, in run_scf; > dfmp2_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: There are no occupied orbitals with beta spin.; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/dfmp2/mp2.cc on line: 196; > The most recent 5 function calls were:; >; >; >; >; > Printing out the relevant lines from the Psithon --> Python processed input file:; > core.set_global_option(""DFT_SPHERICAL_POINTS"", 434); > core.set_global_option(""DFT_RADIAL_POINTS"", 85); > core.set_global_option(""REFERENCE"", ""uhf""); > set_memory(100000000000); > try:; > --> optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > core.set_global_option(""GUESS"", ""read""); > optimize('pwpb95-d3bj'); >; > Psi4 stopped on: Friday, 21 August 2020 04:21PM; > Psi4 wall time for execution: 0:00:04.47; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > As I am fairly new to quantum chemistry, I do not really know how to; > interpret this error.; >; > Any pointers are appreciated.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1995>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5SWSSKR4VM2JNJYNU3SC2AEXANCNFSM4QNFCNKQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879
https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:3163,Energy Efficiency,energy,energy,3163,"-----------; > CLASS FOCC OCC AOCC AVIR VIR FVIR; > ALPHA 0 1 1 45 45 0; > BETA 0 0 0 46 46 0; > --------------------------------------------------------; >; >; > Traceback (most recent call last):; > File ""/home/username/miniconda/bin/psi4"", line 287, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 1052, in optimize; > G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 710, in gradient; > **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 183, in _process_displacement; > derivative, wfn = derivfunc(method, return_wfn=True, molecule=clone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 556, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2018, in run_scf; > dfmp2_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: There are no occupied orbitals with beta spin.; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/dfmp2/mp2.cc on line: 196; > The most recent 5 function calls were:; >; >; >; >; > Printing out the relevant lines from the Psithon --> Python processed input file:; > core.set_global_option(""DFT_SPHERICAL_POINTS"", 434); > core.set_global_option(""DFT_RADIAL_POINTS"", 85); > core.set_global_option(""REFERENCE"", ""uhf""); > set_memory(100000000000); > try:; > --> optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > core.set_global_option(""GUESS"", ""read""); > optimize('pwpb95-d3bj'); >; > Psi4 stopped on: Friday, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879
https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:3191,Energy Efficiency,energy,energy,3191,"-----------; > CLASS FOCC OCC AOCC AVIR VIR FVIR; > ALPHA 0 1 1 45 45 0; > BETA 0 0 0 46 46 0; > --------------------------------------------------------; >; >; > Traceback (most recent call last):; > File ""/home/username/miniconda/bin/psi4"", line 287, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 1052, in optimize; > G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 710, in gradient; > **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 183, in _process_displacement; > derivative, wfn = derivfunc(method, return_wfn=True, molecule=clone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 556, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2018, in run_scf; > dfmp2_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: There are no occupied orbitals with beta spin.; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/dfmp2/mp2.cc on line: 196; > The most recent 5 function calls were:; >; >; >; >; > Printing out the relevant lines from the Psithon --> Python processed input file:; > core.set_global_option(""DFT_SPHERICAL_POINTS"", 434); > core.set_global_option(""DFT_RADIAL_POINTS"", 85); > core.set_global_option(""REFERENCE"", ""uhf""); > set_memory(100000000000); > try:; > --> optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > core.set_global_option(""GUESS"", ""read""); > optimize('pwpb95-d3bj'); >; > Psi4 stopped on: Friday, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879
https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:424,Performance,optimiz,optimize,424,"Dear Alfred,. Yeah, the problem is, as the code says, ""Fatal Error: There are no occupied; orbitals with beta spin."" In our program, you can't run an MP2 calculation; on an atom or molecule that doesn't have any beta spin electrons. More; generally, an MP2 calculation doesn't make any sense for systems with only; one electron. Your method is a ""double hybrid"" that includes MP2 as a part; of it. Also, it's impossible to ""optimize"" (like you are trying to do) the; geometry of an atom. It has no internal degrees of freedom to optimize. These computational chemistry programs require a little bit of training to; be able to use properly... they're not totally bulletproof black boxes. Best,; David. On Thu, Aug 27, 2020 at 12:07 PM Alfred Andersson <notifications@github.com>; wrote:. > Hi,; >; > I've been trying to calculate the energies of monoatomic compounds. All of; > the atoms ran successfully, except for hydrogen with multiplicity 2.; >; > My in-file:; >; > molecule mol_atomic_hydrogen_doublet {; > 0 2; > H 0.000000000 0.000000000 0.000000000; >; > units angstrom; > no_reorient; > }; >; > set globals {; > basis aug-cc-pVQZ; > dft_spherical_points 434; > dft_radial_points 85; > reference uhf; > }; >; > set_memory(100000000000); > try:; > optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > set guess read; > optimize('pwpb95-d3bj'); >; > The error I got (including previous lines):; >; > *** tstart() called on host; > *** at Fri Aug 21 16:21:36 2020; >; > => Loading Basis Set <=; >; > Name: (AUG-CC-PVQZ AUX); > Role: RIFIT; > Keyword: DF_BASIS_MP2; > atoms 1 entry H line 30 file /home/username/miniconda/share/psi4/basis/aug-cc-pvqz-ri.gbs; >; > --------------------------------------------------------; > DF-MP2; > 2nd-Order Density-Fitted Moller-Plesset Theory; > UMP2 Wavefunction, 28 Threads; >; > Rob Parrish, Justin Turney, Andy Simmonett,; > Ed Hohenste",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879
https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:529,Performance,optimiz,optimize,529,"Dear Alfred,. Yeah, the problem is, as the code says, ""Fatal Error: There are no occupied; orbitals with beta spin."" In our program, you can't run an MP2 calculation; on an atom or molecule that doesn't have any beta spin electrons. More; generally, an MP2 calculation doesn't make any sense for systems with only; one electron. Your method is a ""double hybrid"" that includes MP2 as a part; of it. Also, it's impossible to ""optimize"" (like you are trying to do) the; geometry of an atom. It has no internal degrees of freedom to optimize. These computational chemistry programs require a little bit of training to; be able to use properly... they're not totally bulletproof black boxes. Best,; David. On Thu, Aug 27, 2020 at 12:07 PM Alfred Andersson <notifications@github.com>; wrote:. > Hi,; >; > I've been trying to calculate the energies of monoatomic compounds. All of; > the atoms ran successfully, except for hydrogen with multiplicity 2.; >; > My in-file:; >; > molecule mol_atomic_hydrogen_doublet {; > 0 2; > H 0.000000000 0.000000000 0.000000000; >; > units angstrom; > no_reorient; > }; >; > set globals {; > basis aug-cc-pVQZ; > dft_spherical_points 434; > dft_radial_points 85; > reference uhf; > }; >; > set_memory(100000000000); > try:; > optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > set guess read; > optimize('pwpb95-d3bj'); >; > The error I got (including previous lines):; >; > *** tstart() called on host; > *** at Fri Aug 21 16:21:36 2020; >; > => Loading Basis Set <=; >; > Name: (AUG-CC-PVQZ AUX); > Role: RIFIT; > Keyword: DF_BASIS_MP2; > atoms 1 entry H line 30 file /home/username/miniconda/share/psi4/basis/aug-cc-pvqz-ri.gbs; >; > --------------------------------------------------------; > DF-MP2; > 2nd-Order Density-Fitted Moller-Plesset Theory; > UMP2 Wavefunction, 28 Threads; >; > Rob Parrish, Justin Turney, Andy Simmonett,; > Ed Hohenste",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879
https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:1255,Performance,optimiz,optimize,1255," doesn't have any beta spin electrons. More; generally, an MP2 calculation doesn't make any sense for systems with only; one electron. Your method is a ""double hybrid"" that includes MP2 as a part; of it. Also, it's impossible to ""optimize"" (like you are trying to do) the; geometry of an atom. It has no internal degrees of freedom to optimize. These computational chemistry programs require a little bit of training to; be able to use properly... they're not totally bulletproof black boxes. Best,; David. On Thu, Aug 27, 2020 at 12:07 PM Alfred Andersson <notifications@github.com>; wrote:. > Hi,; >; > I've been trying to calculate the energies of monoatomic compounds. All of; > the atoms ran successfully, except for hydrogen with multiplicity 2.; >; > My in-file:; >; > molecule mol_atomic_hydrogen_doublet {; > 0 2; > H 0.000000000 0.000000000 0.000000000; >; > units angstrom; > no_reorient; > }; >; > set globals {; > basis aug-cc-pVQZ; > dft_spherical_points 434; > dft_radial_points 85; > reference uhf; > }; >; > set_memory(100000000000); > try:; > optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > set guess read; > optimize('pwpb95-d3bj'); >; > The error I got (including previous lines):; >; > *** tstart() called on host; > *** at Fri Aug 21 16:21:36 2020; >; > => Loading Basis Set <=; >; > Name: (AUG-CC-PVQZ AUX); > Role: RIFIT; > Keyword: DF_BASIS_MP2; > atoms 1 entry H line 30 file /home/username/miniconda/share/psi4/basis/aug-cc-pvqz-ri.gbs; >; > --------------------------------------------------------; > DF-MP2; > 2nd-Order Density-Fitted Moller-Plesset Theory; > UMP2 Wavefunction, 28 Threads; >; > Rob Parrish, Justin Turney, Andy Simmonett,; > Ed Hohenstein, and C. David Sherrill; > --------------------------------------------------------; >; > --------------------------------------------------------; > NBF = 46, NAUX = 80; > -------------------",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879
https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:1445,Performance,optimiz,optimize,1445," little bit of training to; be able to use properly... they're not totally bulletproof black boxes. Best,; David. On Thu, Aug 27, 2020 at 12:07 PM Alfred Andersson <notifications@github.com>; wrote:. > Hi,; >; > I've been trying to calculate the energies of monoatomic compounds. All of; > the atoms ran successfully, except for hydrogen with multiplicity 2.; >; > My in-file:; >; > molecule mol_atomic_hydrogen_doublet {; > 0 2; > H 0.000000000 0.000000000 0.000000000; >; > units angstrom; > no_reorient; > }; >; > set globals {; > basis aug-cc-pVQZ; > dft_spherical_points 434; > dft_radial_points 85; > reference uhf; > }; >; > set_memory(100000000000); > try:; > optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > set guess read; > optimize('pwpb95-d3bj'); >; > The error I got (including previous lines):; >; > *** tstart() called on host; > *** at Fri Aug 21 16:21:36 2020; >; > => Loading Basis Set <=; >; > Name: (AUG-CC-PVQZ AUX); > Role: RIFIT; > Keyword: DF_BASIS_MP2; > atoms 1 entry H line 30 file /home/username/miniconda/share/psi4/basis/aug-cc-pvqz-ri.gbs; >; > --------------------------------------------------------; > DF-MP2; > 2nd-Order Density-Fitted Moller-Plesset Theory; > UMP2 Wavefunction, 28 Threads; >; > Rob Parrish, Justin Turney, Andy Simmonett,; > Ed Hohenstein, and C. David Sherrill; > --------------------------------------------------------; >; > --------------------------------------------------------; > NBF = 46, NAUX = 80; > --------------------------------------------------------; > CLASS FOCC OCC AOCC AVIR VIR FVIR; > ALPHA 0 1 1 45 45 0; > BETA 0 0 0 46 46 0; > --------------------------------------------------------; >; >; > Traceback (most recent call last):; > File ""/home/username/miniconda/bin/psi4"", line 287, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/home/username/miniconda/lib//pyth",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879
https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:1597,Performance,Load,Loading,1597," little bit of training to; be able to use properly... they're not totally bulletproof black boxes. Best,; David. On Thu, Aug 27, 2020 at 12:07 PM Alfred Andersson <notifications@github.com>; wrote:. > Hi,; >; > I've been trying to calculate the energies of monoatomic compounds. All of; > the atoms ran successfully, except for hydrogen with multiplicity 2.; >; > My in-file:; >; > molecule mol_atomic_hydrogen_doublet {; > 0 2; > H 0.000000000 0.000000000 0.000000000; >; > units angstrom; > no_reorient; > }; >; > set globals {; > basis aug-cc-pVQZ; > dft_spherical_points 434; > dft_radial_points 85; > reference uhf; > }; >; > set_memory(100000000000); > try:; > optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > set guess read; > optimize('pwpb95-d3bj'); >; > The error I got (including previous lines):; >; > *** tstart() called on host; > *** at Fri Aug 21 16:21:36 2020; >; > => Loading Basis Set <=; >; > Name: (AUG-CC-PVQZ AUX); > Role: RIFIT; > Keyword: DF_BASIS_MP2; > atoms 1 entry H line 30 file /home/username/miniconda/share/psi4/basis/aug-cc-pvqz-ri.gbs; >; > --------------------------------------------------------; > DF-MP2; > 2nd-Order Density-Fitted Moller-Plesset Theory; > UMP2 Wavefunction, 28 Threads; >; > Rob Parrish, Justin Turney, Andy Simmonett,; > Ed Hohenstein, and C. David Sherrill; > --------------------------------------------------------; >; > --------------------------------------------------------; > NBF = 46, NAUX = 80; > --------------------------------------------------------; > CLASS FOCC OCC AOCC AVIR VIR FVIR; > ALPHA 0 1 1 45 45 0; > BETA 0 0 0 46 46 0; > --------------------------------------------------------; >; >; > Traceback (most recent call last):; > File ""/home/username/miniconda/bin/psi4"", line 287, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/home/username/miniconda/lib//pyth",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879
https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:2645,Performance,optimiz,optimize,2645,"H line 30 file /home/username/miniconda/share/psi4/basis/aug-cc-pvqz-ri.gbs; >; > --------------------------------------------------------; > DF-MP2; > 2nd-Order Density-Fitted Moller-Plesset Theory; > UMP2 Wavefunction, 28 Threads; >; > Rob Parrish, Justin Turney, Andy Simmonett,; > Ed Hohenstein, and C. David Sherrill; > --------------------------------------------------------; >; > --------------------------------------------------------; > NBF = 46, NAUX = 80; > --------------------------------------------------------; > CLASS FOCC OCC AOCC AVIR VIR FVIR; > ALPHA 0 1 1 45 45 0; > BETA 0 0 0 46 46 0; > --------------------------------------------------------; >; >; > Traceback (most recent call last):; > File ""/home/username/miniconda/bin/psi4"", line 287, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 1052, in optimize; > G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 710, in gradient; > **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 183, in _process_displacement; > derivative, wfn = derivfunc(method, return_wfn=True, molecule=clone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 556, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2018, in run_scf; > dfmp2_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: There are no occupied orbitals with beta spin.; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/dfmp2/mp2.cc on line: 196; > The most recent 5 function calls were:; >; >; >; >; > Printing out the relevant line",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879
https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:3952,Performance,optimiz,optimize,3952,"adient; > **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 183, in _process_displacement; > derivative, wfn = derivfunc(method, return_wfn=True, molecule=clone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 556, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2018, in run_scf; > dfmp2_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: There are no occupied orbitals with beta spin.; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/dfmp2/mp2.cc on line: 196; > The most recent 5 function calls were:; >; >; >; >; > Printing out the relevant lines from the Psithon --> Python processed input file:; > core.set_global_option(""DFT_SPHERICAL_POINTS"", 434); > core.set_global_option(""DFT_RADIAL_POINTS"", 85); > core.set_global_option(""REFERENCE"", ""uhf""); > set_memory(100000000000); > try:; > --> optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > core.set_global_option(""GUESS"", ""read""); > optimize('pwpb95-d3bj'); >; > Psi4 stopped on: Friday, 21 August 2020 04:21PM; > Psi4 wall time for execution: 0:00:04.47; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > As I am fairly new to quantum chemistry, I do not really know how to; > interpret this error.; >; > Any pointers are appreciated.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1995>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5SWSSKR4VM2JNJYNU3SC2AEXANCNFSM4QNFCNKQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879
https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:4167,Performance,optimiz,optimize,4167,"adient; > **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 183, in _process_displacement; > derivative, wfn = derivfunc(method, return_wfn=True, molecule=clone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 556, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2018, in run_scf; > dfmp2_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: There are no occupied orbitals with beta spin.; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/dfmp2/mp2.cc on line: 196; > The most recent 5 function calls were:; >; >; >; >; > Printing out the relevant lines from the Psithon --> Python processed input file:; > core.set_global_option(""DFT_SPHERICAL_POINTS"", 434); > core.set_global_option(""DFT_RADIAL_POINTS"", 85); > core.set_global_option(""REFERENCE"", ""uhf""); > set_memory(100000000000); > try:; > --> optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > core.set_global_option(""GUESS"", ""read""); > optimize('pwpb95-d3bj'); >; > Psi4 stopped on: Friday, 21 August 2020 04:21PM; > Psi4 wall time for execution: 0:00:04.47; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > As I am fairly new to quantum chemistry, I do not really know how to; > interpret this error.; >; > Any pointers are appreciated.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1995>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5SWSSKR4VM2JNJYNU3SC2AEXANCNFSM4QNFCNKQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879
https://github.com/psi4/psi4/issues/1995#issuecomment-682599493:72,Availability,error,errors,72,"Thank you for suggesting the dev version. It worked without any further errors or warnings. Cheers!. That is a good point, David. In this case we just wanted to optimize the energy, not the structure, and we already had scripts to do so for larger molecules. Thank you for the heads-up!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682599493
https://github.com/psi4/psi4/issues/1995#issuecomment-682599493:174,Energy Efficiency,energy,energy,174,"Thank you for suggesting the dev version. It worked without any further errors or warnings. Cheers!. That is a good point, David. In this case we just wanted to optimize the energy, not the structure, and we already had scripts to do so for larger molecules. Thank you for the heads-up!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682599493
https://github.com/psi4/psi4/issues/1995#issuecomment-682599493:161,Performance,optimiz,optimize,161,"Thank you for suggesting the dev version. It worked without any further errors or warnings. Cheers!. That is a good point, David. In this case we just wanted to optimize the energy, not the structure, and we already had scripts to do so for larger molecules. Thank you for the heads-up!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682599493
https://github.com/psi4/psi4/issues/1998#issuecomment-683270457:30,Integrability,depend,dependencies,30,This was done to force linear dependencies on a small system for debugging. The forum post has the originally reported molecule where 1 MO is removed.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1998#issuecomment-683270457
https://github.com/psi4/psi4/pull/1999#issuecomment-683299221:26,Testability,test,test,26,@loriab you mean as a new test case?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1999#issuecomment-683299221
https://github.com/psi4/psi4/pull/1999#issuecomment-683300840:23,Testability,test,test,23,Done. I simplified the test case further.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1999#issuecomment-683300840
https://github.com/psi4/psi4/pull/1999#issuecomment-683300840:8,Usability,simpl,simplified,8,Done. I simplified the test case further.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1999#issuecomment-683300840
https://github.com/psi4/psi4/pull/2001#issuecomment-683462708:0,Deployability,update,updated,0,updated OP with current formatting example.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2001#issuecomment-683462708
https://github.com/psi4/psi4/pull/2003#issuecomment-687585556:96,Energy Efficiency,adapt,adapted,96,"Surprising that the low memory algorithm is faster! . I think in that case the output should be adapted to avoid confusion as there are warnings printed. Maybe also 'regular algorithm' can have a different name, but it's what other programs do, I suppose. https://github.com/psi4/psi4/blob/master/psi4/src/psi4/fnocc/lowmemory_triples.cc#L72; https://github.com/psi4/psi4/blob/master/psi4/src/psi4/fnocc/df_ccsd.cc#L659-L661; https://github.com/psi4/psi4/blob/master/psi4/src/psi4/fnocc/ccsd.cc#L780",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2003#issuecomment-687585556
https://github.com/psi4/psi4/pull/2003#issuecomment-687585556:96,Modifiability,adapt,adapted,96,"Surprising that the low memory algorithm is faster! . I think in that case the output should be adapted to avoid confusion as there are warnings printed. Maybe also 'regular algorithm' can have a different name, but it's what other programs do, I suppose. https://github.com/psi4/psi4/blob/master/psi4/src/psi4/fnocc/lowmemory_triples.cc#L72; https://github.com/psi4/psi4/blob/master/psi4/src/psi4/fnocc/df_ccsd.cc#L659-L661; https://github.com/psi4/psi4/blob/master/psi4/src/psi4/fnocc/ccsd.cc#L780",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2003#issuecomment-687585556
https://github.com/psi4/psi4/pull/2003#issuecomment-687585556:107,Safety,avoid,avoid,107,"Surprising that the low memory algorithm is faster! . I think in that case the output should be adapted to avoid confusion as there are warnings printed. Maybe also 'regular algorithm' can have a different name, but it's what other programs do, I suppose. https://github.com/psi4/psi4/blob/master/psi4/src/psi4/fnocc/lowmemory_triples.cc#L72; https://github.com/psi4/psi4/blob/master/psi4/src/psi4/fnocc/df_ccsd.cc#L659-L661; https://github.com/psi4/psi4/blob/master/psi4/src/psi4/fnocc/ccsd.cc#L780",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2003#issuecomment-687585556
https://github.com/psi4/psi4/pull/2003#issuecomment-687637537:44,Energy Efficiency,adapt,adapted,44,"> I think in that case the output should be adapted to avoid confusion as there are warnings printed. Maybe also 'regular algorithm' can have a different name, but it's what other programs do, I suppose. Yes, there's some graphs to prove it I should dig up. Thanks for reading the printouts -- I glanced at the logic but not the warnings. Now memory and algorithm are printed with ""high-memory""/""low-memory"" labels and without efficiency judgements.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2003#issuecomment-687637537
https://github.com/psi4/psi4/pull/2003#issuecomment-687637537:44,Modifiability,adapt,adapted,44,"> I think in that case the output should be adapted to avoid confusion as there are warnings printed. Maybe also 'regular algorithm' can have a different name, but it's what other programs do, I suppose. Yes, there's some graphs to prove it I should dig up. Thanks for reading the printouts -- I glanced at the logic but not the warnings. Now memory and algorithm are printed with ""high-memory""/""low-memory"" labels and without efficiency judgements.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2003#issuecomment-687637537
https://github.com/psi4/psi4/pull/2003#issuecomment-687637537:55,Safety,avoid,avoid,55,"> I think in that case the output should be adapted to avoid confusion as there are warnings printed. Maybe also 'regular algorithm' can have a different name, but it's what other programs do, I suppose. Yes, there's some graphs to prove it I should dig up. Thanks for reading the printouts -- I glanced at the logic but not the warnings. Now memory and algorithm are printed with ""high-memory""/""low-memory"" labels and without efficiency judgements.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2003#issuecomment-687637537
https://github.com/psi4/psi4/pull/2003#issuecomment-687637537:311,Testability,log,logic,311,"> I think in that case the output should be adapted to avoid confusion as there are warnings printed. Maybe also 'regular algorithm' can have a different name, but it's what other programs do, I suppose. Yes, there's some graphs to prove it I should dig up. Thanks for reading the printouts -- I glanced at the logic but not the warnings. Now memory and algorithm are printed with ""high-memory""/""low-memory"" labels and without efficiency judgements.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2003#issuecomment-687637537
https://github.com/psi4/psi4/pull/2003#issuecomment-687845899:128,Availability,down,down,128,"general note: now that I have the correct base of `master`, azure should run and fail on mbis-3. @zachglick tracked the problem down to nondeterministic root solutions of the degenerate states. a PR will happen.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2003#issuecomment-687845899
https://github.com/psi4/psi4/pull/2003#issuecomment-688988721:128,Availability,down,down,128,"> general note: now that I have the correct base of master, azure should run and fail on mbis-3. @zachglick tracked the problem down to nondeterministic root solutions of the degenerate states. a PR will happen. follow-up: I've removed mbis-3 from quicktests so this one can merge. note that it's a known failure in full tests for now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2003#issuecomment-688988721
https://github.com/psi4/psi4/pull/2003#issuecomment-688988721:305,Availability,failure,failure,305,"> general note: now that I have the correct base of master, azure should run and fail on mbis-3. @zachglick tracked the problem down to nondeterministic root solutions of the degenerate states. a PR will happen. follow-up: I've removed mbis-3 from quicktests so this one can merge. note that it's a known failure in full tests for now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2003#issuecomment-688988721
https://github.com/psi4/psi4/pull/2003#issuecomment-688988721:321,Testability,test,tests,321,"> general note: now that I have the correct base of master, azure should run and fail on mbis-3. @zachglick tracked the problem down to nondeterministic root solutions of the degenerate states. a PR will happen. follow-up: I've removed mbis-3 from quicktests so this one can merge. note that it's a known failure in full tests for now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2003#issuecomment-688988721
https://github.com/psi4/psi4/pull/2006#issuecomment-692848126:52,Testability,test,tests,52,"TD-SCF seems to work as well, I'm going to add some tests for PE...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2006#issuecomment-692848126
https://github.com/psi4/psi4/pull/2006#issuecomment-693011710:113,Testability,test,test,113,Reference values for PCM excitation energies can be found here: https://gitlab.com/dalton/lsdalton/-/blob/master/test/pcm/pcm_linear_response/reference/opa_hf_H2O_noneq_pcmsolver.out,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2006#issuecomment-693011710
https://github.com/psi4/psi4/pull/2006#issuecomment-693220292:149,Deployability,integrat,integrated,149,"> Reference values for PCM excitation energies can be found here. ~~I guess for the tests to work, the above stuff with `nonequilibrium` needs to be integrated first~~ 😅; Yes...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2006#issuecomment-693220292
https://github.com/psi4/psi4/pull/2006#issuecomment-693220292:149,Integrability,integrat,integrated,149,"> Reference values for PCM excitation energies can be found here. ~~I guess for the tests to work, the above stuff with `nonequilibrium` needs to be integrated first~~ 😅; Yes...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2006#issuecomment-693220292
https://github.com/psi4/psi4/pull/2006#issuecomment-693220292:84,Testability,test,tests,84,"> Reference values for PCM excitation energies can be found here. ~~I guess for the tests to work, the above stuff with `nonequilibrium` needs to be integrated first~~ 😅; Yes...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2006#issuecomment-693220292
https://github.com/psi4/psi4/pull/2006#issuecomment-693506447:44,Availability,avail,available,44,"Since there are basically no reference data available for UHF, I guess the only thing one could do is to add Psi4-generated data for consistency tests...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2006#issuecomment-693506447
https://github.com/psi4/psi4/pull/2006#issuecomment-693506447:145,Testability,test,tests,145,"Since there are basically no reference data available for UHF, I guess the only thing one could do is to add Psi4-generated data for consistency tests...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2006#issuecomment-693506447
https://github.com/psi4/psi4/pull/2006#issuecomment-694218871:4,Testability,test,test,4,"UHF test; ----; gas-phase excitation energies of NH2 radical [eV]:; | state | PSI4 | ORCA | G09 |; |-------|----------|--------|--------|; | 1 | 2.36769 | 2.369 | 2.3694 |; | 2 | 7.52375 | 7.524 | 7.5243 |; | 3 | 8.75931 | 8.760 | 8.7605 |; | 4 | 9.78624 | 9.787 | 9.7872 |; | 5 | 10.23732 | 10.238 | 9.9305 |. ----; CPCM solvation model excitation energies of NH2 radical [eV]:; (Same radii, epsilon, refraction index, probe radius in each program); | state | PSI4 | ORCA | G09 |; |------:|----------|--------|---------|; | 1 | 2.43618 | 2.445 | 2.4411 |; | 2 | 7.39834 | 7.223 | 7.3993 |; | 3 | 9.11054 | 8.978 | 9.1777 |; | 4 | 10.10634 | 9.857 | 10.1017 |; | 5 | 10.21780 | 10.359 | 10.3305 |. PSI4 and G09 agree quite well. ORCA's CPCM seems more different and shows how impactful a different implementation can be. The last state is acting strange in general.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2006#issuecomment-694218871
https://github.com/psi4/psi4/pull/2006#issuecomment-694478253:171,Energy Efficiency,energy,energy,171,"I made a pass at the docs, very minimal. Not sure how extensive it should be. @maxscheurer the pe-tdscf test for RHF does not pass on my mac with cppe via pip. Excitation energy number 3 is off, rest is fine. No idea why, right now. ```; !----------------------------------------------------------------------------------!; ! !; ! PE OSCILLATOR STRENGTH: computed value does not match to atol=1e-05. !; ! Expected: !; ! [0.000004406911 0.000089321058 0.432081257 0.113168661 0.0190262828 ] !; ! Observed: !; ! [0.000004444431 0.000089181257 0.432105919683 0.113174232326 0.019027243438] !; ! Difference (passed elements are zeroed): !; ! [0.000000000000e+00 0.000000000000e+00 2.466268274193e-05 0.000000000000e+00 !; ! 0.000000000000e+00] !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2006#issuecomment-694478253
https://github.com/psi4/psi4/pull/2006#issuecomment-694478253:104,Testability,test,test,104,"I made a pass at the docs, very minimal. Not sure how extensive it should be. @maxscheurer the pe-tdscf test for RHF does not pass on my mac with cppe via pip. Excitation energy number 3 is off, rest is fine. No idea why, right now. ```; !----------------------------------------------------------------------------------!; ! !; ! PE OSCILLATOR STRENGTH: computed value does not match to atol=1e-05. !; ! Expected: !; ! [0.000004406911 0.000089321058 0.432081257 0.113168661 0.0190262828 ] !; ! Observed: !; ! [0.000004444431 0.000089181257 0.432105919683 0.113174232326 0.019027243438] !; ! Difference (passed elements are zeroed): !; ! [0.000000000000e+00 0.000000000000e+00 2.466268274193e-05 0.000000000000e+00 !; ! 0.000000000000e+00] !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2006#issuecomment-694478253
https://github.com/psi4/psi4/issues/2007#issuecomment-692972528:29,Integrability,rout,routines,29,"Yes, the 1 electron integral routines are getting a very significant rewrite after that pull request is in; they will use libint2, and will be screened for overlap. The original 1e integral code was really written with the standard core hamiltonian in mind, where performance is never an issue. Parallelization of that rewritten code should be relatively easy. I haven't quite decided the best order to reconcile the changes to the integral engine with #1946 yet, but we'll get that merged as soon as we can. Thanks for posting this issue so that we can all coordinate - hopefully everything will be much easier when all of the old integral code is ripped out.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2007#issuecomment-692972528
https://github.com/psi4/psi4/issues/2007#issuecomment-692972528:69,Modifiability,rewrite,rewrite,69,"Yes, the 1 electron integral routines are getting a very significant rewrite after that pull request is in; they will use libint2, and will be screened for overlap. The original 1e integral code was really written with the standard core hamiltonian in mind, where performance is never an issue. Parallelization of that rewritten code should be relatively easy. I haven't quite decided the best order to reconcile the changes to the integral engine with #1946 yet, but we'll get that merged as soon as we can. Thanks for posting this issue so that we can all coordinate - hopefully everything will be much easier when all of the old integral code is ripped out.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2007#issuecomment-692972528
https://github.com/psi4/psi4/issues/2007#issuecomment-692972528:264,Performance,perform,performance,264,"Yes, the 1 electron integral routines are getting a very significant rewrite after that pull request is in; they will use libint2, and will be screened for overlap. The original 1e integral code was really written with the standard core hamiltonian in mind, where performance is never an issue. Parallelization of that rewritten code should be relatively easy. I haven't quite decided the best order to reconcile the changes to the integral engine with #1946 yet, but we'll get that merged as soon as we can. Thanks for posting this issue so that we can all coordinate - hopefully everything will be much easier when all of the old integral code is ripped out.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2007#issuecomment-692972528
https://github.com/psi4/psi4/issues/2008#issuecomment-693713660:197,Usability,simpl,simplicity,197,"The two codes agree with each other, once you correct for the fact that they store determinants differently, creating a phase disagreement. Let's restrict ourselves to spatial orbitals 8 and 9 for simplicity.; You order orbitals as 8A 8B 9A 9B. Loop by spatial orbital, then by spin.; Psi orders orbitals as 8A 9A 8B 9B. Loop by spin, then by spatial orbital. Internally, Psi's FCI stores a string of alpha orbitals and then a string of beta orbitals. This is only possible because of this orbital ordering. So you say that 8A 9B and 8B 9A have opposite phases. Psi says that 8A 9B and 9A 8B have the same phases. Both are correct.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2008#issuecomment-693713660
https://github.com/psi4/psi4/issues/2008#issuecomment-693738345:1878,Energy Efficiency,energy,energy,1878,"le. I am particularly interested by the determinant decomposition of; > the ground and first excited state of the molecule (singlet symmetry).; > However, I think I have noticed a pb concerning the sign of the; > determinants in the output.; >; > First, I give you my INPUT in python :; >; > pes_origin = [1.498047, 1.066797, 0.987109, 118.359375]; >; > variables = pes_origin[:] + [90, 90]; >; > psi4.geometry(; >; > """"""; >; > N; >; > C 1 {0}; >; > H 2 {1} 1 {3}; >; > H 2 {1} 1 {3} 3 180; >; > H 1 {2} 2 {4} 3 {5}; >; > symmetry c1"""""".format(*variables) ); >; >; >; > psi4.set_options({ 'basis': 'cc-pvdz',; >; > 'DETCI_FREEZE_CORE' : False,; >; > 'reference': 'RHF',; >; > 'num_roots': 2,; >; > 'frozen_docc':[0],; >; > 'restricted_docc': [6],; >; > 'active': [3],; >; > 'restricted_uocc': [11],; >; > 'frozen_uocc': [23],; >; > 'mcscf_maxiter': 1000,; >; > 'avg_states' : [ 0, 1],; >; > 'avg_weights' : [ 0.5, 0.5 ]; >; > }); >; >; >; > sacasscf, sacasscf_wfn = psi4.energy('casscf',return_wfn=True); >; > E0_sacasscf = psi4.variable('CI ROOT 0 TOTAL ENERGY'); >; > E1_sacasscf = psi4.variable('CI ROOT 1 TOTAL ENERGY'); >; >; > Then, I give you from the OUTPUT FILE the decomposition I obtain :; > ------------------------------; > ------------------------------; >; > ==> MCSCF root 0 information <==; >; >; >; > MCSCF Root 0 energy = -93.931448649953467; >; >; > Active Space Natural occupation numbers:; >; > A 2.000000 A 1.000000 A 1.000000; >; >; > The 9 most important determinants:; >; > * 1 0.691216 ( 0, 1) 7AX 8AA 9AB; >; > * 2 0.691216 ( 1, 0) 7AX 8AB 9AA; >; > * 3 -0.149064 ( 1, 2) 7AA 8AB 9AX; >; > * 4 -0.149064 ( 2, 1) 7AB 8AA 9AX; >; > * 5 0.000000 ( 0, 0) 7AX 8AX; >; > * 6 0.000000 ( 0, 2) 7AA 8AX 9AB; >; > * 7 0.000000 ( 2, 0) 7AB 8AX 9AA; >; > * 8 -0.000000 ( 2, 2) 8AX 9AX; >; > * 9 -0.000000 ( 1, 1) 7AX 9AX; >; >; > ==> MCSCF root 1 information <==; >; > MCSCF Root 1 energy = -93.902550337672878; >; >; > Active Space Natural occupation numbers:; >; > A 1.999537 A 1.84",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2008#issuecomment-693738345
https://github.com/psi4/psi4/issues/2008#issuecomment-693738345:1962,Energy Efficiency,ENERGY,ENERGY,1962,"sition of; > the ground and first excited state of the molecule (singlet symmetry).; > However, I think I have noticed a pb concerning the sign of the; > determinants in the output.; >; > First, I give you my INPUT in python :; >; > pes_origin = [1.498047, 1.066797, 0.987109, 118.359375]; >; > variables = pes_origin[:] + [90, 90]; >; > psi4.geometry(; >; > """"""; >; > N; >; > C 1 {0}; >; > H 2 {1} 1 {3}; >; > H 2 {1} 1 {3} 3 180; >; > H 1 {2} 2 {4} 3 {5}; >; > symmetry c1"""""".format(*variables) ); >; >; >; > psi4.set_options({ 'basis': 'cc-pvdz',; >; > 'DETCI_FREEZE_CORE' : False,; >; > 'reference': 'RHF',; >; > 'num_roots': 2,; >; > 'frozen_docc':[0],; >; > 'restricted_docc': [6],; >; > 'active': [3],; >; > 'restricted_uocc': [11],; >; > 'frozen_uocc': [23],; >; > 'mcscf_maxiter': 1000,; >; > 'avg_states' : [ 0, 1],; >; > 'avg_weights' : [ 0.5, 0.5 ]; >; > }); >; >; >; > sacasscf, sacasscf_wfn = psi4.energy('casscf',return_wfn=True); >; > E0_sacasscf = psi4.variable('CI ROOT 0 TOTAL ENERGY'); >; > E1_sacasscf = psi4.variable('CI ROOT 1 TOTAL ENERGY'); >; >; > Then, I give you from the OUTPUT FILE the decomposition I obtain :; > ------------------------------; > ------------------------------; >; > ==> MCSCF root 0 information <==; >; >; >; > MCSCF Root 0 energy = -93.931448649953467; >; >; > Active Space Natural occupation numbers:; >; > A 2.000000 A 1.000000 A 1.000000; >; >; > The 9 most important determinants:; >; > * 1 0.691216 ( 0, 1) 7AX 8AA 9AB; >; > * 2 0.691216 ( 1, 0) 7AX 8AB 9AA; >; > * 3 -0.149064 ( 1, 2) 7AA 8AB 9AX; >; > * 4 -0.149064 ( 2, 1) 7AB 8AA 9AX; >; > * 5 0.000000 ( 0, 0) 7AX 8AX; >; > * 6 0.000000 ( 0, 2) 7AA 8AX 9AB; >; > * 7 0.000000 ( 2, 0) 7AB 8AX 9AA; >; > * 8 -0.000000 ( 2, 2) 8AX 9AX; >; > * 9 -0.000000 ( 1, 1) 7AX 9AX; >; >; > ==> MCSCF root 1 information <==; >; > MCSCF Root 1 energy = -93.902550337672878; >; >; > Active Space Natural occupation numbers:; >; > A 1.999537 A 1.843676 A 0.156787; >; >; > The 9 most important determinants:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2008#issuecomment-693738345
https://github.com/psi4/psi4/issues/2008#issuecomment-693738345:2022,Energy Efficiency,ENERGY,ENERGY,2022,"rminants in the output.; >; > First, I give you my INPUT in python :; >; > pes_origin = [1.498047, 1.066797, 0.987109, 118.359375]; >; > variables = pes_origin[:] + [90, 90]; >; > psi4.geometry(; >; > """"""; >; > N; >; > C 1 {0}; >; > H 2 {1} 1 {3}; >; > H 2 {1} 1 {3} 3 180; >; > H 1 {2} 2 {4} 3 {5}; >; > symmetry c1"""""".format(*variables) ); >; >; >; > psi4.set_options({ 'basis': 'cc-pvdz',; >; > 'DETCI_FREEZE_CORE' : False,; >; > 'reference': 'RHF',; >; > 'num_roots': 2,; >; > 'frozen_docc':[0],; >; > 'restricted_docc': [6],; >; > 'active': [3],; >; > 'restricted_uocc': [11],; >; > 'frozen_uocc': [23],; >; > 'mcscf_maxiter': 1000,; >; > 'avg_states' : [ 0, 1],; >; > 'avg_weights' : [ 0.5, 0.5 ]; >; > }); >; >; >; > sacasscf, sacasscf_wfn = psi4.energy('casscf',return_wfn=True); >; > E0_sacasscf = psi4.variable('CI ROOT 0 TOTAL ENERGY'); >; > E1_sacasscf = psi4.variable('CI ROOT 1 TOTAL ENERGY'); >; >; > Then, I give you from the OUTPUT FILE the decomposition I obtain :; > ------------------------------; > ------------------------------; >; > ==> MCSCF root 0 information <==; >; >; >; > MCSCF Root 0 energy = -93.931448649953467; >; >; > Active Space Natural occupation numbers:; >; > A 2.000000 A 1.000000 A 1.000000; >; >; > The 9 most important determinants:; >; > * 1 0.691216 ( 0, 1) 7AX 8AA 9AB; >; > * 2 0.691216 ( 1, 0) 7AX 8AB 9AA; >; > * 3 -0.149064 ( 1, 2) 7AA 8AB 9AX; >; > * 4 -0.149064 ( 2, 1) 7AB 8AA 9AX; >; > * 5 0.000000 ( 0, 0) 7AX 8AX; >; > * 6 0.000000 ( 0, 2) 7AA 8AX 9AB; >; > * 7 0.000000 ( 2, 0) 7AB 8AX 9AA; >; > * 8 -0.000000 ( 2, 2) 8AX 9AX; >; > * 9 -0.000000 ( 1, 1) 7AX 9AX; >; >; > ==> MCSCF root 1 information <==; >; > MCSCF Root 1 energy = -93.902550337672878; >; >; > Active Space Natural occupation numbers:; >; > A 1.999537 A 1.843676 A 0.156787; >; >; > The 9 most important determinants:; >; > * 1 -0.887365 ( 0, 0) 7AX 8AX; >; > * 2 -0.291143 ( 0, 2) 7AA 8AX 9AB; >; > * 3 -0.291143 ( 2, 0) 7AB 8AX 9AA; >; > * 4 0.206936 ( 2, 2) 8AX 9AX; >; > ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2008#issuecomment-693738345
https://github.com/psi4/psi4/issues/2008#issuecomment-693738345:2239,Energy Efficiency,energy,energy,2239,"rminants in the output.; >; > First, I give you my INPUT in python :; >; > pes_origin = [1.498047, 1.066797, 0.987109, 118.359375]; >; > variables = pes_origin[:] + [90, 90]; >; > psi4.geometry(; >; > """"""; >; > N; >; > C 1 {0}; >; > H 2 {1} 1 {3}; >; > H 2 {1} 1 {3} 3 180; >; > H 1 {2} 2 {4} 3 {5}; >; > symmetry c1"""""".format(*variables) ); >; >; >; > psi4.set_options({ 'basis': 'cc-pvdz',; >; > 'DETCI_FREEZE_CORE' : False,; >; > 'reference': 'RHF',; >; > 'num_roots': 2,; >; > 'frozen_docc':[0],; >; > 'restricted_docc': [6],; >; > 'active': [3],; >; > 'restricted_uocc': [11],; >; > 'frozen_uocc': [23],; >; > 'mcscf_maxiter': 1000,; >; > 'avg_states' : [ 0, 1],; >; > 'avg_weights' : [ 0.5, 0.5 ]; >; > }); >; >; >; > sacasscf, sacasscf_wfn = psi4.energy('casscf',return_wfn=True); >; > E0_sacasscf = psi4.variable('CI ROOT 0 TOTAL ENERGY'); >; > E1_sacasscf = psi4.variable('CI ROOT 1 TOTAL ENERGY'); >; >; > Then, I give you from the OUTPUT FILE the decomposition I obtain :; > ------------------------------; > ------------------------------; >; > ==> MCSCF root 0 information <==; >; >; >; > MCSCF Root 0 energy = -93.931448649953467; >; >; > Active Space Natural occupation numbers:; >; > A 2.000000 A 1.000000 A 1.000000; >; >; > The 9 most important determinants:; >; > * 1 0.691216 ( 0, 1) 7AX 8AA 9AB; >; > * 2 0.691216 ( 1, 0) 7AX 8AB 9AA; >; > * 3 -0.149064 ( 1, 2) 7AA 8AB 9AX; >; > * 4 -0.149064 ( 2, 1) 7AB 8AA 9AX; >; > * 5 0.000000 ( 0, 0) 7AX 8AX; >; > * 6 0.000000 ( 0, 2) 7AA 8AX 9AB; >; > * 7 0.000000 ( 2, 0) 7AB 8AX 9AA; >; > * 8 -0.000000 ( 2, 2) 8AX 9AX; >; > * 9 -0.000000 ( 1, 1) 7AX 9AX; >; >; > ==> MCSCF root 1 information <==; >; > MCSCF Root 1 energy = -93.902550337672878; >; >; > Active Space Natural occupation numbers:; >; > A 1.999537 A 1.843676 A 0.156787; >; >; > The 9 most important determinants:; >; > * 1 -0.887365 ( 0, 0) 7AX 8AX; >; > * 2 -0.291143 ( 0, 2) 7AA 8AX 9AB; >; > * 3 -0.291143 ( 2, 0) 7AB 8AX 9AA; >; > * 4 0.206936 ( 2, 2) 8AX 9AX; >; > ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2008#issuecomment-693738345
https://github.com/psi4/psi4/issues/2008#issuecomment-693738345:2805,Energy Efficiency,energy,energy,2805,"avg_states' : [ 0, 1],; >; > 'avg_weights' : [ 0.5, 0.5 ]; >; > }); >; >; >; > sacasscf, sacasscf_wfn = psi4.energy('casscf',return_wfn=True); >; > E0_sacasscf = psi4.variable('CI ROOT 0 TOTAL ENERGY'); >; > E1_sacasscf = psi4.variable('CI ROOT 1 TOTAL ENERGY'); >; >; > Then, I give you from the OUTPUT FILE the decomposition I obtain :; > ------------------------------; > ------------------------------; >; > ==> MCSCF root 0 information <==; >; >; >; > MCSCF Root 0 energy = -93.931448649953467; >; >; > Active Space Natural occupation numbers:; >; > A 2.000000 A 1.000000 A 1.000000; >; >; > The 9 most important determinants:; >; > * 1 0.691216 ( 0, 1) 7AX 8AA 9AB; >; > * 2 0.691216 ( 1, 0) 7AX 8AB 9AA; >; > * 3 -0.149064 ( 1, 2) 7AA 8AB 9AX; >; > * 4 -0.149064 ( 2, 1) 7AB 8AA 9AX; >; > * 5 0.000000 ( 0, 0) 7AX 8AX; >; > * 6 0.000000 ( 0, 2) 7AA 8AX 9AB; >; > * 7 0.000000 ( 2, 0) 7AB 8AX 9AA; >; > * 8 -0.000000 ( 2, 2) 8AX 9AX; >; > * 9 -0.000000 ( 1, 1) 7AX 9AX; >; >; > ==> MCSCF root 1 information <==; >; > MCSCF Root 1 energy = -93.902550337672878; >; >; > Active Space Natural occupation numbers:; >; > A 1.999537 A 1.843676 A 0.156787; >; >; > The 9 most important determinants:; >; > * 1 -0.887365 ( 0, 0) 7AX 8AX; >; > * 2 -0.291143 ( 0, 2) 7AA 8AX 9AB; >; > * 3 -0.291143 ( 2, 0) 7AB 8AX 9AA; >; > * 4 0.206936 ( 2, 2) 8AX 9AX; >; > * 5 0.015212 ( 1, 1) 7AX 9AX; >; > * 6 0.000000 ( 1, 0) 7AX 8AB 9AA; >; > * 7 0.000000 ( 0, 1) 7AX 8AA 9AB; >; > * 8 -0.000000 ( 1, 2) 7AA 8AB 9AX; >; > * 9 -0.000000 ( 2, 1) 7AB 8AA 9AX; >; >; > ------------------------------; > ------------------------------; >; > As you can see, there is typically the same kind of sign for some; > determinants sharing a similar coefficient. For example, for the; > groundstate we have : -0.691216 ( 0, 1) 7AX 8AA 9AB and -0.691216 ( 1, 0); > 7AX 8AB 9AA. However, in the context of a singlet spin symmetry, these; > determinants should present opposite signs. To check this, I used a; > personal code to bui",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2008#issuecomment-693738345
https://github.com/psi4/psi4/issues/2008#issuecomment-693738345:4403,Energy Efficiency,energy,energy,4403," -0.887365 ( 0, 0) 7AX 8AX; >; > * 2 -0.291143 ( 0, 2) 7AA 8AX 9AB; >; > * 3 -0.291143 ( 2, 0) 7AB 8AX 9AA; >; > * 4 0.206936 ( 2, 2) 8AX 9AX; >; > * 5 0.015212 ( 1, 1) 7AX 9AX; >; > * 6 0.000000 ( 1, 0) 7AX 8AB 9AA; >; > * 7 0.000000 ( 0, 1) 7AX 8AA 9AB; >; > * 8 -0.000000 ( 1, 2) 7AA 8AB 9AX; >; > * 9 -0.000000 ( 2, 1) 7AB 8AA 9AX; >; >; > ------------------------------; > ------------------------------; >; > As you can see, there is typically the same kind of sign for some; > determinants sharing a similar coefficient. For example, for the; > groundstate we have : -0.691216 ( 0, 1) 7AX 8AA 9AB and -0.691216 ( 1, 0); > 7AX 8AB 9AA. However, in the context of a singlet spin symmetry, these; > determinants should present opposite signs. To check this, I used a; > personal code to build up from scratch the frozen core Hamiltonian; > associated to the (4,3) active space. I used for this the resulting; > Optimized MO coeff matrix obtained from SA-CASSCF Psi4. Diagonalizing this; > Hamiltonian gives the following two lowest states expressed in the active; > space :; > | Psi_0 > = 0.149|011011⟩ - 0.149|100111⟩ - 0.691|110110⟩ + 0.691|111001⟩; > | Psi_1 > = 0.207|001111⟩ - 0.291|011110⟩ + 0.291|101101⟩ + 0.015|110011⟩; > - 0.887|111100⟩; > (NB : the HF determinant is |111100⟩ ); >; > With this diagonalization, we clearly find same coefficients but with; > opposite signs. As a double check, I also computed the energy of these; > states and obtained :; > E_0 = -93.93144865003578 Ha; > E_1 = -93.90255033754423 Ha; >; > Which exactly coincides with the energy obtained in the Psi4 OUTPUT. Do; > you have a clue why such a pb arises in the Psi4 output ?; >; > Thanks a lot for you answer; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2008>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5UPLCBFDRNHBMTEAXTSGD4ZDANCNFSM4RPGPFOQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2008#issuecomment-693738345
https://github.com/psi4/psi4/issues/2008#issuecomment-693738345:4545,Energy Efficiency,energy,energy,4545," -0.887365 ( 0, 0) 7AX 8AX; >; > * 2 -0.291143 ( 0, 2) 7AA 8AX 9AB; >; > * 3 -0.291143 ( 2, 0) 7AB 8AX 9AA; >; > * 4 0.206936 ( 2, 2) 8AX 9AX; >; > * 5 0.015212 ( 1, 1) 7AX 9AX; >; > * 6 0.000000 ( 1, 0) 7AX 8AB 9AA; >; > * 7 0.000000 ( 0, 1) 7AX 8AA 9AB; >; > * 8 -0.000000 ( 1, 2) 7AA 8AB 9AX; >; > * 9 -0.000000 ( 2, 1) 7AB 8AA 9AX; >; >; > ------------------------------; > ------------------------------; >; > As you can see, there is typically the same kind of sign for some; > determinants sharing a similar coefficient. For example, for the; > groundstate we have : -0.691216 ( 0, 1) 7AX 8AA 9AB and -0.691216 ( 1, 0); > 7AX 8AB 9AA. However, in the context of a singlet spin symmetry, these; > determinants should present opposite signs. To check this, I used a; > personal code to build up from scratch the frozen core Hamiltonian; > associated to the (4,3) active space. I used for this the resulting; > Optimized MO coeff matrix obtained from SA-CASSCF Psi4. Diagonalizing this; > Hamiltonian gives the following two lowest states expressed in the active; > space :; > | Psi_0 > = 0.149|011011⟩ - 0.149|100111⟩ - 0.691|110110⟩ + 0.691|111001⟩; > | Psi_1 > = 0.207|001111⟩ - 0.291|011110⟩ + 0.291|101101⟩ + 0.015|110011⟩; > - 0.887|111100⟩; > (NB : the HF determinant is |111100⟩ ); >; > With this diagonalization, we clearly find same coefficients but with; > opposite signs. As a double check, I also computed the energy of these; > states and obtained :; > E_0 = -93.93144865003578 Ha; > E_1 = -93.90255033754423 Ha; >; > Which exactly coincides with the energy obtained in the Psi4 OUTPUT. Do; > you have a clue why such a pb arises in the Psi4 output ?; >; > Thanks a lot for you answer; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2008>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5UPLCBFDRNHBMTEAXTSGD4ZDANCNFSM4RPGPFOQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2008#issuecomment-693738345
https://github.com/psi4/psi4/issues/2008#issuecomment-693738345:295,Integrability,depend,depends,295,"I'm not sure what you mean by ""pb"", but I understand the question. I'm the author of this part of the code, and I checked the signs very; thoroughly when the code was written. Most likely, this is a confusion about the sign conventions of the code.; You'll recall that the sign of a determinant depends on the ordering of the; spin orbitals. In this code, all alpha spin orbitals come first, and then; all beta spin orbitals (this winds up being an easier rule to state and; maintain than alternatives like ""order by spatial orbital, and then alpha; first and beta second within spatial orbital numbering""). With that ordering, the signs given are correct. (See, for example,; equation 2.260 of Szabo and Ostlund). Best,; David. On Wed, Sep 16, 2020 at 2:04 PM saadyalouz <notifications@github.com> wrote:. > Dear developers,; >; > I am currently running SA-CASSCF calculations on the formaldimine; > molecule. I am particularly interested by the determinant decomposition of; > the ground and first excited state of the molecule (singlet symmetry).; > However, I think I have noticed a pb concerning the sign of the; > determinants in the output.; >; > First, I give you my INPUT in python :; >; > pes_origin = [1.498047, 1.066797, 0.987109, 118.359375]; >; > variables = pes_origin[:] + [90, 90]; >; > psi4.geometry(; >; > """"""; >; > N; >; > C 1 {0}; >; > H 2 {1} 1 {3}; >; > H 2 {1} 1 {3} 3 180; >; > H 1 {2} 2 {4} 3 {5}; >; > symmetry c1"""""".format(*variables) ); >; >; >; > psi4.set_options({ 'basis': 'cc-pvdz',; >; > 'DETCI_FREEZE_CORE' : False,; >; > 'reference': 'RHF',; >; > 'num_roots': 2,; >; > 'frozen_docc':[0],; >; > 'restricted_docc': [6],; >; > 'active': [3],; >; > 'restricted_uocc': [11],; >; > 'frozen_uocc': [23],; >; > 'mcscf_maxiter': 1000,; >; > 'avg_states' : [ 0, 1],; >; > 'avg_weights' : [ 0.5, 0.5 ]; >; > }); >; >; >; > sacasscf, sacasscf_wfn = psi4.energy('casscf',return_wfn=True); >; > E0_sacasscf = psi4.variable('CI ROOT 0 TOTAL ENERGY'); >; > E1_sacasscf = psi4.varia",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2008#issuecomment-693738345
https://github.com/psi4/psi4/issues/2008#issuecomment-693738345:1261,Modifiability,variab,variables,1261,"of a determinant depends on the ordering of the; spin orbitals. In this code, all alpha spin orbitals come first, and then; all beta spin orbitals (this winds up being an easier rule to state and; maintain than alternatives like ""order by spatial orbital, and then alpha; first and beta second within spatial orbital numbering""). With that ordering, the signs given are correct. (See, for example,; equation 2.260 of Szabo and Ostlund). Best,; David. On Wed, Sep 16, 2020 at 2:04 PM saadyalouz <notifications@github.com> wrote:. > Dear developers,; >; > I am currently running SA-CASSCF calculations on the formaldimine; > molecule. I am particularly interested by the determinant decomposition of; > the ground and first excited state of the molecule (singlet symmetry).; > However, I think I have noticed a pb concerning the sign of the; > determinants in the output.; >; > First, I give you my INPUT in python :; >; > pes_origin = [1.498047, 1.066797, 0.987109, 118.359375]; >; > variables = pes_origin[:] + [90, 90]; >; > psi4.geometry(; >; > """"""; >; > N; >; > C 1 {0}; >; > H 2 {1} 1 {3}; >; > H 2 {1} 1 {3} 3 180; >; > H 1 {2} 2 {4} 3 {5}; >; > symmetry c1"""""".format(*variables) ); >; >; >; > psi4.set_options({ 'basis': 'cc-pvdz',; >; > 'DETCI_FREEZE_CORE' : False,; >; > 'reference': 'RHF',; >; > 'num_roots': 2,; >; > 'frozen_docc':[0],; >; > 'restricted_docc': [6],; >; > 'active': [3],; >; > 'restricted_uocc': [11],; >; > 'frozen_uocc': [23],; >; > 'mcscf_maxiter': 1000,; >; > 'avg_states' : [ 0, 1],; >; > 'avg_weights' : [ 0.5, 0.5 ]; >; > }); >; >; >; > sacasscf, sacasscf_wfn = psi4.energy('casscf',return_wfn=True); >; > E0_sacasscf = psi4.variable('CI ROOT 0 TOTAL ENERGY'); >; > E1_sacasscf = psi4.variable('CI ROOT 1 TOTAL ENERGY'); >; >; > Then, I give you from the OUTPUT FILE the decomposition I obtain :; > ------------------------------; > ------------------------------; >; > ==> MCSCF root 0 information <==; >; >; >; > MCSCF Root 0 energy = -93.931448649953467; >; >; > A",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2008#issuecomment-693738345
https://github.com/psi4/psi4/issues/2008#issuecomment-693738345:1452,Modifiability,variab,variables,1452," state and; maintain than alternatives like ""order by spatial orbital, and then alpha; first and beta second within spatial orbital numbering""). With that ordering, the signs given are correct. (See, for example,; equation 2.260 of Szabo and Ostlund). Best,; David. On Wed, Sep 16, 2020 at 2:04 PM saadyalouz <notifications@github.com> wrote:. > Dear developers,; >; > I am currently running SA-CASSCF calculations on the formaldimine; > molecule. I am particularly interested by the determinant decomposition of; > the ground and first excited state of the molecule (singlet symmetry).; > However, I think I have noticed a pb concerning the sign of the; > determinants in the output.; >; > First, I give you my INPUT in python :; >; > pes_origin = [1.498047, 1.066797, 0.987109, 118.359375]; >; > variables = pes_origin[:] + [90, 90]; >; > psi4.geometry(; >; > """"""; >; > N; >; > C 1 {0}; >; > H 2 {1} 1 {3}; >; > H 2 {1} 1 {3} 3 180; >; > H 1 {2} 2 {4} 3 {5}; >; > symmetry c1"""""".format(*variables) ); >; >; >; > psi4.set_options({ 'basis': 'cc-pvdz',; >; > 'DETCI_FREEZE_CORE' : False,; >; > 'reference': 'RHF',; >; > 'num_roots': 2,; >; > 'frozen_docc':[0],; >; > 'restricted_docc': [6],; >; > 'active': [3],; >; > 'restricted_uocc': [11],; >; > 'frozen_uocc': [23],; >; > 'mcscf_maxiter': 1000,; >; > 'avg_states' : [ 0, 1],; >; > 'avg_weights' : [ 0.5, 0.5 ]; >; > }); >; >; >; > sacasscf, sacasscf_wfn = psi4.energy('casscf',return_wfn=True); >; > E0_sacasscf = psi4.variable('CI ROOT 0 TOTAL ENERGY'); >; > E1_sacasscf = psi4.variable('CI ROOT 1 TOTAL ENERGY'); >; >; > Then, I give you from the OUTPUT FILE the decomposition I obtain :; > ------------------------------; > ------------------------------; >; > ==> MCSCF root 0 information <==; >; >; >; > MCSCF Root 0 energy = -93.931448649953467; >; >; > Active Space Natural occupation numbers:; >; > A 2.000000 A 1.000000 A 1.000000; >; >; > The 9 most important determinants:; >; > * 1 0.691216 ( 0, 1) 7AX 8AA 9AB; >; > * 2 0.691216 ( 1,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2008#issuecomment-693738345
https://github.com/psi4/psi4/issues/2008#issuecomment-693738345:1936,Modifiability,variab,variable,1936,"sition of; > the ground and first excited state of the molecule (singlet symmetry).; > However, I think I have noticed a pb concerning the sign of the; > determinants in the output.; >; > First, I give you my INPUT in python :; >; > pes_origin = [1.498047, 1.066797, 0.987109, 118.359375]; >; > variables = pes_origin[:] + [90, 90]; >; > psi4.geometry(; >; > """"""; >; > N; >; > C 1 {0}; >; > H 2 {1} 1 {3}; >; > H 2 {1} 1 {3} 3 180; >; > H 1 {2} 2 {4} 3 {5}; >; > symmetry c1"""""".format(*variables) ); >; >; >; > psi4.set_options({ 'basis': 'cc-pvdz',; >; > 'DETCI_FREEZE_CORE' : False,; >; > 'reference': 'RHF',; >; > 'num_roots': 2,; >; > 'frozen_docc':[0],; >; > 'restricted_docc': [6],; >; > 'active': [3],; >; > 'restricted_uocc': [11],; >; > 'frozen_uocc': [23],; >; > 'mcscf_maxiter': 1000,; >; > 'avg_states' : [ 0, 1],; >; > 'avg_weights' : [ 0.5, 0.5 ]; >; > }); >; >; >; > sacasscf, sacasscf_wfn = psi4.energy('casscf',return_wfn=True); >; > E0_sacasscf = psi4.variable('CI ROOT 0 TOTAL ENERGY'); >; > E1_sacasscf = psi4.variable('CI ROOT 1 TOTAL ENERGY'); >; >; > Then, I give you from the OUTPUT FILE the decomposition I obtain :; > ------------------------------; > ------------------------------; >; > ==> MCSCF root 0 information <==; >; >; >; > MCSCF Root 0 energy = -93.931448649953467; >; >; > Active Space Natural occupation numbers:; >; > A 2.000000 A 1.000000 A 1.000000; >; >; > The 9 most important determinants:; >; > * 1 0.691216 ( 0, 1) 7AX 8AA 9AB; >; > * 2 0.691216 ( 1, 0) 7AX 8AB 9AA; >; > * 3 -0.149064 ( 1, 2) 7AA 8AB 9AX; >; > * 4 -0.149064 ( 2, 1) 7AB 8AA 9AX; >; > * 5 0.000000 ( 0, 0) 7AX 8AX; >; > * 6 0.000000 ( 0, 2) 7AA 8AX 9AB; >; > * 7 0.000000 ( 2, 0) 7AB 8AX 9AA; >; > * 8 -0.000000 ( 2, 2) 8AX 9AX; >; > * 9 -0.000000 ( 1, 1) 7AX 9AX; >; >; > ==> MCSCF root 1 information <==; >; > MCSCF Root 1 energy = -93.902550337672878; >; >; > Active Space Natural occupation numbers:; >; > A 1.999537 A 1.843676 A 0.156787; >; >; > The 9 most important determinants:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2008#issuecomment-693738345
https://github.com/psi4/psi4/issues/2008#issuecomment-693738345:1996,Modifiability,variab,variable,1996,"rminants in the output.; >; > First, I give you my INPUT in python :; >; > pes_origin = [1.498047, 1.066797, 0.987109, 118.359375]; >; > variables = pes_origin[:] + [90, 90]; >; > psi4.geometry(; >; > """"""; >; > N; >; > C 1 {0}; >; > H 2 {1} 1 {3}; >; > H 2 {1} 1 {3} 3 180; >; > H 1 {2} 2 {4} 3 {5}; >; > symmetry c1"""""".format(*variables) ); >; >; >; > psi4.set_options({ 'basis': 'cc-pvdz',; >; > 'DETCI_FREEZE_CORE' : False,; >; > 'reference': 'RHF',; >; > 'num_roots': 2,; >; > 'frozen_docc':[0],; >; > 'restricted_docc': [6],; >; > 'active': [3],; >; > 'restricted_uocc': [11],; >; > 'frozen_uocc': [23],; >; > 'mcscf_maxiter': 1000,; >; > 'avg_states' : [ 0, 1],; >; > 'avg_weights' : [ 0.5, 0.5 ]; >; > }); >; >; >; > sacasscf, sacasscf_wfn = psi4.energy('casscf',return_wfn=True); >; > E0_sacasscf = psi4.variable('CI ROOT 0 TOTAL ENERGY'); >; > E1_sacasscf = psi4.variable('CI ROOT 1 TOTAL ENERGY'); >; >; > Then, I give you from the OUTPUT FILE the decomposition I obtain :; > ------------------------------; > ------------------------------; >; > ==> MCSCF root 0 information <==; >; >; >; > MCSCF Root 0 energy = -93.931448649953467; >; >; > Active Space Natural occupation numbers:; >; > A 2.000000 A 1.000000 A 1.000000; >; >; > The 9 most important determinants:; >; > * 1 0.691216 ( 0, 1) 7AX 8AA 9AB; >; > * 2 0.691216 ( 1, 0) 7AX 8AB 9AA; >; > * 3 -0.149064 ( 1, 2) 7AA 8AB 9AX; >; > * 4 -0.149064 ( 2, 1) 7AB 8AA 9AX; >; > * 5 0.000000 ( 0, 0) 7AX 8AX; >; > * 6 0.000000 ( 0, 2) 7AA 8AX 9AB; >; > * 7 0.000000 ( 2, 0) 7AB 8AX 9AA; >; > * 8 -0.000000 ( 2, 2) 8AX 9AX; >; > * 9 -0.000000 ( 1, 1) 7AX 9AX; >; >; > ==> MCSCF root 1 information <==; >; > MCSCF Root 1 energy = -93.902550337672878; >; >; > Active Space Natural occupation numbers:; >; > A 1.999537 A 1.843676 A 0.156787; >; >; > The 9 most important determinants:; >; > * 1 -0.887365 ( 0, 0) 7AX 8AX; >; > * 2 -0.291143 ( 0, 2) 7AA 8AX 9AB; >; > * 3 -0.291143 ( 2, 0) 7AB 8AX 9AA; >; > * 4 0.206936 ( 2, 2) 8AX 9AX; >; > ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2008#issuecomment-693738345
https://github.com/psi4/psi4/issues/2008#issuecomment-693738345:3891,Performance,Optimiz,Optimized,3891,"A 1.843676 A 0.156787; >; >; > The 9 most important determinants:; >; > * 1 -0.887365 ( 0, 0) 7AX 8AX; >; > * 2 -0.291143 ( 0, 2) 7AA 8AX 9AB; >; > * 3 -0.291143 ( 2, 0) 7AB 8AX 9AA; >; > * 4 0.206936 ( 2, 2) 8AX 9AX; >; > * 5 0.015212 ( 1, 1) 7AX 9AX; >; > * 6 0.000000 ( 1, 0) 7AX 8AB 9AA; >; > * 7 0.000000 ( 0, 1) 7AX 8AA 9AB; >; > * 8 -0.000000 ( 1, 2) 7AA 8AB 9AX; >; > * 9 -0.000000 ( 2, 1) 7AB 8AA 9AX; >; >; > ------------------------------; > ------------------------------; >; > As you can see, there is typically the same kind of sign for some; > determinants sharing a similar coefficient. For example, for the; > groundstate we have : -0.691216 ( 0, 1) 7AX 8AA 9AB and -0.691216 ( 1, 0); > 7AX 8AB 9AA. However, in the context of a singlet spin symmetry, these; > determinants should present opposite signs. To check this, I used a; > personal code to build up from scratch the frozen core Hamiltonian; > associated to the (4,3) active space. I used for this the resulting; > Optimized MO coeff matrix obtained from SA-CASSCF Psi4. Diagonalizing this; > Hamiltonian gives the following two lowest states expressed in the active; > space :; > | Psi_0 > = 0.149|011011⟩ - 0.149|100111⟩ - 0.691|110110⟩ + 0.691|111001⟩; > | Psi_1 > = 0.207|001111⟩ - 0.291|011110⟩ + 0.291|101101⟩ + 0.015|110011⟩; > - 0.887|111100⟩; > (NB : the HF determinant is |111100⟩ ); >; > With this diagonalization, we clearly find same coefficients but with; > opposite signs. As a double check, I also computed the energy of these; > states and obtained :; > E_0 = -93.93144865003578 Ha; > E_1 = -93.90255033754423 Ha; >; > Which exactly coincides with the energy obtained in the Psi4 OUTPUT. Do; > you have a clue why such a pb arises in the Psi4 output ?; >; > Thanks a lot for you answer; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2008>, or unsubscribe; > <https://github.com/notificati",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2008#issuecomment-693738345
https://github.com/psi4/psi4/issues/2008#issuecomment-693738345:4305,Usability,clear,clearly,4305," -0.887365 ( 0, 0) 7AX 8AX; >; > * 2 -0.291143 ( 0, 2) 7AA 8AX 9AB; >; > * 3 -0.291143 ( 2, 0) 7AB 8AX 9AA; >; > * 4 0.206936 ( 2, 2) 8AX 9AX; >; > * 5 0.015212 ( 1, 1) 7AX 9AX; >; > * 6 0.000000 ( 1, 0) 7AX 8AB 9AA; >; > * 7 0.000000 ( 0, 1) 7AX 8AA 9AB; >; > * 8 -0.000000 ( 1, 2) 7AA 8AB 9AX; >; > * 9 -0.000000 ( 2, 1) 7AB 8AA 9AX; >; >; > ------------------------------; > ------------------------------; >; > As you can see, there is typically the same kind of sign for some; > determinants sharing a similar coefficient. For example, for the; > groundstate we have : -0.691216 ( 0, 1) 7AX 8AA 9AB and -0.691216 ( 1, 0); > 7AX 8AB 9AA. However, in the context of a singlet spin symmetry, these; > determinants should present opposite signs. To check this, I used a; > personal code to build up from scratch the frozen core Hamiltonian; > associated to the (4,3) active space. I used for this the resulting; > Optimized MO coeff matrix obtained from SA-CASSCF Psi4. Diagonalizing this; > Hamiltonian gives the following two lowest states expressed in the active; > space :; > | Psi_0 > = 0.149|011011⟩ - 0.149|100111⟩ - 0.691|110110⟩ + 0.691|111001⟩; > | Psi_1 > = 0.207|001111⟩ - 0.291|011110⟩ + 0.291|101101⟩ + 0.015|110011⟩; > - 0.887|111100⟩; > (NB : the HF determinant is |111100⟩ ); >; > With this diagonalization, we clearly find same coefficients but with; > opposite signs. As a double check, I also computed the energy of these; > states and obtained :; > E_0 = -93.93144865003578 Ha; > E_1 = -93.90255033754423 Ha; >; > Which exactly coincides with the energy obtained in the Psi4 OUTPUT. Do; > you have a clue why such a pb arises in the Psi4 output ?; >; > Thanks a lot for you answer; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2008>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5UPLCBFDRNHBMTEAXTSGD4ZDANCNFSM4RPGPFOQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2008#issuecomment-693738345
https://github.com/psi4/psi4/issues/2008#issuecomment-694084437:1024,Usability,learn,learning,1024,"Hello everyone,. Thanks for your quick answer and your very thorough explanations ! 👍 . Indeed, I totally missed the part about the different type of spinorbital storing. In this case as you say, both codes are right. I was confused because for me, as an OpenFermion user (quantum computing package), the second approach was more natural (i.e. storing according to spatial MOs with alternating alpha then beta spinorbital). I was using the OUTPUT from psi4 as a direct reference for my calculations. More precisely, I wanted to compute overlap between an eigenstate from Psi4 and another one generated by OpenFermion. As you could imagine, the results were very strange... This is why all of this appeared as a ""pb"" for me :) But now, everything is solved ! Thanks for your help !. Before leaving, I would like also to sincerely thank all of you for the very nice work done with Psi4 and Psi4-numpy. As a physicist working in quantum computing, these codes are fundamental tools for my everyday work. Moreover, it helped me learning a lot about practical implementation of quantum chemistry methods. Thanks a lot guys for your investment in this project !!. Best, ; Saad",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2008#issuecomment-694084437
https://github.com/psi4/psi4/issues/2009#issuecomment-696734325:82,Availability,error,error,82,"Ups, a proper typo in the original input, but the right molecule was used and the error persists. ----. I think I identified the (or a) problem. There are direct access fortran files that are never closed as far as I tracked it down. If I do so, it seems to work.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2009#issuecomment-696734325
https://github.com/psi4/psi4/issues/2009#issuecomment-696734325:228,Availability,down,down,228,"Ups, a proper typo in the original input, but the right molecule was used and the error persists. ----. I think I identified the (or a) problem. There are direct access fortran files that are never closed as far as I tracked it down. If I do so, it seems to work.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2009#issuecomment-696734325
https://github.com/psi4/psi4/issues/2009#issuecomment-696734325:162,Security,access,access,162,"Ups, a proper typo in the original input, but the right molecule was used and the error persists. ----. I think I identified the (or a) problem. There are direct access fortran files that are never closed as far as I tracked it down. If I do so, it seems to work.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2009#issuecomment-696734325
https://github.com/psi4/psi4/issues/2009#issuecomment-696742600:140,Modifiability,plugin,plugin,140,"Aaah, great work! If it's fortran direct access, rather than DPD, that should hopefully be easy to cure with some `close` statements in the plugin 🤞",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2009#issuecomment-696742600
https://github.com/psi4/psi4/issues/2009#issuecomment-696742600:41,Security,access,access,41,"Aaah, great work! If it's fortran direct access, rather than DPD, that should hopefully be easy to cure with some `close` statements in the plugin 🤞",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2009#issuecomment-696742600
https://github.com/psi4/psi4/issues/2009#issuecomment-697169118:74,Modifiability,plugin,plugin,74,PR with my fix is merged. Leaving this open until our cmake pulls the new plugin version @loriab,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2009#issuecomment-697169118
https://github.com/psi4/psi4/issues/2010#issuecomment-697269086:107,Availability,error,error,107,"This is the first DFJKGrad after the first SCF. I just updated my branch to master, and still see the same error arising from line 461 in `jk_grad.cc`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2010#issuecomment-697269086
https://github.com/psi4/psi4/issues/2010#issuecomment-697269086:55,Deployability,update,updated,55,"This is the first DFJKGrad after the first SCF. I just updated my branch to master, and still see the same error arising from line 461 in `jk_grad.cc`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2010#issuecomment-697269086
https://github.com/psi4/psi4/issues/2012#issuecomment-702811354:1764,Availability,error,error,1764,"ding NUM_FROZEN_DOCC doesn't work because it would need; to be different for fragment A than Fragment B. On Fri, Oct 2, 2020 at 3:13 AM Holger Kruse <notifications@github.com>; wrote:. > The following input, given to me via email, gives a 'bad' dMP2 correction; > for SAPT:; >; > delta HF,r (2) -18.53850185 [mEh] -11.63308554 [kcal/mol] -48.67282991 [kJ/mol]; > delta MP2,r (2) 141.03839795 [mEh] 88.50293088 [kcal/mol] 370.29626281 [kJ/mol]; >; > molecule {; > 0 1; > F 0.00000000 0.00000000 2.96216000; > I 0.00000000 0.00000000 0.96704400; > --; > 0 1; > C 0.00000000 0.00000000 -2.52999200; > N 0.00000000 0.00000000 -1.35165800; > Na 0.00000000 0.00000000 -4.84283500; > units angstrom; > no_reorient; > symmetry c1; > }; > memory 20 GiB; > set {; > basis def2-TZVP; > freeze_core true; > }; > energy('sapt2+dMP2'); > energy('mp2',bsse_type=['nocp']); >; > The issue is reproducible for MP2/CCSD post-SCF methods. It is not; > directly DF nor ghost atom related. (besides a possibly small error due; > to #1968 <https://github.com/psi4/psi4/issues/1968>). And not a module; > specific issue.; >; > Using different ECPs (LANL2DZ) or an all electron basis (x2c-SVPall, no; > rel. effects.) with global FC=on seems to give 'better' results in the; > sense that MP2 interaction energy is negative.; >; > One, and perhaps only, issue is frozen_core.; > Turning FC = off only for the supermolecular MP2 part gives OK results.; > For the NaCN fragment we are freezing 10 electrons, while e.g. ORCA is; > freezing only 3.; > At least for this case, freezing the Ne-shell by default for Na is not a; > good choice.; >; > Tagging @PeterKraus <https://github.com/PeterKraus>.; >; > freeze_core -2 makes the SAPT part crash because sth goes wrong for the IF; > fragment (fragment A):; >; > FOCC A = 18446744073709551611; > FOCC B = 1; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2012>",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2012#issuecomment-702811354
https://github.com/psi4/psi4/issues/2012#issuecomment-702811354:1569,Energy Efficiency,energy,energy,1569,"s row/noble atom, -2 does; the next-previous row, etc. .... It seems to me that the only time we ever; want to do -2 is for specific elements, never for all atoms in an entire; molecule). I suppose also providing NUM_FROZEN_DOCC doesn't work because it would need; to be different for fragment A than Fragment B. On Fri, Oct 2, 2020 at 3:13 AM Holger Kruse <notifications@github.com>; wrote:. > The following input, given to me via email, gives a 'bad' dMP2 correction; > for SAPT:; >; > delta HF,r (2) -18.53850185 [mEh] -11.63308554 [kcal/mol] -48.67282991 [kJ/mol]; > delta MP2,r (2) 141.03839795 [mEh] 88.50293088 [kcal/mol] 370.29626281 [kJ/mol]; >; > molecule {; > 0 1; > F 0.00000000 0.00000000 2.96216000; > I 0.00000000 0.00000000 0.96704400; > --; > 0 1; > C 0.00000000 0.00000000 -2.52999200; > N 0.00000000 0.00000000 -1.35165800; > Na 0.00000000 0.00000000 -4.84283500; > units angstrom; > no_reorient; > symmetry c1; > }; > memory 20 GiB; > set {; > basis def2-TZVP; > freeze_core true; > }; > energy('sapt2+dMP2'); > energy('mp2',bsse_type=['nocp']); >; > The issue is reproducible for MP2/CCSD post-SCF methods. It is not; > directly DF nor ghost atom related. (besides a possibly small error due; > to #1968 <https://github.com/psi4/psi4/issues/1968>). And not a module; > specific issue.; >; > Using different ECPs (LANL2DZ) or an all electron basis (x2c-SVPall, no; > rel. effects.) with global FC=on seems to give 'better' results in the; > sense that MP2 interaction energy is negative.; >; > One, and perhaps only, issue is frozen_core.; > Turning FC = off only for the supermolecular MP2 part gives OK results.; > For the NaCN fragment we are freezing 10 electrons, while e.g. ORCA is; > freezing only 3.; > At least for this case, freezing the Ne-shell by default for Na is not a; > good choice.; >; > Tagging @PeterKraus <https://github.com/PeterKraus>.; >; > freeze_core -2 makes the SAPT part crash because sth goes wrong for the IF; > fragment (fragment A):; >; > FOCC A =",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2012#issuecomment-702811354
https://github.com/psi4/psi4/issues/2012#issuecomment-702811354:1593,Energy Efficiency,energy,energy,1593,"s row/noble atom, -2 does; the next-previous row, etc. .... It seems to me that the only time we ever; want to do -2 is for specific elements, never for all atoms in an entire; molecule). I suppose also providing NUM_FROZEN_DOCC doesn't work because it would need; to be different for fragment A than Fragment B. On Fri, Oct 2, 2020 at 3:13 AM Holger Kruse <notifications@github.com>; wrote:. > The following input, given to me via email, gives a 'bad' dMP2 correction; > for SAPT:; >; > delta HF,r (2) -18.53850185 [mEh] -11.63308554 [kcal/mol] -48.67282991 [kJ/mol]; > delta MP2,r (2) 141.03839795 [mEh] 88.50293088 [kcal/mol] 370.29626281 [kJ/mol]; >; > molecule {; > 0 1; > F 0.00000000 0.00000000 2.96216000; > I 0.00000000 0.00000000 0.96704400; > --; > 0 1; > C 0.00000000 0.00000000 -2.52999200; > N 0.00000000 0.00000000 -1.35165800; > Na 0.00000000 0.00000000 -4.84283500; > units angstrom; > no_reorient; > symmetry c1; > }; > memory 20 GiB; > set {; > basis def2-TZVP; > freeze_core true; > }; > energy('sapt2+dMP2'); > energy('mp2',bsse_type=['nocp']); >; > The issue is reproducible for MP2/CCSD post-SCF methods. It is not; > directly DF nor ghost atom related. (besides a possibly small error due; > to #1968 <https://github.com/psi4/psi4/issues/1968>). And not a module; > specific issue.; >; > Using different ECPs (LANL2DZ) or an all electron basis (x2c-SVPall, no; > rel. effects.) with global FC=on seems to give 'better' results in the; > sense that MP2 interaction energy is negative.; >; > One, and perhaps only, issue is frozen_core.; > Turning FC = off only for the supermolecular MP2 part gives OK results.; > For the NaCN fragment we are freezing 10 electrons, while e.g. ORCA is; > freezing only 3.; > At least for this case, freezing the Ne-shell by default for Na is not a; > good choice.; >; > Tagging @PeterKraus <https://github.com/PeterKraus>.; >; > freeze_core -2 makes the SAPT part crash because sth goes wrong for the IF; > fragment (fragment A):; >; > FOCC A =",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2012#issuecomment-702811354
https://github.com/psi4/psi4/issues/2012#issuecomment-702811354:2049,Energy Efficiency,energy,energy,2049,"at 3:13 AM Holger Kruse <notifications@github.com>; wrote:. > The following input, given to me via email, gives a 'bad' dMP2 correction; > for SAPT:; >; > delta HF,r (2) -18.53850185 [mEh] -11.63308554 [kcal/mol] -48.67282991 [kJ/mol]; > delta MP2,r (2) 141.03839795 [mEh] 88.50293088 [kcal/mol] 370.29626281 [kJ/mol]; >; > molecule {; > 0 1; > F 0.00000000 0.00000000 2.96216000; > I 0.00000000 0.00000000 0.96704400; > --; > 0 1; > C 0.00000000 0.00000000 -2.52999200; > N 0.00000000 0.00000000 -1.35165800; > Na 0.00000000 0.00000000 -4.84283500; > units angstrom; > no_reorient; > symmetry c1; > }; > memory 20 GiB; > set {; > basis def2-TZVP; > freeze_core true; > }; > energy('sapt2+dMP2'); > energy('mp2',bsse_type=['nocp']); >; > The issue is reproducible for MP2/CCSD post-SCF methods. It is not; > directly DF nor ghost atom related. (besides a possibly small error due; > to #1968 <https://github.com/psi4/psi4/issues/1968>). And not a module; > specific issue.; >; > Using different ECPs (LANL2DZ) or an all electron basis (x2c-SVPall, no; > rel. effects.) with global FC=on seems to give 'better' results in the; > sense that MP2 interaction energy is negative.; >; > One, and perhaps only, issue is frozen_core.; > Turning FC = off only for the supermolecular MP2 part gives OK results.; > For the NaCN fragment we are freezing 10 electrons, while e.g. ORCA is; > freezing only 3.; > At least for this case, freezing the Ne-shell by default for Na is not a; > good choice.; >; > Tagging @PeterKraus <https://github.com/PeterKraus>.; >; > freeze_core -2 makes the SAPT part crash because sth goes wrong for the IF; > fragment (fragment A):; >; > FOCC A = 18446744073709551611; > FOCC B = 1; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2012>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5VFTGKRYGV72IUHFIDSIV4SRANCNFSM4SBLH6ZA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2012#issuecomment-702811354
https://github.com/psi4/psi4/issues/2012#issuecomment-702870857:101,Energy Efficiency,energy,energy,101,"IIRC a common problem with alkali and alkaline elements is that the core levels can lie higher up in energy than the valence electrons in other species. Defining the core levels via e.g. population analysis ([Rassolov et al, Chem. Phys. Lett. 350, 573 (2001)](https://doi.org/10.1016/S0009-2614(01)01345-8) can be used to avoid this problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2012#issuecomment-702870857
https://github.com/psi4/psi4/issues/2012#issuecomment-702870857:322,Safety,avoid,avoid,322,"IIRC a common problem with alkali and alkaline elements is that the core levels can lie higher up in energy than the valence electrons in other species. Defining the core levels via e.g. population analysis ([Rassolov et al, Chem. Phys. Lett. 350, 573 (2001)](https://doi.org/10.1016/S0009-2614(01)01345-8) can be used to avoid this problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2012#issuecomment-702870857
https://github.com/psi4/psi4/issues/2012#issuecomment-723724864:71,Integrability,interface,interface,71,"I think there are two issues here: there is a bug in the code, and the interface does not allow for useful core freezing. As for the bug, if we set `freeze_core = FC`:. ```; FC | C N Na | F I (ECP); -1 | 2 2 10 | 2 36 (28); -2 | 0 0 2 | 0 18 (28); ```; - for `freeze_core = -1`, the code ""correctly"" freezes 7 pairs on NaCN, 5 pairs on FI in addition to 14 pairs in I's ECP, and for the dimer it's 12 pairs.; - for `freeze_core = -2`, the code ""correctly"" freezes 1 pair on NaCN, 0 pairs on FI, but for the dimer it incorrectly freezes 0 pairs as the ECP has 14 pairs and the `-2` option would like to freeze only 10 pairs (1 on Na and 9 on I). As for the second problem, the most obvious way would be to allow the user to pass in a dictionary with `""element"": -shell` and/or `""element"": frozen_pairs` to specify exactly what to do.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2012#issuecomment-723724864
https://github.com/psi4/psi4/issues/2012#issuecomment-957296211:116,Energy Efficiency,energy,energy-of-a-halogen-bonded-complex-unexpectedly-and-surprisingly-positive,116,"The NBody driver will need a similar fix as the SAPT driver, I think. http://forum.psicode.org/t/why-is-interaction-energy-of-a-halogen-bonded-complex-unexpectedly-and-surprisingly-positive/2352 shows that we freeze to many electrons on Na",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2012#issuecomment-957296211
https://github.com/psi4/psi4/issues/2012#issuecomment-960513679:38,Energy Efficiency,energy,energy,38,"Hmm, I can reproduce this using just `energy(""mp2/cc-pvtz"", bsse_type=""cp"")`. However, I don't think the issue here is the same as for SAPT (where the number of frozen core orbitals for a dimer was not the sum of the frozen core orbitals for monomers): here we freeze 7 orbitals on NaCN (2+2+10 el), 2 orbitals on F2 (2+2 el), and 9 on the dimer. . The problem is of course freezing those 10 electrons on Na. Currently the only way around that is to use `freeze_core -2`, which only freezes 1 orbital in NaCN and 1 orbital in the dimer, or do the calculations separately (with `NUM_FROZEN_DOCC 3` for NaCN and `5` for the dimer), as we have no way of specifying per-monomer numbers of frozen orbitals, yet.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2012#issuecomment-960513679
https://github.com/psi4/psi4/issues/2016#issuecomment-704952817:238,Availability,error,error,238,"> Also, would using the (smaller) default grid, i.e. `dft_spherical_points 302` (instead of 434) and `dft_radial_points 75` (instead of 85) improve the convergence?. No, this will only worsen the convergence by introducing more numerical error.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2016#issuecomment-704952817
https://github.com/psi4/psi4/issues/2019#issuecomment-706322628:123,Availability,error,errors,123,"This sounds reasonable to me. On Fri, Oct 9, 2020 at 7:49 AM Jonathon Misiewicz <notifications@github.com>; wrote:. > PSIO errors are currently being written to stderr. (See this line and the; > switch statement below; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsio/error.cc#L54>.); > Although the fact that there is a PSIO error is written to the output file,; > I'm semi-frequently encountering forum users who aren't familiar with; > stderr. It either takes longer than it should for me to get this; > information, or they can't provide it.; >; > For ease of debugging, this error information should be logged somewhere; > like the output file, where we can guarantee new users will keep it and be; > able to find it, so they can pass it on to developers.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2019>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5V46EUBGLKYCGYKKADSJ32DTANCNFSM4SJ7HNMQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2019#issuecomment-706322628
https://github.com/psi4/psi4/issues/2019#issuecomment-706322628:285,Availability,error,error,285,"This sounds reasonable to me. On Fri, Oct 9, 2020 at 7:49 AM Jonathon Misiewicz <notifications@github.com>; wrote:. > PSIO errors are currently being written to stderr. (See this line and the; > switch statement below; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsio/error.cc#L54>.); > Although the fact that there is a PSIO error is written to the output file,; > I'm semi-frequently encountering forum users who aren't familiar with; > stderr. It either takes longer than it should for me to get this; > information, or they can't provide it.; >; > For ease of debugging, this error information should be logged somewhere; > like the output file, where we can guarantee new users will keep it and be; > able to find it, so they can pass it on to developers.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2019>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5V46EUBGLKYCGYKKADSJ32DTANCNFSM4SJ7HNMQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2019#issuecomment-706322628
https://github.com/psi4/psi4/issues/2019#issuecomment-706322628:343,Availability,error,error,343,"This sounds reasonable to me. On Fri, Oct 9, 2020 at 7:49 AM Jonathon Misiewicz <notifications@github.com>; wrote:. > PSIO errors are currently being written to stderr. (See this line and the; > switch statement below; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsio/error.cc#L54>.); > Although the fact that there is a PSIO error is written to the output file,; > I'm semi-frequently encountering forum users who aren't familiar with; > stderr. It either takes longer than it should for me to get this; > information, or they can't provide it.; >; > For ease of debugging, this error information should be logged somewhere; > like the output file, where we can guarantee new users will keep it and be; > able to find it, so they can pass it on to developers.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2019>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5V46EUBGLKYCGYKKADSJ32DTANCNFSM4SJ7HNMQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2019#issuecomment-706322628
https://github.com/psi4/psi4/issues/2019#issuecomment-706322628:597,Availability,error,error,597,"This sounds reasonable to me. On Fri, Oct 9, 2020 at 7:49 AM Jonathon Misiewicz <notifications@github.com>; wrote:. > PSIO errors are currently being written to stderr. (See this line and the; > switch statement below; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsio/error.cc#L54>.); > Although the fact that there is a PSIO error is written to the output file,; > I'm semi-frequently encountering forum users who aren't familiar with; > stderr. It either takes longer than it should for me to get this; > information, or they can't provide it.; >; > For ease of debugging, this error information should be logged somewhere; > like the output file, where we can guarantee new users will keep it and be; > able to find it, so they can pass it on to developers.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2019>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5V46EUBGLKYCGYKKADSJ32DTANCNFSM4SJ7HNMQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2019#issuecomment-706322628
https://github.com/psi4/psi4/issues/2019#issuecomment-706322628:625,Testability,log,logged,625,"This sounds reasonable to me. On Fri, Oct 9, 2020 at 7:49 AM Jonathon Misiewicz <notifications@github.com>; wrote:. > PSIO errors are currently being written to stderr. (See this line and the; > switch statement below; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsio/error.cc#L54>.); > Although the fact that there is a PSIO error is written to the output file,; > I'm semi-frequently encountering forum users who aren't familiar with; > stderr. It either takes longer than it should for me to get this; > information, or they can't provide it.; >; > For ease of debugging, this error information should be logged somewhere; > like the output file, where we can guarantee new users will keep it and be; > able to find it, so they can pass it on to developers.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2019>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5V46EUBGLKYCGYKKADSJ32DTANCNFSM4SJ7HNMQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2019#issuecomment-706322628
https://github.com/psi4/psi4/issues/2020#issuecomment-712230398:244,Safety,avoid,avoid,244,"In terms of geometry, it is still a likely conformation. Right? This would mean that the atoms in the CH and the carbon and one hydrogen of the CH3 are in the same plane. Is there anything in Psi4 that can't handle near-180 dihedrals and can I avoid this by slightly changing the the intial coordinates of the atoms?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2020#issuecomment-712230398
https://github.com/psi4/psi4/issues/2020#issuecomment-712367091:367,Availability,reliab,reliable,367,"Allenes, yeah, 'too linear' and like to make trouble.; The backtransform broke the molecule, look at most of the `Change` values. They are huge!. I tried a few things and typical solutions like `set DYNAMIC_LEVEL 1` or `opt_coordinates delocalized` do not work well.; Also geomeTRIC is behaving oddly. Tested with pw6b95 instead of pwpb95. If you want something more reliable I can recommend cartesian coordinates and a computed initial hessian.; Optimisation with cartesian coordinates is usually slow, but actually OK with a decent initial hessian.; `set opt_coordinates cartesian `. Automatic initial hessian at a different (cheaper) level is easily done:; ```; set FULL_HESS_EVERY 0; optimize('pwpb95-d3bj',hessian_with='pbe0-d3bj/def2-SV(P)'); ```; usually no need to go beyond the above level, even PBE would be OK I think. Also this hessian will be numerical.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2020#issuecomment-712367091
https://github.com/psi4/psi4/issues/2020#issuecomment-712367091:688,Performance,optimiz,optimize,688,"Allenes, yeah, 'too linear' and like to make trouble.; The backtransform broke the molecule, look at most of the `Change` values. They are huge!. I tried a few things and typical solutions like `set DYNAMIC_LEVEL 1` or `opt_coordinates delocalized` do not work well.; Also geomeTRIC is behaving oddly. Tested with pw6b95 instead of pwpb95. If you want something more reliable I can recommend cartesian coordinates and a computed initial hessian.; Optimisation with cartesian coordinates is usually slow, but actually OK with a decent initial hessian.; `set opt_coordinates cartesian `. Automatic initial hessian at a different (cheaper) level is easily done:; ```; set FULL_HESS_EVERY 0; optimize('pwpb95-d3bj',hessian_with='pbe0-d3bj/def2-SV(P)'); ```; usually no need to go beyond the above level, even PBE would be OK I think. Also this hessian will be numerical.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2020#issuecomment-712367091
https://github.com/psi4/psi4/issues/2020#issuecomment-712367091:302,Testability,Test,Tested,302,"Allenes, yeah, 'too linear' and like to make trouble.; The backtransform broke the molecule, look at most of the `Change` values. They are huge!. I tried a few things and typical solutions like `set DYNAMIC_LEVEL 1` or `opt_coordinates delocalized` do not work well.; Also geomeTRIC is behaving oddly. Tested with pw6b95 instead of pwpb95. If you want something more reliable I can recommend cartesian coordinates and a computed initial hessian.; Optimisation with cartesian coordinates is usually slow, but actually OK with a decent initial hessian.; `set opt_coordinates cartesian `. Automatic initial hessian at a different (cheaper) level is easily done:; ```; set FULL_HESS_EVERY 0; optimize('pwpb95-d3bj',hessian_with='pbe0-d3bj/def2-SV(P)'); ```; usually no need to go beyond the above level, even PBE would be OK I think. Also this hessian will be numerical.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2020#issuecomment-712367091
https://github.com/psi4/psi4/issues/2020#issuecomment-712909670:749,Performance,optimiz,optimize,749,"Thank you for the proposed changes! So the final code would look something like this?. ```; molecule mol_12_butadiene {; 0 1; C -1.743900000 -0.363600000 -0.000000000; C -0.552300000 0.557000000 -0.000100000; C 0.691500000 0.173100000 -0.000000000; C 1.934600000 -0.213400000 -0.000000000; H 2.475000000 -0.380600000 0.924600000; H 2.475400000 -0.380100000 -0.924300000; H -0.756100000 1.624500000 0.000500000; H -2.368000000 -0.187400000 0.878900000; H -1.437400000 -1.407900000 -0.000100000; H -2.368300000 -0.187200000 -0.878700000. units angstrom; no_reorient; }. set globals {; basis aug-cc-pVTZ; dft_spherical_points 434; dft_radial_points 85; opt_coordinates cartesian; full_hess_every 0; freeze_core true ; }. set_memory(24000000000); try:; optimize('pwpb95-d3bj', hessian_with='pbe0-d3bj/def2-SV(P)'); except SCFConvergenceError as e:; unconverged_scf_wfn = e.wfn; unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); set guess read; optimize('pwpb95-d3bj', hessian_with='pbe0-d3bj/def2-SV(P)'); E, wfn = frequency('pwpb95-d3bj', return_wfn=True); print(wfn.frequencies().get(0, 0)); ```. Regarding the frequency calculations, will the results be affected by a lower level of theory Hessian in the beginning? Or will the final results still be of desired level of theory?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2020#issuecomment-712909670
https://github.com/psi4/psi4/issues/2020#issuecomment-712909670:966,Performance,optimiz,optimize,966,"Thank you for the proposed changes! So the final code would look something like this?. ```; molecule mol_12_butadiene {; 0 1; C -1.743900000 -0.363600000 -0.000000000; C -0.552300000 0.557000000 -0.000100000; C 0.691500000 0.173100000 -0.000000000; C 1.934600000 -0.213400000 -0.000000000; H 2.475000000 -0.380600000 0.924600000; H 2.475400000 -0.380100000 -0.924300000; H -0.756100000 1.624500000 0.000500000; H -2.368000000 -0.187400000 0.878900000; H -1.437400000 -1.407900000 -0.000100000; H -2.368300000 -0.187200000 -0.878700000. units angstrom; no_reorient; }. set globals {; basis aug-cc-pVTZ; dft_spherical_points 434; dft_radial_points 85; opt_coordinates cartesian; full_hess_every 0; freeze_core true ; }. set_memory(24000000000); try:; optimize('pwpb95-d3bj', hessian_with='pbe0-d3bj/def2-SV(P)'); except SCFConvergenceError as e:; unconverged_scf_wfn = e.wfn; unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); set guess read; optimize('pwpb95-d3bj', hessian_with='pbe0-d3bj/def2-SV(P)'); E, wfn = frequency('pwpb95-d3bj', return_wfn=True); print(wfn.frequencies().get(0, 0)); ```. Regarding the frequency calculations, will the results be affected by a lower level of theory Hessian in the beginning? Or will the final results still be of desired level of theory?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2020#issuecomment-712909670
https://github.com/psi4/psi4/issues/2020#issuecomment-712927778:442,Modifiability,flexible,flexible,442,"Looks ok. > Regarding the frequency calculations, will the results be affected by a lower level of theory Hessian in the beginning? Or will the final results still be of desired level of theory?. The final results are not affected by the lower theory Hessian[*].; In fact, the default initial Hessian is based on an extremely simple force-field so a DFT hessian is certainly an improvement. :-). [* For most practical purposes. For large and flexible molecules with many close-lying minima one could, in principle, find different minima with different settings for the optimizer.]",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2020#issuecomment-712927778
https://github.com/psi4/psi4/issues/2020#issuecomment-712927778:569,Performance,optimiz,optimizer,569,"Looks ok. > Regarding the frequency calculations, will the results be affected by a lower level of theory Hessian in the beginning? Or will the final results still be of desired level of theory?. The final results are not affected by the lower theory Hessian[*].; In fact, the default initial Hessian is based on an extremely simple force-field so a DFT hessian is certainly an improvement. :-). [* For most practical purposes. For large and flexible molecules with many close-lying minima one could, in principle, find different minima with different settings for the optimizer.]",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2020#issuecomment-712927778
https://github.com/psi4/psi4/issues/2020#issuecomment-712927778:326,Usability,simpl,simple,326,"Looks ok. > Regarding the frequency calculations, will the results be affected by a lower level of theory Hessian in the beginning? Or will the final results still be of desired level of theory?. The final results are not affected by the lower theory Hessian[*].; In fact, the default initial Hessian is based on an extremely simple force-field so a DFT hessian is certainly an improvement. :-). [* For most practical purposes. For large and flexible molecules with many close-lying minima one could, in principle, find different minima with different settings for the optimizer.]",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2020#issuecomment-712927778
https://github.com/psi4/psi4/pull/2022#issuecomment-714187136:59,Testability,test,test,59,"Changed back to `NM` on the QCVars strings and added a new test. Opted for a separate pytest, clocking in at around a minute and a half I don't think I can really call it a smoke or quick test. . Pending checks and review, I think this is ready to go from my end.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-714187136
https://github.com/psi4/psi4/pull/2022#issuecomment-714187136:188,Testability,test,test,188,"Changed back to `NM` on the QCVars strings and added a new test. Opted for a separate pytest, clocking in at around a minute and a half I don't think I can really call it a smoke or quick test. . Pending checks and review, I think this is ready to go from my end.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-714187136
https://github.com/psi4/psi4/pull/2022#issuecomment-714505214:181,Testability,test,test,181,"thanks for the thorough review @robertodr ! all comments addressed. also removed the `cc` pytest marker, since it doesn't exist yet and we probably don't need a marker for a single test.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-714505214
https://github.com/psi4/psi4/pull/2022#issuecomment-716213255:55,Modifiability,variab,variables,55,"so I've changed the `cc46` test case to grab `EOM-CC2` variables for all ground-state quantities. Excited state quantities are set by the EOM code and so still follow `CC XPROPERTYX`. I think this is a reasonable move, considering anyone wanting to use these variables will need to check their names to get the syntax right in the first place.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716213255
https://github.com/psi4/psi4/pull/2022#issuecomment-716213255:259,Modifiability,variab,variables,259,"so I've changed the `cc46` test case to grab `EOM-CC2` variables for all ground-state quantities. Excited state quantities are set by the EOM code and so still follow `CC XPROPERTYX`. I think this is a reasonable move, considering anyone wanting to use these variables will need to check their names to get the syntax right in the first place.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716213255
https://github.com/psi4/psi4/pull/2022#issuecomment-716213255:27,Testability,test,test,27,"so I've changed the `cc46` test case to grab `EOM-CC2` variables for all ground-state quantities. Excited state quantities are set by the EOM code and so still follow `CC XPROPERTYX`. I think this is a reasonable move, considering anyone wanting to use these variables will need to check their names to get the syntax right in the first place.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716213255
https://github.com/psi4/psi4/pull/2022#issuecomment-716595355:508,Energy Efficiency,energy,energy,508,"> > lgtm, thanks! Is there any atomic unit for specific rotation?; > ; > since specific rotation is normalized for path length and concentration in experimental settings, I'd say the use of deg/[dm (g/cm^3)] for specific rotation is even more ubiquitous than the use of NM for wavelength for dynamic properties. @lothian may have more to say on this topic. Are we talking about storing the specific rotation or the G' tensor? I would think we'd want to store the latter in atomic units (along with the field energy, also in a.u.), and not store the specific rotation, which can quickly be computed from the tensor and the energy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716595355
https://github.com/psi4/psi4/pull/2022#issuecomment-716595355:622,Energy Efficiency,energy,energy,622,"> > lgtm, thanks! Is there any atomic unit for specific rotation?; > ; > since specific rotation is normalized for path length and concentration in experimental settings, I'd say the use of deg/[dm (g/cm^3)] for specific rotation is even more ubiquitous than the use of NM for wavelength for dynamic properties. @lothian may have more to say on this topic. Are we talking about storing the specific rotation or the G' tensor? I would think we'd want to store the latter in atomic units (along with the field energy, also in a.u.), and not store the specific rotation, which can quickly be computed from the tensor and the energy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716595355
https://github.com/psi4/psi4/pull/2022#issuecomment-716600491:976,Availability,avail,available,976,"> > > lgtm, thanks! Is there any atomic unit for specific rotation?; > > ; > > ; > > since specific rotation is normalized for path length and concentration in experimental settings, I'd say the use of deg/[dm (g/cm^3)] for specific rotation is even more ubiquitous than the use of NM for wavelength for dynamic properties. @lothian may have more to say on this topic.; > ; > Are we talking about storing the specific rotation or the G' tensor? I would think we'd want to store the latter in atomic units (along with the field energy, also in a.u.), and not store the specific rotation, which can quickly be computed from the tensor and the energy. The G' tensor is stored in atomic units (as it's reported in the output file), while the specific rotation itself is stored in deg/[dm (g/cm^3)] since it is only one additional float. For now, since the syntax is `CCxx xPROPERTYx @ xxNM`, it's a bit easier to use NM. But you're right that the field strength in a.u. should be available at the python level to an arbitrary number of digits. perhaps the `omega` dict passed in (as `psi4.set_options({""omega"":[x,x,unit]})`) is available on the wfn already?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716600491
https://github.com/psi4/psi4/pull/2022#issuecomment-716600491:1124,Availability,avail,available,1124,"> > > lgtm, thanks! Is there any atomic unit for specific rotation?; > > ; > > ; > > since specific rotation is normalized for path length and concentration in experimental settings, I'd say the use of deg/[dm (g/cm^3)] for specific rotation is even more ubiquitous than the use of NM for wavelength for dynamic properties. @lothian may have more to say on this topic.; > ; > Are we talking about storing the specific rotation or the G' tensor? I would think we'd want to store the latter in atomic units (along with the field energy, also in a.u.), and not store the specific rotation, which can quickly be computed from the tensor and the energy. The G' tensor is stored in atomic units (as it's reported in the output file), while the specific rotation itself is stored in deg/[dm (g/cm^3)] since it is only one additional float. For now, since the syntax is `CCxx xPROPERTYx @ xxNM`, it's a bit easier to use NM. But you're right that the field strength in a.u. should be available at the python level to an arbitrary number of digits. perhaps the `omega` dict passed in (as `psi4.set_options({""omega"":[x,x,unit]})`) is available on the wfn already?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716600491
https://github.com/psi4/psi4/pull/2022#issuecomment-716600491:527,Energy Efficiency,energy,energy,527,"> > > lgtm, thanks! Is there any atomic unit for specific rotation?; > > ; > > ; > > since specific rotation is normalized for path length and concentration in experimental settings, I'd say the use of deg/[dm (g/cm^3)] for specific rotation is even more ubiquitous than the use of NM for wavelength for dynamic properties. @lothian may have more to say on this topic.; > ; > Are we talking about storing the specific rotation or the G' tensor? I would think we'd want to store the latter in atomic units (along with the field energy, also in a.u.), and not store the specific rotation, which can quickly be computed from the tensor and the energy. The G' tensor is stored in atomic units (as it's reported in the output file), while the specific rotation itself is stored in deg/[dm (g/cm^3)] since it is only one additional float. For now, since the syntax is `CCxx xPROPERTYx @ xxNM`, it's a bit easier to use NM. But you're right that the field strength in a.u. should be available at the python level to an arbitrary number of digits. perhaps the `omega` dict passed in (as `psi4.set_options({""omega"":[x,x,unit]})`) is available on the wfn already?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716600491
https://github.com/psi4/psi4/pull/2022#issuecomment-716600491:641,Energy Efficiency,energy,energy,641,"> > > lgtm, thanks! Is there any atomic unit for specific rotation?; > > ; > > ; > > since specific rotation is normalized for path length and concentration in experimental settings, I'd say the use of deg/[dm (g/cm^3)] for specific rotation is even more ubiquitous than the use of NM for wavelength for dynamic properties. @lothian may have more to say on this topic.; > ; > Are we talking about storing the specific rotation or the G' tensor? I would think we'd want to store the latter in atomic units (along with the field energy, also in a.u.), and not store the specific rotation, which can quickly be computed from the tensor and the energy. The G' tensor is stored in atomic units (as it's reported in the output file), while the specific rotation itself is stored in deg/[dm (g/cm^3)] since it is only one additional float. For now, since the syntax is `CCxx xPROPERTYx @ xxNM`, it's a bit easier to use NM. But you're right that the field strength in a.u. should be available at the python level to an arbitrary number of digits. perhaps the `omega` dict passed in (as `psi4.set_options({""omega"":[x,x,unit]})`) is available on the wfn already?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716600491
https://github.com/psi4/psi4/pull/2022#issuecomment-716616770:507,Energy Efficiency,energy,energy,507,">>> lgtm, thanks! Is there any atomic unit for specific rotation?. >> since specific rotation is normalized for path length and concentration in experimental settings, I'd say the use of deg/[dm (g/cm^3)] for specific rotation is even more ubiquitous than the use of NM for wavelength for dynamic properties. @lothian may have more to say on this topic. > Are we talking about storing the specific rotation or the G' tensor? I would think we'd want to store the latter in atomic units (along with the field energy, also in a.u.), and not store the specific rotation, which can quickly be computed from the tensor and the energy. Both tensors and scalars are saved to psivars in the PR. I think that's usual procedure as we try to be explicit (mp2 tot, mp2 corl, hf tot) even if the arithmetic is easy. We are trying to map psivars more closely to qcschema properties though, which are rigidly atomic units. Over there, it's easy to request the ubiquitous user units of deg/[dm (g/cm^3)] be returned from au storage. We can add such capability to the `psi4.variable()` query in psi4. So my question was whether we could store the qcvars data in au. The qcvar name with nm I think is a reasonable exception since that won't translate directly to qcschema.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716616770
https://github.com/psi4/psi4/pull/2022#issuecomment-716616770:621,Energy Efficiency,energy,energy,621,">>> lgtm, thanks! Is there any atomic unit for specific rotation?. >> since specific rotation is normalized for path length and concentration in experimental settings, I'd say the use of deg/[dm (g/cm^3)] for specific rotation is even more ubiquitous than the use of NM for wavelength for dynamic properties. @lothian may have more to say on this topic. > Are we talking about storing the specific rotation or the G' tensor? I would think we'd want to store the latter in atomic units (along with the field energy, also in a.u.), and not store the specific rotation, which can quickly be computed from the tensor and the energy. Both tensors and scalars are saved to psivars in the PR. I think that's usual procedure as we try to be explicit (mp2 tot, mp2 corl, hf tot) even if the arithmetic is easy. We are trying to map psivars more closely to qcschema properties though, which are rigidly atomic units. Over there, it's easy to request the ubiquitous user units of deg/[dm (g/cm^3)] be returned from au storage. We can add such capability to the `psi4.variable()` query in psi4. So my question was whether we could store the qcvars data in au. The qcvar name with nm I think is a reasonable exception since that won't translate directly to qcschema.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716616770
https://github.com/psi4/psi4/pull/2022#issuecomment-716616770:1056,Modifiability,variab,variable,1056,">>> lgtm, thanks! Is there any atomic unit for specific rotation?. >> since specific rotation is normalized for path length and concentration in experimental settings, I'd say the use of deg/[dm (g/cm^3)] for specific rotation is even more ubiquitous than the use of NM for wavelength for dynamic properties. @lothian may have more to say on this topic. > Are we talking about storing the specific rotation or the G' tensor? I would think we'd want to store the latter in atomic units (along with the field energy, also in a.u.), and not store the specific rotation, which can quickly be computed from the tensor and the energy. Both tensors and scalars are saved to psivars in the PR. I think that's usual procedure as we try to be explicit (mp2 tot, mp2 corl, hf tot) even if the arithmetic is easy. We are trying to map psivars more closely to qcschema properties though, which are rigidly atomic units. Over there, it's easy to request the ubiquitous user units of deg/[dm (g/cm^3)] be returned from au storage. We can add such capability to the `psi4.variable()` query in psi4. So my question was whether we could store the qcvars data in au. The qcvar name with nm I think is a reasonable exception since that won't translate directly to qcschema.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716616770
https://github.com/psi4/psi4/pull/2022#issuecomment-716630918:525,Energy Efficiency,energy,energy,525,"> > > > lgtm, thanks! Is there any atomic unit for specific rotation?; > ; > > > since specific rotation is normalized for path length and concentration in experimental settings, I'd say the use of deg/[dm (g/cm^3)] for specific rotation is even more ubiquitous than the use of NM for wavelength for dynamic properties. @lothian may have more to say on this topic.; > ; > > Are we talking about storing the specific rotation or the G' tensor? I would think we'd want to store the latter in atomic units (along with the field energy, also in a.u.), and not store the specific rotation, which can quickly be computed from the tensor and the energy.; > ; > Both tensors and scalars are saved to psivars in the PR. I think that's usual procedure as we try to be explicit (mp2 tot, mp2 corl, hf tot) even if the arithmetic is easy. We are trying to map psivars more closely to qcschema properties though, which are rigidly atomic units. Over there, it's easy to request the ubiquitous user units of deg/[dm (g/cm^3)] be returned from au storage. We can add such capability to the `psi4.variable()` query in psi4. So my question was whether we could store the qcvars data in au. The qcvar name with nm I think is a reasonable exception since that won't translate directly to qcschema. in that case, we could in theory store the specific rotation in ""atomic units"" if such a thing even exists. it's computed in `ccresponse` from the trace of the G' tensor (in a.u.) which is then normalized for path length, concentration, and molecular weight to give the ""specific"" rotation, so I suppose we'd need atomic units for those quantities.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716630918
https://github.com/psi4/psi4/pull/2022#issuecomment-716630918:639,Energy Efficiency,energy,energy,639,"> > > > lgtm, thanks! Is there any atomic unit for specific rotation?; > ; > > > since specific rotation is normalized for path length and concentration in experimental settings, I'd say the use of deg/[dm (g/cm^3)] for specific rotation is even more ubiquitous than the use of NM for wavelength for dynamic properties. @lothian may have more to say on this topic.; > ; > > Are we talking about storing the specific rotation or the G' tensor? I would think we'd want to store the latter in atomic units (along with the field energy, also in a.u.), and not store the specific rotation, which can quickly be computed from the tensor and the energy.; > ; > Both tensors and scalars are saved to psivars in the PR. I think that's usual procedure as we try to be explicit (mp2 tot, mp2 corl, hf tot) even if the arithmetic is easy. We are trying to map psivars more closely to qcschema properties though, which are rigidly atomic units. Over there, it's easy to request the ubiquitous user units of deg/[dm (g/cm^3)] be returned from au storage. We can add such capability to the `psi4.variable()` query in psi4. So my question was whether we could store the qcvars data in au. The qcvar name with nm I think is a reasonable exception since that won't translate directly to qcschema. in that case, we could in theory store the specific rotation in ""atomic units"" if such a thing even exists. it's computed in `ccresponse` from the trace of the G' tensor (in a.u.) which is then normalized for path length, concentration, and molecular weight to give the ""specific"" rotation, so I suppose we'd need atomic units for those quantities.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716630918
https://github.com/psi4/psi4/pull/2022#issuecomment-716630918:1081,Modifiability,variab,variable,1081,"> > > > lgtm, thanks! Is there any atomic unit for specific rotation?; > ; > > > since specific rotation is normalized for path length and concentration in experimental settings, I'd say the use of deg/[dm (g/cm^3)] for specific rotation is even more ubiquitous than the use of NM for wavelength for dynamic properties. @lothian may have more to say on this topic.; > ; > > Are we talking about storing the specific rotation or the G' tensor? I would think we'd want to store the latter in atomic units (along with the field energy, also in a.u.), and not store the specific rotation, which can quickly be computed from the tensor and the energy.; > ; > Both tensors and scalars are saved to psivars in the PR. I think that's usual procedure as we try to be explicit (mp2 tot, mp2 corl, hf tot) even if the arithmetic is easy. We are trying to map psivars more closely to qcschema properties though, which are rigidly atomic units. Over there, it's easy to request the ubiquitous user units of deg/[dm (g/cm^3)] be returned from au storage. We can add such capability to the `psi4.variable()` query in psi4. So my question was whether we could store the qcvars data in au. The qcvar name with nm I think is a reasonable exception since that won't translate directly to qcschema. in that case, we could in theory store the specific rotation in ""atomic units"" if such a thing even exists. it's computed in `ccresponse` from the trace of the G' tensor (in a.u.) which is then normalized for path length, concentration, and molecular weight to give the ""specific"" rotation, so I suppose we'd need atomic units for those quantities.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-716630918
https://github.com/psi4/psi4/pull/2022#issuecomment-717483962:707,Deployability,update,update,707,"@loriab after some consideration with @lothian , I think the simplest course of action would be to simply not store the scalar variable. the unit question is somewhat nontrivial, plus there is the issue of scaling the rotation by the molecular weight of the system (which is handled very differently for solvated molecules, but is not accounted for in `ccresponse`). therefore the best way to make sure the user knows what they're getting is to let them compute it themselves from the mixed electric dipole-magnetic dipole response tensor. . following this logic, I also propose removing the scalar electric dipole polarizability, which is also easily computed using the trace of the stored tensor. I would update the new test to reflect this, just want to be sure this is an agreeable solution for everyone before I commit the changes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-717483962
https://github.com/psi4/psi4/pull/2022#issuecomment-717483962:127,Modifiability,variab,variable,127,"@loriab after some consideration with @lothian , I think the simplest course of action would be to simply not store the scalar variable. the unit question is somewhat nontrivial, plus there is the issue of scaling the rotation by the molecular weight of the system (which is handled very differently for solvated molecules, but is not accounted for in `ccresponse`). therefore the best way to make sure the user knows what they're getting is to let them compute it themselves from the mixed electric dipole-magnetic dipole response tensor. . following this logic, I also propose removing the scalar electric dipole polarizability, which is also easily computed using the trace of the stored tensor. I would update the new test to reflect this, just want to be sure this is an agreeable solution for everyone before I commit the changes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-717483962
https://github.com/psi4/psi4/pull/2022#issuecomment-717483962:557,Testability,log,logic,557,"@loriab after some consideration with @lothian , I think the simplest course of action would be to simply not store the scalar variable. the unit question is somewhat nontrivial, plus there is the issue of scaling the rotation by the molecular weight of the system (which is handled very differently for solvated molecules, but is not accounted for in `ccresponse`). therefore the best way to make sure the user knows what they're getting is to let them compute it themselves from the mixed electric dipole-magnetic dipole response tensor. . following this logic, I also propose removing the scalar electric dipole polarizability, which is also easily computed using the trace of the stored tensor. I would update the new test to reflect this, just want to be sure this is an agreeable solution for everyone before I commit the changes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-717483962
https://github.com/psi4/psi4/pull/2022#issuecomment-717483962:722,Testability,test,test,722,"@loriab after some consideration with @lothian , I think the simplest course of action would be to simply not store the scalar variable. the unit question is somewhat nontrivial, plus there is the issue of scaling the rotation by the molecular weight of the system (which is handled very differently for solvated molecules, but is not accounted for in `ccresponse`). therefore the best way to make sure the user knows what they're getting is to let them compute it themselves from the mixed electric dipole-magnetic dipole response tensor. . following this logic, I also propose removing the scalar electric dipole polarizability, which is also easily computed using the trace of the stored tensor. I would update the new test to reflect this, just want to be sure this is an agreeable solution for everyone before I commit the changes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-717483962
https://github.com/psi4/psi4/pull/2022#issuecomment-717483962:61,Usability,simpl,simplest,61,"@loriab after some consideration with @lothian , I think the simplest course of action would be to simply not store the scalar variable. the unit question is somewhat nontrivial, plus there is the issue of scaling the rotation by the molecular weight of the system (which is handled very differently for solvated molecules, but is not accounted for in `ccresponse`). therefore the best way to make sure the user knows what they're getting is to let them compute it themselves from the mixed electric dipole-magnetic dipole response tensor. . following this logic, I also propose removing the scalar electric dipole polarizability, which is also easily computed using the trace of the stored tensor. I would update the new test to reflect this, just want to be sure this is an agreeable solution for everyone before I commit the changes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-717483962
https://github.com/psi4/psi4/pull/2022#issuecomment-717483962:99,Usability,simpl,simply,99,"@loriab after some consideration with @lothian , I think the simplest course of action would be to simply not store the scalar variable. the unit question is somewhat nontrivial, plus there is the issue of scaling the rotation by the molecular weight of the system (which is handled very differently for solvated molecules, but is not accounted for in `ccresponse`). therefore the best way to make sure the user knows what they're getting is to let them compute it themselves from the mixed electric dipole-magnetic dipole response tensor. . following this logic, I also propose removing the scalar electric dipole polarizability, which is also easily computed using the trace of the stored tensor. I would update the new test to reflect this, just want to be sure this is an agreeable solution for everyone before I commit the changes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-717483962
https://github.com/psi4/psi4/pull/2022#issuecomment-719251676:69,Testability,log,logic,69,"I'm not keen on not storing the scalars, but I can't argue with your logic. Perhaps keep the tests, and show the tensor->scalar processing within the tests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-719251676
https://github.com/psi4/psi4/pull/2022#issuecomment-719251676:93,Testability,test,tests,93,"I'm not keen on not storing the scalars, but I can't argue with your logic. Perhaps keep the tests, and show the tensor->scalar processing within the tests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-719251676
https://github.com/psi4/psi4/pull/2022#issuecomment-719251676:150,Testability,test,tests,150,"I'm not keen on not storing the scalars, but I can't argue with your logic. Perhaps keep the tests, and show the tensor->scalar processing within the tests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-719251676
https://github.com/psi4/psi4/pull/2022#issuecomment-719650826:19,Testability,test,tests,19,"done. pending auto tests, this should be ready to go.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-719650826
https://github.com/psi4/psi4/issues/2023#issuecomment-716894798:178,Performance,optimiz,optimization,178,"Since the problem is that CMake is not detecting the proper flags, this issue also affects all the other options; ```; option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-xHost"" ""-march=native"" ""/arch:AVX2""); option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2023#issuecomment-716894798
https://github.com/psi4/psi4/issues/2023#issuecomment-716894798:39,Safety,detect,detecting,39,"Since the problem is that CMake is not detecting the proper flags, this issue also affects all the other options; ```; option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-xHost"" ""-march=native"" ""/arch:AVX2""); option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2023#issuecomment-716894798
https://github.com/psi4/psi4/issues/2023#issuecomment-716894798:592,Security,sanitiz,sanitizer,592,"Since the problem is that CMake is not detecting the proper flags, this issue also affects all the other options; ```; option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-xHost"" ""-march=native"" ""/arch:AVX2""); option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2023#issuecomment-716894798
https://github.com/psi4/psi4/issues/2023#issuecomment-716894798:748,Security,sanitiz,sanitizer,748,"Since the problem is that CMake is not detecting the proper flags, this issue also affects all the other options; ```; option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-xHost"" ""-march=native"" ""/arch:AVX2""); option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2023#issuecomment-716894798
https://github.com/psi4/psi4/issues/2023#issuecomment-716894798:927,Security,sanitiz,sanitizer,927,"Since the problem is that CMake is not detecting the proper flags, this issue also affects all the other options; ```; option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-xHost"" ""-march=native"" ""/arch:AVX2""); option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2023#issuecomment-716894798
https://github.com/psi4/psi4/issues/2023#issuecomment-716894798:1085,Security,sanitiz,sanitizer,1085,"Since the problem is that CMake is not detecting the proper flags, this issue also affects all the other options; ```; option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-xHost"" ""-march=native"" ""/arch:AVX2""); option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2023#issuecomment-716894798
https://github.com/psi4/psi4/issues/2023#issuecomment-716913793:31,Testability,test,test,31,"Yes, that's true. However, the test program failed to build with `-xHost` so it is odd that the CMake scripts would not proceed to test the further alternatives.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2023#issuecomment-716913793
https://github.com/psi4/psi4/issues/2023#issuecomment-716913793:131,Testability,test,test,131,"Yes, that's true. However, the test program failed to build with `-xHost` so it is odd that the CMake scripts would not proceed to test the further alternatives.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2023#issuecomment-716913793
https://github.com/psi4/psi4/issues/2023#issuecomment-717077836:124,Availability,error,error,124,"The underlying [cmake cmd](https://cmake.org/cmake/help/latest/module/CheckCXXCompilerFlag.html) is checking for a compiler error code, not compilation failure. I'm confused as to why this is appearing now, as the `-x<lang>` has been in GCC for many years (at least since 4.8.5).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2023#issuecomment-717077836
https://github.com/psi4/psi4/issues/2023#issuecomment-717077836:152,Availability,failure,failure,152,"The underlying [cmake cmd](https://cmake.org/cmake/help/latest/module/CheckCXXCompilerFlag.html) is checking for a compiler error code, not compilation failure. I'm confused as to why this is appearing now, as the `-x<lang>` has been in GCC for many years (at least since 4.8.5).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2023#issuecomment-717077836
https://github.com/psi4/psi4/issues/2023#issuecomment-717371854:1031,Integrability,depend,dependent,1031,"Ok, the only non-invasive way I see around this is the below in the main CM file (change primary language as needed):. ```; if(CMAKE_CXX_COMPILER_ID MATCHES Intel); option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-xHost"" ""-march=native"" ""/arch:AVX2""); else(); option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-march=native"" ""-xHost"" ""/arch:AVX2""); endif(); ```. For Intel, `-march=native` might be a near approximation to `-xHost`, but I'd rather use the latter official flag.; Do you want to try this out for Libxc, @susilehtola?. I observed another problem that when conda compilers are present and `-DCMAKE_CXX_COMPILER=icpc` passed, that the `-fno-plt` set in the envvar `CXXFLAGS` by conda env activation was unsupported by Intel and so triggered all three `ENABLE_XHOST` options to fail unless `CXXFLAGS=` explicitly cleared/set beforehand. I had deliberately _not_ made psi4 CMake dependent on envvars, but it looks like CMake started doing that in 3.10, hmpf. https://cmake.org/cmake/help/v3.10/manual/cmake-env-variables.7.html#manual:cmake-env-variables(7)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2023#issuecomment-717371854
https://github.com/psi4/psi4/issues/2023#issuecomment-717371854:1163,Modifiability,variab,variables,1163,"Ok, the only non-invasive way I see around this is the below in the main CM file (change primary language as needed):. ```; if(CMAKE_CXX_COMPILER_ID MATCHES Intel); option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-xHost"" ""-march=native"" ""/arch:AVX2""); else(); option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-march=native"" ""-xHost"" ""/arch:AVX2""); endif(); ```. For Intel, `-march=native` might be a near approximation to `-xHost`, but I'd rather use the latter official flag.; Do you want to try this out for Libxc, @susilehtola?. I observed another problem that when conda compilers are present and `-DCMAKE_CXX_COMPILER=icpc` passed, that the `-fno-plt` set in the envvar `CXXFLAGS` by conda env activation was unsupported by Intel and so triggered all three `ENABLE_XHOST` options to fail unless `CXXFLAGS=` explicitly cleared/set beforehand. I had deliberately _not_ made psi4 CMake dependent on envvars, but it looks like CMake started doing that in 3.10, hmpf. https://cmake.org/cmake/help/v3.10/manual/cmake-env-variables.7.html#manual:cmake-env-variables(7)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2023#issuecomment-717371854
https://github.com/psi4/psi4/issues/2023#issuecomment-717371854:1197,Modifiability,variab,variables,1197,"Ok, the only non-invasive way I see around this is the below in the main CM file (change primary language as needed):. ```; if(CMAKE_CXX_COMPILER_ID MATCHES Intel); option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-xHost"" ""-march=native"" ""/arch:AVX2""); else(); option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-march=native"" ""-xHost"" ""/arch:AVX2""); endif(); ```. For Intel, `-march=native` might be a near approximation to `-xHost`, but I'd rather use the latter official flag.; Do you want to try this out for Libxc, @susilehtola?. I observed another problem that when conda compilers are present and `-DCMAKE_CXX_COMPILER=icpc` passed, that the `-fno-plt` set in the envvar `CXXFLAGS` by conda env activation was unsupported by Intel and so triggered all three `ENABLE_XHOST` options to fail unless `CXXFLAGS=` explicitly cleared/set beforehand. I had deliberately _not_ made psi4 CMake dependent on envvars, but it looks like CMake started doing that in 3.10, hmpf. https://cmake.org/cmake/help/v3.10/manual/cmake-env-variables.7.html#manual:cmake-env-variables(7)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2023#issuecomment-717371854
https://github.com/psi4/psi4/issues/2023#issuecomment-717371854:224,Performance,optimiz,optimization,224,"Ok, the only non-invasive way I see around this is the below in the main CM file (change primary language as needed):. ```; if(CMAKE_CXX_COMPILER_ID MATCHES Intel); option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-xHost"" ""-march=native"" ""/arch:AVX2""); else(); option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-march=native"" ""-xHost"" ""/arch:AVX2""); endif(); ```. For Intel, `-march=native` might be a near approximation to `-xHost`, but I'd rather use the latter official flag.; Do you want to try this out for Libxc, @susilehtola?. I observed another problem that when conda compilers are present and `-DCMAKE_CXX_COMPILER=icpc` passed, that the `-fno-plt` set in the envvar `CXXFLAGS` by conda env activation was unsupported by Intel and so triggered all three `ENABLE_XHOST` options to fail unless `CXXFLAGS=` explicitly cleared/set beforehand. I had deliberately _not_ made psi4 CMake dependent on envvars, but it looks like CMake started doing that in 3.10, hmpf. https://cmake.org/cmake/help/v3.10/manual/cmake-env-variables.7.html#manual:cmake-env-variables(7)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2023#issuecomment-717371854
https://github.com/psi4/psi4/issues/2023#issuecomment-717371854:391,Performance,optimiz,optimization,391,"Ok, the only non-invasive way I see around this is the below in the main CM file (change primary language as needed):. ```; if(CMAKE_CXX_COMPILER_ID MATCHES Intel); option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-xHost"" ""-march=native"" ""/arch:AVX2""); else(); option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-march=native"" ""-xHost"" ""/arch:AVX2""); endif(); ```. For Intel, `-march=native` might be a near approximation to `-xHost`, but I'd rather use the latter official flag.; Do you want to try this out for Libxc, @susilehtola?. I observed another problem that when conda compilers are present and `-DCMAKE_CXX_COMPILER=icpc` passed, that the `-fno-plt` set in the envvar `CXXFLAGS` by conda env activation was unsupported by Intel and so triggered all three `ENABLE_XHOST` options to fail unless `CXXFLAGS=` explicitly cleared/set beforehand. I had deliberately _not_ made psi4 CMake dependent on envvars, but it looks like CMake started doing that in 3.10, hmpf. https://cmake.org/cmake/help/v3.10/manual/cmake-env-variables.7.html#manual:cmake-env-variables(7)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2023#issuecomment-717371854
https://github.com/psi4/psi4/issues/2023#issuecomment-717371854:966,Usability,clear,cleared,966,"Ok, the only non-invasive way I see around this is the below in the main CM file (change primary language as needed):. ```; if(CMAKE_CXX_COMPILER_ID MATCHES Intel); option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-xHost"" ""-march=native"" ""/arch:AVX2""); else(); option_with_flags(ENABLE_XHOST ""Enables processor-specific optimization (with MSVC, it enables AVX2 instructions)"" ON; ""-march=native"" ""-xHost"" ""/arch:AVX2""); endif(); ```. For Intel, `-march=native` might be a near approximation to `-xHost`, but I'd rather use the latter official flag.; Do you want to try this out for Libxc, @susilehtola?. I observed another problem that when conda compilers are present and `-DCMAKE_CXX_COMPILER=icpc` passed, that the `-fno-plt` set in the envvar `CXXFLAGS` by conda env activation was unsupported by Intel and so triggered all three `ENABLE_XHOST` options to fail unless `CXXFLAGS=` explicitly cleared/set beforehand. I had deliberately _not_ made psi4 CMake dependent on envvars, but it looks like CMake started doing that in 3.10, hmpf. https://cmake.org/cmake/help/v3.10/manual/cmake-env-variables.7.html#manual:cmake-env-variables(7)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2023#issuecomment-717371854
https://github.com/psi4/psi4/issues/2024#issuecomment-718079355:230,Deployability,upgrade,upgraded,230,"You're going to need to constrain psi4 to get meaningful dep resolution info. something like `psi4=1.4a2.dev1058 -c psi4/label/dev` right now. From the above, you're pulling an ancient version of psi4, pre v1.2, from before conda upgraded its compilers late 2017, hence the `gcc-5-mp`, which was a local (psi4) copy of a c++11 capable gcc so that psi4 could build.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-718079355
https://github.com/psi4/psi4/issues/2024#issuecomment-718343348:331,Availability,Avail,Available,331,"With the above recommendations, I get this, which is not much more useful without more troubleshooting (slowly going through each dep one by one):. <details>; <summary>Click to expand</summary>; UnsatisfiableError: The following specifications were found to be incompatible with each other:. Output in format: Requested package -> Available versions. Package blas conflicts for:; blas[build=mkl]; ambertools[version='>=20'] -> numpy -> blas[version='*|*|1.1|1.0|1.0',build='mkl|mkl|openblas|openblas']; psi4=1.4a2.dev1058 -> blas==1.0=mkl; psi4=1.4a2.dev1058 -> numpy[version='>=1.12.0'] -> blas[version='*|*|1.1|1.0',build='mkl|openblas']. Package libgfortran4 conflicts for:; blas[build=mkl] -> libgfortran4[version='>=7.5.0']; ambertools[version='>=20'] -> libgfortran4[version='>=7.5.0']; ambertools[version='>=20'] -> libgfortran=4 -> libgfortran4; blas[build=mkl] -> libgfortran=4 -> libgfortran4. Package python conflicts for:; ambertools[version='>=20'] -> python[version='>=3.6,<3.7.0a0|>=3.7,<3.8.0a0|>=3.8,<3.9.0a0|>=3.9,<3.10.0a0']; ambertools[version='>=20'] -> cython -> python[version='2.7.*|3.5.*|3.6.*|>=2.7,<2.8.0a0|>=3.5,<3.6.0a0|3.4.*|3.7.*|3.8.*|3.9.*']; python[version='>=3.6,<3.8']; psi4=1.4a2.dev1058 -> mkl-service[version='>=2,<3.0a0'] -> python[version='2.7.*|3.5.*|3.6.*|>=2.7,<2.8.0a0|>=3.9,<3.10.0a0|>=3.6|>=3.5|>=3.5,<3.6.0a0|3.4.*|>=3.6.0']; psi4=1.4a2.dev1058 -> python[version='>=3.6,<3.7.0a0|>=3.7,<3.8.0a0|>=3.8,<3.9.0a0']. Package numpy-base conflicts for:; ambertools[version='>=20'] -> numpy -> numpy-base[version='1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.14.3|1.14.3|1.14.3|1.14.3|1.14.3|1.14.3|1.14.4|1.14.4|1.14.4|1.14.4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-718343348
https://github.com/psi4/psi4/issues/2024#issuecomment-718347497:194,Deployability,install,installing,194,"I’m still suspicious of those blas/pin/implementation combos up in the first block. Psi really has no constraints on numpy. The >=0.12 was just there to settle a mkl problem iirc. I wonder what installing Psi4, then force removing numpy, then trying an ambertools install would do.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-718347497
https://github.com/psi4/psi4/issues/2024#issuecomment-718347497:264,Deployability,install,install,264,"I’m still suspicious of those blas/pin/implementation combos up in the first block. Psi really has no constraints on numpy. The >=0.12 was just there to settle a mkl problem iirc. I wonder what installing Psi4, then force removing numpy, then trying an ambertools install would do.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-718347497
https://github.com/psi4/psi4/issues/2024#issuecomment-718357532:164,Availability,error,errors,164,">= 1.12 is very reasonable as it's a few years old, and I think pins like >= 1.16 are likely to happen elsewhere. Following your suggestion, conda chokes with more errors than fit on my terminal's history, but mamba complains about . ```; Problem: package ambertools-20.0-py37h18738c5_0 requires netcdf-fortran >=4.5.2,<4.6.0a0, but none of the providers can be installed; ```. yet here's a 4.5.3 online: https://anaconda.org/conda-forge/netcdf-fortran/files / https://anaconda.org/conda-forge/netcdf-fortran/files/modal/info/5f8e0b60a58f0d0a54b46bb2. hdf5 1.10.6 seems to be in the recent psi4 builds, so that shouldn't be the issue. Maybe it's the fortran stuff, it's confusing how and why `libgfortran`/`libgfortran4`/`libgfortran5` all coexist at once.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-718357532
https://github.com/psi4/psi4/issues/2024#issuecomment-718357532:362,Deployability,install,installed,362,">= 1.12 is very reasonable as it's a few years old, and I think pins like >= 1.16 are likely to happen elsewhere. Following your suggestion, conda chokes with more errors than fit on my terminal's history, but mamba complains about . ```; Problem: package ambertools-20.0-py37h18738c5_0 requires netcdf-fortran >=4.5.2,<4.6.0a0, but none of the providers can be installed; ```. yet here's a 4.5.3 online: https://anaconda.org/conda-forge/netcdf-fortran/files / https://anaconda.org/conda-forge/netcdf-fortran/files/modal/info/5f8e0b60a58f0d0a54b46bb2. hdf5 1.10.6 seems to be in the recent psi4 builds, so that shouldn't be the issue. Maybe it's the fortran stuff, it's confusing how and why `libgfortran`/`libgfortran4`/`libgfortran5` all coexist at once.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-718357532
https://github.com/psi4/psi4/issues/2024#issuecomment-722811014:1180,Integrability,depend,dependencies,1180,"so the environment is solvable on Linux:; ```conda create -n amber ambertools=20.9 python=3.7 blas=*=mkl gau2grid psi4/label/dev::libxc psi4/label/dev::psi4=1.4a2.dev1058 -c conda-forge -c defaults -c psi4/label/dev```. on Mac, I agree that `libgfortran` is the problem. it comes about b/c conda-forge pins on gfortran v4 and defaults on gfortran v3 (then there's various soversions and libgfortran versions, too). once upon a time, the pinning that was applied by run_exports was >3.0.1, but that's been narrowed to >3.0.1,<4.0.0 . there's still some old add-on packages with the former, so if I suppress the libgfortran pinning on psi4 itself (psi4=1.4a2.dev1084 for py37 at https://anaconda.org/psi4/psi4/files), then I can get an environment to solve with it and ambertools=20. of course, then the libgfortran.3.dylib is missing, but if I symlink (!) that to libgfortran.4.dylib, I can get some psi4 test cases to pass (gdma fails to load lib, while some dft is off a bit). altogether, not a satisfactory or safe fix. and libxc is both required and fortran, so I can't just build you a non-fortran psi4. so unless I think of something else, I think you just can't mix fortran dependencies when compiled against a mix of c-f and defaults pinnings. sorry.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-722811014
https://github.com/psi4/psi4/issues/2024#issuecomment-722811014:938,Performance,load,load,938,"so the environment is solvable on Linux:; ```conda create -n amber ambertools=20.9 python=3.7 blas=*=mkl gau2grid psi4/label/dev::libxc psi4/label/dev::psi4=1.4a2.dev1058 -c conda-forge -c defaults -c psi4/label/dev```. on Mac, I agree that `libgfortran` is the problem. it comes about b/c conda-forge pins on gfortran v4 and defaults on gfortran v3 (then there's various soversions and libgfortran versions, too). once upon a time, the pinning that was applied by run_exports was >3.0.1, but that's been narrowed to >3.0.1,<4.0.0 . there's still some old add-on packages with the former, so if I suppress the libgfortran pinning on psi4 itself (psi4=1.4a2.dev1084 for py37 at https://anaconda.org/psi4/psi4/files), then I can get an environment to solve with it and ambertools=20. of course, then the libgfortran.3.dylib is missing, but if I symlink (!) that to libgfortran.4.dylib, I can get some psi4 test cases to pass (gdma fails to load lib, while some dft is off a bit). altogether, not a satisfactory or safe fix. and libxc is both required and fortran, so I can't just build you a non-fortran psi4. so unless I think of something else, I think you just can't mix fortran dependencies when compiled against a mix of c-f and defaults pinnings. sorry.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-722811014
https://github.com/psi4/psi4/issues/2024#issuecomment-722811014:1012,Safety,safe,safe,1012,"so the environment is solvable on Linux:; ```conda create -n amber ambertools=20.9 python=3.7 blas=*=mkl gau2grid psi4/label/dev::libxc psi4/label/dev::psi4=1.4a2.dev1058 -c conda-forge -c defaults -c psi4/label/dev```. on Mac, I agree that `libgfortran` is the problem. it comes about b/c conda-forge pins on gfortran v4 and defaults on gfortran v3 (then there's various soversions and libgfortran versions, too). once upon a time, the pinning that was applied by run_exports was >3.0.1, but that's been narrowed to >3.0.1,<4.0.0 . there's still some old add-on packages with the former, so if I suppress the libgfortran pinning on psi4 itself (psi4=1.4a2.dev1084 for py37 at https://anaconda.org/psi4/psi4/files), then I can get an environment to solve with it and ambertools=20. of course, then the libgfortran.3.dylib is missing, but if I symlink (!) that to libgfortran.4.dylib, I can get some psi4 test cases to pass (gdma fails to load lib, while some dft is off a bit). altogether, not a satisfactory or safe fix. and libxc is both required and fortran, so I can't just build you a non-fortran psi4. so unless I think of something else, I think you just can't mix fortran dependencies when compiled against a mix of c-f and defaults pinnings. sorry.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-722811014
https://github.com/psi4/psi4/issues/2024#issuecomment-722811014:904,Testability,test,test,904,"so the environment is solvable on Linux:; ```conda create -n amber ambertools=20.9 python=3.7 blas=*=mkl gau2grid psi4/label/dev::libxc psi4/label/dev::psi4=1.4a2.dev1058 -c conda-forge -c defaults -c psi4/label/dev```. on Mac, I agree that `libgfortran` is the problem. it comes about b/c conda-forge pins on gfortran v4 and defaults on gfortran v3 (then there's various soversions and libgfortran versions, too). once upon a time, the pinning that was applied by run_exports was >3.0.1, but that's been narrowed to >3.0.1,<4.0.0 . there's still some old add-on packages with the former, so if I suppress the libgfortran pinning on psi4 itself (psi4=1.4a2.dev1084 for py37 at https://anaconda.org/psi4/psi4/files), then I can get an environment to solve with it and ambertools=20. of course, then the libgfortran.3.dylib is missing, but if I symlink (!) that to libgfortran.4.dylib, I can get some psi4 test cases to pass (gdma fails to load lib, while some dft is off a bit). altogether, not a satisfactory or safe fix. and libxc is both required and fortran, so I can't just build you a non-fortran psi4. so unless I think of something else, I think you just can't mix fortran dependencies when compiled against a mix of c-f and defaults pinnings. sorry.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-722811014
https://github.com/psi4/psi4/issues/2024#issuecomment-723138199:236,Availability,down,downsides,236,"Thanks for the explanation and digging. It's nice that there appears to be a possible path forward. After some tinkering, I don't think symlinking a partially-functional Psi4 build in the middle of a CI run is going to be the worth the downsides. We don't need this urgently, so it may be best to table this for a bit (unless somebody else happens to need it).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-723138199
https://github.com/psi4/psi4/issues/2024#issuecomment-723231235:258,Availability,ping,pinging,258,"I've made a nofortran py37 Mac build accessible through `conda create -n amber3 ambertools=20 blas=*=mkl psi4/label/dev::libxc psi4 -c conda-forge -c psi4/label/nofortran -c psi4/label/dev`. It won't get automatically updated regularly, but I can do so upon pinging. Hopefully this'll do for CI. lmk if a different python preferred.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-723231235
https://github.com/psi4/psi4/issues/2024#issuecomment-723231235:218,Deployability,update,updated,218,"I've made a nofortran py37 Mac build accessible through `conda create -n amber3 ambertools=20 blas=*=mkl psi4/label/dev::libxc psi4 -c conda-forge -c psi4/label/nofortran -c psi4/label/dev`. It won't get automatically updated regularly, but I can do so upon pinging. Hopefully this'll do for CI. lmk if a different python preferred.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-723231235
https://github.com/psi4/psi4/issues/2024#issuecomment-723231235:37,Security,access,accessible,37,"I've made a nofortran py37 Mac build accessible through `conda create -n amber3 ambertools=20 blas=*=mkl psi4/label/dev::libxc psi4 -c conda-forge -c psi4/label/nofortran -c psi4/label/dev`. It won't get automatically updated regularly, but I can do so upon pinging. Hopefully this'll do for CI. lmk if a different python preferred.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-723231235
https://github.com/psi4/psi4/pull/2025#issuecomment-719290805:0,Testability,Test,Tests,0,Tests are in the making ☕ ; I also need to finalize the basis set file.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2025#issuecomment-719290805
https://github.com/psi4/psi4/pull/2027#issuecomment-721901212:27,Performance,optimiz,optimization,27,"I successfully ran a large optimization (CC2, C1, 200GB, 322 bf) and runs fine now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2027#issuecomment-721901212
https://github.com/psi4/psi4/pull/2028#issuecomment-723523530:233,Integrability,rout,routines,233,"I'm reasonably sure there was a reason why that `""f_options"" != False` check was necessary at some point, I just don't remember it right now. As long as all test pass, it should be fine, and I'm guessing DDD will make changes to the routines anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2028#issuecomment-723523530
https://github.com/psi4/psi4/pull/2028#issuecomment-723523530:157,Testability,test,test,157,"I'm reasonably sure there was a reason why that `""f_options"" != False` check was necessary at some point, I just don't remember it right now. As long as all test pass, it should be fine, and I'm guessing DDD will make changes to the routines anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2028#issuecomment-723523530
https://github.com/psi4/psi4/pull/2032#issuecomment-727209151:15,Usability,feedback,feedback,15,"Thanks for the feedback @maxscheurer , @loriab and @susilehtola ! I've tried to make the suggested changes in 3850718.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2032#issuecomment-727209151
https://github.com/psi4/psi4/pull/2034#issuecomment-802792572:5,Testability,test,test,5,Is a test needed or wanted? I didn't find an existing `db` test setup.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2034#issuecomment-802792572
https://github.com/psi4/psi4/pull/2034#issuecomment-802792572:59,Testability,test,test,59,Is a test needed or wanted? I didn't find an existing `db` test setup.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2034#issuecomment-802792572
https://github.com/psi4/psi4/pull/2034#issuecomment-803274548:232,Energy Efficiency,ENERGY,ENERGY,232,"I'd just like to point out that the `""stage""` keyword can be set to anything (not only `""deltan""`), and it's used only to name the stage within the printing script. Perhaps prepending `""CBS {GRAND_NEED[dc]['d_stage'].upper()} TOTAL ENERGY""` might be safer to avoid possible clashing / overwriting of existing energies by the user?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2034#issuecomment-803274548
https://github.com/psi4/psi4/pull/2034#issuecomment-803274548:250,Safety,safe,safer,250,"I'd just like to point out that the `""stage""` keyword can be set to anything (not only `""deltan""`), and it's used only to name the stage within the printing script. Perhaps prepending `""CBS {GRAND_NEED[dc]['d_stage'].upper()} TOTAL ENERGY""` might be safer to avoid possible clashing / overwriting of existing energies by the user?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2034#issuecomment-803274548
https://github.com/psi4/psi4/pull/2034#issuecomment-803274548:259,Safety,avoid,avoid,259,"I'd just like to point out that the `""stage""` keyword can be set to anything (not only `""deltan""`), and it's used only to name the stage within the printing script. Perhaps prepending `""CBS {GRAND_NEED[dc]['d_stage'].upper()} TOTAL ENERGY""` might be safer to avoid possible clashing / overwriting of existing energies by the user?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2034#issuecomment-803274548
https://github.com/psi4/psi4/pull/2037#issuecomment-730873136:54,Usability,learn,learned,54,needs scrutiny by @robertodr and @maxscheurer. I also learned about problems in the course of this that @hokru had already identified.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2037#issuecomment-730873136
https://github.com/psi4/psi4/pull/2037#issuecomment-734703041:58,Deployability,release,release,58,"Thanks Lori, will check your PR ASAP and try to get a new release.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2037#issuecomment-734703041
https://github.com/psi4/psi4/pull/2037#issuecomment-735636351:27,Deployability,release,release,27,this needs a new pcmsolver release and a merge of https://github.com/DEShawResearch/sns-mp2/pull/7,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2037#issuecomment-735636351
https://github.com/psi4/psi4/pull/2037#issuecomment-735641889:29,Deployability,release,release,29,> this needs a new pcmsolver release and a merge of [DEShawResearch/sns-mp2#7](https://github.com/DEShawResearch/sns-mp2/pull/7). The PCMSolver release will most likely happen this evening.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2037#issuecomment-735641889
https://github.com/psi4/psi4/pull/2037#issuecomment-735641889:144,Deployability,release,release,144,> this needs a new pcmsolver release and a merge of [DEShawResearch/sns-mp2#7](https://github.com/DEShawResearch/sns-mp2/pull/7). The PCMSolver release will most likely happen this evening.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2037#issuecomment-735641889
https://github.com/psi4/psi4/pull/2037#issuecomment-736024760:4,Deployability,release,release,4,New release of PCMSolver is up: https://github.com/PCMSolver/pcmsolver/releases/tag/v1.3.0,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2037#issuecomment-736024760
https://github.com/psi4/psi4/pull/2037#issuecomment-736024760:71,Deployability,release,releases,71,New release of PCMSolver is up: https://github.com/PCMSolver/pcmsolver/releases/tag/v1.3.0,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2037#issuecomment-736024760
https://github.com/psi4/psi4/pull/2037#issuecomment-748568654:201,Availability,error,error,201,"This has compatible pcmsolver and snsmp2 versions now, so I'll merge it after CI unless there are concerns. There's still a problem sometimes running pcm by API and in parallel, `npz_save: header read error`, but this PR is still a step in the right direction, as one couldn't run sequential pcm by API before.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2037#issuecomment-748568654
https://github.com/psi4/psi4/pull/2038#issuecomment-730721725:72,Testability,test,test,72,"@JonathonMisiewicz It's a replacement of #1635 . I wanted to be able to test some of the fixes before I made them, and I couldn't remember which conda environment to compile that snapshot of psi with. Closing the old one presently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2038#issuecomment-730721725
https://github.com/psi4/psi4/pull/2039#issuecomment-731606599:289,Deployability,release,released,289,This pull request **introduces 4 alerts** when merging 2c4ec5b6cb0c617c8130b03e375d8525c4134eb0 into 766c1e760db0de3b1e685fa0313cb2f2d6d9b146 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-d46382fbc2f5d7f6061716623d9462a311d08688). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Unused local variable; * 1 for Multiplication result converted to larger type,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2039#issuecomment-731606599
https://github.com/psi4/psi4/pull/2039#issuecomment-731606599:334,Modifiability,variab,variable,334,This pull request **introduces 4 alerts** when merging 2c4ec5b6cb0c617c8130b03e375d8525c4134eb0 into 766c1e760db0de3b1e685fa0313cb2f2d6d9b146 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-d46382fbc2f5d7f6061716623d9462a311d08688). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Unused local variable; * 1 for Multiplication result converted to larger type,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2039#issuecomment-731606599
https://github.com/psi4/psi4/pull/2040#issuecomment-733280957:526,Availability,avail,available,526,"It's sort of hard to follow the code. You should remove all the stuff about charges; the algorithm needs to do the memory estimate based on the actual occupied orbitals. You should separate the Coulomb and exchange bits, since Coulomb can be computed as a dot product, while exchange is a matrix multiplication. Range-separated exchange should be supported. You also can't assume that you can fit all the integrals into memory in a big system; you need to batch over the occupied orbitals based on the amount of memory that's available. . Please check Weigend's paper on how to do RI-HF optimally.; https://pubs.rsc.org/en/content/articlelanding/2002/cp/b204199p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2040#issuecomment-733280957
https://github.com/psi4/psi4/pull/2040#issuecomment-733280957:76,Energy Efficiency,charge,charges,76,"It's sort of hard to follow the code. You should remove all the stuff about charges; the algorithm needs to do the memory estimate based on the actual occupied orbitals. You should separate the Coulomb and exchange bits, since Coulomb can be computed as a dot product, while exchange is a matrix multiplication. Range-separated exchange should be supported. You also can't assume that you can fit all the integrals into memory in a big system; you need to batch over the occupied orbitals based on the amount of memory that's available. . Please check Weigend's paper on how to do RI-HF optimally.; https://pubs.rsc.org/en/content/articlelanding/2002/cp/b204199p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2040#issuecomment-733280957
https://github.com/psi4/psi4/pull/2040#issuecomment-748409140:129,Availability,avail,available,129,"@susilehtola . Regarding your first suggestion about charges, I would like to make that change, however, that information is not available at the time of construction of the JK object. More general changes will need to be made to the codebase for that to be possible. . Separating the Coulomb and Exchange bits in a way that does not require extra AO ERI determination is beyond me. If you have a suggestion as to how to do it, I will consider implementing it in the limited time I have left. Otherwise, I will regard the task as impossible. I'm confused about the perceived assumption that all integrals fit into memory. No such assumption is made. In fact, this code can be seen as an extension of Weigend's work to the case in which they *don't* all fit in memory, and working with the assumption that integrals do *not* fit in memory is the reason for many of the strange choices made in writing this code.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2040#issuecomment-748409140
https://github.com/psi4/psi4/pull/2040#issuecomment-748409140:53,Energy Efficiency,charge,charges,53,"@susilehtola . Regarding your first suggestion about charges, I would like to make that change, however, that information is not available at the time of construction of the JK object. More general changes will need to be made to the codebase for that to be possible. . Separating the Coulomb and Exchange bits in a way that does not require extra AO ERI determination is beyond me. If you have a suggestion as to how to do it, I will consider implementing it in the limited time I have left. Otherwise, I will regard the task as impossible. I'm confused about the perceived assumption that all integrals fit into memory. No such assumption is made. In fact, this code can be seen as an extension of Weigend's work to the case in which they *don't* all fit in memory, and working with the assumption that integrals do *not* fit in memory is the reason for many of the strange choices made in writing this code.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2040#issuecomment-748409140
https://github.com/psi4/psi4/pull/2040#issuecomment-748421237:722,Integrability,message,messages,722,"> I'm confused about the perceived assumption that all integrals fit into memory. No such assumption is made. In fact, this code can be seen as an extension of Weigend's work to the case in which they _don't_ all fit in memory, and working with the assumption that integrals do _not_ fit in memory is the reason for many of the strange choices made in writing this code. @obrien951 My comment originates from the reason that like I said, it's hard to follow the code. There are **no comments** describing what the functions actually do. Also, if you look at when I posted the comment, it was 24 days ago, on the week before Thanksgiving, way before our lengthy discussion on Slack where it took several days and dozens of messages to understand that your algorithm is nothing else but RI-HF as presented by Weigend in the 2002 paper, with only the difference that in case it is not possible to fit even a single orbital vector in memory (the `(ui|A)` intermediates), you do some sort of blocking, but what kind, I do not know. These sorts of unclarities mean there should be a short, general description of what the code does in the header file. If it's RI-HF à la Weigend, a reference to the paper and a brief description on the differences is enough. At the moment, the function names are opaque. Some functions have unintelligible descriptions like `// Line 7 algorithm 8` (line and algorithm of what?!) and there are dozens of functions that don't have any kind of description.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2040#issuecomment-748421237
https://github.com/psi4/psi4/pull/2040#issuecomment-748422549:368,Availability,avail,available,368,"@susilehtola Apologies for missing the date on those remarks. For some reason I thought I saw them after your remark about annoying code. The blocking is honestly difficult to describe in comments. I will try to provide an illustration in the code, but the best remedy would be for someone trying to work on the code to consult my thesis which I will make more widely available. As for your last point about clarity of operations in the code, that can be fixed. The code was written a while ago, and there was a set of notes that went along with the code that is no longer useful. Comments that are more relevant will be added.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2040#issuecomment-748422549
https://github.com/psi4/psi4/issues/2041#issuecomment-734970689:104,Availability,ping,ping,104,"Yeah, MBIS radial moments (along with a few other properties) are already in the works. I'll be sure to ping @djcole56 when it's done.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2041#issuecomment-734970689
https://github.com/psi4/psi4/pull/2043#issuecomment-736708921:761,Deployability,update,update,761,"thanks for the new functionality!. it looks like the git history has gotten tangled so that there are non-you commits and some of your commits are multiples. (the most likely cause is you rebased to upstream, then pulled and pushed to your branch, rather than rebasing to upstream, then force pushing to your branch.) unless you care about the development history, I recommend checking out a new branch from hyperpolar_CCSD, then `git reset` (mixed, the default) back to before any of your commits, then add back everything (yours and others') and make a single commit. then rebase, which should filter out all the work by others so your commit ends up with only your work. then make a new PR (or `git push origin hyperpolar_CCSD_rb:hyperpolar_CCSD --force` to update this PR).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2043#issuecomment-736708921
https://github.com/psi4/psi4/pull/2043#issuecomment-740234595:92,Availability,ping,ping,92,"The git history is still a concern. If it's WIP, fine, but if you're having trouble, please ping me on slack.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2043#issuecomment-740234595
https://github.com/psi4/psi4/pull/2043#issuecomment-742693014:94,Availability,ping,ping,94,"> The git history is still a concern. If it's WIP, fine, but if you're having trouble, please ping me on slack. Thanks. Yes, I'm still working on the project. Though I fixed the git history.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2043#issuecomment-742693014
https://github.com/psi4/psi4/pull/2044#issuecomment-737505178:232,Integrability,rout,routines,232,"Adding breaking calls to exceptions, I suspect the proper `build/build_becke/build_treutler` functions are never called?!; At this point I don't know either what is going on. The file is too long and confusing, including the `hack` routines that survived.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2044#issuecomment-737505178
https://github.com/psi4/psi4/pull/2044#issuecomment-745602400:568,Availability,down,downside,568,"**user summary**:; This is not a bug that is affecting any DFT calculations currently run with PSI4.; The bug is found in unused code. ---. The radial grid is entirely build with https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/cubature.cc#L2433. The function supposed to call `build_becke` `build_treutler` is never called, instead a dummy function is called that only populates the `RadialGrid` class, which is never used in `cubature.cc` anyway (looks like it is nowhere used). . On the plus side, the bug fixed with this PR is never encountered. The downside is that the TREUTLER scheme is not entirely correct because at least the eta mapping parameters (`TreutlerEta`) are missing. If `build_treutler` is correct or not, I cannot 100% say. In a quick & dirty fashion I enforced it. _Without_ eta (set to 1.0) all DFT `ctests` pass. That's good!; I added the missing eta parameters with updated BS radii a while ago, but didn't notice that the etas changed nothing. I thought the effect was just too small. But there is a very minor one. Including the etas has 11 of 37 tests fail. (Did not run the pytests). I will refactor `cubature.cc` ..somehow.. in the near future. ---. I will approve & merge tomorrow.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2044#issuecomment-745602400
https://github.com/psi4/psi4/pull/2044#issuecomment-745602400:906,Deployability,update,updated,906,"**user summary**:; This is not a bug that is affecting any DFT calculations currently run with PSI4.; The bug is found in unused code. ---. The radial grid is entirely build with https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/cubature.cc#L2433. The function supposed to call `build_becke` `build_treutler` is never called, instead a dummy function is called that only populates the `RadialGrid` class, which is never used in `cubature.cc` anyway (looks like it is nowhere used). . On the plus side, the bug fixed with this PR is never encountered. The downside is that the TREUTLER scheme is not entirely correct because at least the eta mapping parameters (`TreutlerEta`) are missing. If `build_treutler` is correct or not, I cannot 100% say. In a quick & dirty fashion I enforced it. _Without_ eta (set to 1.0) all DFT `ctests` pass. That's good!; I added the missing eta parameters with updated BS radii a while ago, but didn't notice that the etas changed nothing. I thought the effect was just too small. But there is a very minor one. Including the etas has 11 of 37 tests fail. (Did not run the pytests). I will refactor `cubature.cc` ..somehow.. in the near future. ---. I will approve & merge tomorrow.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2044#issuecomment-745602400
https://github.com/psi4/psi4/pull/2044#issuecomment-745602400:1135,Modifiability,refactor,refactor,1135,"**user summary**:; This is not a bug that is affecting any DFT calculations currently run with PSI4.; The bug is found in unused code. ---. The radial grid is entirely build with https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/cubature.cc#L2433. The function supposed to call `build_becke` `build_treutler` is never called, instead a dummy function is called that only populates the `RadialGrid` class, which is never used in `cubature.cc` anyway (looks like it is nowhere used). . On the plus side, the bug fixed with this PR is never encountered. The downside is that the TREUTLER scheme is not entirely correct because at least the eta mapping parameters (`TreutlerEta`) are missing. If `build_treutler` is correct or not, I cannot 100% say. In a quick & dirty fashion I enforced it. _Without_ eta (set to 1.0) all DFT `ctests` pass. That's good!; I added the missing eta parameters with updated BS radii a while ago, but didn't notice that the etas changed nothing. I thought the effect was just too small. But there is a very minor one. Including the etas has 11 of 37 tests fail. (Did not run the pytests). I will refactor `cubature.cc` ..somehow.. in the near future. ---. I will approve & merge tomorrow.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2044#issuecomment-745602400
https://github.com/psi4/psi4/pull/2044#issuecomment-745602400:1089,Testability,test,tests,1089,"**user summary**:; This is not a bug that is affecting any DFT calculations currently run with PSI4.; The bug is found in unused code. ---. The radial grid is entirely build with https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/cubature.cc#L2433. The function supposed to call `build_becke` `build_treutler` is never called, instead a dummy function is called that only populates the `RadialGrid` class, which is never used in `cubature.cc` anyway (looks like it is nowhere used). . On the plus side, the bug fixed with this PR is never encountered. The downside is that the TREUTLER scheme is not entirely correct because at least the eta mapping parameters (`TreutlerEta`) are missing. If `build_treutler` is correct or not, I cannot 100% say. In a quick & dirty fashion I enforced it. _Without_ eta (set to 1.0) all DFT `ctests` pass. That's good!; I added the missing eta parameters with updated BS radii a while ago, but didn't notice that the etas changed nothing. I thought the effect was just too small. But there is a very minor one. Including the etas has 11 of 37 tests fail. (Did not run the pytests). I will refactor `cubature.cc` ..somehow.. in the near future. ---. I will approve & merge tomorrow.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2044#issuecomment-745602400
https://github.com/psi4/psi4/issues/2046#issuecomment-737386125:193,Deployability,install,installed,193,"> The addition of libint2 causes Psi4 to not build. Libint2 is trying to compile the hartree-fock++ test, which depends on Eigen3, which it is not finding for some reason even though I have it installed as a system package. Are you using the latest psi4-dev package (.dev22)? That adds the `mpfr` and `eigen` deps to the build environment. I definitely acknowledge that the `Libint2Config.cmake` is not handling `find_dependency` right for eigen and mpfr (really, gmp) yet. I do have cmake edits for those locally, but I have not yet bent cmake to my will. So having the conda packages in place patches the problem. Does your system package have a `Eigen3Config.cmake`? Maybe expand CMAKE_MODULE_PATH?. > Libint2 tests should be disabled in the Psi4 build, or the Eigen3 dependency added so that the build works even in the lack of a system package. All of Psi4 master is now running Libint2 -- any references to Libint1 or Libint1_t (a hack to allow both to coexist) are only waiting for removal. > (Note: libint2 is also suffering from the -march issue; the libint2 CMake files need to be updated.). Thanks for the reminder. I've just edited it locally.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737386125
https://github.com/psi4/psi4/issues/2046#issuecomment-737386125:595,Deployability,patch,patches,595,"> The addition of libint2 causes Psi4 to not build. Libint2 is trying to compile the hartree-fock++ test, which depends on Eigen3, which it is not finding for some reason even though I have it installed as a system package. Are you using the latest psi4-dev package (.dev22)? That adds the `mpfr` and `eigen` deps to the build environment. I definitely acknowledge that the `Libint2Config.cmake` is not handling `find_dependency` right for eigen and mpfr (really, gmp) yet. I do have cmake edits for those locally, but I have not yet bent cmake to my will. So having the conda packages in place patches the problem. Does your system package have a `Eigen3Config.cmake`? Maybe expand CMAKE_MODULE_PATH?. > Libint2 tests should be disabled in the Psi4 build, or the Eigen3 dependency added so that the build works even in the lack of a system package. All of Psi4 master is now running Libint2 -- any references to Libint1 or Libint1_t (a hack to allow both to coexist) are only waiting for removal. > (Note: libint2 is also suffering from the -march issue; the libint2 CMake files need to be updated.). Thanks for the reminder. I've just edited it locally.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737386125
https://github.com/psi4/psi4/issues/2046#issuecomment-737386125:1091,Deployability,update,updated,1091,"> The addition of libint2 causes Psi4 to not build. Libint2 is trying to compile the hartree-fock++ test, which depends on Eigen3, which it is not finding for some reason even though I have it installed as a system package. Are you using the latest psi4-dev package (.dev22)? That adds the `mpfr` and `eigen` deps to the build environment. I definitely acknowledge that the `Libint2Config.cmake` is not handling `find_dependency` right for eigen and mpfr (really, gmp) yet. I do have cmake edits for those locally, but I have not yet bent cmake to my will. So having the conda packages in place patches the problem. Does your system package have a `Eigen3Config.cmake`? Maybe expand CMAKE_MODULE_PATH?. > Libint2 tests should be disabled in the Psi4 build, or the Eigen3 dependency added so that the build works even in the lack of a system package. All of Psi4 master is now running Libint2 -- any references to Libint1 or Libint1_t (a hack to allow both to coexist) are only waiting for removal. > (Note: libint2 is also suffering from the -march issue; the libint2 CMake files need to be updated.). Thanks for the reminder. I've just edited it locally.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737386125
https://github.com/psi4/psi4/issues/2046#issuecomment-737386125:112,Integrability,depend,depends,112,"> The addition of libint2 causes Psi4 to not build. Libint2 is trying to compile the hartree-fock++ test, which depends on Eigen3, which it is not finding for some reason even though I have it installed as a system package. Are you using the latest psi4-dev package (.dev22)? That adds the `mpfr` and `eigen` deps to the build environment. I definitely acknowledge that the `Libint2Config.cmake` is not handling `find_dependency` right for eigen and mpfr (really, gmp) yet. I do have cmake edits for those locally, but I have not yet bent cmake to my will. So having the conda packages in place patches the problem. Does your system package have a `Eigen3Config.cmake`? Maybe expand CMAKE_MODULE_PATH?. > Libint2 tests should be disabled in the Psi4 build, or the Eigen3 dependency added so that the build works even in the lack of a system package. All of Psi4 master is now running Libint2 -- any references to Libint1 or Libint1_t (a hack to allow both to coexist) are only waiting for removal. > (Note: libint2 is also suffering from the -march issue; the libint2 CMake files need to be updated.). Thanks for the reminder. I've just edited it locally.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737386125
https://github.com/psi4/psi4/issues/2046#issuecomment-737386125:771,Integrability,depend,dependency,771,"> The addition of libint2 causes Psi4 to not build. Libint2 is trying to compile the hartree-fock++ test, which depends on Eigen3, which it is not finding for some reason even though I have it installed as a system package. Are you using the latest psi4-dev package (.dev22)? That adds the `mpfr` and `eigen` deps to the build environment. I definitely acknowledge that the `Libint2Config.cmake` is not handling `find_dependency` right for eigen and mpfr (really, gmp) yet. I do have cmake edits for those locally, but I have not yet bent cmake to my will. So having the conda packages in place patches the problem. Does your system package have a `Eigen3Config.cmake`? Maybe expand CMAKE_MODULE_PATH?. > Libint2 tests should be disabled in the Psi4 build, or the Eigen3 dependency added so that the build works even in the lack of a system package. All of Psi4 master is now running Libint2 -- any references to Libint1 or Libint1_t (a hack to allow both to coexist) are only waiting for removal. > (Note: libint2 is also suffering from the -march issue; the libint2 CMake files need to be updated.). Thanks for the reminder. I've just edited it locally.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737386125
https://github.com/psi4/psi4/issues/2046#issuecomment-737386125:100,Testability,test,test,100,"> The addition of libint2 causes Psi4 to not build. Libint2 is trying to compile the hartree-fock++ test, which depends on Eigen3, which it is not finding for some reason even though I have it installed as a system package. Are you using the latest psi4-dev package (.dev22)? That adds the `mpfr` and `eigen` deps to the build environment. I definitely acknowledge that the `Libint2Config.cmake` is not handling `find_dependency` right for eigen and mpfr (really, gmp) yet. I do have cmake edits for those locally, but I have not yet bent cmake to my will. So having the conda packages in place patches the problem. Does your system package have a `Eigen3Config.cmake`? Maybe expand CMAKE_MODULE_PATH?. > Libint2 tests should be disabled in the Psi4 build, or the Eigen3 dependency added so that the build works even in the lack of a system package. All of Psi4 master is now running Libint2 -- any references to Libint1 or Libint1_t (a hack to allow both to coexist) are only waiting for removal. > (Note: libint2 is also suffering from the -march issue; the libint2 CMake files need to be updated.). Thanks for the reminder. I've just edited it locally.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737386125
https://github.com/psi4/psi4/issues/2046#issuecomment-737386125:713,Testability,test,tests,713,"> The addition of libint2 causes Psi4 to not build. Libint2 is trying to compile the hartree-fock++ test, which depends on Eigen3, which it is not finding for some reason even though I have it installed as a system package. Are you using the latest psi4-dev package (.dev22)? That adds the `mpfr` and `eigen` deps to the build environment. I definitely acknowledge that the `Libint2Config.cmake` is not handling `find_dependency` right for eigen and mpfr (really, gmp) yet. I do have cmake edits for those locally, but I have not yet bent cmake to my will. So having the conda packages in place patches the problem. Does your system package have a `Eigen3Config.cmake`? Maybe expand CMAKE_MODULE_PATH?. > Libint2 tests should be disabled in the Psi4 build, or the Eigen3 dependency added so that the build works even in the lack of a system package. All of Psi4 master is now running Libint2 -- any references to Libint1 or Libint1_t (a hack to allow both to coexist) are only waiting for removal. > (Note: libint2 is also suffering from the -march issue; the libint2 CMake files need to be updated.). Thanks for the reminder. I've just edited it locally.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737386125
https://github.com/psi4/psi4/issues/2046#issuecomment-737400507:210,Deployability,configurat,configuration,210,"> I am using the latest git snapshot of the master branch. gtk. [this](https://anaconda.org/psi4/psi4-dev/files) is what I was talking about. It hides dependency tracking from many psi builders and seeds cmake configuration. I was hoping that could carry most builds until FindMPFR called by Libint2Config and I come to terms. Are you building libint2 through psi or using the libint2 conda-package or detecting other pre-built (will need to silence find_apckage(... components) in that case)? For now, I'd add `find_package(eigen)` and hack cmake_module_path as needed. And this should stay open until I get it patched correctly upstream. ```; ambit >=0.5.1,<0.6.0a0, chemps2 >=1.8.9,<1.8.10.0a0, cmake >=3.8, dkh >=1.2,<1.3.0a0, eigen, gau2grid >=2.0.3,<3.0a0, gcc_linux-64 7.*, gdma >=2.2.6,<2.2.7.0a0, gfortran_linux-64 7.*, gxx_linux-64 7.*, hdf5 >=1.10.6,<1.10.7.0a0, libint2 2.6.0 hc9558a2_9, libxc >=4.3.4,<5.0a0, mkl-devel 2019.*, mpfr, msgpack-python, networkx >=2.4, numpy >=0.12.0, pcmsolver >=1.2.1,<1.2.2.0a0, pybind11-headers >=2.5.0,<2.6.0a0, pytest, pytest-xdist, python >=3.8,<3.9.0a0, qcelemental >=0.17.0,<1.0, qcengine >=0.17.0,<1.0, simint >=0.7,<0.8.0a0; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737400507
https://github.com/psi4/psi4/issues/2046#issuecomment-737400507:612,Deployability,patch,patched,612,"> I am using the latest git snapshot of the master branch. gtk. [this](https://anaconda.org/psi4/psi4-dev/files) is what I was talking about. It hides dependency tracking from many psi builders and seeds cmake configuration. I was hoping that could carry most builds until FindMPFR called by Libint2Config and I come to terms. Are you building libint2 through psi or using the libint2 conda-package or detecting other pre-built (will need to silence find_apckage(... components) in that case)? For now, I'd add `find_package(eigen)` and hack cmake_module_path as needed. And this should stay open until I get it patched correctly upstream. ```; ambit >=0.5.1,<0.6.0a0, chemps2 >=1.8.9,<1.8.10.0a0, cmake >=3.8, dkh >=1.2,<1.3.0a0, eigen, gau2grid >=2.0.3,<3.0a0, gcc_linux-64 7.*, gdma >=2.2.6,<2.2.7.0a0, gfortran_linux-64 7.*, gxx_linux-64 7.*, hdf5 >=1.10.6,<1.10.7.0a0, libint2 2.6.0 hc9558a2_9, libxc >=4.3.4,<5.0a0, mkl-devel 2019.*, mpfr, msgpack-python, networkx >=2.4, numpy >=0.12.0, pcmsolver >=1.2.1,<1.2.2.0a0, pybind11-headers >=2.5.0,<2.6.0a0, pytest, pytest-xdist, python >=3.8,<3.9.0a0, qcelemental >=0.17.0,<1.0, qcengine >=0.17.0,<1.0, simint >=0.7,<0.8.0a0; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737400507
https://github.com/psi4/psi4/issues/2046#issuecomment-737400507:151,Integrability,depend,dependency,151,"> I am using the latest git snapshot of the master branch. gtk. [this](https://anaconda.org/psi4/psi4-dev/files) is what I was talking about. It hides dependency tracking from many psi builders and seeds cmake configuration. I was hoping that could carry most builds until FindMPFR called by Libint2Config and I come to terms. Are you building libint2 through psi or using the libint2 conda-package or detecting other pre-built (will need to silence find_apckage(... components) in that case)? For now, I'd add `find_package(eigen)` and hack cmake_module_path as needed. And this should stay open until I get it patched correctly upstream. ```; ambit >=0.5.1,<0.6.0a0, chemps2 >=1.8.9,<1.8.10.0a0, cmake >=3.8, dkh >=1.2,<1.3.0a0, eigen, gau2grid >=2.0.3,<3.0a0, gcc_linux-64 7.*, gdma >=2.2.6,<2.2.7.0a0, gfortran_linux-64 7.*, gxx_linux-64 7.*, hdf5 >=1.10.6,<1.10.7.0a0, libint2 2.6.0 hc9558a2_9, libxc >=4.3.4,<5.0a0, mkl-devel 2019.*, mpfr, msgpack-python, networkx >=2.4, numpy >=0.12.0, pcmsolver >=1.2.1,<1.2.2.0a0, pybind11-headers >=2.5.0,<2.6.0a0, pytest, pytest-xdist, python >=3.8,<3.9.0a0, qcelemental >=0.17.0,<1.0, qcengine >=0.17.0,<1.0, simint >=0.7,<0.8.0a0; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737400507
https://github.com/psi4/psi4/issues/2046#issuecomment-737400507:210,Modifiability,config,configuration,210,"> I am using the latest git snapshot of the master branch. gtk. [this](https://anaconda.org/psi4/psi4-dev/files) is what I was talking about. It hides dependency tracking from many psi builders and seeds cmake configuration. I was hoping that could carry most builds until FindMPFR called by Libint2Config and I come to terms. Are you building libint2 through psi or using the libint2 conda-package or detecting other pre-built (will need to silence find_apckage(... components) in that case)? For now, I'd add `find_package(eigen)` and hack cmake_module_path as needed. And this should stay open until I get it patched correctly upstream. ```; ambit >=0.5.1,<0.6.0a0, chemps2 >=1.8.9,<1.8.10.0a0, cmake >=3.8, dkh >=1.2,<1.3.0a0, eigen, gau2grid >=2.0.3,<3.0a0, gcc_linux-64 7.*, gdma >=2.2.6,<2.2.7.0a0, gfortran_linux-64 7.*, gxx_linux-64 7.*, hdf5 >=1.10.6,<1.10.7.0a0, libint2 2.6.0 hc9558a2_9, libxc >=4.3.4,<5.0a0, mkl-devel 2019.*, mpfr, msgpack-python, networkx >=2.4, numpy >=0.12.0, pcmsolver >=1.2.1,<1.2.2.0a0, pybind11-headers >=2.5.0,<2.6.0a0, pytest, pytest-xdist, python >=3.8,<3.9.0a0, qcelemental >=0.17.0,<1.0, qcengine >=0.17.0,<1.0, simint >=0.7,<0.8.0a0; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737400507
https://github.com/psi4/psi4/issues/2046#issuecomment-737400507:402,Safety,detect,detecting,402,"> I am using the latest git snapshot of the master branch. gtk. [this](https://anaconda.org/psi4/psi4-dev/files) is what I was talking about. It hides dependency tracking from many psi builders and seeds cmake configuration. I was hoping that could carry most builds until FindMPFR called by Libint2Config and I come to terms. Are you building libint2 through psi or using the libint2 conda-package or detecting other pre-built (will need to silence find_apckage(... components) in that case)? For now, I'd add `find_package(eigen)` and hack cmake_module_path as needed. And this should stay open until I get it patched correctly upstream. ```; ambit >=0.5.1,<0.6.0a0, chemps2 >=1.8.9,<1.8.10.0a0, cmake >=3.8, dkh >=1.2,<1.3.0a0, eigen, gau2grid >=2.0.3,<3.0a0, gcc_linux-64 7.*, gdma >=2.2.6,<2.2.7.0a0, gfortran_linux-64 7.*, gxx_linux-64 7.*, hdf5 >=1.10.6,<1.10.7.0a0, libint2 2.6.0 hc9558a2_9, libxc >=4.3.4,<5.0a0, mkl-devel 2019.*, mpfr, msgpack-python, networkx >=2.4, numpy >=0.12.0, pcmsolver >=1.2.1,<1.2.2.0a0, pybind11-headers >=2.5.0,<2.6.0a0, pytest, pytest-xdist, python >=3.8,<3.9.0a0, qcelemental >=0.17.0,<1.0, qcengine >=0.17.0,<1.0, simint >=0.7,<0.8.0a0; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737400507
https://github.com/psi4/psi4/issues/2046#issuecomment-737416449:52,Availability,error,error,52,"I'm building Libint2 via Psi4; I wouldn't have this error otherwise ;). I'm waiting on Ed to release a stable updated version of Libint2, so that I can package it in Fedora.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737416449
https://github.com/psi4/psi4/issues/2046#issuecomment-737416449:93,Deployability,release,release,93,"I'm building Libint2 via Psi4; I wouldn't have this error otherwise ;). I'm waiting on Ed to release a stable updated version of Libint2, so that I can package it in Fedora.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737416449
https://github.com/psi4/psi4/issues/2046#issuecomment-737416449:110,Deployability,update,updated,110,"I'm building Libint2 via Psi4; I wouldn't have this error otherwise ;). I'm waiting on Ed to release a stable updated version of Libint2, so that I can package it in Fedora.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737416449
https://github.com/psi4/psi4/issues/2046#issuecomment-737442203:54,Availability,error,error,54,"> I'm building Libint2 via Psi4; I wouldn't have this error otherwise ;). The hartree-fock++ test case won't happen, but the eigen3 detection can still be a problem even with pre-built because the l2 c++ interface needs it to compile p4 against. > I'm waiting on Ed to release a stable updated version of Libint2, so that I can package it in Fedora. I've seen some clues that he's waiting on this. I need to get the mpfr and eigen3 detection fixed before I can start ready-to-merge negotiations. Also, I don't know if EFV is planning the sph-ordering-as-runtime-option for the 2.7 release so that psi can use the Fedora distribution.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737442203
https://github.com/psi4/psi4/issues/2046#issuecomment-737442203:269,Deployability,release,release,269,"> I'm building Libint2 via Psi4; I wouldn't have this error otherwise ;). The hartree-fock++ test case won't happen, but the eigen3 detection can still be a problem even with pre-built because the l2 c++ interface needs it to compile p4 against. > I'm waiting on Ed to release a stable updated version of Libint2, so that I can package it in Fedora. I've seen some clues that he's waiting on this. I need to get the mpfr and eigen3 detection fixed before I can start ready-to-merge negotiations. Also, I don't know if EFV is planning the sph-ordering-as-runtime-option for the 2.7 release so that psi can use the Fedora distribution.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737442203
https://github.com/psi4/psi4/issues/2046#issuecomment-737442203:286,Deployability,update,updated,286,"> I'm building Libint2 via Psi4; I wouldn't have this error otherwise ;). The hartree-fock++ test case won't happen, but the eigen3 detection can still be a problem even with pre-built because the l2 c++ interface needs it to compile p4 against. > I'm waiting on Ed to release a stable updated version of Libint2, so that I can package it in Fedora. I've seen some clues that he's waiting on this. I need to get the mpfr and eigen3 detection fixed before I can start ready-to-merge negotiations. Also, I don't know if EFV is planning the sph-ordering-as-runtime-option for the 2.7 release so that psi can use the Fedora distribution.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737442203
https://github.com/psi4/psi4/issues/2046#issuecomment-737442203:581,Deployability,release,release,581,"> I'm building Libint2 via Psi4; I wouldn't have this error otherwise ;). The hartree-fock++ test case won't happen, but the eigen3 detection can still be a problem even with pre-built because the l2 c++ interface needs it to compile p4 against. > I'm waiting on Ed to release a stable updated version of Libint2, so that I can package it in Fedora. I've seen some clues that he's waiting on this. I need to get the mpfr and eigen3 detection fixed before I can start ready-to-merge negotiations. Also, I don't know if EFV is planning the sph-ordering-as-runtime-option for the 2.7 release so that psi can use the Fedora distribution.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737442203
https://github.com/psi4/psi4/issues/2046#issuecomment-737442203:204,Integrability,interface,interface,204,"> I'm building Libint2 via Psi4; I wouldn't have this error otherwise ;). The hartree-fock++ test case won't happen, but the eigen3 detection can still be a problem even with pre-built because the l2 c++ interface needs it to compile p4 against. > I'm waiting on Ed to release a stable updated version of Libint2, so that I can package it in Fedora. I've seen some clues that he's waiting on this. I need to get the mpfr and eigen3 detection fixed before I can start ready-to-merge negotiations. Also, I don't know if EFV is planning the sph-ordering-as-runtime-option for the 2.7 release so that psi can use the Fedora distribution.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737442203
https://github.com/psi4/psi4/issues/2046#issuecomment-737442203:132,Safety,detect,detection,132,"> I'm building Libint2 via Psi4; I wouldn't have this error otherwise ;). The hartree-fock++ test case won't happen, but the eigen3 detection can still be a problem even with pre-built because the l2 c++ interface needs it to compile p4 against. > I'm waiting on Ed to release a stable updated version of Libint2, so that I can package it in Fedora. I've seen some clues that he's waiting on this. I need to get the mpfr and eigen3 detection fixed before I can start ready-to-merge negotiations. Also, I don't know if EFV is planning the sph-ordering-as-runtime-option for the 2.7 release so that psi can use the Fedora distribution.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737442203
https://github.com/psi4/psi4/issues/2046#issuecomment-737442203:432,Safety,detect,detection,432,"> I'm building Libint2 via Psi4; I wouldn't have this error otherwise ;). The hartree-fock++ test case won't happen, but the eigen3 detection can still be a problem even with pre-built because the l2 c++ interface needs it to compile p4 against. > I'm waiting on Ed to release a stable updated version of Libint2, so that I can package it in Fedora. I've seen some clues that he's waiting on this. I need to get the mpfr and eigen3 detection fixed before I can start ready-to-merge negotiations. Also, I don't know if EFV is planning the sph-ordering-as-runtime-option for the 2.7 release so that psi can use the Fedora distribution.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737442203
https://github.com/psi4/psi4/issues/2046#issuecomment-737442203:93,Testability,test,test,93,"> I'm building Libint2 via Psi4; I wouldn't have this error otherwise ;). The hartree-fock++ test case won't happen, but the eigen3 detection can still be a problem even with pre-built because the l2 c++ interface needs it to compile p4 against. > I'm waiting on Ed to release a stable updated version of Libint2, so that I can package it in Fedora. I've seen some clues that he's waiting on this. I need to get the mpfr and eigen3 detection fixed before I can start ready-to-merge negotiations. Also, I don't know if EFV is planning the sph-ordering-as-runtime-option for the 2.7 release so that psi can use the Fedora distribution.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737442203
https://github.com/psi4/psi4/issues/2046#issuecomment-815133710:92,Deployability,release,release,92,"Moved to 1.5 per discussion on conference call. It's not worth the further delay to the 1.4 release, given that most users will get Psi from conda.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-815133710
https://github.com/psi4/psi4/issues/2046#issuecomment-1077930064:316,Deployability,INSTALL,INSTALL,316,"The switch to 2022 CMake fork of Libint2 in #2413 should have healed this issue, as it has better dependency handling and demands fewer dependencies. Try it out when you get a chance, please. You may find this dependency table helpful: https://github.com/evaleev/libint/blob/9f12ee61e1ce52420fe3020712c3584cb3e9a1b4/INSTALL.md#prerequisites",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-1077930064
https://github.com/psi4/psi4/issues/2046#issuecomment-1077930064:98,Integrability,depend,dependency,98,"The switch to 2022 CMake fork of Libint2 in #2413 should have healed this issue, as it has better dependency handling and demands fewer dependencies. Try it out when you get a chance, please. You may find this dependency table helpful: https://github.com/evaleev/libint/blob/9f12ee61e1ce52420fe3020712c3584cb3e9a1b4/INSTALL.md#prerequisites",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-1077930064
https://github.com/psi4/psi4/issues/2046#issuecomment-1077930064:136,Integrability,depend,dependencies,136,"The switch to 2022 CMake fork of Libint2 in #2413 should have healed this issue, as it has better dependency handling and demands fewer dependencies. Try it out when you get a chance, please. You may find this dependency table helpful: https://github.com/evaleev/libint/blob/9f12ee61e1ce52420fe3020712c3584cb3e9a1b4/INSTALL.md#prerequisites",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-1077930064
https://github.com/psi4/psi4/issues/2046#issuecomment-1077930064:210,Integrability,depend,dependency,210,"The switch to 2022 CMake fork of Libint2 in #2413 should have healed this issue, as it has better dependency handling and demands fewer dependencies. Try it out when you get a chance, please. You may find this dependency table helpful: https://github.com/evaleev/libint/blob/9f12ee61e1ce52420fe3020712c3584cb3e9a1b4/INSTALL.md#prerequisites",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-1077930064
https://github.com/psi4/psi4/pull/2048#issuecomment-761829181:143,Deployability,update,updated,143,"> I see no problem in bumping to CMake 3.15+: it's quite easy to get a recent version of CMake. I don't either, for users. Anyone successfully updated cmake on lgtm?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-761829181
https://github.com/psi4/psi4/pull/2048#issuecomment-764963688:48,Availability,down,down,48,"> Wow, a lot of PYTHON->Python for you to track down there. Is that syntax change a recent thing? LGTM!. I guess long, long ago, cmake's native python's detection had no notion of finding matching interpreter/library pairs. That reported its results as `PYTHON_FOUND` and friends. Hence numpy/pb11/us used the `FindPythonLibsNew` module that had mixed c++/py in mind and also reported as `PYTHON_*`. But the cmake native detection has been much revamped, reformed, and componentized, enough to [inspire pybind11 to switch over](https://github.com/pybind/pybind11/pull/2370/files). The new setup reports as `Python_*`. The long time it's taken to get cmake's new detection modules hammered out leads to the big jump to 3.15. There may still be plugin and docs build follow-up items, but I think I've caught most of the `Python`s. Main thing ppl have to do is edit their setup scripts if they're hinting the `PYTHON_EXECUTABLE`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-764963688
https://github.com/psi4/psi4/pull/2048#issuecomment-764963688:743,Modifiability,plugin,plugin,743,"> Wow, a lot of PYTHON->Python for you to track down there. Is that syntax change a recent thing? LGTM!. I guess long, long ago, cmake's native python's detection had no notion of finding matching interpreter/library pairs. That reported its results as `PYTHON_FOUND` and friends. Hence numpy/pb11/us used the `FindPythonLibsNew` module that had mixed c++/py in mind and also reported as `PYTHON_*`. But the cmake native detection has been much revamped, reformed, and componentized, enough to [inspire pybind11 to switch over](https://github.com/pybind/pybind11/pull/2370/files). The new setup reports as `Python_*`. The long time it's taken to get cmake's new detection modules hammered out leads to the big jump to 3.15. There may still be plugin and docs build follow-up items, but I think I've caught most of the `Python`s. Main thing ppl have to do is edit their setup scripts if they're hinting the `PYTHON_EXECUTABLE`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-764963688
https://github.com/psi4/psi4/pull/2048#issuecomment-764963688:153,Safety,detect,detection,153,"> Wow, a lot of PYTHON->Python for you to track down there. Is that syntax change a recent thing? LGTM!. I guess long, long ago, cmake's native python's detection had no notion of finding matching interpreter/library pairs. That reported its results as `PYTHON_FOUND` and friends. Hence numpy/pb11/us used the `FindPythonLibsNew` module that had mixed c++/py in mind and also reported as `PYTHON_*`. But the cmake native detection has been much revamped, reformed, and componentized, enough to [inspire pybind11 to switch over](https://github.com/pybind/pybind11/pull/2370/files). The new setup reports as `Python_*`. The long time it's taken to get cmake's new detection modules hammered out leads to the big jump to 3.15. There may still be plugin and docs build follow-up items, but I think I've caught most of the `Python`s. Main thing ppl have to do is edit their setup scripts if they're hinting the `PYTHON_EXECUTABLE`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-764963688
https://github.com/psi4/psi4/pull/2048#issuecomment-764963688:421,Safety,detect,detection,421,"> Wow, a lot of PYTHON->Python for you to track down there. Is that syntax change a recent thing? LGTM!. I guess long, long ago, cmake's native python's detection had no notion of finding matching interpreter/library pairs. That reported its results as `PYTHON_FOUND` and friends. Hence numpy/pb11/us used the `FindPythonLibsNew` module that had mixed c++/py in mind and also reported as `PYTHON_*`. But the cmake native detection has been much revamped, reformed, and componentized, enough to [inspire pybind11 to switch over](https://github.com/pybind/pybind11/pull/2370/files). The new setup reports as `Python_*`. The long time it's taken to get cmake's new detection modules hammered out leads to the big jump to 3.15. There may still be plugin and docs build follow-up items, but I think I've caught most of the `Python`s. Main thing ppl have to do is edit their setup scripts if they're hinting the `PYTHON_EXECUTABLE`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-764963688
https://github.com/psi4/psi4/pull/2048#issuecomment-764963688:662,Safety,detect,detection,662,"> Wow, a lot of PYTHON->Python for you to track down there. Is that syntax change a recent thing? LGTM!. I guess long, long ago, cmake's native python's detection had no notion of finding matching interpreter/library pairs. That reported its results as `PYTHON_FOUND` and friends. Hence numpy/pb11/us used the `FindPythonLibsNew` module that had mixed c++/py in mind and also reported as `PYTHON_*`. But the cmake native detection has been much revamped, reformed, and componentized, enough to [inspire pybind11 to switch over](https://github.com/pybind/pybind11/pull/2370/files). The new setup reports as `Python_*`. The long time it's taken to get cmake's new detection modules hammered out leads to the big jump to 3.15. There may still be plugin and docs build follow-up items, but I think I've caught most of the `Python`s. Main thing ppl have to do is edit their setup scripts if they're hinting the `PYTHON_EXECUTABLE`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-764963688
https://github.com/psi4/psi4/pull/2048#issuecomment-771213188:1333,Availability,down,down,1333,"python.so` into psi4's `core.*.so` -- this is new in the revamped pb11 add_pybind11_module that calls [Python_add_library](https://gitlab.kitware.com/cmake/cmake/-/blob/master/Modules/FindPython/Support.cmake#L3306-3313); * sets `DT_SONAME` on the `core.*.so`. This shows up as `Library soname` below in `readelf -d` of core.*.so. *This is important* b/c w/o this set, the full path to `core.*.so` gets linked into consumers like plugins, rather than just the library name. [trouble](https://stackoverflow.com/questions/27261288/cmake-linking-shared-c-object-from-externalproject-produces-binaries-with-rel); * designed for ordinary library linking like how the plugins are using symbols from psi4. The https://github.com/psi4/psi4/blob/master/psi4/psi4Config.cmake.in#L141 does the linking of core.*.so to the plugins. ### MODULE; * does *not* link `libpython.so` into psi4; * does *not* set `DT_SONAME` on psi4. that's ok for the local plugins where the full path that's baked in is the same as the RPATH+SONAME resolved through `ld`, but this breaks down during the v2rdm conda build. I've been unable to force a `DT_SONAME` entry onto a `MODULE` library; * one can perhaps get away with it (no errors; current state of `master`), but it's [advised not to link to a MODULE](https://stackoverflow.com/a/4968940). ### printouts from SHARED; ```; >>> readelf -d stage/lib/psi4/core.cpython-39-x86_64-linux-gnu.so . Dynamic section at offset 0x21a4aa0 contains 40 entries:; Tag Type Name/Value; 0x0000000000000001 (NEEDED) Shared library: [libpython3.9.so.1.0]; 0x0000000000000001 (NEEDED) Shared library: [libgg.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libxc.so.9]; 0x0000000000000001 (NEEDED) Shared library: [libint2.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libdl.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libmkl_rt.so]; 0x0000000000000001 (NEEDED) Shared library: [libiomp5.so]; 0x0000000000000001 (NEEDED) Shared library: [libpthread.so.0]; 0x0000000000000001 (NEE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-771213188
https://github.com/psi4/psi4/pull/2048#issuecomment-771213188:1478,Availability,error,errors,1478,"n/Support.cmake#L3306-3313); * sets `DT_SONAME` on the `core.*.so`. This shows up as `Library soname` below in `readelf -d` of core.*.so. *This is important* b/c w/o this set, the full path to `core.*.so` gets linked into consumers like plugins, rather than just the library name. [trouble](https://stackoverflow.com/questions/27261288/cmake-linking-shared-c-object-from-externalproject-produces-binaries-with-rel); * designed for ordinary library linking like how the plugins are using symbols from psi4. The https://github.com/psi4/psi4/blob/master/psi4/psi4Config.cmake.in#L141 does the linking of core.*.so to the plugins. ### MODULE; * does *not* link `libpython.so` into psi4; * does *not* set `DT_SONAME` on psi4. that's ok for the local plugins where the full path that's baked in is the same as the RPATH+SONAME resolved through `ld`, but this breaks down during the v2rdm conda build. I've been unable to force a `DT_SONAME` entry onto a `MODULE` library; * one can perhaps get away with it (no errors; current state of `master`), but it's [advised not to link to a MODULE](https://stackoverflow.com/a/4968940). ### printouts from SHARED; ```; >>> readelf -d stage/lib/psi4/core.cpython-39-x86_64-linux-gnu.so . Dynamic section at offset 0x21a4aa0 contains 40 entries:; Tag Type Name/Value; 0x0000000000000001 (NEEDED) Shared library: [libpython3.9.so.1.0]; 0x0000000000000001 (NEEDED) Shared library: [libgg.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libxc.so.9]; 0x0000000000000001 (NEEDED) Shared library: [libint2.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libdl.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libmkl_rt.so]; 0x0000000000000001 (NEEDED) Shared library: [libiomp5.so]; 0x0000000000000001 (NEEDED) Shared library: [libpthread.so.0]; 0x0000000000000001 (NEEDED) Shared library: [libimf.so]; 0x0000000000000001 (NEEDED) Shared library: [libsvml.so]; 0x0000000000000001 (NEEDED) Shared library: [libstdc++.so.6]; 0x0000000000000001 (NEEDED) Shared libr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-771213188
https://github.com/psi4/psi4/pull/2048#issuecomment-771213188:710,Modifiability,plugin,plugins,710,"We have a problem resulting from this PR. There's three ways to `add_library` in CMake -- STATIC, SHARED, MODULE . SHARED is the usual linux `.so` for linking, while MODULE is the dl_open style of a Py module. Up until this merged PR we were doing SHARED. ### SHARED; * links `libpython.so` into psi4's `core.*.so` -- this is new in the revamped pb11 add_pybind11_module that calls [Python_add_library](https://gitlab.kitware.com/cmake/cmake/-/blob/master/Modules/FindPython/Support.cmake#L3306-3313); * sets `DT_SONAME` on the `core.*.so`. This shows up as `Library soname` below in `readelf -d` of core.*.so. *This is important* b/c w/o this set, the full path to `core.*.so` gets linked into consumers like plugins, rather than just the library name. [trouble](https://stackoverflow.com/questions/27261288/cmake-linking-shared-c-object-from-externalproject-produces-binaries-with-rel); * designed for ordinary library linking like how the plugins are using symbols from psi4. The https://github.com/psi4/psi4/blob/master/psi4/psi4Config.cmake.in#L141 does the linking of core.*.so to the plugins. ### MODULE; * does *not* link `libpython.so` into psi4; * does *not* set `DT_SONAME` on psi4. that's ok for the local plugins where the full path that's baked in is the same as the RPATH+SONAME resolved through `ld`, but this breaks down during the v2rdm conda build. I've been unable to force a `DT_SONAME` entry onto a `MODULE` library; * one can perhaps get away with it (no errors; current state of `master`), but it's [advised not to link to a MODULE](https://stackoverflow.com/a/4968940). ### printouts from SHARED; ```; >>> readelf -d stage/lib/psi4/core.cpython-39-x86_64-linux-gnu.so . Dynamic section at offset 0x21a4aa0 contains 40 entries:; Tag Type Name/Value; 0x0000000000000001 (NEEDED) Shared library: [libpython3.9.so.1.0]; 0x0000000000000001 (NEEDED) Shared library: [libgg.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libxc.so.9]; 0x0000000000000001 (NEEDED) Shared library: ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-771213188
https://github.com/psi4/psi4/pull/2048#issuecomment-771213188:942,Modifiability,plugin,plugins,942,"We have a problem resulting from this PR. There's three ways to `add_library` in CMake -- STATIC, SHARED, MODULE . SHARED is the usual linux `.so` for linking, while MODULE is the dl_open style of a Py module. Up until this merged PR we were doing SHARED. ### SHARED; * links `libpython.so` into psi4's `core.*.so` -- this is new in the revamped pb11 add_pybind11_module that calls [Python_add_library](https://gitlab.kitware.com/cmake/cmake/-/blob/master/Modules/FindPython/Support.cmake#L3306-3313); * sets `DT_SONAME` on the `core.*.so`. This shows up as `Library soname` below in `readelf -d` of core.*.so. *This is important* b/c w/o this set, the full path to `core.*.so` gets linked into consumers like plugins, rather than just the library name. [trouble](https://stackoverflow.com/questions/27261288/cmake-linking-shared-c-object-from-externalproject-produces-binaries-with-rel); * designed for ordinary library linking like how the plugins are using symbols from psi4. The https://github.com/psi4/psi4/blob/master/psi4/psi4Config.cmake.in#L141 does the linking of core.*.so to the plugins. ### MODULE; * does *not* link `libpython.so` into psi4; * does *not* set `DT_SONAME` on psi4. that's ok for the local plugins where the full path that's baked in is the same as the RPATH+SONAME resolved through `ld`, but this breaks down during the v2rdm conda build. I've been unable to force a `DT_SONAME` entry onto a `MODULE` library; * one can perhaps get away with it (no errors; current state of `master`), but it's [advised not to link to a MODULE](https://stackoverflow.com/a/4968940). ### printouts from SHARED; ```; >>> readelf -d stage/lib/psi4/core.cpython-39-x86_64-linux-gnu.so . Dynamic section at offset 0x21a4aa0 contains 40 entries:; Tag Type Name/Value; 0x0000000000000001 (NEEDED) Shared library: [libpython3.9.so.1.0]; 0x0000000000000001 (NEEDED) Shared library: [libgg.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libxc.so.9]; 0x0000000000000001 (NEEDED) Shared library: ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-771213188
https://github.com/psi4/psi4/pull/2048#issuecomment-771213188:1091,Modifiability,plugin,plugins,1091,"STATIC, SHARED, MODULE . SHARED is the usual linux `.so` for linking, while MODULE is the dl_open style of a Py module. Up until this merged PR we were doing SHARED. ### SHARED; * links `libpython.so` into psi4's `core.*.so` -- this is new in the revamped pb11 add_pybind11_module that calls [Python_add_library](https://gitlab.kitware.com/cmake/cmake/-/blob/master/Modules/FindPython/Support.cmake#L3306-3313); * sets `DT_SONAME` on the `core.*.so`. This shows up as `Library soname` below in `readelf -d` of core.*.so. *This is important* b/c w/o this set, the full path to `core.*.so` gets linked into consumers like plugins, rather than just the library name. [trouble](https://stackoverflow.com/questions/27261288/cmake-linking-shared-c-object-from-externalproject-produces-binaries-with-rel); * designed for ordinary library linking like how the plugins are using symbols from psi4. The https://github.com/psi4/psi4/blob/master/psi4/psi4Config.cmake.in#L141 does the linking of core.*.so to the plugins. ### MODULE; * does *not* link `libpython.so` into psi4; * does *not* set `DT_SONAME` on psi4. that's ok for the local plugins where the full path that's baked in is the same as the RPATH+SONAME resolved through `ld`, but this breaks down during the v2rdm conda build. I've been unable to force a `DT_SONAME` entry onto a `MODULE` library; * one can perhaps get away with it (no errors; current state of `master`), but it's [advised not to link to a MODULE](https://stackoverflow.com/a/4968940). ### printouts from SHARED; ```; >>> readelf -d stage/lib/psi4/core.cpython-39-x86_64-linux-gnu.so . Dynamic section at offset 0x21a4aa0 contains 40 entries:; Tag Type Name/Value; 0x0000000000000001 (NEEDED) Shared library: [libpython3.9.so.1.0]; 0x0000000000000001 (NEEDED) Shared library: [libgg.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libxc.so.9]; 0x0000000000000001 (NEEDED) Shared library: [libint2.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libdl.so.2]; 0x0000000000000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-771213188
https://github.com/psi4/psi4/pull/2048#issuecomment-771213188:1218,Modifiability,plugin,plugins,1218,"python.so` into psi4's `core.*.so` -- this is new in the revamped pb11 add_pybind11_module that calls [Python_add_library](https://gitlab.kitware.com/cmake/cmake/-/blob/master/Modules/FindPython/Support.cmake#L3306-3313); * sets `DT_SONAME` on the `core.*.so`. This shows up as `Library soname` below in `readelf -d` of core.*.so. *This is important* b/c w/o this set, the full path to `core.*.so` gets linked into consumers like plugins, rather than just the library name. [trouble](https://stackoverflow.com/questions/27261288/cmake-linking-shared-c-object-from-externalproject-produces-binaries-with-rel); * designed for ordinary library linking like how the plugins are using symbols from psi4. The https://github.com/psi4/psi4/blob/master/psi4/psi4Config.cmake.in#L141 does the linking of core.*.so to the plugins. ### MODULE; * does *not* link `libpython.so` into psi4; * does *not* set `DT_SONAME` on psi4. that's ok for the local plugins where the full path that's baked in is the same as the RPATH+SONAME resolved through `ld`, but this breaks down during the v2rdm conda build. I've been unable to force a `DT_SONAME` entry onto a `MODULE` library; * one can perhaps get away with it (no errors; current state of `master`), but it's [advised not to link to a MODULE](https://stackoverflow.com/a/4968940). ### printouts from SHARED; ```; >>> readelf -d stage/lib/psi4/core.cpython-39-x86_64-linux-gnu.so . Dynamic section at offset 0x21a4aa0 contains 40 entries:; Tag Type Name/Value; 0x0000000000000001 (NEEDED) Shared library: [libpython3.9.so.1.0]; 0x0000000000000001 (NEEDED) Shared library: [libgg.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libxc.so.9]; 0x0000000000000001 (NEEDED) Shared library: [libint2.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libdl.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libmkl_rt.so]; 0x0000000000000001 (NEEDED) Shared library: [libiomp5.so]; 0x0000000000000001 (NEEDED) Shared library: [libpthread.so.0]; 0x0000000000000001 (NEE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-771213188
https://github.com/psi4/psi4/pull/2048#issuecomment-771213188:3033,Security,HASH,HASH,3033,bimf.so]; 0x0000000000000001 (NEEDED) Shared library: [libsvml.so]; 0x0000000000000001 (NEEDED) Shared library: [libstdc++.so.6]; 0x0000000000000001 (NEEDED) Shared library: [libgcc_s.so.1]; 0x0000000000000001 (NEEDED) Shared library: [libintlc.so.5]; 0x0000000000000001 (NEEDED) Shared library: [libc.so.6]; 0x000000000000000e (SONAME) Library soname: [core.cpython-39-x86_64-linux-gnu.so]; 0x000000000000000f (RPATH) Library rpath: [/home/psilocaluser/toolchainconda/envs/py39/lib:$ORIGIN/../:/home/psilocaluser/toolchainconda/envs/py39/lib]; 0x000000000000000c (INIT) 0x1d7000; 0x000000000000000d (FINI) 0x1b03250; 0x0000000000000019 (INIT_ARRAY) 0x2193c00; 0x000000000000001b (INIT_ARRAYSZ) 7200 (bytes); 0x0000000000000004 (HASH) 0x260; 0x000000006ffffef5 (GNU_HASH) 0xe010; 0x0000000000000005 (STRTAB) 0x5e368; 0x0000000000000006 (SYMTAB) 0x1d118; 0x000000000000000a (STRSZ) 851488 (bytes); 0x000000000000000b (SYMENT) 24 (bytes); 0x0000000000000003 (PLTGOT) 0x21a5d60; 0x0000000000000002 (PLTRELSZ) 121032 (bytes); 0x0000000000000014 (PLTREL) RELA; 0x0000000000000017 (JMPREL) 0x1b94d0; 0x0000000000000007 (RELA) 0x133a18; 0x0000000000000008 (RELASZ) 547512 (bytes); 0x0000000000000009 (RELAENT) 24 (bytes); 0x0000000000000018 (BIND_NOW) ; 0x000000006ffffffb (FLAGS_1) Flags: NOW; 0x000000006ffffffe (VERNEED) 0x133868; 0x000000006fffffff (VERNEEDNUM) 6; 0x000000006ffffff0 (VERSYM) 0x12e188; 0x000000006ffffff9 (RELACOUNT) 15654; 0x0000000000000000 (NULL) 0x0; ```; ```; >>> ldd stage/lib/psi4/core.cpython-39-x86_64-linux-gnu.so ; 	linux-vdso.so.1 => (0x00007fffd195a000); 	libpython3.9.so.1.0 => /home/psilocaluser/toolchainconda/envs/py39/lib/libpython3.9.so.1.0 (0x00007f6527640000); 	libgg.so.2 => /home/psilocaluser/toolchainconda/envs/py39/lib/libgg.so.2 (0x00007f652719f000); 	libxc.so.9 => /home/psilocaluser/toolchainconda/envs/py39/lib/libxc.so.9 (0x00007f6525fdf000); 	libint2.so.2 => /home/psilocaluser/toolchainconda/envs/py39/lib/libint2.so.2 (0x00007f64cf7cf000); 	libdl.so.2 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-771213188
https://github.com/psi4/psi4/pull/2056#issuecomment-742028115:120,Availability,avail,available,120,"Yes, it turns out the both volumes and volume ratios are quite easy to get from Horton if a Molden-formatted density is available. I think it would be important to automate the generation of the volume ratios here, meaning that some number of free-atom calculations are required. I'm not sure what the defaults are in Horton, but we'd need to think about how exactly these free-atom calculations should be run (i.e. restricted or unrestricted g.s.).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-742028115
https://github.com/psi4/psi4/pull/2056#issuecomment-742530038:842,Energy Efficiency,charge,charge,842,"I'll defer a more thorough review until after GA Tech's pass, but I do want some input on this, to make sure that properties stay sane. A few preliminary comments. 1. ""ATOMIC_VOLUMES"" computations will fail unless the user has already run ""MBIS_CHARGES"", since grid_, rho_a_points_, rho_a_0_points_, and distances_ won't even be meaningfully defined. Good luck calling the `blocks` method of `nullptr`.; 2. You are making `grid_`, `rho_a_points_`, `rho_a_0_points_`, and `distances_` new members of `PopulationAnalysisCalc`, but these are only needed for MBIS multipoles. Both of these indicate that MBIS_CHARGES and ATOMIC_VOLUMES are more tightly coupled than can be captured with a model of independent property calculations used throughout the rest of the class. Might I suggest that you move atomic volumes to be computed during an MBIS charge calculation, rather than as an independent property?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-742530038
https://github.com/psi4/psi4/pull/2056#issuecomment-742615125:269,Modifiability,variab,variables,269,"As a point of organization, keep responses _on_ comments on specific lines of code limited to responses _about_ those comments. Your point about BSISA didn't belong below my point about how a comment needed to be corrected. I still don't like the idea of adding member variables to `PopulationAnalysisCalc` that are not required for all or even most population analyses. This is how you get the explosion of member variables polluting a certain Psi module. I recommend either making a subclass or demoting those member variables to arguments of a function call inside the parent population analysis. The latter option requires that any further requests for a particular population analysis be done at the time the population analysis is done, rather than reading a new OEProp request. This makes more sense to me.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-742615125
https://github.com/psi4/psi4/pull/2056#issuecomment-742615125:415,Modifiability,variab,variables,415,"As a point of organization, keep responses _on_ comments on specific lines of code limited to responses _about_ those comments. Your point about BSISA didn't belong below my point about how a comment needed to be corrected. I still don't like the idea of adding member variables to `PopulationAnalysisCalc` that are not required for all or even most population analyses. This is how you get the explosion of member variables polluting a certain Psi module. I recommend either making a subclass or demoting those member variables to arguments of a function call inside the parent population analysis. The latter option requires that any further requests for a particular population analysis be done at the time the population analysis is done, rather than reading a new OEProp request. This makes more sense to me.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-742615125
https://github.com/psi4/psi4/pull/2056#issuecomment-742615125:519,Modifiability,variab,variables,519,"As a point of organization, keep responses _on_ comments on specific lines of code limited to responses _about_ those comments. Your point about BSISA didn't belong below my point about how a comment needed to be corrected. I still don't like the idea of adding member variables to `PopulationAnalysisCalc` that are not required for all or even most population analyses. This is how you get the explosion of member variables polluting a certain Psi module. I recommend either making a subclass or demoting those member variables to arguments of a function call inside the parent population analysis. The latter option requires that any further requests for a particular population analysis be done at the time the population analysis is done, rather than reading a new OEProp request. This makes more sense to me.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-742615125
https://github.com/psi4/psi4/pull/2056#issuecomment-742616334:278,Modifiability,variab,variables,278,"> As a point of organization, keep responses _on_ comments on specific lines of code limited to responses _about_ those comments. Your point about BSISA didn't belong below my point about how a comment needed to be corrected.; > ; > I still don't like the idea of adding member variables to `PopulationAnalysisCalc` that are not required for all or even most population analyses. This is how you get the explosion of member variables polluting a certain Psi module. I recommend either making a subclass or demoting those member variables to arguments of a function call inside the parent population analysis. The latter option requires that any further requests for a particular population analysis be done at the time the population analysis is done, rather than reading a new OEProp request. This makes more sense to me. Actually, I do like your idea for the latter option. Let me ask others what they think.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-742616334
https://github.com/psi4/psi4/pull/2056#issuecomment-742616334:424,Modifiability,variab,variables,424,"> As a point of organization, keep responses _on_ comments on specific lines of code limited to responses _about_ those comments. Your point about BSISA didn't belong below my point about how a comment needed to be corrected.; > ; > I still don't like the idea of adding member variables to `PopulationAnalysisCalc` that are not required for all or even most population analyses. This is how you get the explosion of member variables polluting a certain Psi module. I recommend either making a subclass or demoting those member variables to arguments of a function call inside the parent population analysis. The latter option requires that any further requests for a particular population analysis be done at the time the population analysis is done, rather than reading a new OEProp request. This makes more sense to me. Actually, I do like your idea for the latter option. Let me ask others what they think.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-742616334
https://github.com/psi4/psi4/pull/2056#issuecomment-742616334:528,Modifiability,variab,variables,528,"> As a point of organization, keep responses _on_ comments on specific lines of code limited to responses _about_ those comments. Your point about BSISA didn't belong below my point about how a comment needed to be corrected.; > ; > I still don't like the idea of adding member variables to `PopulationAnalysisCalc` that are not required for all or even most population analyses. This is how you get the explosion of member variables polluting a certain Psi module. I recommend either making a subclass or demoting those member variables to arguments of a function call inside the parent population analysis. The latter option requires that any further requests for a particular population analysis be done at the time the population analysis is done, rather than reading a new OEProp request. This makes more sense to me. Actually, I do like your idea for the latter option. Let me ask others what they think.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-742616334
https://github.com/psi4/psi4/pull/2056#issuecomment-742726551:278,Modifiability,variab,variables,278,"> As a point of organization, keep responses _on_ comments on specific lines of code limited to responses _about_ those comments. Your point about BSISA didn't belong below my point about how a comment needed to be corrected.; > ; > I still don't like the idea of adding member variables to `PopulationAnalysisCalc` that are not required for all or even most population analyses. This is how you get the explosion of member variables polluting a certain Psi module. I recommend either making a subclass or demoting those member variables to arguments of a function call inside the parent population analysis. The latter option requires that any further requests for a particular population analysis be done at the time the population analysis is done, rather than reading a new OEProp request. This makes more sense to me. Okay, I refactored my code to match your suggested changes (passing the former member variables into a function)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-742726551
https://github.com/psi4/psi4/pull/2056#issuecomment-742726551:424,Modifiability,variab,variables,424,"> As a point of organization, keep responses _on_ comments on specific lines of code limited to responses _about_ those comments. Your point about BSISA didn't belong below my point about how a comment needed to be corrected.; > ; > I still don't like the idea of adding member variables to `PopulationAnalysisCalc` that are not required for all or even most population analyses. This is how you get the explosion of member variables polluting a certain Psi module. I recommend either making a subclass or demoting those member variables to arguments of a function call inside the parent population analysis. The latter option requires that any further requests for a particular population analysis be done at the time the population analysis is done, rather than reading a new OEProp request. This makes more sense to me. Okay, I refactored my code to match your suggested changes (passing the former member variables into a function)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-742726551
https://github.com/psi4/psi4/pull/2056#issuecomment-742726551:528,Modifiability,variab,variables,528,"> As a point of organization, keep responses _on_ comments on specific lines of code limited to responses _about_ those comments. Your point about BSISA didn't belong below my point about how a comment needed to be corrected.; > ; > I still don't like the idea of adding member variables to `PopulationAnalysisCalc` that are not required for all or even most population analyses. This is how you get the explosion of member variables polluting a certain Psi module. I recommend either making a subclass or demoting those member variables to arguments of a function call inside the parent population analysis. The latter option requires that any further requests for a particular population analysis be done at the time the population analysis is done, rather than reading a new OEProp request. This makes more sense to me. Okay, I refactored my code to match your suggested changes (passing the former member variables into a function)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-742726551
https://github.com/psi4/psi4/pull/2056#issuecomment-742726551:831,Modifiability,refactor,refactored,831,"> As a point of organization, keep responses _on_ comments on specific lines of code limited to responses _about_ those comments. Your point about BSISA didn't belong below my point about how a comment needed to be corrected.; > ; > I still don't like the idea of adding member variables to `PopulationAnalysisCalc` that are not required for all or even most population analyses. This is how you get the explosion of member variables polluting a certain Psi module. I recommend either making a subclass or demoting those member variables to arguments of a function call inside the parent population analysis. The latter option requires that any further requests for a particular population analysis be done at the time the population analysis is done, rather than reading a new OEProp request. This makes more sense to me. Okay, I refactored my code to match your suggested changes (passing the former member variables into a function)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-742726551
https://github.com/psi4/psi4/pull/2056#issuecomment-742726551:909,Modifiability,variab,variables,909,"> As a point of organization, keep responses _on_ comments on specific lines of code limited to responses _about_ those comments. Your point about BSISA didn't belong below my point about how a comment needed to be corrected.; > ; > I still don't like the idea of adding member variables to `PopulationAnalysisCalc` that are not required for all or even most population analyses. This is how you get the explosion of member variables polluting a certain Psi module. I recommend either making a subclass or demoting those member variables to arguments of a function call inside the parent population analysis. The latter option requires that any further requests for a particular population analysis be done at the time the population analysis is done, rather than reading a new OEProp request. This makes more sense to me. Okay, I refactored my code to match your suggested changes (passing the former member variables into a function)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-742726551
https://github.com/psi4/psi4/pull/2056#issuecomment-767181617:446,Deployability,Update,Updated,446,"> > > Could also do an option like MAX_RADIAL_MOMENT, where all orders up to a given max order are computed just in case someone wants something higher than 4.; > ; > > Great suggestions @zachglick @jeffschriber, I will get them changed ASAP; > ; > If 2, 3, 4 are all that's ever wanted and there's trivial additional cost, I advocate always computing and storing them all. Fewer options, more cheap results always better. Good idea, @zachglick. Updated my code, tests all passed :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-767181617
https://github.com/psi4/psi4/pull/2056#issuecomment-767181617:463,Testability,test,tests,463,"> > > Could also do an option like MAX_RADIAL_MOMENT, where all orders up to a given max order are computed just in case someone wants something higher than 4.; > ; > > Great suggestions @zachglick @jeffschriber, I will get them changed ASAP; > ; > If 2, 3, 4 are all that's ever wanted and there's trivial additional cost, I advocate always computing and storing them all. Fewer options, more cheap results always better. Good idea, @zachglick. Updated my code, tests all passed :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-767181617
https://github.com/psi4/psi4/issues/2060#issuecomment-743284249:166,Deployability,upgrade,upgrade,166,I'm kind of surprised this hasn't been caught sooner. Looks like we're using a decently old version of a file similar to the one that you linked to. Might be time to upgrade the checks to the modern style.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2060#issuecomment-743284249
https://github.com/psi4/psi4/issues/2060#issuecomment-743297163:356,Deployability,upgrade,upgrade,356,"For history, back when Python detection in cmake was very broken (exe and lib weren't matching pair), numpy made their own alternate find python cmake file and pybind11 used numpy's and psi4 used pybind11's. I hear cmake has totally rewritten theirs, and pybind11 is now amenable to either (https://github.com/pybind/pybind11/pull/2370, I think). So, yes, upgrade now reasonable. Note that psi, in turn, installs the python finder module so that plugins can use it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2060#issuecomment-743297163
https://github.com/psi4/psi4/issues/2060#issuecomment-743297163:404,Deployability,install,installs,404,"For history, back when Python detection in cmake was very broken (exe and lib weren't matching pair), numpy made their own alternate find python cmake file and pybind11 used numpy's and psi4 used pybind11's. I hear cmake has totally rewritten theirs, and pybind11 is now amenable to either (https://github.com/pybind/pybind11/pull/2370, I think). So, yes, upgrade now reasonable. Note that psi, in turn, installs the python finder module so that plugins can use it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2060#issuecomment-743297163
https://github.com/psi4/psi4/issues/2060#issuecomment-743297163:446,Modifiability,plugin,plugins,446,"For history, back when Python detection in cmake was very broken (exe and lib weren't matching pair), numpy made their own alternate find python cmake file and pybind11 used numpy's and psi4 used pybind11's. I hear cmake has totally rewritten theirs, and pybind11 is now amenable to either (https://github.com/pybind/pybind11/pull/2370, I think). So, yes, upgrade now reasonable. Note that psi, in turn, installs the python finder module so that plugins can use it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2060#issuecomment-743297163
https://github.com/psi4/psi4/issues/2060#issuecomment-743297163:30,Safety,detect,detection,30,"For history, back when Python detection in cmake was very broken (exe and lib weren't matching pair), numpy made their own alternate find python cmake file and pybind11 used numpy's and psi4 used pybind11's. I hear cmake has totally rewritten theirs, and pybind11 is now amenable to either (https://github.com/pybind/pybind11/pull/2370, I think). So, yes, upgrade now reasonable. Note that psi, in turn, installs the python finder module so that plugins can use it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2060#issuecomment-743297163
https://github.com/psi4/psi4/issues/2060#issuecomment-743313067:130,Deployability,install,installed,130,"I suppose I should add my setup is kind of unusual in that I don't develop with or for python, only C++, so never have that stuff installed. So it caught me out for a minute, but easy to fix. Not critical by any means, but If one were a stickler for good cmake practices code compilation should never fall over because of cmake missing dependency checks, . Perhaps I'll try and port psi4 build to meson one day .. famous last words. :D",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2060#issuecomment-743313067
https://github.com/psi4/psi4/issues/2060#issuecomment-743313067:336,Integrability,depend,dependency,336,"I suppose I should add my setup is kind of unusual in that I don't develop with or for python, only C++, so never have that stuff installed. So it caught me out for a minute, but easy to fix. Not critical by any means, but If one were a stickler for good cmake practices code compilation should never fall over because of cmake missing dependency checks, . Perhaps I'll try and port psi4 build to meson one day .. famous last words. :D",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2060#issuecomment-743313067
https://github.com/psi4/psi4/pull/2062#issuecomment-743345990:1708,Deployability,Patch,Patch,1708,"rds from the ""Notable Features""; description. But hopefully it will lead to ""less time"" because fewer; integrals will be computed. On Fri, Dec 11, 2020 at 1:09 PM Andy Jiang <notifications@github.com> wrote:. > Description; >; > Implements density screening into the direct SCF Algorithm, no iterative; > Fock build currently, but iterative Fock build will be a future addition; >; > Reference paper:; > https://onlinelibrary.wiley.com/doi/abs/10.1002/jcc.540100111; > Notable Features; >; > - Improve the efficiency (fewer iterations, less time) of the direct; > SCF Algorithm without compromising accuracy; >; > Checklist; >; > - Passes Sanity Check for Water Molecule, will include a Google Sheets; > link as I include more tests; > - Code tested on a diverse set of molecules; >; > Status; >; > - Rough Draft Phase; > - Ready for review; > - Ready for merge; >; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/psi4/psi4/pull/2062; > Commit Summary; >; > - Density Screening Rough Draft; >; > File Changes; >; > - *M* psi4/src/psi4/libfock/DirectJK.cc; > <https://github.com/psi4/psi4/pull/2062/files#diff-5be42036f62111d8e1e5420b7a1e5b178b56fa9b55cbbe2453950147f868481f>; > (92); > - *M* psi4/src/psi4/libfock/jk.h; > <https://github.com/psi4/psi4/pull/2062/files#diff-47381cdba9dc8065e0f8bcf7939d6dfbf532b7f85be2f1df584dfc4dde5b3bfb>; > (3); > - *M* psi4/src/read_options.cc; > <https://github.com/psi4/psi4/pull/2062/files#diff-85f451c75b4e468882c42e9eb347a3e4b3e58891bbfe92168329cd0b32ce6cb4>; > (4); >; > Patch Links:; >; > - https://github.com/psi4/psi4/pull/2062.patch; > - https://github.com/psi4/psi4/pull/2062.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2062>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5WIIX7F74QLTYP2N5LSUJN43ANCNFSM4UXAU44A>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743345990
https://github.com/psi4/psi4/pull/2062#issuecomment-743345990:1768,Deployability,patch,patch,1768,"rds from the ""Notable Features""; description. But hopefully it will lead to ""less time"" because fewer; integrals will be computed. On Fri, Dec 11, 2020 at 1:09 PM Andy Jiang <notifications@github.com> wrote:. > Description; >; > Implements density screening into the direct SCF Algorithm, no iterative; > Fock build currently, but iterative Fock build will be a future addition; >; > Reference paper:; > https://onlinelibrary.wiley.com/doi/abs/10.1002/jcc.540100111; > Notable Features; >; > - Improve the efficiency (fewer iterations, less time) of the direct; > SCF Algorithm without compromising accuracy; >; > Checklist; >; > - Passes Sanity Check for Water Molecule, will include a Google Sheets; > link as I include more tests; > - Code tested on a diverse set of molecules; >; > Status; >; > - Rough Draft Phase; > - Ready for review; > - Ready for merge; >; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/psi4/psi4/pull/2062; > Commit Summary; >; > - Density Screening Rough Draft; >; > File Changes; >; > - *M* psi4/src/psi4/libfock/DirectJK.cc; > <https://github.com/psi4/psi4/pull/2062/files#diff-5be42036f62111d8e1e5420b7a1e5b178b56fa9b55cbbe2453950147f868481f>; > (92); > - *M* psi4/src/psi4/libfock/jk.h; > <https://github.com/psi4/psi4/pull/2062/files#diff-47381cdba9dc8065e0f8bcf7939d6dfbf532b7f85be2f1df584dfc4dde5b3bfb>; > (3); > - *M* psi4/src/read_options.cc; > <https://github.com/psi4/psi4/pull/2062/files#diff-85f451c75b4e468882c42e9eb347a3e4b3e58891bbfe92168329cd0b32ce6cb4>; > (4); >; > Patch Links:; >; > - https://github.com/psi4/psi4/pull/2062.patch; > - https://github.com/psi4/psi4/pull/2062.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2062>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5WIIX7F74QLTYP2N5LSUJN43ANCNFSM4UXAU44A>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743345990
https://github.com/psi4/psi4/pull/2062#issuecomment-743345990:757,Safety,Sanity Check,Sanity Check,757,"Point of clarification, I don't think density screening will allow ""fewer; iterations"", so I suggest deleting those words from the ""Notable Features""; description. But hopefully it will lead to ""less time"" because fewer; integrals will be computed. On Fri, Dec 11, 2020 at 1:09 PM Andy Jiang <notifications@github.com> wrote:. > Description; >; > Implements density screening into the direct SCF Algorithm, no iterative; > Fock build currently, but iterative Fock build will be a future addition; >; > Reference paper:; > https://onlinelibrary.wiley.com/doi/abs/10.1002/jcc.540100111; > Notable Features; >; > - Improve the efficiency (fewer iterations, less time) of the direct; > SCF Algorithm without compromising accuracy; >; > Checklist; >; > - Passes Sanity Check for Water Molecule, will include a Google Sheets; > link as I include more tests; > - Code tested on a diverse set of molecules; >; > Status; >; > - Rough Draft Phase; > - Ready for review; > - Ready for merge; >; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/psi4/psi4/pull/2062; > Commit Summary; >; > - Density Screening Rough Draft; >; > File Changes; >; > - *M* psi4/src/psi4/libfock/DirectJK.cc; > <https://github.com/psi4/psi4/pull/2062/files#diff-5be42036f62111d8e1e5420b7a1e5b178b56fa9b55cbbe2453950147f868481f>; > (92); > - *M* psi4/src/psi4/libfock/jk.h; > <https://github.com/psi4/psi4/pull/2062/files#diff-47381cdba9dc8065e0f8bcf7939d6dfbf532b7f85be2f1df584dfc4dde5b3bfb>; > (3); > - *M* psi4/src/read_options.cc; > <https://github.com/psi4/psi4/pull/2062/files#diff-85f451c75b4e468882c42e9eb347a3e4b3e58891bbfe92168329cd0b32ce6cb4>; > (4); >; > Patch Links:; >; > - https://github.com/psi4/psi4/pull/2062.patch; > - https://github.com/psi4/psi4/pull/2062.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2062>, or un",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743345990
https://github.com/psi4/psi4/pull/2062#issuecomment-743345990:845,Testability,test,tests,845,"Point of clarification, I don't think density screening will allow ""fewer; iterations"", so I suggest deleting those words from the ""Notable Features""; description. But hopefully it will lead to ""less time"" because fewer; integrals will be computed. On Fri, Dec 11, 2020 at 1:09 PM Andy Jiang <notifications@github.com> wrote:. > Description; >; > Implements density screening into the direct SCF Algorithm, no iterative; > Fock build currently, but iterative Fock build will be a future addition; >; > Reference paper:; > https://onlinelibrary.wiley.com/doi/abs/10.1002/jcc.540100111; > Notable Features; >; > - Improve the efficiency (fewer iterations, less time) of the direct; > SCF Algorithm without compromising accuracy; >; > Checklist; >; > - Passes Sanity Check for Water Molecule, will include a Google Sheets; > link as I include more tests; > - Code tested on a diverse set of molecules; >; > Status; >; > - Rough Draft Phase; > - Ready for review; > - Ready for merge; >; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/psi4/psi4/pull/2062; > Commit Summary; >; > - Density Screening Rough Draft; >; > File Changes; >; > - *M* psi4/src/psi4/libfock/DirectJK.cc; > <https://github.com/psi4/psi4/pull/2062/files#diff-5be42036f62111d8e1e5420b7a1e5b178b56fa9b55cbbe2453950147f868481f>; > (92); > - *M* psi4/src/psi4/libfock/jk.h; > <https://github.com/psi4/psi4/pull/2062/files#diff-47381cdba9dc8065e0f8bcf7939d6dfbf532b7f85be2f1df584dfc4dde5b3bfb>; > (3); > - *M* psi4/src/read_options.cc; > <https://github.com/psi4/psi4/pull/2062/files#diff-85f451c75b4e468882c42e9eb347a3e4b3e58891bbfe92168329cd0b32ce6cb4>; > (4); >; > Patch Links:; >; > - https://github.com/psi4/psi4/pull/2062.patch; > - https://github.com/psi4/psi4/pull/2062.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2062>, or un",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743345990
https://github.com/psi4/psi4/pull/2062#issuecomment-743345990:861,Testability,test,tested,861,"Point of clarification, I don't think density screening will allow ""fewer; iterations"", so I suggest deleting those words from the ""Notable Features""; description. But hopefully it will lead to ""less time"" because fewer; integrals will be computed. On Fri, Dec 11, 2020 at 1:09 PM Andy Jiang <notifications@github.com> wrote:. > Description; >; > Implements density screening into the direct SCF Algorithm, no iterative; > Fock build currently, but iterative Fock build will be a future addition; >; > Reference paper:; > https://onlinelibrary.wiley.com/doi/abs/10.1002/jcc.540100111; > Notable Features; >; > - Improve the efficiency (fewer iterations, less time) of the direct; > SCF Algorithm without compromising accuracy; >; > Checklist; >; > - Passes Sanity Check for Water Molecule, will include a Google Sheets; > link as I include more tests; > - Code tested on a diverse set of molecules; >; > Status; >; > - Rough Draft Phase; > - Ready for review; > - Ready for merge; >; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/psi4/psi4/pull/2062; > Commit Summary; >; > - Density Screening Rough Draft; >; > File Changes; >; > - *M* psi4/src/psi4/libfock/DirectJK.cc; > <https://github.com/psi4/psi4/pull/2062/files#diff-5be42036f62111d8e1e5420b7a1e5b178b56fa9b55cbbe2453950147f868481f>; > (92); > - *M* psi4/src/psi4/libfock/jk.h; > <https://github.com/psi4/psi4/pull/2062/files#diff-47381cdba9dc8065e0f8bcf7939d6dfbf532b7f85be2f1df584dfc4dde5b3bfb>; > (3); > - *M* psi4/src/read_options.cc; > <https://github.com/psi4/psi4/pull/2062/files#diff-85f451c75b4e468882c42e9eb347a3e4b3e58891bbfe92168329cd0b32ce6cb4>; > (4); >; > Patch Links:; >; > - https://github.com/psi4/psi4/pull/2062.patch; > - https://github.com/psi4/psi4/pull/2062.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2062>, or un",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743345990
https://github.com/psi4/psi4/pull/2062#issuecomment-743352546:363,Availability,error,error,363,"A couple thoughts before a more thorough review:. Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules. Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good. It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743352546
https://github.com/psi4/psi4/pull/2062#issuecomment-743352546:462,Availability,redundant,redundant,462,"A couple thoughts before a more thorough review:. Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules. Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good. It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743352546
https://github.com/psi4/psi4/pull/2062#issuecomment-743352546:121,Energy Efficiency,energy,energy,121,"A couple thoughts before a more thorough review:. Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules. Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good. It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743352546
https://github.com/psi4/psi4/pull/2062#issuecomment-743352546:356,Energy Efficiency,energy,energy,356,"A couple thoughts before a more thorough review:. Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules. Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good. It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743352546
https://github.com/psi4/psi4/pull/2062#issuecomment-743352546:462,Safety,redund,redundant,462,"A couple thoughts before a more thorough review:. Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules. Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good. It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743352546
https://github.com/psi4/psi4/pull/2062#issuecomment-743352546:67,Testability,test,test,67,"A couple thoughts before a more thorough review:. Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules. Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good. It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743352546
https://github.com/psi4/psi4/pull/2062#issuecomment-743352546:141,Testability,test,test,141,"A couple thoughts before a more thorough review:. Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules. Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good. It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743352546
https://github.com/psi4/psi4/pull/2062#issuecomment-743354001:377,Availability,error,error,377,"> A couple thoughts before a more thorough review:; > ; > Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules; > ; > Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good.; > ; > It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop. I will run a variety of tests and include that as a Google Sheets link. And your point about redundancy is good. I will get that fixed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743354001
https://github.com/psi4/psi4/pull/2062#issuecomment-743354001:483,Availability,redundant,redundant,483,"> A couple thoughts before a more thorough review:; > ; > Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules; > ; > Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good.; > ; > It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop. I will run a variety of tests and include that as a Google Sheets link. And your point about redundancy is good. I will get that fixed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743354001
https://github.com/psi4/psi4/pull/2062#issuecomment-743354001:129,Energy Efficiency,energy,energy,129,"> A couple thoughts before a more thorough review:; > ; > Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules; > ; > Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good.; > ; > It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop. I will run a variety of tests and include that as a Google Sheets link. And your point about redundancy is good. I will get that fixed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743354001
https://github.com/psi4/psi4/pull/2062#issuecomment-743354001:370,Energy Efficiency,energy,energy,370,"> A couple thoughts before a more thorough review:; > ; > Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules; > ; > Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good.; > ; > It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop. I will run a variety of tests and include that as a Google Sheets link. And your point about redundancy is good. I will get that fixed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743354001
https://github.com/psi4/psi4/pull/2062#issuecomment-743354001:483,Safety,redund,redundant,483,"> A couple thoughts before a more thorough review:; > ; > Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules; > ; > Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good.; > ; > It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop. I will run a variety of tests and include that as a Google Sheets link. And your point about redundancy is good. I will get that fixed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743354001
https://github.com/psi4/psi4/pull/2062#issuecomment-743354001:745,Safety,redund,redundancy,745,"> A couple thoughts before a more thorough review:; > ; > Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules; > ; > Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good.; > ; > It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop. I will run a variety of tests and include that as a Google Sheets link. And your point about redundancy is good. I will get that fixed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743354001
https://github.com/psi4/psi4/pull/2062#issuecomment-743354001:75,Testability,test,test,75,"> A couple thoughts before a more thorough review:; > ; > Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules; > ; > Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good.; > ; > It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop. I will run a variety of tests and include that as a Google Sheets link. And your point about redundancy is good. I will get that fixed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743354001
https://github.com/psi4/psi4/pull/2062#issuecomment-743354001:149,Testability,test,test,149,"> A couple thoughts before a more thorough review:; > ; > Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules; > ; > Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good.; > ; > It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop. I will run a variety of tests and include that as a Google Sheets link. And your point about redundancy is good. I will get that fixed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743354001
https://github.com/psi4/psi4/pull/2062#issuecomment-743354001:676,Testability,test,tests,676,"> A couple thoughts before a more thorough review:; > ; > Can you add some test cases to verify that this doesn't change the SCF energy? That set of test molecules from yesterday would be good, plus a few larger molecules; > ; > Could you do some timing to verify that this does in fact speed the SCF code up? A comparison of system size, density threshold, timing, and energy error would be good.; > ; > It appears that you're calculating integrals within the master loop and doing redundant work, possibly more than the original algorithm. I think you want to calculate all (NM|NM) shells outside of the loop and use those integrals within the loop. I will run a variety of tests and include that as a Google Sheets link. And your point about redundancy is good. I will get that fixed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743354001
https://github.com/psi4/psi4/pull/2062#issuecomment-748496859:2,Testability,test,tested,2,"I tested my code on the S22by7 dimer set (1 core, direct SCF only, no df guess) using different screening thresholds. https://docs.google.com/spreadsheets/d/1aja4HIT-jzz8f6vRTX8c1YDMPStpq2TW8lRM6-WiVBk/edit?usp=sharing",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-748496859
https://github.com/psi4/psi4/pull/2062#issuecomment-752960304:314,Energy Efficiency,energy,energy,314,"> Hey all,; > ; > I have compiled a folder of all the important density screening results, with interaction energies, conformation energies (in progress), and reaction energies:; > ; > https://drive.google.com/drive/folders/10gbJYR7pzrdkbLy1AcKgRigSikwYIYL4?usp=sharing; > ; > Hope this helps!. For reference, the energy values for conformation and reaction energies are in kcal/mol",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-752960304
https://github.com/psi4/psi4/pull/2062#issuecomment-752967718:136,Testability,test,tests,136,> What are your conclusions from the data?. Density Screening usually is okay up to 10^-8 screening. Have not found any cases in all my tests where it is not okay. The only place this would be problematic is in a CrystalLattE style application.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-752967718
https://github.com/psi4/psi4/pull/2062#issuecomment-758898999:431,Energy Efficiency,energy,energy,431,"> Actually, after reviewing my code, I realized that this density screening only applies in the RHF case, I need to modify the code slightly to make it work with UHF. I derived an expression for the density contribution in the UHF case (the Schwarz contribution will be the same):; > ; > [Density Screening UHF.pdf](https://github.com/psi4/psi4/files/5804430/Density.Screening.UHF.pdf). Wait, you are screening with respect to the energy contribution? This leads to incorrect results, since the contribution to the Fock matrix can still be non-negligible even if the contribution to the exchange energy is small. The screening should therefore be based on. 1. the Coulomb contribution; 2. the alpha and beta exchange contributions. If I remember correctly, many authors suggest doing Coulomb separately from exchange, since the range of the exchange integrals is much smaller than that of the Coulomb, while forming the exchange matrix is more costly than the Coulomb matrix due to the larger amount of permutations involved. The difference between RHF and UHF screening should be trivial; instead of considering the density matrix |D/2|, you just take max(|Dalpha|, |Dbeta|) as your proxy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-758898999
https://github.com/psi4/psi4/pull/2062#issuecomment-758898999:596,Energy Efficiency,energy,energy,596,"> Actually, after reviewing my code, I realized that this density screening only applies in the RHF case, I need to modify the code slightly to make it work with UHF. I derived an expression for the density contribution in the UHF case (the Schwarz contribution will be the same):; > ; > [Density Screening UHF.pdf](https://github.com/psi4/psi4/files/5804430/Density.Screening.UHF.pdf). Wait, you are screening with respect to the energy contribution? This leads to incorrect results, since the contribution to the Fock matrix can still be non-negligible even if the contribution to the exchange energy is small. The screening should therefore be based on. 1. the Coulomb contribution; 2. the alpha and beta exchange contributions. If I remember correctly, many authors suggest doing Coulomb separately from exchange, since the range of the exchange integrals is much smaller than that of the Coulomb, while forming the exchange matrix is more costly than the Coulomb matrix due to the larger amount of permutations involved. The difference between RHF and UHF screening should be trivial; instead of considering the density matrix |D/2|, you just take max(|Dalpha|, |Dbeta|) as your proxy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-758898999
https://github.com/psi4/psi4/pull/2062#issuecomment-758906841:437,Energy Efficiency,energy,energy,437,"> > Actually, after reviewing my code, I realized that this density screening only applies in the RHF case, I need to modify the code slightly to make it work with UHF. I derived an expression for the density contribution in the UHF case (the Schwarz contribution will be the same):; > > [Density Screening UHF.pdf](https://github.com/psi4/psi4/files/5804430/Density.Screening.UHF.pdf); > ; > Wait, you are screening with respect to the energy contribution? This leads to incorrect results, since the contribution to the Fock matrix can still be non-negligible even if the contribution to the exchange energy is small. The screening should therefore be based on; > ; > 1. the Coulomb contribution; > 2. the alpha and beta exchange contributions; > ; > If I remember correctly, many authors suggest doing Coulomb separately from exchange, since the range of the exchange integrals is much smaller than that of the Coulomb, while forming the exchange matrix is more costly than the Coulomb matrix due to the larger amount of permutations involved.; > ; > The difference between RHF and UHF screening should be trivial; instead of considering the density matrix |D/2|, you just take max(|Dalpha|, |Dbeta|) as your proxy. That makes sense, thank you Susi, I will modify the code (prob tomorrow), and rerun the UHF tests, as well as some RHF tests to make sure the RHF still works",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-758906841
https://github.com/psi4/psi4/pull/2062#issuecomment-758906841:602,Energy Efficiency,energy,energy,602,"> > Actually, after reviewing my code, I realized that this density screening only applies in the RHF case, I need to modify the code slightly to make it work with UHF. I derived an expression for the density contribution in the UHF case (the Schwarz contribution will be the same):; > > [Density Screening UHF.pdf](https://github.com/psi4/psi4/files/5804430/Density.Screening.UHF.pdf); > ; > Wait, you are screening with respect to the energy contribution? This leads to incorrect results, since the contribution to the Fock matrix can still be non-negligible even if the contribution to the exchange energy is small. The screening should therefore be based on; > ; > 1. the Coulomb contribution; > 2. the alpha and beta exchange contributions; > ; > If I remember correctly, many authors suggest doing Coulomb separately from exchange, since the range of the exchange integrals is much smaller than that of the Coulomb, while forming the exchange matrix is more costly than the Coulomb matrix due to the larger amount of permutations involved.; > ; > The difference between RHF and UHF screening should be trivial; instead of considering the density matrix |D/2|, you just take max(|Dalpha|, |Dbeta|) as your proxy. That makes sense, thank you Susi, I will modify the code (prob tomorrow), and rerun the UHF tests, as well as some RHF tests to make sure the RHF still works",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-758906841
https://github.com/psi4/psi4/pull/2062#issuecomment-758906841:1310,Testability,test,tests,1310,"> > Actually, after reviewing my code, I realized that this density screening only applies in the RHF case, I need to modify the code slightly to make it work with UHF. I derived an expression for the density contribution in the UHF case (the Schwarz contribution will be the same):; > > [Density Screening UHF.pdf](https://github.com/psi4/psi4/files/5804430/Density.Screening.UHF.pdf); > ; > Wait, you are screening with respect to the energy contribution? This leads to incorrect results, since the contribution to the Fock matrix can still be non-negligible even if the contribution to the exchange energy is small. The screening should therefore be based on; > ; > 1. the Coulomb contribution; > 2. the alpha and beta exchange contributions; > ; > If I remember correctly, many authors suggest doing Coulomb separately from exchange, since the range of the exchange integrals is much smaller than that of the Coulomb, while forming the exchange matrix is more costly than the Coulomb matrix due to the larger amount of permutations involved.; > ; > The difference between RHF and UHF screening should be trivial; instead of considering the density matrix |D/2|, you just take max(|Dalpha|, |Dbeta|) as your proxy. That makes sense, thank you Susi, I will modify the code (prob tomorrow), and rerun the UHF tests, as well as some RHF tests to make sure the RHF still works",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-758906841
https://github.com/psi4/psi4/pull/2062#issuecomment-758906841:1337,Testability,test,tests,1337,"> > Actually, after reviewing my code, I realized that this density screening only applies in the RHF case, I need to modify the code slightly to make it work with UHF. I derived an expression for the density contribution in the UHF case (the Schwarz contribution will be the same):; > > [Density Screening UHF.pdf](https://github.com/psi4/psi4/files/5804430/Density.Screening.UHF.pdf); > ; > Wait, you are screening with respect to the energy contribution? This leads to incorrect results, since the contribution to the Fock matrix can still be non-negligible even if the contribution to the exchange energy is small. The screening should therefore be based on; > ; > 1. the Coulomb contribution; > 2. the alpha and beta exchange contributions; > ; > If I remember correctly, many authors suggest doing Coulomb separately from exchange, since the range of the exchange integrals is much smaller than that of the Coulomb, while forming the exchange matrix is more costly than the Coulomb matrix due to the larger amount of permutations involved.; > ; > The difference between RHF and UHF screening should be trivial; instead of considering the density matrix |D/2|, you just take max(|Dalpha|, |Dbeta|) as your proxy. That makes sense, thank you Susi, I will modify the code (prob tomorrow), and rerun the UHF tests, as well as some RHF tests to make sure the RHF still works",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-758906841
https://github.com/psi4/psi4/pull/2062#issuecomment-759736713:16,Deployability,update,updated,16,"Hey all, I have updated the code to account for the two density matrices present in UHF. I ran a couple of tests. UHF does just as well as RHF for similar test cases with respect to screening and parallel performance. I have also discovered that density screening is not very effective for systems with diffuse basis sets (like aug-cc-pvdz)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-759736713
https://github.com/psi4/psi4/pull/2062#issuecomment-759736713:205,Performance,perform,performance,205,"Hey all, I have updated the code to account for the two density matrices present in UHF. I ran a couple of tests. UHF does just as well as RHF for similar test cases with respect to screening and parallel performance. I have also discovered that density screening is not very effective for systems with diffuse basis sets (like aug-cc-pvdz)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-759736713
https://github.com/psi4/psi4/pull/2062#issuecomment-759736713:107,Testability,test,tests,107,"Hey all, I have updated the code to account for the two density matrices present in UHF. I ran a couple of tests. UHF does just as well as RHF for similar test cases with respect to screening and parallel performance. I have also discovered that density screening is not very effective for systems with diffuse basis sets (like aug-cc-pvdz)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-759736713
https://github.com/psi4/psi4/pull/2062#issuecomment-759736713:155,Testability,test,test,155,"Hey all, I have updated the code to account for the two density matrices present in UHF. I ran a couple of tests. UHF does just as well as RHF for similar test cases with respect to screening and parallel performance. I have also discovered that density screening is not very effective for systems with diffuse basis sets (like aug-cc-pvdz)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-759736713
https://github.com/psi4/psi4/pull/2062#issuecomment-759736847:18,Deployability,update,updated,18,"> Hey all, I have updated the code to account for the two density matrices present in UHF.; > ; > I ran a couple of tests. UHF does just as well as RHF for similar test cases with respect to screening and parallel performance.; > ; > I have also discovered that density screening is not very effective for systems with diffuse basis sets (like aug-cc-pvdz). Link to my tests:. https://docs.google.com/spreadsheets/d/1PDt8LPHo_kWV-ukY3Zm24qJUc-QLf5Cv7CXCKkYzFvs/edit?usp=sharing",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-759736847
https://github.com/psi4/psi4/pull/2062#issuecomment-759736847:214,Performance,perform,performance,214,"> Hey all, I have updated the code to account for the two density matrices present in UHF.; > ; > I ran a couple of tests. UHF does just as well as RHF for similar test cases with respect to screening and parallel performance.; > ; > I have also discovered that density screening is not very effective for systems with diffuse basis sets (like aug-cc-pvdz). Link to my tests:. https://docs.google.com/spreadsheets/d/1PDt8LPHo_kWV-ukY3Zm24qJUc-QLf5Cv7CXCKkYzFvs/edit?usp=sharing",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-759736847
https://github.com/psi4/psi4/pull/2062#issuecomment-759736847:116,Testability,test,tests,116,"> Hey all, I have updated the code to account for the two density matrices present in UHF.; > ; > I ran a couple of tests. UHF does just as well as RHF for similar test cases with respect to screening and parallel performance.; > ; > I have also discovered that density screening is not very effective for systems with diffuse basis sets (like aug-cc-pvdz). Link to my tests:. https://docs.google.com/spreadsheets/d/1PDt8LPHo_kWV-ukY3Zm24qJUc-QLf5Cv7CXCKkYzFvs/edit?usp=sharing",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-759736847
https://github.com/psi4/psi4/pull/2062#issuecomment-759736847:164,Testability,test,test,164,"> Hey all, I have updated the code to account for the two density matrices present in UHF.; > ; > I ran a couple of tests. UHF does just as well as RHF for similar test cases with respect to screening and parallel performance.; > ; > I have also discovered that density screening is not very effective for systems with diffuse basis sets (like aug-cc-pvdz). Link to my tests:. https://docs.google.com/spreadsheets/d/1PDt8LPHo_kWV-ukY3Zm24qJUc-QLf5Cv7CXCKkYzFvs/edit?usp=sharing",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-759736847
https://github.com/psi4/psi4/pull/2062#issuecomment-759736847:369,Testability,test,tests,369,"> Hey all, I have updated the code to account for the two density matrices present in UHF.; > ; > I ran a couple of tests. UHF does just as well as RHF for similar test cases with respect to screening and parallel performance.; > ; > I have also discovered that density screening is not very effective for systems with diffuse basis sets (like aug-cc-pvdz). Link to my tests:. https://docs.google.com/spreadsheets/d/1PDt8LPHo_kWV-ukY3Zm24qJUc-QLf5Cv7CXCKkYzFvs/edit?usp=sharing",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-759736847
https://github.com/psi4/psi4/pull/2063#issuecomment-743485611:143,Availability,avail,available,143,"> No py-side changes needed for 3.9 to work? Nice!. nope! I tested it a month ago with c-f 3.9, and it built first time. now the py39 stack is available on defaults, so we're good to go. (there's a p4 conda package up now, but it's built from this branch, not master, so I'll pull it soon.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2063#issuecomment-743485611
https://github.com/psi4/psi4/pull/2063#issuecomment-743485611:60,Testability,test,tested,60,"> No py-side changes needed for 3.9 to work? Nice!. nope! I tested it a month ago with c-f 3.9, and it built first time. now the py39 stack is available on defaults, so we're good to go. (there's a p4 conda package up now, but it's built from this branch, not master, so I'll pull it soon.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2063#issuecomment-743485611
https://github.com/psi4/psi4/pull/2064#issuecomment-745855220:277,Availability,error,error,277,"whoops, we forgot that this PR was adding a setter to accompany an existing getter, not exposing afresh, so a change in case was not appropriate. as usual, v2rdm found the trouble:. ```; /Users/github/builds/conda-builds/v2rdm_casscf_1608103337174/work/v2rdm_solver.cc:420:57: error: no member named 'Lagrangian' in 'psi::Wavefunction'; did you mean 'lagrangian'?; Lagrangian_ = SharedMatrix(reference_wavefunction_->Lagrangian());; ^~~~~~~~~~; lagrangian; /Users/github/builds/conda-builds/v2rdm_casscf_1608103337174/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeho/include/psi4/libmints/wavefunction.h:576:18: note: 'lagrangian' declared here; SharedMatrix lagrangian() const;; ^; ```. Please change back to caps C-side. I'm inclined to have Py-side match C-side, but there's leeway for the export_ files. Sorry for the zigzag advice, @lcyyork.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2064#issuecomment-745855220
https://github.com/psi4/psi4/pull/2065#issuecomment-744433410:386,Availability,failure,failure,386,"I think the verbose output is ok here, @hokru , because pytest suppresses the output by default. If the test happens to fail, running that test with output enabled could help with debugging possibly. I totally agree that the CTests inputs should stay minimal because they ultimately get converted into sample inputs for users to have as starting points for job inputs. The Windows test failure looks like we need a `using_resp` like mechanism to conditionally activate resp; I'm sure you have it under control, Lori.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2065#issuecomment-744433410
https://github.com/psi4/psi4/pull/2065#issuecomment-744433410:104,Testability,test,test,104,"I think the verbose output is ok here, @hokru , because pytest suppresses the output by default. If the test happens to fail, running that test with output enabled could help with debugging possibly. I totally agree that the CTests inputs should stay minimal because they ultimately get converted into sample inputs for users to have as starting points for job inputs. The Windows test failure looks like we need a `using_resp` like mechanism to conditionally activate resp; I'm sure you have it under control, Lori.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2065#issuecomment-744433410
https://github.com/psi4/psi4/pull/2065#issuecomment-744433410:139,Testability,test,test,139,"I think the verbose output is ok here, @hokru , because pytest suppresses the output by default. If the test happens to fail, running that test with output enabled could help with debugging possibly. I totally agree that the CTests inputs should stay minimal because they ultimately get converted into sample inputs for users to have as starting points for job inputs. The Windows test failure looks like we need a `using_resp` like mechanism to conditionally activate resp; I'm sure you have it under control, Lori.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2065#issuecomment-744433410
https://github.com/psi4/psi4/pull/2065#issuecomment-744433410:381,Testability,test,test,381,"I think the verbose output is ok here, @hokru , because pytest suppresses the output by default. If the test happens to fail, running that test with output enabled could help with debugging possibly. I totally agree that the CTests inputs should stay minimal because they ultimately get converted into sample inputs for users to have as starting points for job inputs. The Windows test failure looks like we need a `using_resp` like mechanism to conditionally activate resp; I'm sure you have it under control, Lori.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2065#issuecomment-744433410
https://github.com/psi4/psi4/pull/2069#issuecomment-771874219:316,Energy Efficiency,charge,charges,316,"Oops, I missed your comment. The old `addBasis` still works the same way, and the normalization associated with it is appropriate for external basis functions derived from density fitting. In QM/MM we normally want some Gaussians at different points in space, and in this case we want unit normalization so that the charges, dipoles, etc. specified don't need to be adjusted. Essentially there are two use cases, and I just added a new one here. Not really a bug fix, but also harmless if we want it in 1.4 - entirely up to you. It gives us a backend that can be tested for the multipole interface at least :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2069#issuecomment-771874219
https://github.com/psi4/psi4/pull/2069#issuecomment-771874219:588,Integrability,interface,interface,588,"Oops, I missed your comment. The old `addBasis` still works the same way, and the normalization associated with it is appropriate for external basis functions derived from density fitting. In QM/MM we normally want some Gaussians at different points in space, and in this case we want unit normalization so that the charges, dipoles, etc. specified don't need to be adjusted. Essentially there are two use cases, and I just added a new one here. Not really a bug fix, but also harmless if we want it in 1.4 - entirely up to you. It gives us a backend that can be tested for the multipole interface at least :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2069#issuecomment-771874219
https://github.com/psi4/psi4/pull/2069#issuecomment-771874219:563,Testability,test,tested,563,"Oops, I missed your comment. The old `addBasis` still works the same way, and the normalization associated with it is appropriate for external basis functions derived from density fitting. In QM/MM we normally want some Gaussians at different points in space, and in this case we want unit normalization so that the charges, dipoles, etc. specified don't need to be adjusted. Essentially there are two use cases, and I just added a new one here. Not really a bug fix, but also harmless if we want it in 1.4 - entirely up to you. It gives us a backend that can be tested for the multipole interface at least :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2069#issuecomment-771874219
https://github.com/psi4/psi4/issues/2071#issuecomment-748970773:0,Deployability,Upgrade,Upgrade,0,"Upgrade your version of Psi4. If you want TD-DFT, I suggest you use the [nightly build here](https://psicode.org/installs/v132/). TD-DFT calculations are being added in version 1.4. You can see a guide on how to perform TD-DFT [here](https://www.youtube.com/watch?v=MmG-g3SEFbk).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2071#issuecomment-748970773
https://github.com/psi4/psi4/issues/2071#issuecomment-748970773:113,Deployability,install,installs,113,"Upgrade your version of Psi4. If you want TD-DFT, I suggest you use the [nightly build here](https://psicode.org/installs/v132/). TD-DFT calculations are being added in version 1.4. You can see a guide on how to perform TD-DFT [here](https://www.youtube.com/watch?v=MmG-g3SEFbk).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2071#issuecomment-748970773
https://github.com/psi4/psi4/issues/2071#issuecomment-748970773:212,Performance,perform,perform,212,"Upgrade your version of Psi4. If you want TD-DFT, I suggest you use the [nightly build here](https://psicode.org/installs/v132/). TD-DFT calculations are being added in version 1.4. You can see a guide on how to perform TD-DFT [here](https://www.youtube.com/watch?v=MmG-g3SEFbk).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2071#issuecomment-748970773
https://github.com/psi4/psi4/issues/2071#issuecomment-748970773:196,Usability,guid,guide,196,"Upgrade your version of Psi4. If you want TD-DFT, I suggest you use the [nightly build here](https://psicode.org/installs/v132/). TD-DFT calculations are being added in version 1.4. You can see a guide on how to perform TD-DFT [here](https://www.youtube.com/watch?v=MmG-g3SEFbk).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2071#issuecomment-748970773
https://github.com/psi4/psi4/issues/2071#issuecomment-750716944:65,Deployability,update,update,65,"Somewhere I saw a question about whether psi4 in psi4conda could update. . tl;dr no, create a new environment instead, as you'll get the latest, and it's far more predictable. Technically, yes, `conda update psi4 -c psi4` should get you the latest stable release, v1.3.2 from mid-2019, or `conda update psi4 -c psi4/label/dev` should get you the latest nightly build from this week. However, practical advice is that whenever your psi4 is more than a few months old, don't update, just create a new environment, `conda create -n <env-name-of-your-choice> python=3.<python-version-of-your-choice> psi4 -c psi4/label/dev`, activate that env, and use that new psi4 instead of the (remaining, still functional) psi4 in the main environment of psi4conda. The reasons that a freshly solved environment is better is that: (1) Far upstream packages like mkl or numpy or hdf5 update over time and new psi4 may not be built against the older ones in the psi4conda env, so you don't get the newest psi. (2) To make psi4-served conda packages easy to use for both compiling and installing binary psi4, I don't pin dependencies very tightly, so the constraints of the env may not allow all the latest packages to be pulled or even a consistent set of packages. Same advice for any psi4 install, not just psi4conda.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2071#issuecomment-750716944
https://github.com/psi4/psi4/issues/2071#issuecomment-750716944:201,Deployability,update,update,201,"Somewhere I saw a question about whether psi4 in psi4conda could update. . tl;dr no, create a new environment instead, as you'll get the latest, and it's far more predictable. Technically, yes, `conda update psi4 -c psi4` should get you the latest stable release, v1.3.2 from mid-2019, or `conda update psi4 -c psi4/label/dev` should get you the latest nightly build from this week. However, practical advice is that whenever your psi4 is more than a few months old, don't update, just create a new environment, `conda create -n <env-name-of-your-choice> python=3.<python-version-of-your-choice> psi4 -c psi4/label/dev`, activate that env, and use that new psi4 instead of the (remaining, still functional) psi4 in the main environment of psi4conda. The reasons that a freshly solved environment is better is that: (1) Far upstream packages like mkl or numpy or hdf5 update over time and new psi4 may not be built against the older ones in the psi4conda env, so you don't get the newest psi. (2) To make psi4-served conda packages easy to use for both compiling and installing binary psi4, I don't pin dependencies very tightly, so the constraints of the env may not allow all the latest packages to be pulled or even a consistent set of packages. Same advice for any psi4 install, not just psi4conda.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2071#issuecomment-750716944
https://github.com/psi4/psi4/issues/2071#issuecomment-750716944:255,Deployability,release,release,255,"Somewhere I saw a question about whether psi4 in psi4conda could update. . tl;dr no, create a new environment instead, as you'll get the latest, and it's far more predictable. Technically, yes, `conda update psi4 -c psi4` should get you the latest stable release, v1.3.2 from mid-2019, or `conda update psi4 -c psi4/label/dev` should get you the latest nightly build from this week. However, practical advice is that whenever your psi4 is more than a few months old, don't update, just create a new environment, `conda create -n <env-name-of-your-choice> python=3.<python-version-of-your-choice> psi4 -c psi4/label/dev`, activate that env, and use that new psi4 instead of the (remaining, still functional) psi4 in the main environment of psi4conda. The reasons that a freshly solved environment is better is that: (1) Far upstream packages like mkl or numpy or hdf5 update over time and new psi4 may not be built against the older ones in the psi4conda env, so you don't get the newest psi. (2) To make psi4-served conda packages easy to use for both compiling and installing binary psi4, I don't pin dependencies very tightly, so the constraints of the env may not allow all the latest packages to be pulled or even a consistent set of packages. Same advice for any psi4 install, not just psi4conda.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2071#issuecomment-750716944
https://github.com/psi4/psi4/issues/2071#issuecomment-750716944:296,Deployability,update,update,296,"Somewhere I saw a question about whether psi4 in psi4conda could update. . tl;dr no, create a new environment instead, as you'll get the latest, and it's far more predictable. Technically, yes, `conda update psi4 -c psi4` should get you the latest stable release, v1.3.2 from mid-2019, or `conda update psi4 -c psi4/label/dev` should get you the latest nightly build from this week. However, practical advice is that whenever your psi4 is more than a few months old, don't update, just create a new environment, `conda create -n <env-name-of-your-choice> python=3.<python-version-of-your-choice> psi4 -c psi4/label/dev`, activate that env, and use that new psi4 instead of the (remaining, still functional) psi4 in the main environment of psi4conda. The reasons that a freshly solved environment is better is that: (1) Far upstream packages like mkl or numpy or hdf5 update over time and new psi4 may not be built against the older ones in the psi4conda env, so you don't get the newest psi. (2) To make psi4-served conda packages easy to use for both compiling and installing binary psi4, I don't pin dependencies very tightly, so the constraints of the env may not allow all the latest packages to be pulled or even a consistent set of packages. Same advice for any psi4 install, not just psi4conda.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2071#issuecomment-750716944
https://github.com/psi4/psi4/issues/2071#issuecomment-750716944:473,Deployability,update,update,473,"Somewhere I saw a question about whether psi4 in psi4conda could update. . tl;dr no, create a new environment instead, as you'll get the latest, and it's far more predictable. Technically, yes, `conda update psi4 -c psi4` should get you the latest stable release, v1.3.2 from mid-2019, or `conda update psi4 -c psi4/label/dev` should get you the latest nightly build from this week. However, practical advice is that whenever your psi4 is more than a few months old, don't update, just create a new environment, `conda create -n <env-name-of-your-choice> python=3.<python-version-of-your-choice> psi4 -c psi4/label/dev`, activate that env, and use that new psi4 instead of the (remaining, still functional) psi4 in the main environment of psi4conda. The reasons that a freshly solved environment is better is that: (1) Far upstream packages like mkl or numpy or hdf5 update over time and new psi4 may not be built against the older ones in the psi4conda env, so you don't get the newest psi. (2) To make psi4-served conda packages easy to use for both compiling and installing binary psi4, I don't pin dependencies very tightly, so the constraints of the env may not allow all the latest packages to be pulled or even a consistent set of packages. Same advice for any psi4 install, not just psi4conda.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2071#issuecomment-750716944
https://github.com/psi4/psi4/issues/2071#issuecomment-750716944:867,Deployability,update,update,867,"Somewhere I saw a question about whether psi4 in psi4conda could update. . tl;dr no, create a new environment instead, as you'll get the latest, and it's far more predictable. Technically, yes, `conda update psi4 -c psi4` should get you the latest stable release, v1.3.2 from mid-2019, or `conda update psi4 -c psi4/label/dev` should get you the latest nightly build from this week. However, practical advice is that whenever your psi4 is more than a few months old, don't update, just create a new environment, `conda create -n <env-name-of-your-choice> python=3.<python-version-of-your-choice> psi4 -c psi4/label/dev`, activate that env, and use that new psi4 instead of the (remaining, still functional) psi4 in the main environment of psi4conda. The reasons that a freshly solved environment is better is that: (1) Far upstream packages like mkl or numpy or hdf5 update over time and new psi4 may not be built against the older ones in the psi4conda env, so you don't get the newest psi. (2) To make psi4-served conda packages easy to use for both compiling and installing binary psi4, I don't pin dependencies very tightly, so the constraints of the env may not allow all the latest packages to be pulled or even a consistent set of packages. Same advice for any psi4 install, not just psi4conda.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2071#issuecomment-750716944
https://github.com/psi4/psi4/issues/2071#issuecomment-750716944:1066,Deployability,install,installing,1066,"Somewhere I saw a question about whether psi4 in psi4conda could update. . tl;dr no, create a new environment instead, as you'll get the latest, and it's far more predictable. Technically, yes, `conda update psi4 -c psi4` should get you the latest stable release, v1.3.2 from mid-2019, or `conda update psi4 -c psi4/label/dev` should get you the latest nightly build from this week. However, practical advice is that whenever your psi4 is more than a few months old, don't update, just create a new environment, `conda create -n <env-name-of-your-choice> python=3.<python-version-of-your-choice> psi4 -c psi4/label/dev`, activate that env, and use that new psi4 instead of the (remaining, still functional) psi4 in the main environment of psi4conda. The reasons that a freshly solved environment is better is that: (1) Far upstream packages like mkl or numpy or hdf5 update over time and new psi4 may not be built against the older ones in the psi4conda env, so you don't get the newest psi. (2) To make psi4-served conda packages easy to use for both compiling and installing binary psi4, I don't pin dependencies very tightly, so the constraints of the env may not allow all the latest packages to be pulled or even a consistent set of packages. Same advice for any psi4 install, not just psi4conda.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2071#issuecomment-750716944
https://github.com/psi4/psi4/issues/2071#issuecomment-750716944:1273,Deployability,install,install,1273,"Somewhere I saw a question about whether psi4 in psi4conda could update. . tl;dr no, create a new environment instead, as you'll get the latest, and it's far more predictable. Technically, yes, `conda update psi4 -c psi4` should get you the latest stable release, v1.3.2 from mid-2019, or `conda update psi4 -c psi4/label/dev` should get you the latest nightly build from this week. However, practical advice is that whenever your psi4 is more than a few months old, don't update, just create a new environment, `conda create -n <env-name-of-your-choice> python=3.<python-version-of-your-choice> psi4 -c psi4/label/dev`, activate that env, and use that new psi4 instead of the (remaining, still functional) psi4 in the main environment of psi4conda. The reasons that a freshly solved environment is better is that: (1) Far upstream packages like mkl or numpy or hdf5 update over time and new psi4 may not be built against the older ones in the psi4conda env, so you don't get the newest psi. (2) To make psi4-served conda packages easy to use for both compiling and installing binary psi4, I don't pin dependencies very tightly, so the constraints of the env may not allow all the latest packages to be pulled or even a consistent set of packages. Same advice for any psi4 install, not just psi4conda.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2071#issuecomment-750716944
https://github.com/psi4/psi4/issues/2071#issuecomment-750716944:1102,Integrability,depend,dependencies,1102,"Somewhere I saw a question about whether psi4 in psi4conda could update. . tl;dr no, create a new environment instead, as you'll get the latest, and it's far more predictable. Technically, yes, `conda update psi4 -c psi4` should get you the latest stable release, v1.3.2 from mid-2019, or `conda update psi4 -c psi4/label/dev` should get you the latest nightly build from this week. However, practical advice is that whenever your psi4 is more than a few months old, don't update, just create a new environment, `conda create -n <env-name-of-your-choice> python=3.<python-version-of-your-choice> psi4 -c psi4/label/dev`, activate that env, and use that new psi4 instead of the (remaining, still functional) psi4 in the main environment of psi4conda. The reasons that a freshly solved environment is better is that: (1) Far upstream packages like mkl or numpy or hdf5 update over time and new psi4 may not be built against the older ones in the psi4conda env, so you don't get the newest psi. (2) To make psi4-served conda packages easy to use for both compiling and installing binary psi4, I don't pin dependencies very tightly, so the constraints of the env may not allow all the latest packages to be pulled or even a consistent set of packages. Same advice for any psi4 install, not just psi4conda.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2071#issuecomment-750716944
https://github.com/psi4/psi4/issues/2071#issuecomment-750716944:163,Safety,predict,predictable,163,"Somewhere I saw a question about whether psi4 in psi4conda could update. . tl;dr no, create a new environment instead, as you'll get the latest, and it's far more predictable. Technically, yes, `conda update psi4 -c psi4` should get you the latest stable release, v1.3.2 from mid-2019, or `conda update psi4 -c psi4/label/dev` should get you the latest nightly build from this week. However, practical advice is that whenever your psi4 is more than a few months old, don't update, just create a new environment, `conda create -n <env-name-of-your-choice> python=3.<python-version-of-your-choice> psi4 -c psi4/label/dev`, activate that env, and use that new psi4 instead of the (remaining, still functional) psi4 in the main environment of psi4conda. The reasons that a freshly solved environment is better is that: (1) Far upstream packages like mkl or numpy or hdf5 update over time and new psi4 may not be built against the older ones in the psi4conda env, so you don't get the newest psi. (2) To make psi4-served conda packages easy to use for both compiling and installing binary psi4, I don't pin dependencies very tightly, so the constraints of the env may not allow all the latest packages to be pulled or even a consistent set of packages. Same advice for any psi4 install, not just psi4conda.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2071#issuecomment-750716944
https://github.com/psi4/psi4/pull/2072#issuecomment-749163814:53,Testability,test,tested,53,"Could you add to the description how correctness was tested?. So writing densities for FCHK files should work with these changes?; So far OCC is turned off now: https://github.com/psi4/psi4/blob/master/psi4/driver/driver.py#L1984; (Should then probably be enabled in another PR, perhaps with test)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-749163814
https://github.com/psi4/psi4/pull/2072#issuecomment-749163814:292,Testability,test,test,292,"Could you add to the description how correctness was tested?. So writing densities for FCHK files should work with these changes?; So far OCC is turned off now: https://github.com/psi4/psi4/blob/master/psi4/driver/driver.py#L1984; (Should then probably be enabled in another PR, perhaps with test)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-749163814
https://github.com/psi4/psi4/pull/2072#issuecomment-758364610:6,Testability,test,test,6,"Add a test that checks something this fixes, then lgtm. Thanks for the contribution!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-758364610
https://github.com/psi4/psi4/pull/2072#issuecomment-767076906:27,Testability,test,test,27,"Please do add or suggest a test for this when you get a chance. If fchk is appropriate to enable, that testing structure is in place.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767076906
https://github.com/psi4/psi4/pull/2072#issuecomment-767076906:103,Testability,test,testing,103,"Please do add or suggest a test for this when you get a chance. If fchk is appropriate to enable, that testing structure is in place.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767076906
https://github.com/psi4/psi4/pull/2072#issuecomment-767091324:385,Availability,fault,fault,385,"Between the two of you, the two of us are confused about what kinds of tests you want. * Holger asked about correctness tests. Lori hasn't raised the issue. This issue wasn't raised during my earlier ""density to wavefunction"" PRs, so I don't understand why we're doubting its correctness now. This is the same code as I used to bring densities over then. If there is a bug, that's the fault of `occ` and outside the scope of this PR. (And while we _could_ test correctness for the 1RDM, that requires adding occ properties. Which we could do, but is outside the scope of this PR.); * Holger asked if FCHK can be enabled but said that would be for a different PR. Lori says that may be appropriate for this PR. This is a straight contradiction, and we're confused which you want.; * While it's also possible to test `compute_fvpi`, I cannot recall one other case of a simple Pybind requiring a test, so I'm not sure what we'd be testing. Correctness? That this function can be called Python side?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767091324
https://github.com/psi4/psi4/pull/2072#issuecomment-767091324:71,Testability,test,tests,71,"Between the two of you, the two of us are confused about what kinds of tests you want. * Holger asked about correctness tests. Lori hasn't raised the issue. This issue wasn't raised during my earlier ""density to wavefunction"" PRs, so I don't understand why we're doubting its correctness now. This is the same code as I used to bring densities over then. If there is a bug, that's the fault of `occ` and outside the scope of this PR. (And while we _could_ test correctness for the 1RDM, that requires adding occ properties. Which we could do, but is outside the scope of this PR.); * Holger asked if FCHK can be enabled but said that would be for a different PR. Lori says that may be appropriate for this PR. This is a straight contradiction, and we're confused which you want.; * While it's also possible to test `compute_fvpi`, I cannot recall one other case of a simple Pybind requiring a test, so I'm not sure what we'd be testing. Correctness? That this function can be called Python side?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767091324
https://github.com/psi4/psi4/pull/2072#issuecomment-767091324:120,Testability,test,tests,120,"Between the two of you, the two of us are confused about what kinds of tests you want. * Holger asked about correctness tests. Lori hasn't raised the issue. This issue wasn't raised during my earlier ""density to wavefunction"" PRs, so I don't understand why we're doubting its correctness now. This is the same code as I used to bring densities over then. If there is a bug, that's the fault of `occ` and outside the scope of this PR. (And while we _could_ test correctness for the 1RDM, that requires adding occ properties. Which we could do, but is outside the scope of this PR.); * Holger asked if FCHK can be enabled but said that would be for a different PR. Lori says that may be appropriate for this PR. This is a straight contradiction, and we're confused which you want.; * While it's also possible to test `compute_fvpi`, I cannot recall one other case of a simple Pybind requiring a test, so I'm not sure what we'd be testing. Correctness? That this function can be called Python side?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767091324
https://github.com/psi4/psi4/pull/2072#issuecomment-767091324:456,Testability,test,test,456,"Between the two of you, the two of us are confused about what kinds of tests you want. * Holger asked about correctness tests. Lori hasn't raised the issue. This issue wasn't raised during my earlier ""density to wavefunction"" PRs, so I don't understand why we're doubting its correctness now. This is the same code as I used to bring densities over then. If there is a bug, that's the fault of `occ` and outside the scope of this PR. (And while we _could_ test correctness for the 1RDM, that requires adding occ properties. Which we could do, but is outside the scope of this PR.); * Holger asked if FCHK can be enabled but said that would be for a different PR. Lori says that may be appropriate for this PR. This is a straight contradiction, and we're confused which you want.; * While it's also possible to test `compute_fvpi`, I cannot recall one other case of a simple Pybind requiring a test, so I'm not sure what we'd be testing. Correctness? That this function can be called Python side?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767091324
https://github.com/psi4/psi4/pull/2072#issuecomment-767091324:810,Testability,test,test,810,"Between the two of you, the two of us are confused about what kinds of tests you want. * Holger asked about correctness tests. Lori hasn't raised the issue. This issue wasn't raised during my earlier ""density to wavefunction"" PRs, so I don't understand why we're doubting its correctness now. This is the same code as I used to bring densities over then. If there is a bug, that's the fault of `occ` and outside the scope of this PR. (And while we _could_ test correctness for the 1RDM, that requires adding occ properties. Which we could do, but is outside the scope of this PR.); * Holger asked if FCHK can be enabled but said that would be for a different PR. Lori says that may be appropriate for this PR. This is a straight contradiction, and we're confused which you want.; * While it's also possible to test `compute_fvpi`, I cannot recall one other case of a simple Pybind requiring a test, so I'm not sure what we'd be testing. Correctness? That this function can be called Python side?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767091324
https://github.com/psi4/psi4/pull/2072#issuecomment-767091324:893,Testability,test,test,893,"Between the two of you, the two of us are confused about what kinds of tests you want. * Holger asked about correctness tests. Lori hasn't raised the issue. This issue wasn't raised during my earlier ""density to wavefunction"" PRs, so I don't understand why we're doubting its correctness now. This is the same code as I used to bring densities over then. If there is a bug, that's the fault of `occ` and outside the scope of this PR. (And while we _could_ test correctness for the 1RDM, that requires adding occ properties. Which we could do, but is outside the scope of this PR.); * Holger asked if FCHK can be enabled but said that would be for a different PR. Lori says that may be appropriate for this PR. This is a straight contradiction, and we're confused which you want.; * While it's also possible to test `compute_fvpi`, I cannot recall one other case of a simple Pybind requiring a test, so I'm not sure what we'd be testing. Correctness? That this function can be called Python side?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767091324
https://github.com/psi4/psi4/pull/2072#issuecomment-767091324:928,Testability,test,testing,928,"Between the two of you, the two of us are confused about what kinds of tests you want. * Holger asked about correctness tests. Lori hasn't raised the issue. This issue wasn't raised during my earlier ""density to wavefunction"" PRs, so I don't understand why we're doubting its correctness now. This is the same code as I used to bring densities over then. If there is a bug, that's the fault of `occ` and outside the scope of this PR. (And while we _could_ test correctness for the 1RDM, that requires adding occ properties. Which we could do, but is outside the scope of this PR.); * Holger asked if FCHK can be enabled but said that would be for a different PR. Lori says that may be appropriate for this PR. This is a straight contradiction, and we're confused which you want.; * While it's also possible to test `compute_fvpi`, I cannot recall one other case of a simple Pybind requiring a test, so I'm not sure what we'd be testing. Correctness? That this function can be called Python side?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767091324
https://github.com/psi4/psi4/pull/2072#issuecomment-767091324:867,Usability,simpl,simple,867,"Between the two of you, the two of us are confused about what kinds of tests you want. * Holger asked about correctness tests. Lori hasn't raised the issue. This issue wasn't raised during my earlier ""density to wavefunction"" PRs, so I don't understand why we're doubting its correctness now. This is the same code as I used to bring densities over then. If there is a bug, that's the fault of `occ` and outside the scope of this PR. (And while we _could_ test correctness for the 1RDM, that requires adding occ properties. Which we could do, but is outside the scope of this PR.); * Holger asked if FCHK can be enabled but said that would be for a different PR. Lori says that may be appropriate for this PR. This is a straight contradiction, and we're confused which you want.; * While it's also possible to test `compute_fvpi`, I cannot recall one other case of a simple Pybind requiring a test, so I'm not sure what we'd be testing. Correctness? That this function can be called Python side?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767091324
https://github.com/psi4/psi4/pull/2072#issuecomment-767119536:35,Testability,test,testing,35,"Sorry for the confusion. Right, no testing needed for a pybinding. For the densities, I was looking for ""is this code exercised in the test suite?"" and ""if not, how can we avert someone breaking this later?"". If such a test is tricky to construct and you're regarding this as more a better-process than a new-numbers PR, then plausible to wait for any occ bugs to crawl out later.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767119536
https://github.com/psi4/psi4/pull/2072#issuecomment-767119536:135,Testability,test,test,135,"Sorry for the confusion. Right, no testing needed for a pybinding. For the densities, I was looking for ""is this code exercised in the test suite?"" and ""if not, how can we avert someone breaking this later?"". If such a test is tricky to construct and you're regarding this as more a better-process than a new-numbers PR, then plausible to wait for any occ bugs to crawl out later.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767119536
https://github.com/psi4/psi4/pull/2072#issuecomment-767119536:219,Testability,test,test,219,"Sorry for the confusion. Right, no testing needed for a pybinding. For the densities, I was looking for ""is this code exercised in the test suite?"" and ""if not, how can we avert someone breaking this later?"". If such a test is tricky to construct and you're regarding this as more a better-process than a new-numbers PR, then plausible to wait for any occ bugs to crawl out later.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767119536
https://github.com/psi4/psi4/pull/2072#issuecomment-767124709:79,Security,access,accessible,79,"This isn't a new numbers PR. This is a ""make numbers that are already computed accessible"" PR. I know how to test this one: hook up `occ` properties, and add this to `test_dipoles`. I can do that, but that's involved enough to be a separate PR, and one for me, not for Nate.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767124709
https://github.com/psi4/psi4/pull/2072#issuecomment-767124709:109,Testability,test,test,109,"This isn't a new numbers PR. This is a ""make numbers that are already computed accessible"" PR. I know how to test this one: hook up `occ` properties, and add this to `test_dipoles`. I can do that, but that's involved enough to be a separate PR, and one for me, not for Nate.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767124709
https://github.com/psi4/psi4/pull/2072#issuecomment-767165337:232,Availability,down,down,232,"> * Holger asked about correctness tests. Sorry if I was unclear. I only wanted a sentence about how correctness was tested (or which other code was followed) for completeness of the PR body. Just in case one has to track something down.; Maybe in this more trivial case it's not needed, I don't think I looked at the code changes then.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767165337
https://github.com/psi4/psi4/pull/2072#issuecomment-767165337:35,Testability,test,tests,35,"> * Holger asked about correctness tests. Sorry if I was unclear. I only wanted a sentence about how correctness was tested (or which other code was followed) for completeness of the PR body. Just in case one has to track something down.; Maybe in this more trivial case it's not needed, I don't think I looked at the code changes then.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767165337
https://github.com/psi4/psi4/pull/2072#issuecomment-767165337:117,Testability,test,tested,117,"> * Holger asked about correctness tests. Sorry if I was unclear. I only wanted a sentence about how correctness was tested (or which other code was followed) for completeness of the PR body. Just in case one has to track something down.; Maybe in this more trivial case it's not needed, I don't think I looked at the code changes then.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767165337
https://github.com/psi4/psi4/pull/2073#issuecomment-753708783:34,Testability,test,test,34,"> A reference output file for the test would be great - I think we're still collecting those?. I agree; I just am unable to build Psi4 #2046, so I can't get you one for the new feature. It also looks like the CI system can't build Psi4 at the moment.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2073#issuecomment-753708783
https://github.com/psi4/psi4/pull/2073#issuecomment-767629805:225,Energy Efficiency,Energy,Energy,225,"I've tried this out, and tests are clean. However, the output is confusing with no iterations printed. Fortunately, the same effect can be had with `fail_on_maxiter=False`. Then the output is:. ```. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @RKS iter 0: -128.84964605391272 -1.28850e+02 1.60374e-02. PsiException: Could not converge SCF iterations in 0 iterations. Energy and/or wave function did not converge, but proceeding anyway.; ```. Function reorganization is good, imo. I'll suggest edits.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2073#issuecomment-767629805
https://github.com/psi4/psi4/pull/2073#issuecomment-767629805:377,Energy Efficiency,Energy,Energy,377,"I've tried this out, and tests are clean. However, the output is confusing with no iterations printed. Fortunately, the same effect can be had with `fail_on_maxiter=False`. Then the output is:. ```. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @RKS iter 0: -128.84964605391272 -1.28850e+02 1.60374e-02. PsiException: Could not converge SCF iterations in 0 iterations. Energy and/or wave function did not converge, but proceeding anyway.; ```. Function reorganization is good, imo. I'll suggest edits.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2073#issuecomment-767629805
https://github.com/psi4/psi4/pull/2073#issuecomment-767629805:25,Testability,test,tests,25,"I've tried this out, and tests are clean. However, the output is confusing with no iterations printed. Fortunately, the same effect can be had with `fail_on_maxiter=False`. Then the output is:. ```. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @RKS iter 0: -128.84964605391272 -1.28850e+02 1.60374e-02. PsiException: Could not converge SCF iterations in 0 iterations. Energy and/or wave function did not converge, but proceeding anyway.; ```. Function reorganization is good, imo. I'll suggest edits.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2073#issuecomment-767629805
https://github.com/psi4/psi4/pull/2073#issuecomment-784450007:64,Integrability,rout,route,64,Did you get a change to look at this and see if the alternative route does what you need?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2073#issuecomment-784450007
https://github.com/psi4/psi4/pull/2073#issuecomment-784464192:241,Deployability,update,updated,241,"Oh, I see you suggested some code changes. I guess that would do the trick; however, the point of `set maxiter 0` is exactly that one would not need to `set fail_on_maxiter false` since taking 0 SCF iterations means that the orbitals aren't updated. `fail_on_maxiter` should only be checked if `maxiter > 0`!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2073#issuecomment-784464192
https://github.com/psi4/psi4/pull/2073#issuecomment-784475485:232,Integrability,interface,interface,232,"Hmm, the combo `maxiter=0, fail_on_maxiter=false` is averting the naive (or greedy) user who wants the convergence stamp _and_ ""minimal"" iterations, as opposed to someone who knows what he's doing and using maxiter as a declarative interface. If others like the exception for maxiter=0, I'll go along with it, but my inclination is for consistency with all other maxiter != 0.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2073#issuecomment-784475485
https://github.com/psi4/psi4/pull/2073#issuecomment-784545976:141,Energy Efficiency,energy,energy,141,"`maxiter = 0` is fundamentally different from `maxiter>0`. Again, in the former no SCF step is even taken; the code should just evaluate the energy. I think there's a limit to the stupidity we can assume from the users...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2073#issuecomment-784545976
https://github.com/psi4/psi4/pull/2073#issuecomment-885927352:261,Energy Efficiency,energy,energy,261,"This PR will have a merge conflict with my #2247. I wasn't comfortable touching the SCF code this close to 1.4 _then_, and I'm still not comfortable with it now. My vote is to keep this as a 1.5 target. I would prefer a dedicated option or keyword argument to `energy` for the short-circuit. Yes, this is a _reasonable_ behavior, but:. 1. Explicit is better than implicit.; 2. The SCF code is too complicated as-it-is due to overloading of the meaning of the `iterations_` variable. It was reasonable in one or two places, but becomes a mess as different parts of the code use it slightly differently. I'm paranoid of variable overloading, and having a special case of `maxiter = 0` is too close to that for comfort.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2073#issuecomment-885927352
https://github.com/psi4/psi4/pull/2073#issuecomment-885927352:473,Modifiability,variab,variable,473,"This PR will have a merge conflict with my #2247. I wasn't comfortable touching the SCF code this close to 1.4 _then_, and I'm still not comfortable with it now. My vote is to keep this as a 1.5 target. I would prefer a dedicated option or keyword argument to `energy` for the short-circuit. Yes, this is a _reasonable_ behavior, but:. 1. Explicit is better than implicit.; 2. The SCF code is too complicated as-it-is due to overloading of the meaning of the `iterations_` variable. It was reasonable in one or two places, but becomes a mess as different parts of the code use it slightly differently. I'm paranoid of variable overloading, and having a special case of `maxiter = 0` is too close to that for comfort.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2073#issuecomment-885927352
https://github.com/psi4/psi4/pull/2073#issuecomment-885927352:618,Modifiability,variab,variable,618,"This PR will have a merge conflict with my #2247. I wasn't comfortable touching the SCF code this close to 1.4 _then_, and I'm still not comfortable with it now. My vote is to keep this as a 1.5 target. I would prefer a dedicated option or keyword argument to `energy` for the short-circuit. Yes, this is a _reasonable_ behavior, but:. 1. Explicit is better than implicit.; 2. The SCF code is too complicated as-it-is due to overloading of the meaning of the `iterations_` variable. It was reasonable in one or two places, but becomes a mess as different parts of the code use it slightly differently. I'm paranoid of variable overloading, and having a special case of `maxiter = 0` is too close to that for comfort.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2073#issuecomment-885927352
https://github.com/psi4/psi4/pull/2074#issuecomment-754136729:117,Testability,log,logs,117,"It looked like there was maybe an [issue with ADCC](https://dev.azure.com/psi4/psi4/_build/results?buildId=2571&view=logs&j=96451287-da82-57a8-2c11-8da7db9ab71a&t=41b51342-9bfb-52c2-7efb-0050141a3f7e&l=14) being pulled from the wrong place and perhaps [numpy missing from the env](https://dev.azure.com/psi4/psi4/_build/results?buildId=2571&view=logs&j=96451287-da82-57a8-2c11-8da7db9ab71a&t=5e4b1b6b-6132-52d3-8c01-735063f4c831&l=18). These may be a side-effect of the pb11 problem, but just wanted to point them out in case you hadn't already seen.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2074#issuecomment-754136729
https://github.com/psi4/psi4/pull/2074#issuecomment-754136729:346,Testability,log,logs,346,"It looked like there was maybe an [issue with ADCC](https://dev.azure.com/psi4/psi4/_build/results?buildId=2571&view=logs&j=96451287-da82-57a8-2c11-8da7db9ab71a&t=41b51342-9bfb-52c2-7efb-0050141a3f7e&l=14) being pulled from the wrong place and perhaps [numpy missing from the env](https://dev.azure.com/psi4/psi4/_build/results?buildId=2571&view=logs&j=96451287-da82-57a8-2c11-8da7db9ab71a&t=5e4b1b6b-6132-52d3-8c01-735063f4c831&l=18). These may be a side-effect of the pb11 problem, but just wanted to point them out in case you hadn't already seen.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2074#issuecomment-754136729
https://github.com/psi4/psi4/pull/2074#issuecomment-754230142:109,Deployability,install,installable,109,"Thanks, @andysim, I hadn't noticed the adcc bit. I've copied over adcc 0.15.6 to psi4/label/dev, so it's all installable with one channel. And the pb11 was getting 2.6.0, not 2.6.1. But otherwise, I'm not sure why it worked three days ago, but not more recently. Ready for review.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2074#issuecomment-754230142
https://github.com/psi4/psi4/issues/2075#issuecomment-769932020:927,Energy Efficiency,energy,energy,927,"@JonathonMisiewicz, you're right. Although it is easy to guarantee the root has the desired M_s, by construction of the determinant space, there is no guarantee that the wavefunction will have the correct S^2. . I wrote some code to try to handle situations like this. The user can specify the value of S that they desire (default 0.0 for closed-shell systems). If they want to guarantee that all guess roots have the same spin as this, they can set `CALC_S_SQUARED TRUE`. This will then toss out any guess roots with different values of S. (This is only implemented for `ICORE 1`). Guaranteeing that the guess roots have the correct S will *normally* mean that the final roots have the correct S, but this is not absolutely guaranteed if numerical issues come up. . As an example, consider this test case; ; memory 24 gb; molecule {; 0 1; O; H 1 0.9463; H 1 0.9463 2 104.575; }. set {; S 0.0; NUM_ROOTS 6; qc_module DETCI; }. energy('cisd/cc-pVDZ'). This yields 5 roots that look like singlets, followed by something that appears to be a quintet or higher. CISD Root 5 energy = -75.086475681512894. The 20 most important determinants:. * 1 0.342614 ( 435, 462) 1A1X 2A1X 3A1B 1B1X 1B2A 4A1A 2B2B; * 2 0.342614 ( 462, 435) 1A1X 2A1X 3A1A 1B1X 1B2B 4A1B 2B2A; * 3 0.342614 ( 670, 434) 1A1X 2A1X 3A1B 1B1X 1B2B 4A1A 2B2A; * 4 0.342614 ( 434, 670) 1A1X 2A1X 3A1A 1B1X 1B2A 4A1B 2B2B; * 5 -0.342614 ( 923, 913) 1A1X 2A1X 3A1B 1B1X 1B2A 4A1B 2B2A; * 6 -0.342614 ( 913, 923) 1A1X 2A1X 3A1A 1B1X 1B2B 4A1A 2B2B; * 7 0.151981 ( 703, 434) 1A1X 2A1X 3A1B 1B1X 1B2B 4A1A 3B2A. Now if we add the option `CALC_S_SQUARED TRUE`. We get some warnings from the program that it is dropping a guess vector because they seem to have the wrong value of S,. Simultaneous Expansion Method (Block Davidson Method); Using 6 initial trial vectors. (sem_iter): H0block_->H0b_diag[1][1] - H0block_->H0b_diag[2][1] = -0.681031 - 0.681031 = -1.362062 > 1.0E-8; ...; Computed <S^2> not as desired, discarding guess. and then the fin",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2075#issuecomment-769932020
https://github.com/psi4/psi4/issues/2075#issuecomment-769932020:1070,Energy Efficiency,energy,energy,1070," root has the desired M_s, by construction of the determinant space, there is no guarantee that the wavefunction will have the correct S^2. . I wrote some code to try to handle situations like this. The user can specify the value of S that they desire (default 0.0 for closed-shell systems). If they want to guarantee that all guess roots have the same spin as this, they can set `CALC_S_SQUARED TRUE`. This will then toss out any guess roots with different values of S. (This is only implemented for `ICORE 1`). Guaranteeing that the guess roots have the correct S will *normally* mean that the final roots have the correct S, but this is not absolutely guaranteed if numerical issues come up. . As an example, consider this test case; ; memory 24 gb; molecule {; 0 1; O; H 1 0.9463; H 1 0.9463 2 104.575; }. set {; S 0.0; NUM_ROOTS 6; qc_module DETCI; }. energy('cisd/cc-pVDZ'). This yields 5 roots that look like singlets, followed by something that appears to be a quintet or higher. CISD Root 5 energy = -75.086475681512894. The 20 most important determinants:. * 1 0.342614 ( 435, 462) 1A1X 2A1X 3A1B 1B1X 1B2A 4A1A 2B2B; * 2 0.342614 ( 462, 435) 1A1X 2A1X 3A1A 1B1X 1B2B 4A1B 2B2A; * 3 0.342614 ( 670, 434) 1A1X 2A1X 3A1B 1B1X 1B2B 4A1A 2B2A; * 4 0.342614 ( 434, 670) 1A1X 2A1X 3A1A 1B1X 1B2A 4A1B 2B2B; * 5 -0.342614 ( 923, 913) 1A1X 2A1X 3A1B 1B1X 1B2A 4A1B 2B2A; * 6 -0.342614 ( 913, 923) 1A1X 2A1X 3A1A 1B1X 1B2B 4A1A 2B2B; * 7 0.151981 ( 703, 434) 1A1X 2A1X 3A1B 1B1X 1B2B 4A1A 3B2A. Now if we add the option `CALC_S_SQUARED TRUE`. We get some warnings from the program that it is dropping a guess vector because they seem to have the wrong value of S,. Simultaneous Expansion Method (Block Davidson Method); Using 6 initial trial vectors. (sem_iter): H0block_->H0b_diag[1][1] - H0block_->H0b_diag[2][1] = -0.681031 - 0.681031 = -1.362062 > 1.0E-8; ...; Computed <S^2> not as desired, discarding guess. and then the final root now becomes what looks like a singlet. ==> CISD root 5 inform",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2075#issuecomment-769932020
https://github.com/psi4/psi4/issues/2075#issuecomment-769932020:2093,Energy Efficiency,energy,energy,2093," toss out any guess roots with different values of S. (This is only implemented for `ICORE 1`). Guaranteeing that the guess roots have the correct S will *normally* mean that the final roots have the correct S, but this is not absolutely guaranteed if numerical issues come up. . As an example, consider this test case; ; memory 24 gb; molecule {; 0 1; O; H 1 0.9463; H 1 0.9463 2 104.575; }. set {; S 0.0; NUM_ROOTS 6; qc_module DETCI; }. energy('cisd/cc-pVDZ'). This yields 5 roots that look like singlets, followed by something that appears to be a quintet or higher. CISD Root 5 energy = -75.086475681512894. The 20 most important determinants:. * 1 0.342614 ( 435, 462) 1A1X 2A1X 3A1B 1B1X 1B2A 4A1A 2B2B; * 2 0.342614 ( 462, 435) 1A1X 2A1X 3A1A 1B1X 1B2B 4A1B 2B2A; * 3 0.342614 ( 670, 434) 1A1X 2A1X 3A1B 1B1X 1B2B 4A1A 2B2A; * 4 0.342614 ( 434, 670) 1A1X 2A1X 3A1A 1B1X 1B2A 4A1B 2B2B; * 5 -0.342614 ( 923, 913) 1A1X 2A1X 3A1B 1B1X 1B2A 4A1B 2B2A; * 6 -0.342614 ( 913, 923) 1A1X 2A1X 3A1A 1B1X 1B2B 4A1A 2B2B; * 7 0.151981 ( 703, 434) 1A1X 2A1X 3A1B 1B1X 1B2B 4A1A 3B2A. Now if we add the option `CALC_S_SQUARED TRUE`. We get some warnings from the program that it is dropping a guess vector because they seem to have the wrong value of S,. Simultaneous Expansion Method (Block Davidson Method); Using 6 initial trial vectors. (sem_iter): H0block_->H0b_diag[1][1] - H0block_->H0b_diag[2][1] = -0.681031 - 0.681031 = -1.362062 > 1.0E-8; ...; Computed <S^2> not as desired, discarding guess. and then the final root now becomes what looks like a singlet. ==> CISD root 5 information <==. CISD Root 5 energy = -75.024974154652114. The 20 most important determinants:. * 1 0.637413 ( 435, 435) 1A1X 2A1X 1B1X 1B2X 4A1X; * 2 -0.307807 ( 923, 923) 1A1X 2A1X 1B1X 1B2X 2B2X; * 3 -0.199774 ( 436, 434) 1A1X 2A1B 3A1X 1B1X 1B2X 4A1A; * 4 -0.199774 ( 434, 436) 1A1X 2A1A 3A1X 1B1X 1B2X 4A1B; ; I'll see if I can add a few sentences to the documentation to explain this issue. Thanks for bringing it up.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2075#issuecomment-769932020
https://github.com/psi4/psi4/issues/2075#issuecomment-769932020:796,Testability,test,test,796,"@JonathonMisiewicz, you're right. Although it is easy to guarantee the root has the desired M_s, by construction of the determinant space, there is no guarantee that the wavefunction will have the correct S^2. . I wrote some code to try to handle situations like this. The user can specify the value of S that they desire (default 0.0 for closed-shell systems). If they want to guarantee that all guess roots have the same spin as this, they can set `CALC_S_SQUARED TRUE`. This will then toss out any guess roots with different values of S. (This is only implemented for `ICORE 1`). Guaranteeing that the guess roots have the correct S will *normally* mean that the final roots have the correct S, but this is not absolutely guaranteed if numerical issues come up. . As an example, consider this test case; ; memory 24 gb; molecule {; 0 1; O; H 1 0.9463; H 1 0.9463 2 104.575; }. set {; S 0.0; NUM_ROOTS 6; qc_module DETCI; }. energy('cisd/cc-pVDZ'). This yields 5 roots that look like singlets, followed by something that appears to be a quintet or higher. CISD Root 5 energy = -75.086475681512894. The 20 most important determinants:. * 1 0.342614 ( 435, 462) 1A1X 2A1X 3A1B 1B1X 1B2A 4A1A 2B2B; * 2 0.342614 ( 462, 435) 1A1X 2A1X 3A1A 1B1X 1B2B 4A1B 2B2A; * 3 0.342614 ( 670, 434) 1A1X 2A1X 3A1B 1B1X 1B2B 4A1A 2B2A; * 4 0.342614 ( 434, 670) 1A1X 2A1X 3A1A 1B1X 1B2A 4A1B 2B2B; * 5 -0.342614 ( 923, 913) 1A1X 2A1X 3A1B 1B1X 1B2A 4A1B 2B2A; * 6 -0.342614 ( 913, 923) 1A1X 2A1X 3A1A 1B1X 1B2B 4A1A 2B2B; * 7 0.151981 ( 703, 434) 1A1X 2A1X 3A1B 1B1X 1B2B 4A1A 3B2A. Now if we add the option `CALC_S_SQUARED TRUE`. We get some warnings from the program that it is dropping a guess vector because they seem to have the wrong value of S,. Simultaneous Expansion Method (Block Davidson Method); Using 6 initial trial vectors. (sem_iter): H0block_->H0b_diag[1][1] - H0block_->H0b_diag[2][1] = -0.681031 - 0.681031 = -1.362062 > 1.0E-8; ...; Computed <S^2> not as desired, discarding guess. and then the fin",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2075#issuecomment-769932020
https://github.com/psi4/psi4/issues/2075#issuecomment-770024893:369,Energy Efficiency,energy,energy,369,"Yeah that unwanted root mentioned above, E = -75.086475619870, is a quintet apparently. You can get it directly by running this computation. set {; S 2.0; NUM_ROOTS 1; qc_module DETCI; calc_s_squared TRUE; r_convergence 3; }. Going directly for high-lying higher spin multiplicities can cause convergence problems (roundoff can cause the program to start to find lower-energy solutions of lower spin multiplicities). That is why I dropped the convergence criterion.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2075#issuecomment-770024893
https://github.com/psi4/psi4/pull/2076#issuecomment-758499682:43,Testability,test,tested,43,Target is 1.5 yes. A lot needs to done and tested and I am not pursuing it full time.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2076#issuecomment-758499682
https://github.com/psi4/psi4/pull/2077#issuecomment-755482830:47,Modifiability,variab,variables,47,You also wouldn't have the problem if the loop variables weren't declared globally :wink:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2077#issuecomment-755482830
https://github.com/psi4/psi4/pull/2079#issuecomment-756530827:361,Modifiability,variab,variable,361,This pull request **introduces 4 alerts** and **fixes 1** when merging 49e8af0c80836006292b53bf12bfbe57ceecf905 into a4741e36b93331901dabcd2028c2013d5b5acc07 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-7b05c8c751e9f2ffd4ac904a77166a836ea99410). **new alerts:**. * 3 for Multiplication result converted to larger type; * 1 for Unused local variable. **fixed alerts:**. * 1 for Multiplication result converted to larger type,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2079#issuecomment-756530827
https://github.com/psi4/psi4/pull/2079#issuecomment-756819458:176,Integrability,contract,contract,176,"@JonathonMisiewicz this sounds very nice! At an even higher level, what does it do, take a one- and two-PDM (in what format?) and then compute all the derivative integrals and contract them to get the gradient?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2079#issuecomment-756819458
https://github.com/psi4/psi4/pull/2079#issuecomment-756835485:746,Integrability,depend,dependent,746,"@CDSherrill Here's what the caller needs:; * Store the alpha response density `Da_` on the wavefunction; * Store the beta response density `Db_` on the wavefunction; * Store the Lagrangian `Lagrangian_` on the wavefunction; * Store the ""metric density"" in `PSIF_AO_TPDM` for all relevant DF basis sets (lower triangular format); * Store the ""3-Center density"" in `PSIF_AO_TPDM` for all relevant DF basis sets (lower triangular format). The caller is not responsible for constructing any derivative integrals. The caller is not responsible for constructing an explicit TPDM (all derivative integrals for DF are two or three index, so an explicit TPDM is never needed). The caller is responsible for constructing the densities, as those are method dependent. _In the current implementation_, the caller is responsible for backtransforming all densities involving primary-basis orbitals to the AO basis. For the first three quantities, this is part of the wavefunction contract and requires one line of code. For the 3-Center density, I'm playing with the idea of moving the responsibility of back-transforming to the AO basis to this central code. Rob's code takes that approach. ...Now that I write this up, this would be good to mention in the code itself. I'll add it as a comment before this gets merged in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2079#issuecomment-756835485
https://github.com/psi4/psi4/pull/2079#issuecomment-756835485:966,Integrability,contract,contract,966,"@CDSherrill Here's what the caller needs:; * Store the alpha response density `Da_` on the wavefunction; * Store the beta response density `Db_` on the wavefunction; * Store the Lagrangian `Lagrangian_` on the wavefunction; * Store the ""metric density"" in `PSIF_AO_TPDM` for all relevant DF basis sets (lower triangular format); * Store the ""3-Center density"" in `PSIF_AO_TPDM` for all relevant DF basis sets (lower triangular format). The caller is not responsible for constructing any derivative integrals. The caller is not responsible for constructing an explicit TPDM (all derivative integrals for DF are two or three index, so an explicit TPDM is never needed). The caller is responsible for constructing the densities, as those are method dependent. _In the current implementation_, the caller is responsible for backtransforming all densities involving primary-basis orbitals to the AO basis. For the first three quantities, this is part of the wavefunction contract and requires one line of code. For the 3-Center density, I'm playing with the idea of moving the responsibility of back-transforming to the AO basis to this central code. Rob's code takes that approach. ...Now that I write this up, this would be good to mention in the code itself. I'll add it as a comment before this gets merged in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2079#issuecomment-756835485
https://github.com/psi4/psi4/pull/2079#issuecomment-759538205:53,Integrability,interface,interface,53,See the newly generated `output.ref` for user-facing interface at default print level. I've manually checked print levels 2 and 3.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2079#issuecomment-759538205
https://github.com/psi4/psi4/issues/2080#issuecomment-759704666:47,Availability,error,error,47,"I don't know if it's relevant or not, but that error message was produced with the `psi4/linux-64::psi4-1.3.2+ecbda83-py37h31b3128_0` build from the `psi4` conda channel.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-759704666
https://github.com/psi4/psi4/issues/2080#issuecomment-759704666:53,Integrability,message,message,53,"I don't know if it's relevant or not, but that error message was produced with the `psi4/linux-64::psi4-1.3.2+ecbda83-py37h31b3128_0` build from the `psi4` conda channel.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-759704666
https://github.com/psi4/psi4/issues/2080#issuecomment-760128241:126,Availability,error,error,126,"Generally psi4 is supposed to catch those and still finish gracefully, and with upcoming psi4 v1.4 one gets also more visible error messages (see PR https://github.com/psi4/psi4/pull/1862). But here psi4 is aborted which is indeed not user friendly.; I dont know the exceptions machinery well enough to say why but it happens also in the current developer version.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-760128241
https://github.com/psi4/psi4/issues/2080#issuecomment-760128241:132,Integrability,message,messages,132,"Generally psi4 is supposed to catch those and still finish gracefully, and with upcoming psi4 v1.4 one gets also more visible error messages (see PR https://github.com/psi4/psi4/pull/1862). But here psi4 is aborted which is indeed not user friendly.; I dont know the exceptions machinery well enough to say why but it happens also in the current developer version.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-760128241
https://github.com/psi4/psi4/issues/2080#issuecomment-760128241:207,Safety,abort,aborted,207,"Generally psi4 is supposed to catch those and still finish gracefully, and with upcoming psi4 v1.4 one gets also more visible error messages (see PR https://github.com/psi4/psi4/pull/1862). But here psi4 is aborted which is indeed not user friendly.; I dont know the exceptions machinery well enough to say why but it happens also in the current developer version.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-760128241
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:1560,Performance,optimiz,optimize,1560,"50835 -3.209375; --; C 1.762137 -1.702272 3.907327; N 1.008514 -0.826933 3.073959; C -0.255272 -1.171286 2.659701; O -0.889107 -2.139983 3.059359; C -0.900138 -0.137125 1.727920; C -1.956427 0.697535 2.386933; C -1.122652 1.840978 2.981496; C -0.096631 2.090501 1.911054; N 0.182391 0.804731 1.237639; C 0.606984 0.675148 -0.082718; O 0.481731 -0.301961 -0.785930; C 1.235157 1.958654 -0.650979; H 1.353383 -1.743533 4.930961; H 2.767495 -1.250368 3.947910; H 1.854613 -2.732246 3.523648; H 1.430423 0.082809 2.871745; H -1.239078 -0.581913 0.770233; H -2.471298 0.066853 3.136998; H -2.719629 1.061761 1.672573; H -0.610350 1.606676 3.934438; H -1.798872 2.698054 3.164789; H -0.408884 2.958700 1.299354; H 0.836907 2.367926 2.437353; H 0.405581 2.645117 -0.890106; H 1.847741 1.817925 -1.557370; H 1.862150 2.422724 0.128846; no_reorient; no_com; symmetry c1; """"""); psi4.set_module_options(""optking"", {""frag_mode"": ""multi"", ""freeze_intrafrag"": True}); psi4.optimize('SCF/STO-3G', molecule=dimer, bsse_type='cp', freeze_intrafrag=True); ```. I get the following backtrace:; ```; #0 0x00007fffe074edf3 in opt::INTERFRAG::orient_fragment () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #1 0x00007fffe06ec4e1 in opt::MOLECULE::rfo_step () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #2 0x00007fffe064e7f7 in opt::optking(psi::Options&) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #3 0x00007fffdf472f9f in py_psi_optking() () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #4 0x00007fffdf48fe51 in void pybind11::cpp_function::initialize<int (*&)(), int, , pybind11::name, pybind11::scope, pybind11::sibling, char [58]>(int (*&)(), int (*)(), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&, char const (&) [58])::{lambda(pybind11::detail::function_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:3034,Performance,optimiz,optimized,3034,"ng(psi::Options&) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #3 0x00007fffdf472f9f in py_psi_optking() () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #4 0x00007fffdf48fe51 in void pybind11::cpp_function::initialize<int (*&)(), int, , pybind11::name, pybind11::scope, pybind11::sibling, char [58]>(int (*&)(), int (*)(), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&, char const (&) [58])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #5 0x00007fffdeff6104 in pybind11::cpp_function::dispatcher(_object*, _object*, _object*) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #6 0x00007ffff7919e63 in _PyMethodDef_RawFastCallKeywords (method=0x99e900, self=<optimized out>, args=0x110b5f8, nargs=0, kwnames=<optimized out>) at Objects/call.c:690; #7 0x00007ffff7919ee5 in _PyCFunction_FastCallKeywords (func=0x7fffeffd03a8, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:730; #8 0x00007ffff78f2178 in call_function (kwnames=0x0, oparg=0, pp_stack=<synthetic pointer>) at Python/ceval.c:4568; #9 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3093; #10 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=0x7fffc6816db0, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, argcount=1, kwnames=0x7fffeffadb58, kwargs=0x7ffff7f76b70, kwcount=3, kwstep=1, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff7fc1830, qualname=0x7ffff7fc1830) at Python/ceval.c:3930; #11 0x00007ffff7919966 in _PyFunction_FastCallKeywords (func=<optimized out>, stack=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:433; #12 0x0000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:3084,Performance,optimiz,optimized,3084,"ng(psi::Options&) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #3 0x00007fffdf472f9f in py_psi_optking() () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #4 0x00007fffdf48fe51 in void pybind11::cpp_function::initialize<int (*&)(), int, , pybind11::name, pybind11::scope, pybind11::sibling, char [58]>(int (*&)(), int (*)(), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&, char const (&) [58])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #5 0x00007fffdeff6104 in pybind11::cpp_function::dispatcher(_object*, _object*, _object*) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #6 0x00007ffff7919e63 in _PyMethodDef_RawFastCallKeywords (method=0x99e900, self=<optimized out>, args=0x110b5f8, nargs=0, kwnames=<optimized out>) at Objects/call.c:690; #7 0x00007ffff7919ee5 in _PyCFunction_FastCallKeywords (func=0x7fffeffd03a8, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:730; #8 0x00007ffff78f2178 in call_function (kwnames=0x0, oparg=0, pp_stack=<synthetic pointer>) at Python/ceval.c:4568; #9 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3093; #10 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=0x7fffc6816db0, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, argcount=1, kwnames=0x7fffeffadb58, kwargs=0x7ffff7f76b70, kwcount=3, kwstep=1, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff7fc1830, qualname=0x7ffff7fc1830) at Python/ceval.c:3930; #11 0x00007ffff7919966 in _PyFunction_FastCallKeywords (func=<optimized out>, stack=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:433; #12 0x0000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:3206,Performance,optimiz,optimized,3206,"rom /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #4 0x00007fffdf48fe51 in void pybind11::cpp_function::initialize<int (*&)(), int, , pybind11::name, pybind11::scope, pybind11::sibling, char [58]>(int (*&)(), int (*)(), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&, char const (&) [58])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #5 0x00007fffdeff6104 in pybind11::cpp_function::dispatcher(_object*, _object*, _object*) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #6 0x00007ffff7919e63 in _PyMethodDef_RawFastCallKeywords (method=0x99e900, self=<optimized out>, args=0x110b5f8, nargs=0, kwnames=<optimized out>) at Objects/call.c:690; #7 0x00007ffff7919ee5 in _PyCFunction_FastCallKeywords (func=0x7fffeffd03a8, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:730; #8 0x00007ffff78f2178 in call_function (kwnames=0x0, oparg=0, pp_stack=<synthetic pointer>) at Python/ceval.c:4568; #9 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3093; #10 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=0x7fffc6816db0, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, argcount=1, kwnames=0x7fffeffadb58, kwargs=0x7ffff7f76b70, kwcount=3, kwstep=1, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff7fc1830, qualname=0x7ffff7fc1830) at Python/ceval.c:3930; #11 0x00007ffff7919966 in _PyFunction_FastCallKeywords (func=<optimized out>, stack=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:433; #12 0x00007ffff78f2e32 in call_function (kwnames=0x7fffeffadb40, oparg=<optimized out>, pp_stack=<synthetic pointer>) at Python/ceval.c:4616; #13 _PyEval_EvalFrameDefault (f=<opti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:3229,Performance,optimiz,optimized,3229,"rom /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #4 0x00007fffdf48fe51 in void pybind11::cpp_function::initialize<int (*&)(), int, , pybind11::name, pybind11::scope, pybind11::sibling, char [58]>(int (*&)(), int (*)(), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&, char const (&) [58])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #5 0x00007fffdeff6104 in pybind11::cpp_function::dispatcher(_object*, _object*, _object*) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #6 0x00007ffff7919e63 in _PyMethodDef_RawFastCallKeywords (method=0x99e900, self=<optimized out>, args=0x110b5f8, nargs=0, kwnames=<optimized out>) at Objects/call.c:690; #7 0x00007ffff7919ee5 in _PyCFunction_FastCallKeywords (func=0x7fffeffd03a8, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:730; #8 0x00007ffff78f2178 in call_function (kwnames=0x0, oparg=0, pp_stack=<synthetic pointer>) at Python/ceval.c:4568; #9 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3093; #10 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=0x7fffc6816db0, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, argcount=1, kwnames=0x7fffeffadb58, kwargs=0x7ffff7f76b70, kwcount=3, kwstep=1, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff7fc1830, qualname=0x7ffff7fc1830) at Python/ceval.c:3930; #11 0x00007ffff7919966 in _PyFunction_FastCallKeywords (func=<optimized out>, stack=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:433; #12 0x00007ffff78f2e32 in call_function (kwnames=0x7fffeffadb40, oparg=<optimized out>, pp_stack=<synthetic pointer>) at Python/ceval.c:4616; #13 _PyEval_EvalFrameDefault (f=<opti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:3254,Performance,optimiz,optimized,3254,"rom /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #4 0x00007fffdf48fe51 in void pybind11::cpp_function::initialize<int (*&)(), int, , pybind11::name, pybind11::scope, pybind11::sibling, char [58]>(int (*&)(), int (*)(), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&, char const (&) [58])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #5 0x00007fffdeff6104 in pybind11::cpp_function::dispatcher(_object*, _object*, _object*) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #6 0x00007ffff7919e63 in _PyMethodDef_RawFastCallKeywords (method=0x99e900, self=<optimized out>, args=0x110b5f8, nargs=0, kwnames=<optimized out>) at Objects/call.c:690; #7 0x00007ffff7919ee5 in _PyCFunction_FastCallKeywords (func=0x7fffeffd03a8, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:730; #8 0x00007ffff78f2178 in call_function (kwnames=0x0, oparg=0, pp_stack=<synthetic pointer>) at Python/ceval.c:4568; #9 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3093; #10 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=0x7fffc6816db0, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, argcount=1, kwnames=0x7fffeffadb58, kwargs=0x7ffff7f76b70, kwcount=3, kwstep=1, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff7fc1830, qualname=0x7ffff7fc1830) at Python/ceval.c:3930; #11 0x00007ffff7919966 in _PyFunction_FastCallKeywords (func=<optimized out>, stack=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:433; #12 0x00007ffff78f2e32 in call_function (kwnames=0x7fffeffadb40, oparg=<optimized out>, pp_stack=<synthetic pointer>) at Python/ceval.c:4616; #13 _PyEval_EvalFrameDefault (f=<opti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:3441,Performance,optimiz,optimized,3441,"nt (*&)(), int (*)(), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&, char const (&) [58])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #5 0x00007fffdeff6104 in pybind11::cpp_function::dispatcher(_object*, _object*, _object*) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #6 0x00007ffff7919e63 in _PyMethodDef_RawFastCallKeywords (method=0x99e900, self=<optimized out>, args=0x110b5f8, nargs=0, kwnames=<optimized out>) at Objects/call.c:690; #7 0x00007ffff7919ee5 in _PyCFunction_FastCallKeywords (func=0x7fffeffd03a8, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:730; #8 0x00007ffff78f2178 in call_function (kwnames=0x0, oparg=0, pp_stack=<synthetic pointer>) at Python/ceval.c:4568; #9 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3093; #10 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=0x7fffc6816db0, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, argcount=1, kwnames=0x7fffeffadb58, kwargs=0x7ffff7f76b70, kwcount=3, kwstep=1, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff7fc1830, qualname=0x7ffff7fc1830) at Python/ceval.c:3930; #11 0x00007ffff7919966 in _PyFunction_FastCallKeywords (func=<optimized out>, stack=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:433; #12 0x00007ffff78f2e32 in call_function (kwnames=0x7fffeffadb40, oparg=<optimized out>, pp_stack=<synthetic pointer>) at Python/ceval.c:4616; #13 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3139; #14 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=a",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:3468,Performance,optimiz,optimized,3468,"nt (*&)(), int (*)(), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&, char const (&) [58])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #5 0x00007fffdeff6104 in pybind11::cpp_function::dispatcher(_object*, _object*, _object*) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #6 0x00007ffff7919e63 in _PyMethodDef_RawFastCallKeywords (method=0x99e900, self=<optimized out>, args=0x110b5f8, nargs=0, kwnames=<optimized out>) at Objects/call.c:690; #7 0x00007ffff7919ee5 in _PyCFunction_FastCallKeywords (func=0x7fffeffd03a8, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:730; #8 0x00007ffff78f2178 in call_function (kwnames=0x0, oparg=0, pp_stack=<synthetic pointer>) at Python/ceval.c:4568; #9 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3093; #10 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=0x7fffc6816db0, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, argcount=1, kwnames=0x7fffeffadb58, kwargs=0x7ffff7f76b70, kwcount=3, kwstep=1, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff7fc1830, qualname=0x7ffff7fc1830) at Python/ceval.c:3930; #11 0x00007ffff7919966 in _PyFunction_FastCallKeywords (func=<optimized out>, stack=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:433; #12 0x00007ffff78f2e32 in call_function (kwnames=0x7fffeffadb40, oparg=<optimized out>, pp_stack=<synthetic pointer>) at Python/ceval.c:4616; #13 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3139; #14 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=a",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:3589,Performance,optimiz,optimized,3589,"/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #5 0x00007fffdeff6104 in pybind11::cpp_function::dispatcher(_object*, _object*, _object*) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #6 0x00007ffff7919e63 in _PyMethodDef_RawFastCallKeywords (method=0x99e900, self=<optimized out>, args=0x110b5f8, nargs=0, kwnames=<optimized out>) at Objects/call.c:690; #7 0x00007ffff7919ee5 in _PyCFunction_FastCallKeywords (func=0x7fffeffd03a8, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:730; #8 0x00007ffff78f2178 in call_function (kwnames=0x0, oparg=0, pp_stack=<synthetic pointer>) at Python/ceval.c:4568; #9 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3093; #10 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=0x7fffc6816db0, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, argcount=1, kwnames=0x7fffeffadb58, kwargs=0x7ffff7f76b70, kwcount=3, kwstep=1, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff7fc1830, qualname=0x7ffff7fc1830) at Python/ceval.c:3930; #11 0x00007ffff7919966 in _PyFunction_FastCallKeywords (func=<optimized out>, stack=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:433; #12 0x00007ffff78f2e32 in call_function (kwnames=0x7fffeffadb40, oparg=<optimized out>, pp_stack=<synthetic pointer>) at Python/ceval.c:4616; #13 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3139; #14 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0,; kwargs=0x0, kwcount=0, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0) at Python/ceval.c:3930; #15 0x00007ffff7a02f1e in PyEval_EvalCodeEx (_c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:3636,Performance,optimiz,optimized,3636,"/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #5 0x00007fffdeff6104 in pybind11::cpp_function::dispatcher(_object*, _object*, _object*) () from /u/en/taube/c7dpr/prefixes/psi4/1.3.2-desres03-c7/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #6 0x00007ffff7919e63 in _PyMethodDef_RawFastCallKeywords (method=0x99e900, self=<optimized out>, args=0x110b5f8, nargs=0, kwnames=<optimized out>) at Objects/call.c:690; #7 0x00007ffff7919ee5 in _PyCFunction_FastCallKeywords (func=0x7fffeffd03a8, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:730; #8 0x00007ffff78f2178 in call_function (kwnames=0x0, oparg=0, pp_stack=<synthetic pointer>) at Python/ceval.c:4568; #9 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3093; #10 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=0x7fffc6816db0, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, argcount=1, kwnames=0x7fffeffadb58, kwargs=0x7ffff7f76b70, kwcount=3, kwstep=1, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff7fc1830, qualname=0x7ffff7fc1830) at Python/ceval.c:3930; #11 0x00007ffff7919966 in _PyFunction_FastCallKeywords (func=<optimized out>, stack=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:433; #12 0x00007ffff78f2e32 in call_function (kwnames=0x7fffeffadb40, oparg=<optimized out>, pp_stack=<synthetic pointer>) at Python/ceval.c:4616; #13 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3139; #14 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0,; kwargs=0x0, kwcount=0, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0) at Python/ceval.c:3930; #15 0x00007ffff7a02f1e in PyEval_EvalCodeEx (_c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:3912,Performance,optimiz,optimized,3912,"7m-x86_64-linux-gnu.so; #6 0x00007ffff7919e63 in _PyMethodDef_RawFastCallKeywords (method=0x99e900, self=<optimized out>, args=0x110b5f8, nargs=0, kwnames=<optimized out>) at Objects/call.c:690; #7 0x00007ffff7919ee5 in _PyCFunction_FastCallKeywords (func=0x7fffeffd03a8, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:730; #8 0x00007ffff78f2178 in call_function (kwnames=0x0, oparg=0, pp_stack=<synthetic pointer>) at Python/ceval.c:4568; #9 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3093; #10 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=0x7fffc6816db0, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, argcount=1, kwnames=0x7fffeffadb58, kwargs=0x7ffff7f76b70, kwcount=3, kwstep=1, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff7fc1830, qualname=0x7ffff7fc1830) at Python/ceval.c:3930; #11 0x00007ffff7919966 in _PyFunction_FastCallKeywords (func=<optimized out>, stack=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:433; #12 0x00007ffff78f2e32 in call_function (kwnames=0x7fffeffadb40, oparg=<optimized out>, pp_stack=<synthetic pointer>) at Python/ceval.c:4616; #13 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3139; #14 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0,; kwargs=0x0, kwcount=0, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0) at Python/ceval.c:3930; #15 0x00007ffff7a02f1e in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=0, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3959; #16 0x",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:3935,Performance,optimiz,optimized,3935,"7m-x86_64-linux-gnu.so; #6 0x00007ffff7919e63 in _PyMethodDef_RawFastCallKeywords (method=0x99e900, self=<optimized out>, args=0x110b5f8, nargs=0, kwnames=<optimized out>) at Objects/call.c:690; #7 0x00007ffff7919ee5 in _PyCFunction_FastCallKeywords (func=0x7fffeffd03a8, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:730; #8 0x00007ffff78f2178 in call_function (kwnames=0x0, oparg=0, pp_stack=<synthetic pointer>) at Python/ceval.c:4568; #9 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3093; #10 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=0x7fffc6816db0, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, argcount=1, kwnames=0x7fffeffadb58, kwargs=0x7ffff7f76b70, kwcount=3, kwstep=1, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff7fc1830, qualname=0x7ffff7fc1830) at Python/ceval.c:3930; #11 0x00007ffff7919966 in _PyFunction_FastCallKeywords (func=<optimized out>, stack=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:433; #12 0x00007ffff78f2e32 in call_function (kwnames=0x7fffeffadb40, oparg=<optimized out>, pp_stack=<synthetic pointer>) at Python/ceval.c:4616; #13 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3139; #14 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0,; kwargs=0x0, kwcount=0, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0) at Python/ceval.c:3930; #15 0x00007ffff7a02f1e in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=0, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3959; #16 0x",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:3958,Performance,optimiz,optimized,3958,"7m-x86_64-linux-gnu.so; #6 0x00007ffff7919e63 in _PyMethodDef_RawFastCallKeywords (method=0x99e900, self=<optimized out>, args=0x110b5f8, nargs=0, kwnames=<optimized out>) at Objects/call.c:690; #7 0x00007ffff7919ee5 in _PyCFunction_FastCallKeywords (func=0x7fffeffd03a8, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:730; #8 0x00007ffff78f2178 in call_function (kwnames=0x0, oparg=0, pp_stack=<synthetic pointer>) at Python/ceval.c:4568; #9 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3093; #10 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=0x7fffc6816db0, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, argcount=1, kwnames=0x7fffeffadb58, kwargs=0x7ffff7f76b70, kwcount=3, kwstep=1, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff7fc1830, qualname=0x7ffff7fc1830) at Python/ceval.c:3930; #11 0x00007ffff7919966 in _PyFunction_FastCallKeywords (func=<optimized out>, stack=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:433; #12 0x00007ffff78f2e32 in call_function (kwnames=0x7fffeffadb40, oparg=<optimized out>, pp_stack=<synthetic pointer>) at Python/ceval.c:4616; #13 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3139; #14 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0,; kwargs=0x0, kwcount=0, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0) at Python/ceval.c:3930; #15 0x00007ffff7a02f1e in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=0, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3959; #16 0x",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:3983,Performance,optimiz,optimized,3983,"7m-x86_64-linux-gnu.so; #6 0x00007ffff7919e63 in _PyMethodDef_RawFastCallKeywords (method=0x99e900, self=<optimized out>, args=0x110b5f8, nargs=0, kwnames=<optimized out>) at Objects/call.c:690; #7 0x00007ffff7919ee5 in _PyCFunction_FastCallKeywords (func=0x7fffeffd03a8, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:730; #8 0x00007ffff78f2178 in call_function (kwnames=0x0, oparg=0, pp_stack=<synthetic pointer>) at Python/ceval.c:4568; #9 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3093; #10 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=0x7fffc6816db0, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, argcount=1, kwnames=0x7fffeffadb58, kwargs=0x7ffff7f76b70, kwcount=3, kwstep=1, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff7fc1830, qualname=0x7ffff7fc1830) at Python/ceval.c:3930; #11 0x00007ffff7919966 in _PyFunction_FastCallKeywords (func=<optimized out>, stack=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:433; #12 0x00007ffff78f2e32 in call_function (kwnames=0x7fffeffadb40, oparg=<optimized out>, pp_stack=<synthetic pointer>) at Python/ceval.c:4616; #13 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3139; #14 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0,; kwargs=0x0, kwcount=0, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0) at Python/ceval.c:3930; #15 0x00007ffff7a02f1e in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=0, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3959; #16 0x",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:4094,Performance,optimiz,optimized,4094,"ptimized out>) at Objects/call.c:690; #7 0x00007ffff7919ee5 in _PyCFunction_FastCallKeywords (func=0x7fffeffd03a8, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:730; #8 0x00007ffff78f2178 in call_function (kwnames=0x0, oparg=0, pp_stack=<synthetic pointer>) at Python/ceval.c:4568; #9 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3093; #10 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=0x7fffc6816db0, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, argcount=1, kwnames=0x7fffeffadb58, kwargs=0x7ffff7f76b70, kwcount=3, kwstep=1, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff7fc1830, qualname=0x7ffff7fc1830) at Python/ceval.c:3930; #11 0x00007ffff7919966 in _PyFunction_FastCallKeywords (func=<optimized out>, stack=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:433; #12 0x00007ffff78f2e32 in call_function (kwnames=0x7fffeffadb40, oparg=<optimized out>, pp_stack=<synthetic pointer>) at Python/ceval.c:4616; #13 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3139; #14 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0,; kwargs=0x0, kwcount=0, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0) at Python/ceval.c:3930; #15 0x00007ffff7a02f1e in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=0, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3959; #16 0x00007ffff7a02f4b in PyEval_EvalCode (co=co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8) at Python/ceval.c:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:4197,Performance,optimiz,optimized,4197,"optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:730; #8 0x00007ffff78f2178 in call_function (kwnames=0x0, oparg=0, pp_stack=<synthetic pointer>) at Python/ceval.c:4568; #9 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3093; #10 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=0x7fffc6816db0, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, argcount=1, kwnames=0x7fffeffadb58, kwargs=0x7ffff7f76b70, kwcount=3, kwstep=1, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff7fc1830, qualname=0x7ffff7fc1830) at Python/ceval.c:3930; #11 0x00007ffff7919966 in _PyFunction_FastCallKeywords (func=<optimized out>, stack=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:433; #12 0x00007ffff78f2e32 in call_function (kwnames=0x7fffeffadb40, oparg=<optimized out>, pp_stack=<synthetic pointer>) at Python/ceval.c:4616; #13 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3139; #14 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0,; kwargs=0x0, kwcount=0, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0) at Python/ceval.c:3930; #15 0x00007ffff7a02f1e in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=0, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3959; #16 0x00007ffff7a02f4b in PyEval_EvalCode (co=co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8) at Python/ceval.c:524; #17 0x00007ffff7a369e2 in run_mod (arena=0x7ffff7fc42d0, flags=0x7fffffffcf50, locals=0x7ffff7ecd1f8, globals=0x7ff",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:4224,Performance,optimiz,optimized,4224,"optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:730; #8 0x00007ffff78f2178 in call_function (kwnames=0x0, oparg=0, pp_stack=<synthetic pointer>) at Python/ceval.c:4568; #9 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3093; #10 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=0x7fffc6816db0, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, argcount=1, kwnames=0x7fffeffadb58, kwargs=0x7ffff7f76b70, kwcount=3, kwstep=1, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff7fc1830, qualname=0x7ffff7fc1830) at Python/ceval.c:3930; #11 0x00007ffff7919966 in _PyFunction_FastCallKeywords (func=<optimized out>, stack=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at Objects/call.c:433; #12 0x00007ffff78f2e32 in call_function (kwnames=0x7fffeffadb40, oparg=<optimized out>, pp_stack=<synthetic pointer>) at Python/ceval.c:4616; #13 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3139; #14 0x00007ffff7a02dec in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0,; kwargs=0x0, kwcount=0, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0) at Python/ceval.c:3930; #15 0x00007ffff7a02f1e in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=0, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3959; #16 0x00007ffff7a02f4b in PyEval_EvalCode (co=co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8) at Python/ceval.c:524; #17 0x00007ffff7a369e2 in run_mod (arena=0x7ffff7fc42d0, flags=0x7fffffffcf50, locals=0x7ffff7ecd1f8, globals=0x7ff",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:5646,Performance,optimiz,optimized,5646,"kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0) at Python/ceval.c:3930; #15 0x00007ffff7a02f1e in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=0, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3959; #16 0x00007ffff7a02f4b in PyEval_EvalCode (co=co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8) at Python/ceval.c:524; #17 0x00007ffff7a369e2 in run_mod (arena=0x7ffff7fc42d0, flags=0x7fffffffcf50, locals=0x7ffff7ecd1f8, globals=0x7ffff7ecd1f8, filename=0x7fffeffc0870, mod=0x6440f0) at Python/pythonrun.c:1035; #18 PyRun_FileExFlags (fp=fp@entry=0x67eb60, filename_str=filename_str@entry=0x7ffff7f89110 ""simple.2.py"", start=start@entry=257, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, closeit=closeit@entry=1,; flags=0x7fffffffcf50) at Python/pythonrun.c:988; #19 0x00007ffff7a36b55 in PyRun_SimpleFileExFlags (fp=fp@entry=0x67eb60, filename=<optimized out>, closeit=closeit@entry=1, flags=flags@entry=0x7fffffffcf50) at Python/pythonrun.c:429; #20 0x00007ffff7a36ff3 in PyRun_AnyFileExFlags (fp=fp@entry=0x67eb60, filename=<optimized out>, closeit=closeit@entry=1, flags=flags@entry=0x7fffffffcf50) at Python/pythonrun.c:84; #21 0x00007ffff7a58d27 in pymain_run_file (p_cf=0x7fffffffcf50, filename=0x603520 L""simple.2.py"", fp=0x67eb60) at Modules/main.c:427; #22 pymain_run_filename (cf=0x7fffffffcf50, pymain=0x7fffffffd030) at Modules/main.c:1627; #23 pymain_run_python (pymain=0x7fffffffd030) at Modules/main.c:2877; #24 pymain_main (pymain=pymain@entry=0x7fffffffd030) at Modules/main.c:3038; #25 0x00007ffff7a58fab in _Py_UnixMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:3073; #26 0x00007ffff6978505 in __libc_start_main () from /lib64/libc.so.6; #27 0x00000000004008ce in _start (); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:5828,Performance,optimiz,optimized,5828,"kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0) at Python/ceval.c:3930; #15 0x00007ffff7a02f1e in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=0, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3959; #16 0x00007ffff7a02f4b in PyEval_EvalCode (co=co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8) at Python/ceval.c:524; #17 0x00007ffff7a369e2 in run_mod (arena=0x7ffff7fc42d0, flags=0x7fffffffcf50, locals=0x7ffff7ecd1f8, globals=0x7ffff7ecd1f8, filename=0x7fffeffc0870, mod=0x6440f0) at Python/pythonrun.c:1035; #18 PyRun_FileExFlags (fp=fp@entry=0x67eb60, filename_str=filename_str@entry=0x7ffff7f89110 ""simple.2.py"", start=start@entry=257, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, closeit=closeit@entry=1,; flags=0x7fffffffcf50) at Python/pythonrun.c:988; #19 0x00007ffff7a36b55 in PyRun_SimpleFileExFlags (fp=fp@entry=0x67eb60, filename=<optimized out>, closeit=closeit@entry=1, flags=flags@entry=0x7fffffffcf50) at Python/pythonrun.c:429; #20 0x00007ffff7a36ff3 in PyRun_AnyFileExFlags (fp=fp@entry=0x67eb60, filename=<optimized out>, closeit=closeit@entry=1, flags=flags@entry=0x7fffffffcf50) at Python/pythonrun.c:84; #21 0x00007ffff7a58d27 in pymain_run_file (p_cf=0x7fffffffcf50, filename=0x603520 L""simple.2.py"", fp=0x67eb60) at Modules/main.c:427; #22 pymain_run_filename (cf=0x7fffffffcf50, pymain=0x7fffffffd030) at Modules/main.c:1627; #23 pymain_run_python (pymain=0x7fffffffd030) at Modules/main.c:2877; #24 pymain_main (pymain=pymain@entry=0x7fffffffd030) at Modules/main.c:3038; #25 0x00007ffff7a58fab in _Py_UnixMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:3073; #26 0x00007ffff6978505 in __libc_start_main () from /lib64/libc.so.6; #27 0x00000000004008ce in _start (); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:6347,Performance,optimiz,optimized,6347,"kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0) at Python/ceval.c:3930; #15 0x00007ffff7a02f1e in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=0, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3959; #16 0x00007ffff7a02f4b in PyEval_EvalCode (co=co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8) at Python/ceval.c:524; #17 0x00007ffff7a369e2 in run_mod (arena=0x7ffff7fc42d0, flags=0x7fffffffcf50, locals=0x7ffff7ecd1f8, globals=0x7ffff7ecd1f8, filename=0x7fffeffc0870, mod=0x6440f0) at Python/pythonrun.c:1035; #18 PyRun_FileExFlags (fp=fp@entry=0x67eb60, filename_str=filename_str@entry=0x7ffff7f89110 ""simple.2.py"", start=start@entry=257, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, closeit=closeit@entry=1,; flags=0x7fffffffcf50) at Python/pythonrun.c:988; #19 0x00007ffff7a36b55 in PyRun_SimpleFileExFlags (fp=fp@entry=0x67eb60, filename=<optimized out>, closeit=closeit@entry=1, flags=flags@entry=0x7fffffffcf50) at Python/pythonrun.c:429; #20 0x00007ffff7a36ff3 in PyRun_AnyFileExFlags (fp=fp@entry=0x67eb60, filename=<optimized out>, closeit=closeit@entry=1, flags=flags@entry=0x7fffffffcf50) at Python/pythonrun.c:84; #21 0x00007ffff7a58d27 in pymain_run_file (p_cf=0x7fffffffcf50, filename=0x603520 L""simple.2.py"", fp=0x67eb60) at Modules/main.c:427; #22 pymain_run_filename (cf=0x7fffffffcf50, pymain=0x7fffffffd030) at Modules/main.c:1627; #23 pymain_run_python (pymain=0x7fffffffd030) at Modules/main.c:2877; #24 pymain_main (pymain=pymain@entry=0x7fffffffd030) at Modules/main.c:3038; #25 0x00007ffff7a58fab in _Py_UnixMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:3073; #26 0x00007ffff6978505 in __libc_start_main () from /lib64/libc.so.6; #27 0x00000000004008ce in _start (); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:6369,Performance,optimiz,optimized,6369,"kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0) at Python/ceval.c:3930; #15 0x00007ffff7a02f1e in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=0, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3959; #16 0x00007ffff7a02f4b in PyEval_EvalCode (co=co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8) at Python/ceval.c:524; #17 0x00007ffff7a369e2 in run_mod (arena=0x7ffff7fc42d0, flags=0x7fffffffcf50, locals=0x7ffff7ecd1f8, globals=0x7ffff7ecd1f8, filename=0x7fffeffc0870, mod=0x6440f0) at Python/pythonrun.c:1035; #18 PyRun_FileExFlags (fp=fp@entry=0x67eb60, filename_str=filename_str@entry=0x7ffff7f89110 ""simple.2.py"", start=start@entry=257, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, closeit=closeit@entry=1,; flags=0x7fffffffcf50) at Python/pythonrun.c:988; #19 0x00007ffff7a36b55 in PyRun_SimpleFileExFlags (fp=fp@entry=0x67eb60, filename=<optimized out>, closeit=closeit@entry=1, flags=flags@entry=0x7fffffffcf50) at Python/pythonrun.c:429; #20 0x00007ffff7a36ff3 in PyRun_AnyFileExFlags (fp=fp@entry=0x67eb60, filename=<optimized out>, closeit=closeit@entry=1, flags=flags@entry=0x7fffffffcf50) at Python/pythonrun.c:84; #21 0x00007ffff7a58d27 in pymain_run_file (p_cf=0x7fffffffcf50, filename=0x603520 L""simple.2.py"", fp=0x67eb60) at Modules/main.c:427; #22 pymain_run_filename (cf=0x7fffffffcf50, pymain=0x7fffffffd030) at Modules/main.c:1627; #23 pymain_run_python (pymain=0x7fffffffd030) at Modules/main.c:2877; #24 pymain_main (pymain=pymain@entry=0x7fffffffd030) at Modules/main.c:3038; #25 0x00007ffff7a58fab in _Py_UnixMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:3073; #26 0x00007ffff6978505 in __libc_start_main () from /lib64/libc.so.6; #27 0x00000000004008ce in _start (); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:5377,Usability,simpl,simple,5377,"0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0,; kwargs=0x0, kwcount=0, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0) at Python/ceval.c:3930; #15 0x00007ffff7a02f1e in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=0, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3959; #16 0x00007ffff7a02f4b in PyEval_EvalCode (co=co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8) at Python/ceval.c:524; #17 0x00007ffff7a369e2 in run_mod (arena=0x7ffff7fc42d0, flags=0x7fffffffcf50, locals=0x7ffff7ecd1f8, globals=0x7ffff7ecd1f8, filename=0x7fffeffc0870, mod=0x6440f0) at Python/pythonrun.c:1035; #18 PyRun_FileExFlags (fp=fp@entry=0x67eb60, filename_str=filename_str@entry=0x7ffff7f89110 ""simple.2.py"", start=start@entry=257, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, closeit=closeit@entry=1,; flags=0x7fffffffcf50) at Python/pythonrun.c:988; #19 0x00007ffff7a36b55 in PyRun_SimpleFileExFlags (fp=fp@entry=0x67eb60, filename=<optimized out>, closeit=closeit@entry=1, flags=flags@entry=0x7fffffffcf50) at Python/pythonrun.c:429; #20 0x00007ffff7a36ff3 in PyRun_AnyFileExFlags (fp=fp@entry=0x67eb60, filename=<optimized out>, closeit=closeit@entry=1, flags=flags@entry=0x7fffffffcf50) at Python/pythonrun.c:84; #21 0x00007ffff7a58d27 in pymain_run_file (p_cf=0x7fffffffcf50, filename=0x603520 L""simple.2.py"", fp=0x67eb60) at Modules/main.c:427; #22 pymain_run_filename (cf=0x7fffffffcf50, pymain=0x7fffffffd030) at Modules/main.c:1627; #23 pymain_run_python (pymain=0x7fffffffd030) at Modules/main.c:2877; #24 pymain_main (pymain=pymain@entry=0x7fffffffd030) at Modules/main.c:3038; #25 0x00007ffff7a58fab in _Py",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-763858878:6013,Usability,simpl,simple,6013,"kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0) at Python/ceval.c:3930; #15 0x00007ffff7a02f1e in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=0, defs=0x0,; defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3959; #16 0x00007ffff7a02f4b in PyEval_EvalCode (co=co@entry=0x7ffff7f9e660, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8) at Python/ceval.c:524; #17 0x00007ffff7a369e2 in run_mod (arena=0x7ffff7fc42d0, flags=0x7fffffffcf50, locals=0x7ffff7ecd1f8, globals=0x7ffff7ecd1f8, filename=0x7fffeffc0870, mod=0x6440f0) at Python/pythonrun.c:1035; #18 PyRun_FileExFlags (fp=fp@entry=0x67eb60, filename_str=filename_str@entry=0x7ffff7f89110 ""simple.2.py"", start=start@entry=257, globals=globals@entry=0x7ffff7ecd1f8, locals=locals@entry=0x7ffff7ecd1f8, closeit=closeit@entry=1,; flags=0x7fffffffcf50) at Python/pythonrun.c:988; #19 0x00007ffff7a36b55 in PyRun_SimpleFileExFlags (fp=fp@entry=0x67eb60, filename=<optimized out>, closeit=closeit@entry=1, flags=flags@entry=0x7fffffffcf50) at Python/pythonrun.c:429; #20 0x00007ffff7a36ff3 in PyRun_AnyFileExFlags (fp=fp@entry=0x67eb60, filename=<optimized out>, closeit=closeit@entry=1, flags=flags@entry=0x7fffffffcf50) at Python/pythonrun.c:84; #21 0x00007ffff7a58d27 in pymain_run_file (p_cf=0x7fffffffcf50, filename=0x603520 L""simple.2.py"", fp=0x67eb60) at Modules/main.c:427; #22 pymain_run_filename (cf=0x7fffffffcf50, pymain=0x7fffffffd030) at Modules/main.c:1627; #23 pymain_run_python (pymain=0x7fffffffd030) at Modules/main.c:2877; #24 pymain_main (pymain=pymain@entry=0x7fffffffd030) at Modules/main.c:3038; #25 0x00007ffff7a58fab in _Py_UnixMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:3073; #26 0x00007ffff6978505 in __libc_start_main () from /lib64/libc.so.6; #27 0x00000000004008ce in _start (); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-763858878
https://github.com/psi4/psi4/issues/2080#issuecomment-764476988:20,Availability,error,error,20,"This is a different error @ataube59. This is not a coded exception (planned fail) but a segmentation fault because of a bug. Those cannot be caught. The `optking` module responsible will be replaced with a python-based version ""soon"" (https://github.com/psi-rking/optking, already usable if you install it manually) where I think dimer optimisation should work better. Obligatory ping to @AlexHeide @psi-rking for a test case.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-764476988
https://github.com/psi4/psi4/issues/2080#issuecomment-764476988:101,Availability,fault,fault,101,"This is a different error @ataube59. This is not a coded exception (planned fail) but a segmentation fault because of a bug. Those cannot be caught. The `optking` module responsible will be replaced with a python-based version ""soon"" (https://github.com/psi-rking/optking, already usable if you install it manually) where I think dimer optimisation should work better. Obligatory ping to @AlexHeide @psi-rking for a test case.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-764476988
https://github.com/psi4/psi4/issues/2080#issuecomment-764476988:380,Availability,ping,ping,380,"This is a different error @ataube59. This is not a coded exception (planned fail) but a segmentation fault because of a bug. Those cannot be caught. The `optking` module responsible will be replaced with a python-based version ""soon"" (https://github.com/psi-rking/optking, already usable if you install it manually) where I think dimer optimisation should work better. Obligatory ping to @AlexHeide @psi-rking for a test case.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-764476988
https://github.com/psi4/psi4/issues/2080#issuecomment-764476988:295,Deployability,install,install,295,"This is a different error @ataube59. This is not a coded exception (planned fail) but a segmentation fault because of a bug. Those cannot be caught. The `optking` module responsible will be replaced with a python-based version ""soon"" (https://github.com/psi-rking/optking, already usable if you install it manually) where I think dimer optimisation should work better. Obligatory ping to @AlexHeide @psi-rking for a test case.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-764476988
https://github.com/psi4/psi4/issues/2080#issuecomment-764476988:416,Testability,test,test,416,"This is a different error @ataube59. This is not a coded exception (planned fail) but a segmentation fault because of a bug. Those cannot be caught. The `optking` module responsible will be replaced with a python-based version ""soon"" (https://github.com/psi-rking/optking, already usable if you install it manually) where I think dimer optimisation should work better. Obligatory ping to @AlexHeide @psi-rking for a test case.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-764476988
https://github.com/psi4/psi4/issues/2080#issuecomment-764476988:281,Usability,usab,usable,281,"This is a different error @ataube59. This is not a coded exception (planned fail) but a segmentation fault because of a bug. Those cannot be caught. The `optking` module responsible will be replaced with a python-based version ""soon"" (https://github.com/psi-rking/optking, already usable if you install it manually) where I think dimer optimisation should work better. Obligatory ping to @AlexHeide @psi-rking for a test case.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-764476988
https://github.com/psi4/psi4/pull/2081#issuecomment-759761559:288,Modifiability,variab,variable,288,This pull request **introduces 1 alert** when merging 26e917c7a077bbeb3a0b1a6a9a9638bd7fb36085 into 67a0d7049241b30ceb2b52e44c58b6de579966bc - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-c75027329aef2bf8b32c48204dfa2ee900cde029). **new alerts:**. * 1 for Unused local variable,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2081#issuecomment-759761559
https://github.com/psi4/psi4/pull/2081#issuecomment-761284563:289,Modifiability,variab,variable,289,This pull request **introduces 4 alerts** when merging d652e7e1ab0ca3666a1603f4e8602acd4d998790 into 262e3454d7015466d3f8059333518a7abbf2bd09 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-3a134619b3de04c27860b8e216f68111aa577e8b). **new alerts:**. * 3 for Unused local variable; * 1 for Unused import,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2081#issuecomment-761284563
https://github.com/psi4/psi4/pull/2081#issuecomment-763160144:289,Modifiability,variab,variable,289,This pull request **introduces 4 alerts** when merging 73a65b9b52d5ed9ab52af985db8156908a9f9d7c into 262e3454d7015466d3f8059333518a7abbf2bd09 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-516b6f785cb0d45d05ef0a1ac42c57feef3db0bc). **new alerts:**. * 3 for Unused local variable; * 1 for Unused import,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2081#issuecomment-763160144
https://github.com/psi4/psi4/pull/2081#issuecomment-765095335:289,Modifiability,variab,variable,289,This pull request **introduces 4 alerts** when merging 0857fe9d025f8e4bdb811a0f5379dc601b1e9152 into 262e3454d7015466d3f8059333518a7abbf2bd09 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-5231efc5643e5ec1fecb933907f54a27b68007b3). **new alerts:**. * 3 for Unused local variable; * 1 for Unused import,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2081#issuecomment-765095335
https://github.com/psi4/psi4/pull/2081#issuecomment-773642206:42,Testability,test,tests,42,FYI this is awaiting qcengine v0.18.0 for tests herein to pass.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2081#issuecomment-773642206
https://github.com/psi4/psi4/pull/2082#issuecomment-764697017:242,Modifiability,refactor,refactoring,242,"> The below line still does an assert within the threaded code. I don't think that hurts any, just pointing out it's still there in case you wanted to remove it. It's already constrained, so I think it's harmless and can remain as a hint for refactoring. My guess is that that file would be helped by separate validation and work steps as many of the functions have defensive checks.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2082#issuecomment-764697017
https://github.com/psi4/psi4/pull/2082#issuecomment-764697017:310,Security,validat,validation,310,"> The below line still does an assert within the threaded code. I don't think that hurts any, just pointing out it's still there in case you wanted to remove it. It's already constrained, so I think it's harmless and can remain as a hint for refactoring. My guess is that that file would be helped by separate validation and work steps as many of the functions have defensive checks.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2082#issuecomment-764697017
https://github.com/psi4/psi4/pull/2082#issuecomment-764697017:31,Testability,assert,assert,31,"> The below line still does an assert within the threaded code. I don't think that hurts any, just pointing out it's still there in case you wanted to remove it. It's already constrained, so I think it's harmless and can remain as a hint for refactoring. My guess is that that file would be helped by separate validation and work steps as many of the functions have defensive checks.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2082#issuecomment-764697017
https://github.com/psi4/psi4/issues/2084#issuecomment-761235033:263,Availability,failure,failures,263,"whoa, poltype needs a lot of software! the segfault you posted is not in my power to interpret. do you have access to the file or commands poltype is submitting to psi4? I suspect a bad interaction among software libraries. does `psi4 --test` run ok (that is, no failures)?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761235033
https://github.com/psi4/psi4/issues/2084#issuecomment-761235033:76,Energy Efficiency,power,power,76,"whoa, poltype needs a lot of software! the segfault you posted is not in my power to interpret. do you have access to the file or commands poltype is submitting to psi4? I suspect a bad interaction among software libraries. does `psi4 --test` run ok (that is, no failures)?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761235033
https://github.com/psi4/psi4/issues/2084#issuecomment-761235033:108,Security,access,access,108,"whoa, poltype needs a lot of software! the segfault you posted is not in my power to interpret. do you have access to the file or commands poltype is submitting to psi4? I suspect a bad interaction among software libraries. does `psi4 --test` run ok (that is, no failures)?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761235033
https://github.com/psi4/psi4/issues/2084#issuecomment-761235033:237,Testability,test,test,237,"whoa, poltype needs a lot of software! the segfault you posted is not in my power to interpret. do you have access to the file or commands poltype is submitting to psi4? I suspect a bad interaction among software libraries. does `psi4 --test` run ok (that is, no failures)?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761235033
https://github.com/psi4/psi4/issues/2084#issuecomment-761268733:58,Testability,log,log,58,You can see the poltype commands in the `methanol-poltype.log` file:; [methanol_test.zip](https://github.com/psi4/psi4/files/5823465/methanol_test.zip); And here is `psi4 --test` result:; [output.log](https://github.com/psi4/psi4/files/5823469/output.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761268733
https://github.com/psi4/psi4/issues/2084#issuecomment-761268733:173,Testability,test,test,173,You can see the poltype commands in the `methanol-poltype.log` file:; [methanol_test.zip](https://github.com/psi4/psi4/files/5823465/methanol_test.zip); And here is `psi4 --test` result:; [output.log](https://github.com/psi4/psi4/files/5823469/output.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761268733
https://github.com/psi4/psi4/issues/2084#issuecomment-761268733:196,Testability,log,log,196,You can see the poltype commands in the `methanol-poltype.log` file:; [methanol_test.zip](https://github.com/psi4/psi4/files/5823465/methanol_test.zip); And here is `psi4 --test` result:; [output.log](https://github.com/psi4/psi4/files/5823469/output.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761268733
https://github.com/psi4/psi4/issues/2084#issuecomment-761268733:251,Testability,log,log,251,You can see the poltype commands in the `methanol-poltype.log` file:; [methanol_test.zip](https://github.com/psi4/psi4/files/5823465/methanol_test.zip); And here is `psi4 --test` result:; [output.log](https://github.com/psi4/psi4/files/5823469/output.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761268733
https://github.com/psi4/psi4/issues/2084#issuecomment-761275679:680,Performance,optimiz,optimize,680,"Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I think the trouble is in predicting the next geom step, so may be of interest to @psi-rking . ```; molecule { ; 0 1; C -0.167039 -0.712374 -0.022325; O 0.119573 0.677072 0.056530; H -0.453842 -0.989160 -1.036819; H -0.997038 -0.962046 0.638968; H 0.691232 -1.312038 0.284396; H 0.775814 0.817745 0.757350; }. set optking { ; frozen_dihedral = (""; 5 1 2 6; 4 1 2 6; 3 1 2 6; ""); }; #set {; # geom_maxiter 2; # g_convergence GAU_LOOSE; #}; #memory 6GB; #set_num_threads(6); #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); #for _ in range(1):; # try:; # optimize('hf/3-21G'); # break; # except OptimizationConvergenceError:; # break; # else:; # try:; # set opt_coordinates cartesian; # optimize('hf/3-21G'); # break; # except OptimizationConvergenceError:; # pass; #clean(). optimize(""hf/3-21G"") # segfaults; #optimize(""hf/cc-pvdz"") # 4 iter; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761275679
https://github.com/psi4/psi4/issues/2084#issuecomment-761275679:720,Performance,Optimiz,OptimizationConvergenceError,720,"Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I think the trouble is in predicting the next geom step, so may be of interest to @psi-rking . ```; molecule { ; 0 1; C -0.167039 -0.712374 -0.022325; O 0.119573 0.677072 0.056530; H -0.453842 -0.989160 -1.036819; H -0.997038 -0.962046 0.638968; H 0.691232 -1.312038 0.284396; H 0.775814 0.817745 0.757350; }. set optking { ; frozen_dihedral = (""; 5 1 2 6; 4 1 2 6; 3 1 2 6; ""); }; #set {; # geom_maxiter 2; # g_convergence GAU_LOOSE; #}; #memory 6GB; #set_num_threads(6); #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); #for _ in range(1):; # try:; # optimize('hf/3-21G'); # break; # except OptimizationConvergenceError:; # break; # else:; # try:; # set opt_coordinates cartesian; # optimize('hf/3-21G'); # break; # except OptimizationConvergenceError:; # pass; #clean(). optimize(""hf/3-21G"") # segfaults; #optimize(""hf/cc-pvdz"") # 4 iter; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761275679
https://github.com/psi4/psi4/issues/2084#issuecomment-761275679:812,Performance,optimiz,optimize,812,"Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I think the trouble is in predicting the next geom step, so may be of interest to @psi-rking . ```; molecule { ; 0 1; C -0.167039 -0.712374 -0.022325; O 0.119573 0.677072 0.056530; H -0.453842 -0.989160 -1.036819; H -0.997038 -0.962046 0.638968; H 0.691232 -1.312038 0.284396; H 0.775814 0.817745 0.757350; }. set optking { ; frozen_dihedral = (""; 5 1 2 6; 4 1 2 6; 3 1 2 6; ""); }; #set {; # geom_maxiter 2; # g_convergence GAU_LOOSE; #}; #memory 6GB; #set_num_threads(6); #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); #for _ in range(1):; # try:; # optimize('hf/3-21G'); # break; # except OptimizationConvergenceError:; # break; # else:; # try:; # set opt_coordinates cartesian; # optimize('hf/3-21G'); # break; # except OptimizationConvergenceError:; # pass; #clean(). optimize(""hf/3-21G"") # segfaults; #optimize(""hf/cc-pvdz"") # 4 iter; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761275679
https://github.com/psi4/psi4/issues/2084#issuecomment-761275679:852,Performance,Optimiz,OptimizationConvergenceError,852,"Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I think the trouble is in predicting the next geom step, so may be of interest to @psi-rking . ```; molecule { ; 0 1; C -0.167039 -0.712374 -0.022325; O 0.119573 0.677072 0.056530; H -0.453842 -0.989160 -1.036819; H -0.997038 -0.962046 0.638968; H 0.691232 -1.312038 0.284396; H 0.775814 0.817745 0.757350; }. set optking { ; frozen_dihedral = (""; 5 1 2 6; 4 1 2 6; 3 1 2 6; ""); }; #set {; # geom_maxiter 2; # g_convergence GAU_LOOSE; #}; #memory 6GB; #set_num_threads(6); #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); #for _ in range(1):; # try:; # optimize('hf/3-21G'); # break; # except OptimizationConvergenceError:; # break; # else:; # try:; # set opt_coordinates cartesian; # optimize('hf/3-21G'); # break; # except OptimizationConvergenceError:; # pass; #clean(). optimize(""hf/3-21G"") # segfaults; #optimize(""hf/cc-pvdz"") # 4 iter; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761275679
https://github.com/psi4/psi4/issues/2084#issuecomment-761275679:901,Performance,optimiz,optimize,901,"Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I think the trouble is in predicting the next geom step, so may be of interest to @psi-rking . ```; molecule { ; 0 1; C -0.167039 -0.712374 -0.022325; O 0.119573 0.677072 0.056530; H -0.453842 -0.989160 -1.036819; H -0.997038 -0.962046 0.638968; H 0.691232 -1.312038 0.284396; H 0.775814 0.817745 0.757350; }. set optking { ; frozen_dihedral = (""; 5 1 2 6; 4 1 2 6; 3 1 2 6; ""); }; #set {; # geom_maxiter 2; # g_convergence GAU_LOOSE; #}; #memory 6GB; #set_num_threads(6); #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); #for _ in range(1):; # try:; # optimize('hf/3-21G'); # break; # except OptimizationConvergenceError:; # break; # else:; # try:; # set opt_coordinates cartesian; # optimize('hf/3-21G'); # break; # except OptimizationConvergenceError:; # pass; #clean(). optimize(""hf/3-21G"") # segfaults; #optimize(""hf/cc-pvdz"") # 4 iter; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761275679
https://github.com/psi4/psi4/issues/2084#issuecomment-761275679:936,Performance,optimiz,optimize,936,"Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I think the trouble is in predicting the next geom step, so may be of interest to @psi-rking . ```; molecule { ; 0 1; C -0.167039 -0.712374 -0.022325; O 0.119573 0.677072 0.056530; H -0.453842 -0.989160 -1.036819; H -0.997038 -0.962046 0.638968; H 0.691232 -1.312038 0.284396; H 0.775814 0.817745 0.757350; }. set optking { ; frozen_dihedral = (""; 5 1 2 6; 4 1 2 6; 3 1 2 6; ""); }; #set {; # geom_maxiter 2; # g_convergence GAU_LOOSE; #}; #memory 6GB; #set_num_threads(6); #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); #for _ in range(1):; # try:; # optimize('hf/3-21G'); # break; # except OptimizationConvergenceError:; # break; # else:; # try:; # set opt_coordinates cartesian; # optimize('hf/3-21G'); # break; # except OptimizationConvergenceError:; # pass; #clean(). optimize(""hf/3-21G"") # segfaults; #optimize(""hf/cc-pvdz"") # 4 iter; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761275679
https://github.com/psi4/psi4/issues/2084#issuecomment-761275679:98,Safety,predict,predicting,98,"Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I think the trouble is in predicting the next geom step, so may be of interest to @psi-rking . ```; molecule { ; 0 1; C -0.167039 -0.712374 -0.022325; O 0.119573 0.677072 0.056530; H -0.453842 -0.989160 -1.036819; H -0.997038 -0.962046 0.638968; H 0.691232 -1.312038 0.284396; H 0.775814 0.817745 0.757350; }. set optking { ; frozen_dihedral = (""; 5 1 2 6; 4 1 2 6; 3 1 2 6; ""); }; #set {; # geom_maxiter 2; # g_convergence GAU_LOOSE; #}; #memory 6GB; #set_num_threads(6); #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); #for _ in range(1):; # try:; # optimize('hf/3-21G'); # break; # except OptimizationConvergenceError:; # break; # else:; # try:; # set opt_coordinates cartesian; # optimize('hf/3-21G'); # break; # except OptimizationConvergenceError:; # pass; #clean(). optimize(""hf/3-21G"") # segfaults; #optimize(""hf/cc-pvdz"") # 4 iter; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761275679
https://github.com/psi4/psi4/issues/2084#issuecomment-761275679:611,Testability,test,test,611,"Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I think the trouble is in predicting the next geom step, so may be of interest to @psi-rking . ```; molecule { ; 0 1; C -0.167039 -0.712374 -0.022325; O 0.119573 0.677072 0.056530; H -0.453842 -0.989160 -1.036819; H -0.997038 -0.962046 0.638968; H 0.691232 -1.312038 0.284396; H 0.775814 0.817745 0.757350; }. set optking { ; frozen_dihedral = (""; 5 1 2 6; 4 1 2 6; 3 1 2 6; ""); }; #set {; # geom_maxiter 2; # g_convergence GAU_LOOSE; #}; #memory 6GB; #set_num_threads(6); #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); #for _ in range(1):; # try:; # optimize('hf/3-21G'); # break; # except OptimizationConvergenceError:; # break; # else:; # try:; # set opt_coordinates cartesian; # optimize('hf/3-21G'); # break; # except OptimizationConvergenceError:; # pass; #clean(). optimize(""hf/3-21G"") # segfaults; #optimize(""hf/cc-pvdz"") # 4 iter; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761275679
https://github.com/psi4/psi4/issues/2084#issuecomment-761373278:147,Performance,optimiz,optimize,147,"I'm not sure what the problem is but this works fine, I'm happy to say :). set optking {. frozen_dihedral = ("". 5 1 2 6. 4 1 2 6. 3 1 2 6. ""). }. #optimize(""hf/3-21G""). import optking. set basis 3-21g. optking.optimize_psi4('hf'). On Fri, Jan 15, 2021 at 6:42 PM Lori A. Burns <notifications@github.com>; wrote:. > Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I; > think the trouble is in predicting the next geom step, so may be of; > interest to @psi-rking <https://github.com/psi-rking>; >; > molecule {; > 0 1; > C -0.167039 -0.712374 -0.022325; > O 0.119573 0.677072 0.056530; > H -0.453842 -0.989160 -1.036819; > H -0.997038 -0.962046 0.638968; > H 0.691232 -1.312038 0.284396; > H 0.775814 0.817745 0.757350; > }; >; > set optking {; > frozen_dihedral = (""; > 5 1 2 6; > 4 1 2 6; > 3 1 2 6; > ""); > }; > #set {; > # geom_maxiter 2; > # g_convergence GAU_LOOSE; > #}; > #memory 6GB; > #set_num_threads(6); > #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); > #for _ in range(1):; > # try:; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # break; > # else:; > # try:; > # set opt_coordinates cartesian; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # pass; > #clean(); >; > optimize(""hf/3-21G"") # segfaults; > #optimize(""hf/cc-pvdz"") # 4 iter; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2084#issuecomment-761275679>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAEFTYTU5HYJQMMSDS2DOHPANCNFSM4WETR7OA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761373278
https://github.com/psi4/psi4/issues/2084#issuecomment-761373278:1082,Performance,optimiz,optimize,1082,"I'm not sure what the problem is but this works fine, I'm happy to say :). set optking {. frozen_dihedral = ("". 5 1 2 6. 4 1 2 6. 3 1 2 6. ""). }. #optimize(""hf/3-21G""). import optking. set basis 3-21g. optking.optimize_psi4('hf'). On Fri, Jan 15, 2021 at 6:42 PM Lori A. Burns <notifications@github.com>; wrote:. > Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I; > think the trouble is in predicting the next geom step, so may be of; > interest to @psi-rking <https://github.com/psi-rking>; >; > molecule {; > 0 1; > C -0.167039 -0.712374 -0.022325; > O 0.119573 0.677072 0.056530; > H -0.453842 -0.989160 -1.036819; > H -0.997038 -0.962046 0.638968; > H 0.691232 -1.312038 0.284396; > H 0.775814 0.817745 0.757350; > }; >; > set optking {; > frozen_dihedral = (""; > 5 1 2 6; > 4 1 2 6; > 3 1 2 6; > ""); > }; > #set {; > # geom_maxiter 2; > # g_convergence GAU_LOOSE; > #}; > #memory 6GB; > #set_num_threads(6); > #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); > #for _ in range(1):; > # try:; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # break; > # else:; > # try:; > # set opt_coordinates cartesian; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # pass; > #clean(); >; > optimize(""hf/3-21G"") # segfaults; > #optimize(""hf/cc-pvdz"") # 4 iter; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2084#issuecomment-761275679>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAEFTYTU5HYJQMMSDS2DOHPANCNFSM4WETR7OA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761373278
https://github.com/psi4/psi4/issues/2084#issuecomment-761373278:1126,Performance,Optimiz,OptimizationConvergenceError,1126,"I'm not sure what the problem is but this works fine, I'm happy to say :). set optking {. frozen_dihedral = ("". 5 1 2 6. 4 1 2 6. 3 1 2 6. ""). }. #optimize(""hf/3-21G""). import optking. set basis 3-21g. optking.optimize_psi4('hf'). On Fri, Jan 15, 2021 at 6:42 PM Lori A. Burns <notifications@github.com>; wrote:. > Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I; > think the trouble is in predicting the next geom step, so may be of; > interest to @psi-rking <https://github.com/psi-rking>; >; > molecule {; > 0 1; > C -0.167039 -0.712374 -0.022325; > O 0.119573 0.677072 0.056530; > H -0.453842 -0.989160 -1.036819; > H -0.997038 -0.962046 0.638968; > H 0.691232 -1.312038 0.284396; > H 0.775814 0.817745 0.757350; > }; >; > set optking {; > frozen_dihedral = (""; > 5 1 2 6; > 4 1 2 6; > 3 1 2 6; > ""); > }; > #set {; > # geom_maxiter 2; > # g_convergence GAU_LOOSE; > #}; > #memory 6GB; > #set_num_threads(6); > #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); > #for _ in range(1):; > # try:; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # break; > # else:; > # try:; > # set opt_coordinates cartesian; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # pass; > #clean(); >; > optimize(""hf/3-21G"") # segfaults; > #optimize(""hf/cc-pvdz"") # 4 iter; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2084#issuecomment-761275679>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAEFTYTU5HYJQMMSDS2DOHPANCNFSM4WETR7OA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761373278
https://github.com/psi4/psi4/issues/2084#issuecomment-761373278:1228,Performance,optimiz,optimize,1228,"I'm not sure what the problem is but this works fine, I'm happy to say :). set optking {. frozen_dihedral = ("". 5 1 2 6. 4 1 2 6. 3 1 2 6. ""). }. #optimize(""hf/3-21G""). import optking. set basis 3-21g. optking.optimize_psi4('hf'). On Fri, Jan 15, 2021 at 6:42 PM Lori A. Burns <notifications@github.com>; wrote:. > Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I; > think the trouble is in predicting the next geom step, so may be of; > interest to @psi-rking <https://github.com/psi-rking>; >; > molecule {; > 0 1; > C -0.167039 -0.712374 -0.022325; > O 0.119573 0.677072 0.056530; > H -0.453842 -0.989160 -1.036819; > H -0.997038 -0.962046 0.638968; > H 0.691232 -1.312038 0.284396; > H 0.775814 0.817745 0.757350; > }; >; > set optking {; > frozen_dihedral = (""; > 5 1 2 6; > 4 1 2 6; > 3 1 2 6; > ""); > }; > #set {; > # geom_maxiter 2; > # g_convergence GAU_LOOSE; > #}; > #memory 6GB; > #set_num_threads(6); > #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); > #for _ in range(1):; > # try:; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # break; > # else:; > # try:; > # set opt_coordinates cartesian; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # pass; > #clean(); >; > optimize(""hf/3-21G"") # segfaults; > #optimize(""hf/cc-pvdz"") # 4 iter; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2084#issuecomment-761275679>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAEFTYTU5HYJQMMSDS2DOHPANCNFSM4WETR7OA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761373278
https://github.com/psi4/psi4/issues/2084#issuecomment-761373278:1272,Performance,Optimiz,OptimizationConvergenceError,1272,"I'm not sure what the problem is but this works fine, I'm happy to say :). set optking {. frozen_dihedral = ("". 5 1 2 6. 4 1 2 6. 3 1 2 6. ""). }. #optimize(""hf/3-21G""). import optking. set basis 3-21g. optking.optimize_psi4('hf'). On Fri, Jan 15, 2021 at 6:42 PM Lori A. Burns <notifications@github.com>; wrote:. > Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I; > think the trouble is in predicting the next geom step, so may be of; > interest to @psi-rking <https://github.com/psi-rking>; >; > molecule {; > 0 1; > C -0.167039 -0.712374 -0.022325; > O 0.119573 0.677072 0.056530; > H -0.453842 -0.989160 -1.036819; > H -0.997038 -0.962046 0.638968; > H 0.691232 -1.312038 0.284396; > H 0.775814 0.817745 0.757350; > }; >; > set optking {; > frozen_dihedral = (""; > 5 1 2 6; > 4 1 2 6; > 3 1 2 6; > ""); > }; > #set {; > # geom_maxiter 2; > # g_convergence GAU_LOOSE; > #}; > #memory 6GB; > #set_num_threads(6); > #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); > #for _ in range(1):; > # try:; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # break; > # else:; > # try:; > # set opt_coordinates cartesian; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # pass; > #clean(); >; > optimize(""hf/3-21G"") # segfaults; > #optimize(""hf/cc-pvdz"") # 4 iter; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2084#issuecomment-761275679>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAEFTYTU5HYJQMMSDS2DOHPANCNFSM4WETR7OA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761373278
https://github.com/psi4/psi4/issues/2084#issuecomment-761373278:1330,Performance,optimiz,optimize,1330,"I'm not sure what the problem is but this works fine, I'm happy to say :). set optking {. frozen_dihedral = ("". 5 1 2 6. 4 1 2 6. 3 1 2 6. ""). }. #optimize(""hf/3-21G""). import optking. set basis 3-21g. optking.optimize_psi4('hf'). On Fri, Jan 15, 2021 at 6:42 PM Lori A. Burns <notifications@github.com>; wrote:. > Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I; > think the trouble is in predicting the next geom step, so may be of; > interest to @psi-rking <https://github.com/psi-rking>; >; > molecule {; > 0 1; > C -0.167039 -0.712374 -0.022325; > O 0.119573 0.677072 0.056530; > H -0.453842 -0.989160 -1.036819; > H -0.997038 -0.962046 0.638968; > H 0.691232 -1.312038 0.284396; > H 0.775814 0.817745 0.757350; > }; >; > set optking {; > frozen_dihedral = (""; > 5 1 2 6; > 4 1 2 6; > 3 1 2 6; > ""); > }; > #set {; > # geom_maxiter 2; > # g_convergence GAU_LOOSE; > #}; > #memory 6GB; > #set_num_threads(6); > #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); > #for _ in range(1):; > # try:; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # break; > # else:; > # try:; > # set opt_coordinates cartesian; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # pass; > #clean(); >; > optimize(""hf/3-21G"") # segfaults; > #optimize(""hf/cc-pvdz"") # 4 iter; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2084#issuecomment-761275679>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAEFTYTU5HYJQMMSDS2DOHPANCNFSM4WETR7OA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761373278
https://github.com/psi4/psi4/issues/2084#issuecomment-761373278:1367,Performance,optimiz,optimize,1367,"I'm not sure what the problem is but this works fine, I'm happy to say :). set optking {. frozen_dihedral = ("". 5 1 2 6. 4 1 2 6. 3 1 2 6. ""). }. #optimize(""hf/3-21G""). import optking. set basis 3-21g. optking.optimize_psi4('hf'). On Fri, Jan 15, 2021 at 6:42 PM Lori A. Burns <notifications@github.com>; wrote:. > Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I; > think the trouble is in predicting the next geom step, so may be of; > interest to @psi-rking <https://github.com/psi-rking>; >; > molecule {; > 0 1; > C -0.167039 -0.712374 -0.022325; > O 0.119573 0.677072 0.056530; > H -0.453842 -0.989160 -1.036819; > H -0.997038 -0.962046 0.638968; > H 0.691232 -1.312038 0.284396; > H 0.775814 0.817745 0.757350; > }; >; > set optking {; > frozen_dihedral = (""; > 5 1 2 6; > 4 1 2 6; > 3 1 2 6; > ""); > }; > #set {; > # geom_maxiter 2; > # g_convergence GAU_LOOSE; > #}; > #memory 6GB; > #set_num_threads(6); > #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); > #for _ in range(1):; > # try:; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # break; > # else:; > # try:; > # set opt_coordinates cartesian; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # pass; > #clean(); >; > optimize(""hf/3-21G"") # segfaults; > #optimize(""hf/cc-pvdz"") # 4 iter; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2084#issuecomment-761275679>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAEFTYTU5HYJQMMSDS2DOHPANCNFSM4WETR7OA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761373278
https://github.com/psi4/psi4/issues/2084#issuecomment-761373278:416,Safety,predict,predicting,416,"I'm not sure what the problem is but this works fine, I'm happy to say :). set optking {. frozen_dihedral = ("". 5 1 2 6. 4 1 2 6. 3 1 2 6. ""). }. #optimize(""hf/3-21G""). import optking. set basis 3-21g. optking.optimize_psi4('hf'). On Fri, Jan 15, 2021 at 6:42 PM Lori A. Burns <notifications@github.com>; wrote:. > Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I; > think the trouble is in predicting the next geom step, so may be of; > interest to @psi-rking <https://github.com/psi-rking>; >; > molecule {; > 0 1; > C -0.167039 -0.712374 -0.022325; > O 0.119573 0.677072 0.056530; > H -0.453842 -0.989160 -1.036819; > H -0.997038 -0.962046 0.638968; > H 0.691232 -1.312038 0.284396; > H 0.775814 0.817745 0.757350; > }; >; > set optking {; > frozen_dihedral = (""; > 5 1 2 6; > 4 1 2 6; > 3 1 2 6; > ""); > }; > #set {; > # geom_maxiter 2; > # g_convergence GAU_LOOSE; > #}; > #memory 6GB; > #set_num_threads(6); > #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); > #for _ in range(1):; > # try:; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # break; > # else:; > # try:; > # set opt_coordinates cartesian; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # pass; > #clean(); >; > optimize(""hf/3-21G"") # segfaults; > #optimize(""hf/cc-pvdz"") # 4 iter; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2084#issuecomment-761275679>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAEFTYTU5HYJQMMSDS2DOHPANCNFSM4WETR7OA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761373278
https://github.com/psi4/psi4/issues/2084#issuecomment-761373278:1007,Testability,test,test,1007,"I'm not sure what the problem is but this works fine, I'm happy to say :). set optking {. frozen_dihedral = ("". 5 1 2 6. 4 1 2 6. 3 1 2 6. ""). }. #optimize(""hf/3-21G""). import optking. set basis 3-21g. optking.optimize_psi4('hf'). On Fri, Jan 15, 2021 at 6:42 PM Lori A. Burns <notifications@github.com>; wrote:. > Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I; > think the trouble is in predicting the next geom step, so may be of; > interest to @psi-rking <https://github.com/psi-rking>; >; > molecule {; > 0 1; > C -0.167039 -0.712374 -0.022325; > O 0.119573 0.677072 0.056530; > H -0.453842 -0.989160 -1.036819; > H -0.997038 -0.962046 0.638968; > H 0.691232 -1.312038 0.284396; > H 0.775814 0.817745 0.757350; > }; >; > set optking {; > frozen_dihedral = (""; > 5 1 2 6; > 4 1 2 6; > 3 1 2 6; > ""); > }; > #set {; > # geom_maxiter 2; > # g_convergence GAU_LOOSE; > #}; > #memory 6GB; > #set_num_threads(6); > #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); > #for _ in range(1):; > # try:; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # break; > # else:; > # try:; > # set opt_coordinates cartesian; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # pass; > #clean(); >; > optimize(""hf/3-21G"") # segfaults; > #optimize(""hf/cc-pvdz"") # 4 iter; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2084#issuecomment-761275679>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAEFTYTU5HYJQMMSDS2DOHPANCNFSM4WETR7OA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761373278
https://github.com/psi4/psi4/pull/2085#issuecomment-763014073:213,Energy Efficiency,efficient,efficient,213,Btw according to Henrik Koch's recent paper [doi:10.1021/acs.jctc.0c00686](https://pubs.acs.org/doi/10.1021/acs.jctc.0c00686) the CC3 implementation in Psi4 is slower by an order or two of magnitude than the most efficient implementations in other codes...,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2085#issuecomment-763014073
https://github.com/psi4/psi4/pull/2085#issuecomment-763209736:58,Testability,test,test,58,"@loriab OK, should be good to go now. Although the 'bash' test started failing for some odd reason, after that keyword fix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2085#issuecomment-763209736
https://github.com/psi4/psi4/pull/2085#issuecomment-763212959:91,Deployability,pipeline,pipelines,91,"ah, you can fix Linux CI by adding `=4` to https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L85 . I forgot that regular `conda install psi4` has constrained libxc, but CI doesn't. Is that what you meant by ""bash test""?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2085#issuecomment-763212959
https://github.com/psi4/psi4/pull/2085#issuecomment-763212959:107,Deployability,pipeline,pipelines-linux,107,"ah, you can fix Linux CI by adding `=4` to https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L85 . I forgot that regular `conda install psi4` has constrained libxc, but CI doesn't. Is that what you meant by ""bash test""?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2085#issuecomment-763212959
https://github.com/psi4/psi4/pull/2085#issuecomment-763212959:162,Deployability,install,install,162,"ah, you can fix Linux CI by adding `=4` to https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L85 . I forgot that regular `conda install psi4` has constrained libxc, but CI doesn't. Is that what you meant by ""bash test""?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2085#issuecomment-763212959
https://github.com/psi4/psi4/pull/2085#issuecomment-763212959:247,Testability,test,test,247,"ah, you can fix Linux CI by adding `=4` to https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L85 . I forgot that regular `conda install psi4` has constrained libxc, but CI doesn't. Is that what you meant by ""bash test""?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2085#issuecomment-763212959
https://github.com/psi4/psi4/pull/2085#issuecomment-763311657:61,Availability,error,error,61,"Yeah, I haven't looked at Azure much ever, but I noticed the error had; something to do with libxc. On Tue, Jan 19, 2021 at 5:38 PM Lori A. Burns <notifications@github.com>; wrote:. > ah, you can fix Linux CI by adding =4 to; > https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L85; > . I forgot that regular conda install psi4 has constrained libxc, but CI; > doesn't. Is that what you meant by ""bash test""?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2085#issuecomment-763212959>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAH7RW2EVRVZ4STADS2YJXNANCNFSM4WE43WOQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2085#issuecomment-763311657
https://github.com/psi4/psi4/pull/2085#issuecomment-763311657:276,Deployability,pipeline,pipelines,276,"Yeah, I haven't looked at Azure much ever, but I noticed the error had; something to do with libxc. On Tue, Jan 19, 2021 at 5:38 PM Lori A. Burns <notifications@github.com>; wrote:. > ah, you can fix Linux CI by adding =4 to; > https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L85; > . I forgot that regular conda install psi4 has constrained libxc, but CI; > doesn't. Is that what you meant by ""bash test""?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2085#issuecomment-763212959>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAH7RW2EVRVZ4STADS2YJXNANCNFSM4WE43WOQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2085#issuecomment-763311657
https://github.com/psi4/psi4/pull/2085#issuecomment-763311657:292,Deployability,pipeline,pipelines-linux,292,"Yeah, I haven't looked at Azure much ever, but I noticed the error had; something to do with libxc. On Tue, Jan 19, 2021 at 5:38 PM Lori A. Burns <notifications@github.com>; wrote:. > ah, you can fix Linux CI by adding =4 to; > https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L85; > . I forgot that regular conda install psi4 has constrained libxc, but CI; > doesn't. Is that what you meant by ""bash test""?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2085#issuecomment-763212959>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAH7RW2EVRVZ4STADS2YJXNANCNFSM4WE43WOQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2085#issuecomment-763311657
https://github.com/psi4/psi4/pull/2085#issuecomment-763311657:349,Deployability,install,install,349,"Yeah, I haven't looked at Azure much ever, but I noticed the error had; something to do with libxc. On Tue, Jan 19, 2021 at 5:38 PM Lori A. Burns <notifications@github.com>; wrote:. > ah, you can fix Linux CI by adding =4 to; > https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L85; > . I forgot that regular conda install psi4 has constrained libxc, but CI; > doesn't. Is that what you meant by ""bash test""?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2085#issuecomment-763212959>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAH7RW2EVRVZ4STADS2YJXNANCNFSM4WE43WOQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2085#issuecomment-763311657
https://github.com/psi4/psi4/pull/2085#issuecomment-763311657:436,Testability,test,test,436,"Yeah, I haven't looked at Azure much ever, but I noticed the error had; something to do with libxc. On Tue, Jan 19, 2021 at 5:38 PM Lori A. Burns <notifications@github.com>; wrote:. > ah, you can fix Linux CI by adding =4 to; > https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L85; > . I forgot that regular conda install psi4 has constrained libxc, but CI; > doesn't. Is that what you meant by ""bash test""?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2085#issuecomment-763212959>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAH7RW2EVRVZ4STADS2YJXNANCNFSM4WE43WOQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2085#issuecomment-763311657
https://github.com/psi4/psi4/issues/2086#issuecomment-762070854:90,Integrability,interface,interface,90,There are various ways to modify the wfn object at the python level. E.g. using the numpy interface (https://psicode.org/psi4manual/master/numpy.html) or wfn serialization (https://github.com/psi4/psi4/blob/master/samples/serial-wfn/input.dat). You can easily overwrite the Density or Coefficient matrix with a numpy array or a psi4 matrix object. What is an example operation where our current interface is insufficient?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2086#issuecomment-762070854
https://github.com/psi4/psi4/issues/2086#issuecomment-762070854:395,Integrability,interface,interface,395,There are various ways to modify the wfn object at the python level. E.g. using the numpy interface (https://psicode.org/psi4manual/master/numpy.html) or wfn serialization (https://github.com/psi4/psi4/blob/master/samples/serial-wfn/input.dat). You can easily overwrite the Density or Coefficient matrix with a numpy array or a psi4 matrix object. What is an example operation where our current interface is insufficient?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2086#issuecomment-762070854
https://github.com/psi4/psi4/issues/2086#issuecomment-762756780:532,Energy Efficiency,energy,energy,532,"Thank you very much for your answer! The second link you give really explains how to convert Wavefunction to dictionary and vice versa. And it is indeed possible to change necessary things in the dictionary.; Concerning the first link, I didn't find there anything about wavefunction. That might be my problem, I often do not see things just in front of my eyes.; However, there is an example when it is difficult modify a wavefunction in a desired manner. If I have normal wavefunction resulting from; ```SCF_E_psi, scf_wfn = psi4.energy('SCF', return_wfn=True)```; And after that I want to change 1) nuclear charges in the molecule; 2) number of occupied states; 3) orbitals and density;; the conversion to dictionary and back does not work because psi4 thinks that charge, multiplicity and the number of occupied states are inconsistent (which is not in fact true). By the way, special thanks to you for the possibility to set arbitrary fractional nuclear charges!!! ; When I found it, I felt really really lucky! It is crucial for the approach I am trying implement.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2086#issuecomment-762756780
https://github.com/psi4/psi4/issues/2086#issuecomment-762756780:610,Energy Efficiency,charge,charges,610,"Thank you very much for your answer! The second link you give really explains how to convert Wavefunction to dictionary and vice versa. And it is indeed possible to change necessary things in the dictionary.; Concerning the first link, I didn't find there anything about wavefunction. That might be my problem, I often do not see things just in front of my eyes.; However, there is an example when it is difficult modify a wavefunction in a desired manner. If I have normal wavefunction resulting from; ```SCF_E_psi, scf_wfn = psi4.energy('SCF', return_wfn=True)```; And after that I want to change 1) nuclear charges in the molecule; 2) number of occupied states; 3) orbitals and density;; the conversion to dictionary and back does not work because psi4 thinks that charge, multiplicity and the number of occupied states are inconsistent (which is not in fact true). By the way, special thanks to you for the possibility to set arbitrary fractional nuclear charges!!! ; When I found it, I felt really really lucky! It is crucial for the approach I am trying implement.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2086#issuecomment-762756780
https://github.com/psi4/psi4/issues/2086#issuecomment-762756780:768,Energy Efficiency,charge,charge,768,"Thank you very much for your answer! The second link you give really explains how to convert Wavefunction to dictionary and vice versa. And it is indeed possible to change necessary things in the dictionary.; Concerning the first link, I didn't find there anything about wavefunction. That might be my problem, I often do not see things just in front of my eyes.; However, there is an example when it is difficult modify a wavefunction in a desired manner. If I have normal wavefunction resulting from; ```SCF_E_psi, scf_wfn = psi4.energy('SCF', return_wfn=True)```; And after that I want to change 1) nuclear charges in the molecule; 2) number of occupied states; 3) orbitals and density;; the conversion to dictionary and back does not work because psi4 thinks that charge, multiplicity and the number of occupied states are inconsistent (which is not in fact true). By the way, special thanks to you for the possibility to set arbitrary fractional nuclear charges!!! ; When I found it, I felt really really lucky! It is crucial for the approach I am trying implement.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2086#issuecomment-762756780
https://github.com/psi4/psi4/issues/2086#issuecomment-762756780:959,Energy Efficiency,charge,charges,959,"Thank you very much for your answer! The second link you give really explains how to convert Wavefunction to dictionary and vice versa. And it is indeed possible to change necessary things in the dictionary.; Concerning the first link, I didn't find there anything about wavefunction. That might be my problem, I often do not see things just in front of my eyes.; However, there is an example when it is difficult modify a wavefunction in a desired manner. If I have normal wavefunction resulting from; ```SCF_E_psi, scf_wfn = psi4.energy('SCF', return_wfn=True)```; And after that I want to change 1) nuclear charges in the molecule; 2) number of occupied states; 3) orbitals and density;; the conversion to dictionary and back does not work because psi4 thinks that charge, multiplicity and the number of occupied states are inconsistent (which is not in fact true). By the way, special thanks to you for the possibility to set arbitrary fractional nuclear charges!!! ; When I found it, I felt really really lucky! It is crucial for the approach I am trying implement.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2086#issuecomment-762756780
https://github.com/psi4/psi4/issues/2087#issuecomment-764948136:173,Deployability,update,updated,173,I would not mind trying to fix this. ; I am not very familiar with the manual. I have identified the .rts file on the repo. But I am uncertain if any other files need to be updated as well.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2087#issuecomment-764948136
https://github.com/psi4/psi4/pull/2089#issuecomment-768401902:58,Deployability,Pipeline,Pipelines,58,"Alright, I made the changes. I am now uncertain why Azure Pipelines was unhappy with one of the commits.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2089#issuecomment-768401902
https://github.com/psi4/psi4/pull/2089#issuecomment-768406431:70,Security,access,access,70,Thanks. We'll see how azure likes this state. It's a little tricky to access CI records for old commits.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2089#issuecomment-768406431
https://github.com/psi4/psi4/pull/2092#issuecomment-767181973:129,Testability,log,logs,129,It looks like gcc5.5 has a grievance with the deprecated syntax https://dev.azure.com/psi4/psi4/_build/results?buildId=2687&view=logs&j=258bfeeb-871e-502d-292b-61cd4e6d17f6&t=7c2e2bd2-871d-5948-1d43-9089e6bce09a&l=253 . Looks like it came about in gcc6 https://stackoverflow.com/a/33096368 . I can confirm gcc 7.3 is ok with it. What do we want to do? Give up the deprecated enum value or bump the gcc requirement?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2092#issuecomment-767181973
https://github.com/psi4/psi4/pull/2092#issuecomment-767187015:25,Deployability,update,update,25,"I'm inclined to force an update, given that GCC5 hasn't been supported for years, but as I'm not familiar with cluster management, my opinion isn't very strong.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2092#issuecomment-767187015
https://github.com/psi4/psi4/pull/2092#issuecomment-767309054:129,Modifiability,variab,variables,129,"fwiw, I don't anticipate GT having problems if GCC min boosted. alternately, can do alternate defs of the enum with preprocessor variables.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2092#issuecomment-767309054
https://github.com/psi4/psi4/pull/2092#issuecomment-768020329:41,Modifiability,Extend,Extended,41,"I think Debian Jessie, which is still in Extended LTS period, ships with GCC 4.9. Stretch (which is in LTS) ships with 6.3. Similarly, it looks like everything older than (and including) RHEL7 came with GCC 4.8, but for RHEL6 and RHEL7 their respective DTS packages come with GCC 6.2 or newer. I vote to deprecate GCC 5 on principle...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2092#issuecomment-768020329
https://github.com/psi4/psi4/pull/2092#issuecomment-769547918:197,Availability,fault,fault,197,"I'm expecting C++ lgtm to fail for the foreseeable future b/c the additional analysis of libxc is exceeding the 4h time limit. Not sure why it's running out of disk space <3h, but probably not the fault of this PR. will merge.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2092#issuecomment-769547918
https://github.com/psi4/psi4/pull/2093#issuecomment-768840849:156,Energy Efficiency,energy,energy,156,"> yay for new functionality!; > ; > Your mp2_type/qc_module question is an incisive one. Generally, a new approach will show up in either the method name (`energy(methodname-mp2)`) or in the algorithm option (`mp2_type=dlpno`), not both. So algorithm options (disk_df vs. mem_df) are definitely mp2_type. broad categories that give different answers (conv, df, cd) have usually been formuated as mp2_type. methods that give different answers and are known by name (e.g., fno) have been forulated by method name. I can see dlpno going either way. But the most straightforward for now would be to continue following fno, and use energy(""dlpno-mp2"") and not define a qc_module or mp2_type for dlpno at present.; > ; > For conv options, it'd be good to tie those options (if not set explicitly) into the main e_conv, d/r_conv options.; > ; > In fnocc, AED allows setting some conv crit by percentage, energy, and cutoff. relevant here?. Good to know the difference between module and type, I'll leave as `dlpno-mp2` for now. Per Holger's suggestion, I've added a single `PNO_CONVERGENCE` option that controls the many thresholds and cutoffs specific to this method. DLPNO's `T_CUT_PNO` keyword is analogous to fnocc's `OCC_TOLERANCE`, both control the truncation of natural orbitals based on occupation number. Keywords to truncate by energy or percentage could also be added, I'll have to see if that's offers any improvement.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-768840849
https://github.com/psi4/psi4/pull/2093#issuecomment-768840849:627,Energy Efficiency,energy,energy,627,"> yay for new functionality!; > ; > Your mp2_type/qc_module question is an incisive one. Generally, a new approach will show up in either the method name (`energy(methodname-mp2)`) or in the algorithm option (`mp2_type=dlpno`), not both. So algorithm options (disk_df vs. mem_df) are definitely mp2_type. broad categories that give different answers (conv, df, cd) have usually been formuated as mp2_type. methods that give different answers and are known by name (e.g., fno) have been forulated by method name. I can see dlpno going either way. But the most straightforward for now would be to continue following fno, and use energy(""dlpno-mp2"") and not define a qc_module or mp2_type for dlpno at present.; > ; > For conv options, it'd be good to tie those options (if not set explicitly) into the main e_conv, d/r_conv options.; > ; > In fnocc, AED allows setting some conv crit by percentage, energy, and cutoff. relevant here?. Good to know the difference between module and type, I'll leave as `dlpno-mp2` for now. Per Holger's suggestion, I've added a single `PNO_CONVERGENCE` option that controls the many thresholds and cutoffs specific to this method. DLPNO's `T_CUT_PNO` keyword is analogous to fnocc's `OCC_TOLERANCE`, both control the truncation of natural orbitals based on occupation number. Keywords to truncate by energy or percentage could also be added, I'll have to see if that's offers any improvement.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-768840849
https://github.com/psi4/psi4/pull/2093#issuecomment-768840849:897,Energy Efficiency,energy,energy,897,"> yay for new functionality!; > ; > Your mp2_type/qc_module question is an incisive one. Generally, a new approach will show up in either the method name (`energy(methodname-mp2)`) or in the algorithm option (`mp2_type=dlpno`), not both. So algorithm options (disk_df vs. mem_df) are definitely mp2_type. broad categories that give different answers (conv, df, cd) have usually been formuated as mp2_type. methods that give different answers and are known by name (e.g., fno) have been forulated by method name. I can see dlpno going either way. But the most straightforward for now would be to continue following fno, and use energy(""dlpno-mp2"") and not define a qc_module or mp2_type for dlpno at present.; > ; > For conv options, it'd be good to tie those options (if not set explicitly) into the main e_conv, d/r_conv options.; > ; > In fnocc, AED allows setting some conv crit by percentage, energy, and cutoff. relevant here?. Good to know the difference between module and type, I'll leave as `dlpno-mp2` for now. Per Holger's suggestion, I've added a single `PNO_CONVERGENCE` option that controls the many thresholds and cutoffs specific to this method. DLPNO's `T_CUT_PNO` keyword is analogous to fnocc's `OCC_TOLERANCE`, both control the truncation of natural orbitals based on occupation number. Keywords to truncate by energy or percentage could also be added, I'll have to see if that's offers any improvement.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-768840849
https://github.com/psi4/psi4/pull/2093#issuecomment-768840849:1331,Energy Efficiency,energy,energy,1331,"> yay for new functionality!; > ; > Your mp2_type/qc_module question is an incisive one. Generally, a new approach will show up in either the method name (`energy(methodname-mp2)`) or in the algorithm option (`mp2_type=dlpno`), not both. So algorithm options (disk_df vs. mem_df) are definitely mp2_type. broad categories that give different answers (conv, df, cd) have usually been formuated as mp2_type. methods that give different answers and are known by name (e.g., fno) have been forulated by method name. I can see dlpno going either way. But the most straightforward for now would be to continue following fno, and use energy(""dlpno-mp2"") and not define a qc_module or mp2_type for dlpno at present.; > ; > For conv options, it'd be good to tie those options (if not set explicitly) into the main e_conv, d/r_conv options.; > ; > In fnocc, AED allows setting some conv crit by percentage, energy, and cutoff. relevant here?. Good to know the difference between module and type, I'll leave as `dlpno-mp2` for now. Per Holger's suggestion, I've added a single `PNO_CONVERGENCE` option that controls the many thresholds and cutoffs specific to this method. DLPNO's `T_CUT_PNO` keyword is analogous to fnocc's `OCC_TOLERANCE`, both control the truncation of natural orbitals based on occupation number. Keywords to truncate by energy or percentage could also be added, I'll have to see if that's offers any improvement.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-768840849
https://github.com/psi4/psi4/pull/2093#issuecomment-863471591:108,Integrability,interface,interface,108,"@zachglick Nice job! Are you still working on this? How difficult would it be to wire it up with the Python interface, to expose PNOs and integrals in Python?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-863471591
https://github.com/psi4/psi4/pull/2093#issuecomment-863471591:122,Security,expose,expose,122,"@zachglick Nice job! Are you still working on this? How difficult would it be to wire it up with the Python interface, to expose PNOs and integrals in Python?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-863471591
https://github.com/psi4/psi4/pull/2093#issuecomment-863473343:71,Deployability,release,release,71,"This PR is absolutely not getting merged in until _after_ the Psi4 1.4 release, and I would much prefer that exposing anything non-essential to the Python layer be relegated to a separate PR. This one will need a very careful review as it is.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-863473343
https://github.com/psi4/psi4/pull/2093#issuecomment-863548414:163,Deployability,release,release,163,"Hi @mkrompiec, thanks! I'm still working on local correlation methods in Psi4. This pull request is effectively done, and is only waiting on the official Psi4 1.4 release to be merged. I expect that to happen relatively soon, but I'm not sure of the exact timeline. . Once this pull request is merged in, it would be straightforward to expose PNOs and integrals to the Python layer. By the way, if you're interested in regular (non-DLPNO) two-electron integrals, those are easily accessible through the `MintsHelper` class, [as is done here.](https://github.com/psi4/psi4numpy/blob/1233d1af2d168f91065e4f7dbb1a96e02b95b6e1/Tutorials/01_Psi4NumPy-Basics/1e_mints-helper.ipynb)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-863548414
https://github.com/psi4/psi4/pull/2093#issuecomment-863548414:336,Security,expose,expose,336,"Hi @mkrompiec, thanks! I'm still working on local correlation methods in Psi4. This pull request is effectively done, and is only waiting on the official Psi4 1.4 release to be merged. I expect that to happen relatively soon, but I'm not sure of the exact timeline. . Once this pull request is merged in, it would be straightforward to expose PNOs and integrals to the Python layer. By the way, if you're interested in regular (non-DLPNO) two-electron integrals, those are easily accessible through the `MintsHelper` class, [as is done here.](https://github.com/psi4/psi4numpy/blob/1233d1af2d168f91065e4f7dbb1a96e02b95b6e1/Tutorials/01_Psi4NumPy-Basics/1e_mints-helper.ipynb)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-863548414
https://github.com/psi4/psi4/pull/2093#issuecomment-863548414:480,Security,access,accessible,480,"Hi @mkrompiec, thanks! I'm still working on local correlation methods in Psi4. This pull request is effectively done, and is only waiting on the official Psi4 1.4 release to be merged. I expect that to happen relatively soon, but I'm not sure of the exact timeline. . Once this pull request is merged in, it would be straightforward to expose PNOs and integrals to the Python layer. By the way, if you're interested in regular (non-DLPNO) two-electron integrals, those are easily accessible through the `MintsHelper` class, [as is done here.](https://github.com/psi4/psi4numpy/blob/1233d1af2d168f91065e4f7dbb1a96e02b95b6e1/Tutorials/01_Psi4NumPy-Basics/1e_mints-helper.ipynb)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-863548414
https://github.com/psi4/psi4/pull/2093#issuecomment-908779460:438,Availability,ping,ping,438,"> I finished the `lmp2_iterations` function, and I have a much better feel for how the code works now.; > ; > Zach, do you want me to keep going, or do you want to respond to what I've already flooded you with? I'd rather wait for you to catch up, to avoid having many comment chains at once. Thanks for the super thorough review. You've given me plenty to work through if you want to turn your attention to other things for a bit. I can ping you once I've responded to everything.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-908779460
https://github.com/psi4/psi4/pull/2093#issuecomment-908779460:251,Safety,avoid,avoid,251,"> I finished the `lmp2_iterations` function, and I have a much better feel for how the code works now.; > ; > Zach, do you want me to keep going, or do you want to respond to what I've already flooded you with? I'd rather wait for you to catch up, to avoid having many comment chains at once. Thanks for the super thorough review. You've given me plenty to work through if you want to turn your attention to other things for a bit. I can ping you once I've responded to everything.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-908779460
https://github.com/psi4/psi4/pull/2093#issuecomment-914671958:203,Testability,test,test,203,"> Could you add `dlpno-mp2` also to the CBS driver as new method? https://github.com/psi4/psi4/blob/master/psi4/driver/driver_cbs.py#L743. I added DLPNO-MP2 to the CBS driver, as well as a CBS DLPNO-MP2 test",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-914671958
https://github.com/psi4/psi4/pull/2093#issuecomment-932616184:101,Energy Efficiency,energy,energy,101,"Thanks all for the thorough reviews. I've added the OS/SS decomposition of the DLPNO-MP2 correlation energy and verified that SCS-DLPNO-MP2 works correctly. As far as I know, this PR is ready to be merged.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-932616184
https://github.com/psi4/psi4/pull/2093#issuecomment-932623393:219,Testability,test,tests,219,"Lori seems to have approved, and nobody else has put a hold on this PR in the week since I put out the last call, so I don't think there are objections from core devs. Fix the merge conflict, and I can merge it in once tests pass.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-932623393
https://github.com/psi4/psi4/issues/2097#issuecomment-769922422:295,Availability,avail,available,295,"Those comments aren't always 1:1 with the contents. But what's happening for 6-311+G* in particular is that 3 partial basis sets are getting merged: the 6-311 defined through Kr, the polarization defined through Kr, and the diffuse only defined through Ca. Only elements with partial basis sets available for all three pieces show up in the full basis file, so Kr, etc. are missing. Looking at 6-311+G* at https://www.basissetexchange.org/, that ends at Ca, too, so nothing to update. Does this clear up what's going on?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2097#issuecomment-769922422
https://github.com/psi4/psi4/issues/2097#issuecomment-769922422:477,Deployability,update,update,477,"Those comments aren't always 1:1 with the contents. But what's happening for 6-311+G* in particular is that 3 partial basis sets are getting merged: the 6-311 defined through Kr, the polarization defined through Kr, and the diffuse only defined through Ca. Only elements with partial basis sets available for all three pieces show up in the full basis file, so Kr, etc. are missing. Looking at 6-311+G* at https://www.basissetexchange.org/, that ends at Ca, too, so nothing to update. Does this clear up what's going on?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2097#issuecomment-769922422
https://github.com/psi4/psi4/issues/2097#issuecomment-769922422:495,Usability,clear,clear,495,"Those comments aren't always 1:1 with the contents. But what's happening for 6-311+G* in particular is that 3 partial basis sets are getting merged: the 6-311 defined through Kr, the polarization defined through Kr, and the diffuse only defined through Ca. Only elements with partial basis sets available for all three pieces show up in the full basis file, so Kr, etc. are missing. Looking at 6-311+G* at https://www.basissetexchange.org/, that ends at Ca, too, so nothing to update. Does this clear up what's going on?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2097#issuecomment-769922422
https://github.com/psi4/psi4/issues/2097#issuecomment-769932213:425,Availability,avail,available,425,"Okay thanks! I will close :). On Fri, Jan 29, 2021 at 10:54 AM Lori A. Burns <notifications@github.com>; wrote:. > Those comments aren't always 1:1 with the contents.; >; > But what's happening for 6-311+G* in particular is that 3 partial basis; > sets are getting merged: the 6-311 defined through Kr, the polarization; > defined through Kr, and the diffuse only defined through Ca. Only elements; > with partial basis sets available for all three pieces show up in the full; > basis file, so Kr, etc. are missing. Looking at 6-311+G* at; > https://www.basissetexchange.org/, that ends at Ca, too, so nothing to; > update. Does this clear up what's going on?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2097#issuecomment-769922422>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AKNB26P7KNIQBAOTKDLTCETS4LR4DANCNFSM4WZDDXEA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2097#issuecomment-769932213
https://github.com/psi4/psi4/issues/2097#issuecomment-769932213:616,Deployability,update,update,616,"Okay thanks! I will close :). On Fri, Jan 29, 2021 at 10:54 AM Lori A. Burns <notifications@github.com>; wrote:. > Those comments aren't always 1:1 with the contents.; >; > But what's happening for 6-311+G* in particular is that 3 partial basis; > sets are getting merged: the 6-311 defined through Kr, the polarization; > defined through Kr, and the diffuse only defined through Ca. Only elements; > with partial basis sets available for all three pieces show up in the full; > basis file, so Kr, etc. are missing. Looking at 6-311+G* at; > https://www.basissetexchange.org/, that ends at Ca, too, so nothing to; > update. Does this clear up what's going on?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2097#issuecomment-769922422>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AKNB26P7KNIQBAOTKDLTCETS4LR4DANCNFSM4WZDDXEA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2097#issuecomment-769932213
https://github.com/psi4/psi4/issues/2097#issuecomment-769932213:634,Usability,clear,clear,634,"Okay thanks! I will close :). On Fri, Jan 29, 2021 at 10:54 AM Lori A. Burns <notifications@github.com>; wrote:. > Those comments aren't always 1:1 with the contents.; >; > But what's happening for 6-311+G* in particular is that 3 partial basis; > sets are getting merged: the 6-311 defined through Kr, the polarization; > defined through Kr, and the diffuse only defined through Ca. Only elements; > with partial basis sets available for all three pieces show up in the full; > basis file, so Kr, etc. are missing. Looking at 6-311+G* at; > https://www.basissetexchange.org/, that ends at Ca, too, so nothing to; > update. Does this clear up what's going on?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2097#issuecomment-769922422>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AKNB26P7KNIQBAOTKDLTCETS4LR4DANCNFSM4WZDDXEA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2097#issuecomment-769932213
https://github.com/psi4/psi4/pull/2099#issuecomment-773626229:118,Deployability,configurat,configuration,118,"plugins on windows could be pursued, but they're not in demand. presently failing on OpenMP detection in plugin cmake configuration.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2099#issuecomment-773626229
https://github.com/psi4/psi4/pull/2099#issuecomment-773626229:0,Modifiability,plugin,plugins,0,"plugins on windows could be pursued, but they're not in demand. presently failing on OpenMP detection in plugin cmake configuration.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2099#issuecomment-773626229
https://github.com/psi4/psi4/pull/2099#issuecomment-773626229:105,Modifiability,plugin,plugin,105,"plugins on windows could be pursued, but they're not in demand. presently failing on OpenMP detection in plugin cmake configuration.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2099#issuecomment-773626229
https://github.com/psi4/psi4/pull/2099#issuecomment-773626229:118,Modifiability,config,configuration,118,"plugins on windows could be pursued, but they're not in demand. presently failing on OpenMP detection in plugin cmake configuration.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2099#issuecomment-773626229
https://github.com/psi4/psi4/pull/2099#issuecomment-773626229:92,Safety,detect,detection,92,"plugins on windows could be pursued, but they're not in demand. presently failing on OpenMP detection in plugin cmake configuration.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2099#issuecomment-773626229
https://github.com/psi4/psi4/issues/2102#issuecomment-772517025:3842,Availability,error,error,3842,"10807957900 0.000000000103; > C -1.260557226131 1.493619582118 -0.000000000155; > C -0.000034659568 0.759625960521 -0.000000000159; > C -0.000034625713 -0.759624178218 -0.000000000042; > H -5.916030845275 -1.282197811131 -0.000000001395; > H -5.916031258658 1.282196125448 -0.000000001329; > H -3.903819438194 2.368212991154 -0.000000000840; > H -3.903818961364 -2.368213684326 -0.000000000900; > H -3.380202809742 -3.532377155298 0.000000000843; > H -3.323483157889 -5.783256218484 0.000000001017; > H -1.123533880262 -7.010678898257 0.000000000718; > H 1.123569529821 -7.010687056820 0.000000000512; > H 3.323444251476 -5.783425057171 0.000000000238; > H 3.380590817837 -3.532764155114 0.000000000007; > H 3.903306158089 -2.368093837703 -0.000000000251; > H 5.915904268397 -1.282153443029 -0.000000000487; > H 5.915904332310 1.282151831717 -0.000000000600; > H 3.903306767856 2.368091938384 -0.000000000491; > H 3.380592041773 3.532764158212 -0.000000000516; > H 3.323445571900 5.783426049843 -0.000000000059; > H 1.123570392243 7.010688579024 0.000000000716; > H -1.123534819764 7.010680587949 0.000000001092; > H -3.323484052934 5.783257818228 0.000000001355; > H -3.380204830685 3.532377523087 0.000000001020; > }; > set basis 6-31g; > set reference rhf; > set scf_type DIRECT; > set e_convergence 1e-10; > set d_convergence 1e-8; > set ints_tolerance 0.0; > ; > set dmrg_irrep 0; > set dmrg_multiplicity 1; > set restricted_docc [105,0]; > set active [0,38]; > ; > set dmrg_sweep_states [200, 400, 600, 800]; > set dmrg_sweep_energy_conv [1e-6, 1e-6, 1e-8, 1e-10]; > set dmrg_sweep_dvdson_rtol [1e-5, 1e-5, 1e-5, 1e-8]; > set dmrg_sweep_max_sweeps [10, 10, 8, 6]; > set dmrg_sweep_noise_prefac [0.05, 0.05, 0.05, 0.0]; > set dmrg_scf_active_space loc; > set dmrg_scf_max_iter 100; > set dmrg_mps_write true; > ; > energy(""dmrg-ci""). I believe this might be a memory issue because this exact input file but with the sto-3g basis runs as expected, ""upgrading"" the basis set introduces this error.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2102#issuecomment-772517025
https://github.com/psi4/psi4/issues/2102#issuecomment-772517025:3668,Energy Efficiency,energy,energy,3668,"10807957900 0.000000000103; > C -1.260557226131 1.493619582118 -0.000000000155; > C -0.000034659568 0.759625960521 -0.000000000159; > C -0.000034625713 -0.759624178218 -0.000000000042; > H -5.916030845275 -1.282197811131 -0.000000001395; > H -5.916031258658 1.282196125448 -0.000000001329; > H -3.903819438194 2.368212991154 -0.000000000840; > H -3.903818961364 -2.368213684326 -0.000000000900; > H -3.380202809742 -3.532377155298 0.000000000843; > H -3.323483157889 -5.783256218484 0.000000001017; > H -1.123533880262 -7.010678898257 0.000000000718; > H 1.123569529821 -7.010687056820 0.000000000512; > H 3.323444251476 -5.783425057171 0.000000000238; > H 3.380590817837 -3.532764155114 0.000000000007; > H 3.903306158089 -2.368093837703 -0.000000000251; > H 5.915904268397 -1.282153443029 -0.000000000487; > H 5.915904332310 1.282151831717 -0.000000000600; > H 3.903306767856 2.368091938384 -0.000000000491; > H 3.380592041773 3.532764158212 -0.000000000516; > H 3.323445571900 5.783426049843 -0.000000000059; > H 1.123570392243 7.010688579024 0.000000000716; > H -1.123534819764 7.010680587949 0.000000001092; > H -3.323484052934 5.783257818228 0.000000001355; > H -3.380204830685 3.532377523087 0.000000001020; > }; > set basis 6-31g; > set reference rhf; > set scf_type DIRECT; > set e_convergence 1e-10; > set d_convergence 1e-8; > set ints_tolerance 0.0; > ; > set dmrg_irrep 0; > set dmrg_multiplicity 1; > set restricted_docc [105,0]; > set active [0,38]; > ; > set dmrg_sweep_states [200, 400, 600, 800]; > set dmrg_sweep_energy_conv [1e-6, 1e-6, 1e-8, 1e-10]; > set dmrg_sweep_dvdson_rtol [1e-5, 1e-5, 1e-5, 1e-8]; > set dmrg_sweep_max_sweeps [10, 10, 8, 6]; > set dmrg_sweep_noise_prefac [0.05, 0.05, 0.05, 0.0]; > set dmrg_scf_active_space loc; > set dmrg_scf_max_iter 100; > set dmrg_mps_write true; > ; > energy(""dmrg-ci""). I believe this might be a memory issue because this exact input file but with the sto-3g basis runs as expected, ""upgrading"" the basis set introduces this error.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2102#issuecomment-772517025
https://github.com/psi4/psi4/pull/2103#issuecomment-773428084:385,Testability,log,logs,385,"Hi Lori, thank you for the PR and I really should buy you a beer. It would be useful to show the linking information, which I do not find under ""Build Psi4"". I think we should see `Linking CXX shared library core.cpython*.so` if it works as intended. However, I see `Linking CXX shared module core.cpython*.so` [here](https://dev.azure.com/fevange/Forte/_build/results?buildId=64&view=logs&j=969f314f-c02d-5da0-0600-6f21de6a62ef&t=c92288d5-3ca0-581f-2955-a086c2d0fb85&l=3375).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2103#issuecomment-773428084
https://github.com/psi4/psi4/issues/2108#issuecomment-947293809:107,Availability,error,error,107,"This example came up on the forum the other day: http://forum.psicode.org/t/spectrum-function-tddft-giving-error/2327. Just want to mention a few things in case someone sees this first. As mentioned in the comments of that thread, the keys for the dictionary in <code>res</code> appear to have changed:. * LENGTH-GAUGE ELECTRIC DIPOLE TRANSITION MOMENT → ELECTRIC DIPOLE TRANSITION MOMENT (LEN); * LENGTH-GAUGE ROTATORY STRENGTH → ROTATORY STRENGTH (LEN). those keys work for me with Psi4 1.4 (Git: Rev {HEAD} 9485035). The example also states that the function returns a pair of NumPy arrays. The <code>spectrum</code> function now returns a dictionary with the keys ""convolution"" and ""sticks"" for the different peak types. The values of these are dictionaries with keys ""x"" and ""y"" for ""convolution"", and ""poles"" and ""residues"" for ""sticks"". . The example shows squaring the norm of each dipole transition moment. However, the <code>spectrum</code> function appears to <a href=""https://github.com/psi4/psi4/blob/e06763b09cf3ffe047b18eed04d738711d5ef587/psi4/driver/p4util/spectrum.py#L375"">square the residues for <code>kind == ""opa""</code></a>. I don't think both squarings are necessary, but I'm not sure.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2108#issuecomment-947293809
https://github.com/psi4/psi4/pull/2111#issuecomment-777691236:285,Modifiability,variab,variable,285,This pull request **fixes 1 alert** when merging 4ceb1dad366138ee31cd7e3cfbcda9d385cc1ad7 into ccd3033072fbb113ab72d073e42948f2b57ab157 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-91582455a25ce78977159664203c6cce127d1ae2). **fixed alerts:**. * 1 for Unused local variable,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2111#issuecomment-777691236
https://github.com/psi4/psi4/pull/2112#issuecomment-782913552:175,Deployability,update,updated,175,"> This makes sense, but I would highly recommend an explicit test that rebuilds various quantities at this point.; > ; > Thanks for finding and fixing!. That's a good idea, I updated the test",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2112#issuecomment-782913552
https://github.com/psi4/psi4/pull/2112#issuecomment-782913552:61,Testability,test,test,61,"> This makes sense, but I would highly recommend an explicit test that rebuilds various quantities at this point.; > ; > Thanks for finding and fixing!. That's a good idea, I updated the test",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2112#issuecomment-782913552
https://github.com/psi4/psi4/pull/2112#issuecomment-782913552:187,Testability,test,test,187,"> This makes sense, but I would highly recommend an explicit test that rebuilds various quantities at this point.; > ; > Thanks for finding and fixing!. That's a good idea, I updated the test",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2112#issuecomment-782913552
https://github.com/psi4/psi4/issues/2114#issuecomment-779483755:60,Energy Efficiency,energy,energy,60,"Look at iteration 1: we're seeing a change in the iteration energy of over a mH due to this integral screening. This strongly suggests a bona fide bug. If you have additional systems that fail, this seems like a bug that is going to afflict a _lot_ of our users. I highly suggest we fast-track this for investigation but I would rather avoid being the one to debug this directly. (I'm trying to get into paper-writing mode.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-779483755
https://github.com/psi4/psi4/issues/2114#issuecomment-779483755:336,Safety,avoid,avoid,336,"Look at iteration 1: we're seeing a change in the iteration energy of over a mH due to this integral screening. This strongly suggests a bona fide bug. If you have additional systems that fail, this seems like a bug that is going to afflict a _lot_ of our users. I highly suggest we fast-track this for investigation but I would rather avoid being the one to debug this directly. (I'm trying to get into paper-writing mode.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-779483755
https://github.com/psi4/psi4/issues/2114#issuecomment-779484366:93,Availability,toler,tolerance,93,"Please post the other systems as well. For a normal organic molecule one should not need 0.0 tolerance. ; Looking at the `screen_zero.out.txt` output I see negative virtual orbital energies in the converged SCF, which tells me something is still wrong. Zwitterionic system?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-779484366
https://github.com/psi4/psi4/issues/2114#issuecomment-779545622:11,Deployability,update,updated,11,"Okay, I've updated the body of this issue with five SCF outputs that fail to converge with the default `INTS_TOLERANCE` (1e-12), but do converge when `INTS_TOLERANCE` is explicitly set to 0.0. All calculations were done with a clean version of psi4 master (the previous outputs were with a psi4 branch containing commits from an unrelated project). @susilehtola yes, that is the relevant commit in which the default `INTS_TOLERANCE` changed. I agree that the new default appears conservative enough, and I'm surprised such a small threshold has this kind of effect, even for a large, diffuse basis set. Do you know of any integral screening protocols specific to diffuse functions?. @hokru your observation that some virtual orbitals have negative energies is true for all zero-screening outputs. Would this imply that the SCF solution is not the global minimum? I don't have any specifics about these structures, they're part of a large dataset for a ML project. However, they all look relatively ordinary. @JonathonMisiewicz Your observation that `INTS_TOLERANCE` has a large effect on the very first SCF iteration also is true of all five outputs. In the second example, the first SCF iteration differs between the two outputs by almost four(!) hartree.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-779545622
https://github.com/psi4/psi4/issues/2114#issuecomment-779545622:641,Integrability,protocol,protocols,641,"Okay, I've updated the body of this issue with five SCF outputs that fail to converge with the default `INTS_TOLERANCE` (1e-12), but do converge when `INTS_TOLERANCE` is explicitly set to 0.0. All calculations were done with a clean version of psi4 master (the previous outputs were with a psi4 branch containing commits from an unrelated project). @susilehtola yes, that is the relevant commit in which the default `INTS_TOLERANCE` changed. I agree that the new default appears conservative enough, and I'm surprised such a small threshold has this kind of effect, even for a large, diffuse basis set. Do you know of any integral screening protocols specific to diffuse functions?. @hokru your observation that some virtual orbitals have negative energies is true for all zero-screening outputs. Would this imply that the SCF solution is not the global minimum? I don't have any specifics about these structures, they're part of a large dataset for a ML project. However, they all look relatively ordinary. @JonathonMisiewicz Your observation that `INTS_TOLERANCE` has a large effect on the very first SCF iteration also is true of all five outputs. In the second example, the first SCF iteration differs between the two outputs by almost four(!) hartree.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-779545622
https://github.com/psi4/psi4/issues/2114#issuecomment-779554766:112,Energy Efficiency,energy,energy,112,"Anyway, the logical place to start debugging is SAD and the first iteration after it. |System|Difference in SAD energy|Difference in energy of first iteration|; |----------|----------------------------------|-----------------------------------------------|; |1| 2.387e-12|-1.405e-03|; |2| 6.253e-12|-3.704e+00|; |3| 1.364e-11|-5.389e-01|; |4| 8.868e-12|-1.833e+00|; |5|-8.868e-12|-3.321e+00|. The SAD energies are an exact match, so one would assume that the SAD densities also agree exactly. Something is causing the energy of the first iteration to change by quite a lot. This shouldn't happen: if the SAD density matrices are the same, the Fock matrices built from the SAD density matrices should also match; the orbitals in the first iteration should be practically the same. One can't compare after the first iteration, since the orbitals and densities will not be the same. So, here are the possibilities for disagreeing results. 1. Atoms in SAD converge to different solutions; 2. SAD Fock matrix is not computed properly (same input density leads to differences between runs); 3. First Fock matrix is not computed properly (same input density leads to differences between runs). 1 and 2 are unlikely, since the SAD energies agree.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-779554766
https://github.com/psi4/psi4/issues/2114#issuecomment-779554766:133,Energy Efficiency,energy,energy,133,"Anyway, the logical place to start debugging is SAD and the first iteration after it. |System|Difference in SAD energy|Difference in energy of first iteration|; |----------|----------------------------------|-----------------------------------------------|; |1| 2.387e-12|-1.405e-03|; |2| 6.253e-12|-3.704e+00|; |3| 1.364e-11|-5.389e-01|; |4| 8.868e-12|-1.833e+00|; |5|-8.868e-12|-3.321e+00|. The SAD energies are an exact match, so one would assume that the SAD densities also agree exactly. Something is causing the energy of the first iteration to change by quite a lot. This shouldn't happen: if the SAD density matrices are the same, the Fock matrices built from the SAD density matrices should also match; the orbitals in the first iteration should be practically the same. One can't compare after the first iteration, since the orbitals and densities will not be the same. So, here are the possibilities for disagreeing results. 1. Atoms in SAD converge to different solutions; 2. SAD Fock matrix is not computed properly (same input density leads to differences between runs); 3. First Fock matrix is not computed properly (same input density leads to differences between runs). 1 and 2 are unlikely, since the SAD energies agree.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-779554766
https://github.com/psi4/psi4/issues/2114#issuecomment-779554766:518,Energy Efficiency,energy,energy,518,"Anyway, the logical place to start debugging is SAD and the first iteration after it. |System|Difference in SAD energy|Difference in energy of first iteration|; |----------|----------------------------------|-----------------------------------------------|; |1| 2.387e-12|-1.405e-03|; |2| 6.253e-12|-3.704e+00|; |3| 1.364e-11|-5.389e-01|; |4| 8.868e-12|-1.833e+00|; |5|-8.868e-12|-3.321e+00|. The SAD energies are an exact match, so one would assume that the SAD densities also agree exactly. Something is causing the energy of the first iteration to change by quite a lot. This shouldn't happen: if the SAD density matrices are the same, the Fock matrices built from the SAD density matrices should also match; the orbitals in the first iteration should be practically the same. One can't compare after the first iteration, since the orbitals and densities will not be the same. So, here are the possibilities for disagreeing results. 1. Atoms in SAD converge to different solutions; 2. SAD Fock matrix is not computed properly (same input density leads to differences between runs); 3. First Fock matrix is not computed properly (same input density leads to differences between runs). 1 and 2 are unlikely, since the SAD energies agree.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-779554766
https://github.com/psi4/psi4/issues/2114#issuecomment-779554766:12,Testability,log,logical,12,"Anyway, the logical place to start debugging is SAD and the first iteration after it. |System|Difference in SAD energy|Difference in energy of first iteration|; |----------|----------------------------------|-----------------------------------------------|; |1| 2.387e-12|-1.405e-03|; |2| 6.253e-12|-3.704e+00|; |3| 1.364e-11|-5.389e-01|; |4| 8.868e-12|-1.833e+00|; |5|-8.868e-12|-3.321e+00|. The SAD energies are an exact match, so one would assume that the SAD densities also agree exactly. Something is causing the energy of the first iteration to change by quite a lot. This shouldn't happen: if the SAD density matrices are the same, the Fock matrices built from the SAD density matrices should also match; the orbitals in the first iteration should be practically the same. One can't compare after the first iteration, since the orbitals and densities will not be the same. So, here are the possibilities for disagreeing results. 1. Atoms in SAD converge to different solutions; 2. SAD Fock matrix is not computed properly (same input density leads to differences between runs); 3. First Fock matrix is not computed properly (same input density leads to differences between runs). 1 and 2 are unlikely, since the SAD energies agree.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-779554766
https://github.com/psi4/psi4/issues/2114#issuecomment-782463778:327,Availability,down,down,327,"I am only doing DFT for now Susi, thanks for the tip about those basis sets. . I've determined that the bug was definitely introduced in the libint2 PR (#1721). Prior to that PR, `INTS_TOLERANCE` worked as expected: a value of 1e-12 led to a minor speed up and a negligible change in the energy. I further narrowed the problem down to the `engine_precision` parameter passed to the libint2 engine:. https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/eri.cc#L182. If I instead set `engine_precision` to `max_precision`, the SCF calculation proceeds normally. This suggests that the current value of `engine_precision` is too loose. Does anyone know more about what this parameter is, and where the current formula comes from? I assume the `-4` is for the four indexes of an ERI.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-782463778
https://github.com/psi4/psi4/issues/2114#issuecomment-782463778:288,Energy Efficiency,energy,energy,288,"I am only doing DFT for now Susi, thanks for the tip about those basis sets. . I've determined that the bug was definitely introduced in the libint2 PR (#1721). Prior to that PR, `INTS_TOLERANCE` worked as expected: a value of 1e-12 led to a minor speed up and a negligible change in the energy. I further narrowed the problem down to the `engine_precision` parameter passed to the libint2 engine:. https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/eri.cc#L182. If I instead set `engine_precision` to `max_precision`, the SCF calculation proceeds normally. This suggests that the current value of `engine_precision` is too loose. Does anyone know more about what this parameter is, and where the current formula comes from? I assume the `-4` is for the four indexes of an ERI.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-782463778
https://github.com/psi4/psi4/issues/2114#issuecomment-782982394:663,Availability,error,errors,663,"Good find, there's some additional info in that header file that explains how the precision parameter is used to screen primitives. If we use the default libint2 engine precision parameter (`std::numeric_limits<double>::epsilon()`) we would still have a problem, since the current engine precision parameter (`std::numeric_limits<double>::epsilon() * std::pow((double)max_nprim, -4.0) * 1.e-2`) is smaller/tighter and causes convergence issues. I think we need something closer to 0.0. I've found that tightening the parameter by a factor of 10 (setting it to `std::numeric_limits<double>::epsilon() * std::pow((double)max_nprim, -4.0) * 1.e-3`) fixes all of the errors I've encountered. Any objections to this? Also, does anyone know how this parameter was chosen in the first place?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-782982394
https://github.com/psi4/psi4/issues/2114#issuecomment-783069692:11,Performance,perform,performance,11,Is there a performance handicap in using `0.0`?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-783069692
https://github.com/psi4/psi4/issues/2114#issuecomment-783404337:673,Performance,perform,performance,673,"I ran a HF/aTZ calculation on decane with `scf_type direct` and `df_scf_guess false` (meaning the majority of the calculation is spent computing integrals). Here's the walltime (in seconds) of the JK step for different values of `engine_precision`:. | 0.0 <br /> (no screening) | ε * (max_nprim ^ -4.0) * 1.e-3 <br /> (proposed change) | ε * (max_nprim ^ -4.0) * 1.e-2 <br /> (current value) | ε <br /> (libint2 default) |; |:------------------:|-----------------------------------------------------------|------------------------------------------------------|-----------------------------|; | 3107 | 3031 | 3041 | 2843 |. Looks like there'd be a small but non-negligible performance hit if we used 0.0. The current precision setting already performs close to 0.0 (relative to the libint2 default). There's basically no change in performance if we tighten the current setting by a factor of 10. This conventional HF example is also a kind of worst-case scenario, since integral calculation is not the rate-limiting step in most Psi4 calculations (like anything with DF). I think it wouldn't hurt to tighten (or completely turn off) primitive screening, although there could be other systems or basis sets for which primitive screening leads to larger performance gains.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-783404337
https://github.com/psi4/psi4/issues/2114#issuecomment-783404337:743,Performance,perform,performs,743,"I ran a HF/aTZ calculation on decane with `scf_type direct` and `df_scf_guess false` (meaning the majority of the calculation is spent computing integrals). Here's the walltime (in seconds) of the JK step for different values of `engine_precision`:. | 0.0 <br /> (no screening) | ε * (max_nprim ^ -4.0) * 1.e-3 <br /> (proposed change) | ε * (max_nprim ^ -4.0) * 1.e-2 <br /> (current value) | ε <br /> (libint2 default) |; |:------------------:|-----------------------------------------------------------|------------------------------------------------------|-----------------------------|; | 3107 | 3031 | 3041 | 2843 |. Looks like there'd be a small but non-negligible performance hit if we used 0.0. The current precision setting already performs close to 0.0 (relative to the libint2 default). There's basically no change in performance if we tighten the current setting by a factor of 10. This conventional HF example is also a kind of worst-case scenario, since integral calculation is not the rate-limiting step in most Psi4 calculations (like anything with DF). I think it wouldn't hurt to tighten (or completely turn off) primitive screening, although there could be other systems or basis sets for which primitive screening leads to larger performance gains.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-783404337
https://github.com/psi4/psi4/issues/2114#issuecomment-783404337:831,Performance,perform,performance,831,"I ran a HF/aTZ calculation on decane with `scf_type direct` and `df_scf_guess false` (meaning the majority of the calculation is spent computing integrals). Here's the walltime (in seconds) of the JK step for different values of `engine_precision`:. | 0.0 <br /> (no screening) | ε * (max_nprim ^ -4.0) * 1.e-3 <br /> (proposed change) | ε * (max_nprim ^ -4.0) * 1.e-2 <br /> (current value) | ε <br /> (libint2 default) |; |:------------------:|-----------------------------------------------------------|------------------------------------------------------|-----------------------------|; | 3107 | 3031 | 3041 | 2843 |. Looks like there'd be a small but non-negligible performance hit if we used 0.0. The current precision setting already performs close to 0.0 (relative to the libint2 default). There's basically no change in performance if we tighten the current setting by a factor of 10. This conventional HF example is also a kind of worst-case scenario, since integral calculation is not the rate-limiting step in most Psi4 calculations (like anything with DF). I think it wouldn't hurt to tighten (or completely turn off) primitive screening, although there could be other systems or basis sets for which primitive screening leads to larger performance gains.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-783404337
https://github.com/psi4/psi4/issues/2114#issuecomment-783404337:1252,Performance,perform,performance,1252,"I ran a HF/aTZ calculation on decane with `scf_type direct` and `df_scf_guess false` (meaning the majority of the calculation is spent computing integrals). Here's the walltime (in seconds) of the JK step for different values of `engine_precision`:. | 0.0 <br /> (no screening) | ε * (max_nprim ^ -4.0) * 1.e-3 <br /> (proposed change) | ε * (max_nprim ^ -4.0) * 1.e-2 <br /> (current value) | ε <br /> (libint2 default) |; |:------------------:|-----------------------------------------------------------|------------------------------------------------------|-----------------------------|; | 3107 | 3031 | 3041 | 2843 |. Looks like there'd be a small but non-negligible performance hit if we used 0.0. The current precision setting already performs close to 0.0 (relative to the libint2 default). There's basically no change in performance if we tighten the current setting by a factor of 10. This conventional HF example is also a kind of worst-case scenario, since integral calculation is not the rate-limiting step in most Psi4 calculations (like anything with DF). I think it wouldn't hurt to tighten (or completely turn off) primitive screening, although there could be other systems or basis sets for which primitive screening leads to larger performance gains.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-783404337
https://github.com/psi4/psi4/issues/2114#issuecomment-783409559:362,Performance,perform,performance,362,"> ; > This conventional HF example is also a kind of worst-case scenario, since integral calculation is not the rate-limiting step in most Psi4 calculations (like anything with DF). I think it wouldn't hurt to tighten (or completely turn off) primitive screening, although there could be other systems or basis sets for which primitive screening leads to larger performance gains. Maybe the ANO basis set family would suffer from this? While I do not use them, IIRC they are notorious for having an extremely high number of primitives, and for slowing many integral packages to a glacial pace.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-783409559
https://github.com/psi4/psi4/issues/2114#issuecomment-783485414:420,Integrability,contract,contracted-basis-sets,420,"> Maybe the ANO basis set family would suffer from this? While I do not use them, IIRC they are notorious for having an extremely high number of primitives, and for slowing many integral packages to a glacial pace. You don't even need to go to ANO; just take the cc sets for transition metals. I ran a simple benchmark [here](https://mattermodeling.stackexchange.com/questions/3794/which-software-is-good-with-generally-contracted-basis-sets) for Zn2 with the cc-pVDZ basis set. Zn and Zn2 ran in 19 and 216 seconds of wall time with Psi4, compared to 0.7 and 1.4 seconds with PySCF, respectively.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-783485414
https://github.com/psi4/psi4/issues/2114#issuecomment-783485414:309,Testability,benchmark,benchmark,309,"> Maybe the ANO basis set family would suffer from this? While I do not use them, IIRC they are notorious for having an extremely high number of primitives, and for slowing many integral packages to a glacial pace. You don't even need to go to ANO; just take the cc sets for transition metals. I ran a simple benchmark [here](https://mattermodeling.stackexchange.com/questions/3794/which-software-is-good-with-generally-contracted-basis-sets) for Zn2 with the cc-pVDZ basis set. Zn and Zn2 ran in 19 and 216 seconds of wall time with Psi4, compared to 0.7 and 1.4 seconds with PySCF, respectively.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-783485414
https://github.com/psi4/psi4/issues/2114#issuecomment-783485414:302,Usability,simpl,simple,302,"> Maybe the ANO basis set family would suffer from this? While I do not use them, IIRC they are notorious for having an extremely high number of primitives, and for slowing many integral packages to a glacial pace. You don't even need to go to ANO; just take the cc sets for transition metals. I ran a simple benchmark [here](https://mattermodeling.stackexchange.com/questions/3794/which-software-is-good-with-generally-contracted-basis-sets) for Zn2 with the cc-pVDZ basis set. Zn and Zn2 ran in 19 and 216 seconds of wall time with Psi4, compared to 0.7 and 1.4 seconds with PySCF, respectively.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-783485414
https://github.com/psi4/psi4/issues/2117#issuecomment-783103896:129,Energy Efficiency,energy,energy,129,"It is my understanding that this currently cannot be done using a single `json` file with Psi4 only. The interface only exposes `energy`, `gradient`, or `hessian` calls. . I think the best way to do what you want is via the `qcengine` interface. There's an example of geometry optimization, where you specify a `rdkit` job inside a `geometric` job see here: . https://github.com/MolSSI/QCEngine/blob/master/examples/Examples.ipynb. That example would have to be adapted for `psi4`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2117#issuecomment-783103896
https://github.com/psi4/psi4/issues/2117#issuecomment-783103896:462,Energy Efficiency,adapt,adapted,462,"It is my understanding that this currently cannot be done using a single `json` file with Psi4 only. The interface only exposes `energy`, `gradient`, or `hessian` calls. . I think the best way to do what you want is via the `qcengine` interface. There's an example of geometry optimization, where you specify a `rdkit` job inside a `geometric` job see here: . https://github.com/MolSSI/QCEngine/blob/master/examples/Examples.ipynb. That example would have to be adapted for `psi4`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2117#issuecomment-783103896
https://github.com/psi4/psi4/issues/2117#issuecomment-783103896:105,Integrability,interface,interface,105,"It is my understanding that this currently cannot be done using a single `json` file with Psi4 only. The interface only exposes `energy`, `gradient`, or `hessian` calls. . I think the best way to do what you want is via the `qcengine` interface. There's an example of geometry optimization, where you specify a `rdkit` job inside a `geometric` job see here: . https://github.com/MolSSI/QCEngine/blob/master/examples/Examples.ipynb. That example would have to be adapted for `psi4`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2117#issuecomment-783103896
https://github.com/psi4/psi4/issues/2117#issuecomment-783103896:235,Integrability,interface,interface,235,"It is my understanding that this currently cannot be done using a single `json` file with Psi4 only. The interface only exposes `energy`, `gradient`, or `hessian` calls. . I think the best way to do what you want is via the `qcengine` interface. There's an example of geometry optimization, where you specify a `rdkit` job inside a `geometric` job see here: . https://github.com/MolSSI/QCEngine/blob/master/examples/Examples.ipynb. That example would have to be adapted for `psi4`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2117#issuecomment-783103896
https://github.com/psi4/psi4/issues/2117#issuecomment-783103896:462,Modifiability,adapt,adapted,462,"It is my understanding that this currently cannot be done using a single `json` file with Psi4 only. The interface only exposes `energy`, `gradient`, or `hessian` calls. . I think the best way to do what you want is via the `qcengine` interface. There's an example of geometry optimization, where you specify a `rdkit` job inside a `geometric` job see here: . https://github.com/MolSSI/QCEngine/blob/master/examples/Examples.ipynb. That example would have to be adapted for `psi4`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2117#issuecomment-783103896
https://github.com/psi4/psi4/issues/2117#issuecomment-783103896:277,Performance,optimiz,optimization,277,"It is my understanding that this currently cannot be done using a single `json` file with Psi4 only. The interface only exposes `energy`, `gradient`, or `hessian` calls. . I think the best way to do what you want is via the `qcengine` interface. There's an example of geometry optimization, where you specify a `rdkit` job inside a `geometric` job see here: . https://github.com/MolSSI/QCEngine/blob/master/examples/Examples.ipynb. That example would have to be adapted for `psi4`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2117#issuecomment-783103896
https://github.com/psi4/psi4/issues/2117#issuecomment-783103896:120,Security,expose,exposes,120,"It is my understanding that this currently cannot be done using a single `json` file with Psi4 only. The interface only exposes `energy`, `gradient`, or `hessian` calls. . I think the best way to do what you want is via the `qcengine` interface. There's an example of geometry optimization, where you specify a `rdkit` job inside a `geometric` job see here: . https://github.com/MolSSI/QCEngine/blob/master/examples/Examples.ipynb. That example would have to be adapted for `psi4`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2117#issuecomment-783103896
https://github.com/psi4/psi4/issues/2120#issuecomment-784716861:94,Integrability,depend,dependencies,94,"IIRC `nmopi_` is the number of molecular orbitals, so it definitely should account for linear dependencies...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2120#issuecomment-784716861
https://github.com/psi4/psi4/issues/2120#issuecomment-785511707:729,Energy Efficiency,energy,energy,729,"This could explain some bugs we've been seeing lately. I don't know who introduced ""coldim"" and why it is needed if we already; have nmopi. On Tue, Feb 23, 2021 at 9:37 PM Eugene DePrince <notifications@github.com>; wrote:. > DF-CC freaks out when linear dependencies are present, and i tracked the; > issue to an inconsistency between reference_wavefunction_->nmopi() and; > reference_wavefunction_->Ca()->coldim(). The latter has the correct value; > when linear dependencies are removed.; >; > Should nmopi() and Ca()->coldim() be consistent in this case?; >; > Minimal input:; >; > molecule {; > o; > h 1 1.0; > h 1 1.0 2 104.5; > }; >; > set {; > basis 'aug-cc-pvtz'; > scf_type df; > cc_type df; > s_tolerance 1e-3; > }; > energy('ccsd'); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2120>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5THGTZ2CCKELMGOIZ3TARQ5JANCNFSM4YDUMEUA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2120#issuecomment-785511707
https://github.com/psi4/psi4/issues/2120#issuecomment-785511707:255,Integrability,depend,dependencies,255,"This could explain some bugs we've been seeing lately. I don't know who introduced ""coldim"" and why it is needed if we already; have nmopi. On Tue, Feb 23, 2021 at 9:37 PM Eugene DePrince <notifications@github.com>; wrote:. > DF-CC freaks out when linear dependencies are present, and i tracked the; > issue to an inconsistency between reference_wavefunction_->nmopi() and; > reference_wavefunction_->Ca()->coldim(). The latter has the correct value; > when linear dependencies are removed.; >; > Should nmopi() and Ca()->coldim() be consistent in this case?; >; > Minimal input:; >; > molecule {; > o; > h 1 1.0; > h 1 1.0 2 104.5; > }; >; > set {; > basis 'aug-cc-pvtz'; > scf_type df; > cc_type df; > s_tolerance 1e-3; > }; > energy('ccsd'); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2120>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5THGTZ2CCKELMGOIZ3TARQ5JANCNFSM4YDUMEUA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2120#issuecomment-785511707
https://github.com/psi4/psi4/issues/2120#issuecomment-785511707:465,Integrability,depend,dependencies,465,"This could explain some bugs we've been seeing lately. I don't know who introduced ""coldim"" and why it is needed if we already; have nmopi. On Tue, Feb 23, 2021 at 9:37 PM Eugene DePrince <notifications@github.com>; wrote:. > DF-CC freaks out when linear dependencies are present, and i tracked the; > issue to an inconsistency between reference_wavefunction_->nmopi() and; > reference_wavefunction_->Ca()->coldim(). The latter has the correct value; > when linear dependencies are removed.; >; > Should nmopi() and Ca()->coldim() be consistent in this case?; >; > Minimal input:; >; > molecule {; > o; > h 1 1.0; > h 1 1.0 2 104.5; > }; >; > set {; > basis 'aug-cc-pvtz'; > scf_type df; > cc_type df; > s_tolerance 1e-3; > }; > energy('ccsd'); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2120>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5THGTZ2CCKELMGOIZ3TARQ5JANCNFSM4YDUMEUA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2120#issuecomment-785511707
https://github.com/psi4/psi4/issues/2120#issuecomment-785518560:388,Integrability,depend,dependences,388,"`coldim` isn't a wavefunction attribute. It's the dimension of the columns of the orbital coefficient `Matrix` and is thus a `Matrix` attribute. Redundancy is not the problem here. The problem is that `nmopi_` is _wrong_. Why it's wrong is a deeper issue. The `common_init` code is called anytime a wavefunction is initialized, and it initializes all orbital spaces by assuming no linear dependences. This is reasonable if you can rely on the linear dependency checking code to be called later and to re-initialize orbital spaces if necessary. If you cannot (as in this case), you get this issue. My naive vote would be to move orbital space initialization out of `common_init` entirely. If you're initializing from a reference wavefunction that already has those spaces defined, there's no need to touch those. Otherwise, initialize MO spaces only once you have determined the number of MOs, i.e., after [this line](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libscf_solver/hf.cc#L785).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2120#issuecomment-785518560
https://github.com/psi4/psi4/issues/2120#issuecomment-785518560:450,Integrability,depend,dependency,450,"`coldim` isn't a wavefunction attribute. It's the dimension of the columns of the orbital coefficient `Matrix` and is thus a `Matrix` attribute. Redundancy is not the problem here. The problem is that `nmopi_` is _wrong_. Why it's wrong is a deeper issue. The `common_init` code is called anytime a wavefunction is initialized, and it initializes all orbital spaces by assuming no linear dependences. This is reasonable if you can rely on the linear dependency checking code to be called later and to re-initialize orbital spaces if necessary. If you cannot (as in this case), you get this issue. My naive vote would be to move orbital space initialization out of `common_init` entirely. If you're initializing from a reference wavefunction that already has those spaces defined, there's no need to touch those. Otherwise, initialize MO spaces only once you have determined the number of MOs, i.e., after [this line](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libscf_solver/hf.cc#L785).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2120#issuecomment-785518560
https://github.com/psi4/psi4/issues/2120#issuecomment-785518560:145,Safety,Redund,Redundancy,145,"`coldim` isn't a wavefunction attribute. It's the dimension of the columns of the orbital coefficient `Matrix` and is thus a `Matrix` attribute. Redundancy is not the problem here. The problem is that `nmopi_` is _wrong_. Why it's wrong is a deeper issue. The `common_init` code is called anytime a wavefunction is initialized, and it initializes all orbital spaces by assuming no linear dependences. This is reasonable if you can rely on the linear dependency checking code to be called later and to re-initialize orbital spaces if necessary. If you cannot (as in this case), you get this issue. My naive vote would be to move orbital space initialization out of `common_init` entirely. If you're initializing from a reference wavefunction that already has those spaces defined, there's no need to touch those. Otherwise, initialize MO spaces only once you have determined the number of MOs, i.e., after [this line](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libscf_solver/hf.cc#L785).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2120#issuecomment-785518560
https://github.com/psi4/psi4/issues/2121#issuecomment-1367996918:84,Energy Efficiency,charge,charge-scaling,84,"Actually @awvwgk, i am just trying to set the D4 paramters and notice that also the charge-scaling parameters need to be adjusted. Not sure how to do that with the current setup. The QCEngine supports those parameters?. also `r2scan3c` is not recognized by the dftd4 binary?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2121#issuecomment-1367996918
https://github.com/psi4/psi4/issues/2121#issuecomment-1368076353:541,Testability,log,logic,541,"I suspect https://github.com/MolSSI/QCEngine/blob/master/qcengine/programs/empirical_dispersion_resources.py#L884 in qcng will need expansion to the extra parameters. And https://github.com/MolSSI/QCEngine/blob/master/qcengine/programs/empirical_dispersion_resources.py#L904 might need populating with the defaults like the `_get_d3_definitions` below since the changes aren't in parameters.toml in dftd4 project. Please let me know if it's not behaving rationally -- the approach made sense for flexibility once upon a time, but I fear the logic is tangled nowadays.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2121#issuecomment-1368076353
https://github.com/psi4/psi4/issues/2121#issuecomment-1368077959:31,Integrability,inject,inject,31,"Seems reasonable to me. We can inject the default parameters for the model parameters (``ga``, ``gc``, ``wf``) when we transform the parameters provided from *dftd4* to the qcng format. It might make sense to add them in the ``parameters.toml`` file in *dftd4* as well, not sure about that yet.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2121#issuecomment-1368077959
https://github.com/psi4/psi4/issues/2121#issuecomment-1368077959:31,Security,inject,inject,31,"Seems reasonable to me. We can inject the default parameters for the model parameters (``ga``, ``gc``, ``wf``) when we transform the parameters provided from *dftd4* to the qcng format. It might make sense to add them in the ``parameters.toml`` file in *dftd4* as well, not sure about that yet.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2121#issuecomment-1368077959
https://github.com/psi4/psi4/pull/2126#issuecomment-790250152:117,Modifiability,extend,extended,117,The [qcschema test](https://github.com/psi4/psi4/blob/master/tests/pytests/test_psi4_qcschema.py) should probably be extended to check for this functionality.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-790250152
https://github.com/psi4/psi4/pull/2126#issuecomment-790250152:14,Testability,test,test,14,The [qcschema test](https://github.com/psi4/psi4/blob/master/tests/pytests/test_psi4_qcschema.py) should probably be extended to check for this functionality.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-790250152
https://github.com/psi4/psi4/pull/2126#issuecomment-790250152:61,Testability,test,tests,61,The [qcschema test](https://github.com/psi4/psi4/blob/master/tests/pytests/test_psi4_qcschema.py) should probably be extended to check for this functionality.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-790250152
https://github.com/psi4/psi4/pull/2126#issuecomment-790260786:68,Availability,error,error,68,"If you haven't rebased recently, I wouldn't worry about the Windows error immediately, but Peter's right about tests. The test_psi4_qcschema.py is awkward to work with, so `tests/json/` is a good place to add tests. There's a lot of `run_json` in there to preserve backwards compatibility, but use `run_qcschema` instead.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-790260786
https://github.com/psi4/psi4/pull/2126#issuecomment-790260786:111,Testability,test,tests,111,"If you haven't rebased recently, I wouldn't worry about the Windows error immediately, but Peter's right about tests. The test_psi4_qcschema.py is awkward to work with, so `tests/json/` is a good place to add tests. There's a lot of `run_json` in there to preserve backwards compatibility, but use `run_qcschema` instead.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-790260786
https://github.com/psi4/psi4/pull/2126#issuecomment-790260786:173,Testability,test,tests,173,"If you haven't rebased recently, I wouldn't worry about the Windows error immediately, but Peter's right about tests. The test_psi4_qcschema.py is awkward to work with, so `tests/json/` is a good place to add tests. There's a lot of `run_json` in there to preserve backwards compatibility, but use `run_qcschema` instead.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-790260786
https://github.com/psi4/psi4/pull/2126#issuecomment-790260786:209,Testability,test,tests,209,"If you haven't rebased recently, I wouldn't worry about the Windows error immediately, but Peter's right about tests. The test_psi4_qcschema.py is awkward to work with, so `tests/json/` is a good place to add tests. There's a lot of `run_json` in there to preserve backwards compatibility, but use `run_qcschema` instead.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-790260786
https://github.com/psi4/psi4/pull/2126#issuecomment-790268893:36,Testability,test,testing,36,"yes, I don't think there's anything testing things which end up in `extras` on the return, so I'll make a quick test. . while I can accept the windows ctest fail, the failed `test_psi4_qcschema->test_psi4_scfproperty` for linux is a bit concerning. not really sure why it's trying to calculate SCF rotations when it's not in `function_kwargs`. it works fine when putting the properties list directly into the `model` of an `AtomicInput`, so it might be an issue in `qcng.util.model_wrapper` when translating the json data? I'll dig into it",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-790268893
https://github.com/psi4/psi4/pull/2126#issuecomment-790268893:112,Testability,test,test,112,"yes, I don't think there's anything testing things which end up in `extras` on the return, so I'll make a quick test. . while I can accept the windows ctest fail, the failed `test_psi4_qcschema->test_psi4_scfproperty` for linux is a bit concerning. not really sure why it's trying to calculate SCF rotations when it's not in `function_kwargs`. it works fine when putting the properties list directly into the `model` of an `AtomicInput`, so it might be an issue in `qcng.util.model_wrapper` when translating the json data? I'll dig into it",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-790268893
https://github.com/psi4/psi4/pull/2126#issuecomment-818163875:677,Availability,avail,available,677,"all kinds of weirdness going on, let's see if this checks all of the boxes. . `test_psi4_scfproperty` was failing because the `properties` list was being overwritten, because `run_qcschema` was looking for properties in `model`. normally the calculation would have failed, but `_can_do_properties` was acting as a default list of properties (since it found none) and the test was only looking for a couple of things that happened to be in that list. . to fix it, `run_qcschema` now correctly checks the kwargs for the property list. `_can_do_properties` was renamed to `_default_properties`, and the function no longer filters the properties through it (if the property is not available, psi4 should fail gracefully). once that was fixed, the ""GRID_FIELD"" and ""GRID_ESP"" properties needed to be removed from that test since they failed (could not find some `grid.dat`, I'll let someone else chime in on that one). . also, added an additional test to hit the qc and wfn response vars (floats and arrays), both present in the `extras` return. I think this is the only test which checks the `extras` dictionary.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-818163875
https://github.com/psi4/psi4/pull/2126#issuecomment-818163875:371,Testability,test,test,371,"all kinds of weirdness going on, let's see if this checks all of the boxes. . `test_psi4_scfproperty` was failing because the `properties` list was being overwritten, because `run_qcschema` was looking for properties in `model`. normally the calculation would have failed, but `_can_do_properties` was acting as a default list of properties (since it found none) and the test was only looking for a couple of things that happened to be in that list. . to fix it, `run_qcschema` now correctly checks the kwargs for the property list. `_can_do_properties` was renamed to `_default_properties`, and the function no longer filters the properties through it (if the property is not available, psi4 should fail gracefully). once that was fixed, the ""GRID_FIELD"" and ""GRID_ESP"" properties needed to be removed from that test since they failed (could not find some `grid.dat`, I'll let someone else chime in on that one). . also, added an additional test to hit the qc and wfn response vars (floats and arrays), both present in the `extras` return. I think this is the only test which checks the `extras` dictionary.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-818163875
https://github.com/psi4/psi4/pull/2126#issuecomment-818163875:813,Testability,test,test,813,"all kinds of weirdness going on, let's see if this checks all of the boxes. . `test_psi4_scfproperty` was failing because the `properties` list was being overwritten, because `run_qcschema` was looking for properties in `model`. normally the calculation would have failed, but `_can_do_properties` was acting as a default list of properties (since it found none) and the test was only looking for a couple of things that happened to be in that list. . to fix it, `run_qcschema` now correctly checks the kwargs for the property list. `_can_do_properties` was renamed to `_default_properties`, and the function no longer filters the properties through it (if the property is not available, psi4 should fail gracefully). once that was fixed, the ""GRID_FIELD"" and ""GRID_ESP"" properties needed to be removed from that test since they failed (could not find some `grid.dat`, I'll let someone else chime in on that one). . also, added an additional test to hit the qc and wfn response vars (floats and arrays), both present in the `extras` return. I think this is the only test which checks the `extras` dictionary.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-818163875
https://github.com/psi4/psi4/pull/2126#issuecomment-818163875:942,Testability,test,test,942,"all kinds of weirdness going on, let's see if this checks all of the boxes. . `test_psi4_scfproperty` was failing because the `properties` list was being overwritten, because `run_qcschema` was looking for properties in `model`. normally the calculation would have failed, but `_can_do_properties` was acting as a default list of properties (since it found none) and the test was only looking for a couple of things that happened to be in that list. . to fix it, `run_qcschema` now correctly checks the kwargs for the property list. `_can_do_properties` was renamed to `_default_properties`, and the function no longer filters the properties through it (if the property is not available, psi4 should fail gracefully). once that was fixed, the ""GRID_FIELD"" and ""GRID_ESP"" properties needed to be removed from that test since they failed (could not find some `grid.dat`, I'll let someone else chime in on that one). . also, added an additional test to hit the qc and wfn response vars (floats and arrays), both present in the `extras` return. I think this is the only test which checks the `extras` dictionary.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-818163875
https://github.com/psi4/psi4/pull/2126#issuecomment-818163875:1066,Testability,test,test,1066,"all kinds of weirdness going on, let's see if this checks all of the boxes. . `test_psi4_scfproperty` was failing because the `properties` list was being overwritten, because `run_qcschema` was looking for properties in `model`. normally the calculation would have failed, but `_can_do_properties` was acting as a default list of properties (since it found none) and the test was only looking for a couple of things that happened to be in that list. . to fix it, `run_qcschema` now correctly checks the kwargs for the property list. `_can_do_properties` was renamed to `_default_properties`, and the function no longer filters the properties through it (if the property is not available, psi4 should fail gracefully). once that was fixed, the ""GRID_FIELD"" and ""GRID_ESP"" properties needed to be removed from that test since they failed (could not find some `grid.dat`, I'll let someone else chime in on that one). . also, added an additional test to hit the qc and wfn response vars (floats and arrays), both present in the `extras` return. I think this is the only test which checks the `extras` dictionary.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-818163875
https://github.com/psi4/psi4/pull/2126#issuecomment-821885823:0,Availability,ping,pinging,0,"pinging @loriab for review, not sure who else is intimately familiar with the schema harness (besides DGAS, not sure if he's reviewing lately?)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-821885823
https://github.com/psi4/psi4/pull/2126#issuecomment-919120085:6,Testability,test,tests,6,"okay, tests finally passing. thanks to @PeterKraus for the help! if we agree that this isn't the place to ensure soft-fail for unsupported property kwargs, then I think this is ready! (sorry for the messy commit history...)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-919120085
https://github.com/psi4/psi4/pull/2126#issuecomment-919135259:152,Integrability,interface,interface,152,"The big picture purpose of this PR is not clear to me. I understand that bullet point 4 is test coverage. Are the other three bullet points changing an interface, adding functionality, or pure code reorganization?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-919135259
https://github.com/psi4/psi4/pull/2126#issuecomment-919135259:91,Testability,test,test,91,"The big picture purpose of this PR is not clear to me. I understand that bullet point 4 is test coverage. Are the other three bullet points changing an interface, adding functionality, or pure code reorganization?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-919135259
https://github.com/psi4/psi4/pull/2126#issuecomment-919135259:42,Usability,clear,clear,42,"The big picture purpose of this PR is not clear to me. I understand that bullet point 4 is test coverage. Are the other three bullet points changing an interface, adding functionality, or pure code reorganization?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-919135259
https://github.com/psi4/psi4/pull/2126#issuecomment-919146009:56,Integrability,interface,interface,56,"@JonathonMisiewicz I would classify this as changing an interface. the wrapper will now push more properties into the `extra` slot of the return for a Schema run, rather than just throwing that information away (since the full wfn is not retrievable by schema). this adds flexibility to the interface w/ e.g. QCEngine and anything else using the wrapper, and also circumvents requiring the MolSSI to re-standardize the QCSchema for esoteric properties before we can return them.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-919146009
https://github.com/psi4/psi4/pull/2126#issuecomment-919146009:71,Integrability,wrap,wrapper,71,"@JonathonMisiewicz I would classify this as changing an interface. the wrapper will now push more properties into the `extra` slot of the return for a Schema run, rather than just throwing that information away (since the full wfn is not retrievable by schema). this adds flexibility to the interface w/ e.g. QCEngine and anything else using the wrapper, and also circumvents requiring the MolSSI to re-standardize the QCSchema for esoteric properties before we can return them.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-919146009
https://github.com/psi4/psi4/pull/2126#issuecomment-919146009:291,Integrability,interface,interface,291,"@JonathonMisiewicz I would classify this as changing an interface. the wrapper will now push more properties into the `extra` slot of the return for a Schema run, rather than just throwing that information away (since the full wfn is not retrievable by schema). this adds flexibility to the interface w/ e.g. QCEngine and anything else using the wrapper, and also circumvents requiring the MolSSI to re-standardize the QCSchema for esoteric properties before we can return them.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-919146009
https://github.com/psi4/psi4/pull/2126#issuecomment-919146009:346,Integrability,wrap,wrapper,346,"@JonathonMisiewicz I would classify this as changing an interface. the wrapper will now push more properties into the `extra` slot of the return for a Schema run, rather than just throwing that information away (since the full wfn is not retrievable by schema). this adds flexibility to the interface w/ e.g. QCEngine and anything else using the wrapper, and also circumvents requiring the MolSSI to re-standardize the QCSchema for esoteric properties before we can return them.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-919146009
https://github.com/psi4/psi4/pull/2127#issuecomment-791589519:466,Integrability,rout,routine,466,"> > This PR automates the computation of MBIS volume ratios by computing free-atom densities at the same level of theory as the molecule. The free-atom computations are on the ground state of a given atom, with the multiplicity taken from the SAD code.; > ; > This also means that the density you'll get is likely symmetry-broken; does your code handle that? The multiplicities may also not be correct. Good points. The code does run UHF/UKS as needed, and the MBIS routine can handle these cases as well. I have a few reference values for free atom volumes for elements H, Li, C, N, O, F, Ne, Si, S, and Cl, and we match these values. So I feel good about getting those ground states correct, but in general they many not be accurate, particularly for transition metals I'd imagine. I am inclined to trust the source of the ground state occupancy values from SAD, though.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-791589519
https://github.com/psi4/psi4/pull/2127#issuecomment-791590947:7,Availability,down,down,7,"To cut down on the printing, you could use `core.be_quiet()` and `core.reopen_outfile()` depending on the print level",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-791590947
https://github.com/psi4/psi4/pull/2127#issuecomment-791590947:89,Integrability,depend,depending,89,"To cut down on the printing, you could use `core.be_quiet()` and `core.reopen_outfile()` depending on the print level",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-791590947
https://github.com/psi4/psi4/pull/2127#issuecomment-791674199:289,Modifiability,variab,variable,289,This pull request **introduces 4 alerts** when merging a683f02ef658be7294a9235beaa6f5740454cf29 into 40062658067b2f929720bf7a8d0abb7f3a57e9a7 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-925536a63860cc0f2b79983d367dad8867583430). **new alerts:**. * 1 for Unused local variable; * 1 for Unused import; * 1 for &#39;import \*&#39; may pollute namespace; * 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-791674199
https://github.com/psi4/psi4/pull/2127#issuecomment-791695679:809,Deployability,configurat,configurations,809,"> Good points. The code does run UHF/UKS as needed, and the MBIS routine can handle these cases as well. I have a few reference values for free atom volumes for elements H, Li, C, N, O, F, Ne, Si, S, and Cl, and we match these values. So I feel good about getting those ground states correct, but in general they many not be accurate, particularly for transition metals I'd imagine. I am inclined to trust the source of the ground state occupancy values from SAD, though. Note that SAD hasn't been using those values in a long time; instead it runs spin-restricted calculations. Also, SAD isn't symmetry aware at the moment, which is a problem especially for transition metals and lanthanides and actinides where e.g. the s and d orbitals are very close in energy and the energy differences between different configurations are just eV. The proper way to do it is to impose symmetry, so that the occupations can be controlled. This is the way it is in PySCF; the ground states are from fully numerical calculations I did in https://journals.aps.org/pra/abstract/10.1103/PhysRevA.101.012516",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-791695679
https://github.com/psi4/psi4/pull/2127#issuecomment-791695679:757,Energy Efficiency,energy,energy,757,"> Good points. The code does run UHF/UKS as needed, and the MBIS routine can handle these cases as well. I have a few reference values for free atom volumes for elements H, Li, C, N, O, F, Ne, Si, S, and Cl, and we match these values. So I feel good about getting those ground states correct, but in general they many not be accurate, particularly for transition metals I'd imagine. I am inclined to trust the source of the ground state occupancy values from SAD, though. Note that SAD hasn't been using those values in a long time; instead it runs spin-restricted calculations. Also, SAD isn't symmetry aware at the moment, which is a problem especially for transition metals and lanthanides and actinides where e.g. the s and d orbitals are very close in energy and the energy differences between different configurations are just eV. The proper way to do it is to impose symmetry, so that the occupations can be controlled. This is the way it is in PySCF; the ground states are from fully numerical calculations I did in https://journals.aps.org/pra/abstract/10.1103/PhysRevA.101.012516",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-791695679
https://github.com/psi4/psi4/pull/2127#issuecomment-791695679:772,Energy Efficiency,energy,energy,772,"> Good points. The code does run UHF/UKS as needed, and the MBIS routine can handle these cases as well. I have a few reference values for free atom volumes for elements H, Li, C, N, O, F, Ne, Si, S, and Cl, and we match these values. So I feel good about getting those ground states correct, but in general they many not be accurate, particularly for transition metals I'd imagine. I am inclined to trust the source of the ground state occupancy values from SAD, though. Note that SAD hasn't been using those values in a long time; instead it runs spin-restricted calculations. Also, SAD isn't symmetry aware at the moment, which is a problem especially for transition metals and lanthanides and actinides where e.g. the s and d orbitals are very close in energy and the energy differences between different configurations are just eV. The proper way to do it is to impose symmetry, so that the occupations can be controlled. This is the way it is in PySCF; the ground states are from fully numerical calculations I did in https://journals.aps.org/pra/abstract/10.1103/PhysRevA.101.012516",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-791695679
https://github.com/psi4/psi4/pull/2127#issuecomment-791695679:65,Integrability,rout,routine,65,"> Good points. The code does run UHF/UKS as needed, and the MBIS routine can handle these cases as well. I have a few reference values for free atom volumes for elements H, Li, C, N, O, F, Ne, Si, S, and Cl, and we match these values. So I feel good about getting those ground states correct, but in general they many not be accurate, particularly for transition metals I'd imagine. I am inclined to trust the source of the ground state occupancy values from SAD, though. Note that SAD hasn't been using those values in a long time; instead it runs spin-restricted calculations. Also, SAD isn't symmetry aware at the moment, which is a problem especially for transition metals and lanthanides and actinides where e.g. the s and d orbitals are very close in energy and the energy differences between different configurations are just eV. The proper way to do it is to impose symmetry, so that the occupations can be controlled. This is the way it is in PySCF; the ground states are from fully numerical calculations I did in https://journals.aps.org/pra/abstract/10.1103/PhysRevA.101.012516",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-791695679
https://github.com/psi4/psi4/pull/2127#issuecomment-791695679:809,Modifiability,config,configurations,809,"> Good points. The code does run UHF/UKS as needed, and the MBIS routine can handle these cases as well. I have a few reference values for free atom volumes for elements H, Li, C, N, O, F, Ne, Si, S, and Cl, and we match these values. So I feel good about getting those ground states correct, but in general they many not be accurate, particularly for transition metals I'd imagine. I am inclined to trust the source of the ground state occupancy values from SAD, though. Note that SAD hasn't been using those values in a long time; instead it runs spin-restricted calculations. Also, SAD isn't symmetry aware at the moment, which is a problem especially for transition metals and lanthanides and actinides where e.g. the s and d orbitals are very close in energy and the energy differences between different configurations are just eV. The proper way to do it is to impose symmetry, so that the occupations can be controlled. This is the way it is in PySCF; the ground states are from fully numerical calculations I did in https://journals.aps.org/pra/abstract/10.1103/PhysRevA.101.012516",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-791695679
https://github.com/psi4/psi4/pull/2127#issuecomment-794000033:1074,Energy Efficiency,energy,energy,1074,"The reference ground-state multiplicities, particularly for heavier elements, may not be correct. Also there is the larger question of whether to use the broken-symmetry ground-state densities, as is done here, or to use the spin-averaged ones as is done in the SAD code. In the original MBIS paper ([https://pubs.acs.org/doi/pdf/10.1021/acs.jctc.6b00456](url), sec 5), they explore both options, and find that the broken-symmetry, ground-state densities give more accurate dispersion coefficients (computed with the Tkatchenko-Scheffler method, which relies on these volume ratios) with the MBIS method. Given that these volume ratios are used for force field development, I wouldn't be too concerned with potential inaccuracies in the multiplicities of heavier elements. That said, I think the option to use either the broken-symmetry densities or the spin-averaged ones should be made possible. I think it would likely be cleanest for me to get the densities directly from SAD (since it can handle both cases already) and pass them to the MBIS code, rather than calling `energy` and `oeprop` as I've currently done.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-794000033
https://github.com/psi4/psi4/pull/2127#issuecomment-802406528:289,Modifiability,variab,variable,289,This pull request **introduces 4 alerts** when merging a56640b5a045264511ce8e82b7e0fef2403e6d6c into d16d02e69238f1b0d90a2f1283f38e818873e748 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-7da129324ddc35619bc8bcd5bb9095f3a440365e). **new alerts:**. * 1 for Unused local variable; * 1 for Unused import; * 1 for &#39;import \*&#39; may pollute namespace; * 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-802406528
https://github.com/psi4/psi4/pull/2127#issuecomment-803061303:289,Modifiability,variab,variable,289,This pull request **introduces 4 alerts** when merging a52ef0da92bdd7d425be15388b6c682c54cabfbc into d16d02e69238f1b0d90a2f1283f38e818873e748 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-bc0d0fdca6432030f1ed1f69714daa27a348e444). **new alerts:**. * 1 for Unused local variable; * 1 for Unused import; * 1 for &#39;import \*&#39; may pollute namespace; * 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-803061303
https://github.com/psi4/psi4/pull/2127#issuecomment-815296254:257,Safety,safe,safe,257,"Definitely. The only roadblock was in handling all of the printing. I used `be_quiet()` and `reopen_outfile()`, which fail during testing in the windows build. Interestingly, these functions aren't used in the code elsewhere, so they seem not to be windows-safe at all. I think a workaround shouldn't be too hard, but suggestions welcome. The printing of each atomic calculation should never be that excessive (since its only unique elements/basis), so simple solution is to just print all of the atomic outputs",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-815296254
https://github.com/psi4/psi4/pull/2127#issuecomment-815296254:130,Testability,test,testing,130,"Definitely. The only roadblock was in handling all of the printing. I used `be_quiet()` and `reopen_outfile()`, which fail during testing in the windows build. Interestingly, these functions aren't used in the code elsewhere, so they seem not to be windows-safe at all. I think a workaround shouldn't be too hard, but suggestions welcome. The printing of each atomic calculation should never be that excessive (since its only unique elements/basis), so simple solution is to just print all of the atomic outputs",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-815296254
https://github.com/psi4/psi4/pull/2127#issuecomment-815296254:453,Usability,simpl,simple,453,"Definitely. The only roadblock was in handling all of the printing. I used `be_quiet()` and `reopen_outfile()`, which fail during testing in the windows build. Interestingly, these functions aren't used in the code elsewhere, so they seem not to be windows-safe at all. I think a workaround shouldn't be too hard, but suggestions welcome. The printing of each atomic calculation should never be that excessive (since its only unique elements/basis), so simple solution is to just print all of the atomic outputs",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-815296254
https://github.com/psi4/psi4/pull/2127#issuecomment-816309479:340,Modifiability,variab,variable,340,This pull request **introduces 4 alerts** when merging 177748e12cac9f63db658b12db353f6b591800ab into 38c9807851929c1eff2803a58938b37c9625083f - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-726f1fd30a94087c2217dd411c4951f21b0dae5a). **new alerts:**. * 2 for &#39;import \*&#39; may pollute namespace; * 1 for Unused local variable; * 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-816309479
https://github.com/psi4/psi4/issues/2130#issuecomment-796629840:12,Availability,avail,available,12,The readily available scf gradient terms can be found here: https://github.com/psi4/psi4/blob/master/psi4/src/psi4/scfgrad/scf_grad.cc#L122. Not sure about the best way to expose them.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2130#issuecomment-796629840
https://github.com/psi4/psi4/issues/2130#issuecomment-796629840:172,Security,expose,expose,172,The readily available scf gradient terms can be found here: https://github.com/psi4/psi4/blob/master/psi4/src/psi4/scfgrad/scf_grad.cc#L122. Not sure about the best way to expose them.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2130#issuecomment-796629840
https://github.com/psi4/psi4/issues/2130#issuecomment-796658578:114,Integrability,depend,depends,114,"""Gradient per KS-MO"" does _not_ ""just require exposing it."" First, you need to define it properly. Exact exchange depends on two KS-MOs, not just one, so it isn't clear to me how you'd meaningfully define this as a one KS-MO property. Then, you'd need to implement it, since Psi4 doesn't do this naturally. You'd probably need to decompose the density as a sum of densities for each MO and run the gradient computation on each, so a gradient computation takes #MO's times longer. This should not be the default algorithm. Putting the gradient terms on the wavefunction as array variables seems relatively straightforward.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2130#issuecomment-796658578
https://github.com/psi4/psi4/issues/2130#issuecomment-796658578:578,Modifiability,variab,variables,578,"""Gradient per KS-MO"" does _not_ ""just require exposing it."" First, you need to define it properly. Exact exchange depends on two KS-MOs, not just one, so it isn't clear to me how you'd meaningfully define this as a one KS-MO property. Then, you'd need to implement it, since Psi4 doesn't do this naturally. You'd probably need to decompose the density as a sum of densities for each MO and run the gradient computation on each, so a gradient computation takes #MO's times longer. This should not be the default algorithm. Putting the gradient terms on the wavefunction as array variables seems relatively straightforward.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2130#issuecomment-796658578
https://github.com/psi4/psi4/issues/2130#issuecomment-796658578:163,Usability,clear,clear,163,"""Gradient per KS-MO"" does _not_ ""just require exposing it."" First, you need to define it properly. Exact exchange depends on two KS-MOs, not just one, so it isn't clear to me how you'd meaningfully define this as a one KS-MO property. Then, you'd need to implement it, since Psi4 doesn't do this naturally. You'd probably need to decompose the density as a sum of densities for each MO and run the gradient computation on each, so a gradient computation takes #MO's times longer. This should not be the default algorithm. Putting the gradient terms on the wavefunction as array variables seems relatively straightforward.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2130#issuecomment-796658578
https://github.com/psi4/psi4/issues/2130#issuecomment-796719993:111,Availability,avail,available,111,"Indeed, @JonathonMisiewicz , the terms coming from the derivatives of two-electron integrals are not trivially available or easy to cast into one-body form. However, the total terms (Nuclear, Core, Coulomb...) should, and that would be enough to make me happy. I do think that accessing these terms can be useful for the userbase. . Exposing the one-electron terms for Overlap etc. should also be possible, but this is both silly and shaky as a feature (i.e. not consistent across levels of theory) and sometimes a picky user should have to differentiate like a grown-up!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2130#issuecomment-796719993
https://github.com/psi4/psi4/issues/2130#issuecomment-796719993:277,Security,access,accessing,277,"Indeed, @JonathonMisiewicz , the terms coming from the derivatives of two-electron integrals are not trivially available or easy to cast into one-body form. However, the total terms (Nuclear, Core, Coulomb...) should, and that would be enough to make me happy. I do think that accessing these terms can be useful for the userbase. . Exposing the one-electron terms for Overlap etc. should also be possible, but this is both silly and shaky as a feature (i.e. not consistent across levels of theory) and sometimes a picky user should have to differentiate like a grown-up!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2130#issuecomment-796719993
https://github.com/psi4/psi4/issues/2130#issuecomment-797125091:745,Energy Efficiency,efficient,efficient,745,"Some comments for posterity:; * The Coulomb terms also come from the derivatives of two-electron integrals. You can (and for efficiency should) contract the TEI derivatives against the 1RDM to get the Coulomb terms. Conceptually, this is the interaction of an orbital with the mean field of all orbitals. It's not a pure one-electron interaction, but it's close enough.; * For purposes of thinking about the implementation, this issue is two very different ones: (1) exposing the existing pieces of the SCF gradient and (2) further decomposing those pieces into per-orbital contributions, where applicable. (1) is as easy as setting array variables on the wavefunction. Per-orbital contributions aren't even computed, as they shouldn't be in an efficient code, so (2) is non-trivial.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2130#issuecomment-797125091
https://github.com/psi4/psi4/issues/2130#issuecomment-797125091:144,Integrability,contract,contract,144,"Some comments for posterity:; * The Coulomb terms also come from the derivatives of two-electron integrals. You can (and for efficiency should) contract the TEI derivatives against the 1RDM to get the Coulomb terms. Conceptually, this is the interaction of an orbital with the mean field of all orbitals. It's not a pure one-electron interaction, but it's close enough.; * For purposes of thinking about the implementation, this issue is two very different ones: (1) exposing the existing pieces of the SCF gradient and (2) further decomposing those pieces into per-orbital contributions, where applicable. (1) is as easy as setting array variables on the wavefunction. Per-orbital contributions aren't even computed, as they shouldn't be in an efficient code, so (2) is non-trivial.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2130#issuecomment-797125091
https://github.com/psi4/psi4/issues/2130#issuecomment-797125091:639,Modifiability,variab,variables,639,"Some comments for posterity:; * The Coulomb terms also come from the derivatives of two-electron integrals. You can (and for efficiency should) contract the TEI derivatives against the 1RDM to get the Coulomb terms. Conceptually, this is the interaction of an orbital with the mean field of all orbitals. It's not a pure one-electron interaction, but it's close enough.; * For purposes of thinking about the implementation, this issue is two very different ones: (1) exposing the existing pieces of the SCF gradient and (2) further decomposing those pieces into per-orbital contributions, where applicable. (1) is as easy as setting array variables on the wavefunction. Per-orbital contributions aren't even computed, as they shouldn't be in an efficient code, so (2) is non-trivial.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2130#issuecomment-797125091
https://github.com/psi4/psi4/pull/2131#issuecomment-799920380:288,Modifiability,variab,variable,288,This pull request **introduces 1 alert** when merging f52133376a0076c8edc09f85e9db2a2c2b8a847c into d16d02e69238f1b0d90a2f1283f38e818873e748 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-fc9ceaac588977494a374d507ce944c017e9f232). **new alerts:**. * 1 for Unused local variable,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2131#issuecomment-799920380
https://github.com/psi4/psi4/pull/2131#issuecomment-800707855:589,Availability,error,error,589,"> I finished about half of the review and then got confused about the ""big picture."" If you're only intending to support point charges, then what happens if a user passes in an external potential object with basis functions attached? I can't find a place in this code that limits the kind of external potentials that can be considered. And why are there lines of code to get and append basis functions from/to the external potential? If you don't intend to support basis function external potentials (and it isn't clear to me if you intend to or not), then there should be a user-friendly error message when a user tries this. And on the topic, what is the technical barrier to including basis function external potentials? Is there a reason why those are being excluded from this PR, if they are?; > ; > I'll need to re-review once changes are made, and this issue of basis function external potentials is clarified. Please see the updated description above. I removes unnecessary code to make this PR specifically for point charges.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2131#issuecomment-800707855
https://github.com/psi4/psi4/pull/2131#issuecomment-800707855:933,Deployability,update,updated,933,"> I finished about half of the review and then got confused about the ""big picture."" If you're only intending to support point charges, then what happens if a user passes in an external potential object with basis functions attached? I can't find a place in this code that limits the kind of external potentials that can be considered. And why are there lines of code to get and append basis functions from/to the external potential? If you don't intend to support basis function external potentials (and it isn't clear to me if you intend to or not), then there should be a user-friendly error message when a user tries this. And on the topic, what is the technical barrier to including basis function external potentials? Is there a reason why those are being excluded from this PR, if they are?; > ; > I'll need to re-review once changes are made, and this issue of basis function external potentials is clarified. Please see the updated description above. I removes unnecessary code to make this PR specifically for point charges.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2131#issuecomment-800707855
https://github.com/psi4/psi4/pull/2131#issuecomment-800707855:127,Energy Efficiency,charge,charges,127,"> I finished about half of the review and then got confused about the ""big picture."" If you're only intending to support point charges, then what happens if a user passes in an external potential object with basis functions attached? I can't find a place in this code that limits the kind of external potentials that can be considered. And why are there lines of code to get and append basis functions from/to the external potential? If you don't intend to support basis function external potentials (and it isn't clear to me if you intend to or not), then there should be a user-friendly error message when a user tries this. And on the topic, what is the technical barrier to including basis function external potentials? Is there a reason why those are being excluded from this PR, if they are?; > ; > I'll need to re-review once changes are made, and this issue of basis function external potentials is clarified. Please see the updated description above. I removes unnecessary code to make this PR specifically for point charges.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2131#issuecomment-800707855
https://github.com/psi4/psi4/pull/2131#issuecomment-800707855:1026,Energy Efficiency,charge,charges,1026,"> I finished about half of the review and then got confused about the ""big picture."" If you're only intending to support point charges, then what happens if a user passes in an external potential object with basis functions attached? I can't find a place in this code that limits the kind of external potentials that can be considered. And why are there lines of code to get and append basis functions from/to the external potential? If you don't intend to support basis function external potentials (and it isn't clear to me if you intend to or not), then there should be a user-friendly error message when a user tries this. And on the topic, what is the technical barrier to including basis function external potentials? Is there a reason why those are being excluded from this PR, if they are?; > ; > I'll need to re-review once changes are made, and this issue of basis function external potentials is clarified. Please see the updated description above. I removes unnecessary code to make this PR specifically for point charges.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2131#issuecomment-800707855
https://github.com/psi4/psi4/pull/2131#issuecomment-800707855:595,Integrability,message,message,595,"> I finished about half of the review and then got confused about the ""big picture."" If you're only intending to support point charges, then what happens if a user passes in an external potential object with basis functions attached? I can't find a place in this code that limits the kind of external potentials that can be considered. And why are there lines of code to get and append basis functions from/to the external potential? If you don't intend to support basis function external potentials (and it isn't clear to me if you intend to or not), then there should be a user-friendly error message when a user tries this. And on the topic, what is the technical barrier to including basis function external potentials? Is there a reason why those are being excluded from this PR, if they are?; > ; > I'll need to re-review once changes are made, and this issue of basis function external potentials is clarified. Please see the updated description above. I removes unnecessary code to make this PR specifically for point charges.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2131#issuecomment-800707855
https://github.com/psi4/psi4/pull/2131#issuecomment-800707855:514,Usability,clear,clear,514,"> I finished about half of the review and then got confused about the ""big picture."" If you're only intending to support point charges, then what happens if a user passes in an external potential object with basis functions attached? I can't find a place in this code that limits the kind of external potentials that can be considered. And why are there lines of code to get and append basis functions from/to the external potential? If you don't intend to support basis function external potentials (and it isn't clear to me if you intend to or not), then there should be a user-friendly error message when a user tries this. And on the topic, what is the technical barrier to including basis function external potentials? Is there a reason why those are being excluded from this PR, if they are?; > ; > I'll need to re-review once changes are made, and this issue of basis function external potentials is clarified. Please see the updated description above. I removes unnecessary code to make this PR specifically for point charges.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2131#issuecomment-800707855
https://github.com/psi4/psi4/pull/2131#issuecomment-800707855:575,Usability,user-friendly,user-friendly,575,"> I finished about half of the review and then got confused about the ""big picture."" If you're only intending to support point charges, then what happens if a user passes in an external potential object with basis functions attached? I can't find a place in this code that limits the kind of external potentials that can be considered. And why are there lines of code to get and append basis functions from/to the external potential? If you don't intend to support basis function external potentials (and it isn't clear to me if you intend to or not), then there should be a user-friendly error message when a user tries this. And on the topic, what is the technical barrier to including basis function external potentials? Is there a reason why those are being excluded from this PR, if they are?; > ; > I'll need to re-review once changes are made, and this issue of basis function external potentials is clarified. Please see the updated description above. I removes unnecessary code to make this PR specifically for point charges.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2131#issuecomment-800707855
https://github.com/psi4/psi4/pull/2131#issuecomment-801954271:229,Safety,avoid,avoid,229,"Lori, could you comment on the long-term fate of the new `potentials_` field and the pre-existing `external_pot_` field, as well as other possible use cases for `potentials_`? The impression I get is that this is still a hack to avoid giving F/I-SAPT a wavefunction, rather than something that makes sense for wavefunctions _in general_. I'm open to being wrong, but if I'm right, I request some very heavy warnings about how this field is for internal Psi use only, is to-be-deprecated, and how anybody doing anything other than F/I-SAPT should stick to `external_pot_`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2131#issuecomment-801954271
https://github.com/psi4/psi4/pull/2132#issuecomment-801032115:359,Modifiability,variab,variable,359,This pull request **introduces 3 alerts** and **fixes 1** when merging c220287c13d731bb2961e2982bb2bf39da770076 into d16d02e69238f1b0d90a2f1283f38e818873e748 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-4be40b854a58f17bfa7e7b77368b6aae9c79fb39). **new alerts:**. * 2 for Testing equality to None; * 1 for Suspicious unused loop iteration variable. **fixed alerts:**. * 1 for Unused local variable,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-801032115
https://github.com/psi4/psi4/pull/2132#issuecomment-801032115:409,Modifiability,variab,variable,409,This pull request **introduces 3 alerts** and **fixes 1** when merging c220287c13d731bb2961e2982bb2bf39da770076 into d16d02e69238f1b0d90a2f1283f38e818873e748 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-4be40b854a58f17bfa7e7b77368b6aae9c79fb39). **new alerts:**. * 2 for Testing equality to None; * 1 for Suspicious unused loop iteration variable. **fixed alerts:**. * 1 for Unused local variable,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-801032115
https://github.com/psi4/psi4/pull/2132#issuecomment-801032115:292,Testability,Test,Testing,292,This pull request **introduces 3 alerts** and **fixes 1** when merging c220287c13d731bb2961e2982bb2bf39da770076 into d16d02e69238f1b0d90a2f1283f38e818873e748 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-4be40b854a58f17bfa7e7b77368b6aae9c79fb39). **new alerts:**. * 2 for Testing equality to None; * 1 for Suspicious unused loop iteration variable. **fixed alerts:**. * 1 for Unused local variable,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-801032115
https://github.com/psi4/psi4/pull/2132#issuecomment-801585881:17,Energy Efficiency,energy,energy,17,"FWIW, the `VV10` energy contribution is added to the `DFT FUNCTIONAL TOTAL ENERGY` here:; https://github.com/psi4/psi4/blob/9a1853f004977d79b333a89b5fda237732aafe83/psi4/driver/procrouting/scf_proc/scf_iterator.py#L705; so implementing the change would be trivial.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-801585881
https://github.com/psi4/psi4/pull/2132#issuecomment-801585881:75,Energy Efficiency,ENERGY,ENERGY,75,"FWIW, the `VV10` energy contribution is added to the `DFT FUNCTIONAL TOTAL ENERGY` here:; https://github.com/psi4/psi4/blob/9a1853f004977d79b333a89b5fda237732aafe83/psi4/driver/procrouting/scf_proc/scf_iterator.py#L705; so implementing the change would be trivial.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-801585881
https://github.com/psi4/psi4/pull/2132#issuecomment-802058786:39,Energy Efficiency,ENERGY,ENERGY,39,"> Is there any will to change DFT VV10 ENERGY to behave like empirical dispersion corrections in terms of variables?. Is there any potential harm to this when VV10 is done self consistently?; Only issue I see is breaking old user or p4numpy scripts that rely on the energy being summed up. Is this PR a 1.4 target? If not, could we put a warning or similar in place somewhere that it is subject to change.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-802058786
https://github.com/psi4/psi4/pull/2132#issuecomment-802058786:266,Energy Efficiency,energy,energy,266,"> Is there any will to change DFT VV10 ENERGY to behave like empirical dispersion corrections in terms of variables?. Is there any potential harm to this when VV10 is done self consistently?; Only issue I see is breaking old user or p4numpy scripts that rely on the energy being summed up. Is this PR a 1.4 target? If not, could we put a warning or similar in place somewhere that it is subject to change.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-802058786
https://github.com/psi4/psi4/pull/2132#issuecomment-802058786:106,Modifiability,variab,variables,106,"> Is there any will to change DFT VV10 ENERGY to behave like empirical dispersion corrections in terms of variables?. Is there any potential harm to this when VV10 is done self consistently?; Only issue I see is breaking old user or p4numpy scripts that rely on the energy being summed up. Is this PR a 1.4 target? If not, could we put a warning or similar in place somewhere that it is subject to change.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-802058786
https://github.com/psi4/psi4/pull/2132#issuecomment-802158952:268,Energy Efficiency,ENERGY,ENERGY,268,"whoa, quite a lot of details to handle DFT xtpl -- thanks for working it all out!. > Should I bother cleaning the cbs driver up, given that distributed driver is coming in 1.5?. I'd do a minimum of cleanup here and save it for ddd in 1.5. > The fact that the DFT VV10 ENERGY contribution is included in DFT FUNCTIONAL TOTAL ENERGY is making my life quite difficult here. I understand normally VV10 is part of the SCF cycle, but we also allow calculating it as a post-scf correction. Is there any will to change DFT VV10 ENERGY to behave like empirical dispersion corrections in terms of variables?. Having VV10 follow the empirical dispersion pattern feels more natural to me. Can add a message warning that usage has changed whenever the var is called for a spell like https://github.com/psi4/psi4/blob/master/psi4/driver/p4util/python_helpers.py#L624-L628",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-802158952
https://github.com/psi4/psi4/pull/2132#issuecomment-802158952:324,Energy Efficiency,ENERGY,ENERGY,324,"whoa, quite a lot of details to handle DFT xtpl -- thanks for working it all out!. > Should I bother cleaning the cbs driver up, given that distributed driver is coming in 1.5?. I'd do a minimum of cleanup here and save it for ddd in 1.5. > The fact that the DFT VV10 ENERGY contribution is included in DFT FUNCTIONAL TOTAL ENERGY is making my life quite difficult here. I understand normally VV10 is part of the SCF cycle, but we also allow calculating it as a post-scf correction. Is there any will to change DFT VV10 ENERGY to behave like empirical dispersion corrections in terms of variables?. Having VV10 follow the empirical dispersion pattern feels more natural to me. Can add a message warning that usage has changed whenever the var is called for a spell like https://github.com/psi4/psi4/blob/master/psi4/driver/p4util/python_helpers.py#L624-L628",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-802158952
https://github.com/psi4/psi4/pull/2132#issuecomment-802158952:520,Energy Efficiency,ENERGY,ENERGY,520,"whoa, quite a lot of details to handle DFT xtpl -- thanks for working it all out!. > Should I bother cleaning the cbs driver up, given that distributed driver is coming in 1.5?. I'd do a minimum of cleanup here and save it for ddd in 1.5. > The fact that the DFT VV10 ENERGY contribution is included in DFT FUNCTIONAL TOTAL ENERGY is making my life quite difficult here. I understand normally VV10 is part of the SCF cycle, but we also allow calculating it as a post-scf correction. Is there any will to change DFT VV10 ENERGY to behave like empirical dispersion corrections in terms of variables?. Having VV10 follow the empirical dispersion pattern feels more natural to me. Can add a message warning that usage has changed whenever the var is called for a spell like https://github.com/psi4/psi4/blob/master/psi4/driver/p4util/python_helpers.py#L624-L628",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-802158952
https://github.com/psi4/psi4/pull/2132#issuecomment-802158952:687,Integrability,message,message,687,"whoa, quite a lot of details to handle DFT xtpl -- thanks for working it all out!. > Should I bother cleaning the cbs driver up, given that distributed driver is coming in 1.5?. I'd do a minimum of cleanup here and save it for ddd in 1.5. > The fact that the DFT VV10 ENERGY contribution is included in DFT FUNCTIONAL TOTAL ENERGY is making my life quite difficult here. I understand normally VV10 is part of the SCF cycle, but we also allow calculating it as a post-scf correction. Is there any will to change DFT VV10 ENERGY to behave like empirical dispersion corrections in terms of variables?. Having VV10 follow the empirical dispersion pattern feels more natural to me. Can add a message warning that usage has changed whenever the var is called for a spell like https://github.com/psi4/psi4/blob/master/psi4/driver/p4util/python_helpers.py#L624-L628",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-802158952
https://github.com/psi4/psi4/pull/2132#issuecomment-802158952:587,Modifiability,variab,variables,587,"whoa, quite a lot of details to handle DFT xtpl -- thanks for working it all out!. > Should I bother cleaning the cbs driver up, given that distributed driver is coming in 1.5?. I'd do a minimum of cleanup here and save it for ddd in 1.5. > The fact that the DFT VV10 ENERGY contribution is included in DFT FUNCTIONAL TOTAL ENERGY is making my life quite difficult here. I understand normally VV10 is part of the SCF cycle, but we also allow calculating it as a post-scf correction. Is there any will to change DFT VV10 ENERGY to behave like empirical dispersion corrections in terms of variables?. Having VV10 follow the empirical dispersion pattern feels more natural to me. Can add a message warning that usage has changed whenever the var is called for a spell like https://github.com/psi4/psi4/blob/master/psi4/driver/p4util/python_helpers.py#L624-L628",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-802158952
https://github.com/psi4/psi4/pull/2132#issuecomment-810725516:324,Modifiability,variab,variable,324,This pull request **introduces 1 alert** and **fixes 1** when merging f63958fae589068d71c8f307a99b082d5d26256b into 86700a90f5be3ec972390e32b2e94eeae595745e - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-86af60515246bd222294eb56b35524fd4f0b2e5d). **new alerts:**. * 1 for Suspicious unused loop iteration variable. **fixed alerts:**. * 1 for Unused local variable,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-810725516
https://github.com/psi4/psi4/pull/2132#issuecomment-810725516:374,Modifiability,variab,variable,374,This pull request **introduces 1 alert** and **fixes 1** when merging f63958fae589068d71c8f307a99b082d5d26256b into 86700a90f5be3ec972390e32b2e94eeae595745e - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-86af60515246bd222294eb56b35524fd4f0b2e5d). **new alerts:**. * 1 for Suspicious unused loop iteration variable. **fixed alerts:**. * 1 for Unused local variable,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-810725516
https://github.com/psi4/psi4/pull/2132#issuecomment-810914206:324,Modifiability,variab,variable,324,This pull request **introduces 1 alert** and **fixes 1** when merging 3fcedd3f9511a1260c42f81d337b0d8b46388222 into 86700a90f5be3ec972390e32b2e94eeae595745e - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-b638bf7c7812745154de26eb19cd87fe2aed03a5). **new alerts:**. * 1 for Suspicious unused loop iteration variable. **fixed alerts:**. * 1 for Unused local variable,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-810914206
https://github.com/psi4/psi4/pull/2132#issuecomment-810914206:374,Modifiability,variab,variable,374,This pull request **introduces 1 alert** and **fixes 1** when merging 3fcedd3f9511a1260c42f81d337b0d8b46388222 into 86700a90f5be3ec972390e32b2e94eeae595745e - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-b638bf7c7812745154de26eb19cd87fe2aed03a5). **new alerts:**. * 1 for Suspicious unused loop iteration variable. **fixed alerts:**. * 1 for Unused local variable,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-810914206
https://github.com/psi4/psi4/pull/2132#issuecomment-811688121:198,Testability,test,tests,198,"This is now ready for review. I have had to move the dispersion correction bit in `proc.py` around to a spot after the ECP contribution is in, to keep the scf (`fctl`) gradient intact. All relevant tests (`-L cbs`, `-L grad`, `-L smoke`) pass, so I don't think I messed that up.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-811688121
https://github.com/psi4/psi4/pull/2132#issuecomment-811784769:285,Modifiability,variab,variable,285,This pull request **fixes 1 alert** when merging fa0a259cc408f2b473d2078ccbca856bc1f6af97 into 86700a90f5be3ec972390e32b2e94eeae595745e - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-a1a7e445016a2966513d5d5982975bad6e664678). **fixed alerts:**. * 1 for Unused local variable,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-811784769
https://github.com/psi4/psi4/pull/2132#issuecomment-939466200:259,Deployability,pipeline,pipeline,259,"I'd appreciate some feedback, especially on the docs. There's one or two items where I'd like @loriab to weigh in further: function aliases and zero-if-not-present for VV10 and empirical dispersion. The failing build seems to be a random crash of the windows pipeline, not related to this PR as far as I can tell.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-939466200
https://github.com/psi4/psi4/pull/2132#issuecomment-939466200:20,Usability,feedback,feedback,20,"I'd appreciate some feedback, especially on the docs. There's one or two items where I'd like @loriab to weigh in further: function aliases and zero-if-not-present for VV10 and empirical dispersion. The failing build seems to be a random crash of the windows pipeline, not related to this PR as far as I can tell.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-939466200
https://github.com/psi4/psi4/pull/2132#issuecomment-963235373:135,Energy Efficiency,energy,energy,135,"> ; > ; > I am still completely lost when I try to read `_validate_cbs_inputs`.; > ; > What I understand is that the user provides the energy call with metadata information in the form of either a structured dictionary or a string using special CBS syntax that is then converted into a structured dictionary. There's actually a third option - a legacy subset of keywords, such as `scf_wfn`, `corl_scheme`, etc. I agree, it's a mess, and someone should do something about it. . Basically, if it's a `method/basis` string, that gets parsed into a metadata dictionary in: ; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L2513 . If the user passes in a set of `**kwargs`, those get parsed into a metadata dictionary in: ; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1486. Finally, if the user passes in `cbs_metadata` as an argument, this does not get parsed. Note that all three of those have to be ""validated""... > ; > What transformations are applied to that structured dictionary by the time it enters that input function, where is the specification for the input dictionary, and where is the specification for the output dictionary? I know that the input dictionaries are allowed to have a ""treatment"" field, but the output dictionaries are not, so they need to have different specifications. The only specification I see is in the ""Combined interface"" section of the `cbs` docstring. So we have a missing specification. So the user-facing portion (which is the only real spec) is defined in the ""combined interface"". The internal ""validated"" dictionary is in my view perfectly well documented here:; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365 . I question whether the validated dictionary needs further specification, as it's not user facing. Note that the validator function is under-prefixed, so having a docstring",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963235373
https://github.com/psi4/psi4/pull/2132#issuecomment-963235373:1456,Integrability,interface,interface,1456,"do something about it. . Basically, if it's a `method/basis` string, that gets parsed into a metadata dictionary in: ; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L2513 . If the user passes in a set of `**kwargs`, those get parsed into a metadata dictionary in: ; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1486. Finally, if the user passes in `cbs_metadata` as an argument, this does not get parsed. Note that all three of those have to be ""validated""... > ; > What transformations are applied to that structured dictionary by the time it enters that input function, where is the specification for the input dictionary, and where is the specification for the output dictionary? I know that the input dictionaries are allowed to have a ""treatment"" field, but the output dictionaries are not, so they need to have different specifications. The only specification I see is in the ""Combined interface"" section of the `cbs` docstring. So we have a missing specification. So the user-facing portion (which is the only real spec) is defined in the ""combined interface"". The internal ""validated"" dictionary is in my view perfectly well documented here:; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365 . I question whether the validated dictionary needs further specification, as it's not user facing. Note that the validator function is under-prefixed, so having a docstring for it is kinda moot anyway. > ; > Furthermore, if that function is only responsible for validating (like the name says), then why is it returning a completely new dictionary that isn't following the same specification? I suspect the function name is incorrect and the docstring is incomplete. This is because of `""method/basis""` and `**kwargs` pathways, which have to be lined up somewhere. I thought rather than splitting the validation logic into ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963235373
https://github.com/psi4/psi4/pull/2132#issuecomment-963235373:1620,Integrability,interface,interface,1620,"hub.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L2513 . If the user passes in a set of `**kwargs`, those get parsed into a metadata dictionary in: ; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1486. Finally, if the user passes in `cbs_metadata` as an argument, this does not get parsed. Note that all three of those have to be ""validated""... > ; > What transformations are applied to that structured dictionary by the time it enters that input function, where is the specification for the input dictionary, and where is the specification for the output dictionary? I know that the input dictionaries are allowed to have a ""treatment"" field, but the output dictionaries are not, so they need to have different specifications. The only specification I see is in the ""Combined interface"" section of the `cbs` docstring. So we have a missing specification. So the user-facing portion (which is the only real spec) is defined in the ""combined interface"". The internal ""validated"" dictionary is in my view perfectly well documented here:; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365 . I question whether the validated dictionary needs further specification, as it's not user facing. Note that the validator function is under-prefixed, so having a docstring for it is kinda moot anyway. > ; > Furthermore, if that function is only responsible for validating (like the name says), then why is it returning a completely new dictionary that isn't following the same specification? I suspect the function name is incorrect and the docstring is incomplete. This is because of `""method/basis""` and `**kwargs` pathways, which have to be lined up somewhere. I thought rather than splitting the validation logic into the separate functions above, it's simpler to interpret both of these branches as an incomplete `cbs_metadata` which then needs to ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963235373
https://github.com/psi4/psi4/pull/2132#issuecomment-963235373:1010,Security,validat,validated,1010,"> ; > ; > I am still completely lost when I try to read `_validate_cbs_inputs`.; > ; > What I understand is that the user provides the energy call with metadata information in the form of either a structured dictionary or a string using special CBS syntax that is then converted into a structured dictionary. There's actually a third option - a legacy subset of keywords, such as `scf_wfn`, `corl_scheme`, etc. I agree, it's a mess, and someone should do something about it. . Basically, if it's a `method/basis` string, that gets parsed into a metadata dictionary in: ; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L2513 . If the user passes in a set of `**kwargs`, those get parsed into a metadata dictionary in: ; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1486. Finally, if the user passes in `cbs_metadata` as an argument, this does not get parsed. Note that all three of those have to be ""validated""... > ; > What transformations are applied to that structured dictionary by the time it enters that input function, where is the specification for the input dictionary, and where is the specification for the output dictionary? I know that the input dictionaries are allowed to have a ""treatment"" field, but the output dictionaries are not, so they need to have different specifications. The only specification I see is in the ""Combined interface"" section of the `cbs` docstring. So we have a missing specification. So the user-facing portion (which is the only real spec) is defined in the ""combined interface"". The internal ""validated"" dictionary is in my view perfectly well documented here:; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365 . I question whether the validated dictionary needs further specification, as it's not user facing. Note that the validator function is under-prefixed, so having a docstring",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963235373
https://github.com/psi4/psi4/pull/2132#issuecomment-963235373:1646,Security,validat,validated,1646,"b/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L2513 . If the user passes in a set of `**kwargs`, those get parsed into a metadata dictionary in: ; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1486. Finally, if the user passes in `cbs_metadata` as an argument, this does not get parsed. Note that all three of those have to be ""validated""... > ; > What transformations are applied to that structured dictionary by the time it enters that input function, where is the specification for the input dictionary, and where is the specification for the output dictionary? I know that the input dictionaries are allowed to have a ""treatment"" field, but the output dictionaries are not, so they need to have different specifications. The only specification I see is in the ""Combined interface"" section of the `cbs` docstring. So we have a missing specification. So the user-facing portion (which is the only real spec) is defined in the ""combined interface"". The internal ""validated"" dictionary is in my view perfectly well documented here:; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365 . I question whether the validated dictionary needs further specification, as it's not user facing. Note that the validator function is under-prefixed, so having a docstring for it is kinda moot anyway. > ; > Furthermore, if that function is only responsible for validating (like the name says), then why is it returning a completely new dictionary that isn't following the same specification? I suspect the function name is incorrect and the docstring is incomplete. This is because of `""method/basis""` and `**kwargs` pathways, which have to be lined up somewhere. I thought rather than splitting the validation logic into the separate functions above, it's simpler to interpret both of these branches as an incomplete `cbs_metadata` which then needs to be validated anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963235373
https://github.com/psi4/psi4/pull/2132#issuecomment-963235373:1853,Security,validat,validated,1853,"b/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L2513 . If the user passes in a set of `**kwargs`, those get parsed into a metadata dictionary in: ; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1486. Finally, if the user passes in `cbs_metadata` as an argument, this does not get parsed. Note that all three of those have to be ""validated""... > ; > What transformations are applied to that structured dictionary by the time it enters that input function, where is the specification for the input dictionary, and where is the specification for the output dictionary? I know that the input dictionaries are allowed to have a ""treatment"" field, but the output dictionaries are not, so they need to have different specifications. The only specification I see is in the ""Combined interface"" section of the `cbs` docstring. So we have a missing specification. So the user-facing portion (which is the only real spec) is defined in the ""combined interface"". The internal ""validated"" dictionary is in my view perfectly well documented here:; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365 . I question whether the validated dictionary needs further specification, as it's not user facing. Note that the validator function is under-prefixed, so having a docstring for it is kinda moot anyway. > ; > Furthermore, if that function is only responsible for validating (like the name says), then why is it returning a completely new dictionary that isn't following the same specification? I suspect the function name is incorrect and the docstring is incomplete. This is because of `""method/basis""` and `**kwargs` pathways, which have to be lined up somewhere. I thought rather than splitting the validation logic into the separate functions above, it's simpler to interpret both of these branches as an incomplete `cbs_metadata` which then needs to be validated anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963235373
https://github.com/psi4/psi4/pull/2132#issuecomment-963235373:1942,Security,validat,validator,1942,"b/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L2513 . If the user passes in a set of `**kwargs`, those get parsed into a metadata dictionary in: ; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1486. Finally, if the user passes in `cbs_metadata` as an argument, this does not get parsed. Note that all three of those have to be ""validated""... > ; > What transformations are applied to that structured dictionary by the time it enters that input function, where is the specification for the input dictionary, and where is the specification for the output dictionary? I know that the input dictionaries are allowed to have a ""treatment"" field, but the output dictionaries are not, so they need to have different specifications. The only specification I see is in the ""Combined interface"" section of the `cbs` docstring. So we have a missing specification. So the user-facing portion (which is the only real spec) is defined in the ""combined interface"". The internal ""validated"" dictionary is in my view perfectly well documented here:; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365 . I question whether the validated dictionary needs further specification, as it's not user facing. Note that the validator function is under-prefixed, so having a docstring for it is kinda moot anyway. > ; > Furthermore, if that function is only responsible for validating (like the name says), then why is it returning a completely new dictionary that isn't following the same specification? I suspect the function name is incorrect and the docstring is incomplete. This is because of `""method/basis""` and `**kwargs` pathways, which have to be lined up somewhere. I thought rather than splitting the validation logic into the separate functions above, it's simpler to interpret both of these branches as an incomplete `cbs_metadata` which then needs to be validated anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963235373
https://github.com/psi4/psi4/pull/2132#issuecomment-963235373:2091,Security,validat,validating,2091,"b/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L2513 . If the user passes in a set of `**kwargs`, those get parsed into a metadata dictionary in: ; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1486. Finally, if the user passes in `cbs_metadata` as an argument, this does not get parsed. Note that all three of those have to be ""validated""... > ; > What transformations are applied to that structured dictionary by the time it enters that input function, where is the specification for the input dictionary, and where is the specification for the output dictionary? I know that the input dictionaries are allowed to have a ""treatment"" field, but the output dictionaries are not, so they need to have different specifications. The only specification I see is in the ""Combined interface"" section of the `cbs` docstring. So we have a missing specification. So the user-facing portion (which is the only real spec) is defined in the ""combined interface"". The internal ""validated"" dictionary is in my view perfectly well documented here:; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365 . I question whether the validated dictionary needs further specification, as it's not user facing. Note that the validator function is under-prefixed, so having a docstring for it is kinda moot anyway. > ; > Furthermore, if that function is only responsible for validating (like the name says), then why is it returning a completely new dictionary that isn't following the same specification? I suspect the function name is incorrect and the docstring is incomplete. This is because of `""method/basis""` and `**kwargs` pathways, which have to be lined up somewhere. I thought rather than splitting the validation logic into the separate functions above, it's simpler to interpret both of these branches as an incomplete `cbs_metadata` which then needs to be validated anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963235373
https://github.com/psi4/psi4/pull/2132#issuecomment-963235373:2430,Security,validat,validation,2430,"b/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L2513 . If the user passes in a set of `**kwargs`, those get parsed into a metadata dictionary in: ; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1486. Finally, if the user passes in `cbs_metadata` as an argument, this does not get parsed. Note that all three of those have to be ""validated""... > ; > What transformations are applied to that structured dictionary by the time it enters that input function, where is the specification for the input dictionary, and where is the specification for the output dictionary? I know that the input dictionaries are allowed to have a ""treatment"" field, but the output dictionaries are not, so they need to have different specifications. The only specification I see is in the ""Combined interface"" section of the `cbs` docstring. So we have a missing specification. So the user-facing portion (which is the only real spec) is defined in the ""combined interface"". The internal ""validated"" dictionary is in my view perfectly well documented here:; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365 . I question whether the validated dictionary needs further specification, as it's not user facing. Note that the validator function is under-prefixed, so having a docstring for it is kinda moot anyway. > ; > Furthermore, if that function is only responsible for validating (like the name says), then why is it returning a completely new dictionary that isn't following the same specification? I suspect the function name is incorrect and the docstring is incomplete. This is because of `""method/basis""` and `**kwargs` pathways, which have to be lined up somewhere. I thought rather than splitting the validation logic into the separate functions above, it's simpler to interpret both of these branches as an incomplete `cbs_metadata` which then needs to be validated anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963235373
https://github.com/psi4/psi4/pull/2132#issuecomment-963235373:2586,Security,validat,validated,2586,"b/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L2513 . If the user passes in a set of `**kwargs`, those get parsed into a metadata dictionary in: ; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1486. Finally, if the user passes in `cbs_metadata` as an argument, this does not get parsed. Note that all three of those have to be ""validated""... > ; > What transformations are applied to that structured dictionary by the time it enters that input function, where is the specification for the input dictionary, and where is the specification for the output dictionary? I know that the input dictionaries are allowed to have a ""treatment"" field, but the output dictionaries are not, so they need to have different specifications. The only specification I see is in the ""Combined interface"" section of the `cbs` docstring. So we have a missing specification. So the user-facing portion (which is the only real spec) is defined in the ""combined interface"". The internal ""validated"" dictionary is in my view perfectly well documented here:; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365 . I question whether the validated dictionary needs further specification, as it's not user facing. Note that the validator function is under-prefixed, so having a docstring for it is kinda moot anyway. > ; > Furthermore, if that function is only responsible for validating (like the name says), then why is it returning a completely new dictionary that isn't following the same specification? I suspect the function name is incorrect and the docstring is incomplete. This is because of `""method/basis""` and `**kwargs` pathways, which have to be lined up somewhere. I thought rather than splitting the validation logic into the separate functions above, it's simpler to interpret both of these branches as an incomplete `cbs_metadata` which then needs to be validated anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963235373
https://github.com/psi4/psi4/pull/2132#issuecomment-963235373:2441,Testability,log,logic,2441,"b/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L2513 . If the user passes in a set of `**kwargs`, those get parsed into a metadata dictionary in: ; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1486. Finally, if the user passes in `cbs_metadata` as an argument, this does not get parsed. Note that all three of those have to be ""validated""... > ; > What transformations are applied to that structured dictionary by the time it enters that input function, where is the specification for the input dictionary, and where is the specification for the output dictionary? I know that the input dictionaries are allowed to have a ""treatment"" field, but the output dictionaries are not, so they need to have different specifications. The only specification I see is in the ""Combined interface"" section of the `cbs` docstring. So we have a missing specification. So the user-facing portion (which is the only real spec) is defined in the ""combined interface"". The internal ""validated"" dictionary is in my view perfectly well documented here:; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365 . I question whether the validated dictionary needs further specification, as it's not user facing. Note that the validator function is under-prefixed, so having a docstring for it is kinda moot anyway. > ; > Furthermore, if that function is only responsible for validating (like the name says), then why is it returning a completely new dictionary that isn't following the same specification? I suspect the function name is incorrect and the docstring is incomplete. This is because of `""method/basis""` and `**kwargs` pathways, which have to be lined up somewhere. I thought rather than splitting the validation logic into the separate functions above, it's simpler to interpret both of these branches as an incomplete `cbs_metadata` which then needs to be validated anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963235373
https://github.com/psi4/psi4/pull/2132#issuecomment-963235373:2487,Usability,simpl,simpler,2487,"b/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L2513 . If the user passes in a set of `**kwargs`, those get parsed into a metadata dictionary in: ; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1486. Finally, if the user passes in `cbs_metadata` as an argument, this does not get parsed. Note that all three of those have to be ""validated""... > ; > What transformations are applied to that structured dictionary by the time it enters that input function, where is the specification for the input dictionary, and where is the specification for the output dictionary? I know that the input dictionaries are allowed to have a ""treatment"" field, but the output dictionaries are not, so they need to have different specifications. The only specification I see is in the ""Combined interface"" section of the `cbs` docstring. So we have a missing specification. So the user-facing portion (which is the only real spec) is defined in the ""combined interface"". The internal ""validated"" dictionary is in my view perfectly well documented here:; https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365 . I question whether the validated dictionary needs further specification, as it's not user facing. Note that the validator function is under-prefixed, so having a docstring for it is kinda moot anyway. > ; > Furthermore, if that function is only responsible for validating (like the name says), then why is it returning a completely new dictionary that isn't following the same specification? I suspect the function name is incorrect and the docstring is incomplete. This is because of `""method/basis""` and `**kwargs` pathways, which have to be lined up somewhere. I thought rather than splitting the validation logic into the separate functions above, it's simpler to interpret both of these branches as an incomplete `cbs_metadata` which then needs to be validated anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963235373
https://github.com/psi4/psi4/pull/2132#issuecomment-963285974:489,Testability,log,log,489,"> As for the NL and dispersion question, I also thought that was the plan, but I think both @loriab and especially @JonathonMisiewicz would prefer keeping the ""old"" behaviour. I'm easy either way, but please don't make re-apply the changes I reverted, again. Anything that changes the value of existing psivars should be its own PR, and we need to keep the dispersion part of the gradient handled the way it currently is for printing purposes. I'd need to see exactly which comment in the log we're talking about to be more detailed. I'm afraid I don't know what ""consolidate the -D and -NL behaviour"" means in this context.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963285974
https://github.com/psi4/psi4/pull/2132#issuecomment-963289886:16,Security,validat,validated,16,"> The internal ""validated"" dictionary is in my view perfectly well documented here:; > ; > https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365. So, just to be clear, that applies for every stage in the entire dict? I thought that only applied to DFT stages because you mentioned it in Sec. 2a). > > Furthermore, if that function is only responsible for validating (like the name says), then why is it returning a completely new dictionary that isn't following the same specification? I suspect the function name is incorrect and the docstring is incomplete.; > ; > This is because of `""method/basis""` and `**kwargs` pathways, which have to be lined up somewhere. I thought rather than splitting the validation logic into the separate functions above, it's simpler to interpret both of these branches as an incomplete `cbs_metadata` which then needs to be validated anyway. Then I stand by my comment that the function name and docstring are incomplete in the current version. Neither mentions that the dict needs to be completed (and needs to lose at least one field).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963289886
https://github.com/psi4/psi4/pull/2132#issuecomment-963289886:414,Security,validat,validating,414,"> The internal ""validated"" dictionary is in my view perfectly well documented here:; > ; > https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365. So, just to be clear, that applies for every stage in the entire dict? I thought that only applied to DFT stages because you mentioned it in Sec. 2a). > > Furthermore, if that function is only responsible for validating (like the name says), then why is it returning a completely new dictionary that isn't following the same specification? I suspect the function name is incorrect and the docstring is incomplete.; > ; > This is because of `""method/basis""` and `**kwargs` pathways, which have to be lined up somewhere. I thought rather than splitting the validation logic into the separate functions above, it's simpler to interpret both of these branches as an incomplete `cbs_metadata` which then needs to be validated anyway. Then I stand by my comment that the function name and docstring are incomplete in the current version. Neither mentions that the dict needs to be completed (and needs to lose at least one field).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963289886
https://github.com/psi4/psi4/pull/2132#issuecomment-963289886:760,Security,validat,validation,760,"> The internal ""validated"" dictionary is in my view perfectly well documented here:; > ; > https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365. So, just to be clear, that applies for every stage in the entire dict? I thought that only applied to DFT stages because you mentioned it in Sec. 2a). > > Furthermore, if that function is only responsible for validating (like the name says), then why is it returning a completely new dictionary that isn't following the same specification? I suspect the function name is incorrect and the docstring is incomplete.; > ; > This is because of `""method/basis""` and `**kwargs` pathways, which have to be lined up somewhere. I thought rather than splitting the validation logic into the separate functions above, it's simpler to interpret both of these branches as an incomplete `cbs_metadata` which then needs to be validated anyway. Then I stand by my comment that the function name and docstring are incomplete in the current version. Neither mentions that the dict needs to be completed (and needs to lose at least one field).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963289886
https://github.com/psi4/psi4/pull/2132#issuecomment-963289886:916,Security,validat,validated,916,"> The internal ""validated"" dictionary is in my view perfectly well documented here:; > ; > https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365. So, just to be clear, that applies for every stage in the entire dict? I thought that only applied to DFT stages because you mentioned it in Sec. 2a). > > Furthermore, if that function is only responsible for validating (like the name says), then why is it returning a completely new dictionary that isn't following the same specification? I suspect the function name is incorrect and the docstring is incomplete.; > ; > This is because of `""method/basis""` and `**kwargs` pathways, which have to be lined up somewhere. I thought rather than splitting the validation logic into the separate functions above, it's simpler to interpret both of these branches as an incomplete `cbs_metadata` which then needs to be validated anyway. Then I stand by my comment that the function name and docstring are incomplete in the current version. Neither mentions that the dict needs to be completed (and needs to lose at least one field).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963289886
https://github.com/psi4/psi4/pull/2132#issuecomment-963289886:771,Testability,log,logic,771,"> The internal ""validated"" dictionary is in my view perfectly well documented here:; > ; > https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365. So, just to be clear, that applies for every stage in the entire dict? I thought that only applied to DFT stages because you mentioned it in Sec. 2a). > > Furthermore, if that function is only responsible for validating (like the name says), then why is it returning a completely new dictionary that isn't following the same specification? I suspect the function name is incorrect and the docstring is incomplete.; > ; > This is because of `""method/basis""` and `**kwargs` pathways, which have to be lined up somewhere. I thought rather than splitting the validation logic into the separate functions above, it's simpler to interpret both of these branches as an incomplete `cbs_metadata` which then needs to be validated anyway. Then I stand by my comment that the function name and docstring are incomplete in the current version. Neither mentions that the dict needs to be completed (and needs to lose at least one field).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963289886
https://github.com/psi4/psi4/pull/2132#issuecomment-963289886:220,Usability,clear,clear,220,"> The internal ""validated"" dictionary is in my view perfectly well documented here:; > ; > https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365. So, just to be clear, that applies for every stage in the entire dict? I thought that only applied to DFT stages because you mentioned it in Sec. 2a). > > Furthermore, if that function is only responsible for validating (like the name says), then why is it returning a completely new dictionary that isn't following the same specification? I suspect the function name is incorrect and the docstring is incomplete.; > ; > This is because of `""method/basis""` and `**kwargs` pathways, which have to be lined up somewhere. I thought rather than splitting the validation logic into the separate functions above, it's simpler to interpret both of these branches as an incomplete `cbs_metadata` which then needs to be validated anyway. Then I stand by my comment that the function name and docstring are incomplete in the current version. Neither mentions that the dict needs to be completed (and needs to lose at least one field).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963289886
https://github.com/psi4/psi4/pull/2132#issuecomment-963289886:817,Usability,simpl,simpler,817,"> The internal ""validated"" dictionary is in my view perfectly well documented here:; > ; > https://github.com/psi4/psi4/blob/72dabe0a889b2026a27a70481c79a2e93164f1dc/psi4/driver/driver_cbs.py#L1346-L1365. So, just to be clear, that applies for every stage in the entire dict? I thought that only applied to DFT stages because you mentioned it in Sec. 2a). > > Furthermore, if that function is only responsible for validating (like the name says), then why is it returning a completely new dictionary that isn't following the same specification? I suspect the function name is incorrect and the docstring is incomplete.; > ; > This is because of `""method/basis""` and `**kwargs` pathways, which have to be lined up somewhere. I thought rather than splitting the validation logic into the separate functions above, it's simpler to interpret both of these branches as an incomplete `cbs_metadata` which then needs to be validated anyway. Then I stand by my comment that the function name and docstring are incomplete in the current version. Neither mentions that the dict needs to be completed (and needs to lose at least one field).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963289886
https://github.com/psi4/psi4/pull/2132#issuecomment-963304601:342,Availability,down,down,342,"> I'm afraid I don't know what ""consolidate the -D and -NL behaviour"" means in this context. I am referring essentially to this: https://github.com/psi4/psi4/pull/2132#issuecomment-802158952; Was a PR question, rather than code comment. If there was a code discussion I missed it. If you/we don't want to touch it this now, we should note it down somewhere. Either as issue or code comment.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-963304601
https://github.com/psi4/psi4/pull/2132#issuecomment-964872345:152,Energy Efficiency,energy,energy,152,"I am a bit struggling with the `component` keyword, if it is not 'dft'. Does the following work as I think it does?; ```; # only extrapolate PT2 part?; energy(cbs, cbs_metadata=[{'wfn': ""b2plyp-d3"", 'basis': ""cc-pv[dt]z"", 'component': ""dh""}]). # only ""extrapolate"" D3 part? It is doing a 2-step then or taking the highest energy?; energy(cbs, cbs_metadata=[{'wfn': ""b2plyp-d3"", 'basis': ""cc-pv[dt]z"", 'component': ""disp""}]). # Excluding PT2 part from the extrapolation?; energy(cbs, cbs_metadata=[{'wfn': ""b2plyp-d3"", 'basis': ""cc-pv[dt]z"", 'component': ""fctl""}]); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-964872345
https://github.com/psi4/psi4/pull/2132#issuecomment-964872345:322,Energy Efficiency,energy,energy,322,"I am a bit struggling with the `component` keyword, if it is not 'dft'. Does the following work as I think it does?; ```; # only extrapolate PT2 part?; energy(cbs, cbs_metadata=[{'wfn': ""b2plyp-d3"", 'basis': ""cc-pv[dt]z"", 'component': ""dh""}]). # only ""extrapolate"" D3 part? It is doing a 2-step then or taking the highest energy?; energy(cbs, cbs_metadata=[{'wfn': ""b2plyp-d3"", 'basis': ""cc-pv[dt]z"", 'component': ""disp""}]). # Excluding PT2 part from the extrapolation?; energy(cbs, cbs_metadata=[{'wfn': ""b2plyp-d3"", 'basis': ""cc-pv[dt]z"", 'component': ""fctl""}]); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-964872345
https://github.com/psi4/psi4/pull/2132#issuecomment-964872345:331,Energy Efficiency,energy,energy,331,"I am a bit struggling with the `component` keyword, if it is not 'dft'. Does the following work as I think it does?; ```; # only extrapolate PT2 part?; energy(cbs, cbs_metadata=[{'wfn': ""b2plyp-d3"", 'basis': ""cc-pv[dt]z"", 'component': ""dh""}]). # only ""extrapolate"" D3 part? It is doing a 2-step then or taking the highest energy?; energy(cbs, cbs_metadata=[{'wfn': ""b2plyp-d3"", 'basis': ""cc-pv[dt]z"", 'component': ""disp""}]). # Excluding PT2 part from the extrapolation?; energy(cbs, cbs_metadata=[{'wfn': ""b2plyp-d3"", 'basis': ""cc-pv[dt]z"", 'component': ""fctl""}]); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-964872345
https://github.com/psi4/psi4/pull/2132#issuecomment-964872345:471,Energy Efficiency,energy,energy,471,"I am a bit struggling with the `component` keyword, if it is not 'dft'. Does the following work as I think it does?; ```; # only extrapolate PT2 part?; energy(cbs, cbs_metadata=[{'wfn': ""b2plyp-d3"", 'basis': ""cc-pv[dt]z"", 'component': ""dh""}]). # only ""extrapolate"" D3 part? It is doing a 2-step then or taking the highest energy?; energy(cbs, cbs_metadata=[{'wfn': ""b2plyp-d3"", 'basis': ""cc-pv[dt]z"", 'component': ""disp""}]). # Excluding PT2 part from the extrapolation?; energy(cbs, cbs_metadata=[{'wfn': ""b2plyp-d3"", 'basis': ""cc-pv[dt]z"", 'component': ""fctl""}]); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-964872345
https://github.com/psi4/psi4/pull/2132#issuecomment-965333017:309,Energy Efficiency,energy,energy,309,"Ah yes, this is an issue. Neither of the three works as one would expect them to work: the first two don't do anything as the fctl stage is not specified, and the third one does a full extrapolation. I'm not sure what the first two cases should return - neither of those requests anything resembling a ""total energy""; ; - aborting with a warning would be in order, ; - or we can do the same as for correlated methods, where the fctl step is implied as a non-extrapolated one with highest. For the third case, this is clearly a bug which I'll work on fixing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-965333017
https://github.com/psi4/psi4/pull/2132#issuecomment-965333017:322,Safety,abort,aborting,322,"Ah yes, this is an issue. Neither of the three works as one would expect them to work: the first two don't do anything as the fctl stage is not specified, and the third one does a full extrapolation. I'm not sure what the first two cases should return - neither of those requests anything resembling a ""total energy""; ; - aborting with a warning would be in order, ; - or we can do the same as for correlated methods, where the fctl step is implied as a non-extrapolated one with highest. For the third case, this is clearly a bug which I'll work on fixing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-965333017
https://github.com/psi4/psi4/pull/2132#issuecomment-965333017:517,Usability,clear,clearly,517,"Ah yes, this is an issue. Neither of the three works as one would expect them to work: the first two don't do anything as the fctl stage is not specified, and the third one does a full extrapolation. I'm not sure what the first two cases should return - neither of those requests anything resembling a ""total energy""; ; - aborting with a warning would be in order, ; - or we can do the same as for correlated methods, where the fctl step is implied as a non-extrapolated one with highest. For the third case, this is clearly a bug which I'll work on fixing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-965333017
https://github.com/psi4/psi4/pull/2132#issuecomment-965455289:173,Availability,avail,available,173,How would one do a complicated custom extrapolation with DFT? Ie selecting what is happening at what `component` stage.; E.g. `fctl/cc-pv[dt]z` + `dh/aug-cc-pvdz` . Is this available?; I checkout the PR out locally and playing around with it.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-965455289
https://github.com/psi4/psi4/pull/2132#issuecomment-973871657:529,Energy Efficiency,energy,energy,529,"So I was thinking about getting rid of `""component""` too. The difference between something like ""MP2"" and ""B2PLYP"" is that while there's a name for the SCF component of MP2 (it's HF), there's no such thing for the SCF part of B2PLYP. Also, before components were introduced, the keys in the `VARH` dict had to be valid methods, having a check against component gets around this issue. I think a much cleaner interface may be to rework how the extrapolation functions (`corl_xtpl_helgaker_2` etc.) work. Rather than passing in an energy/gradient/Hessian, we could pass in the `wfn` + the variable to extrapolate, and instead of trying to shoehorn the dft extrapolation into the existing interface, it could be neatly contained in a single extrapolation function. The only issue I see with this is that the printing of the CBS stages would have to move from `cbs()` into the extrapolation function itself. This is perhaps better discussed once DDD is in?. ------. I have made changes to the duplication detection, merging the two loops. Instead of a simple counter, it's now an array of job-indices, with the first element being the highest priority (ie the one with the matching wfn). Also, @hokru your ""requested"" syntax now works, see the added test which combines components arbitrarily. `ctest -L cbs` passes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-973871657
https://github.com/psi4/psi4/pull/2132#issuecomment-973871657:408,Integrability,interface,interface,408,"So I was thinking about getting rid of `""component""` too. The difference between something like ""MP2"" and ""B2PLYP"" is that while there's a name for the SCF component of MP2 (it's HF), there's no such thing for the SCF part of B2PLYP. Also, before components were introduced, the keys in the `VARH` dict had to be valid methods, having a check against component gets around this issue. I think a much cleaner interface may be to rework how the extrapolation functions (`corl_xtpl_helgaker_2` etc.) work. Rather than passing in an energy/gradient/Hessian, we could pass in the `wfn` + the variable to extrapolate, and instead of trying to shoehorn the dft extrapolation into the existing interface, it could be neatly contained in a single extrapolation function. The only issue I see with this is that the printing of the CBS stages would have to move from `cbs()` into the extrapolation function itself. This is perhaps better discussed once DDD is in?. ------. I have made changes to the duplication detection, merging the two loops. Instead of a simple counter, it's now an array of job-indices, with the first element being the highest priority (ie the one with the matching wfn). Also, @hokru your ""requested"" syntax now works, see the added test which combines components arbitrarily. `ctest -L cbs` passes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-973871657
https://github.com/psi4/psi4/pull/2132#issuecomment-973871657:686,Integrability,interface,interface,686,"So I was thinking about getting rid of `""component""` too. The difference between something like ""MP2"" and ""B2PLYP"" is that while there's a name for the SCF component of MP2 (it's HF), there's no such thing for the SCF part of B2PLYP. Also, before components were introduced, the keys in the `VARH` dict had to be valid methods, having a check against component gets around this issue. I think a much cleaner interface may be to rework how the extrapolation functions (`corl_xtpl_helgaker_2` etc.) work. Rather than passing in an energy/gradient/Hessian, we could pass in the `wfn` + the variable to extrapolate, and instead of trying to shoehorn the dft extrapolation into the existing interface, it could be neatly contained in a single extrapolation function. The only issue I see with this is that the printing of the CBS stages would have to move from `cbs()` into the extrapolation function itself. This is perhaps better discussed once DDD is in?. ------. I have made changes to the duplication detection, merging the two loops. Instead of a simple counter, it's now an array of job-indices, with the first element being the highest priority (ie the one with the matching wfn). Also, @hokru your ""requested"" syntax now works, see the added test which combines components arbitrarily. `ctest -L cbs` passes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-973871657
https://github.com/psi4/psi4/pull/2132#issuecomment-973871657:587,Modifiability,variab,variable,587,"So I was thinking about getting rid of `""component""` too. The difference between something like ""MP2"" and ""B2PLYP"" is that while there's a name for the SCF component of MP2 (it's HF), there's no such thing for the SCF part of B2PLYP. Also, before components were introduced, the keys in the `VARH` dict had to be valid methods, having a check against component gets around this issue. I think a much cleaner interface may be to rework how the extrapolation functions (`corl_xtpl_helgaker_2` etc.) work. Rather than passing in an energy/gradient/Hessian, we could pass in the `wfn` + the variable to extrapolate, and instead of trying to shoehorn the dft extrapolation into the existing interface, it could be neatly contained in a single extrapolation function. The only issue I see with this is that the printing of the CBS stages would have to move from `cbs()` into the extrapolation function itself. This is perhaps better discussed once DDD is in?. ------. I have made changes to the duplication detection, merging the two loops. Instead of a simple counter, it's now an array of job-indices, with the first element being the highest priority (ie the one with the matching wfn). Also, @hokru your ""requested"" syntax now works, see the added test which combines components arbitrarily. `ctest -L cbs` passes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-973871657
https://github.com/psi4/psi4/pull/2132#issuecomment-973871657:1001,Safety,detect,detection,1001,"So I was thinking about getting rid of `""component""` too. The difference between something like ""MP2"" and ""B2PLYP"" is that while there's a name for the SCF component of MP2 (it's HF), there's no such thing for the SCF part of B2PLYP. Also, before components were introduced, the keys in the `VARH` dict had to be valid methods, having a check against component gets around this issue. I think a much cleaner interface may be to rework how the extrapolation functions (`corl_xtpl_helgaker_2` etc.) work. Rather than passing in an energy/gradient/Hessian, we could pass in the `wfn` + the variable to extrapolate, and instead of trying to shoehorn the dft extrapolation into the existing interface, it could be neatly contained in a single extrapolation function. The only issue I see with this is that the printing of the CBS stages would have to move from `cbs()` into the extrapolation function itself. This is perhaps better discussed once DDD is in?. ------. I have made changes to the duplication detection, merging the two loops. Instead of a simple counter, it's now an array of job-indices, with the first element being the highest priority (ie the one with the matching wfn). Also, @hokru your ""requested"" syntax now works, see the added test which combines components arbitrarily. `ctest -L cbs` passes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-973871657
https://github.com/psi4/psi4/pull/2132#issuecomment-973871657:1246,Testability,test,test,1246,"So I was thinking about getting rid of `""component""` too. The difference between something like ""MP2"" and ""B2PLYP"" is that while there's a name for the SCF component of MP2 (it's HF), there's no such thing for the SCF part of B2PLYP. Also, before components were introduced, the keys in the `VARH` dict had to be valid methods, having a check against component gets around this issue. I think a much cleaner interface may be to rework how the extrapolation functions (`corl_xtpl_helgaker_2` etc.) work. Rather than passing in an energy/gradient/Hessian, we could pass in the `wfn` + the variable to extrapolate, and instead of trying to shoehorn the dft extrapolation into the existing interface, it could be neatly contained in a single extrapolation function. The only issue I see with this is that the printing of the CBS stages would have to move from `cbs()` into the extrapolation function itself. This is perhaps better discussed once DDD is in?. ------. I have made changes to the duplication detection, merging the two loops. Instead of a simple counter, it's now an array of job-indices, with the first element being the highest priority (ie the one with the matching wfn). Also, @hokru your ""requested"" syntax now works, see the added test which combines components arbitrarily. `ctest -L cbs` passes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-973871657
https://github.com/psi4/psi4/pull/2132#issuecomment-973871657:1048,Usability,simpl,simple,1048,"So I was thinking about getting rid of `""component""` too. The difference between something like ""MP2"" and ""B2PLYP"" is that while there's a name for the SCF component of MP2 (it's HF), there's no such thing for the SCF part of B2PLYP. Also, before components were introduced, the keys in the `VARH` dict had to be valid methods, having a check against component gets around this issue. I think a much cleaner interface may be to rework how the extrapolation functions (`corl_xtpl_helgaker_2` etc.) work. Rather than passing in an energy/gradient/Hessian, we could pass in the `wfn` + the variable to extrapolate, and instead of trying to shoehorn the dft extrapolation into the existing interface, it could be neatly contained in a single extrapolation function. The only issue I see with this is that the printing of the CBS stages would have to move from `cbs()` into the extrapolation function itself. This is perhaps better discussed once DDD is in?. ------. I have made changes to the duplication detection, merging the two loops. Instead of a simple counter, it's now an array of job-indices, with the first element being the highest priority (ie the one with the matching wfn). Also, @hokru your ""requested"" syntax now works, see the added test which combines components arbitrarily. `ctest -L cbs` passes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-973871657
https://github.com/psi4/psi4/pull/2135#issuecomment-802760259:201,Deployability,install,install,201,"I just pushed this up so that others can play with it - there has been a lot of interest in getting it implemented. The current system is very janky from a build point of view. I currently just `conda install pugixml -c conda-forge` first, and build LibECPInt as a standalone library. From there, you can hardwire the location to those libraries by something awful like ` cmake .. -DCMAKE_CXX_FLAGS=""-L/Users/simmonettac/programming/libecpint/installdir/lib -lFaddeeva -lecpint /Users/simmonettac/opt/anaconda3/envs/psi4dev/lib/libpugixml.a -I/Users/simmonettac/programming/libecpint/installdir/include -I/Users/simmonettac/opt/anaconda3/envs/psi4dev/include""`. As things stand, the implementation looks very straightforward but the answers don't appear to be correct.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802760259
https://github.com/psi4/psi4/pull/2135#issuecomment-802760259:443,Deployability,install,installdir,443,"I just pushed this up so that others can play with it - there has been a lot of interest in getting it implemented. The current system is very janky from a build point of view. I currently just `conda install pugixml -c conda-forge` first, and build LibECPInt as a standalone library. From there, you can hardwire the location to those libraries by something awful like ` cmake .. -DCMAKE_CXX_FLAGS=""-L/Users/simmonettac/programming/libecpint/installdir/lib -lFaddeeva -lecpint /Users/simmonettac/opt/anaconda3/envs/psi4dev/lib/libpugixml.a -I/Users/simmonettac/programming/libecpint/installdir/include -I/Users/simmonettac/opt/anaconda3/envs/psi4dev/include""`. As things stand, the implementation looks very straightforward but the answers don't appear to be correct.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802760259
https://github.com/psi4/psi4/pull/2135#issuecomment-802760259:584,Deployability,install,installdir,584,"I just pushed this up so that others can play with it - there has been a lot of interest in getting it implemented. The current system is very janky from a build point of view. I currently just `conda install pugixml -c conda-forge` first, and build LibECPInt as a standalone library. From there, you can hardwire the location to those libraries by something awful like ` cmake .. -DCMAKE_CXX_FLAGS=""-L/Users/simmonettac/programming/libecpint/installdir/lib -lFaddeeva -lecpint /Users/simmonettac/opt/anaconda3/envs/psi4dev/lib/libpugixml.a -I/Users/simmonettac/programming/libecpint/installdir/include -I/Users/simmonettac/opt/anaconda3/envs/psi4dev/include""`. As things stand, the implementation looks very straightforward but the answers don't appear to be correct.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802760259
https://github.com/psi4/psi4/pull/2135#issuecomment-802937537:122,Integrability,interface,interface,122,"neat, thanks Andy! I started looking at the build/packaging for libecpint last week, so hopefully I can keep up with your interface progress.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802937537
https://github.com/psi4/psi4/pull/2135#issuecomment-802947421:67,Deployability,integrat,integration,67,"Thanks for helping with that, Lori. I think the CMake and libmints integration tasks are pretty well separated at this point. The stuff I added to external was mostly placeholder so please overwrite at will - you have write access to my branch. It looks like some upstream changes to the CMake config file naming scheme might be needed, so I just decided to build a standalone lib and worry about integration later - therefore you won't be interfering with anything if you feel like changing the CMake stuff.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802947421
https://github.com/psi4/psi4/pull/2135#issuecomment-802947421:397,Deployability,integrat,integration,397,"Thanks for helping with that, Lori. I think the CMake and libmints integration tasks are pretty well separated at this point. The stuff I added to external was mostly placeholder so please overwrite at will - you have write access to my branch. It looks like some upstream changes to the CMake config file naming scheme might be needed, so I just decided to build a standalone lib and worry about integration later - therefore you won't be interfering with anything if you feel like changing the CMake stuff.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802947421
https://github.com/psi4/psi4/pull/2135#issuecomment-802947421:67,Integrability,integrat,integration,67,"Thanks for helping with that, Lori. I think the CMake and libmints integration tasks are pretty well separated at this point. The stuff I added to external was mostly placeholder so please overwrite at will - you have write access to my branch. It looks like some upstream changes to the CMake config file naming scheme might be needed, so I just decided to build a standalone lib and worry about integration later - therefore you won't be interfering with anything if you feel like changing the CMake stuff.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802947421
https://github.com/psi4/psi4/pull/2135#issuecomment-802947421:397,Integrability,integrat,integration,397,"Thanks for helping with that, Lori. I think the CMake and libmints integration tasks are pretty well separated at this point. The stuff I added to external was mostly placeholder so please overwrite at will - you have write access to my branch. It looks like some upstream changes to the CMake config file naming scheme might be needed, so I just decided to build a standalone lib and worry about integration later - therefore you won't be interfering with anything if you feel like changing the CMake stuff.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802947421
https://github.com/psi4/psi4/pull/2135#issuecomment-802947421:294,Modifiability,config,config,294,"Thanks for helping with that, Lori. I think the CMake and libmints integration tasks are pretty well separated at this point. The stuff I added to external was mostly placeholder so please overwrite at will - you have write access to my branch. It looks like some upstream changes to the CMake config file naming scheme might be needed, so I just decided to build a standalone lib and worry about integration later - therefore you won't be interfering with anything if you feel like changing the CMake stuff.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802947421
https://github.com/psi4/psi4/pull/2135#issuecomment-802947421:224,Security,access,access,224,"Thanks for helping with that, Lori. I think the CMake and libmints integration tasks are pretty well separated at this point. The stuff I added to external was mostly placeholder so please overwrite at will - you have write access to my branch. It looks like some upstream changes to the CMake config file naming scheme might be needed, so I just decided to build a standalone lib and worry about integration later - therefore you won't be interfering with anything if you feel like changing the CMake stuff.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802947421
https://github.com/psi4/psi4/pull/2135#issuecomment-802951976:84,Deployability,integrat,integration,84,"The libecpint results have been very thoroughly tested against near-exact numerical integration routines, so I would be surprised if they are wrong. I will have to take a closer look at what you've done so far to know whether the problem is bugs in the original code or a change in the way certain things are handled. I can clarify though that libecpint does _no_ normalization of the basis functions. I do know the reason there are now some non-zero quantities though - I was screening them assuming everything would eventually be transformed to spherical gaussians! So it won't have affected results as long as cartesians weren't being used. . @PeterKraus has also noted a problem with linking against pugixml, and I'm not sure what the problem is, but hopefully we'll work out how to fix it soon. . That said, it is worth noting that I have almost finished wrapping a python package of libecpint, so that might prove an easier root to install the library?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802951976
https://github.com/psi4/psi4/pull/2135#issuecomment-802951976:938,Deployability,install,install,938,"The libecpint results have been very thoroughly tested against near-exact numerical integration routines, so I would be surprised if they are wrong. I will have to take a closer look at what you've done so far to know whether the problem is bugs in the original code or a change in the way certain things are handled. I can clarify though that libecpint does _no_ normalization of the basis functions. I do know the reason there are now some non-zero quantities though - I was screening them assuming everything would eventually be transformed to spherical gaussians! So it won't have affected results as long as cartesians weren't being used. . @PeterKraus has also noted a problem with linking against pugixml, and I'm not sure what the problem is, but hopefully we'll work out how to fix it soon. . That said, it is worth noting that I have almost finished wrapping a python package of libecpint, so that might prove an easier root to install the library?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802951976
https://github.com/psi4/psi4/pull/2135#issuecomment-802951976:84,Integrability,integrat,integration,84,"The libecpint results have been very thoroughly tested against near-exact numerical integration routines, so I would be surprised if they are wrong. I will have to take a closer look at what you've done so far to know whether the problem is bugs in the original code or a change in the way certain things are handled. I can clarify though that libecpint does _no_ normalization of the basis functions. I do know the reason there are now some non-zero quantities though - I was screening them assuming everything would eventually be transformed to spherical gaussians! So it won't have affected results as long as cartesians weren't being used. . @PeterKraus has also noted a problem with linking against pugixml, and I'm not sure what the problem is, but hopefully we'll work out how to fix it soon. . That said, it is worth noting that I have almost finished wrapping a python package of libecpint, so that might prove an easier root to install the library?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802951976
https://github.com/psi4/psi4/pull/2135#issuecomment-802951976:96,Integrability,rout,routines,96,"The libecpint results have been very thoroughly tested against near-exact numerical integration routines, so I would be surprised if they are wrong. I will have to take a closer look at what you've done so far to know whether the problem is bugs in the original code or a change in the way certain things are handled. I can clarify though that libecpint does _no_ normalization of the basis functions. I do know the reason there are now some non-zero quantities though - I was screening them assuming everything would eventually be transformed to spherical gaussians! So it won't have affected results as long as cartesians weren't being used. . @PeterKraus has also noted a problem with linking against pugixml, and I'm not sure what the problem is, but hopefully we'll work out how to fix it soon. . That said, it is worth noting that I have almost finished wrapping a python package of libecpint, so that might prove an easier root to install the library?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802951976
https://github.com/psi4/psi4/pull/2135#issuecomment-802951976:860,Integrability,wrap,wrapping,860,"The libecpint results have been very thoroughly tested against near-exact numerical integration routines, so I would be surprised if they are wrong. I will have to take a closer look at what you've done so far to know whether the problem is bugs in the original code or a change in the way certain things are handled. I can clarify though that libecpint does _no_ normalization of the basis functions. I do know the reason there are now some non-zero quantities though - I was screening them assuming everything would eventually be transformed to spherical gaussians! So it won't have affected results as long as cartesians weren't being used. . @PeterKraus has also noted a problem with linking against pugixml, and I'm not sure what the problem is, but hopefully we'll work out how to fix it soon. . That said, it is worth noting that I have almost finished wrapping a python package of libecpint, so that might prove an easier root to install the library?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802951976
https://github.com/psi4/psi4/pull/2135#issuecomment-802951976:48,Testability,test,tested,48,"The libecpint results have been very thoroughly tested against near-exact numerical integration routines, so I would be surprised if they are wrong. I will have to take a closer look at what you've done so far to know whether the problem is bugs in the original code or a change in the way certain things are handled. I can clarify though that libecpint does _no_ normalization of the basis functions. I do know the reason there are now some non-zero quantities though - I was screening them assuming everything would eventually be transformed to spherical gaussians! So it won't have affected results as long as cartesians weren't being used. . @PeterKraus has also noted a problem with linking against pugixml, and I'm not sure what the problem is, but hopefully we'll work out how to fix it soon. . That said, it is worth noting that I have almost finished wrapping a python package of libecpint, so that might prove an easier root to install the library?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802951976
https://github.com/psi4/psi4/pull/2135#issuecomment-802969261:224,Usability,simpl,simple,224,"Thanks for the rapid response, @robashaw. I have no doubts about the correctness of the code - it's something wrong with my implementation for sure. The biggest mystery was really the nonzero entries, so I'm glad that has a simple explanation. I'll double check the normalization.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802969261
https://github.com/psi4/psi4/pull/2135#issuecomment-802994469:626,Availability,toler,tolerance,626,"If you need some help working out what's going wrong, please send over the test output you're getting. I've just looked through your changes and I'm not seeing anything that looks out of place. . I remember there being one bug that I fixed in libecpint that will have been in the Psi4 code, but it will have only been noticeable with a specific class of ECPs (those that have an n=1 term (or n=-1 depending on your convention). The line is https://github.com/psi4/psi4/blob/d16d02e69238f1b0d90a2f1283f38e818873e748/psi4/src/psi4/libmints/ecpint.cc#L473 and should be changed to . ```tooSmall = tooSmall || ( intValues(l, i) < tolerance );```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802994469
https://github.com/psi4/psi4/pull/2135#issuecomment-802994469:397,Integrability,depend,depending,397,"If you need some help working out what's going wrong, please send over the test output you're getting. I've just looked through your changes and I'm not seeing anything that looks out of place. . I remember there being one bug that I fixed in libecpint that will have been in the Psi4 code, but it will have only been noticeable with a specific class of ECPs (those that have an n=1 term (or n=-1 depending on your convention). The line is https://github.com/psi4/psi4/blob/d16d02e69238f1b0d90a2f1283f38e818873e748/psi4/src/psi4/libmints/ecpint.cc#L473 and should be changed to . ```tooSmall = tooSmall || ( intValues(l, i) < tolerance );```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802994469
https://github.com/psi4/psi4/pull/2135#issuecomment-802994469:75,Testability,test,test,75,"If you need some help working out what's going wrong, please send over the test output you're getting. I've just looked through your changes and I'm not seeing anything that looks out of place. . I remember there being one bug that I fixed in libecpint that will have been in the Psi4 code, but it will have only been noticeable with a specific class of ECPs (those that have an n=1 term (or n=-1 depending on your convention). The line is https://github.com/psi4/psi4/blob/d16d02e69238f1b0d90a2f1283f38e818873e748/psi4/src/psi4/libmints/ecpint.cc#L473 and should be changed to . ```tooSmall = tooSmall || ( intValues(l, i) < tolerance );```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802994469
https://github.com/psi4/psi4/pull/2135#issuecomment-803005054:832,Testability,test,test,832,"I'm surprised you're still awake at this time! I applied the fix that you suggested to the old code, but nothing changed. I have attached an [output.txt](https://github.com/psi4/psi4/files/6173157/output.txt) that matches the debug printing in the latest commit (sorry for the mess). The overall results are in the lines starting with ""native"" and ""libecp"" in the first column, with some intermediate quantities in the indented lines above those. I'm still adding more debug info to get to the source of the problem. The structure of the nonzero values looks good, so I think it's just normalization or something similar at this point. No obligation to go through this mess of course, but any insights you might have are very greatly appreciated :) The old code values are the numbers being dumped into the buffer right now, so the test passes. This is just the `scf-ecp` test case for now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-803005054
https://github.com/psi4/psi4/pull/2135#issuecomment-803005054:872,Testability,test,test,872,"I'm surprised you're still awake at this time! I applied the fix that you suggested to the old code, but nothing changed. I have attached an [output.txt](https://github.com/psi4/psi4/files/6173157/output.txt) that matches the debug printing in the latest commit (sorry for the mess). The overall results are in the lines starting with ""native"" and ""libecp"" in the first column, with some intermediate quantities in the indented lines above those. I'm still adding more debug info to get to the source of the problem. The structure of the nonzero values looks good, so I think it's just normalization or something similar at this point. No obligation to go through this mess of course, but any insights you might have are very greatly appreciated :) The old code values are the numbers being dumped into the buffer right now, so the test passes. This is just the `scf-ecp` test case for now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-803005054
https://github.com/psi4/psi4/pull/2135#issuecomment-803052000:109,Integrability,contract,contraction,109,"This is the output I get from running the same system directly through libecpint's main API (with normalised contraction coefficients in the orbital basis). All the results seem to agree with the output you have labelled as `native'. This suggests to me that something is going wrong when the libecpint containers are being created, but I'm struggling to see what exactly it is. It might be worth comparing what your ECP object for argon looks like with one created by libecpint by loading from file. [output.txt](https://github.com/psi4/psi4/files/6173525/output.txt)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-803052000
https://github.com/psi4/psi4/pull/2135#issuecomment-803052000:482,Performance,load,loading,482,"This is the output I get from running the same system directly through libecpint's main API (with normalised contraction coefficients in the orbital basis). All the results seem to agree with the output you have labelled as `native'. This suggests to me that something is going wrong when the libecpint containers are being created, but I'm struggling to see what exactly it is. It might be worth comparing what your ECP object for argon looks like with one created by libecpint by loading from file. [output.txt](https://github.com/psi4/psi4/files/6173525/output.txt)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-803052000
https://github.com/psi4/psi4/pull/2135#issuecomment-803213417:173,Testability,test,test,173,"Ok, so progress! It appears that at some point in the past I mixed up the angular momentum and `n` in the data structures - at least it seems that way when I compare to the test cases. If I switch them, I can get exact agreement between the old and new codes. The pesky nonzero values where the old code gave zeros seem to be problematic, regardless of pure/Cartesian basis.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-803213417
https://github.com/psi4/psi4/pull/2135#issuecomment-803690980:233,Energy Efficiency,energy,energy,233,"I've finally managed to get your branch to compile on my machine (Libint was throwing a fit like it always does whenever I want to do anything), so hopefully I can get to the bottom of the non-zero values soon. I get the correct SCF energy with libecpint through my (non-Psi4) code, so it has to be a wrapping issue. Edit: see below - it was indeed a wrapping issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-803690980
https://github.com/psi4/psi4/pull/2135#issuecomment-803690980:301,Integrability,wrap,wrapping,301,"I've finally managed to get your branch to compile on my machine (Libint was throwing a fit like it always does whenever I want to do anything), so hopefully I can get to the bottom of the non-zero values soon. I get the correct SCF energy with libecpint through my (non-Psi4) code, so it has to be a wrapping issue. Edit: see below - it was indeed a wrapping issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-803690980
https://github.com/psi4/psi4/pull/2135#issuecomment-803690980:351,Integrability,wrap,wrapping,351,"I've finally managed to get your branch to compile on my machine (Libint was throwing a fit like it always does whenever I want to do anything), so hopefully I can get to the bottom of the non-zero values soon. I get the correct SCF energy with libecpint through my (non-Psi4) code, so it has to be a wrapping issue. Edit: see below - it was indeed a wrapping issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-803690980
https://github.com/psi4/psi4/pull/2135#issuecomment-803769076:606,Usability,clear,clearly,606,"There are two problems now that I can see your code more closely. The minor one is that when you switched ```n``` and ```l```, you forgot to move the +2. But, you don't actually need that +2 anyway (libecpint and Psi4 use the same convention for values of ```n``` nowadays). Offending line is here:. https://github.com/andysim/psi4/blob/a6bc397b3ce31130bbef862fc993d11bf8c23afb/psi4/src/psi4/libmints/ecpint.cc#L678. The much bigger problem is that all the things you're passing to libecpint are getting handled as Type1 ECP integrals when they should be Type2. This is because the internal psi4 format is clearly to have the ECPs as separate angular momentum shells, but libecpint assumes that all the shells are in a single ECP object and the highest angular momentum one (as per convention) is the Type1 integral. . There are two possible solutions: make the ECP objects in the way that libecpint is expecting them (I've hacked this in to your code by checking whether the center changes), or I can add a Type1/Type2 flag to the libecpint::ECP object. I'd have to think about whether that would affect anything, but I don't think it would, and might be the more generally useful answer. . Anyway the good news is once I fixed these two things, everything agrees with the `native' results and those I get from the libecpint main API :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-803769076
https://github.com/psi4/psi4/pull/2135#issuecomment-803983014:135,Usability,learn,learning,135,"Thanks so much for taking the time to look at this, @robashaw, and for the Libint2 struggles - it's quite a beast that we're only just learning to tame on this end. We have conda packages for some platforms and I think the plan it so have them for all platforms in the long run, but thanks for persevering and getting it compiled locally. The +2 that's present in my version is the result of my desperate hack to try and get things to match, so I'll make sure I change that. I wasn't aware of the the way things are grouped in the new code, so I'll make that change also. I think that using the centre to identify common terms like a very good solution, and you don't need to worry about writing any new type1/type2 classes as far as I'm concerned. Thanks again for your time - I would surely be floundering for the next few weeks without your help.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-803983014
https://github.com/psi4/psi4/pull/2135#issuecomment-804473180:359,Integrability,depend,dependency,359,"@robashaw One thought I had while looking at this was: How hard would it be to put pugixml, the associated libecpint internal database reads, and the ecp files themselves behind a CMAKE keyword within libecpint? That way we might be able to keep the basis sets in one place instead of having a duplicated copy within libecpint, and also can ditch the pugixml dependency. I'm not sure this is a helpful functionality for other QM codes, or how much work it'd involve.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-804473180
https://github.com/psi4/psi4/pull/2135#issuecomment-804509150:473,Integrability,depend,dependency,473,"That's a good idea, Peter. As far as I know, the XML stuff is only for the high level API, which we are not using. We still parse the basis sets with the same parser and use the same internal data structures - there's just a simple conversion to the library's data structures and then they are handed off. So your concern about duplicate basis set libraries is not a concern, but it would be nice to be able to disable the high level API at compile time, to remove the XML dependency. It's not a huge problem if not - the XML lib is easily obtained from conda forge.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-804509150
https://github.com/psi4/psi4/pull/2135#issuecomment-804509150:225,Usability,simpl,simple,225,"That's a good idea, Peter. As far as I know, the XML stuff is only for the high level API, which we are not using. We still parse the basis sets with the same parser and use the same internal data structures - there's just a simple conversion to the library's data structures and then they are handed off. So your concern about duplicate basis set libraries is not a concern, but it would be nice to be able to disable the high level API at compile time, to remove the XML dependency. It's not a huge problem if not - the XML lib is easily obtained from conda forge.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-804509150
https://github.com/psi4/psi4/pull/2135#issuecomment-866421643:125,Performance,optimiz,optimizations,125,"This would be **really** nice to get in Psi4. I don't think there is any free quantum chemistry program that can do geometry optimizations with ECPs. I think in principle PySCF can compute gradients, but it doesn't have a geometry optimizer; I just tried out pyberny and geometric and neither worked with modern Python :hankey:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-866421643
https://github.com/psi4/psi4/pull/2135#issuecomment-866421643:231,Performance,optimiz,optimizer,231,"This would be **really** nice to get in Psi4. I don't think there is any free quantum chemistry program that can do geometry optimizations with ECPs. I think in principle PySCF can compute gradients, but it doesn't have a geometry optimizer; I just tried out pyberny and geometric and neither worked with modern Python :hankey:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-866421643
https://github.com/psi4/psi4/pull/2139#issuecomment-804315387:31,Testability,test,tests,31,"Could you quickly grep for any tests that specify the `ints_tolerance` keyword, and check to see whether they still need it, please?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2139#issuecomment-804315387
https://github.com/psi4/psi4/pull/2139#issuecomment-804319190:133,Safety,avoid,avoid,133,"Thank you, Zach. I'm sorry you hit the results of my loose precision choice, but thanks for investigating. I'll run a conda-build to avoid surprises.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2139#issuecomment-804319190
https://github.com/psi4/psi4/pull/2139#issuecomment-804380750:108,Deployability,update,updated,108,"No worries, this was easy compared to the actual libint2 interface that you all had to write and test. I've updated the post to clarify that this PR closes #2114. I found and updated only one test with an unnecessary `ints_tolerance 0`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2139#issuecomment-804380750
https://github.com/psi4/psi4/pull/2139#issuecomment-804380750:175,Deployability,update,updated,175,"No worries, this was easy compared to the actual libint2 interface that you all had to write and test. I've updated the post to clarify that this PR closes #2114. I found and updated only one test with an unnecessary `ints_tolerance 0`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2139#issuecomment-804380750
https://github.com/psi4/psi4/pull/2139#issuecomment-804380750:57,Integrability,interface,interface,57,"No worries, this was easy compared to the actual libint2 interface that you all had to write and test. I've updated the post to clarify that this PR closes #2114. I found and updated only one test with an unnecessary `ints_tolerance 0`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2139#issuecomment-804380750
https://github.com/psi4/psi4/pull/2139#issuecomment-804380750:97,Testability,test,test,97,"No worries, this was easy compared to the actual libint2 interface that you all had to write and test. I've updated the post to clarify that this PR closes #2114. I found and updated only one test with an unnecessary `ints_tolerance 0`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2139#issuecomment-804380750
https://github.com/psi4/psi4/pull/2139#issuecomment-804380750:192,Testability,test,test,192,"No worries, this was easy compared to the actual libint2 interface that you all had to write and test. I've updated the post to clarify that this PR closes #2114. I found and updated only one test with an unnecessary `ints_tolerance 0`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2139#issuecomment-804380750
https://github.com/psi4/psi4/pull/2139#issuecomment-804512308:60,Testability,test,test,60,"I don't think `ints_tolerance` is set in the `ao-casscf-sp` test. grep might've picked up the reference output file, which apparently was generated using tighter settings than the actual test.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2139#issuecomment-804512308
https://github.com/psi4/psi4/pull/2139#issuecomment-804512308:187,Testability,test,test,187,"I don't think `ints_tolerance` is set in the `ao-casscf-sp` test. grep might've picked up the reference output file, which apparently was generated using tighter settings than the actual test.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2139#issuecomment-804512308
https://github.com/psi4/psi4/pull/2141#issuecomment-806519450:310,Testability,test,test,310,"Why is `tdscf-5` in smoketests? . Also, the SCF alone of `tdscf-5` takes 23 seconds to run on my laptop. Since a molecule with 10 heavy atoms (!) is not essential for this bug, unless there's _something else you're trying to test_, I'm going to request you shrink the molecule in the interests of speeding the test along.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2141#issuecomment-806519450
https://github.com/psi4/psi4/pull/2141#issuecomment-806564452:52,Availability,down,down,52,"Yes, good point @JonathonMisiewicz. I can shrink it down to water with a larger basis set. This is required to trigger selection of the disk-based algorithm [here](https://github.com/psi4/psi4/blob/3d2403c43e2cf8df699ff6e382a4ae2e3a0a5faa/psi4/src/psi4/libfock/DiskDFJK.cc#L287). Test takes ~8s now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2141#issuecomment-806564452
https://github.com/psi4/psi4/pull/2141#issuecomment-806564452:280,Testability,Test,Test,280,"Yes, good point @JonathonMisiewicz. I can shrink it down to water with a larger basis set. This is required to trigger selection of the disk-based algorithm [here](https://github.com/psi4/psi4/blob/3d2403c43e2cf8df699ff6e382a4ae2e3a0a5faa/psi4/src/psi4/libfock/DiskDFJK.cc#L287). Test takes ~8s now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2141#issuecomment-806564452
https://github.com/psi4/psi4/pull/2142#issuecomment-808092025:337,Modifiability,variab,variable,337,This pull request **fixes 5 alerts** when merging 79d458251b577a631127908d61425763699a9a2e into 59d998d3009553deb6db1981258cb6cba738ef03 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-b3848b1769ade689d2094b8b4262e0caeb908599). **fixed alerts:**. * 2 for &#39;import \*&#39; may pollute namespace; * 1 for Unused local variable; * 1 for Module\-level cyclic import; * 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2142#issuecomment-808092025
https://github.com/psi4/psi4/pull/2142#issuecomment-808696898:337,Modifiability,variab,variable,337,This pull request **fixes 5 alerts** when merging 1e663e4405d0ee6e817ea04c19e27ebdefe5f06f into 86700a90f5be3ec972390e32b2e94eeae595745e - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-bd0002e1530fab34586f933b3c3700ccd8646470). **fixed alerts:**. * 2 for &#39;import \*&#39; may pollute namespace; * 1 for Unused local variable; * 1 for Module\-level cyclic import; * 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2142#issuecomment-808696898
https://github.com/psi4/psi4/pull/2142#issuecomment-833310946:337,Modifiability,variab,variable,337,This pull request **fixes 5 alerts** when merging 051af5c7b7a04c85e918d1bab780e0e1be8b8427 into 966d1bd4ed698b2a92f19244a9dc3cf0589ffaa4 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-f96fa45ea0b772b7a326b82d0e03a5e54e35892a). **fixed alerts:**. * 2 for &#39;import \*&#39; may pollute namespace; * 1 for Unused local variable; * 1 for Module\-level cyclic import; * 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2142#issuecomment-833310946
https://github.com/psi4/psi4/pull/2142#issuecomment-835513611:337,Modifiability,variab,variable,337,This pull request **fixes 5 alerts** when merging f1483ae96341a60d4427b16c6642b889aa841b8c into b4a272f74b73df8cf0edc4096081a250c495d55e - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-887d4808c201ef9676ddb743953f6cb317b6f602). **fixed alerts:**. * 2 for &#39;import \*&#39; may pollute namespace; * 1 for Unused local variable; * 1 for Module\-level cyclic import; * 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2142#issuecomment-835513611
https://github.com/psi4/psi4/pull/2142#issuecomment-839930313:337,Modifiability,variab,variable,337,This pull request **fixes 5 alerts** when merging 97583a2fe157ac72e92ca1da2516987a835dc80d into d9d8477034143442930324f572b94359866facfe - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-863fee0b4deeeadc1f46d7853d0b5f1c927a10f7). **fixed alerts:**. * 2 for &#39;import \*&#39; may pollute namespace; * 1 for Unused local variable; * 1 for Module\-level cyclic import; * 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2142#issuecomment-839930313
https://github.com/psi4/psi4/pull/2142#issuecomment-896096206:68,Deployability,update,update,68,"Also, please `grep` for comments related to `dftd3` in the code and update them as needed. `proc.py::scf_helper` certainly needs to be updated.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2142#issuecomment-896096206
https://github.com/psi4/psi4/pull/2142#issuecomment-896096206:135,Deployability,update,updated,135,"Also, please `grep` for comments related to `dftd3` in the code and update them as needed. `proc.py::scf_helper` certainly needs to be updated.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2142#issuecomment-896096206
https://github.com/psi4/psi4/pull/2146#issuecomment-814506587:94,Deployability,install,installed,94,"@loriab; Based upon a build of the documentation target (`make sphinxman` locally with Sphinx installed at CMake configuration time):; * an automated commit has been issued to your PR branch; * this updates `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin <prbranch>` to synchronize your local branch with GH; * an automated pull request has been issued to the docs website repo previewing `<objdir>/doc/sphinxman/html`; * preview docs changes at https://github.com/psi4/psi4docs/pull/1; * further action on auto pull request not required",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-814506587
https://github.com/psi4/psi4/pull/2146#issuecomment-814506587:113,Deployability,configurat,configuration,113,"@loriab; Based upon a build of the documentation target (`make sphinxman` locally with Sphinx installed at CMake configuration time):; * an automated commit has been issued to your PR branch; * this updates `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin <prbranch>` to synchronize your local branch with GH; * an automated pull request has been issued to the docs website repo previewing `<objdir>/doc/sphinxman/html`; * preview docs changes at https://github.com/psi4/psi4docs/pull/1; * further action on auto pull request not required",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-814506587
https://github.com/psi4/psi4/pull/2146#issuecomment-814506587:199,Deployability,update,updates,199,"@loriab; Based upon a build of the documentation target (`make sphinxman` locally with Sphinx installed at CMake configuration time):; * an automated commit has been issued to your PR branch; * this updates `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin <prbranch>` to synchronize your local branch with GH; * an automated pull request has been issued to the docs website repo previewing `<objdir>/doc/sphinxman/html`; * preview docs changes at https://github.com/psi4/psi4docs/pull/1; * further action on auto pull request not required",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-814506587
https://github.com/psi4/psi4/pull/2146#issuecomment-814506587:328,Deployability,update,update,328,"@loriab; Based upon a build of the documentation target (`make sphinxman` locally with Sphinx installed at CMake configuration time):; * an automated commit has been issued to your PR branch; * this updates `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin <prbranch>` to synchronize your local branch with GH; * an automated pull request has been issued to the docs website repo previewing `<objdir>/doc/sphinxman/html`; * preview docs changes at https://github.com/psi4/psi4docs/pull/1; * further action on auto pull request not required",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-814506587
https://github.com/psi4/psi4/pull/2146#issuecomment-814506587:396,Integrability,synchroniz,synchronize,396,"@loriab; Based upon a build of the documentation target (`make sphinxman` locally with Sphinx installed at CMake configuration time):; * an automated commit has been issued to your PR branch; * this updates `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin <prbranch>` to synchronize your local branch with GH; * an automated pull request has been issued to the docs website repo previewing `<objdir>/doc/sphinxman/html`; * preview docs changes at https://github.com/psi4/psi4docs/pull/1; * further action on auto pull request not required",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-814506587
https://github.com/psi4/psi4/pull/2146#issuecomment-814506587:113,Modifiability,config,configuration,113,"@loriab; Based upon a build of the documentation target (`make sphinxman` locally with Sphinx installed at CMake configuration time):; * an automated commit has been issued to your PR branch; * this updates `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin <prbranch>` to synchronize your local branch with GH; * an automated pull request has been issued to the docs website repo previewing `<objdir>/doc/sphinxman/html`; * preview docs changes at https://github.com/psi4/psi4docs/pull/1; * further action on auto pull request not required",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-814506587
https://github.com/psi4/psi4/pull/2146#issuecomment-814506587:318,Safety,avoid,avoid,318,"@loriab; Based upon a build of the documentation target (`make sphinxman` locally with Sphinx installed at CMake configuration time):; * an automated commit has been issued to your PR branch; * this updates `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin <prbranch>` to synchronize your local branch with GH; * an automated pull request has been issued to the docs website repo previewing `<objdir>/doc/sphinxman/html`; * preview docs changes at https://github.com/psi4/psi4docs/pull/1; * further action on auto pull request not required",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-814506587
https://github.com/psi4/psi4/pull/2146#issuecomment-814506587:228,Testability,test,tests,228,"@loriab; Based upon a build of the documentation target (`make sphinxman` locally with Sphinx installed at CMake configuration time):; * an automated commit has been issued to your PR branch; * this updates `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin <prbranch>` to synchronize your local branch with GH; * an automated pull request has been issued to the docs website repo previewing `<objdir>/doc/sphinxman/html`; * preview docs changes at https://github.com/psi4/psi4docs/pull/1; * further action on auto pull request not required",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-814506587
https://github.com/psi4/psi4/pull/2146#issuecomment-816151920:498,Availability,down,downloading,498,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816151920
https://github.com/psi4/psi4/pull/2146#issuecomment-816151920:95,Deployability,install,installed,95,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816151920
https://github.com/psi4/psi4/pull/2146#issuecomment-816151920:114,Deployability,configurat,configuration,114,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816151920
https://github.com/psi4/psi4/pull/2146#issuecomment-816151920:352,Deployability,deploy,deploy-preview,352,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816151920
https://github.com/psi4/psi4/pull/2146#issuecomment-816151920:114,Modifiability,config,configuration,114,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816151920
https://github.com/psi4/psi4/pull/2146#issuecomment-816777276:498,Availability,down,downloading,498,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816777276
https://github.com/psi4/psi4/pull/2146#issuecomment-816777276:95,Deployability,install,installed,95,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816777276
https://github.com/psi4/psi4/pull/2146#issuecomment-816777276:114,Deployability,configurat,configuration,114,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816777276
https://github.com/psi4/psi4/pull/2146#issuecomment-816777276:352,Deployability,deploy,deploy-preview,352,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816777276
https://github.com/psi4/psi4/pull/2146#issuecomment-816777276:114,Modifiability,config,configuration,114,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816777276
https://github.com/psi4/psi4/pull/2146#issuecomment-816883319:817,Availability,down,downloading,817,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated commit 5aa048b39 has been issued to your PR branch; * this updates 4 files in `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin ghadocs3` to synchronize your local branch with GH. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816883319
https://github.com/psi4/psi4/pull/2146#issuecomment-816883319:95,Deployability,install,installed,95,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated commit 5aa048b39 has been issued to your PR branch; * this updates 4 files in `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin ghadocs3` to synchronize your local branch with GH. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816883319
https://github.com/psi4/psi4/pull/2146#issuecomment-816883319:114,Deployability,configurat,configuration,114,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated commit 5aa048b39 has been issued to your PR branch; * this updates 4 files in `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin ghadocs3` to synchronize your local branch with GH. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816883319
https://github.com/psi4/psi4/pull/2146#issuecomment-816883319:210,Deployability,update,updates,210,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated commit 5aa048b39 has been issued to your PR branch; * this updates 4 files in `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin ghadocs3` to synchronize your local branch with GH. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816883319
https://github.com/psi4/psi4/pull/2146#issuecomment-816883319:350,Deployability,update,update,350,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated commit 5aa048b39 has been issued to your PR branch; * this updates 4 files in `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin ghadocs3` to synchronize your local branch with GH. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816883319
https://github.com/psi4/psi4/pull/2146#issuecomment-816883319:671,Deployability,deploy,deploy-preview,671,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated commit 5aa048b39 has been issued to your PR branch; * this updates 4 files in `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin ghadocs3` to synchronize your local branch with GH. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816883319
https://github.com/psi4/psi4/pull/2146#issuecomment-816883319:416,Integrability,synchroniz,synchronize,416,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated commit 5aa048b39 has been issued to your PR branch; * this updates 4 files in `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin ghadocs3` to synchronize your local branch with GH. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816883319
https://github.com/psi4/psi4/pull/2146#issuecomment-816883319:114,Modifiability,config,configuration,114,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated commit 5aa048b39 has been issued to your PR branch; * this updates 4 files in `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin ghadocs3` to synchronize your local branch with GH. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816883319
https://github.com/psi4/psi4/pull/2146#issuecomment-816883319:340,Safety,avoid,avoid,340,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated commit 5aa048b39 has been issued to your PR branch; * this updates 4 files in `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin ghadocs3` to synchronize your local branch with GH. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816883319
https://github.com/psi4/psi4/pull/2146#issuecomment-816883319:250,Testability,test,tests,250,"@loriab; Based upon a build of the documentation target (locally, `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated commit 5aa048b39 has been issued to your PR branch; * this updates 4 files in `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin ghadocs3` to synchronize your local branch with GH. * an automated pull request https://github.com/psi4/psi4docs/pull/1 has been issued to the docs website repo; * this previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes at checks, deploy-preview. Edit your PR branch here as needed; no further action on auto PR required.; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2146#issuecomment-816883319
https://github.com/psi4/psi4/issues/2147#issuecomment-813663636:940,Availability,avail,available,940,"Any chance it could be a disk space issue? I created a minimal env with cmake, eigen, mpfr, python, GCC, and it unpacked fine. Gnu compilers, but surely that wouldn't matter at the unpacking stage. ```; -- Found LAPACK MKL: /theoryfs2/common/software/intel2019/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64/libmkl_rt.so;...; -- Suitable pybind11 could not be located, Building pybind11 instead.; -- Suitable gau2grid could not be located, Building gau2grid instead.; -- Could NOT find Libint2 (missing: Libint2_DIR); -- Suitable Libint2 could not be located, Building Libint2 5-4-3-6-5-4 instead.; -- Suitable qcelemental could not be located, Building qcelemental instead.; -- Suitable qcengine could not be located, Building qcengine instead.; -- Suitable Libxc could not be located, Building Libxc instead.; -- Suitable BrianQC could not be located, please contact info@brianqc.com to obtain BrianQC; -- Documentation targets available: doxyman (html); -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme sphinx-automodapi graphviz python-graphviz -c conda-forge -c psi4); -- Adding test cases: Psi4; -- Running some tests requires pytest. Please install it manually (try: /home/psilocaluser/toolchainconda/envs/minbld/bin/python3.6 -m pip install pytest); -- Configuring done; -- Generating done; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2147#issuecomment-813663636
https://github.com/psi4/psi4/issues/2147#issuecomment-813663636:1099,Deployability,install,install,1099,"Any chance it could be a disk space issue? I created a minimal env with cmake, eigen, mpfr, python, GCC, and it unpacked fine. Gnu compilers, but surely that wouldn't matter at the unpacking stage. ```; -- Found LAPACK MKL: /theoryfs2/common/software/intel2019/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64/libmkl_rt.so;...; -- Suitable pybind11 could not be located, Building pybind11 instead.; -- Suitable gau2grid could not be located, Building gau2grid instead.; -- Could NOT find Libint2 (missing: Libint2_DIR); -- Suitable Libint2 could not be located, Building Libint2 5-4-3-6-5-4 instead.; -- Suitable qcelemental could not be located, Building qcelemental instead.; -- Suitable qcengine could not be located, Building qcengine instead.; -- Suitable Libxc could not be located, Building Libxc instead.; -- Suitable BrianQC could not be located, please contact info@brianqc.com to obtain BrianQC; -- Documentation targets available: doxyman (html); -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme sphinx-automodapi graphviz python-graphviz -c conda-forge -c psi4); -- Adding test cases: Psi4; -- Running some tests requires pytest. Please install it manually (try: /home/psilocaluser/toolchainconda/envs/minbld/bin/python3.6 -m pip install pytest); -- Configuring done; -- Generating done; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2147#issuecomment-813663636
https://github.com/psi4/psi4/issues/2147#issuecomment-813663636:1280,Deployability,install,install,1280,"Any chance it could be a disk space issue? I created a minimal env with cmake, eigen, mpfr, python, GCC, and it unpacked fine. Gnu compilers, but surely that wouldn't matter at the unpacking stage. ```; -- Found LAPACK MKL: /theoryfs2/common/software/intel2019/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64/libmkl_rt.so;...; -- Suitable pybind11 could not be located, Building pybind11 instead.; -- Suitable gau2grid could not be located, Building gau2grid instead.; -- Could NOT find Libint2 (missing: Libint2_DIR); -- Suitable Libint2 could not be located, Building Libint2 5-4-3-6-5-4 instead.; -- Suitable qcelemental could not be located, Building qcelemental instead.; -- Suitable qcengine could not be located, Building qcengine instead.; -- Suitable Libxc could not be located, Building Libxc instead.; -- Suitable BrianQC could not be located, please contact info@brianqc.com to obtain BrianQC; -- Documentation targets available: doxyman (html); -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme sphinx-automodapi graphviz python-graphviz -c conda-forge -c psi4); -- Adding test cases: Psi4; -- Running some tests requires pytest. Please install it manually (try: /home/psilocaluser/toolchainconda/envs/minbld/bin/python3.6 -m pip install pytest); -- Configuring done; -- Generating done; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2147#issuecomment-813663636
https://github.com/psi4/psi4/issues/2147#issuecomment-813663636:1373,Deployability,install,install,1373,"Any chance it could be a disk space issue? I created a minimal env with cmake, eigen, mpfr, python, GCC, and it unpacked fine. Gnu compilers, but surely that wouldn't matter at the unpacking stage. ```; -- Found LAPACK MKL: /theoryfs2/common/software/intel2019/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64/libmkl_rt.so;...; -- Suitable pybind11 could not be located, Building pybind11 instead.; -- Suitable gau2grid could not be located, Building gau2grid instead.; -- Could NOT find Libint2 (missing: Libint2_DIR); -- Suitable Libint2 could not be located, Building Libint2 5-4-3-6-5-4 instead.; -- Suitable qcelemental could not be located, Building qcelemental instead.; -- Suitable qcengine could not be located, Building qcengine instead.; -- Suitable Libxc could not be located, Building Libxc instead.; -- Suitable BrianQC could not be located, please contact info@brianqc.com to obtain BrianQC; -- Documentation targets available: doxyman (html); -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme sphinx-automodapi graphviz python-graphviz -c conda-forge -c psi4); -- Adding test cases: Psi4; -- Running some tests requires pytest. Please install it manually (try: /home/psilocaluser/toolchainconda/envs/minbld/bin/python3.6 -m pip install pytest); -- Configuring done; -- Generating done; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2147#issuecomment-813663636
https://github.com/psi4/psi4/issues/2147#issuecomment-813663636:1393,Modifiability,Config,Configuring,1393,"Any chance it could be a disk space issue? I created a minimal env with cmake, eigen, mpfr, python, GCC, and it unpacked fine. Gnu compilers, but surely that wouldn't matter at the unpacking stage. ```; -- Found LAPACK MKL: /theoryfs2/common/software/intel2019/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64/libmkl_rt.so;...; -- Suitable pybind11 could not be located, Building pybind11 instead.; -- Suitable gau2grid could not be located, Building gau2grid instead.; -- Could NOT find Libint2 (missing: Libint2_DIR); -- Suitable Libint2 could not be located, Building Libint2 5-4-3-6-5-4 instead.; -- Suitable qcelemental could not be located, Building qcelemental instead.; -- Suitable qcengine could not be located, Building qcengine instead.; -- Suitable Libxc could not be located, Building Libxc instead.; -- Suitable BrianQC could not be located, please contact info@brianqc.com to obtain BrianQC; -- Documentation targets available: doxyman (html); -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme sphinx-automodapi graphviz python-graphviz -c conda-forge -c psi4); -- Adding test cases: Psi4; -- Running some tests requires pytest. Please install it manually (try: /home/psilocaluser/toolchainconda/envs/minbld/bin/python3.6 -m pip install pytest); -- Configuring done; -- Generating done; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2147#issuecomment-813663636
https://github.com/psi4/psi4/issues/2147#issuecomment-813663636:1216,Testability,test,test,1216,"Any chance it could be a disk space issue? I created a minimal env with cmake, eigen, mpfr, python, GCC, and it unpacked fine. Gnu compilers, but surely that wouldn't matter at the unpacking stage. ```; -- Found LAPACK MKL: /theoryfs2/common/software/intel2019/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64/libmkl_rt.so;...; -- Suitable pybind11 could not be located, Building pybind11 instead.; -- Suitable gau2grid could not be located, Building gau2grid instead.; -- Could NOT find Libint2 (missing: Libint2_DIR); -- Suitable Libint2 could not be located, Building Libint2 5-4-3-6-5-4 instead.; -- Suitable qcelemental could not be located, Building qcelemental instead.; -- Suitable qcengine could not be located, Building qcengine instead.; -- Suitable Libxc could not be located, Building Libxc instead.; -- Suitable BrianQC could not be located, please contact info@brianqc.com to obtain BrianQC; -- Documentation targets available: doxyman (html); -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme sphinx-automodapi graphviz python-graphviz -c conda-forge -c psi4); -- Adding test cases: Psi4; -- Running some tests requires pytest. Please install it manually (try: /home/psilocaluser/toolchainconda/envs/minbld/bin/python3.6 -m pip install pytest); -- Configuring done; -- Generating done; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2147#issuecomment-813663636
https://github.com/psi4/psi4/issues/2147#issuecomment-813663636:1250,Testability,test,tests,1250,"Any chance it could be a disk space issue? I created a minimal env with cmake, eigen, mpfr, python, GCC, and it unpacked fine. Gnu compilers, but surely that wouldn't matter at the unpacking stage. ```; -- Found LAPACK MKL: /theoryfs2/common/software/intel2019/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64/libmkl_rt.so;...; -- Suitable pybind11 could not be located, Building pybind11 instead.; -- Suitable gau2grid could not be located, Building gau2grid instead.; -- Could NOT find Libint2 (missing: Libint2_DIR); -- Suitable Libint2 could not be located, Building Libint2 5-4-3-6-5-4 instead.; -- Suitable qcelemental could not be located, Building qcelemental instead.; -- Suitable qcengine could not be located, Building qcengine instead.; -- Suitable Libxc could not be located, Building Libxc instead.; -- Suitable BrianQC could not be located, please contact info@brianqc.com to obtain BrianQC; -- Documentation targets available: doxyman (html); -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme sphinx-automodapi graphviz python-graphviz -c conda-forge -c psi4); -- Adding test cases: Psi4; -- Running some tests requires pytest. Please install it manually (try: /home/psilocaluser/toolchainconda/envs/minbld/bin/python3.6 -m pip install pytest); -- Configuring done; -- Generating done; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2147#issuecomment-813663636
https://github.com/psi4/psi4/issues/2147#issuecomment-814169495:321,Usability,simpl,simpler,321,"I am trying to build it on a cluster resource where the filesystem (AFS) might be the culprit. I should have nearly 40 GB of free space, so I don't think that would be the issue. But there might be additional quirks with permissions or something?. I was able to get a build going in my scratch directory, which is a much simpler filesystem. I will contact the administrators and ask them about this. But it's definitely an issue with my local system, not with Psi4 itself. Thanks for your help!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2147#issuecomment-814169495
https://github.com/psi4/psi4/pull/2148#issuecomment-814590009:96,Deployability,install,installed,96,"@cdsgroup; Based upon a build of the documentation target (`make sphinxman` locally with Sphinx installed at CMake configuration time):; * an automated commit has been issued to your PR branch; * this updates `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin <prbranch>` to synchronize your local branch with GH; * an automated pull request has been issued to the docs website repo previewing `<objdir>/doc/sphinxman/html`; * preview docs changes at https://github.com/psi4/psi4docs/pull/2; * further action on auto pull request not required",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2148#issuecomment-814590009
https://github.com/psi4/psi4/pull/2148#issuecomment-814590009:115,Deployability,configurat,configuration,115,"@cdsgroup; Based upon a build of the documentation target (`make sphinxman` locally with Sphinx installed at CMake configuration time):; * an automated commit has been issued to your PR branch; * this updates `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin <prbranch>` to synchronize your local branch with GH; * an automated pull request has been issued to the docs website repo previewing `<objdir>/doc/sphinxman/html`; * preview docs changes at https://github.com/psi4/psi4docs/pull/2; * further action on auto pull request not required",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2148#issuecomment-814590009
https://github.com/psi4/psi4/pull/2148#issuecomment-814590009:201,Deployability,update,updates,201,"@cdsgroup; Based upon a build of the documentation target (`make sphinxman` locally with Sphinx installed at CMake configuration time):; * an automated commit has been issued to your PR branch; * this updates `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin <prbranch>` to synchronize your local branch with GH; * an automated pull request has been issued to the docs website repo previewing `<objdir>/doc/sphinxman/html`; * preview docs changes at https://github.com/psi4/psi4docs/pull/2; * further action on auto pull request not required",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2148#issuecomment-814590009
https://github.com/psi4/psi4/pull/2148#issuecomment-814590009:330,Deployability,update,update,330,"@cdsgroup; Based upon a build of the documentation target (`make sphinxman` locally with Sphinx installed at CMake configuration time):; * an automated commit has been issued to your PR branch; * this updates `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin <prbranch>` to synchronize your local branch with GH; * an automated pull request has been issued to the docs website repo previewing `<objdir>/doc/sphinxman/html`; * preview docs changes at https://github.com/psi4/psi4docs/pull/2; * further action on auto pull request not required",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2148#issuecomment-814590009
https://github.com/psi4/psi4/pull/2148#issuecomment-814590009:398,Integrability,synchroniz,synchronize,398,"@cdsgroup; Based upon a build of the documentation target (`make sphinxman` locally with Sphinx installed at CMake configuration time):; * an automated commit has been issued to your PR branch; * this updates `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin <prbranch>` to synchronize your local branch with GH; * an automated pull request has been issued to the docs website repo previewing `<objdir>/doc/sphinxman/html`; * preview docs changes at https://github.com/psi4/psi4docs/pull/2; * further action on auto pull request not required",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2148#issuecomment-814590009
https://github.com/psi4/psi4/pull/2148#issuecomment-814590009:115,Modifiability,config,configuration,115,"@cdsgroup; Based upon a build of the documentation target (`make sphinxman` locally with Sphinx installed at CMake configuration time):; * an automated commit has been issued to your PR branch; * this updates `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin <prbranch>` to synchronize your local branch with GH; * an automated pull request has been issued to the docs website repo previewing `<objdir>/doc/sphinxman/html`; * preview docs changes at https://github.com/psi4/psi4docs/pull/2; * further action on auto pull request not required",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2148#issuecomment-814590009
https://github.com/psi4/psi4/pull/2148#issuecomment-814590009:320,Safety,avoid,avoid,320,"@cdsgroup; Based upon a build of the documentation target (`make sphinxman` locally with Sphinx installed at CMake configuration time):; * an automated commit has been issued to your PR branch; * this updates `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin <prbranch>` to synchronize your local branch with GH; * an automated pull request has been issued to the docs website repo previewing `<objdir>/doc/sphinxman/html`; * preview docs changes at https://github.com/psi4/psi4docs/pull/2; * further action on auto pull request not required",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2148#issuecomment-814590009
https://github.com/psi4/psi4/pull/2148#issuecomment-814590009:230,Testability,test,tests,230,"@cdsgroup; Based upon a build of the documentation target (`make sphinxman` locally with Sphinx installed at CMake configuration time):; * an automated commit has been issued to your PR branch; * this updates `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin <prbranch>` to synchronize your local branch with GH; * an automated pull request has been issued to the docs website repo previewing `<objdir>/doc/sphinxman/html`; * preview docs changes at https://github.com/psi4/psi4docs/pull/2; * further action on auto pull request not required",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2148#issuecomment-814590009
https://github.com/psi4/psi4/pull/2151#issuecomment-916174986:31,Performance,queue,queue,31,"I can add this to my reviewing queue, but it will be behind the DLPNO PR, since I've already started on that one.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2151#issuecomment-916174986
https://github.com/psi4/psi4/pull/2151#issuecomment-926798539:56,Usability,feedback,feedback,56,"@JonathonMisiewicz, @jturney and @loriab Thanks for the feedback. I'm going to spend some serious time this week cleaning up the code and get back to you when it's in better shape.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2151#issuecomment-926798539
https://github.com/psi4/psi4/pull/2154#issuecomment-821106659:0,Deployability,update,updated,0,"updated the PR:; * removed unused imports; * switched to psi4.drivers.constants for conversion factors; * reformatted files with yapf, I had malfunctioning commit hook when submitting original PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-821106659
https://github.com/psi4/psi4/pull/2154#issuecomment-870509986:166,Deployability,release,release,166,"hello, I'll try to work on the replies and changes to have it completed by the end of the week, might I ask what's the timeframe we're working here before 1.4 stable release?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-870509986
https://github.com/psi4/psi4/pull/2154#issuecomment-870728272:737,Availability,fault,fault,737,"> hello, I'll try to work on the replies and changes to have it completed by the end of the week, might I ask what's the timeframe we're working here before 1.4 stable release?. We're probably looking at rc3 asap and stable 1.4 next week. So end-of-the-week is fine. As I see it, the items are:; * remove no_com, etc. if not really needed; * clarify in docstrings whether 1.9 is R_eq or AA; * allow uncp in `ACTV` rather than hardcoding both it and `ACTV_CP` to cp, unless there's a good reason not to; * the suggestion about deduplicating the two files might be possible, but I don't think it's worth it for a db; * I don't recall why CI/Azure was failing on your last commit, but there were certainly points where it was psi4 master's fault, so you may need to rebase.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-870728272
https://github.com/psi4/psi4/pull/2154#issuecomment-870728272:168,Deployability,release,release,168,"> hello, I'll try to work on the replies and changes to have it completed by the end of the week, might I ask what's the timeframe we're working here before 1.4 stable release?. We're probably looking at rc3 asap and stable 1.4 next week. So end-of-the-week is fine. As I see it, the items are:; * remove no_com, etc. if not really needed; * clarify in docstrings whether 1.9 is R_eq or AA; * allow uncp in `ACTV` rather than hardcoding both it and `ACTV_CP` to cp, unless there's a good reason not to; * the suggestion about deduplicating the two files might be possible, but I don't think it's worth it for a db; * I don't recall why CI/Azure was failing on your last commit, but there were certainly points where it was psi4 master's fault, so you may need to rebase.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-870728272
https://github.com/psi4/psi4/pull/2154#issuecomment-878487254:138,Deployability,release,release,138,"Hi, did you get a chance to look at this further? So long as as big problems aren't uncovered in last week's rc3, we'd like to do the 1.4 release including the new databases this week. I think the items in https://github.com/psi4/psi4/pull/2154#issuecomment-870728272 were pretty small. Let me know if you need advice for the rebase.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-878487254
https://github.com/psi4/psi4/pull/2154#issuecomment-878539595:1322,Availability,fault,fault,1322,"> Hi, did you get a chance to look at this further? So long as as big problems aren't uncovered in last week's rc3, we'd like to do the 1.4 release including the new databases this week. I think the items in [#2154 (comment)](https://github.com/psi4/psi4/pull/2154#issuecomment-870728272) were pretty small. Let me know if you need advice for the rebase. I need to run, some tests, if the database after the changes is still fine since I didn't manage to put up automated tests, yet.; Running, whole test set might add significant overhead to the already time-consuming test suite. Are there any recommendations on `pytest.mark` to qualify it for the `heaviest` league?; I imagine, running some small-basis SAPT0 for mb case, and UMP2 for CP/un-CP one. > remove no_com, etc. if not really; - [x] done . > clarify in docstrings whether 1.9 is R_eq or AA; - [x] done, I think. See the latest changes `R=0.9R_eq`. > allow uncp in ACTV rather than hardcoding both it and ACTV_CP to cp, unless there's a good reason not to; - [x] done, TBH I've worked exclusively with mid-bond version with CP, I don't know if unCP with mid-bonds makes even sense. Need someone with `unCP` experience to comment on that. > I don't recall why CI/Azure was failing on your last commit, but there were certainly points where it was psi4 master's fault, so you may need to rebase.; - [x] rebased. as for DRYifing two files, I don't think it's desired to couple these two files, as they should be in-principle, runnable standalone.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-878539595
https://github.com/psi4/psi4/pull/2154#issuecomment-878539595:140,Deployability,release,release,140,"> Hi, did you get a chance to look at this further? So long as as big problems aren't uncovered in last week's rc3, we'd like to do the 1.4 release including the new databases this week. I think the items in [#2154 (comment)](https://github.com/psi4/psi4/pull/2154#issuecomment-870728272) were pretty small. Let me know if you need advice for the rebase. I need to run, some tests, if the database after the changes is still fine since I didn't manage to put up automated tests, yet.; Running, whole test set might add significant overhead to the already time-consuming test suite. Are there any recommendations on `pytest.mark` to qualify it for the `heaviest` league?; I imagine, running some small-basis SAPT0 for mb case, and UMP2 for CP/un-CP one. > remove no_com, etc. if not really; - [x] done . > clarify in docstrings whether 1.9 is R_eq or AA; - [x] done, I think. See the latest changes `R=0.9R_eq`. > allow uncp in ACTV rather than hardcoding both it and ACTV_CP to cp, unless there's a good reason not to; - [x] done, TBH I've worked exclusively with mid-bond version with CP, I don't know if unCP with mid-bonds makes even sense. Need someone with `unCP` experience to comment on that. > I don't recall why CI/Azure was failing on your last commit, but there were certainly points where it was psi4 master's fault, so you may need to rebase.; - [x] rebased. as for DRYifing two files, I don't think it's desired to couple these two files, as they should be in-principle, runnable standalone.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-878539595
https://github.com/psi4/psi4/pull/2154#issuecomment-878539595:375,Testability,test,tests,375,"> Hi, did you get a chance to look at this further? So long as as big problems aren't uncovered in last week's rc3, we'd like to do the 1.4 release including the new databases this week. I think the items in [#2154 (comment)](https://github.com/psi4/psi4/pull/2154#issuecomment-870728272) were pretty small. Let me know if you need advice for the rebase. I need to run, some tests, if the database after the changes is still fine since I didn't manage to put up automated tests, yet.; Running, whole test set might add significant overhead to the already time-consuming test suite. Are there any recommendations on `pytest.mark` to qualify it for the `heaviest` league?; I imagine, running some small-basis SAPT0 for mb case, and UMP2 for CP/un-CP one. > remove no_com, etc. if not really; - [x] done . > clarify in docstrings whether 1.9 is R_eq or AA; - [x] done, I think. See the latest changes `R=0.9R_eq`. > allow uncp in ACTV rather than hardcoding both it and ACTV_CP to cp, unless there's a good reason not to; - [x] done, TBH I've worked exclusively with mid-bond version with CP, I don't know if unCP with mid-bonds makes even sense. Need someone with `unCP` experience to comment on that. > I don't recall why CI/Azure was failing on your last commit, but there were certainly points where it was psi4 master's fault, so you may need to rebase.; - [x] rebased. as for DRYifing two files, I don't think it's desired to couple these two files, as they should be in-principle, runnable standalone.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-878539595
https://github.com/psi4/psi4/pull/2154#issuecomment-878539595:472,Testability,test,tests,472,"> Hi, did you get a chance to look at this further? So long as as big problems aren't uncovered in last week's rc3, we'd like to do the 1.4 release including the new databases this week. I think the items in [#2154 (comment)](https://github.com/psi4/psi4/pull/2154#issuecomment-870728272) were pretty small. Let me know if you need advice for the rebase. I need to run, some tests, if the database after the changes is still fine since I didn't manage to put up automated tests, yet.; Running, whole test set might add significant overhead to the already time-consuming test suite. Are there any recommendations on `pytest.mark` to qualify it for the `heaviest` league?; I imagine, running some small-basis SAPT0 for mb case, and UMP2 for CP/un-CP one. > remove no_com, etc. if not really; - [x] done . > clarify in docstrings whether 1.9 is R_eq or AA; - [x] done, I think. See the latest changes `R=0.9R_eq`. > allow uncp in ACTV rather than hardcoding both it and ACTV_CP to cp, unless there's a good reason not to; - [x] done, TBH I've worked exclusively with mid-bond version with CP, I don't know if unCP with mid-bonds makes even sense. Need someone with `unCP` experience to comment on that. > I don't recall why CI/Azure was failing on your last commit, but there were certainly points where it was psi4 master's fault, so you may need to rebase.; - [x] rebased. as for DRYifing two files, I don't think it's desired to couple these two files, as they should be in-principle, runnable standalone.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-878539595
https://github.com/psi4/psi4/pull/2154#issuecomment-878539595:500,Testability,test,test,500,"> Hi, did you get a chance to look at this further? So long as as big problems aren't uncovered in last week's rc3, we'd like to do the 1.4 release including the new databases this week. I think the items in [#2154 (comment)](https://github.com/psi4/psi4/pull/2154#issuecomment-870728272) were pretty small. Let me know if you need advice for the rebase. I need to run, some tests, if the database after the changes is still fine since I didn't manage to put up automated tests, yet.; Running, whole test set might add significant overhead to the already time-consuming test suite. Are there any recommendations on `pytest.mark` to qualify it for the `heaviest` league?; I imagine, running some small-basis SAPT0 for mb case, and UMP2 for CP/un-CP one. > remove no_com, etc. if not really; - [x] done . > clarify in docstrings whether 1.9 is R_eq or AA; - [x] done, I think. See the latest changes `R=0.9R_eq`. > allow uncp in ACTV rather than hardcoding both it and ACTV_CP to cp, unless there's a good reason not to; - [x] done, TBH I've worked exclusively with mid-bond version with CP, I don't know if unCP with mid-bonds makes even sense. Need someone with `unCP` experience to comment on that. > I don't recall why CI/Azure was failing on your last commit, but there were certainly points where it was psi4 master's fault, so you may need to rebase.; - [x] rebased. as for DRYifing two files, I don't think it's desired to couple these two files, as they should be in-principle, runnable standalone.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-878539595
https://github.com/psi4/psi4/pull/2154#issuecomment-878539595:570,Testability,test,test,570,"> Hi, did you get a chance to look at this further? So long as as big problems aren't uncovered in last week's rc3, we'd like to do the 1.4 release including the new databases this week. I think the items in [#2154 (comment)](https://github.com/psi4/psi4/pull/2154#issuecomment-870728272) were pretty small. Let me know if you need advice for the rebase. I need to run, some tests, if the database after the changes is still fine since I didn't manage to put up automated tests, yet.; Running, whole test set might add significant overhead to the already time-consuming test suite. Are there any recommendations on `pytest.mark` to qualify it for the `heaviest` league?; I imagine, running some small-basis SAPT0 for mb case, and UMP2 for CP/un-CP one. > remove no_com, etc. if not really; - [x] done . > clarify in docstrings whether 1.9 is R_eq or AA; - [x] done, I think. See the latest changes `R=0.9R_eq`. > allow uncp in ACTV rather than hardcoding both it and ACTV_CP to cp, unless there's a good reason not to; - [x] done, TBH I've worked exclusively with mid-bond version with CP, I don't know if unCP with mid-bonds makes even sense. Need someone with `unCP` experience to comment on that. > I don't recall why CI/Azure was failing on your last commit, but there were certainly points where it was psi4 master's fault, so you may need to rebase.; - [x] rebased. as for DRYifing two files, I don't think it's desired to couple these two files, as they should be in-principle, runnable standalone.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-878539595
https://github.com/psi4/psi4/pull/2154#issuecomment-882792295:324,Security,access,accessed,324,"> I'm fine with the PR as is. If you tidy up the BIND and TAGL dictionaries as Jonathon suggested above, even better. did the part with `TAGL`, not sure about `BIND` since assigned values should be unique per each entry. I would prefer to keep it in a declarative fashion, instead of cooking up some scary bind values array accessed by index.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-882792295
https://github.com/psi4/psi4/pull/2154#issuecomment-882794765:2095,Security,Validat,ValidationError,2095,"date (0.0, (0.0, 0.0), 1, (1, 1)): T T T T T T T T T T --> False; Assess candidate (0.0, (0.0, 0.0), 1, (1, 2)): T T T T T T T T T T --> False; Assess candidate (0.0, (0.0, 0.0), 1, (2, 1)): T T T T T T T T T T --> False; Assess candidate (0.0, (0.0, 0.0), 1, (2, 2)): T T T T T T T T T T T --> False; Traceback (most recent call last):; File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/qcdb/molecule.py"", line 1468, in to_dict; validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/from_arrays.py"", line 381, in from_arrays; verbose=verbose); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 485, in validate_and_fill_chgmult; c_final, fc_final, m_final, fm_final = reconcile(cgmp_exact_c, cgmp_exact_fc, cgmp_exact_m, cgmp_exact_fm); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 475, in reconcile; raise ValidationError(err); qcelemental.exceptions.ValidationError: Inconsistent or unspecified chg/mult: sys chg: 0.0, frag chg: [0.0, 0.0], sys mult: 1, frag mult: [1, 1]. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""tests/python/databases/input.py"", line 10, in <module>; psi4.wrapper_database.database('scf', 'O24by5mb', cp=0, subset=[""4-0.9"", ""12-0.9"", ""20-0.9"", ""23-0.9""]); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/wrapper_database.py"", line 452, in database; molecule = core.Molecule.from_dict(GEOS[rgt].to_dict()); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/qcdb/molecule.py"", line 1477, in to_dict; validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/from_arrays.py"", line 381, in from_arrays; verbose=verbose); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-882794765
https://github.com/psi4/psi4/pull/2154#issuecomment-882794765:2140,Security,Validat,ValidationError,2140,"ate (0.0, (0.0, 0.0), 1, (1, 2)): T T T T T T T T T T --> False; Assess candidate (0.0, (0.0, 0.0), 1, (2, 1)): T T T T T T T T T T --> False; Assess candidate (0.0, (0.0, 0.0), 1, (2, 2)): T T T T T T T T T T T --> False; Traceback (most recent call last):; File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/qcdb/molecule.py"", line 1468, in to_dict; validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/from_arrays.py"", line 381, in from_arrays; verbose=verbose); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 485, in validate_and_fill_chgmult; c_final, fc_final, m_final, fm_final = reconcile(cgmp_exact_c, cgmp_exact_fc, cgmp_exact_m, cgmp_exact_fm); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 475, in reconcile; raise ValidationError(err); qcelemental.exceptions.ValidationError: Inconsistent or unspecified chg/mult: sys chg: 0.0, frag chg: [0.0, 0.0], sys mult: 1, frag mult: [1, 1]. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""tests/python/databases/input.py"", line 10, in <module>; psi4.wrapper_database.database('scf', 'O24by5mb', cp=0, subset=[""4-0.9"", ""12-0.9"", ""20-0.9"", ""23-0.9""]); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/wrapper_database.py"", line 452, in database; molecule = core.Molecule.from_dict(GEOS[rgt].to_dict()); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/qcdb/molecule.py"", line 1477, in to_dict; validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/from_arrays.py"", line 381, in from_arrays; verbose=verbose); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 485, in validate_and_fill_chgmult; c_final, fc_final, m_final, fm_fi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-882794765
https://github.com/psi4/psi4/pull/2154#issuecomment-882794765:3358,Security,Validat,ValidationError,3358,"speclabel=False, verbose=0, domain='qm', **molrec); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/from_arrays.py"", line 381, in from_arrays; verbose=verbose); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 485, in validate_and_fill_chgmult; c_final, fc_final, m_final, fm_final = reconcile(cgmp_exact_c, cgmp_exact_fc, cgmp_exact_m, cgmp_exact_fm); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 475, in reconcile; raise ValidationError(err); qcelemental.exceptions.ValidationError: Inconsistent or unspecified chg/mult: sys chg: 0.0, frag chg: [0.0, 0.0], sys mult: 1, frag mult: [1, 1]. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""tests/python/databases/input.py"", line 10, in <module>; psi4.wrapper_database.database('scf', 'O24by5mb', cp=0, subset=[""4-0.9"", ""12-0.9"", ""20-0.9"", ""23-0.9""]); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/wrapper_database.py"", line 452, in database; molecule = core.Molecule.from_dict(GEOS[rgt].to_dict()); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/qcdb/molecule.py"", line 1477, in to_dict; validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/from_arrays.py"", line 381, in from_arrays; verbose=verbose); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 485, in validate_and_fill_chgmult; c_final, fc_final, m_final, fm_final = reconcile(cgmp_exact_c, cgmp_exact_fc, cgmp_exact_m, cgmp_exact_fm); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 475, in reconcile; raise ValidationError(err); qcelemental.exceptions.ValidationError: Inconsistent or unspecified chg/mult: sys chg: 0.0, frag chg: [None, None], sys mult: 1, frag mult: [None, None]; ```. I'm inclined to discourage using it :(",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-882794765
https://github.com/psi4/psi4/pull/2154#issuecomment-882794765:3403,Security,Validat,ValidationError,3403,"speclabel=False, verbose=0, domain='qm', **molrec); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/from_arrays.py"", line 381, in from_arrays; verbose=verbose); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 485, in validate_and_fill_chgmult; c_final, fc_final, m_final, fm_final = reconcile(cgmp_exact_c, cgmp_exact_fc, cgmp_exact_m, cgmp_exact_fm); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 475, in reconcile; raise ValidationError(err); qcelemental.exceptions.ValidationError: Inconsistent or unspecified chg/mult: sys chg: 0.0, frag chg: [0.0, 0.0], sys mult: 1, frag mult: [1, 1]. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""tests/python/databases/input.py"", line 10, in <module>; psi4.wrapper_database.database('scf', 'O24by5mb', cp=0, subset=[""4-0.9"", ""12-0.9"", ""20-0.9"", ""23-0.9""]); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/wrapper_database.py"", line 452, in database; molecule = core.Molecule.from_dict(GEOS[rgt].to_dict()); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/qcdb/molecule.py"", line 1477, in to_dict; validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/from_arrays.py"", line 381, in from_arrays; verbose=verbose); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 485, in validate_and_fill_chgmult; c_final, fc_final, m_final, fm_final = reconcile(cgmp_exact_c, cgmp_exact_fc, cgmp_exact_m, cgmp_exact_fm); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 475, in reconcile; raise ValidationError(err); qcelemental.exceptions.ValidationError: Inconsistent or unspecified chg/mult: sys chg: 0.0, frag chg: [None, None], sys mult: 1, frag mult: [None, None]; ```. I'm inclined to discourage using it :(",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-882794765
https://github.com/psi4/psi4/pull/2154#issuecomment-882794765:66,Testability,test,test,66,"@loriab Since, I've touched this code once more. I tried to add a test if all types (`mb`,`non-mb`) x (`cp=1, `cp=0`) passes (for a selected subset). I've run into for `midbond` (three fragments) with `cp=0`:; ```; python3 tests/python/databases/input.py. felez: [array([1.]), array([1., 0.])]; all_fc_known: True; all_fm_known: True; zel: 2.0; fzel: [1.0, 1.0]; c: [0.0, 0]; fc: [0.0]; fc: [0.0]; m: [1]; fm: [1]; fm: [1]; Assess candidate (0.0, (0.0, 0.0), 1, (1, 1)): 1 2 3 4 4-0 4-1 5 5-0 5-1 6 6-0 6-1 7 7-0 7-1; Assess candidate (0.0, (0.0, 0.0), 1, (1, 1)): T T T T T T T T T T T T T --> False; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. felez: [array([1.]), array([1., 0.])]; all_fc_known: False; all_fm_known: False; zel: 2.0; fzel: [1.0, 1.0]; c: [0.0, 0]; fc: [0.0, 0.0]; fc: [0.0, 0.0]; m: [1]; fm: [1, 1, 2]; fm: [1, 1, 2]; Assess candidate (0.0, (0.0, 0.0), 1, (1, 1)): 1 2 3 4 4-0 4-1 5 5-0 5-1 6 7 8 ; Assess candidate (0.0, (0.0, 0.0), 1, (1, 1)): T T T T T T T T T T --> False; Assess candidate (0.0, (0.0, 0.0), 1, (1, 2)): T T T T T T T T T T --> False; Assess candidate (0.0, (0.0, 0.0), 1, (2, 1)): T T T T T T T T T T --> False; Assess candidate (0.0, (0.0, 0.0), 1, (2, 2)): T T T T T T T T T T T --> False; Traceback (most recent call last):; File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/qcdb/molecule.py"", line 1468, in to_dict; validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/from_arrays.py"", line 381, in from_arrays; verbose=verbose); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 485, in validate_and_fill_chgmult; c_final, fc_final, m_final, fm_final = reconcile(cgmp_exact_c, cgmp_exact_fc, cgmp_exact_m, cgmp_exact_fm); File ""/home/fili",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-882794765
https://github.com/psi4/psi4/pull/2154#issuecomment-882794765:223,Testability,test,tests,223,"@loriab Since, I've touched this code once more. I tried to add a test if all types (`mb`,`non-mb`) x (`cp=1, `cp=0`) passes (for a selected subset). I've run into for `midbond` (three fragments) with `cp=0`:; ```; python3 tests/python/databases/input.py. felez: [array([1.]), array([1., 0.])]; all_fc_known: True; all_fm_known: True; zel: 2.0; fzel: [1.0, 1.0]; c: [0.0, 0]; fc: [0.0]; fc: [0.0]; m: [1]; fm: [1]; fm: [1]; Assess candidate (0.0, (0.0, 0.0), 1, (1, 1)): 1 2 3 4 4-0 4-1 5 5-0 5-1 6 6-0 6-1 7 7-0 7-1; Assess candidate (0.0, (0.0, 0.0), 1, (1, 1)): T T T T T T T T T T T T T --> False; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. felez: [array([1.]), array([1., 0.])]; all_fc_known: False; all_fm_known: False; zel: 2.0; fzel: [1.0, 1.0]; c: [0.0, 0]; fc: [0.0, 0.0]; fc: [0.0, 0.0]; m: [1]; fm: [1, 1, 2]; fm: [1, 1, 2]; Assess candidate (0.0, (0.0, 0.0), 1, (1, 1)): 1 2 3 4 4-0 4-1 5 5-0 5-1 6 7 8 ; Assess candidate (0.0, (0.0, 0.0), 1, (1, 1)): T T T T T T T T T T --> False; Assess candidate (0.0, (0.0, 0.0), 1, (1, 2)): T T T T T T T T T T --> False; Assess candidate (0.0, (0.0, 0.0), 1, (2, 1)): T T T T T T T T T T --> False; Assess candidate (0.0, (0.0, 0.0), 1, (2, 2)): T T T T T T T T T T T --> False; Traceback (most recent call last):; File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/qcdb/molecule.py"", line 1468, in to_dict; validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/from_arrays.py"", line 381, in from_arrays; verbose=verbose); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 485, in validate_and_fill_chgmult; c_final, fc_final, m_final, fm_final = reconcile(cgmp_exact_c, cgmp_exact_fc, cgmp_exact_m, cgmp_exact_fm); File ""/home/fili",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-882794765
https://github.com/psi4/psi4/pull/2154#issuecomment-882794765:2374,Testability,test,tests,2374,"T T T T T T T T T --> False; Traceback (most recent call last):; File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/qcdb/molecule.py"", line 1468, in to_dict; validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/from_arrays.py"", line 381, in from_arrays; verbose=verbose); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 485, in validate_and_fill_chgmult; c_final, fc_final, m_final, fm_final = reconcile(cgmp_exact_c, cgmp_exact_fc, cgmp_exact_m, cgmp_exact_fm); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 475, in reconcile; raise ValidationError(err); qcelemental.exceptions.ValidationError: Inconsistent or unspecified chg/mult: sys chg: 0.0, frag chg: [0.0, 0.0], sys mult: 1, frag mult: [1, 1]. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""tests/python/databases/input.py"", line 10, in <module>; psi4.wrapper_database.database('scf', 'O24by5mb', cp=0, subset=[""4-0.9"", ""12-0.9"", ""20-0.9"", ""23-0.9""]); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/wrapper_database.py"", line 452, in database; molecule = core.Molecule.from_dict(GEOS[rgt].to_dict()); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/qcdb/molecule.py"", line 1477, in to_dict; validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/from_arrays.py"", line 381, in from_arrays; verbose=verbose); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 485, in validate_and_fill_chgmult; c_final, fc_final, m_final, fm_final = reconcile(cgmp_exact_c, cgmp_exact_fc, cgmp_exact_m, cgmp_exact_fm); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 475, in reconcile; raise Validatio",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-882794765
https://github.com/psi4/psi4/pull/2155#issuecomment-821086361:99,Energy Efficiency,energy,energy,99,"Also, how have you verified correctness? While I'm not familiar with these methods, ""can induce an energy difference of over 2 _hartrees_ even at conservative cutoffs"" does not seem safe.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821086361
https://github.com/psi4/psi4/pull/2155#issuecomment-821086361:182,Safety,safe,safe,182,"Also, how have you verified correctness? While I'm not familiar with these methods, ""can induce an energy difference of over 2 _hartrees_ even at conservative cutoffs"" does not seem safe.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821086361
https://github.com/psi4/psi4/pull/2155#issuecomment-821184039:293,Energy Efficiency,energy,energy,293,"> I am a bit confused what the graphs show, could you explain them a bit more?. Yes, those graphs represent the distribution of differences expected from using density screening (or density screening + incremental Fock build) compared to not using density screening at all, on the total B3LYP energy of dimers, as well as the interaction energies in the S22 set (not S22x7). Results suggest that there is no harm in using density screening.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821184039
https://github.com/psi4/psi4/pull/2155#issuecomment-821189029:327,Availability,error,error,327,"> Also, how have you verified correctness? While I'm not familiar with these methods, ""can induce an energy difference of over 2 _hartrees_ even at conservative cutoffs"" does not seem safe. I have extensively verified the correctness of this approach, across many different molecules, basis sets, etc. I have never observed an error of ""2 Hartrees"". The worst I have ever observed is on the order of 1.0e-5 Hartrees, better than density fitting. Here is a link to my ""benzene case study"". https://docs.google.com/spreadsheets/d/1HDMZ5PV6GhnK4i68Y1t86VhauTwqMP_X2kII21GCsiY/edit?usp=sharing. I empirically discovered that the best screening threshold given an energy convergence of 1.0e-n is 1.0e-(n+3) for non-augmented basis sets and 1.0e-(n+5) for augmented basis sets. For example, for an e_convergence of 1.0e-8 in cc-pVTZ, the ideal threshold is 1.0e-11, while it is 1.0e-13 in aug-cc-pVTZ.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821189029
https://github.com/psi4/psi4/pull/2155#issuecomment-821189029:101,Energy Efficiency,energy,energy,101,"> Also, how have you verified correctness? While I'm not familiar with these methods, ""can induce an energy difference of over 2 _hartrees_ even at conservative cutoffs"" does not seem safe. I have extensively verified the correctness of this approach, across many different molecules, basis sets, etc. I have never observed an error of ""2 Hartrees"". The worst I have ever observed is on the order of 1.0e-5 Hartrees, better than density fitting. Here is a link to my ""benzene case study"". https://docs.google.com/spreadsheets/d/1HDMZ5PV6GhnK4i68Y1t86VhauTwqMP_X2kII21GCsiY/edit?usp=sharing. I empirically discovered that the best screening threshold given an energy convergence of 1.0e-n is 1.0e-(n+3) for non-augmented basis sets and 1.0e-(n+5) for augmented basis sets. For example, for an e_convergence of 1.0e-8 in cc-pVTZ, the ideal threshold is 1.0e-11, while it is 1.0e-13 in aug-cc-pVTZ.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821189029
https://github.com/psi4/psi4/pull/2155#issuecomment-821189029:659,Energy Efficiency,energy,energy,659,"> Also, how have you verified correctness? While I'm not familiar with these methods, ""can induce an energy difference of over 2 _hartrees_ even at conservative cutoffs"" does not seem safe. I have extensively verified the correctness of this approach, across many different molecules, basis sets, etc. I have never observed an error of ""2 Hartrees"". The worst I have ever observed is on the order of 1.0e-5 Hartrees, better than density fitting. Here is a link to my ""benzene case study"". https://docs.google.com/spreadsheets/d/1HDMZ5PV6GhnK4i68Y1t86VhauTwqMP_X2kII21GCsiY/edit?usp=sharing. I empirically discovered that the best screening threshold given an energy convergence of 1.0e-n is 1.0e-(n+3) for non-augmented basis sets and 1.0e-(n+5) for augmented basis sets. For example, for an e_convergence of 1.0e-8 in cc-pVTZ, the ideal threshold is 1.0e-11, while it is 1.0e-13 in aug-cc-pVTZ.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821189029
https://github.com/psi4/psi4/pull/2155#issuecomment-821189029:184,Safety,safe,safe,184,"> Also, how have you verified correctness? While I'm not familiar with these methods, ""can induce an energy difference of over 2 _hartrees_ even at conservative cutoffs"" does not seem safe. I have extensively verified the correctness of this approach, across many different molecules, basis sets, etc. I have never observed an error of ""2 Hartrees"". The worst I have ever observed is on the order of 1.0e-5 Hartrees, better than density fitting. Here is a link to my ""benzene case study"". https://docs.google.com/spreadsheets/d/1HDMZ5PV6GhnK4i68Y1t86VhauTwqMP_X2kII21GCsiY/edit?usp=sharing. I empirically discovered that the best screening threshold given an energy convergence of 1.0e-n is 1.0e-(n+3) for non-augmented basis sets and 1.0e-(n+5) for augmented basis sets. For example, for an e_convergence of 1.0e-8 in cc-pVTZ, the ideal threshold is 1.0e-11, while it is 1.0e-13 in aug-cc-pVTZ.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821189029
https://github.com/psi4/psi4/pull/2155#issuecomment-821194121:283,Availability,error,error,283,"Including the _order of magnitude_ in a corner of the plot is highly non-standard and leads to the confusion I just went through. Choose units that are of the proper order of magnitude, and include any needed decimals on the axis directly. According to your axes, you have 2 hartree error, which is utterly unacceptable. 0.2 microhartree error is much more reasonable. What you're describing confirms that the error is small. That is different from confirming correctness. Are you able to compare the numbers to some other implementation and show agreement? Is there some rare property that the exact scheme has, which you can numerically reproduce?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821194121
https://github.com/psi4/psi4/pull/2155#issuecomment-821194121:338,Availability,error,error,338,"Including the _order of magnitude_ in a corner of the plot is highly non-standard and leads to the confusion I just went through. Choose units that are of the proper order of magnitude, and include any needed decimals on the axis directly. According to your axes, you have 2 hartree error, which is utterly unacceptable. 0.2 microhartree error is much more reasonable. What you're describing confirms that the error is small. That is different from confirming correctness. Are you able to compare the numbers to some other implementation and show agreement? Is there some rare property that the exact scheme has, which you can numerically reproduce?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821194121
https://github.com/psi4/psi4/pull/2155#issuecomment-821194121:410,Availability,error,error,410,"Including the _order of magnitude_ in a corner of the plot is highly non-standard and leads to the confusion I just went through. Choose units that are of the proper order of magnitude, and include any needed decimals on the axis directly. According to your axes, you have 2 hartree error, which is utterly unacceptable. 0.2 microhartree error is much more reasonable. What you're describing confirms that the error is small. That is different from confirming correctness. Are you able to compare the numbers to some other implementation and show agreement? Is there some rare property that the exact scheme has, which you can numerically reproduce?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821194121
https://github.com/psi4/psi4/pull/2155#issuecomment-821197961:285,Availability,error,error,285,"> Including the _order of magnitude_ in a corner of the plot is highly non-standard and leads to the confusion I just went through. Choose units that are of the proper order of magnitude, and include any needed decimals on the axis directly. According to your axes, you have 2 hartree error, which is utterly unacceptable. 0.2 microhartree error is much more reasonable.; > ; > What you're describing confirms that the error is small. That is different from confirming correctness. Are you able to compare the numbers to some other implementation and show agreement? Is there some rare property that the exact scheme has, which you can numerically reproduce?. Ah, the energy convergence criteria itself is 1.0e-6, and the errors are well below that number, so I strongly believe that we are safe. It may not be a good idea to compare to another implementation since every implementation has different tricks thrown in. Rather, if the energy difference is less than the e_convergence criteria, we are definitely safe. Though we could try to reproduce something like MBIS charges to check if we are safe.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821197961
https://github.com/psi4/psi4/pull/2155#issuecomment-821197961:340,Availability,error,error,340,"> Including the _order of magnitude_ in a corner of the plot is highly non-standard and leads to the confusion I just went through. Choose units that are of the proper order of magnitude, and include any needed decimals on the axis directly. According to your axes, you have 2 hartree error, which is utterly unacceptable. 0.2 microhartree error is much more reasonable.; > ; > What you're describing confirms that the error is small. That is different from confirming correctness. Are you able to compare the numbers to some other implementation and show agreement? Is there some rare property that the exact scheme has, which you can numerically reproduce?. Ah, the energy convergence criteria itself is 1.0e-6, and the errors are well below that number, so I strongly believe that we are safe. It may not be a good idea to compare to another implementation since every implementation has different tricks thrown in. Rather, if the energy difference is less than the e_convergence criteria, we are definitely safe. Though we could try to reproduce something like MBIS charges to check if we are safe.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821197961
https://github.com/psi4/psi4/pull/2155#issuecomment-821197961:419,Availability,error,error,419,"> Including the _order of magnitude_ in a corner of the plot is highly non-standard and leads to the confusion I just went through. Choose units that are of the proper order of magnitude, and include any needed decimals on the axis directly. According to your axes, you have 2 hartree error, which is utterly unacceptable. 0.2 microhartree error is much more reasonable.; > ; > What you're describing confirms that the error is small. That is different from confirming correctness. Are you able to compare the numbers to some other implementation and show agreement? Is there some rare property that the exact scheme has, which you can numerically reproduce?. Ah, the energy convergence criteria itself is 1.0e-6, and the errors are well below that number, so I strongly believe that we are safe. It may not be a good idea to compare to another implementation since every implementation has different tricks thrown in. Rather, if the energy difference is less than the e_convergence criteria, we are definitely safe. Though we could try to reproduce something like MBIS charges to check if we are safe.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821197961
https://github.com/psi4/psi4/pull/2155#issuecomment-821197961:722,Availability,error,errors,722,"> Including the _order of magnitude_ in a corner of the plot is highly non-standard and leads to the confusion I just went through. Choose units that are of the proper order of magnitude, and include any needed decimals on the axis directly. According to your axes, you have 2 hartree error, which is utterly unacceptable. 0.2 microhartree error is much more reasonable.; > ; > What you're describing confirms that the error is small. That is different from confirming correctness. Are you able to compare the numbers to some other implementation and show agreement? Is there some rare property that the exact scheme has, which you can numerically reproduce?. Ah, the energy convergence criteria itself is 1.0e-6, and the errors are well below that number, so I strongly believe that we are safe. It may not be a good idea to compare to another implementation since every implementation has different tricks thrown in. Rather, if the energy difference is less than the e_convergence criteria, we are definitely safe. Though we could try to reproduce something like MBIS charges to check if we are safe.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821197961
https://github.com/psi4/psi4/pull/2155#issuecomment-821197961:668,Energy Efficiency,energy,energy,668,"> Including the _order of magnitude_ in a corner of the plot is highly non-standard and leads to the confusion I just went through. Choose units that are of the proper order of magnitude, and include any needed decimals on the axis directly. According to your axes, you have 2 hartree error, which is utterly unacceptable. 0.2 microhartree error is much more reasonable.; > ; > What you're describing confirms that the error is small. That is different from confirming correctness. Are you able to compare the numbers to some other implementation and show agreement? Is there some rare property that the exact scheme has, which you can numerically reproduce?. Ah, the energy convergence criteria itself is 1.0e-6, and the errors are well below that number, so I strongly believe that we are safe. It may not be a good idea to compare to another implementation since every implementation has different tricks thrown in. Rather, if the energy difference is less than the e_convergence criteria, we are definitely safe. Though we could try to reproduce something like MBIS charges to check if we are safe.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821197961
https://github.com/psi4/psi4/pull/2155#issuecomment-821197961:934,Energy Efficiency,energy,energy,934,"> Including the _order of magnitude_ in a corner of the plot is highly non-standard and leads to the confusion I just went through. Choose units that are of the proper order of magnitude, and include any needed decimals on the axis directly. According to your axes, you have 2 hartree error, which is utterly unacceptable. 0.2 microhartree error is much more reasonable.; > ; > What you're describing confirms that the error is small. That is different from confirming correctness. Are you able to compare the numbers to some other implementation and show agreement? Is there some rare property that the exact scheme has, which you can numerically reproduce?. Ah, the energy convergence criteria itself is 1.0e-6, and the errors are well below that number, so I strongly believe that we are safe. It may not be a good idea to compare to another implementation since every implementation has different tricks thrown in. Rather, if the energy difference is less than the e_convergence criteria, we are definitely safe. Though we could try to reproduce something like MBIS charges to check if we are safe.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821197961
https://github.com/psi4/psi4/pull/2155#issuecomment-821197961:1070,Energy Efficiency,charge,charges,1070,"> Including the _order of magnitude_ in a corner of the plot is highly non-standard and leads to the confusion I just went through. Choose units that are of the proper order of magnitude, and include any needed decimals on the axis directly. According to your axes, you have 2 hartree error, which is utterly unacceptable. 0.2 microhartree error is much more reasonable.; > ; > What you're describing confirms that the error is small. That is different from confirming correctness. Are you able to compare the numbers to some other implementation and show agreement? Is there some rare property that the exact scheme has, which you can numerically reproduce?. Ah, the energy convergence criteria itself is 1.0e-6, and the errors are well below that number, so I strongly believe that we are safe. It may not be a good idea to compare to another implementation since every implementation has different tricks thrown in. Rather, if the energy difference is less than the e_convergence criteria, we are definitely safe. Though we could try to reproduce something like MBIS charges to check if we are safe.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821197961
https://github.com/psi4/psi4/pull/2155#issuecomment-821197961:791,Safety,safe,safe,791,"> Including the _order of magnitude_ in a corner of the plot is highly non-standard and leads to the confusion I just went through. Choose units that are of the proper order of magnitude, and include any needed decimals on the axis directly. According to your axes, you have 2 hartree error, which is utterly unacceptable. 0.2 microhartree error is much more reasonable.; > ; > What you're describing confirms that the error is small. That is different from confirming correctness. Are you able to compare the numbers to some other implementation and show agreement? Is there some rare property that the exact scheme has, which you can numerically reproduce?. Ah, the energy convergence criteria itself is 1.0e-6, and the errors are well below that number, so I strongly believe that we are safe. It may not be a good idea to compare to another implementation since every implementation has different tricks thrown in. Rather, if the energy difference is less than the e_convergence criteria, we are definitely safe. Though we could try to reproduce something like MBIS charges to check if we are safe.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821197961
https://github.com/psi4/psi4/pull/2155#issuecomment-821197961:1011,Safety,safe,safe,1011,"> Including the _order of magnitude_ in a corner of the plot is highly non-standard and leads to the confusion I just went through. Choose units that are of the proper order of magnitude, and include any needed decimals on the axis directly. According to your axes, you have 2 hartree error, which is utterly unacceptable. 0.2 microhartree error is much more reasonable.; > ; > What you're describing confirms that the error is small. That is different from confirming correctness. Are you able to compare the numbers to some other implementation and show agreement? Is there some rare property that the exact scheme has, which you can numerically reproduce?. Ah, the energy convergence criteria itself is 1.0e-6, and the errors are well below that number, so I strongly believe that we are safe. It may not be a good idea to compare to another implementation since every implementation has different tricks thrown in. Rather, if the energy difference is less than the e_convergence criteria, we are definitely safe. Though we could try to reproduce something like MBIS charges to check if we are safe.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821197961
https://github.com/psi4/psi4/pull/2155#issuecomment-821197961:1097,Safety,safe,safe,1097,"> Including the _order of magnitude_ in a corner of the plot is highly non-standard and leads to the confusion I just went through. Choose units that are of the proper order of magnitude, and include any needed decimals on the axis directly. According to your axes, you have 2 hartree error, which is utterly unacceptable. 0.2 microhartree error is much more reasonable.; > ; > What you're describing confirms that the error is small. That is different from confirming correctness. Are you able to compare the numbers to some other implementation and show agreement? Is there some rare property that the exact scheme has, which you can numerically reproduce?. Ah, the energy convergence criteria itself is 1.0e-6, and the errors are well below that number, so I strongly believe that we are safe. It may not be a good idea to compare to another implementation since every implementation has different tricks thrown in. Rather, if the energy difference is less than the e_convergence criteria, we are definitely safe. Though we could try to reproduce something like MBIS charges to check if we are safe.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821197961
https://github.com/psi4/psi4/pull/2155#issuecomment-821200775:65,Availability,error,error,65,"Now I also get it :). Incremental Fock builds can show numerical error accumulation. Adding a reset frequency is sensible, e.g. after 20 incremental builds do a full Fock build from scratch. The actual number should be a (expert) user option. The incremental Fock build can be compared against a standard build. They have to agree.; Comparing density screening to other programs can probably only be done for HF calculations and even then I would expect that one can only see 'similar errors' and no exact number agreement.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821200775
https://github.com/psi4/psi4/pull/2155#issuecomment-821200775:485,Availability,error,errors,485,"Now I also get it :). Incremental Fock builds can show numerical error accumulation. Adding a reset frequency is sensible, e.g. after 20 incremental builds do a full Fock build from scratch. The actual number should be a (expert) user option. The incremental Fock build can be compared against a standard build. They have to agree.; Comparing density screening to other programs can probably only be done for HF calculations and even then I would expect that one can only see 'similar errors' and no exact number agreement.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821200775
https://github.com/psi4/psi4/pull/2155#issuecomment-821204441:73,Availability,error,error,73,"> Now I also get it :); > ; > Incremental Fock builds can show numerical error accumulation. Adding a reset frequency is sensible, e.g. after 20 incremental builds do a full Fock build from scratch. The actual number should be a (expert) user option.; > ; > The incremental Fock build can be compared against a standard build. They have to agree.; > Comparing density screening to other programs can probably only be done for HF calculations and even then I would expect that one can only see 'similar errors' and no exact number agreement. This is already done, as I turn off incremental Fock build after the density drops below 1.0e-5, to reduce the differences, though I could make this a user option. :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821204441
https://github.com/psi4/psi4/pull/2155#issuecomment-821204441:502,Availability,error,errors,502,"> Now I also get it :); > ; > Incremental Fock builds can show numerical error accumulation. Adding a reset frequency is sensible, e.g. after 20 incremental builds do a full Fock build from scratch. The actual number should be a (expert) user option.; > ; > The incremental Fock build can be compared against a standard build. They have to agree.; > Comparing density screening to other programs can probably only be done for HF calculations and even then I would expect that one can only see 'similar errors' and no exact number agreement. This is already done, as I turn off incremental Fock build after the density drops below 1.0e-5, to reduce the differences, though I could make this a user option. :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821204441
https://github.com/psi4/psi4/pull/2155#issuecomment-821204441:641,Energy Efficiency,reduce,reduce,641,"> Now I also get it :); > ; > Incremental Fock builds can show numerical error accumulation. Adding a reset frequency is sensible, e.g. after 20 incremental builds do a full Fock build from scratch. The actual number should be a (expert) user option.; > ; > The incremental Fock build can be compared against a standard build. They have to agree.; > Comparing density screening to other programs can probably only be done for HF calculations and even then I would expect that one can only see 'similar errors' and no exact number agreement. This is already done, as I turn off incremental Fock build after the density drops below 1.0e-5, to reduce the differences, though I could make this a user option. :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821204441
https://github.com/psi4/psi4/pull/2155#issuecomment-821209195:61,Availability,toler,tolerance,61,"Wait, what? Then how is Incremental Fock build set to energy tolerance on the order of 1e-9 giving you errors on the order of 1e-7?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821209195
https://github.com/psi4/psi4/pull/2155#issuecomment-821209195:103,Availability,error,errors,103,"Wait, what? Then how is Incremental Fock build set to energy tolerance on the order of 1e-9 giving you errors on the order of 1e-7?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821209195
https://github.com/psi4/psi4/pull/2155#issuecomment-821209195:54,Energy Efficiency,energy,energy,54,"Wait, what? Then how is Incremental Fock build set to energy tolerance on the order of 1e-9 giving you errors on the order of 1e-7?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821209195
https://github.com/psi4/psi4/pull/2155#issuecomment-821209945:63,Availability,toler,tolerance,63,"> Wait, what? Then how is Incremental Fock build set to energy tolerance on the order of 1e-9 giving you errors on the order of 1e-7?. Oh no, I mean the SCREENING threshold is set to 1.0e-9, the energy tolerance is 1.0e-6.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821209945
https://github.com/psi4/psi4/pull/2155#issuecomment-821209945:105,Availability,error,errors,105,"> Wait, what? Then how is Incremental Fock build set to energy tolerance on the order of 1e-9 giving you errors on the order of 1e-7?. Oh no, I mean the SCREENING threshold is set to 1.0e-9, the energy tolerance is 1.0e-6.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821209945
https://github.com/psi4/psi4/pull/2155#issuecomment-821209945:202,Availability,toler,tolerance,202,"> Wait, what? Then how is Incremental Fock build set to energy tolerance on the order of 1e-9 giving you errors on the order of 1e-7?. Oh no, I mean the SCREENING threshold is set to 1.0e-9, the energy tolerance is 1.0e-6.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821209945
https://github.com/psi4/psi4/pull/2155#issuecomment-821209945:56,Energy Efficiency,energy,energy,56,"> Wait, what? Then how is Incremental Fock build set to energy tolerance on the order of 1e-9 giving you errors on the order of 1e-7?. Oh no, I mean the SCREENING threshold is set to 1.0e-9, the energy tolerance is 1.0e-6.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821209945
https://github.com/psi4/psi4/pull/2155#issuecomment-821209945:195,Energy Efficiency,energy,energy,195,"> Wait, what? Then how is Incremental Fock build set to energy tolerance on the order of 1e-9 giving you errors on the order of 1e-7?. Oh no, I mean the SCREENING threshold is set to 1.0e-9, the energy tolerance is 1.0e-6.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821209945
https://github.com/psi4/psi4/pull/2155#issuecomment-821212583:59,Availability,error,errors,59,"Let me make sure I have this right: you're plotting energy errors on the order of 1e-7, but you only converged the energy to 1e-6? If so, then your plots are pure noise. If not, then what am I getting wrong?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821212583
https://github.com/psi4/psi4/pull/2155#issuecomment-821212583:52,Energy Efficiency,energy,energy,52,"Let me make sure I have this right: you're plotting energy errors on the order of 1e-7, but you only converged the energy to 1e-6? If so, then your plots are pure noise. If not, then what am I getting wrong?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821212583
https://github.com/psi4/psi4/pull/2155#issuecomment-821212583:115,Energy Efficiency,energy,energy,115,"Let me make sure I have this right: you're plotting energy errors on the order of 1e-7, but you only converged the energy to 1e-6? If so, then your plots are pure noise. If not, then what am I getting wrong?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821212583
https://github.com/psi4/psi4/pull/2155#issuecomment-821213641:61,Availability,error,errors,61,"> Let me make sure I have this right: you're plotting energy errors on the order of 1e-7, but you only converged the energy to 1e-6? If so, then your plots are pure noise. If not, then what am I getting wrong?. Yes sir that is right :) The point of the plots is to show that the errors are irrelavent",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821213641
https://github.com/psi4/psi4/pull/2155#issuecomment-821213641:279,Availability,error,errors,279,"> Let me make sure I have this right: you're plotting energy errors on the order of 1e-7, but you only converged the energy to 1e-6? If so, then your plots are pure noise. If not, then what am I getting wrong?. Yes sir that is right :) The point of the plots is to show that the errors are irrelavent",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821213641
https://github.com/psi4/psi4/pull/2155#issuecomment-821213641:54,Energy Efficiency,energy,energy,54,"> Let me make sure I have this right: you're plotting energy errors on the order of 1e-7, but you only converged the energy to 1e-6? If so, then your plots are pure noise. If not, then what am I getting wrong?. Yes sir that is right :) The point of the plots is to show that the errors are irrelavent",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821213641
https://github.com/psi4/psi4/pull/2155#issuecomment-821213641:117,Energy Efficiency,energy,energy,117,"> Let me make sure I have this right: you're plotting energy errors on the order of 1e-7, but you only converged the energy to 1e-6? If so, then your plots are pure noise. If not, then what am I getting wrong?. Yes sir that is right :) The point of the plots is to show that the errors are irrelavent",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821213641
https://github.com/psi4/psi4/pull/2155#issuecomment-821266004:73,Availability,error,error,73,"You should not have made those graphs. All you know for sure is that the error is less than 1 micro hartree. You cannot tell the difference between 1.0 e-7 and 1.5 e-7, but people read graphs as if you can tell the difference between your data points. This is also why you can't just present graphs. You need to be absolutely sure that your labels are clear, and that somebody who isn't you will be able to figure out what the graph means. If you need to add a sentence to explain them, do so. I request additional benchmarks so we can get more precise estimates on how much error these techniques introduce. Can you increase energy convergence to `1e-10`?. Because this PR isn't coming in until 1.5 anyways, I'm going to turn my attention to other things for a while.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821266004
https://github.com/psi4/psi4/pull/2155#issuecomment-821266004:575,Availability,error,error,575,"You should not have made those graphs. All you know for sure is that the error is less than 1 micro hartree. You cannot tell the difference between 1.0 e-7 and 1.5 e-7, but people read graphs as if you can tell the difference between your data points. This is also why you can't just present graphs. You need to be absolutely sure that your labels are clear, and that somebody who isn't you will be able to figure out what the graph means. If you need to add a sentence to explain them, do so. I request additional benchmarks so we can get more precise estimates on how much error these techniques introduce. Can you increase energy convergence to `1e-10`?. Because this PR isn't coming in until 1.5 anyways, I'm going to turn my attention to other things for a while.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821266004
https://github.com/psi4/psi4/pull/2155#issuecomment-821266004:626,Energy Efficiency,energy,energy,626,"You should not have made those graphs. All you know for sure is that the error is less than 1 micro hartree. You cannot tell the difference between 1.0 e-7 and 1.5 e-7, but people read graphs as if you can tell the difference between your data points. This is also why you can't just present graphs. You need to be absolutely sure that your labels are clear, and that somebody who isn't you will be able to figure out what the graph means. If you need to add a sentence to explain them, do so. I request additional benchmarks so we can get more precise estimates on how much error these techniques introduce. Can you increase energy convergence to `1e-10`?. Because this PR isn't coming in until 1.5 anyways, I'm going to turn my attention to other things for a while.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821266004
https://github.com/psi4/psi4/pull/2155#issuecomment-821266004:515,Testability,benchmark,benchmarks,515,"You should not have made those graphs. All you know for sure is that the error is less than 1 micro hartree. You cannot tell the difference between 1.0 e-7 and 1.5 e-7, but people read graphs as if you can tell the difference between your data points. This is also why you can't just present graphs. You need to be absolutely sure that your labels are clear, and that somebody who isn't you will be able to figure out what the graph means. If you need to add a sentence to explain them, do so. I request additional benchmarks so we can get more precise estimates on how much error these techniques introduce. Can you increase energy convergence to `1e-10`?. Because this PR isn't coming in until 1.5 anyways, I'm going to turn my attention to other things for a while.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821266004
https://github.com/psi4/psi4/pull/2155#issuecomment-821266004:352,Usability,clear,clear,352,"You should not have made those graphs. All you know for sure is that the error is less than 1 micro hartree. You cannot tell the difference between 1.0 e-7 and 1.5 e-7, but people read graphs as if you can tell the difference between your data points. This is also why you can't just present graphs. You need to be absolutely sure that your labels are clear, and that somebody who isn't you will be able to figure out what the graph means. If you need to add a sentence to explain them, do so. I request additional benchmarks so we can get more precise estimates on how much error these techniques introduce. Can you increase energy convergence to `1e-10`?. Because this PR isn't coming in until 1.5 anyways, I'm going to turn my attention to other things for a while.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821266004
https://github.com/psi4/psi4/pull/2155#issuecomment-821278069:75,Availability,error,error,75,"> You should not have made those graphs. All you know for sure is that the error is less than 1 micro hartree. You cannot tell the difference between 1.0 e-7 and 1.5 e-7, but people read graphs as if you can tell the difference between your data points.; > ; > This is also why you can't just present graphs. You need to be absolutely sure that your labels are clear, and that somebody who isn't you will be able to figure out what the graph means. If you need to add a sentence to explain them, do so.; > ; > I request additional benchmarks so we can get more precise estimates on how much error these techniques introduce. Can you increase energy convergence to `1e-10`?; > ; > Because this PR isn't coming in until 1.5 anyways, I'm going to turn my attention to other things for a while. Ah, I am learning a lot. Good teachers like you will prepare me well for grad school :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821278069
https://github.com/psi4/psi4/pull/2155#issuecomment-821278069:591,Availability,error,error,591,"> You should not have made those graphs. All you know for sure is that the error is less than 1 micro hartree. You cannot tell the difference between 1.0 e-7 and 1.5 e-7, but people read graphs as if you can tell the difference between your data points.; > ; > This is also why you can't just present graphs. You need to be absolutely sure that your labels are clear, and that somebody who isn't you will be able to figure out what the graph means. If you need to add a sentence to explain them, do so.; > ; > I request additional benchmarks so we can get more precise estimates on how much error these techniques introduce. Can you increase energy convergence to `1e-10`?; > ; > Because this PR isn't coming in until 1.5 anyways, I'm going to turn my attention to other things for a while. Ah, I am learning a lot. Good teachers like you will prepare me well for grad school :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821278069
https://github.com/psi4/psi4/pull/2155#issuecomment-821278069:642,Energy Efficiency,energy,energy,642,"> You should not have made those graphs. All you know for sure is that the error is less than 1 micro hartree. You cannot tell the difference between 1.0 e-7 and 1.5 e-7, but people read graphs as if you can tell the difference between your data points.; > ; > This is also why you can't just present graphs. You need to be absolutely sure that your labels are clear, and that somebody who isn't you will be able to figure out what the graph means. If you need to add a sentence to explain them, do so.; > ; > I request additional benchmarks so we can get more precise estimates on how much error these techniques introduce. Can you increase energy convergence to `1e-10`?; > ; > Because this PR isn't coming in until 1.5 anyways, I'm going to turn my attention to other things for a while. Ah, I am learning a lot. Good teachers like you will prepare me well for grad school :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821278069
https://github.com/psi4/psi4/pull/2155#issuecomment-821278069:531,Testability,benchmark,benchmarks,531,"> You should not have made those graphs. All you know for sure is that the error is less than 1 micro hartree. You cannot tell the difference between 1.0 e-7 and 1.5 e-7, but people read graphs as if you can tell the difference between your data points.; > ; > This is also why you can't just present graphs. You need to be absolutely sure that your labels are clear, and that somebody who isn't you will be able to figure out what the graph means. If you need to add a sentence to explain them, do so.; > ; > I request additional benchmarks so we can get more precise estimates on how much error these techniques introduce. Can you increase energy convergence to `1e-10`?; > ; > Because this PR isn't coming in until 1.5 anyways, I'm going to turn my attention to other things for a while. Ah, I am learning a lot. Good teachers like you will prepare me well for grad school :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821278069
https://github.com/psi4/psi4/pull/2155#issuecomment-821278069:361,Usability,clear,clear,361,"> You should not have made those graphs. All you know for sure is that the error is less than 1 micro hartree. You cannot tell the difference between 1.0 e-7 and 1.5 e-7, but people read graphs as if you can tell the difference between your data points.; > ; > This is also why you can't just present graphs. You need to be absolutely sure that your labels are clear, and that somebody who isn't you will be able to figure out what the graph means. If you need to add a sentence to explain them, do so.; > ; > I request additional benchmarks so we can get more precise estimates on how much error these techniques introduce. Can you increase energy convergence to `1e-10`?; > ; > Because this PR isn't coming in until 1.5 anyways, I'm going to turn my attention to other things for a while. Ah, I am learning a lot. Good teachers like you will prepare me well for grad school :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821278069
https://github.com/psi4/psi4/pull/2155#issuecomment-821278069:800,Usability,learn,learning,800,"> You should not have made those graphs. All you know for sure is that the error is less than 1 micro hartree. You cannot tell the difference between 1.0 e-7 and 1.5 e-7, but people read graphs as if you can tell the difference between your data points.; > ; > This is also why you can't just present graphs. You need to be absolutely sure that your labels are clear, and that somebody who isn't you will be able to figure out what the graph means. If you need to add a sentence to explain them, do so.; > ; > I request additional benchmarks so we can get more precise estimates on how much error these techniques introduce. Can you increase energy convergence to `1e-10`?; > ; > Because this PR isn't coming in until 1.5 anyways, I'm going to turn my attention to other things for a while. Ah, I am learning a lot. Good teachers like you will prepare me well for grad school :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821278069
https://github.com/psi4/psi4/pull/2155#issuecomment-897257155:256,Modifiability,refactor,refactor,256,"> Now that I have a copy of the paper, I've been able to review the density screening part of the PR. That half of the PR doesn't follow the standards of similar code, which is the big problem here, and fixing it requires a restructure. I request that you refactor the density screening part of this before I look at the incremental Fock build part. Trying to do both at once is too likely to cause confusion.; > ; > As for your handling of UHF and ROHF, I don't have expertise there. If you haven't already, do a quick search for density screening for open-shell references, and check the papers that cite Ahlrichs for any titles that specifically mention open-shells or new developments in Direct SCF. Hi Jonathon, I just implemented the refactoring. To request density screening, the user would just set `screening density` in the options. I believe the density screening part of the code is all refactored now, so feel free to look at the IFB part.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-897257155
https://github.com/psi4/psi4/pull/2155#issuecomment-897257155:740,Modifiability,refactor,refactoring,740,"> Now that I have a copy of the paper, I've been able to review the density screening part of the PR. That half of the PR doesn't follow the standards of similar code, which is the big problem here, and fixing it requires a restructure. I request that you refactor the density screening part of this before I look at the incremental Fock build part. Trying to do both at once is too likely to cause confusion.; > ; > As for your handling of UHF and ROHF, I don't have expertise there. If you haven't already, do a quick search for density screening for open-shell references, and check the papers that cite Ahlrichs for any titles that specifically mention open-shells or new developments in Direct SCF. Hi Jonathon, I just implemented the refactoring. To request density screening, the user would just set `screening density` in the options. I believe the density screening part of the code is all refactored now, so feel free to look at the IFB part.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-897257155
https://github.com/psi4/psi4/pull/2155#issuecomment-897257155:899,Modifiability,refactor,refactored,899,"> Now that I have a copy of the paper, I've been able to review the density screening part of the PR. That half of the PR doesn't follow the standards of similar code, which is the big problem here, and fixing it requires a restructure. I request that you refactor the density screening part of this before I look at the incremental Fock build part. Trying to do both at once is too likely to cause confusion.; > ; > As for your handling of UHF and ROHF, I don't have expertise there. If you haven't already, do a quick search for density screening for open-shell references, and check the papers that cite Ahlrichs for any titles that specifically mention open-shells or new developments in Direct SCF. Hi Jonathon, I just implemented the refactoring. To request density screening, the user would just set `screening density` in the options. I believe the density screening part of the code is all refactored now, so feel free to look at the IFB part.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-897257155
https://github.com/psi4/psi4/pull/2155#issuecomment-898682398:207,Testability,test,test,207,"> I suspect the density screening algorithm is implemented incorrectly. I don't want to take focus away from this point, so I'm going to refrain from delving into the IFB just yet. Hi Jonathon, I have added test cases for density screening and incfock in the pytests/test_erisieve.py file. I have yet to user-facing documentation, but feel free to review the code I have currently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-898682398
https://github.com/psi4/psi4/pull/2155#issuecomment-898695692:7,Deployability,update,updated,7,"I just updated the docs too. One thing I am confused about, why is the `screening` keyword only in the sapt module? I think we should refactor it as a global module.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-898695692
https://github.com/psi4/psi4/pull/2155#issuecomment-898695692:134,Modifiability,refactor,refactor,134,"I just updated the docs too. One thing I am confused about, why is the `screening` keyword only in the sapt module? I think we should refactor it as a global module.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-898695692
https://github.com/psi4/psi4/pull/2155#issuecomment-898699140:107,Modifiability,refactor,refactor,107,"> One thing I am confused about, why is the `screening` keyword only in the sapt module? I think we should refactor it as a global module. That's odd! ; Since we have `INTS_TOLERANCE` for every module maybe we should do the same with `screening`?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-898699140
https://github.com/psi4/psi4/pull/2155#issuecomment-898701048:9,Deployability,update,updated,9,"> I just updated the docs too. One thing I am confused about, why is the `screening` keyword only in the sapt module?. Very good question. @zachglick [added the option](https://github.com/psi4/psi4/commit/e1977af9ae69b77ca518c3169efb23018b51ffb0), so perhaps he can shed some light on this one.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-898701048
https://github.com/psi4/psi4/pull/2155#issuecomment-900377297:167,Usability,feedback,feedback,167,"> I made the requested changes, I am wondering which .rst file I need to put the incfock documentation in. Waiting for expert opinions on incfock :). Waiting for more feedback sounds good to me. Libfock is one of the pieces of the code I don't know as well.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-900377297
https://github.com/psi4/psi4/pull/2155#issuecomment-924242589:17,Deployability,update,updated,17,"Hi all, . I just updated the density screening code with the UHF/ROHF cases. I also added a test in the test_erisieve.py pytest file that ensures the same number of shell quartets are being screened out with RHF and UHF.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-924242589
https://github.com/psi4/psi4/pull/2155#issuecomment-924242589:92,Testability,test,test,92,"Hi all, . I just updated the density screening code with the UHF/ROHF cases. I also added a test in the test_erisieve.py pytest file that ensures the same number of shell quartets are being screened out with RHF and UHF.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-924242589
https://github.com/psi4/psi4/pull/2155#issuecomment-933763993:35,Modifiability,rewrite,rewrite,35,"Unless adding it will force you to rewrite a large amount of code, or not adding it will make your results incorrect, I'm going to request you leave that to a separate PR. It's difficult enough finding people to review this, and adding more code will only make it worse.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-933763993
https://github.com/psi4/psi4/pull/2155#issuecomment-937307252:278,Availability,avail,available,278,"@JonathonMisiewicz To reference the treating the D separately, we are calculating the change in the density matrix, or delta D if we are not in the first iteration, the delta J, K, and wKs are added to the J and K in the post-iteration step. That way, incremental Fock build is available for all JK types. Basically knowledge of the iteration is needed so we know when to set up the delta D matrices. (It is also needed for my future CFMM and linK PRs, where we do NOT want to run linK or CFMM on the SAD guess)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-937307252
https://github.com/psi4/psi4/pull/2155#issuecomment-937330224:124,Performance,optimiz,optimized,124,"One question, to all core developers, IMHO, we should change the default value for `df_scf_guess` from true to false, since optimized direct algorithms would be faster than density fitting for large systems. What do y'all think?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-937330224
https://github.com/psi4/psi4/pull/2155#issuecomment-937361392:62,Modifiability,variab,variable,62,"I made all of the requested changes, barring the `iteration_` variable, which I personally believe is necessary. If you have a workaround, please let me know :).This PR should be _really_ close to being finalized.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-937361392
https://github.com/psi4/psi4/pull/2155#issuecomment-937512242:126,Performance,optimiz,optimized,126,"> One question, to all core developers, IMHO, we should change the default value for `df_scf_guess` from true to false, since optimized direct algorithms would be faster than density fitting for large systems. What do y'all think?. But that's only true for small basis sets. If you run small to moderate sized molecules with triple-zeta basis sets, DF is very fast.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-937512242
https://github.com/psi4/psi4/pull/2155#issuecomment-937738887:126,Performance,optimiz,optimized,126,"> One question, to all core developers, IMHO, we should change the default value for `df_scf_guess` from true to false, since optimized direct algorithms would be faster than density fitting for large systems. What do y'all think?. The only way you will convince me is with a thorough timings benchmark across a variety of system sizes. _That said_, such a change is outside the scope of this PR anyways.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-937738887
https://github.com/psi4/psi4/pull/2155#issuecomment-937738887:293,Testability,benchmark,benchmark,293,"> One question, to all core developers, IMHO, we should change the default value for `df_scf_guess` from true to false, since optimized direct algorithms would be faster than density fitting for large systems. What do y'all think?. The only way you will convince me is with a thorough timings benchmark across a variety of system sizes. _That said_, such a change is outside the scope of this PR anyways.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-937738887
https://github.com/psi4/psi4/pull/2155#issuecomment-937754025:280,Availability,avail,available,280,"> @JonathonMisiewicz To reference the treating the D separately, we are calculating the change in the density matrix, or delta D if we are not in the first iteration, the delta J, K, and wKs are added to the J and K in the post-iteration step. That way, incremental Fock build is available for all JK types. Basically knowledge of the iteration is needed so we know when to set up the delta D matrices. (It is also needed for my future CFMM and linK PRs, where we do NOT want to run linK or CFMM on the SAD guess). Okay, so why do you need to know the _iteration number_? It sounds like you just need to know whether you're on the first iteration or not, which is inherently a boolean. I'd be less opposed to that, but I'd need to look over the code again to see whether I'm in favor of it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-937754025
https://github.com/psi4/psi4/pull/2155#issuecomment-937754577:64,Modifiability,variab,variable,64,"> I made all of the requested changes, barring the `iteration_` variable, which I personally believe is necessary. If you have a workaround, please let me know :).This PR should be _really_ close to being finalized. At risk of being grumpy, please don't say you made all the requested changes unless you actually have. There were many of my comments that still haven't been addressed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-937754577
https://github.com/psi4/psi4/pull/2155#issuecomment-937754577:219,Safety,risk,risk,219,"> I made all of the requested changes, barring the `iteration_` variable, which I personally believe is necessary. If you have a workaround, please let me know :).This PR should be _really_ close to being finalized. At risk of being grumpy, please don't say you made all the requested changes unless you actually have. There were many of my comments that still haven't been addressed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-937754577
https://github.com/psi4/psi4/pull/2155#issuecomment-938639822:89,Availability,Ping,Ping,89,"It looks like yesterday's PR was intended to address only some of the reviewer comments. Ping me again when you've addressed everything, and I'll give it another look.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-938639822
https://github.com/psi4/psi4/pull/2155#issuecomment-940155921:2,Modifiability,refactor,refactored,2,"I refactored my code, per Susi's suggestions. The only things left are whether or not my way of handling the python exporting of `do_incfock_iter` is ideal, and my question on stability analysis.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-940155921
https://github.com/psi4/psi4/pull/2155#issuecomment-940187631:311,Testability,test,tests,311,"The pybind is fine. To be clear, the last commit introduced a major change in the algorithm. In the old code, we would use incremental Fock for all iterations until we hit some convergence threshold. In the new code, we use incremental Fock for all iterations except once every 5 or so. Please rerun the timing tests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-940187631
https://github.com/psi4/psi4/pull/2155#issuecomment-940187631:26,Usability,clear,clear,26,"The pybind is fine. To be clear, the last commit introduced a major change in the algorithm. In the old code, we would use incremental Fock for all iterations until we hit some convergence threshold. In the new code, we use incremental Fock for all iterations except once every 5 or so. Please rerun the timing tests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-940187631
https://github.com/psi4/psi4/pull/2155#issuecomment-940945179:176,Availability,toler,tolerance,176,"Wait, why do we want to ""turn off the incremental build once a preset level of `D_CONVERGENCE` is achieved""? Is the idea that the numerical creep is within the `D_CONVERGENCE` tolerance?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-940945179
https://github.com/psi4/psi4/pull/2155#issuecomment-940988917:178,Availability,toler,tolerance,178,"> Wait, why do we want to ""turn off the incremental build once a preset level of `D_CONVERGENCE` is achieved""? Is the idea that the numerical creep is within the `D_CONVERGENCE` tolerance?. I would maybe turn it off when the final `D_CONVERGENCE` has been reached, and then do full rebuild(s) until SCF convergence has been achieved. It's been almost a decade since I worked with the equations for direct SCF; wasn't there some cutoff parameter that's used to discard ""small"" elements to the Fock matrix? This may not be accurate enough so it's always safer to do a full build at the end. Again, the point about resets is just to prevent numerical creep, which might require several more costly full rebuilds.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-940988917
https://github.com/psi4/psi4/pull/2155#issuecomment-940988917:552,Safety,safe,safer,552,"> Wait, why do we want to ""turn off the incremental build once a preset level of `D_CONVERGENCE` is achieved""? Is the idea that the numerical creep is within the `D_CONVERGENCE` tolerance?. I would maybe turn it off when the final `D_CONVERGENCE` has been reached, and then do full rebuild(s) until SCF convergence has been achieved. It's been almost a decade since I worked with the equations for direct SCF; wasn't there some cutoff parameter that's used to discard ""small"" elements to the Fock matrix? This may not be accurate enough so it's always safer to do a full build at the end. Again, the point about resets is just to prevent numerical creep, which might require several more costly full rebuilds.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-940988917
https://github.com/psi4/psi4/pull/2155#issuecomment-942599138:210,Availability,error,errors,210,"@JonathonMisiewicz I reran my timings on a growing system of water clusters for density screening and the new incfock algorithm. The basis set is 6-31G*, and the screening is the Psi4 default of `1.0e-12`. The errors are well within SCF convergence (1.0e-6), and the time savings remain significant (albeit with a tighter screening tolerance). ![dscreen_time_wc](https://user-images.githubusercontent.com/60559795/137191849-d0fc9f07-5dc1-4e61-89ab-5b9bd552a011.png); ![dscreen_diff_wc](https://user-images.githubusercontent.com/60559795/137191850-9ee6311c-f898-4064-857e-90e95be8bad6.png)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-942599138
https://github.com/psi4/psi4/pull/2155#issuecomment-942599138:332,Availability,toler,tolerance,332,"@JonathonMisiewicz I reran my timings on a growing system of water clusters for density screening and the new incfock algorithm. The basis set is 6-31G*, and the screening is the Psi4 default of `1.0e-12`. The errors are well within SCF convergence (1.0e-6), and the time savings remain significant (albeit with a tighter screening tolerance). ![dscreen_time_wc](https://user-images.githubusercontent.com/60559795/137191849-d0fc9f07-5dc1-4e61-89ab-5b9bd552a011.png); ![dscreen_diff_wc](https://user-images.githubusercontent.com/60559795/137191850-9ee6311c-f898-4064-857e-90e95be8bad6.png)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-942599138
https://github.com/psi4/psi4/pull/2155#issuecomment-943469458:240,Deployability,update,updated,240,"> Thanks. The question of ""when do we _use_ an incremental build?"" needs to be settled (which it isn't yet - see Susi's comment) before I can approve this. Hi Jonathon, I just implemented Susi's suggestion about the `d_convergence`. I also updated the necessary tests (`density-screen-1` and `density-screen-2`).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-943469458
https://github.com/psi4/psi4/pull/2155#issuecomment-943469458:262,Testability,test,tests,262,"> Thanks. The question of ""when do we _use_ an incremental build?"" needs to be settled (which it isn't yet - see Susi's comment) before I can approve this. Hi Jonathon, I just implemented Susi's suggestion about the `d_convergence`. I also updated the necessary tests (`density-screen-1` and `density-screen-2`).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-943469458
https://github.com/psi4/psi4/pull/2155#issuecomment-944359549:85,Availability,error,error,85,"This PR failed the auto-test suite. Looking at the logs, this appears to be a random error rather than an indicator of a fault in the PR itself. In event of a random error, there's nothing to do but re-run the tests. I recommend you rebase onto master and then force push the PR. Rebasing is always healthy, and that will force the tests to re-run.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-944359549
https://github.com/psi4/psi4/pull/2155#issuecomment-944359549:121,Availability,fault,fault,121,"This PR failed the auto-test suite. Looking at the logs, this appears to be a random error rather than an indicator of a fault in the PR itself. In event of a random error, there's nothing to do but re-run the tests. I recommend you rebase onto master and then force push the PR. Rebasing is always healthy, and that will force the tests to re-run.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-944359549
https://github.com/psi4/psi4/pull/2155#issuecomment-944359549:166,Availability,error,error,166,"This PR failed the auto-test suite. Looking at the logs, this appears to be a random error rather than an indicator of a fault in the PR itself. In event of a random error, there's nothing to do but re-run the tests. I recommend you rebase onto master and then force push the PR. Rebasing is always healthy, and that will force the tests to re-run.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-944359549
https://github.com/psi4/psi4/pull/2155#issuecomment-944359549:24,Testability,test,test,24,"This PR failed the auto-test suite. Looking at the logs, this appears to be a random error rather than an indicator of a fault in the PR itself. In event of a random error, there's nothing to do but re-run the tests. I recommend you rebase onto master and then force push the PR. Rebasing is always healthy, and that will force the tests to re-run.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-944359549
https://github.com/psi4/psi4/pull/2155#issuecomment-944359549:51,Testability,log,logs,51,"This PR failed the auto-test suite. Looking at the logs, this appears to be a random error rather than an indicator of a fault in the PR itself. In event of a random error, there's nothing to do but re-run the tests. I recommend you rebase onto master and then force push the PR. Rebasing is always healthy, and that will force the tests to re-run.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-944359549
https://github.com/psi4/psi4/pull/2155#issuecomment-944359549:210,Testability,test,tests,210,"This PR failed the auto-test suite. Looking at the logs, this appears to be a random error rather than an indicator of a fault in the PR itself. In event of a random error, there's nothing to do but re-run the tests. I recommend you rebase onto master and then force push the PR. Rebasing is always healthy, and that will force the tests to re-run.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-944359549
https://github.com/psi4/psi4/pull/2155#issuecomment-944359549:332,Testability,test,tests,332,"This PR failed the auto-test suite. Looking at the logs, this appears to be a random error rather than an indicator of a fault in the PR itself. In event of a random error, there's nothing to do but re-run the tests. I recommend you rebase onto master and then force push the PR. Rebasing is always healthy, and that will force the tests to re-run.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-944359549
https://github.com/psi4/psi4/pull/2155#issuecomment-946304560:83,Availability,Error,Error,83,"All the CTests have passed, except two that are not related to this PR; 1.) sapt7 (Error Message: `'psi4.core.UHF' object has no attribute 'diis_manager'`). 2.) scf-cholesky-basis (Error message: `Energy with Cholesky 1e-7: computed value (-230.6415254470) does not match (-230.6415254327) to atol=1e-08 by difference (-0.0000000142).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946304560
https://github.com/psi4/psi4/pull/2155#issuecomment-946304560:181,Availability,Error,Error,181,"All the CTests have passed, except two that are not related to this PR; 1.) sapt7 (Error Message: `'psi4.core.UHF' object has no attribute 'diis_manager'`). 2.) scf-cholesky-basis (Error message: `Energy with Cholesky 1e-7: computed value (-230.6415254470) does not match (-230.6415254327) to atol=1e-08 by difference (-0.0000000142).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946304560
https://github.com/psi4/psi4/pull/2155#issuecomment-946304560:197,Energy Efficiency,Energy,Energy,197,"All the CTests have passed, except two that are not related to this PR; 1.) sapt7 (Error Message: `'psi4.core.UHF' object has no attribute 'diis_manager'`). 2.) scf-cholesky-basis (Error message: `Energy with Cholesky 1e-7: computed value (-230.6415254470) does not match (-230.6415254327) to atol=1e-08 by difference (-0.0000000142).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946304560
https://github.com/psi4/psi4/pull/2155#issuecomment-946304560:89,Integrability,Message,Message,89,"All the CTests have passed, except two that are not related to this PR; 1.) sapt7 (Error Message: `'psi4.core.UHF' object has no attribute 'diis_manager'`). 2.) scf-cholesky-basis (Error message: `Energy with Cholesky 1e-7: computed value (-230.6415254470) does not match (-230.6415254327) to atol=1e-08 by difference (-0.0000000142).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946304560
https://github.com/psi4/psi4/pull/2155#issuecomment-946304560:187,Integrability,message,message,187,"All the CTests have passed, except two that are not related to this PR; 1.) sapt7 (Error Message: `'psi4.core.UHF' object has no attribute 'diis_manager'`). 2.) scf-cholesky-basis (Error message: `Energy with Cholesky 1e-7: computed value (-230.6415254470) does not match (-230.6415254327) to atol=1e-08 by difference (-0.0000000142).`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946304560
https://github.com/psi4/psi4/pull/2155#issuecomment-946324182:452,Availability,failure,failure,452,"Except for compiling docs, the `Inc. fock build` naming issue referenced earlier, and this following issue, this PR should be good to go:. Select pytests from `tests/pytests/test_standard_suite.py::test_mp2_hessian_module` are NOT passing. Why is this the case? Is this to be expected?. All CTests passed except sapt7 and scf-cholesky-basis. The latter is fixed when envvar `MKL_CBWR=AVX`.; All pytests passed EXCEPT most of the mp2 Hessian tests (70% failure rate).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946324182
https://github.com/psi4/psi4/pull/2155#issuecomment-946324182:160,Testability,test,tests,160,"Except for compiling docs, the `Inc. fock build` naming issue referenced earlier, and this following issue, this PR should be good to go:. Select pytests from `tests/pytests/test_standard_suite.py::test_mp2_hessian_module` are NOT passing. Why is this the case? Is this to be expected?. All CTests passed except sapt7 and scf-cholesky-basis. The latter is fixed when envvar `MKL_CBWR=AVX`.; All pytests passed EXCEPT most of the mp2 Hessian tests (70% failure rate).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946324182
https://github.com/psi4/psi4/pull/2155#issuecomment-946324182:441,Testability,test,tests,441,"Except for compiling docs, the `Inc. fock build` naming issue referenced earlier, and this following issue, this PR should be good to go:. Select pytests from `tests/pytests/test_standard_suite.py::test_mp2_hessian_module` are NOT passing. Why is this the case? Is this to be expected?. All CTests passed except sapt7 and scf-cholesky-basis. The latter is fixed when envvar `MKL_CBWR=AVX`.; All pytests passed EXCEPT most of the mp2 Hessian tests (70% failure rate).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946324182
https://github.com/psi4/psi4/pull/2155#issuecomment-946763755:20,Availability,failure,failure,20,I don't reproduce a failure of `tests/pytests/test_standard_suite.py::test_mp2_hessian_module` on master. I don't have enough details to say more. `sapt7` is indeed unrelated to this PR. See #2327.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946763755
https://github.com/psi4/psi4/pull/2155#issuecomment-946763755:32,Testability,test,tests,32,I don't reproduce a failure of `tests/pytests/test_standard_suite.py::test_mp2_hessian_module` on master. I don't have enough details to say more. `sapt7` is indeed unrelated to this PR. See #2327.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946763755
https://github.com/psi4/psi4/pull/2155#issuecomment-946767530:22,Availability,failure,failure,22,"> I don't reproduce a failure of tests/pytests/test_standard_suite.py::test_mp2_hessian_module on master. I don't have enough details to say more. This test would need a recent qcel/qcng pair to pass. Andy's trying to update his. I'd be surprised if this PR is implicated. @andyj10224, if you rebase as of this morning, the clang CI lane will work again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946767530
https://github.com/psi4/psi4/pull/2155#issuecomment-946767530:218,Deployability,update,update,218,"> I don't reproduce a failure of tests/pytests/test_standard_suite.py::test_mp2_hessian_module on master. I don't have enough details to say more. This test would need a recent qcel/qcng pair to pass. Andy's trying to update his. I'd be surprised if this PR is implicated. @andyj10224, if you rebase as of this morning, the clang CI lane will work again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946767530
https://github.com/psi4/psi4/pull/2155#issuecomment-946767530:33,Testability,test,tests,33,"> I don't reproduce a failure of tests/pytests/test_standard_suite.py::test_mp2_hessian_module on master. I don't have enough details to say more. This test would need a recent qcel/qcng pair to pass. Andy's trying to update his. I'd be surprised if this PR is implicated. @andyj10224, if you rebase as of this morning, the clang CI lane will work again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946767530
https://github.com/psi4/psi4/pull/2155#issuecomment-946767530:152,Testability,test,test,152,"> I don't reproduce a failure of tests/pytests/test_standard_suite.py::test_mp2_hessian_module on master. I don't have enough details to say more. This test would need a recent qcel/qcng pair to pass. Andy's trying to update his. I'd be surprised if this PR is implicated. @andyj10224, if you rebase as of this morning, the clang CI lane will work again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946767530
https://github.com/psi4/psi4/pull/2155#issuecomment-946829083:24,Availability,failure,failure,24,"> > I don't reproduce a failure of tests/pytests/test_standard_suite.py::test_mp2_hessian_module on master. I don't have enough details to say more.; > ; > This test would need a recent qcel/qcng pair to pass. Andy's trying to update his. I'd be surprised if this PR is implicated.; > ; > @andyj10224, if you rebase as of this morning, the clang CI lane will work again. @loriab @JonathonMisiewicz I updated my qcel/qcng, and the mp2 hessian tests now pass. Now I just need to compile the docs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946829083
https://github.com/psi4/psi4/pull/2155#issuecomment-946829083:227,Deployability,update,update,227,"> > I don't reproduce a failure of tests/pytests/test_standard_suite.py::test_mp2_hessian_module on master. I don't have enough details to say more.; > ; > This test would need a recent qcel/qcng pair to pass. Andy's trying to update his. I'd be surprised if this PR is implicated.; > ; > @andyj10224, if you rebase as of this morning, the clang CI lane will work again. @loriab @JonathonMisiewicz I updated my qcel/qcng, and the mp2 hessian tests now pass. Now I just need to compile the docs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946829083
https://github.com/psi4/psi4/pull/2155#issuecomment-946829083:400,Deployability,update,updated,400,"> > I don't reproduce a failure of tests/pytests/test_standard_suite.py::test_mp2_hessian_module on master. I don't have enough details to say more.; > ; > This test would need a recent qcel/qcng pair to pass. Andy's trying to update his. I'd be surprised if this PR is implicated.; > ; > @andyj10224, if you rebase as of this morning, the clang CI lane will work again. @loriab @JonathonMisiewicz I updated my qcel/qcng, and the mp2 hessian tests now pass. Now I just need to compile the docs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946829083
https://github.com/psi4/psi4/pull/2155#issuecomment-946829083:35,Testability,test,tests,35,"> > I don't reproduce a failure of tests/pytests/test_standard_suite.py::test_mp2_hessian_module on master. I don't have enough details to say more.; > ; > This test would need a recent qcel/qcng pair to pass. Andy's trying to update his. I'd be surprised if this PR is implicated.; > ; > @andyj10224, if you rebase as of this morning, the clang CI lane will work again. @loriab @JonathonMisiewicz I updated my qcel/qcng, and the mp2 hessian tests now pass. Now I just need to compile the docs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946829083
https://github.com/psi4/psi4/pull/2155#issuecomment-946829083:161,Testability,test,test,161,"> > I don't reproduce a failure of tests/pytests/test_standard_suite.py::test_mp2_hessian_module on master. I don't have enough details to say more.; > ; > This test would need a recent qcel/qcng pair to pass. Andy's trying to update his. I'd be surprised if this PR is implicated.; > ; > @andyj10224, if you rebase as of this morning, the clang CI lane will work again. @loriab @JonathonMisiewicz I updated my qcel/qcng, and the mp2 hessian tests now pass. Now I just need to compile the docs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946829083
https://github.com/psi4/psi4/pull/2155#issuecomment-946829083:442,Testability,test,tests,442,"> > I don't reproduce a failure of tests/pytests/test_standard_suite.py::test_mp2_hessian_module on master. I don't have enough details to say more.; > ; > This test would need a recent qcel/qcng pair to pass. Andy's trying to update his. I'd be surprised if this PR is implicated.; > ; > @andyj10224, if you rebase as of this morning, the clang CI lane will work again. @loriab @JonathonMisiewicz I updated my qcel/qcng, and the mp2 hessian tests now pass. Now I just need to compile the docs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946829083
https://github.com/psi4/psi4/pull/2155#issuecomment-973164399:93,Testability,test,test,93,"I'd rather have @davpoolechem officially sign off on this first. It'll be an hour before the test suite check finishes, anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-973164399
https://github.com/psi4/psi4/pull/2159#issuecomment-822602935:147,Performance,optimiz,optimization,147,"This is great! Could we also get `-O0` into the flags for Debug builds? I think it adds `-g` currently, but allows the compiler to use its default optimization (usually `-O2`), which often trips up debuggers. We can also just defer that for a different time.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2159#issuecomment-822602935
https://github.com/psi4/psi4/pull/2159#issuecomment-822605460:77,Performance,optimiz,optimization,77,"> I think it adds `-g` currently, but allows the compiler to use its default optimization (usually `-O2`), which often trips up debuggers. I can confirm this. I've been passing the `-O0` flag manually when trying to figure this bug out.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2159#issuecomment-822605460
https://github.com/psi4/psi4/pull/2159#issuecomment-822611626:40,Availability,failure,failure,40,"#2158 failed all azure - Win with a mdi failure at test time and Lin with Py detection failures at Psi configure time. So far this one is ok. It's beyond the configure, but this one is using cmake 3.19. 2158 was using cmake 3.20 which has changes to Py detection. I'm keeping an eye on both PRs, but it's hardly caused by the PR changes themselves.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2159#issuecomment-822611626
https://github.com/psi4/psi4/pull/2159#issuecomment-822611626:87,Availability,failure,failures,87,"#2158 failed all azure - Win with a mdi failure at test time and Lin with Py detection failures at Psi configure time. So far this one is ok. It's beyond the configure, but this one is using cmake 3.19. 2158 was using cmake 3.20 which has changes to Py detection. I'm keeping an eye on both PRs, but it's hardly caused by the PR changes themselves.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2159#issuecomment-822611626
https://github.com/psi4/psi4/pull/2159#issuecomment-822611626:103,Modifiability,config,configure,103,"#2158 failed all azure - Win with a mdi failure at test time and Lin with Py detection failures at Psi configure time. So far this one is ok. It's beyond the configure, but this one is using cmake 3.19. 2158 was using cmake 3.20 which has changes to Py detection. I'm keeping an eye on both PRs, but it's hardly caused by the PR changes themselves.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2159#issuecomment-822611626
https://github.com/psi4/psi4/pull/2159#issuecomment-822611626:158,Modifiability,config,configure,158,"#2158 failed all azure - Win with a mdi failure at test time and Lin with Py detection failures at Psi configure time. So far this one is ok. It's beyond the configure, but this one is using cmake 3.19. 2158 was using cmake 3.20 which has changes to Py detection. I'm keeping an eye on both PRs, but it's hardly caused by the PR changes themselves.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2159#issuecomment-822611626
https://github.com/psi4/psi4/pull/2159#issuecomment-822611626:77,Safety,detect,detection,77,"#2158 failed all azure - Win with a mdi failure at test time and Lin with Py detection failures at Psi configure time. So far this one is ok. It's beyond the configure, but this one is using cmake 3.19. 2158 was using cmake 3.20 which has changes to Py detection. I'm keeping an eye on both PRs, but it's hardly caused by the PR changes themselves.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2159#issuecomment-822611626
https://github.com/psi4/psi4/pull/2159#issuecomment-822611626:253,Safety,detect,detection,253,"#2158 failed all azure - Win with a mdi failure at test time and Lin with Py detection failures at Psi configure time. So far this one is ok. It's beyond the configure, but this one is using cmake 3.19. 2158 was using cmake 3.20 which has changes to Py detection. I'm keeping an eye on both PRs, but it's hardly caused by the PR changes themselves.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2159#issuecomment-822611626
https://github.com/psi4/psi4/pull/2159#issuecomment-822611626:51,Testability,test,test,51,"#2158 failed all azure - Win with a mdi failure at test time and Lin with Py detection failures at Psi configure time. So far this one is ok. It's beyond the configure, but this one is using cmake 3.19. 2158 was using cmake 3.20 which has changes to Py detection. I'm keeping an eye on both PRs, but it's hardly caused by the PR changes themselves.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2159#issuecomment-822611626
https://github.com/psi4/psi4/pull/2160#issuecomment-823417376:164,Testability,log,logged,164,"@taylor-a-barnes edit this line please, https://github.com/MolSSI-MDI/psi4/blob/mdi/external/upstream/mdi/CMakeLists.txt#L16 . Mostly to get Azure to trigger. I've logged back in -- sometimes that helps.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2160#issuecomment-823417376
https://github.com/psi4/psi4/pull/2160#issuecomment-823467652:26,Testability,test,tests,26,@loriab It looks like the tests still aren't running. Should I try closing this PR and creating a new one?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2160#issuecomment-823467652
https://github.com/psi4/psi4/pull/2166#issuecomment-832912260:163,Deployability,release,release,163,"Per discussion on conference call, moved to 1.5. Trying to get this in will delay 1.4, and it's not the wisest to do an API reorganization after we already have a release candidate out.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2166#issuecomment-832912260
https://github.com/psi4/psi4/issues/2174#issuecomment-879962805:36,Availability,failure,failure,36,"@susilehtola I cannot reproduce the failure on current master. Please try the _first_ input again and report back with whether the calculation succeeds. If it does, I'm going to close the issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2174#issuecomment-879962805
https://github.com/psi4/psi4/issues/2177#issuecomment-837218726:162,Modifiability,variab,variable,162,"Thanks for the report. The command for MP2 dipoles is `E, wfn = properties('mp2/6-311G**', properties=['dipole'],return_wfn=True)`. However it appears the global variable for the basis set is not set through this and the new fchk writer complains.; As a workaround you can do it like this:; ```; set basis 6-311G**; E, wfn = properties('mp2, properties=['dipole'] ,return_wfn=True); fchk(wfn, ""test4-dma.fchk""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2177#issuecomment-837218726
https://github.com/psi4/psi4/issues/2177#issuecomment-837233698:52,Modifiability,variab,variable,52,I would hope that you wouldn't need to set a global variable to get the basis set passed to the wavefunction object. Agreed that this is a bug.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2177#issuecomment-837233698
https://github.com/psi4/psi4/pull/2180#issuecomment-840026837:337,Modifiability,variab,variable,337,This pull request **fixes 5 alerts** when merging 446c9cda06c5b10c35de59720f1668093869e65e into d9d8477034143442930324f572b94359866facfe - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-22e72078e2905a1856f7a0201ceb63f627f89bf8). **fixed alerts:**. * 2 for &#39;import \*&#39; may pollute namespace; * 1 for Unused local variable; * 1 for Module\-level cyclic import; * 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2180#issuecomment-840026837
https://github.com/psi4/psi4/pull/2180#issuecomment-840626641:337,Modifiability,variab,variable,337,This pull request **fixes 5 alerts** when merging 70cbf92b6086317a9bc1b27addb35dc01e013aeb into d9d8477034143442930324f572b94359866facfe - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-18a2331a53e059d4efb3d8e5771d1a81cb9cf842). **fixed alerts:**. * 2 for &#39;import \*&#39; may pollute namespace; * 1 for Unused local variable; * 1 for Module\-level cyclic import; * 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2180#issuecomment-840626641
https://github.com/psi4/psi4/pull/2180#issuecomment-843700280:337,Modifiability,variab,variable,337,This pull request **fixes 5 alerts** when merging 1a33c699a94b219ac1f78677ff7c7d1d2ae9633a into a97ceda07370b4b327ce77e1229c9c73ecbe11c6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-f3dd5c800cedc9857a22d2e053adf844947bfde2). **fixed alerts:**. * 2 for &#39;import \*&#39; may pollute namespace; * 1 for Unused local variable; * 1 for Module\-level cyclic import; * 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2180#issuecomment-843700280
https://github.com/psi4/psi4/pull/2180#issuecomment-843818784:337,Modifiability,variab,variable,337,This pull request **fixes 5 alerts** when merging 5c8449111d5395b7681bdf87e854fe4fe08c4632 into a97ceda07370b4b327ce77e1229c9c73ecbe11c6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-8e369df073a3f0d6460b21134d06f46209346a56). **fixed alerts:**. * 2 for &#39;import \*&#39; may pollute namespace; * 1 for Unused local variable; * 1 for Module\-level cyclic import; * 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2180#issuecomment-843818784
https://github.com/psi4/psi4/pull/2180#issuecomment-844455243:337,Modifiability,variab,variable,337,This pull request **fixes 5 alerts** when merging aa52f722e36f304750019757639204d0cb98da0a into a97ceda07370b4b327ce77e1229c9c73ecbe11c6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-75cba35cdb7174276f3d428cb5ca1f16d25c0140). **fixed alerts:**. * 2 for &#39;import \*&#39; may pollute namespace; * 1 for Unused local variable; * 1 for Module\-level cyclic import; * 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2180#issuecomment-844455243
https://github.com/psi4/psi4/pull/2180#issuecomment-844793571:337,Modifiability,variab,variable,337,This pull request **fixes 5 alerts** when merging 6e22cbaa74043ff09b0f8f4021c564ba6176205c into a97ceda07370b4b327ce77e1229c9c73ecbe11c6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-449dabd78dc596e8015ffaa2cd3f8d9f92ce9ee1). **fixed alerts:**. * 2 for &#39;import \*&#39; may pollute namespace; * 1 for Unused local variable; * 1 for Module\-level cyclic import; * 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2180#issuecomment-844793571
https://github.com/psi4/psi4/pull/2180#issuecomment-845548975:337,Modifiability,variab,variable,337,This pull request **fixes 5 alerts** when merging d1fdb12e1be807d87963825d4f4b4b0297732689 into a97ceda07370b4b327ce77e1229c9c73ecbe11c6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-1018b07a742c71c8b1b0466674ffc29f35f097fe). **fixed alerts:**. * 2 for &#39;import \*&#39; may pollute namespace; * 1 for Unused local variable; * 1 for Module\-level cyclic import; * 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2180#issuecomment-845548975
https://github.com/psi4/psi4/issues/2183#issuecomment-843034642:310,Availability,down,down,310,"The mathematical problem here is solving a matrix equation, not finding the lowest eigenpairs. As such, Davidson's algorithm is not relevant to the problem, and Psi uses preconditioned conjugate gradients in the SOSCF solver instead. PCG assumes the matrix (MO hessian) is positive semi-definite and can break down otherwise. How sure are you that the MO hessian is positive semi-definite across your iterations? That may be the cause of the issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2183#issuecomment-843034642
https://github.com/psi4/psi4/pull/2184#issuecomment-845956657:22,Integrability,contract,contracted,22,"Yeah. The C matrix is contracted against the AO ERI integrals, so you need to pass in C matrices in the AO basis. I missed that the first time. 😅",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2184#issuecomment-845956657
https://github.com/psi4/psi4/pull/2187#issuecomment-854300953:292,Safety,sanity check,sanity check,292,"> > It looks like the diff is not clean: there are changes that don't appear to arise from this pull. There's also a merge conflict.; > ; > Yes, we're working on it. Much history in this branch. Ugh, just spent all night rebasing, should be ready now. I will test my code again tomorrow as a sanity check :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2187#issuecomment-854300953
https://github.com/psi4/psi4/pull/2187#issuecomment-854300953:259,Testability,test,test,259,"> > It looks like the diff is not clean: there are changes that don't appear to arise from this pull. There's also a merge conflict.; > ; > Yes, we're working on it. Much history in this branch. Ugh, just spent all night rebasing, should be ready now. I will test my code again tomorrow as a sanity check :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2187#issuecomment-854300953
https://github.com/psi4/psi4/pull/2187#issuecomment-855159767:96,Availability,error,errors,96,"I tested my code after rebasing, still looks just like it did before. I updated the timings and errors graphs based on the results of my rebased code (I used an intel compiler this time, rather than GCC)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2187#issuecomment-855159767
https://github.com/psi4/psi4/pull/2187#issuecomment-855159767:72,Deployability,update,updated,72,"I tested my code after rebasing, still looks just like it did before. I updated the timings and errors graphs based on the results of my rebased code (I used an intel compiler this time, rather than GCC)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2187#issuecomment-855159767
https://github.com/psi4/psi4/pull/2187#issuecomment-855159767:2,Testability,test,tested,2,"I tested my code after rebasing, still looks just like it did before. I updated the timings and errors graphs based on the results of my rebased code (I used an intel compiler this time, rather than GCC)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2187#issuecomment-855159767
https://github.com/psi4/psi4/pull/2187#issuecomment-855284459:206,Testability,test,test,206,"> From what I understood of the code, LinK is only used for incremental Fock builds.; > ; > However, the algorithm should also be useful for full Fock builds. My code works for full Fock builds too (I will test this later)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2187#issuecomment-855284459
https://github.com/psi4/psi4/pull/2187#issuecomment-855327981:213,Testability,test,test,213,"> > From what I understood of the code, LinK is only used for incremental Fock builds.; > > However, the algorithm should also be useful for full Fock builds.; > ; > My code works for full Fock builds too (I will test this later). Of course it should, since full Fock is differential Fock with `delta P = P`. My point was just that the code is now using the non-LinK algorithm for the full build step...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2187#issuecomment-855327981
https://github.com/psi4/psi4/pull/2187#issuecomment-973168059:106,Availability,ping,ping,106,"I think this PR is next on your list, since #2155 merge is imminent. Rebase, fix the merge conflicts, and ping me when this is ready for review.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2187#issuecomment-973168059
https://github.com/psi4/psi4/pull/2190#issuecomment-857127925:8,Deployability,update,update,8,"Can you update the test to also test using MOs obtained from an SCF that did _not_ finish successfully?. I like the interface, but it'd be best to get more opinions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2190#issuecomment-857127925
https://github.com/psi4/psi4/pull/2190#issuecomment-857127925:116,Integrability,interface,interface,116,"Can you update the test to also test using MOs obtained from an SCF that did _not_ finish successfully?. I like the interface, but it'd be best to get more opinions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2190#issuecomment-857127925
https://github.com/psi4/psi4/pull/2190#issuecomment-857127925:19,Testability,test,test,19,"Can you update the test to also test using MOs obtained from an SCF that did _not_ finish successfully?. I like the interface, but it'd be best to get more opinions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2190#issuecomment-857127925
https://github.com/psi4/psi4/pull/2190#issuecomment-857127925:32,Testability,test,test,32,"Can you update the test to also test using MOs obtained from an SCF that did _not_ finish successfully?. I like the interface, but it'd be best to get more opinions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2190#issuecomment-857127925
https://github.com/psi4/psi4/pull/2190#issuecomment-871322663:92,Testability,test,test,92,"This is ready for review.; @PeterKraus you were a bit too fast :). ideally we should have a test for `restart_file` usage with psi4 intermediates, but I don't know where and how it works.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2190#issuecomment-871322663
https://github.com/psi4/psi4/pull/2190#issuecomment-871423573:150,Deployability,release,release,150,"Before I start reviewing, is this a 1.4 target? Lori [has decreed](https://github.com/psi4/psi4/pull/2154#issuecomment-870728272) that the target 1.4 release date is next week.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2190#issuecomment-871423573
https://github.com/psi4/psi4/pull/2190#issuecomment-871427517:60,Deployability,release,release,60,> is this a 1.4 target?. Not sure. Maybe better for a 1.4.x release since it's not a bug fix but a quality of life change.; edit: Well it does fix a bug with providing `npy` files for restarts.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2190#issuecomment-871427517
https://github.com/psi4/psi4/pull/2190#issuecomment-873261074:2,Deployability,update,updated,2,I updated the `energy` function docstring to include the boolean option of write_orbitals,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2190#issuecomment-873261074
https://github.com/psi4/psi4/pull/2190#issuecomment-873261074:15,Energy Efficiency,energy,energy,15,I updated the `energy` function docstring to include the boolean option of write_orbitals,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2190#issuecomment-873261074
https://github.com/psi4/psi4/pull/2190#issuecomment-876678713:28,Deployability,update,update,28,"@hokru, can we get a status update on this? I'd like to start hacking up ADIIS/EDIIS, so I'd appreciate being able to rebase onto this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2190#issuecomment-876678713
https://github.com/psi4/psi4/pull/2191#issuecomment-859723675:39,Testability,test,tests,39,"Looks good to me, and particularly the tests. Thanks for fixing this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2191#issuecomment-859723675
https://github.com/psi4/psi4/pull/2191#issuecomment-859899767:13,Testability,test,test,13,"Is there any test coverage of the new `messy` behavior? If not, could we add it?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2191#issuecomment-859899767
https://github.com/psi4/psi4/pull/2191#issuecomment-859902304:15,Testability,test,test,15,"> Is there any test coverage of the new `messy` behavior? If not, could we add it?. It'll get tested in qcengine (PR not up yet). I'm writing some systematic tests for files, threading, etc. over there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2191#issuecomment-859902304
https://github.com/psi4/psi4/pull/2191#issuecomment-859902304:94,Testability,test,tested,94,"> Is there any test coverage of the new `messy` behavior? If not, could we add it?. It'll get tested in qcengine (PR not up yet). I'm writing some systematic tests for files, threading, etc. over there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2191#issuecomment-859902304
https://github.com/psi4/psi4/pull/2191#issuecomment-859902304:158,Testability,test,tests,158,"> Is there any test coverage of the new `messy` behavior? If not, could we add it?. It'll get tested in qcengine (PR not up yet). I'm writing some systematic tests for files, threading, etc. over there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2191#issuecomment-859902304
https://github.com/psi4/psi4/pull/2191#issuecomment-860967229:6,Deployability,update,updated,6,"libxc updated to 5.1.5 and packages built, though min is still 5.1.2. rtg, imo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2191#issuecomment-860967229
https://github.com/psi4/psi4/issues/2192#issuecomment-861465776:36,Modifiability,refactor,refactoring,36,"So it probably is something from my refactoring, which is strange because I didn't touch any of the parallelization lines... I'll look into this, but it might take me some time to get set up on the new cluster.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2192#issuecomment-861465776
https://github.com/psi4/psi4/issues/2192#issuecomment-861469239:17,Testability,test,tests,17,"According to our tests, it is related to minsthelper.cc. Specifically the pragma statement at line 2470, we just turned it off. //#pragma omp parallel for ; for (int aux = 0; aux &lt; np; aux++) { ; for (int p = 0; p &lt; nprim; p++) { ; for (int q = 0; q &lt;= p; q++) {. @JonathonMisiewicz",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2192#issuecomment-861469239
https://github.com/psi4/psi4/issues/2192#issuecomment-861481737:74,Security,access,accessing,74,"The issue is probably a few lines lower than that: l. 2474 and l.2475 are accessing `data`, which initializes at the first element in the vector, when it should initialize at the first entry for this thread, `data[aux * tri]`... I'll get a fix up once I'm able to run tests on my cluster. ""Turning parallelization off"" is not the correct fix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2192#issuecomment-861481737
https://github.com/psi4/psi4/issues/2192#issuecomment-861481737:268,Testability,test,tests,268,"The issue is probably a few lines lower than that: l. 2474 and l.2475 are accessing `data`, which initializes at the first element in the vector, when it should initialize at the first entry for this thread, `data[aux * tri]`... I'll get a fix up once I'm able to run tests on my cluster. ""Turning parallelization off"" is not the correct fix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2192#issuecomment-861481737
https://github.com/psi4/psi4/issues/2192#issuecomment-863224877:39,Deployability,patch,patch,39,"If anybody needs this immediately, the patch to get threaded gradients working is. ```; --- a/psi4/src/psi4/libmints/mintshelper.cc; +++ b/psi4/src/psi4/libmints/mintshelper.cc; @@ -2469,11 +2469,12 @@ SharedMatrix MintsHelper::three_idx_grad(const std::string& aux_name, const std:; auto idx3p = idx3_matrix->pointer();; #pragma omp parallel for; for (int aux = 0; aux < np; aux++) {; + auto elt = &data[ntri * aux];; for (int p = 0; p < nprim; p++) {; for (int q = 0; q <= p; q++) {; - idx3p[aux][p * nprim + q] = *data;; - idx3p[aux][q * nprim + p] = *data;; - data++;; + idx3p[aux][p * nprim + q] = *elt;; + idx3p[aux][q * nprim + p] = *elt;; + elt++;; }; }; }; ```. I want to make sure that the quick tests pass with threading before submitting the PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2192#issuecomment-863224877
https://github.com/psi4/psi4/issues/2192#issuecomment-863224877:706,Testability,test,tests,706,"If anybody needs this immediately, the patch to get threaded gradients working is. ```; --- a/psi4/src/psi4/libmints/mintshelper.cc; +++ b/psi4/src/psi4/libmints/mintshelper.cc; @@ -2469,11 +2469,12 @@ SharedMatrix MintsHelper::three_idx_grad(const std::string& aux_name, const std:; auto idx3p = idx3_matrix->pointer();; #pragma omp parallel for; for (int aux = 0; aux < np; aux++) {; + auto elt = &data[ntri * aux];; for (int p = 0; p < nprim; p++) {; for (int q = 0; q <= p; q++) {; - idx3p[aux][p * nprim + q] = *data;; - idx3p[aux][q * nprim + p] = *data;; - data++;; + idx3p[aux][p * nprim + q] = *elt;; + idx3p[aux][q * nprim + p] = *elt;; + elt++;; }; }; }; ```. I want to make sure that the quick tests pass with threading before submitting the PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2192#issuecomment-863224877
https://github.com/psi4/psi4/issues/2195#issuecomment-864987485:597,Safety,safe,safe,597,"The problem is this part in the output. ```; 	Back-transformation to cartesian coordinates...; 	The INTCO_EXCEPTion handler:; 	TORS::compute_val: unable to compute torsion value; 	Dynamic level is 0.; 	exc.g_really_quit() is ; ```. The current C++ optking will be replaced with a python version: https://github.com/psi-rking/optking; You can try it out already (see instructions in the repo) unless you require the CBS driver. Otherwise you have to chose a different coordinate systems https://psicode.org/psi4manual/master/autodir_options_c/module__optking.html#opt-coordinates; `CARTESIAN` is a safe, but slowly converging, choice.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2195#issuecomment-864987485
https://github.com/psi4/psi4/issues/2198#issuecomment-868806792:502,Energy Efficiency,adapt,adapt,502,"Hi Daniele. This combination is not supported. I think this functionality request is perhaps better aimed at the QCSchema developers (https://github.com/MolSSI/QCSchema/issues). One main issue is the ambiguity of what an extrapolation (or a composite recipe) actually means. Running CBS jobs via QCSchema is not implemented in Psi4, and my personal opinion is that it likely won't be implemented in Psi4 itself anytime soon. What may happen is that someone will take the CBS functionality out of Psi4, adapt it to create ""schema"" jobs for each calculation required in a similar way we do internally in the CBS wrapper, and then combine the individual atomic results to arrive at the composite result.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2198#issuecomment-868806792
https://github.com/psi4/psi4/issues/2198#issuecomment-868806792:610,Integrability,wrap,wrapper,610,"Hi Daniele. This combination is not supported. I think this functionality request is perhaps better aimed at the QCSchema developers (https://github.com/MolSSI/QCSchema/issues). One main issue is the ambiguity of what an extrapolation (or a composite recipe) actually means. Running CBS jobs via QCSchema is not implemented in Psi4, and my personal opinion is that it likely won't be implemented in Psi4 itself anytime soon. What may happen is that someone will take the CBS functionality out of Psi4, adapt it to create ""schema"" jobs for each calculation required in a similar way we do internally in the CBS wrapper, and then combine the individual atomic results to arrive at the composite result.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2198#issuecomment-868806792
https://github.com/psi4/psi4/issues/2198#issuecomment-868806792:502,Modifiability,adapt,adapt,502,"Hi Daniele. This combination is not supported. I think this functionality request is perhaps better aimed at the QCSchema developers (https://github.com/MolSSI/QCSchema/issues). One main issue is the ambiguity of what an extrapolation (or a composite recipe) actually means. Running CBS jobs via QCSchema is not implemented in Psi4, and my personal opinion is that it likely won't be implemented in Psi4 itself anytime soon. What may happen is that someone will take the CBS functionality out of Psi4, adapt it to create ""schema"" jobs for each calculation required in a similar way we do internally in the CBS wrapper, and then combine the individual atomic results to arrive at the composite result.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2198#issuecomment-868806792
https://github.com/psi4/psi4/issues/2198#issuecomment-868938349:354,Deployability,update,update,354,"Glad you're finding QCSchema input useful!. Peter's right that not all calculations are possible at the moment through the schema input, most notably optimizations and the ""wrappers"" like cbs and nbody. What the schema is targeted to express at the moment are single-points, and that's how QCEngine is using it in the various <program>Harnesses. A major update coming to psi4 is the ""distributed"" driver that reworks wrapper communication to be more dict-like. The schema input to wrappers isn't well-defined yet, but it will probably inherit from the single-point schema (`AtomicInput`). I think then that what you're asking for could be arranged within schema_wrapper.py, but I'm just not sure yet. Glad to know you're interested, and we'll keep this use case in mind.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2198#issuecomment-868938349
https://github.com/psi4/psi4/issues/2198#issuecomment-868938349:173,Integrability,wrap,wrappers,173,"Glad you're finding QCSchema input useful!. Peter's right that not all calculations are possible at the moment through the schema input, most notably optimizations and the ""wrappers"" like cbs and nbody. What the schema is targeted to express at the moment are single-points, and that's how QCEngine is using it in the various <program>Harnesses. A major update coming to psi4 is the ""distributed"" driver that reworks wrapper communication to be more dict-like. The schema input to wrappers isn't well-defined yet, but it will probably inherit from the single-point schema (`AtomicInput`). I think then that what you're asking for could be arranged within schema_wrapper.py, but I'm just not sure yet. Glad to know you're interested, and we'll keep this use case in mind.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2198#issuecomment-868938349
https://github.com/psi4/psi4/issues/2198#issuecomment-868938349:417,Integrability,wrap,wrapper,417,"Glad you're finding QCSchema input useful!. Peter's right that not all calculations are possible at the moment through the schema input, most notably optimizations and the ""wrappers"" like cbs and nbody. What the schema is targeted to express at the moment are single-points, and that's how QCEngine is using it in the various <program>Harnesses. A major update coming to psi4 is the ""distributed"" driver that reworks wrapper communication to be more dict-like. The schema input to wrappers isn't well-defined yet, but it will probably inherit from the single-point schema (`AtomicInput`). I think then that what you're asking for could be arranged within schema_wrapper.py, but I'm just not sure yet. Glad to know you're interested, and we'll keep this use case in mind.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2198#issuecomment-868938349
https://github.com/psi4/psi4/issues/2198#issuecomment-868938349:481,Integrability,wrap,wrappers,481,"Glad you're finding QCSchema input useful!. Peter's right that not all calculations are possible at the moment through the schema input, most notably optimizations and the ""wrappers"" like cbs and nbody. What the schema is targeted to express at the moment are single-points, and that's how QCEngine is using it in the various <program>Harnesses. A major update coming to psi4 is the ""distributed"" driver that reworks wrapper communication to be more dict-like. The schema input to wrappers isn't well-defined yet, but it will probably inherit from the single-point schema (`AtomicInput`). I think then that what you're asking for could be arranged within schema_wrapper.py, but I'm just not sure yet. Glad to know you're interested, and we'll keep this use case in mind.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2198#issuecomment-868938349
https://github.com/psi4/psi4/issues/2198#issuecomment-868938349:535,Modifiability,inherit,inherit,535,"Glad you're finding QCSchema input useful!. Peter's right that not all calculations are possible at the moment through the schema input, most notably optimizations and the ""wrappers"" like cbs and nbody. What the schema is targeted to express at the moment are single-points, and that's how QCEngine is using it in the various <program>Harnesses. A major update coming to psi4 is the ""distributed"" driver that reworks wrapper communication to be more dict-like. The schema input to wrappers isn't well-defined yet, but it will probably inherit from the single-point schema (`AtomicInput`). I think then that what you're asking for could be arranged within schema_wrapper.py, but I'm just not sure yet. Glad to know you're interested, and we'll keep this use case in mind.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2198#issuecomment-868938349
https://github.com/psi4/psi4/issues/2198#issuecomment-868938349:150,Performance,optimiz,optimizations,150,"Glad you're finding QCSchema input useful!. Peter's right that not all calculations are possible at the moment through the schema input, most notably optimizations and the ""wrappers"" like cbs and nbody. What the schema is targeted to express at the moment are single-points, and that's how QCEngine is using it in the various <program>Harnesses. A major update coming to psi4 is the ""distributed"" driver that reworks wrapper communication to be more dict-like. The schema input to wrappers isn't well-defined yet, but it will probably inherit from the single-point schema (`AtomicInput`). I think then that what you're asking for could be arranged within schema_wrapper.py, but I'm just not sure yet. Glad to know you're interested, and we'll keep this use case in mind.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2198#issuecomment-868938349
https://github.com/psi4/psi4/issues/2199#issuecomment-867164975:0,Availability,Error,Error,0,"Error is; ```; Traceback (most recent call last):; File ""/usr/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 29, in <module>; File ""/usr/lib64//python3.9/site-packages/psi4/driver/driver.py"", line 556, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/usr/lib64//python3.9/site-packages/psi4/driver/procrouting/proc.py"", line 2002, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/usr/lib64//python3.9/site-packages/psi4/driver/procrouting/proc.py"", line 1272, in scf_helper; p4util.banner(name.upper()). AttributeError: 'dict' object has no attribute 'upper'. Printing out the relevant lines from the Psithon --> Python processed input file:; ""x_functionals"": {""GGA_X_PBE"": {}},; ""c_functionals"": {""GGA_C_PBE"": {}}; }; core.set_global_option(""BASIS"", ""pcseg-2""); core.set_global_option(""BASIS_GUESS"", ""true""); --> energy('scf', dft_functional=my_pbe); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2199#issuecomment-867164975
https://github.com/psi4/psi4/issues/2199#issuecomment-867164975:229,Energy Efficiency,energy,energy,229,"Error is; ```; Traceback (most recent call last):; File ""/usr/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 29, in <module>; File ""/usr/lib64//python3.9/site-packages/psi4/driver/driver.py"", line 556, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/usr/lib64//python3.9/site-packages/psi4/driver/procrouting/proc.py"", line 2002, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/usr/lib64//python3.9/site-packages/psi4/driver/procrouting/proc.py"", line 1272, in scf_helper; p4util.banner(name.upper()). AttributeError: 'dict' object has no attribute 'upper'. Printing out the relevant lines from the Psithon --> Python processed input file:; ""x_functionals"": {""GGA_X_PBE"": {}},; ""c_functionals"": {""GGA_C_PBE"": {}}; }; core.set_global_option(""BASIS"", ""pcseg-2""); core.set_global_option(""BASIS_GUESS"", ""true""); --> energy('scf', dft_functional=my_pbe); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2199#issuecomment-867164975
https://github.com/psi4/psi4/issues/2199#issuecomment-867164975:255,Energy Efficiency,energy,energy,255,"Error is; ```; Traceback (most recent call last):; File ""/usr/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 29, in <module>; File ""/usr/lib64//python3.9/site-packages/psi4/driver/driver.py"", line 556, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/usr/lib64//python3.9/site-packages/psi4/driver/procrouting/proc.py"", line 2002, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/usr/lib64//python3.9/site-packages/psi4/driver/procrouting/proc.py"", line 1272, in scf_helper; p4util.banner(name.upper()). AttributeError: 'dict' object has no attribute 'upper'. Printing out the relevant lines from the Psithon --> Python processed input file:; ""x_functionals"": {""GGA_X_PBE"": {}},; ""c_functionals"": {""GGA_C_PBE"": {}}; }; core.set_global_option(""BASIS"", ""pcseg-2""); core.set_global_option(""BASIS_GUESS"", ""true""); --> energy('scf', dft_functional=my_pbe); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2199#issuecomment-867164975
https://github.com/psi4/psi4/issues/2199#issuecomment-867164975:910,Energy Efficiency,energy,energy,910,"Error is; ```; Traceback (most recent call last):; File ""/usr/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 29, in <module>; File ""/usr/lib64//python3.9/site-packages/psi4/driver/driver.py"", line 556, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/usr/lib64//python3.9/site-packages/psi4/driver/procrouting/proc.py"", line 2002, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/usr/lib64//python3.9/site-packages/psi4/driver/procrouting/proc.py"", line 1272, in scf_helper; p4util.banner(name.upper()). AttributeError: 'dict' object has no attribute 'upper'. Printing out the relevant lines from the Psithon --> Python processed input file:; ""x_functionals"": {""GGA_X_PBE"": {}},; ""c_functionals"": {""GGA_C_PBE"": {}}; }; core.set_global_option(""BASIS"", ""pcseg-2""); core.set_global_option(""BASIS_GUESS"", ""true""); --> energy('scf', dft_functional=my_pbe); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2199#issuecomment-867164975
https://github.com/psi4/psi4/pull/2200#issuecomment-867773626:43,Deployability,toggle,toggles,43,"What happens if a user runs a computation, toggles whether X2C is on, and then calls the wavefunction's `compute_gradient` method?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2200#issuecomment-867773626
https://github.com/psi4/psi4/pull/2200#issuecomment-869752875:306,Availability,avail,available,306,"> What happens if a user runs a computation, toggles whether X2C is on, and then calls the wavefunction's compute_gradient method?. Apparently even the non-rel returns a `psi4.core.RHF`, and since that hasn't had it's `compute_gradient` implemented, the parent `Wavefunction`'s `Analytic gradients are not available for this wavefunction.` is thrown. Not what I was expecting (or probably what someone using a C++ API was expecting), but it does shut down a way to get the wrong answer by evading the Py APi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2200#issuecomment-869752875
https://github.com/psi4/psi4/pull/2200#issuecomment-869752875:451,Availability,down,down,451,"> What happens if a user runs a computation, toggles whether X2C is on, and then calls the wavefunction's compute_gradient method?. Apparently even the non-rel returns a `psi4.core.RHF`, and since that hasn't had it's `compute_gradient` implemented, the parent `Wavefunction`'s `Analytic gradients are not available for this wavefunction.` is thrown. Not what I was expecting (or probably what someone using a C++ API was expecting), but it does shut down a way to get the wrong answer by evading the Py APi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2200#issuecomment-869752875
https://github.com/psi4/psi4/pull/2200#issuecomment-869752875:45,Deployability,toggle,toggles,45,"> What happens if a user runs a computation, toggles whether X2C is on, and then calls the wavefunction's compute_gradient method?. Apparently even the non-rel returns a `psi4.core.RHF`, and since that hasn't had it's `compute_gradient` implemented, the parent `Wavefunction`'s `Analytic gradients are not available for this wavefunction.` is thrown. Not what I was expecting (or probably what someone using a C++ API was expecting), but it does shut down a way to get the wrong answer by evading the Py APi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2200#issuecomment-869752875
https://github.com/psi4/psi4/pull/2200#issuecomment-869809049:87,Availability,error,error,87,"`compute_gradient` after a `energy(""ccsd"")` and `gradient(""scf"")` also throw the wfn.h error, so no worries there. py-side `gradient(""ccsd"")` is what this PR misses catching, as I see it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2200#issuecomment-869809049
https://github.com/psi4/psi4/pull/2200#issuecomment-869809049:28,Energy Efficiency,energy,energy,28,"`compute_gradient` after a `energy(""ccsd"")` and `gradient(""scf"")` also throw the wfn.h error, so no worries there. py-side `gradient(""ccsd"")` is what this PR misses catching, as I see it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2200#issuecomment-869809049
https://github.com/psi4/psi4/pull/2200#issuecomment-869848956:154,Testability,test,test,154,"How about diverting to findif, like PCM? This'll need changing for DDD, but at least we'll notice. (Note that PR not in self-consistent state at present. test needs replacing.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2200#issuecomment-869848956
https://github.com/psi4/psi4/pull/2200#issuecomment-869854948:245,Deployability,update,updated,245,"Great idea! I still have some concerns about potential ways to abuse `compute_gradient`, but my test cases won't even run for reasons far beyond the scope of this PR. Issue list is about to grow, but I'll be happy with the PR once the tests are updated. Thanks for this, Lori.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2200#issuecomment-869854948
https://github.com/psi4/psi4/pull/2200#issuecomment-869854948:96,Testability,test,test,96,"Great idea! I still have some concerns about potential ways to abuse `compute_gradient`, but my test cases won't even run for reasons far beyond the scope of this PR. Issue list is about to grow, but I'll be happy with the PR once the tests are updated. Thanks for this, Lori.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2200#issuecomment-869854948
https://github.com/psi4/psi4/pull/2200#issuecomment-869854948:235,Testability,test,tests,235,"Great idea! I still have some concerns about potential ways to abuse `compute_gradient`, but my test cases won't even run for reasons far beyond the scope of this PR. Issue list is about to grow, but I'll be happy with the PR once the tests are updated. Thanks for this, Lori.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2200#issuecomment-869854948
https://github.com/psi4/psi4/issues/2203#issuecomment-867924282:80,Modifiability,variab,variables,80,"OEProp isn't given a name when it's called, so it assigns no name at all to its variables. Hence `<name> DIPOLE` becomes `DIPOLE`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2203#issuecomment-867924282
https://github.com/psi4/psi4/issues/2203#issuecomment-869187545:530,Deployability,update,update,530,"I'm not sure how often `oeprop` really gets called directly in an input, so this is an interesting case. I'm actually tempted to say this is ""expected"" behavior - if you're not calling `oeprop` within the pre-built workflow of another method, maybe it shouldn't get a name unless you specify one. . the only issue is you may not be confident in _how_ the dipole was calculated - e.g. if you run a CCSD energy calculation, then call `oeprop`, does it form the CCSD density and contract with the dipole integrals? generally we only update the density in `properties`, so I'd wager you would actually get the SCF dipole back out. if I recall, it should be printed in the output file which density is used, but if you pull results directly from the python output then you won't necessarily know.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2203#issuecomment-869187545
https://github.com/psi4/psi4/issues/2203#issuecomment-869187545:402,Energy Efficiency,energy,energy,402,"I'm not sure how often `oeprop` really gets called directly in an input, so this is an interesting case. I'm actually tempted to say this is ""expected"" behavior - if you're not calling `oeprop` within the pre-built workflow of another method, maybe it shouldn't get a name unless you specify one. . the only issue is you may not be confident in _how_ the dipole was calculated - e.g. if you run a CCSD energy calculation, then call `oeprop`, does it form the CCSD density and contract with the dipole integrals? generally we only update the density in `properties`, so I'd wager you would actually get the SCF dipole back out. if I recall, it should be printed in the output file which density is used, but if you pull results directly from the python output then you won't necessarily know.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2203#issuecomment-869187545
https://github.com/psi4/psi4/issues/2203#issuecomment-869187545:476,Integrability,contract,contract,476,"I'm not sure how often `oeprop` really gets called directly in an input, so this is an interesting case. I'm actually tempted to say this is ""expected"" behavior - if you're not calling `oeprop` within the pre-built workflow of another method, maybe it shouldn't get a name unless you specify one. . the only issue is you may not be confident in _how_ the dipole was calculated - e.g. if you run a CCSD energy calculation, then call `oeprop`, does it form the CCSD density and contract with the dipole integrals? generally we only update the density in `properties`, so I'd wager you would actually get the SCF dipole back out. if I recall, it should be printed in the output file which density is used, but if you pull results directly from the python output then you won't necessarily know.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2203#issuecomment-869187545
https://github.com/psi4/psi4/issues/2203#issuecomment-869199979:599,Energy Efficiency,energy,energy,599,"> I'm not sure how often `oeprop` really gets called directly in an input. There's a very good reason to call `oeprop` directly, thanks to Psi4Numpy: I'm prototyping an electronic structure method, I have its OPDM, and I want to get some properties from it. That said, the reason for calling `oeprop` in this case is much simpler. There's a section in the manual titled ""Evaluation of One-Electron Properties — oeprop()"", so a user who wanted to evaluate one-electron properties used `oeprop`. > the only issue is you may not be confident in _how_ the dipole was calculated - e.g. if you run a CCSD energy calculation, then call `oeprop`, does it form the CCSD density and contract with the dipole integrals?. CCSD energy calls don't solved lambda equations. I would _hope_ that there is no density on the CCSD wavefunction, but I haven't checked. Still, I'm agreed with your bigger point: properties using built-in Psi methods should just go through `properties`. In my view, manual `oeprop` calls should be the province of people who custom-set the density, and it would be good for us to put in a warning to encourage this. I don't have strong feeling on what this distinction means for `psivars`. I think that's for Lori to weigh in on.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2203#issuecomment-869199979
https://github.com/psi4/psi4/issues/2203#issuecomment-869199979:715,Energy Efficiency,energy,energy,715,"> I'm not sure how often `oeprop` really gets called directly in an input. There's a very good reason to call `oeprop` directly, thanks to Psi4Numpy: I'm prototyping an electronic structure method, I have its OPDM, and I want to get some properties from it. That said, the reason for calling `oeprop` in this case is much simpler. There's a section in the manual titled ""Evaluation of One-Electron Properties — oeprop()"", so a user who wanted to evaluate one-electron properties used `oeprop`. > the only issue is you may not be confident in _how_ the dipole was calculated - e.g. if you run a CCSD energy calculation, then call `oeprop`, does it form the CCSD density and contract with the dipole integrals?. CCSD energy calls don't solved lambda equations. I would _hope_ that there is no density on the CCSD wavefunction, but I haven't checked. Still, I'm agreed with your bigger point: properties using built-in Psi methods should just go through `properties`. In my view, manual `oeprop` calls should be the province of people who custom-set the density, and it would be good for us to put in a warning to encourage this. I don't have strong feeling on what this distinction means for `psivars`. I think that's for Lori to weigh in on.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2203#issuecomment-869199979
https://github.com/psi4/psi4/issues/2203#issuecomment-869199979:673,Integrability,contract,contract,673,"> I'm not sure how often `oeprop` really gets called directly in an input. There's a very good reason to call `oeprop` directly, thanks to Psi4Numpy: I'm prototyping an electronic structure method, I have its OPDM, and I want to get some properties from it. That said, the reason for calling `oeprop` in this case is much simpler. There's a section in the manual titled ""Evaluation of One-Electron Properties — oeprop()"", so a user who wanted to evaluate one-electron properties used `oeprop`. > the only issue is you may not be confident in _how_ the dipole was calculated - e.g. if you run a CCSD energy calculation, then call `oeprop`, does it form the CCSD density and contract with the dipole integrals?. CCSD energy calls don't solved lambda equations. I would _hope_ that there is no density on the CCSD wavefunction, but I haven't checked. Still, I'm agreed with your bigger point: properties using built-in Psi methods should just go through `properties`. In my view, manual `oeprop` calls should be the province of people who custom-set the density, and it would be good for us to put in a warning to encourage this. I don't have strong feeling on what this distinction means for `psivars`. I think that's for Lori to weigh in on.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2203#issuecomment-869199979
https://github.com/psi4/psi4/issues/2203#issuecomment-869199979:322,Usability,simpl,simpler,322,"> I'm not sure how often `oeprop` really gets called directly in an input. There's a very good reason to call `oeprop` directly, thanks to Psi4Numpy: I'm prototyping an electronic structure method, I have its OPDM, and I want to get some properties from it. That said, the reason for calling `oeprop` in this case is much simpler. There's a section in the manual titled ""Evaluation of One-Electron Properties — oeprop()"", so a user who wanted to evaluate one-electron properties used `oeprop`. > the only issue is you may not be confident in _how_ the dipole was calculated - e.g. if you run a CCSD energy calculation, then call `oeprop`, does it form the CCSD density and contract with the dipole integrals?. CCSD energy calls don't solved lambda equations. I would _hope_ that there is no density on the CCSD wavefunction, but I haven't checked. Still, I'm agreed with your bigger point: properties using built-in Psi methods should just go through `properties`. In my view, manual `oeprop` calls should be the province of people who custom-set the density, and it would be good for us to put in a warning to encourage this. I don't have strong feeling on what this distinction means for `psivars`. I think that's for Lori to weigh in on.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2203#issuecomment-869199979
https://github.com/psi4/psi4/issues/2203#issuecomment-869245886:189,Integrability,contract,contractions,189,"> I would _hope_ that there is no density on the CCSD wavefunction. there isn't unless you call `gradient` or `properties` generally, which is why I tend to do my own density/prop integral contractions rather than calling `oeprop` so I know what I'm getting. . > it would be good for us to put in a warning to encourage this. I definitely agree 👍",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2203#issuecomment-869245886
https://github.com/psi4/psi4/issues/2204#issuecomment-868509190:150,Energy Efficiency,energy,energy,150,"A troubling example:; ```; molecule {; 0 2; Mg; F 1 2.8 ; }. set reference uhf ; set soscf true; set soscf_print true; set stability_analysis follow. energy('hf/cc-pvdz'); ```. Even towards the end, we're seeing non-monotonic convergence.; ```; -----------------------------------------------------; Iter Residual RMS Max RMS Remain Time [s]; -----------------------------------------------------; Guess 1.771e+00 1.771e+00 1 0; 1 5.715e-01 5.715e-01 1 0; 2 4.809e-01 4.809e-01 1 0; 3 2.494e-01 2.494e-01 1 0; 4 2.512e-01 2.512e-01 1 0; -----------------------------------------------------; ```. This should be impossible for CG, preconditioned or otherwise, applied to a positive-semidefinite problem. But stability analysis swears we're PSD.; ```; DLUSolver converged. Wavefunction stable under totally symmetric rotations.; Lowest totally symmetric eigenvalue: 0.018307; Lowest UHF->UHF stability eigenvalues:; B2 0.018307 B1 0.018307 A1 0.038290 A2 0.424251; ```. I'm chalking this up to a bug somewhere in our SOSCF code. _siiiiiiiiigh_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2204#issuecomment-868509190
https://github.com/psi4/psi4/issues/2204#issuecomment-869014790:809,Availability,robust,robust,809,"After further investigation, I've learned a few things. First, I was mistaken about the PCG convergence guarantees. Each iteration guarantees that you are closer to the correct solution vector. It does _not_ guarantee that your residual RMS is smaller. For a simple model, just think of z=500x^2+y^2. (1, 0) is closer to the minimum than (0, 10), but (0, 10) gives a smaller value of `z`. In this particular case, you are indeed getting close to the right `x` value, even as your residual increases. Second, when I throw exact MO hessian diagonalization at the problem, they aren't converging well either. The problem is that the MO hessian often has small, negative eigenvalues along the optimization path, causing steps that can be large and energy increasing. While I think this points out a need for more robust convergence algorithms, the behavior I'm seeing does not need an implementation error to be explained. As such, I'm inclined to close this issue and mark an item on the developer wishlist. #2183 is worth separate investigation. @susilehtola, any objections?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2204#issuecomment-869014790
https://github.com/psi4/psi4/issues/2204#issuecomment-869014790:896,Availability,error,error,896,"After further investigation, I've learned a few things. First, I was mistaken about the PCG convergence guarantees. Each iteration guarantees that you are closer to the correct solution vector. It does _not_ guarantee that your residual RMS is smaller. For a simple model, just think of z=500x^2+y^2. (1, 0) is closer to the minimum than (0, 10), but (0, 10) gives a smaller value of `z`. In this particular case, you are indeed getting close to the right `x` value, even as your residual increases. Second, when I throw exact MO hessian diagonalization at the problem, they aren't converging well either. The problem is that the MO hessian often has small, negative eigenvalues along the optimization path, causing steps that can be large and energy increasing. While I think this points out a need for more robust convergence algorithms, the behavior I'm seeing does not need an implementation error to be explained. As such, I'm inclined to close this issue and mark an item on the developer wishlist. #2183 is worth separate investigation. @susilehtola, any objections?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2204#issuecomment-869014790
https://github.com/psi4/psi4/issues/2204#issuecomment-869014790:744,Energy Efficiency,energy,energy,744,"After further investigation, I've learned a few things. First, I was mistaken about the PCG convergence guarantees. Each iteration guarantees that you are closer to the correct solution vector. It does _not_ guarantee that your residual RMS is smaller. For a simple model, just think of z=500x^2+y^2. (1, 0) is closer to the minimum than (0, 10), but (0, 10) gives a smaller value of `z`. In this particular case, you are indeed getting close to the right `x` value, even as your residual increases. Second, when I throw exact MO hessian diagonalization at the problem, they aren't converging well either. The problem is that the MO hessian often has small, negative eigenvalues along the optimization path, causing steps that can be large and energy increasing. While I think this points out a need for more robust convergence algorithms, the behavior I'm seeing does not need an implementation error to be explained. As such, I'm inclined to close this issue and mark an item on the developer wishlist. #2183 is worth separate investigation. @susilehtola, any objections?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2204#issuecomment-869014790
https://github.com/psi4/psi4/issues/2204#issuecomment-869014790:689,Performance,optimiz,optimization,689,"After further investigation, I've learned a few things. First, I was mistaken about the PCG convergence guarantees. Each iteration guarantees that you are closer to the correct solution vector. It does _not_ guarantee that your residual RMS is smaller. For a simple model, just think of z=500x^2+y^2. (1, 0) is closer to the minimum than (0, 10), but (0, 10) gives a smaller value of `z`. In this particular case, you are indeed getting close to the right `x` value, even as your residual increases. Second, when I throw exact MO hessian diagonalization at the problem, they aren't converging well either. The problem is that the MO hessian often has small, negative eigenvalues along the optimization path, causing steps that can be large and energy increasing. While I think this points out a need for more robust convergence algorithms, the behavior I'm seeing does not need an implementation error to be explained. As such, I'm inclined to close this issue and mark an item on the developer wishlist. #2183 is worth separate investigation. @susilehtola, any objections?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2204#issuecomment-869014790
https://github.com/psi4/psi4/issues/2204#issuecomment-869014790:34,Usability,learn,learned,34,"After further investigation, I've learned a few things. First, I was mistaken about the PCG convergence guarantees. Each iteration guarantees that you are closer to the correct solution vector. It does _not_ guarantee that your residual RMS is smaller. For a simple model, just think of z=500x^2+y^2. (1, 0) is closer to the minimum than (0, 10), but (0, 10) gives a smaller value of `z`. In this particular case, you are indeed getting close to the right `x` value, even as your residual increases. Second, when I throw exact MO hessian diagonalization at the problem, they aren't converging well either. The problem is that the MO hessian often has small, negative eigenvalues along the optimization path, causing steps that can be large and energy increasing. While I think this points out a need for more robust convergence algorithms, the behavior I'm seeing does not need an implementation error to be explained. As such, I'm inclined to close this issue and mark an item on the developer wishlist. #2183 is worth separate investigation. @susilehtola, any objections?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2204#issuecomment-869014790
https://github.com/psi4/psi4/issues/2204#issuecomment-869014790:259,Usability,simpl,simple,259,"After further investigation, I've learned a few things. First, I was mistaken about the PCG convergence guarantees. Each iteration guarantees that you are closer to the correct solution vector. It does _not_ guarantee that your residual RMS is smaller. For a simple model, just think of z=500x^2+y^2. (1, 0) is closer to the minimum than (0, 10), but (0, 10) gives a smaller value of `z`. In this particular case, you are indeed getting close to the right `x` value, even as your residual increases. Second, when I throw exact MO hessian diagonalization at the problem, they aren't converging well either. The problem is that the MO hessian often has small, negative eigenvalues along the optimization path, causing steps that can be large and energy increasing. While I think this points out a need for more robust convergence algorithms, the behavior I'm seeing does not need an implementation error to be explained. As such, I'm inclined to close this issue and mark an item on the developer wishlist. #2183 is worth separate investigation. @susilehtola, any objections?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2204#issuecomment-869014790
https://github.com/psi4/psi4/pull/2205#issuecomment-869713777:217,Integrability,depend,dependencies,217,"There are no new docs for those, but I had them as open items when I opened the PR. I spoke with Lori about them since, and we agreed that listing them in ""What are the add-on capabilities for Psi4 and what are their dependencies?"" and including links to repos was sufficient. I checked them to indicate their documentation status was resolved (though I agree the check alone indicates some new doc was added)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2205#issuecomment-869713777
https://github.com/psi4/psi4/issues/2206#issuecomment-870877291:121,Availability,down,down,121,"Thanks for the quick replies/bug fixes!. @susilehtola - we have indeed had our eye on integrating libxc, but it's coming down to manpower/tech debt issues right now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2206#issuecomment-870877291
https://github.com/psi4/psi4/issues/2206#issuecomment-870877291:86,Deployability,integrat,integrating,86,"Thanks for the quick replies/bug fixes!. @susilehtola - we have indeed had our eye on integrating libxc, but it's coming down to manpower/tech debt issues right now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2206#issuecomment-870877291
https://github.com/psi4/psi4/issues/2206#issuecomment-870877291:86,Integrability,integrat,integrating,86,"Thanks for the quick replies/bug fixes!. @susilehtola - we have indeed had our eye on integrating libxc, but it's coming down to manpower/tech debt issues right now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2206#issuecomment-870877291
https://github.com/psi4/psi4/issues/2208#issuecomment-868798412:180,Performance,optimiz,optimizer,180,"While it's worth asking @psi-rking to confirm, this looks like a standard issue that's going to get the standard response:; Set `opt_coordinates` to `both` or `cartesian`. The new optimizer will be smart enough so that you won't need to do any manual key setting.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2208#issuecomment-868798412
https://github.com/psi4/psi4/issues/2208#issuecomment-868809362:222,Energy Efficiency,power,powerful,222,"This advice is fine. Try `opt_coordinates = 'cartesian'` (which worked for me); But I just tried with the psi4 on my macbook 1.4rc3.dev3, and the optimization ran perfectly smoothly. Also, there is a confusingly named but powerful keyword `dynamic_level = 1`. This will cause alternative optimization algorithm to run if the first one fails.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2208#issuecomment-868809362
https://github.com/psi4/psi4/issues/2208#issuecomment-868809362:146,Performance,optimiz,optimization,146,"This advice is fine. Try `opt_coordinates = 'cartesian'` (which worked for me); But I just tried with the psi4 on my macbook 1.4rc3.dev3, and the optimization ran perfectly smoothly. Also, there is a confusingly named but powerful keyword `dynamic_level = 1`. This will cause alternative optimization algorithm to run if the first one fails.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2208#issuecomment-868809362
https://github.com/psi4/psi4/issues/2208#issuecomment-868809362:288,Performance,optimiz,optimization,288,"This advice is fine. Try `opt_coordinates = 'cartesian'` (which worked for me); But I just tried with the psi4 on my macbook 1.4rc3.dev3, and the optimization ran perfectly smoothly. Also, there is a confusingly named but powerful keyword `dynamic_level = 1`. This will cause alternative optimization algorithm to run if the first one fails.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2208#issuecomment-868809362
https://github.com/psi4/psi4/issues/2208#issuecomment-868823284:21,Testability,test,test,21,Just added this as a test case too for pyOptking (which had no trouble with it).,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2208#issuecomment-868823284
https://github.com/psi4/psi4/issues/2208#issuecomment-868866180:10,Performance,optimiz,optimization,10,"Since the optimization works in the upcoming version, I'm closing the issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2208#issuecomment-868866180
https://github.com/psi4/psi4/pull/2210#issuecomment-869015877:221,Testability,test,test,221,Thanks for the diagnosis and the fix. Why not combine these two functions into a single function with an `if` clause to determine whether the `cart_buffer` transform is necessary?. I'm also going to request you include a test case in _this_ PR.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2210#issuecomment-869015877
https://github.com/psi4/psi4/pull/2210#issuecomment-877192480:263,Availability,error,errors,263,"Following up on an issue from the conference call:; The fixed `phi_ao` functions are used to form the core Hamiltonian whenever an embedding potential is read from a file. While I haven't run anything, I would expect the bug fixed by this PR to cause correctness errors in SCF energies. Definitely agree with getting this fix in for 1.4.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2210#issuecomment-877192480
https://github.com/psi4/psi4/pull/2210#issuecomment-877678443:267,Availability,error,errors,267,"> Following up on an issue from the conference call:; > The fixed `phi_ao` functions are used to form the core Hamiltonian whenever an embedding potential is read from a file. While I haven't run anything, I would expect the bug fixed by this PR to cause correctness errors in SCF energies. Definitely agree with getting this fix in for 1.4. Hi Jonathon,. As requested, I cleaned up the code by removing the helper functions, as well as added a new test case (C test phi-ao).; I think having phi_ao as a python function will be useful to Psi developers and users, as it would be immensely helpful for the development of grid-based approaches. Thank you,; Andy",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2210#issuecomment-877678443
https://github.com/psi4/psi4/pull/2210#issuecomment-877678443:449,Testability,test,test,449,"> Following up on an issue from the conference call:; > The fixed `phi_ao` functions are used to form the core Hamiltonian whenever an embedding potential is read from a file. While I haven't run anything, I would expect the bug fixed by this PR to cause correctness errors in SCF energies. Definitely agree with getting this fix in for 1.4. Hi Jonathon,. As requested, I cleaned up the code by removing the helper functions, as well as added a new test case (C test phi-ao).; I think having phi_ao as a python function will be useful to Psi developers and users, as it would be immensely helpful for the development of grid-based approaches. Thank you,; Andy",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2210#issuecomment-877678443
https://github.com/psi4/psi4/pull/2210#issuecomment-877678443:462,Testability,test,test,462,"> Following up on an issue from the conference call:; > The fixed `phi_ao` functions are used to form the core Hamiltonian whenever an embedding potential is read from a file. While I haven't run anything, I would expect the bug fixed by this PR to cause correctness errors in SCF energies. Definitely agree with getting this fix in for 1.4. Hi Jonathon,. As requested, I cleaned up the code by removing the helper functions, as well as added a new test case (C test phi-ao).; I think having phi_ao as a python function will be useful to Psi developers and users, as it would be immensely helpful for the development of grid-based approaches. Thank you,; Andy",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2210#issuecomment-877678443
https://github.com/psi4/psi4/pull/2210#issuecomment-877857422:14,Safety,risk,risk,14,"> I think the risk of `compute_phi` changing is minimal, so I'm not opposed to exposing it. ""Useful for grid-based approaches"" is too vague for me to be _for_ it, but I don't need to be. An example of ""grid-based approaches"" would include a psi4numpy implementation of seminumerical methods like chain-of-spheres exchange.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2210#issuecomment-877857422
https://github.com/psi4/psi4/pull/2210#issuecomment-877864950:14,Safety,risk,risk,14,"> I think the risk of `compute_phi` changing is minimal, so I'm not opposed to exposing it. ""Useful for grid-based approaches"" is too vague for me to be _for_ it, but I don't need to be. Hi Jonathon, I just made all of your suggested changes. Everything compiled and ran properly :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2210#issuecomment-877864950
https://github.com/psi4/psi4/issues/2211#issuecomment-869060258:138,Energy Efficiency,energy,energy,138,"I encountered this problem with wB97X-D3BJ/def2-TZVPD, but PBE/def2-TZVPD shows the same, with the added problem that the erroneously low energy is also oscillatory. The psi4=1.4rc2 energy is -1144.303 Hartree, and the psi4=1.4rc1 energy oscillates between -1146.416 and -1146.534 Hartree. . Once again, this problem is specific to the algorithm that uses in-core AOs. If scf_type DF is provided with less RAM (say 10 GiB) such that it uses disk, the energy is correct (-1144.303 Hartree). I note that PBE requires only 20 GiB to run in-core, and thus might be easier for testing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869060258
https://github.com/psi4/psi4/issues/2211#issuecomment-869060258:182,Energy Efficiency,energy,energy,182,"I encountered this problem with wB97X-D3BJ/def2-TZVPD, but PBE/def2-TZVPD shows the same, with the added problem that the erroneously low energy is also oscillatory. The psi4=1.4rc2 energy is -1144.303 Hartree, and the psi4=1.4rc1 energy oscillates between -1146.416 and -1146.534 Hartree. . Once again, this problem is specific to the algorithm that uses in-core AOs. If scf_type DF is provided with less RAM (say 10 GiB) such that it uses disk, the energy is correct (-1144.303 Hartree). I note that PBE requires only 20 GiB to run in-core, and thus might be easier for testing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869060258
https://github.com/psi4/psi4/issues/2211#issuecomment-869060258:231,Energy Efficiency,energy,energy,231,"I encountered this problem with wB97X-D3BJ/def2-TZVPD, but PBE/def2-TZVPD shows the same, with the added problem that the erroneously low energy is also oscillatory. The psi4=1.4rc2 energy is -1144.303 Hartree, and the psi4=1.4rc1 energy oscillates between -1146.416 and -1146.534 Hartree. . Once again, this problem is specific to the algorithm that uses in-core AOs. If scf_type DF is provided with less RAM (say 10 GiB) such that it uses disk, the energy is correct (-1144.303 Hartree). I note that PBE requires only 20 GiB to run in-core, and thus might be easier for testing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869060258
https://github.com/psi4/psi4/issues/2211#issuecomment-869060258:451,Energy Efficiency,energy,energy,451,"I encountered this problem with wB97X-D3BJ/def2-TZVPD, but PBE/def2-TZVPD shows the same, with the added problem that the erroneously low energy is also oscillatory. The psi4=1.4rc2 energy is -1144.303 Hartree, and the psi4=1.4rc1 energy oscillates between -1146.416 and -1146.534 Hartree. . Once again, this problem is specific to the algorithm that uses in-core AOs. If scf_type DF is provided with less RAM (say 10 GiB) such that it uses disk, the energy is correct (-1144.303 Hartree). I note that PBE requires only 20 GiB to run in-core, and thus might be easier for testing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869060258
https://github.com/psi4/psi4/issues/2211#issuecomment-869060258:572,Testability,test,testing,572,"I encountered this problem with wB97X-D3BJ/def2-TZVPD, but PBE/def2-TZVPD shows the same, with the added problem that the erroneously low energy is also oscillatory. The psi4=1.4rc2 energy is -1144.303 Hartree, and the psi4=1.4rc1 energy oscillates between -1146.416 and -1146.534 Hartree. . Once again, this problem is specific to the algorithm that uses in-core AOs. If scf_type DF is provided with less RAM (say 10 GiB) such that it uses disk, the energy is correct (-1144.303 Hartree). I note that PBE requires only 20 GiB to run in-core, and thus might be easier for testing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869060258
https://github.com/psi4/psi4/issues/2211#issuecomment-869217302:391,Energy Efficiency,energy,energy,391,"Hi @jminuse, thanks for the informative bug report. I'm almost certain that this suspicious 1.4rc1 behavior was fixed in 1.4rc2 by #2139, which tightened the integral screening after we switched integral engines from `libint` to `libint2`. . Your observations are consistent with what we saw: very wrong and/or oscillatory SCF energies. I also checked that your test case gives a reasonable energy with 1.4rc1 when I set the keyword `INTS_TOLERANCE` to 0, which was the temporary workaround for that bug.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869217302
https://github.com/psi4/psi4/issues/2211#issuecomment-869217302:362,Testability,test,test,362,"Hi @jminuse, thanks for the informative bug report. I'm almost certain that this suspicious 1.4rc1 behavior was fixed in 1.4rc2 by #2139, which tightened the integral screening after we switched integral engines from `libint` to `libint2`. . Your observations are consistent with what we saw: very wrong and/or oscillatory SCF energies. I also checked that your test case gives a reasonable energy with 1.4rc1 when I set the keyword `INTS_TOLERANCE` to 0, which was the temporary workaround for that bug.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869217302
https://github.com/psi4/psi4/issues/2211#issuecomment-869272035:184,Deployability,Release,Release,184,"Thank you, I am glad to hear that the issue is known and fixed. For the future, though, I am troubled that this issue exists without warning in a build that looks safe (marked ""Stable Release""). How can I be more confident in Psi4 results? Is there a test suite including issues like SCF instability (more exhaustive than `psi4 --test`), that I could use to verify a Psi4 build before running large workflows?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869272035
https://github.com/psi4/psi4/issues/2211#issuecomment-869272035:163,Safety,safe,safe,163,"Thank you, I am glad to hear that the issue is known and fixed. For the future, though, I am troubled that this issue exists without warning in a build that looks safe (marked ""Stable Release""). How can I be more confident in Psi4 results? Is there a test suite including issues like SCF instability (more exhaustive than `psi4 --test`), that I could use to verify a Psi4 build before running large workflows?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869272035
https://github.com/psi4/psi4/issues/2211#issuecomment-869272035:251,Testability,test,test,251,"Thank you, I am glad to hear that the issue is known and fixed. For the future, though, I am troubled that this issue exists without warning in a build that looks safe (marked ""Stable Release""). How can I be more confident in Psi4 results? Is there a test suite including issues like SCF instability (more exhaustive than `psi4 --test`), that I could use to verify a Psi4 build before running large workflows?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869272035
https://github.com/psi4/psi4/issues/2211#issuecomment-869272035:330,Testability,test,test,330,"Thank you, I am glad to hear that the issue is known and fixed. For the future, though, I am troubled that this issue exists without warning in a build that looks safe (marked ""Stable Release""). How can I be more confident in Psi4 results? Is there a test suite including issues like SCF instability (more exhaustive than `psi4 --test`), that I could use to verify a Psi4 build before running large workflows?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869272035
https://github.com/psi4/psi4/issues/2211#issuecomment-869286553:55,Testability,test,test,55,"Sorry for the unsettling results. For a more extensive test suite, one can run `psi4 --test full` (or long). If building from source, one can also run `ctest` from <objdir>. Unfortunately, this test evaded both of those suites due to showing up for big systems/basis sets.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869286553
https://github.com/psi4/psi4/issues/2211#issuecomment-869286553:87,Testability,test,test,87,"Sorry for the unsettling results. For a more extensive test suite, one can run `psi4 --test full` (or long). If building from source, one can also run `ctest` from <objdir>. Unfortunately, this test evaded both of those suites due to showing up for big systems/basis sets.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869286553
https://github.com/psi4/psi4/issues/2211#issuecomment-869286553:194,Testability,test,test,194,"Sorry for the unsettling results. For a more extensive test suite, one can run `psi4 --test full` (or long). If building from source, one can also run `ctest` from <objdir>. Unfortunately, this test evaded both of those suites due to showing up for big systems/basis sets.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869286553
https://github.com/psi4/psi4/issues/2211#issuecomment-869288050:160,Testability,test,test,160,Disclaimer: There's also a known bug in 1.4rc1 and 1.4rc2 gradients for density-fitted _correlated_ methods. DF-SCF is unaffected. That one slipped through the test suite because we run it in serial (but this is a reminder that we should it set up to automatically run in parallel...) This is fixed in the current developer version.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869288050
https://github.com/psi4/psi4/issues/2211#issuecomment-869884912:3,Safety,avoid,avoid,3,"To avoid bugs of this kind, is it recommended to go back to Psi4 1.3.2, or forward to 1.4rc2?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869884912
https://github.com/psi4/psi4/issues/2211#issuecomment-900548333:13,Deployability,release,released,13,"Since 1.4 is released, I intend to close this after two days if there isn't an actionable item here.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-900548333
https://github.com/psi4/psi4/issues/2212#issuecomment-1189482561:307,Energy Efficiency,energy,energy,307,"Looking at the output while SOSCF is active, it seems like the SO step is taken even if the microiterations do not converge. Assuming that is true, perhaps it would be a good idea to add some damping if we are taking an unconverged SO step.; Maybe increase the damping if the previous SO step increased the energy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2212#issuecomment-1189482561
https://github.com/psi4/psi4/issues/2213#issuecomment-870088078:109,Availability,error,error,109,"I'm taking a look at this in pyoptking and hit the scf issue described above (after deactivating the torsion error). @loriab `""guess"" : ""read""` is being sent to psi4 in the `AtomicInput`. Is `read` expected to work with a standard energy call followed by a call through `run_qcschema`?. I get:; `Unable to find file 180, defaulting to SAD guess.` . If psi4 is looking in `$PSI_SCRATCH` I don't see file 180 there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2213#issuecomment-870088078
https://github.com/psi4/psi4/issues/2213#issuecomment-870088078:231,Energy Efficiency,energy,energy,231,"I'm taking a look at this in pyoptking and hit the scf issue described above (after deactivating the torsion error). @loriab `""guess"" : ""read""` is being sent to psi4 in the `AtomicInput`. Is `read` expected to work with a standard energy call followed by a call through `run_qcschema`?. I get:; `Unable to find file 180, defaulting to SAD guess.` . If psi4 is looking in `$PSI_SCRATCH` I don't see file 180 there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2213#issuecomment-870088078
https://github.com/psi4/psi4/issues/2213#issuecomment-870754037:382,Integrability,protocol,protocol,382,"No, guess=read is specifically disabled https://github.com/psi4/psi4/blob/master/psi4/driver/p4util/python_helpers.py#L451 . As to how to run the calc, there's ways to deposit and collect scratch files in a qcng.compute run, and that could be done with the npy file and the optimize() fn or the optking qcng procedure. Ultimately, the optking qcng procedure should set the orbitals protocol so that it collects orbitals from gradients and can reseed them for the next gradient. The barrier to that right now is that psi4 can write the QCSchema Wavefunction, but it can't reinitialize a psi4.Wfn from it. (It's a BasisSet coeff issue I noticed last summer but haven't been able to follow up on.). So this input is something we don't want to prevent, but it would need some hacking at the present, and it might hit some other problem along the way.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2213#issuecomment-870754037
https://github.com/psi4/psi4/issues/2213#issuecomment-870754037:274,Performance,optimiz,optimize,274,"No, guess=read is specifically disabled https://github.com/psi4/psi4/blob/master/psi4/driver/p4util/python_helpers.py#L451 . As to how to run the calc, there's ways to deposit and collect scratch files in a qcng.compute run, and that could be done with the npy file and the optimize() fn or the optking qcng procedure. Ultimately, the optking qcng procedure should set the orbitals protocol so that it collects orbitals from gradients and can reseed them for the next gradient. The barrier to that right now is that psi4 can write the QCSchema Wavefunction, but it can't reinitialize a psi4.Wfn from it. (It's a BasisSet coeff issue I noticed last summer but haven't been able to follow up on.). So this input is something we don't want to prevent, but it would need some hacking at the present, and it might hit some other problem along the way.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2213#issuecomment-870754037
https://github.com/psi4/psi4/issues/2213#issuecomment-870974855:488,Performance,optimiz,optimization,488,"Yep I agree. Thank you for linking this issue to the optking repo as well and bringing to our attention. I'm trying to look at more github issues for optking since you all have put so much effort into nicely labeling everything for us - still looking at this one. Any more discussion on the actual torsion issue will likely be at psi-rking/optking#63 or in slack once I've actually done some poking around. I'll make sure to reference the eventual fix here. The quick fix for running the optimization is to use Cartesian coordinates. For debugging purposes I'll just be running HF, good to know that guess=read is not currently supported - thank you.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2213#issuecomment-870974855
https://github.com/psi4/psi4/issues/2213#issuecomment-1583231316:1745,Availability,down,downhill,1745,"ooked at this ~D3h Mn(NO)(CO)4 complex. It is pathologically interesting.; 1. There are no reasonable torsions defined among the bonded atoms in this molecule, as each of the 5 spokes out from the metal involve 2 ~collinear atoms.; 2. The reason that optking was trying to use torsions is that the input geometry is so crowded that the covalent radii * 1.3 formula was bonding the Mn to the atom once removed (beta?). That is, in the linear Mn-N-O, both Mn-N and Mn-O bonds were being created. So I tried covalent_connect=1.2, which results in only linear bends being defined and no torsions. This raises the question of whether we should use something beyond a linear scaling, or count on the user to provide a reasonable structure. (The clean tool in Spartan lengthened the Mn-N bond by 25%.). For the moment, I am not changing. ; 3. Using these coordinates (all stretches and bends), the first step blew up to 100 Angstroms Cartesian step. This was not due to forces, which were large but not that ridiculous.; 4. The numerical test of the B matrix passed. (a non-trivial accomplishment for this thing); 5. I figured out that the pseudoinverse of (B B^T) was blowing up, due to inversion of very small values. It is customary to invert only those eigenvalues whose magnitude is >1e-10 or so. A numerical problem was introduced when my custom linear algebra function was replaced by numpy.linalg.pinv which uses a default of 1e-14. I'm actually surprised if this threshold isn't causing problems more commonly. Anyway, I increased this to 1e-12 and added a keyword to increase it further. More testing is needed to see if we can make the default larger. This particular case needs 1e-8 and then the optimization iterates successfully downhill. The geometry is very far from equilibrium and may be changing electronic states, so I'm not pursuing its STO-3G to a minimum whatever that might be.; So I am going to commit some related things but I'm not going to attend to this particular case further.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2213#issuecomment-1583231316
https://github.com/psi4/psi4/issues/2213#issuecomment-1583231316:1710,Performance,optimiz,optimization,1710,"ooked at this ~D3h Mn(NO)(CO)4 complex. It is pathologically interesting.; 1. There are no reasonable torsions defined among the bonded atoms in this molecule, as each of the 5 spokes out from the metal involve 2 ~collinear atoms.; 2. The reason that optking was trying to use torsions is that the input geometry is so crowded that the covalent radii * 1.3 formula was bonding the Mn to the atom once removed (beta?). That is, in the linear Mn-N-O, both Mn-N and Mn-O bonds were being created. So I tried covalent_connect=1.2, which results in only linear bends being defined and no torsions. This raises the question of whether we should use something beyond a linear scaling, or count on the user to provide a reasonable structure. (The clean tool in Spartan lengthened the Mn-N bond by 25%.). For the moment, I am not changing. ; 3. Using these coordinates (all stretches and bends), the first step blew up to 100 Angstroms Cartesian step. This was not due to forces, which were large but not that ridiculous.; 4. The numerical test of the B matrix passed. (a non-trivial accomplishment for this thing); 5. I figured out that the pseudoinverse of (B B^T) was blowing up, due to inversion of very small values. It is customary to invert only those eigenvalues whose magnitude is >1e-10 or so. A numerical problem was introduced when my custom linear algebra function was replaced by numpy.linalg.pinv which uses a default of 1e-14. I'm actually surprised if this threshold isn't causing problems more commonly. Anyway, I increased this to 1e-12 and added a keyword to increase it further. More testing is needed to see if we can make the default larger. This particular case needs 1e-8 and then the optimization iterates successfully downhill. The geometry is very far from equilibrium and may be changing electronic states, so I'm not pursuing its STO-3G to a minimum whatever that might be.; So I am going to commit some related things but I'm not going to attend to this particular case further.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2213#issuecomment-1583231316
https://github.com/psi4/psi4/issues/2213#issuecomment-1583231316:1040,Testability,test,test,1040,"ooked at this ~D3h Mn(NO)(CO)4 complex. It is pathologically interesting.; 1. There are no reasonable torsions defined among the bonded atoms in this molecule, as each of the 5 spokes out from the metal involve 2 ~collinear atoms.; 2. The reason that optking was trying to use torsions is that the input geometry is so crowded that the covalent radii * 1.3 formula was bonding the Mn to the atom once removed (beta?). That is, in the linear Mn-N-O, both Mn-N and Mn-O bonds were being created. So I tried covalent_connect=1.2, which results in only linear bends being defined and no torsions. This raises the question of whether we should use something beyond a linear scaling, or count on the user to provide a reasonable structure. (The clean tool in Spartan lengthened the Mn-N bond by 25%.). For the moment, I am not changing. ; 3. Using these coordinates (all stretches and bends), the first step blew up to 100 Angstroms Cartesian step. This was not due to forces, which were large but not that ridiculous.; 4. The numerical test of the B matrix passed. (a non-trivial accomplishment for this thing); 5. I figured out that the pseudoinverse of (B B^T) was blowing up, due to inversion of very small values. It is customary to invert only those eigenvalues whose magnitude is >1e-10 or so. A numerical problem was introduced when my custom linear algebra function was replaced by numpy.linalg.pinv which uses a default of 1e-14. I'm actually surprised if this threshold isn't causing problems more commonly. Anyway, I increased this to 1e-12 and added a keyword to increase it further. More testing is needed to see if we can make the default larger. This particular case needs 1e-8 and then the optimization iterates successfully downhill. The geometry is very far from equilibrium and may be changing electronic states, so I'm not pursuing its STO-3G to a minimum whatever that might be.; So I am going to commit some related things but I'm not going to attend to this particular case further.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2213#issuecomment-1583231316
https://github.com/psi4/psi4/issues/2213#issuecomment-1583231316:1605,Testability,test,testing,1605,"ooked at this ~D3h Mn(NO)(CO)4 complex. It is pathologically interesting.; 1. There are no reasonable torsions defined among the bonded atoms in this molecule, as each of the 5 spokes out from the metal involve 2 ~collinear atoms.; 2. The reason that optking was trying to use torsions is that the input geometry is so crowded that the covalent radii * 1.3 formula was bonding the Mn to the atom once removed (beta?). That is, in the linear Mn-N-O, both Mn-N and Mn-O bonds were being created. So I tried covalent_connect=1.2, which results in only linear bends being defined and no torsions. This raises the question of whether we should use something beyond a linear scaling, or count on the user to provide a reasonable structure. (The clean tool in Spartan lengthened the Mn-N bond by 25%.). For the moment, I am not changing. ; 3. Using these coordinates (all stretches and bends), the first step blew up to 100 Angstroms Cartesian step. This was not due to forces, which were large but not that ridiculous.; 4. The numerical test of the B matrix passed. (a non-trivial accomplishment for this thing); 5. I figured out that the pseudoinverse of (B B^T) was blowing up, due to inversion of very small values. It is customary to invert only those eigenvalues whose magnitude is >1e-10 or so. A numerical problem was introduced when my custom linear algebra function was replaced by numpy.linalg.pinv which uses a default of 1e-14. I'm actually surprised if this threshold isn't causing problems more commonly. Anyway, I increased this to 1e-12 and added a keyword to increase it further. More testing is needed to see if we can make the default larger. This particular case needs 1e-8 and then the optimization iterates successfully downhill. The geometry is very far from equilibrium and may be changing electronic states, so I'm not pursuing its STO-3G to a minimum whatever that might be.; So I am going to commit some related things but I'm not going to attend to this particular case further.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2213#issuecomment-1583231316
https://github.com/psi4/psi4/issues/2219#issuecomment-869256248:12,Safety,hazard,hazard,12,"if I had to hazard a guess, it probably has to do with `run_cc_property` directly checking `core.OEProp.valid_methods` rather than running the `oeprop_validator` (which seems to let multipoles through).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2219#issuecomment-869256248
https://github.com/psi4/psi4/pull/2221#issuecomment-871765509:221,Availability,avail,available,221,"Sorry to keep making you write, but is the ""big picture"" view of nbody documented _anywhere_? I can't follow what `energy_body_dict` means, or why the value of one of its entries is coupled to whether the total energy is available. I fear this is a case where there is a _lot_ of ""developer was only coding to be comprehensible to themselves"" code debt.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2221#issuecomment-871765509
https://github.com/psi4/psi4/pull/2221#issuecomment-871765509:211,Energy Efficiency,energy,energy,211,"Sorry to keep making you write, but is the ""big picture"" view of nbody documented _anywhere_? I can't follow what `energy_body_dict` means, or why the value of one of its entries is coupled to whether the total energy is available. I fear this is a case where there is a _lot_ of ""developer was only coding to be comprehensible to themselves"" code debt.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2221#issuecomment-871765509
https://github.com/psi4/psi4/pull/2221#issuecomment-871799597:219,Availability,avail,available,219,"> Sorry to keep making you write, but is the ""big picture"" view of nbody documented anywhere? I can't follow what energy_body_dict means, or why the value of one of its entries is coupled to whether the total energy is available. > I fear this is a case where there is a lot of ""developer was only coding to be comprehensible to themselves"" code debt. I confess to being lost in nbody, too. And some of the psivars set aren't as descriptive as I'd like (e.g., `2CP`. However, any changes to nbody make DDD especially painful to rebase. And I think a good time to rationalize and document the pieces are when we take the nbody communication dictionary DDD uses and formulate/propose a proper schema. I guess I'm ok leaving it inscrutable (and without binding contracts :-) until then.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2221#issuecomment-871799597
https://github.com/psi4/psi4/pull/2221#issuecomment-871799597:209,Energy Efficiency,energy,energy,209,"> Sorry to keep making you write, but is the ""big picture"" view of nbody documented anywhere? I can't follow what energy_body_dict means, or why the value of one of its entries is coupled to whether the total energy is available. > I fear this is a case where there is a lot of ""developer was only coding to be comprehensible to themselves"" code debt. I confess to being lost in nbody, too. And some of the psivars set aren't as descriptive as I'd like (e.g., `2CP`. However, any changes to nbody make DDD especially painful to rebase. And I think a good time to rationalize and document the pieces are when we take the nbody communication dictionary DDD uses and formulate/propose a proper schema. I guess I'm ok leaving it inscrutable (and without binding contracts :-) until then.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2221#issuecomment-871799597
https://github.com/psi4/psi4/pull/2221#issuecomment-871799597:758,Integrability,contract,contracts,758,"> Sorry to keep making you write, but is the ""big picture"" view of nbody documented anywhere? I can't follow what energy_body_dict means, or why the value of one of its entries is coupled to whether the total energy is available. > I fear this is a case where there is a lot of ""developer was only coding to be comprehensible to themselves"" code debt. I confess to being lost in nbody, too. And some of the psivars set aren't as descriptive as I'd like (e.g., `2CP`. However, any changes to nbody make DDD especially painful to rebase. And I think a good time to rationalize and document the pieces are when we take the nbody communication dictionary DDD uses and formulate/propose a proper schema. I guess I'm ok leaving it inscrutable (and without binding contracts :-) until then.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2221#issuecomment-871799597
https://github.com/psi4/psi4/pull/2221#issuecomment-871913661:751,Energy Efficiency,energy,energy,751,"To be fair, I don't understand big parts of nbody either - the whole factorial thing is a bit strange. Which is why if we'd like return an object containing all possible nbody x bsse_type results from the data calculated by the combination of bsse_type and return_total_data, it'd take me a lot of work to get there - and is probably not worth it before DDD is in. The problem with the link between `energy_body_dict` and the returned data is that it's copied to the results directly, and if the calculation cannot compute total energies, it only returns an intermediate. For most cases that's sort of OK (since the intermediate is 0), but in the case of counterpoise without calculating monomers in monomer basis, the intermediate is the interaction energy:. ```; 2CP = Etot,cp = E(AB)_AB - E(A)_AB - E(B)_AB + E(A)_A + E(B)_B; 2CP = Etot,cp = Eint,cp + monomer_energies; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2221#issuecomment-871913661
https://github.com/psi4/psi4/pull/2222#issuecomment-869688596:17,Testability,test,test,17,I'd appreciate a test for this one. [Here](https://stackoverflow.com/questions/23337471/how-to-properly-assert-that-an-exception-gets-raised-in-pytest) is a StackOverflow example of testing that an exception gets raised.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2222#issuecomment-869688596
https://github.com/psi4/psi4/pull/2222#issuecomment-869688596:104,Testability,assert,assert-that-an-exception-gets-raised-in-pytest,104,I'd appreciate a test for this one. [Here](https://stackoverflow.com/questions/23337471/how-to-properly-assert-that-an-exception-gets-raised-in-pytest) is a StackOverflow example of testing that an exception gets raised.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2222#issuecomment-869688596
https://github.com/psi4/psi4/pull/2222#issuecomment-869688596:182,Testability,test,testing,182,I'd appreciate a test for this one. [Here](https://stackoverflow.com/questions/23337471/how-to-properly-assert-that-an-exception-gets-raised-in-pytest) is a StackOverflow example of testing that an exception gets raised.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2222#issuecomment-869688596
https://github.com/psi4/psi4/pull/2222#issuecomment-869862833:19,Testability,test,test,19,"> I'd appreciate a test for this one. [Here](https://stackoverflow.com/questions/23337471/how-to-properly-assert-that-an-exception-gets-raised-in-pytest) is a StackOverflow example of testing that an exception gets raised. Done. Although I've remained with ctest as opposed to pytest. I am not sure if there's a way to catch PSIEXCEPTION exceptions directly, or if RuntimeError is the closest we can get from within python.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2222#issuecomment-869862833
https://github.com/psi4/psi4/pull/2222#issuecomment-869862833:106,Testability,assert,assert-that-an-exception-gets-raised-in-pytest,106,"> I'd appreciate a test for this one. [Here](https://stackoverflow.com/questions/23337471/how-to-properly-assert-that-an-exception-gets-raised-in-pytest) is a StackOverflow example of testing that an exception gets raised. Done. Although I've remained with ctest as opposed to pytest. I am not sure if there's a way to catch PSIEXCEPTION exceptions directly, or if RuntimeError is the closest we can get from within python.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2222#issuecomment-869862833
https://github.com/psi4/psi4/pull/2222#issuecomment-869862833:184,Testability,test,testing,184,"> I'd appreciate a test for this one. [Here](https://stackoverflow.com/questions/23337471/how-to-properly-assert-that-an-exception-gets-raised-in-pytest) is a StackOverflow example of testing that an exception gets raised. Done. Although I've remained with ctest as opposed to pytest. I am not sure if there's a way to catch PSIEXCEPTION exceptions directly, or if RuntimeError is the closest we can get from within python.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2222#issuecomment-869862833
https://github.com/psi4/psi4/issues/2223#issuecomment-869934318:193,Modifiability,plugin,plugins,193,"As best as I can tell, it's not actually _used_ Python-side, except for `dfmp2`. My first choice would be to keep the function C-side, but not export it Py-side. If that would be a problem for plugins, sticking a warning in the `docstring` is the best solution. I can't imagine how we would have separate user API and programmer API. The only plugins I imagine using `compute_gradient` are V2RDM and Forte. V2RDM doesn't call it Py-side. Forte does, but I can personally take responsibility for moving that to C-side, if Francesco approves.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2223#issuecomment-869934318
https://github.com/psi4/psi4/issues/2223#issuecomment-869934318:343,Modifiability,plugin,plugins,343,"As best as I can tell, it's not actually _used_ Python-side, except for `dfmp2`. My first choice would be to keep the function C-side, but not export it Py-side. If that would be a problem for plugins, sticking a warning in the `docstring` is the best solution. I can't imagine how we would have separate user API and programmer API. The only plugins I imagine using `compute_gradient` are V2RDM and Forte. V2RDM doesn't call it Py-side. Forte does, but I can personally take responsibility for moving that to C-side, if Francesco approves.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2223#issuecomment-869934318
https://github.com/psi4/psi4/issues/2223#issuecomment-870408055:193,Usability,simpl,simplifying,193,"Is there a case when a user (without deeper knowledge of the Psi4 codebase) would want to use `compute_gradient` instead of a plain-old `gradient` call? Unless there's a good use case, I'm for simplifying the API. . If it's a matter of ""you can save time by reusing intermediates"" with `compute_gradient`, perhaps a more systematic way would be to shove those intermediates onto the `wfn` and then feed that into `gradient`, no?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2223#issuecomment-870408055
https://github.com/psi4/psi4/issues/2223#issuecomment-870536209:436,Energy Efficiency,energy,energy,436,"Not that I'm aware of. There are three reasons somebody might be tempted to use a manual `compute_gradient` call.; 1. _Method developer reason_. You are a plugin developer and don't know you can edit `proc_table` to tell `gradient` how to run for your new method. Not a good reason because you actually can.; 2. _Method developer reason_. You are writing a gradient method and want your gradient function to enter the C-code to do your energy, return to the driver, then re-enter the C-code to do your gradient. This is the best reason I've come up with, and while I'm sympathetic, I just don't think it's worth the danger of exposing this function to completely general Python use. The gradient machinery should only ever be called after your energy computation finishes.; 3. _User reason_. You want to run some additional commands between your energy and your gradient computation. I just can't imagine a use case for this _other than_ bypassing some sanity check. There isn't a case where separating the calls saves times. Even if there were, shoving intermediates onto a `wfn` only works for SCF (not sure about general DFT functionals). Even MP2 gradient theory needs intermediates too large to store on the `wfn`. The best I've come up with is that you're doing SCF, serialize the wavefunction for later analysis, and then decide you want a gradient after that later analysis. But even in that case, the serialized wavefunction has the converged orbitals, so just use `gradient`. I would expect minor computational overhead for the energy step. (I suppose there is the cost of re-building the TEI?). Since this would affect Forte and heads off a possible bug in relativistic computations, it's probably worth asking @fevangelista for input on this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2223#issuecomment-870536209
https://github.com/psi4/psi4/issues/2223#issuecomment-870536209:744,Energy Efficiency,energy,energy,744,"Not that I'm aware of. There are three reasons somebody might be tempted to use a manual `compute_gradient` call.; 1. _Method developer reason_. You are a plugin developer and don't know you can edit `proc_table` to tell `gradient` how to run for your new method. Not a good reason because you actually can.; 2. _Method developer reason_. You are writing a gradient method and want your gradient function to enter the C-code to do your energy, return to the driver, then re-enter the C-code to do your gradient. This is the best reason I've come up with, and while I'm sympathetic, I just don't think it's worth the danger of exposing this function to completely general Python use. The gradient machinery should only ever be called after your energy computation finishes.; 3. _User reason_. You want to run some additional commands between your energy and your gradient computation. I just can't imagine a use case for this _other than_ bypassing some sanity check. There isn't a case where separating the calls saves times. Even if there were, shoving intermediates onto a `wfn` only works for SCF (not sure about general DFT functionals). Even MP2 gradient theory needs intermediates too large to store on the `wfn`. The best I've come up with is that you're doing SCF, serialize the wavefunction for later analysis, and then decide you want a gradient after that later analysis. But even in that case, the serialized wavefunction has the converged orbitals, so just use `gradient`. I would expect minor computational overhead for the energy step. (I suppose there is the cost of re-building the TEI?). Since this would affect Forte and heads off a possible bug in relativistic computations, it's probably worth asking @fevangelista for input on this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2223#issuecomment-870536209
https://github.com/psi4/psi4/issues/2223#issuecomment-870536209:846,Energy Efficiency,energy,energy,846,"Not that I'm aware of. There are three reasons somebody might be tempted to use a manual `compute_gradient` call.; 1. _Method developer reason_. You are a plugin developer and don't know you can edit `proc_table` to tell `gradient` how to run for your new method. Not a good reason because you actually can.; 2. _Method developer reason_. You are writing a gradient method and want your gradient function to enter the C-code to do your energy, return to the driver, then re-enter the C-code to do your gradient. This is the best reason I've come up with, and while I'm sympathetic, I just don't think it's worth the danger of exposing this function to completely general Python use. The gradient machinery should only ever be called after your energy computation finishes.; 3. _User reason_. You want to run some additional commands between your energy and your gradient computation. I just can't imagine a use case for this _other than_ bypassing some sanity check. There isn't a case where separating the calls saves times. Even if there were, shoving intermediates onto a `wfn` only works for SCF (not sure about general DFT functionals). Even MP2 gradient theory needs intermediates too large to store on the `wfn`. The best I've come up with is that you're doing SCF, serialize the wavefunction for later analysis, and then decide you want a gradient after that later analysis. But even in that case, the serialized wavefunction has the converged orbitals, so just use `gradient`. I would expect minor computational overhead for the energy step. (I suppose there is the cost of re-building the TEI?). Since this would affect Forte and heads off a possible bug in relativistic computations, it's probably worth asking @fevangelista for input on this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2223#issuecomment-870536209
https://github.com/psi4/psi4/issues/2223#issuecomment-870536209:1538,Energy Efficiency,energy,energy,1538,"Not that I'm aware of. There are three reasons somebody might be tempted to use a manual `compute_gradient` call.; 1. _Method developer reason_. You are a plugin developer and don't know you can edit `proc_table` to tell `gradient` how to run for your new method. Not a good reason because you actually can.; 2. _Method developer reason_. You are writing a gradient method and want your gradient function to enter the C-code to do your energy, return to the driver, then re-enter the C-code to do your gradient. This is the best reason I've come up with, and while I'm sympathetic, I just don't think it's worth the danger of exposing this function to completely general Python use. The gradient machinery should only ever be called after your energy computation finishes.; 3. _User reason_. You want to run some additional commands between your energy and your gradient computation. I just can't imagine a use case for this _other than_ bypassing some sanity check. There isn't a case where separating the calls saves times. Even if there were, shoving intermediates onto a `wfn` only works for SCF (not sure about general DFT functionals). Even MP2 gradient theory needs intermediates too large to store on the `wfn`. The best I've come up with is that you're doing SCF, serialize the wavefunction for later analysis, and then decide you want a gradient after that later analysis. But even in that case, the serialized wavefunction has the converged orbitals, so just use `gradient`. I would expect minor computational overhead for the energy step. (I suppose there is the cost of re-building the TEI?). Since this would affect Forte and heads off a possible bug in relativistic computations, it's probably worth asking @fevangelista for input on this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2223#issuecomment-870536209
https://github.com/psi4/psi4/issues/2223#issuecomment-870536209:155,Modifiability,plugin,plugin,155,"Not that I'm aware of. There are three reasons somebody might be tempted to use a manual `compute_gradient` call.; 1. _Method developer reason_. You are a plugin developer and don't know you can edit `proc_table` to tell `gradient` how to run for your new method. Not a good reason because you actually can.; 2. _Method developer reason_. You are writing a gradient method and want your gradient function to enter the C-code to do your energy, return to the driver, then re-enter the C-code to do your gradient. This is the best reason I've come up with, and while I'm sympathetic, I just don't think it's worth the danger of exposing this function to completely general Python use. The gradient machinery should only ever be called after your energy computation finishes.; 3. _User reason_. You want to run some additional commands between your energy and your gradient computation. I just can't imagine a use case for this _other than_ bypassing some sanity check. There isn't a case where separating the calls saves times. Even if there were, shoving intermediates onto a `wfn` only works for SCF (not sure about general DFT functionals). Even MP2 gradient theory needs intermediates too large to store on the `wfn`. The best I've come up with is that you're doing SCF, serialize the wavefunction for later analysis, and then decide you want a gradient after that later analysis. But even in that case, the serialized wavefunction has the converged orbitals, so just use `gradient`. I would expect minor computational overhead for the energy step. (I suppose there is the cost of re-building the TEI?). Since this would affect Forte and heads off a possible bug in relativistic computations, it's probably worth asking @fevangelista for input on this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2223#issuecomment-870536209
https://github.com/psi4/psi4/issues/2223#issuecomment-870536209:953,Safety,sanity check,sanity check,953,"Not that I'm aware of. There are three reasons somebody might be tempted to use a manual `compute_gradient` call.; 1. _Method developer reason_. You are a plugin developer and don't know you can edit `proc_table` to tell `gradient` how to run for your new method. Not a good reason because you actually can.; 2. _Method developer reason_. You are writing a gradient method and want your gradient function to enter the C-code to do your energy, return to the driver, then re-enter the C-code to do your gradient. This is the best reason I've come up with, and while I'm sympathetic, I just don't think it's worth the danger of exposing this function to completely general Python use. The gradient machinery should only ever be called after your energy computation finishes.; 3. _User reason_. You want to run some additional commands between your energy and your gradient computation. I just can't imagine a use case for this _other than_ bypassing some sanity check. There isn't a case where separating the calls saves times. Even if there were, shoving intermediates onto a `wfn` only works for SCF (not sure about general DFT functionals). Even MP2 gradient theory needs intermediates too large to store on the `wfn`. The best I've come up with is that you're doing SCF, serialize the wavefunction for later analysis, and then decide you want a gradient after that later analysis. But even in that case, the serialized wavefunction has the converged orbitals, so just use `gradient`. I would expect minor computational overhead for the energy step. (I suppose there is the cost of re-building the TEI?). Since this would affect Forte and heads off a possible bug in relativistic computations, it's probably worth asking @fevangelista for input on this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2223#issuecomment-870536209
https://github.com/psi4/psi4/issues/2223#issuecomment-870586927:163,Energy Efficiency,reduce,reduces,163,`compute_gradient` is also in use py-side for dispersion. perhaps we could cease to export the fn for general wfn and only keep export for libdisp and dfmp2. that reduces the risk of relativistic misuse to one method.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2223#issuecomment-870586927
https://github.com/psi4/psi4/issues/2223#issuecomment-870586927:175,Safety,risk,risk,175,`compute_gradient` is also in use py-side for dispersion. perhaps we could cease to export the fn for general wfn and only keep export for libdisp and dfmp2. that reduces the risk of relativistic misuse to one method.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2223#issuecomment-870586927
https://github.com/psi4/psi4/issues/2223#issuecomment-870588844:175,Modifiability,refactor,refactor,175,"That would be an improvement? I'd need to look at `libdisp` to see if we can remove it more aggressively, but I know for sure that taking it out of `dfmp2` is a fairly simple refactor. And of course, I can rearrange `dct`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2223#issuecomment-870588844
https://github.com/psi4/psi4/issues/2223#issuecomment-870588844:168,Usability,simpl,simple,168,"That would be an improvement? I'd need to look at `libdisp` to see if we can remove it more aggressively, but I know for sure that taking it out of `dfmp2` is a fairly simple refactor. And of course, I can rearrange `dct`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2223#issuecomment-870588844
https://github.com/psi4/psi4/pull/2225#issuecomment-871767934:339,Energy Efficiency,energy,energy,339,"Thanks for this!. Bullet points before an in-depth review:; * Why have separate `form_C` and `form_C_level_shift`? I could imagine a single `form_C` function that takes a level shift `int` that defaults to 0.; * This needs user docs on when to use level shifts, how to select a good level shift, and whether this will change the converged energy/orbitals/density-matrix/Fock-matrix; * To get the build working, please commit the `CMakeLists.txt` file for `scf-level-shift-rks`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2225#issuecomment-871767934
https://github.com/psi4/psi4/pull/2225#issuecomment-871777423:501,Energy Efficiency,energy,energy,501,"> * Why have separate `form_C` and `form_C_level_shift`? I could imagine a single `form_C` function that takes a level shift `int` that defaults to 0. I didn't want to change the signature of `form_C`. However, having one function is, of course, the cleanest solution. Since the level shifting is a tiny bit more work, I use plain diagonalization if the shift vanishes. > * This needs user docs on when to use level shifts, how to select a good level shift, and whether this will change the converged energy/orbitals/density-matrix/Fock-matrix. Added. > * To get the build working, please commit the `CMakeLists.txt` file for `scf-level-shift-rks`. Done",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2225#issuecomment-871777423
https://github.com/psi4/psi4/issues/2228#issuecomment-872891922:11529,Deployability,update,update,11529,"ay(_q_h1b); _q_mohijkl = numpy.asarray(_q_mints.mo_eri(_q_hf_wavefn.Ca(), _q_hf_wavefn.Ca(),; _q_hf_wavefn.Ca(), _q_hf_wavefn.Ca())); _q_molecule.mo_eri_ints = _q_mohijkl; _q_molecule.mo_eri_ints_bb = None; _q_molecule.mo_eri_ints_ba = None; if _has_B:; _q_mohijkl_BB = numpy.asarray(_q_mints.mo_eri(_q_hf_wavefn.Cb(), _q_hf_wavefn.Cb(),; _q_hf_wavefn.Cb(), _q_hf_wavefn.Cb())); _q_molecule.mo_eri_ints_bb = _q_mohijkl_BB; _q_mohijkl_BA = numpy.asarray(_q_mints.mo_eri(_q_hf_wavefn.Cb(), _q_hf_wavefn.Cb(),; _q_hf_wavefn.Ca(), _q_hf_wavefn.Ca())); _q_molecule.mo_eri_ints_ba = _q_mohijkl_BA; _q_dipole = _q_mints.ao_dipole(); _q_molecule.x_dip_ints = numpy.asarray(_q_dipole[0]); _q_molecule.y_dip_ints = numpy.asarray(_q_dipole[1]); _q_molecule.z_dip_ints = numpy.asarray(_q_dipole[2]); _q_dipole = _q_mints.ao_dipole(); for _n in range(len(_q_dipole)):; _q_dipole[_n].transform(_q_hf_wavefn.Ca()); _q_molecule.x_dip_mo_ints = numpy.asarray(_q_dipole[0]); _q_molecule.x_dip_mo_ints_b = None; _q_molecule.y_dip_mo_ints = numpy.asarray(_q_dipole[1]); _q_molecule.y_dip_mo_ints_b = None; _q_molecule.z_dip_mo_ints = numpy.asarray(_q_dipole[2]); _q_molecule.z_dip_mo_ints_b = None; if _has_B:; _q_dipole = _q_mints.ao_dipole(); for _n in range(len(_q_dipole)):; _q_dipole[_n].transform(_q_hf_wavefn.Cb()); _q_molecule.x_dip_mo_ints_b = numpy.asarray(_q_dipole[0]); _q_molecule.y_dip_mo_ints_b = numpy.asarray(_q_dipole[1]); _q_molecule.z_dip_mo_ints_b = numpy.asarray(_q_dipole[2]); _q_nd = _q_mol.nuclear_dipole(); _q_molecule.nuclear_dipole_moment = numpy.array([_q_nd[0], _q_nd[1], _q_nd[2]]); _q_molecule.reverse_dipole_sign = False; _q_molecule.save(). ```; Above outputs are all created with disabled workaround. Surprisingly my workaround doesn't work anymore even though I didn't (actively) update/change anything else. It seems it's not the backslash problem but might be the capital/small 'c' for the drive. But therewith I trust in your bug-fixing skills.; Thanks for looking into this issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2228#issuecomment-872891922
https://github.com/psi4/psi4/issues/2228#issuecomment-872891922:2014,Energy Efficiency,energy,energy,2014,"nts\\qiskit_scripts\',\'C:\\Users\\poc\\Anaconda3\\envs\\qiskit-0-27-psi4-jupyter\\python38.zip\',\'C:\\Users\\poc\\Anaconda3\\envs\\qiskit-0-27-psi4-jupyter\\DLLs\',\'C:\\Users\\poc\\Anaconda3\\envs\\qiskit-0-27-psi4-jupyter\\lib\',\'C:\\Users\\poc\\Anaconda3\\envs\\qiskit-0-27-psi4-jupyter\',\'C:\\Users\\poc\\Anaconda3\\envs\\qiskit-0-27-psi4-jupyter\\lib\\site-packages\',\'C:\\Users\\poc\\Anaconda3\\envs\\qiskit-0-27-psi4-jupyter\\lib\\site-packages\\win32\',\'C:\\Users\\poc\\Anaconda3\\envs\\qiskit-0-27-psi4-jupyter\\lib\\site-packages\\win32\\lib\',\'C:\\Users\\poc\\Anaconda3\\envs\\qiskit-0-27-psi4-jupyter\\lib\\site-packages\\Pythonwin\'] + sys.path\nfrom qiskit_nature.drivers.qmolecule import QMolecule\n_q_molecule = QMolecule(""C:\\Users\\poc\\AppData\\Local\\Temp\\tmpyn_j4sp7.hdf5"")\nimport numpy\ncore.get_active_molecule().fix_com(True)\ncore.get_active_molecule().fix_orientation(True)\ncore.get_active_molecule().reset_point_group(\'c1\')\n_q_hf_energy, _q_hf_wavefn = energy(\'scf\', return_wfn=True)\n_q_mints = MintsHelper(_q_hf_wavefn.basisset())\n_q_mol = _q_hf_wavefn.molecule()\n_has_B = not _q_hf_wavefn.same_a_b_orbs()\n_q_molecule.origin_driver_version = psi4.__version__\n_q_molecule.hf_energy = _q_hf_energy\n_q_molecule.nuclear_repulsion_energy = _q_mol.nuclear_repulsion_energy()\n_q_molecule.num_molecular_orbitals = _q_hf_wavefn.nmo()\n_q_molecule.num_alpha = _q_hf_wavefn.nalpha()\n_q_molecule.num_beta = _q_hf_wavefn.nbeta()\n_q_molecule.mo_coeff = numpy.asarray(_q_hf_wavefn.Ca())\n_q_molecule.mo_coeff_b = numpy.asarray(_q_hf_wavefn.Cb()) if _has_B else None\n_q_molecule.orbital_energies = numpy.asarray(_q_hf_wavefn.epsilon_a())\n_q_molecule.orbital_energies_b = numpy.asarray(_q_hf_wavefn.epsilon_b()) if _has_B else None\n_q_molecule.molecular_charge = _q_mol.molecular_charge()\n_q_molecule.multiplicity = _q_mol.multiplicity()\n_q_molecule.num_atoms = _q_mol.natom()\n_q_molecule.atom_symbol = []\n_q_molecule.atom_xyz = numpy.empty([_q_mol.natom(), ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2228#issuecomment-872891922
https://github.com/psi4/psi4/issues/2228#issuecomment-872891922:7870,Energy Efficiency,energy,energy,7870,"onda3\envs\qiskit-0-27-psi4-jupyter\python38.zip','C:\Users\poc\Anaconda3\envs\qiskit-0-27-psi4-jupyter\DLLs','C:\Users\poc\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib','C:\Users\poc\Anaconda3\envs\qiskit-0-27-psi4-jupyter','','C:\Users\poc\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages','C:\Users\poc\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\win32','C:\Users\poc\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\win32\lib','C:\Users\poc\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\Pythonwin','C:\Users\poc\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\IPython\extensions','C:\Users\poc\.ipython'] + sys.path; from qiskit_nature.drivers.qmolecule import QMolecule; _q_molecule = QMolecule(""C:\Users\poc\AppData\Local\Temp\tmpa8t4a3xf.hdf5""); import numpy; core.get_active_molecule().fix_com(True); core.get_active_molecule().fix_orientation(True); core.get_active_molecule().reset_point_group('c1'); _q_hf_energy, _q_hf_wavefn = energy('scf', return_wfn=True); _q_mints = MintsHelper(_q_hf_wavefn.basisset()); _q_mol = _q_hf_wavefn.molecule(); _has_B = not _q_hf_wavefn.same_a_b_orbs(); _q_molecule.origin_driver_version = psi4.__version__; _q_molecule.hf_energy = _q_hf_energy; _q_molecule.nuclear_repulsion_energy = _q_mol.nuclear_repulsion_energy(); _q_molecule.num_molecular_orbitals = _q_hf_wavefn.nmo(); _q_molecule.num_alpha = _q_hf_wavefn.nalpha(); _q_molecule.num_beta = _q_hf_wavefn.nbeta(); _q_molecule.mo_coeff = numpy.asarray(_q_hf_wavefn.Ca()); _q_molecule.mo_coeff_b = numpy.asarray(_q_hf_wavefn.Cb()) if _has_B else None; _q_molecule.orbital_energies = numpy.asarray(_q_hf_wavefn.epsilon_a()); _q_molecule.orbital_energies_b = numpy.asarray(_q_hf_wavefn.epsilon_b()) if _has_B else None; _q_molecule.molecular_charge = _q_mol.molecular_charge(); _q_molecule.multiplicity = _q_mol.multiplicity(); _q_molecule.num_atoms = _q_mol.natom(); _q_molecule.atom_symbol = []; _q_molecule.atom_xyz = numpy.empty([_q_mol.natom(), 3]",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2228#issuecomment-872891922
https://github.com/psi4/psi4/issues/2228#issuecomment-873004517:290,Availability,ping,ping,290,"Thanks for the content lines. I agree with Jonathon that the troublesome part arises from https://github.com/Qiskit/qiskit-aqua/blob/1f2c316c3a1aca1296f45241d14ad8ae5fbe2027/qiskit/chemistry/drivers/psi4d/psi4driver.py#L107-L117 so it'll need to be changed there. If you like, feel free to ping me when you open an issue there. I think I could help modernize/simplify how they call psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2228#issuecomment-873004517
https://github.com/psi4/psi4/issues/2228#issuecomment-873004517:359,Usability,simpl,simplify,359,"Thanks for the content lines. I agree with Jonathon that the troublesome part arises from https://github.com/Qiskit/qiskit-aqua/blob/1f2c316c3a1aca1296f45241d14ad8ae5fbe2027/qiskit/chemistry/drivers/psi4d/psi4driver.py#L107-L117 so it'll need to be changed there. If you like, feel free to ping me when you open an issue there. I think I could help modernize/simplify how they call psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2228#issuecomment-873004517
https://github.com/psi4/psi4/pull/2229#issuecomment-872543523:321,Availability,error,errors,321,"> Just checking that the extra precision added https://github.com/psi4/psi4/pull/1510/files didn't get lost. We studied numerical precision and couldn't justify going out to the **17** decimal places reported after #1510: the Python code couldn't reproduce the C++ code out that far. My memory is hazy, but I recall some errors that were normally in the 14th decimal place but could rarely reach to the 12th decimal place, which I suspected were related to the numerical precision of S^(-1/2). This made me want to cut back the number of decimal places to something less fragile. I [checked in](https://github.com/psi4/psi4/issues/1973) about why we had 17 decimal places in the first place, and the person who made the change simply assumed that we had that many decimals of precision. In my judgment, we do not, and it was a mistake to ever report that many decimal places. I _also_ checked that 10 decimal places was enough to keep #1486 fixed. (That was the issue that originally prompted the increased precision in our Molden files.) While the 4 decimal places of the pre-#1486 era had the bug, the 10 decimal places of this PR did not. While we could _maybe_ go out to 11 or 12 decimal places, trying to get 17 decimal places of precision would require an analysis of round-off error in every line of the SCF code. This seems far beyond the scope of the PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2229#issuecomment-872543523
https://github.com/psi4/psi4/pull/2229#issuecomment-872543523:1284,Availability,error,error,1284,"> Just checking that the extra precision added https://github.com/psi4/psi4/pull/1510/files didn't get lost. We studied numerical precision and couldn't justify going out to the **17** decimal places reported after #1510: the Python code couldn't reproduce the C++ code out that far. My memory is hazy, but I recall some errors that were normally in the 14th decimal place but could rarely reach to the 12th decimal place, which I suspected were related to the numerical precision of S^(-1/2). This made me want to cut back the number of decimal places to something less fragile. I [checked in](https://github.com/psi4/psi4/issues/1973) about why we had 17 decimal places in the first place, and the person who made the change simply assumed that we had that many decimals of precision. In my judgment, we do not, and it was a mistake to ever report that many decimal places. I _also_ checked that 10 decimal places was enough to keep #1486 fixed. (That was the issue that originally prompted the increased precision in our Molden files.) While the 4 decimal places of the pre-#1486 era had the bug, the 10 decimal places of this PR did not. While we could _maybe_ go out to 11 or 12 decimal places, trying to get 17 decimal places of precision would require an analysis of round-off error in every line of the SCF code. This seems far beyond the scope of the PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2229#issuecomment-872543523
https://github.com/psi4/psi4/pull/2229#issuecomment-872543523:727,Usability,simpl,simply,727,"> Just checking that the extra precision added https://github.com/psi4/psi4/pull/1510/files didn't get lost. We studied numerical precision and couldn't justify going out to the **17** decimal places reported after #1510: the Python code couldn't reproduce the C++ code out that far. My memory is hazy, but I recall some errors that were normally in the 14th decimal place but could rarely reach to the 12th decimal place, which I suspected were related to the numerical precision of S^(-1/2). This made me want to cut back the number of decimal places to something less fragile. I [checked in](https://github.com/psi4/psi4/issues/1973) about why we had 17 decimal places in the first place, and the person who made the change simply assumed that we had that many decimals of precision. In my judgment, we do not, and it was a mistake to ever report that many decimal places. I _also_ checked that 10 decimal places was enough to keep #1486 fixed. (That was the issue that originally prompted the increased precision in our Molden files.) While the 4 decimal places of the pre-#1486 era had the bug, the 10 decimal places of this PR did not. While we could _maybe_ go out to 11 or 12 decimal places, trying to get 17 decimal places of precision would require an analysis of round-off error in every line of the SCF code. This seems far beyond the scope of the PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2229#issuecomment-872543523
https://github.com/psi4/psi4/pull/2230#issuecomment-872519016:76,Availability,failure,failures,76,"The new basis sets are fine. Updates of the old basis sets are causing test failures associated with changing basis set parameters. For example, STO-3G hydrogen basis sets are changing in the ninth decimal place because we only _had_ eight decimal places previously, causing some ""check numbers to the ninth decimal place"" tests to fail. While I trust the numbers from the newer EMSL, we need to make sure full tests passes before merging this in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2230#issuecomment-872519016
https://github.com/psi4/psi4/pull/2230#issuecomment-872519016:29,Deployability,Update,Updates,29,"The new basis sets are fine. Updates of the old basis sets are causing test failures associated with changing basis set parameters. For example, STO-3G hydrogen basis sets are changing in the ninth decimal place because we only _had_ eight decimal places previously, causing some ""check numbers to the ninth decimal place"" tests to fail. While I trust the numbers from the newer EMSL, we need to make sure full tests passes before merging this in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2230#issuecomment-872519016
https://github.com/psi4/psi4/pull/2230#issuecomment-872519016:71,Testability,test,test,71,"The new basis sets are fine. Updates of the old basis sets are causing test failures associated with changing basis set parameters. For example, STO-3G hydrogen basis sets are changing in the ninth decimal place because we only _had_ eight decimal places previously, causing some ""check numbers to the ninth decimal place"" tests to fail. While I trust the numbers from the newer EMSL, we need to make sure full tests passes before merging this in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2230#issuecomment-872519016
https://github.com/psi4/psi4/pull/2230#issuecomment-872519016:323,Testability,test,tests,323,"The new basis sets are fine. Updates of the old basis sets are causing test failures associated with changing basis set parameters. For example, STO-3G hydrogen basis sets are changing in the ninth decimal place because we only _had_ eight decimal places previously, causing some ""check numbers to the ninth decimal place"" tests to fail. While I trust the numbers from the newer EMSL, we need to make sure full tests passes before merging this in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2230#issuecomment-872519016
https://github.com/psi4/psi4/pull/2230#issuecomment-872519016:411,Testability,test,tests,411,"The new basis sets are fine. Updates of the old basis sets are causing test failures associated with changing basis set parameters. For example, STO-3G hydrogen basis sets are changing in the ninth decimal place because we only _had_ eight decimal places previously, causing some ""check numbers to the ninth decimal place"" tests to fail. While I trust the numbers from the newer EMSL, we need to make sure full tests passes before merging this in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2230#issuecomment-872519016
https://github.com/psi4/psi4/pull/2233#issuecomment-873124663:345,Availability,error,errors,345,"> It would be good for me to write a test case for everything I check as part of DCT and Linear Dependencies #2231. Should this live in ctests or pytests? I'm not clear on test best practices at this point in Psi development, since we want to mover over to pytests eventually. Even then, right now is a bad time to write the test since Fix GEMM errors in presence of linear dependencies #2232 will change the reference output. In the beginning I may have had (and spoken) dreams of rewriting all the ctests in psiapi for pytest, but I've since been talked down, and the plan is to allow each ctest input.dat to stay where it is and be wrapped in a pytest test (like psi4numpy). There'll have to be extra install steps to position the ctest inputs into the python module directory. Upshot is it's fine to continue choosing psithon or psiapi style for writing new tests, mostly depending on testing style convenience and whether the test would serve as an easy model for users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-873124663
https://github.com/psi4/psi4/pull/2233#issuecomment-873124663:556,Availability,down,down,556,"> It would be good for me to write a test case for everything I check as part of DCT and Linear Dependencies #2231. Should this live in ctests or pytests? I'm not clear on test best practices at this point in Psi development, since we want to mover over to pytests eventually. Even then, right now is a bad time to write the test since Fix GEMM errors in presence of linear dependencies #2232 will change the reference output. In the beginning I may have had (and spoken) dreams of rewriting all the ctests in psiapi for pytest, but I've since been talked down, and the plan is to allow each ctest input.dat to stay where it is and be wrapped in a pytest test (like psi4numpy). There'll have to be extra install steps to position the ctest inputs into the python module directory. Upshot is it's fine to continue choosing psithon or psiapi style for writing new tests, mostly depending on testing style convenience and whether the test would serve as an easy model for users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-873124663
https://github.com/psi4/psi4/pull/2233#issuecomment-873124663:704,Deployability,install,install,704,"> It would be good for me to write a test case for everything I check as part of DCT and Linear Dependencies #2231. Should this live in ctests or pytests? I'm not clear on test best practices at this point in Psi development, since we want to mover over to pytests eventually. Even then, right now is a bad time to write the test since Fix GEMM errors in presence of linear dependencies #2232 will change the reference output. In the beginning I may have had (and spoken) dreams of rewriting all the ctests in psiapi for pytest, but I've since been talked down, and the plan is to allow each ctest input.dat to stay where it is and be wrapped in a pytest test (like psi4numpy). There'll have to be extra install steps to position the ctest inputs into the python module directory. Upshot is it's fine to continue choosing psithon or psiapi style for writing new tests, mostly depending on testing style convenience and whether the test would serve as an easy model for users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-873124663
https://github.com/psi4/psi4/pull/2233#issuecomment-873124663:96,Integrability,Depend,Dependencies,96,"> It would be good for me to write a test case for everything I check as part of DCT and Linear Dependencies #2231. Should this live in ctests or pytests? I'm not clear on test best practices at this point in Psi development, since we want to mover over to pytests eventually. Even then, right now is a bad time to write the test since Fix GEMM errors in presence of linear dependencies #2232 will change the reference output. In the beginning I may have had (and spoken) dreams of rewriting all the ctests in psiapi for pytest, but I've since been talked down, and the plan is to allow each ctest input.dat to stay where it is and be wrapped in a pytest test (like psi4numpy). There'll have to be extra install steps to position the ctest inputs into the python module directory. Upshot is it's fine to continue choosing psithon or psiapi style for writing new tests, mostly depending on testing style convenience and whether the test would serve as an easy model for users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-873124663
https://github.com/psi4/psi4/pull/2233#issuecomment-873124663:374,Integrability,depend,dependencies,374,"> It would be good for me to write a test case for everything I check as part of DCT and Linear Dependencies #2231. Should this live in ctests or pytests? I'm not clear on test best practices at this point in Psi development, since we want to mover over to pytests eventually. Even then, right now is a bad time to write the test since Fix GEMM errors in presence of linear dependencies #2232 will change the reference output. In the beginning I may have had (and spoken) dreams of rewriting all the ctests in psiapi for pytest, but I've since been talked down, and the plan is to allow each ctest input.dat to stay where it is and be wrapped in a pytest test (like psi4numpy). There'll have to be extra install steps to position the ctest inputs into the python module directory. Upshot is it's fine to continue choosing psithon or psiapi style for writing new tests, mostly depending on testing style convenience and whether the test would serve as an easy model for users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-873124663
https://github.com/psi4/psi4/pull/2233#issuecomment-873124663:635,Integrability,wrap,wrapped,635,"> It would be good for me to write a test case for everything I check as part of DCT and Linear Dependencies #2231. Should this live in ctests or pytests? I'm not clear on test best practices at this point in Psi development, since we want to mover over to pytests eventually. Even then, right now is a bad time to write the test since Fix GEMM errors in presence of linear dependencies #2232 will change the reference output. In the beginning I may have had (and spoken) dreams of rewriting all the ctests in psiapi for pytest, but I've since been talked down, and the plan is to allow each ctest input.dat to stay where it is and be wrapped in a pytest test (like psi4numpy). There'll have to be extra install steps to position the ctest inputs into the python module directory. Upshot is it's fine to continue choosing psithon or psiapi style for writing new tests, mostly depending on testing style convenience and whether the test would serve as an easy model for users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-873124663
https://github.com/psi4/psi4/pull/2233#issuecomment-873124663:876,Integrability,depend,depending,876,"> It would be good for me to write a test case for everything I check as part of DCT and Linear Dependencies #2231. Should this live in ctests or pytests? I'm not clear on test best practices at this point in Psi development, since we want to mover over to pytests eventually. Even then, right now is a bad time to write the test since Fix GEMM errors in presence of linear dependencies #2232 will change the reference output. In the beginning I may have had (and spoken) dreams of rewriting all the ctests in psiapi for pytest, but I've since been talked down, and the plan is to allow each ctest input.dat to stay where it is and be wrapped in a pytest test (like psi4numpy). There'll have to be extra install steps to position the ctest inputs into the python module directory. Upshot is it's fine to continue choosing psithon or psiapi style for writing new tests, mostly depending on testing style convenience and whether the test would serve as an easy model for users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-873124663
https://github.com/psi4/psi4/pull/2233#issuecomment-873124663:37,Testability,test,test,37,"> It would be good for me to write a test case for everything I check as part of DCT and Linear Dependencies #2231. Should this live in ctests or pytests? I'm not clear on test best practices at this point in Psi development, since we want to mover over to pytests eventually. Even then, right now is a bad time to write the test since Fix GEMM errors in presence of linear dependencies #2232 will change the reference output. In the beginning I may have had (and spoken) dreams of rewriting all the ctests in psiapi for pytest, but I've since been talked down, and the plan is to allow each ctest input.dat to stay where it is and be wrapped in a pytest test (like psi4numpy). There'll have to be extra install steps to position the ctest inputs into the python module directory. Upshot is it's fine to continue choosing psithon or psiapi style for writing new tests, mostly depending on testing style convenience and whether the test would serve as an easy model for users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-873124663
https://github.com/psi4/psi4/pull/2233#issuecomment-873124663:172,Testability,test,test,172,"> It would be good for me to write a test case for everything I check as part of DCT and Linear Dependencies #2231. Should this live in ctests or pytests? I'm not clear on test best practices at this point in Psi development, since we want to mover over to pytests eventually. Even then, right now is a bad time to write the test since Fix GEMM errors in presence of linear dependencies #2232 will change the reference output. In the beginning I may have had (and spoken) dreams of rewriting all the ctests in psiapi for pytest, but I've since been talked down, and the plan is to allow each ctest input.dat to stay where it is and be wrapped in a pytest test (like psi4numpy). There'll have to be extra install steps to position the ctest inputs into the python module directory. Upshot is it's fine to continue choosing psithon or psiapi style for writing new tests, mostly depending on testing style convenience and whether the test would serve as an easy model for users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-873124663
https://github.com/psi4/psi4/pull/2233#issuecomment-873124663:325,Testability,test,test,325,"> It would be good for me to write a test case for everything I check as part of DCT and Linear Dependencies #2231. Should this live in ctests or pytests? I'm not clear on test best practices at this point in Psi development, since we want to mover over to pytests eventually. Even then, right now is a bad time to write the test since Fix GEMM errors in presence of linear dependencies #2232 will change the reference output. In the beginning I may have had (and spoken) dreams of rewriting all the ctests in psiapi for pytest, but I've since been talked down, and the plan is to allow each ctest input.dat to stay where it is and be wrapped in a pytest test (like psi4numpy). There'll have to be extra install steps to position the ctest inputs into the python module directory. Upshot is it's fine to continue choosing psithon or psiapi style for writing new tests, mostly depending on testing style convenience and whether the test would serve as an easy model for users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-873124663
https://github.com/psi4/psi4/pull/2233#issuecomment-873124663:655,Testability,test,test,655,"> It would be good for me to write a test case for everything I check as part of DCT and Linear Dependencies #2231. Should this live in ctests or pytests? I'm not clear on test best practices at this point in Psi development, since we want to mover over to pytests eventually. Even then, right now is a bad time to write the test since Fix GEMM errors in presence of linear dependencies #2232 will change the reference output. In the beginning I may have had (and spoken) dreams of rewriting all the ctests in psiapi for pytest, but I've since been talked down, and the plan is to allow each ctest input.dat to stay where it is and be wrapped in a pytest test (like psi4numpy). There'll have to be extra install steps to position the ctest inputs into the python module directory. Upshot is it's fine to continue choosing psithon or psiapi style for writing new tests, mostly depending on testing style convenience and whether the test would serve as an easy model for users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-873124663
https://github.com/psi4/psi4/pull/2233#issuecomment-873124663:862,Testability,test,tests,862,"> It would be good for me to write a test case for everything I check as part of DCT and Linear Dependencies #2231. Should this live in ctests or pytests? I'm not clear on test best practices at this point in Psi development, since we want to mover over to pytests eventually. Even then, right now is a bad time to write the test since Fix GEMM errors in presence of linear dependencies #2232 will change the reference output. In the beginning I may have had (and spoken) dreams of rewriting all the ctests in psiapi for pytest, but I've since been talked down, and the plan is to allow each ctest input.dat to stay where it is and be wrapped in a pytest test (like psi4numpy). There'll have to be extra install steps to position the ctest inputs into the python module directory. Upshot is it's fine to continue choosing psithon or psiapi style for writing new tests, mostly depending on testing style convenience and whether the test would serve as an easy model for users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-873124663
https://github.com/psi4/psi4/pull/2233#issuecomment-873124663:889,Testability,test,testing,889,"> It would be good for me to write a test case for everything I check as part of DCT and Linear Dependencies #2231. Should this live in ctests or pytests? I'm not clear on test best practices at this point in Psi development, since we want to mover over to pytests eventually. Even then, right now is a bad time to write the test since Fix GEMM errors in presence of linear dependencies #2232 will change the reference output. In the beginning I may have had (and spoken) dreams of rewriting all the ctests in psiapi for pytest, but I've since been talked down, and the plan is to allow each ctest input.dat to stay where it is and be wrapped in a pytest test (like psi4numpy). There'll have to be extra install steps to position the ctest inputs into the python module directory. Upshot is it's fine to continue choosing psithon or psiapi style for writing new tests, mostly depending on testing style convenience and whether the test would serve as an easy model for users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-873124663
https://github.com/psi4/psi4/pull/2233#issuecomment-873124663:931,Testability,test,test,931,"> It would be good for me to write a test case for everything I check as part of DCT and Linear Dependencies #2231. Should this live in ctests or pytests? I'm not clear on test best practices at this point in Psi development, since we want to mover over to pytests eventually. Even then, right now is a bad time to write the test since Fix GEMM errors in presence of linear dependencies #2232 will change the reference output. In the beginning I may have had (and spoken) dreams of rewriting all the ctests in psiapi for pytest, but I've since been talked down, and the plan is to allow each ctest input.dat to stay where it is and be wrapped in a pytest test (like psi4numpy). There'll have to be extra install steps to position the ctest inputs into the python module directory. Upshot is it's fine to continue choosing psithon or psiapi style for writing new tests, mostly depending on testing style convenience and whether the test would serve as an easy model for users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-873124663
https://github.com/psi4/psi4/pull/2233#issuecomment-873124663:163,Usability,clear,clear,163,"> It would be good for me to write a test case for everything I check as part of DCT and Linear Dependencies #2231. Should this live in ctests or pytests? I'm not clear on test best practices at this point in Psi development, since we want to mover over to pytests eventually. Even then, right now is a bad time to write the test since Fix GEMM errors in presence of linear dependencies #2232 will change the reference output. In the beginning I may have had (and spoken) dreams of rewriting all the ctests in psiapi for pytest, but I've since been talked down, and the plan is to allow each ctest input.dat to stay where it is and be wrapped in a pytest test (like psi4numpy). There'll have to be extra install steps to position the ctest inputs into the python module directory. Upshot is it's fine to continue choosing psithon or psiapi style for writing new tests, mostly depending on testing style convenience and whether the test would serve as an easy model for users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-873124663
https://github.com/psi4/psi4/pull/2233#issuecomment-875774733:67,Testability,test,test,67,"Latest force push is a rebase of the branch, and a new commit with test cases. I still need one more reviewer. The actual coding is just replacing `nsopi` with `nmopi` in cases when we're obviously dealing with molecular orbitals, so should be an easy review!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-875774733
https://github.com/psi4/psi4/issues/2234#issuecomment-876570990:56,Testability,test,test,56,"How did you come to be running those as none are in the test suite? `large-atoms` is waiting on ECP tech. `min-input` was essentially replaced by the stdsuite. The latter two can't run outside of ctest anyways, and I don't think we want to encourage the sowreap capability.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2234#issuecomment-876570990
https://github.com/psi4/psi4/issues/2234#issuecomment-876616242:77,Testability,test,tests,77,Oh I just grepped the ones that use STO-3G... I didn't expect to find broken tests in the tests directory,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2234#issuecomment-876616242
https://github.com/psi4/psi4/issues/2234#issuecomment-876616242:90,Testability,test,tests,90,Oh I just grepped the ones that use STO-3G... I didn't expect to find broken tests in the tests directory,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2234#issuecomment-876616242
https://github.com/psi4/psi4/issues/2234#issuecomment-925838802:34,Testability,test,tests,34,"Are we clear to remove those four tests, then?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2234#issuecomment-925838802
https://github.com/psi4/psi4/issues/2234#issuecomment-925838802:7,Usability,clear,clear,7,"Are we clear to remove those four tests, then?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2234#issuecomment-925838802
https://github.com/psi4/psi4/issues/2234#issuecomment-925993430:55,Testability,test,test,55,We should keep `large-atoms`. It's the start of a good test iirc once psi catches up. Agree on ditching the other three. There's probably more dead tests in the suite like the `optking/` folder and these: https://github.com/psi4/psi4/blob/master/tests/CMakeLists.txt#L33-L35. Can do a thorough cleanout when switch to pytest.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2234#issuecomment-925993430
https://github.com/psi4/psi4/issues/2234#issuecomment-925993430:148,Testability,test,tests,148,We should keep `large-atoms`. It's the start of a good test iirc once psi catches up. Agree on ditching the other three. There's probably more dead tests in the suite like the `optking/` folder and these: https://github.com/psi4/psi4/blob/master/tests/CMakeLists.txt#L33-L35. Can do a thorough cleanout when switch to pytest.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2234#issuecomment-925993430
https://github.com/psi4/psi4/issues/2234#issuecomment-925993430:246,Testability,test,tests,246,We should keep `large-atoms`. It's the start of a good test iirc once psi catches up. Agree on ditching the other three. There's probably more dead tests in the suite like the `optking/` folder and these: https://github.com/psi4/psi4/blob/master/tests/CMakeLists.txt#L33-L35. Can do a thorough cleanout when switch to pytest.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2234#issuecomment-925993430
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:353,Availability,error,errors,353,"Yes, this is a much longed for feature in Psi4, since there's no initial SCF procedure. Psi4 relies - surprisingly succesfully - on the chance that when started from even bad orbitals, the SCF converges without difficulty. The only problem case is some complicated transition metal systems where the procedure just does not converge since there are big errors in any direction. For instance, I tried recently several calculations of this type, and found out having to use different SCF guesses or initial calculations at some other other level simply because the DFT did not converge in Psi4 by default. Having the new level shifting techique from #2216 will help in getting more stable convergence. There are really only two classes of non-convergence: 1) that you had a really crappy orbital guess, which DIIS in Psi4 was not able to minimize but rather started oscillating between two nearly degenerate solutions, or 2) the actual system is so ill behaved that the SCF itself is a bit ill-conditioned and you should use analytical second-order methods to reliably solve the problem. (Of course 1&2 is another possibility in itself.). When I wrote ERKALE as a graduate student I ran across the Hu&Yang paper [J. Chem. Phys. 132, 054109 (2010)](https://doi.org/10.1063/1.3304922) for the ADIIS convergence accelerator. It is simpler than EDIIS, and can be implemented with the same ingredients as usual DIIS: Fock and density matrices. What you need to do is just solve the K-dimensional minimization problem min_{C} E_(ADIIS) for the expansion coefficients C from which you get the extrapolated Fock matrix `F_DIIS = \sum_i c_i F_i`. If I remember correctly, there's a paper that shows that ADIIS and EDIIS are the same method, assuming that you're running at Hartree-Fock level of theory. However, I think the methods are not the same for DFT. With ADIIS+DIIS, you can converge most systems without any kind of problems. The only cases where you get problems are the ones where there really are phy",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:1058,Availability,reliab,reliably,1058,"Yes, this is a much longed for feature in Psi4, since there's no initial SCF procedure. Psi4 relies - surprisingly succesfully - on the chance that when started from even bad orbitals, the SCF converges without difficulty. The only problem case is some complicated transition metal systems where the procedure just does not converge since there are big errors in any direction. For instance, I tried recently several calculations of this type, and found out having to use different SCF guesses or initial calculations at some other other level simply because the DFT did not converge in Psi4 by default. Having the new level shifting techique from #2216 will help in getting more stable convergence. There are really only two classes of non-convergence: 1) that you had a really crappy orbital guess, which DIIS in Psi4 was not able to minimize but rather started oscillating between two nearly degenerate solutions, or 2) the actual system is so ill behaved that the SCF itself is a bit ill-conditioned and you should use analytical second-order methods to reliably solve the problem. (Of course 1&2 is another possibility in itself.). When I wrote ERKALE as a graduate student I ran across the Hu&Yang paper [J. Chem. Phys. 132, 054109 (2010)](https://doi.org/10.1063/1.3304922) for the ADIIS convergence accelerator. It is simpler than EDIIS, and can be implemented with the same ingredients as usual DIIS: Fock and density matrices. What you need to do is just solve the K-dimensional minimization problem min_{C} E_(ADIIS) for the expansion coefficients C from which you get the extrapolated Fock matrix `F_DIIS = \sum_i c_i F_i`. If I remember correctly, there's a paper that shows that ADIIS and EDIIS are the same method, assuming that you're running at Hartree-Fock level of theory. However, I think the methods are not the same for DFT. With ADIIS+DIIS, you can converge most systems without any kind of problems. The only cases where you get problems are the ones where there really are phy",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:2550,Availability,error,error,2550,"trapolated Fock matrix `F_DIIS = \sum_i c_i F_i`. If I remember correctly, there's a paper that shows that ADIIS and EDIIS are the same method, assuming that you're running at Hartree-Fock level of theory. However, I think the methods are not the same for DFT. With ADIIS+DIIS, you can converge most systems without any kind of problems. The only cases where you get problems are the ones where there really are physical issues with the wave function, like e.g. with flat angular surfaces of the energy, where rotating the orbitals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:3000,Availability,error,error,3000,"ssues with the wave function, like e.g. with flat angular surfaces of the energy, where rotating the orbitals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:3051,Availability,error,error,3051,"itals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vecto",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:3961,Availability,recover,recovered,3961," the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vector picks up some component of the symmetry breaking dimension. In DIIS you can make these problems converge by increasing the DIIS history length, but then you often see that the SCF is actually going up in energy in the later calculation. Increasing the history length from the default (I think mine is 5, 6, or 7 iterations) to something like 15-25 allows the DIIS procedure to find enough linearly independent vectors to enforce that the resulting orbitals are going to belong to an extremal point. However, these points often then turn out to be saddle points, in which you can decrease the energy slightly (or a lot more) by moving some weight from an orbital to another... Then you have the true second-order schemes, like Newton-Raphs",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:5276,Availability,down,down,5276,"easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vector picks up some component of the symmetry breaking dimension. In DIIS you can make these problems converge by increasing the DIIS history length, but then you often see that the SCF is actually going up in energy in the later calculation. Increasing the history length from the default (I think mine is 5, 6, or 7 iterations) to something like 15-25 allows the DIIS procedure to find enough linearly independent vectors to enforce that the resulting orbitals are going to belong to an extremal point. However, these points often then turn out to be saddle points, in which you can decrease the energy slightly (or a lot more) by moving some weight from an orbital to another... Then you have the true second-order schemes, like Newton-Raphson SCF and trust region SCF. These are bound to give you a local solution, but they are 1) unreliable and 2) slow in the initial phases of the calculation. It is better to do first some ADIIS/EDIIS to get you to a reasonable solution, and only then start refining it with something fancier. Also GDM is a great solution for the initial phase of the calculation, since as you have a **guarantee** that you are taking a step down in energy. At variance, the first step in DIIS is usually up in energy, and it takes you a few steps to recover from. I'm sure there is always a use for the real second-order methods, but - when properly preconditioned - the gradient descent methods work really well, too.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:5385,Availability,recover,recover,5385,"easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vector picks up some component of the symmetry breaking dimension. In DIIS you can make these problems converge by increasing the DIIS history length, but then you often see that the SCF is actually going up in energy in the later calculation. Increasing the history length from the default (I think mine is 5, 6, or 7 iterations) to something like 15-25 allows the DIIS procedure to find enough linearly independent vectors to enforce that the resulting orbitals are going to belong to an extremal point. However, these points often then turn out to be saddle points, in which you can decrease the energy slightly (or a lot more) by moving some weight from an orbital to another... Then you have the true second-order schemes, like Newton-Raphson SCF and trust region SCF. These are bound to give you a local solution, but they are 1) unreliable and 2) slow in the initial phases of the calculation. It is better to do first some ADIIS/EDIIS to get you to a reasonable solution, and only then start refining it with something fancier. Also GDM is a great solution for the initial phase of the calculation, since as you have a **guarantee** that you are taking a step down in energy. At variance, the first step in DIIS is usually up in energy, and it takes you a few steps to recover from. I'm sure there is always a use for the real second-order methods, but - when properly preconditioned - the gradient descent methods work really well, too.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:2082,Energy Efficiency,energy,energy,2082," is another possibility in itself.). When I wrote ERKALE as a graduate student I ran across the Hu&Yang paper [J. Chem. Phys. 132, 054109 (2010)](https://doi.org/10.1063/1.3304922) for the ADIIS convergence accelerator. It is simpler than EDIIS, and can be implemented with the same ingredients as usual DIIS: Fock and density matrices. What you need to do is just solve the K-dimensional minimization problem min_{C} E_(ADIIS) for the expansion coefficients C from which you get the extrapolated Fock matrix `F_DIIS = \sum_i c_i F_i`. If I remember correctly, there's a paper that shows that ADIIS and EDIIS are the same method, assuming that you're running at Hartree-Fock level of theory. However, I think the methods are not the same for DFT. With ADIIS+DIIS, you can converge most systems without any kind of problems. The only cases where you get problems are the ones where there really are physical issues with the wave function, like e.g. with flat angular surfaces of the energy, where rotating the orbitals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely h",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:2130,Energy Efficiency,energy,energy,2130," is another possibility in itself.). When I wrote ERKALE as a graduate student I ran across the Hu&Yang paper [J. Chem. Phys. 132, 054109 (2010)](https://doi.org/10.1063/1.3304922) for the ADIIS convergence accelerator. It is simpler than EDIIS, and can be implemented with the same ingredients as usual DIIS: Fock and density matrices. What you need to do is just solve the K-dimensional minimization problem min_{C} E_(ADIIS) for the expansion coefficients C from which you get the extrapolated Fock matrix `F_DIIS = \sum_i c_i F_i`. If I remember correctly, there's a paper that shows that ADIIS and EDIIS are the same method, assuming that you're running at Hartree-Fock level of theory. However, I think the methods are not the same for DFT. With ADIIS+DIIS, you can converge most systems without any kind of problems. The only cases where you get problems are the ones where there really are physical issues with the wave function, like e.g. with flat angular surfaces of the energy, where rotating the orbitals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely h",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:2645,Energy Efficiency,energy,energy,2645,"trapolated Fock matrix `F_DIIS = \sum_i c_i F_i`. If I remember correctly, there's a paper that shows that ADIIS and EDIIS are the same method, assuming that you're running at Hartree-Fock level of theory. However, I think the methods are not the same for DFT. With ADIIS+DIIS, you can converge most systems without any kind of problems. The only cases where you get problems are the ones where there really are physical issues with the wave function, like e.g. with flat angular surfaces of the energy, where rotating the orbitals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:2702,Energy Efficiency,energy,energy,2702,"uming that you're running at Hartree-Fock level of theory. However, I think the methods are not the same for DFT. With ADIIS+DIIS, you can converge most systems without any kind of problems. The only cases where you get problems are the ones where there really are physical issues with the wave function, like e.g. with flat angular surfaces of the energy, where rotating the orbitals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symm",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:2964,Energy Efficiency,efficient,efficiently,2964," any kind of problems. The only cases where you get problems are the ones where there really are physical issues with the wave function, like e.g. with flat angular surfaces of the energy, where rotating the orbitals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:3995,Energy Efficiency,energy,energy,3995," the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vector picks up some component of the symmetry breaking dimension. In DIIS you can make these problems converge by increasing the DIIS history length, but then you often see that the SCF is actually going up in energy in the later calculation. Increasing the history length from the default (I think mine is 5, 6, or 7 iterations) to something like 15-25 allows the DIIS procedure to find enough linearly independent vectors to enforce that the resulting orbitals are going to belong to an extremal point. However, these points often then turn out to be saddle points, in which you can decrease the energy slightly (or a lot more) by moving some weight from an orbital to another... Then you have the true second-order schemes, like Newton-Raphs",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:4319,Energy Efficiency,energy,energy,4319,"rom full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vector picks up some component of the symmetry breaking dimension. In DIIS you can make these problems converge by increasing the DIIS history length, but then you often see that the SCF is actually going up in energy in the later calculation. Increasing the history length from the default (I think mine is 5, 6, or 7 iterations) to something like 15-25 allows the DIIS procedure to find enough linearly independent vectors to enforce that the resulting orbitals are going to belong to an extremal point. However, these points often then turn out to be saddle points, in which you can decrease the energy slightly (or a lot more) by moving some weight from an orbital to another... Then you have the true second-order schemes, like Newton-Raphson SCF and trust region SCF. These are bound to give you a local solution, but they are 1) unreliable and 2) slow in the initial phases of the calculation. It is better to do first some ADIIS/EDIIS to get you to a reasonable solution, and only then start refining it with something fancier. Also GDM is a great solution for the initial phase of the calculation, since as you have a **guarantee** that you are t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:4707,Energy Efficiency,energy,energy,4707,"easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vector picks up some component of the symmetry breaking dimension. In DIIS you can make these problems converge by increasing the DIIS history length, but then you often see that the SCF is actually going up in energy in the later calculation. Increasing the history length from the default (I think mine is 5, 6, or 7 iterations) to something like 15-25 allows the DIIS procedure to find enough linearly independent vectors to enforce that the resulting orbitals are going to belong to an extremal point. However, these points often then turn out to be saddle points, in which you can decrease the energy slightly (or a lot more) by moving some weight from an orbital to another... Then you have the true second-order schemes, like Newton-Raphson SCF and trust region SCF. These are bound to give you a local solution, but they are 1) unreliable and 2) slow in the initial phases of the calculation. It is better to do first some ADIIS/EDIIS to get you to a reasonable solution, and only then start refining it with something fancier. Also GDM is a great solution for the initial phase of the calculation, since as you have a **guarantee** that you are taking a step down in energy. At variance, the first step in DIIS is usually up in energy, and it takes you a few steps to recover from. I'm sure there is always a use for the real second-order methods, but - when properly preconditioned - the gradient descent methods work really well, too.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:5284,Energy Efficiency,energy,energy,5284,"easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vector picks up some component of the symmetry breaking dimension. In DIIS you can make these problems converge by increasing the DIIS history length, but then you often see that the SCF is actually going up in energy in the later calculation. Increasing the history length from the default (I think mine is 5, 6, or 7 iterations) to something like 15-25 allows the DIIS procedure to find enough linearly independent vectors to enforce that the resulting orbitals are going to belong to an extremal point. However, these points often then turn out to be saddle points, in which you can decrease the energy slightly (or a lot more) by moving some weight from an orbital to another... Then you have the true second-order schemes, like Newton-Raphson SCF and trust region SCF. These are bound to give you a local solution, but they are 1) unreliable and 2) slow in the initial phases of the calculation. It is better to do first some ADIIS/EDIIS to get you to a reasonable solution, and only then start refining it with something fancier. Also GDM is a great solution for the initial phase of the calculation, since as you have a **guarantee** that you are taking a step down in energy. At variance, the first step in DIIS is usually up in energy, and it takes you a few steps to recover from. I'm sure there is always a use for the real second-order methods, but - when properly preconditioned - the gradient descent methods work really well, too.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:5345,Energy Efficiency,energy,energy,5345,"easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vector picks up some component of the symmetry breaking dimension. In DIIS you can make these problems converge by increasing the DIIS history length, but then you often see that the SCF is actually going up in energy in the later calculation. Increasing the history length from the default (I think mine is 5, 6, or 7 iterations) to something like 15-25 allows the DIIS procedure to find enough linearly independent vectors to enforce that the resulting orbitals are going to belong to an extremal point. However, these points often then turn out to be saddle points, in which you can decrease the energy slightly (or a lot more) by moving some weight from an orbital to another... Then you have the true second-order schemes, like Newton-Raphson SCF and trust region SCF. These are bound to give you a local solution, but they are 1) unreliable and 2) slow in the initial phases of the calculation. It is better to do first some ADIIS/EDIIS to get you to a reasonable solution, and only then start refining it with something fancier. Also GDM is a great solution for the initial phase of the calculation, since as you have a **guarantee** that you are taking a step down in energy. At variance, the first step in DIIS is usually up in energy, and it takes you a few steps to recover from. I'm sure there is always a use for the real second-order methods, but - when properly preconditioned - the gradient descent methods work really well, too.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:3961,Safety,recover,recovered,3961," the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vector picks up some component of the symmetry breaking dimension. In DIIS you can make these problems converge by increasing the DIIS history length, but then you often see that the SCF is actually going up in energy in the later calculation. Increasing the history length from the default (I think mine is 5, 6, or 7 iterations) to something like 15-25 allows the DIIS procedure to find enough linearly independent vectors to enforce that the resulting orbitals are going to belong to an extremal point. However, these points often then turn out to be saddle points, in which you can decrease the energy slightly (or a lot more) by moving some weight from an orbital to another... Then you have the true second-order schemes, like Newton-Raphs",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:5385,Safety,recover,recover,5385,"easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vector picks up some component of the symmetry breaking dimension. In DIIS you can make these problems converge by increasing the DIIS history length, but then you often see that the SCF is actually going up in energy in the later calculation. Increasing the history length from the default (I think mine is 5, 6, or 7 iterations) to something like 15-25 allows the DIIS procedure to find enough linearly independent vectors to enforce that the resulting orbitals are going to belong to an extremal point. However, these points often then turn out to be saddle points, in which you can decrease the energy slightly (or a lot more) by moving some weight from an orbital to another... Then you have the true second-order schemes, like Newton-Raphson SCF and trust region SCF. These are bound to give you a local solution, but they are 1) unreliable and 2) slow in the initial phases of the calculation. It is better to do first some ADIIS/EDIIS to get you to a reasonable solution, and only then start refining it with something fancier. Also GDM is a great solution for the initial phase of the calculation, since as you have a **guarantee** that you are taking a step down in energy. At variance, the first step in DIIS is usually up in energy, and it takes you a few steps to recover from. I'm sure there is always a use for the real second-order methods, but - when properly preconditioned - the gradient descent methods work really well, too.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:3047,Testability,log,log,3047,"itals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vecto",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:544,Usability,simpl,simply,544,"Yes, this is a much longed for feature in Psi4, since there's no initial SCF procedure. Psi4 relies - surprisingly succesfully - on the chance that when started from even bad orbitals, the SCF converges without difficulty. The only problem case is some complicated transition metal systems where the procedure just does not converge since there are big errors in any direction. For instance, I tried recently several calculations of this type, and found out having to use different SCF guesses or initial calculations at some other other level simply because the DFT did not converge in Psi4 by default. Having the new level shifting techique from #2216 will help in getting more stable convergence. There are really only two classes of non-convergence: 1) that you had a really crappy orbital guess, which DIIS in Psi4 was not able to minimize but rather started oscillating between two nearly degenerate solutions, or 2) the actual system is so ill behaved that the SCF itself is a bit ill-conditioned and you should use analytical second-order methods to reliably solve the problem. (Of course 1&2 is another possibility in itself.). When I wrote ERKALE as a graduate student I ran across the Hu&Yang paper [J. Chem. Phys. 132, 054109 (2010)](https://doi.org/10.1063/1.3304922) for the ADIIS convergence accelerator. It is simpler than EDIIS, and can be implemented with the same ingredients as usual DIIS: Fock and density matrices. What you need to do is just solve the K-dimensional minimization problem min_{C} E_(ADIIS) for the expansion coefficients C from which you get the extrapolated Fock matrix `F_DIIS = \sum_i c_i F_i`. If I remember correctly, there's a paper that shows that ADIIS and EDIIS are the same method, assuming that you're running at Hartree-Fock level of theory. However, I think the methods are not the same for DFT. With ADIIS+DIIS, you can converge most systems without any kind of problems. The only cases where you get problems are the ones where there really are phy",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:1326,Usability,simpl,simpler,1326," For instance, I tried recently several calculations of this type, and found out having to use different SCF guesses or initial calculations at some other other level simply because the DFT did not converge in Psi4 by default. Having the new level shifting techique from #2216 will help in getting more stable convergence. There are really only two classes of non-convergence: 1) that you had a really crappy orbital guess, which DIIS in Psi4 was not able to minimize but rather started oscillating between two nearly degenerate solutions, or 2) the actual system is so ill behaved that the SCF itself is a bit ill-conditioned and you should use analytical second-order methods to reliably solve the problem. (Of course 1&2 is another possibility in itself.). When I wrote ERKALE as a graduate student I ran across the Hu&Yang paper [J. Chem. Phys. 132, 054109 (2010)](https://doi.org/10.1063/1.3304922) for the ADIIS convergence accelerator. It is simpler than EDIIS, and can be implemented with the same ingredients as usual DIIS: Fock and density matrices. What you need to do is just solve the K-dimensional minimization problem min_{C} E_(ADIIS) for the expansion coefficients C from which you get the extrapolated Fock matrix `F_DIIS = \sum_i c_i F_i`. If I remember correctly, there's a paper that shows that ADIIS and EDIIS are the same method, assuming that you're running at Hartree-Fock level of theory. However, I think the methods are not the same for DFT. With ADIIS+DIIS, you can converge most systems without any kind of problems. The only cases where you get problems are the ones where there really are physical issues with the wave function, like e.g. with flat angular surfaces of the energy, where rotating the orbitals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to conve",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:3145,Usability,guid,guided,3145,"itals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vecto",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568
https://github.com/psi4/psi4/issues/2235#issuecomment-874462682:98,Availability,avail,available,98,"And yeah, I was planning to file a ticket in here that ADIIS should be implemented. It is already available in ERKALE and I think PySCF, also, although I think PySCF also has EDIIS and I'm not sure whether either is enabled in the SCF. PySCF is in my experience excellent at finding convergent solutions to a problem; using spherical symmetry in the SAD code is an essential feature. The only issue I found recently is that DIIS in PySCF does not treat linear dependencies properly, which means that whenever you have overcompleteness, the code doesn't find the correct solution. https://github.com/pyscf/pyscf/issues/1000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874462682
https://github.com/psi4/psi4/issues/2235#issuecomment-874462682:460,Integrability,depend,dependencies,460,"And yeah, I was planning to file a ticket in here that ADIIS should be implemented. It is already available in ERKALE and I think PySCF, also, although I think PySCF also has EDIIS and I'm not sure whether either is enabled in the SCF. PySCF is in my experience excellent at finding convergent solutions to a problem; using spherical symmetry in the SAD code is an essential feature. The only issue I found recently is that DIIS in PySCF does not treat linear dependencies properly, which means that whenever you have overcompleteness, the code doesn't find the correct solution. https://github.com/pyscf/pyscf/issues/1000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874462682
https://github.com/psi4/psi4/issues/2235#issuecomment-874480678:179,Performance,optimiz,optimization,179,... the huge thing being that both ADIIS and GDM are especially useful for density functional theory. You get very good convergence without the complications of true second-order optimization. You only need Fock matrices to implement it; this means the method works also for meta-GGA functionals etc for which the second-order machinery is very involved.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874480678
https://github.com/psi4/psi4/issues/2235#issuecomment-874738808:392,Testability,benchmark,benchmarks,392,"> Yes, the paper that showed EDIIS and ADIIS are equivalent in the HF case is [here](https://aip.scitation.org/doi/10.1063/1.4740249). I remember that paper and the claim the other authors implemented EDIIS wrong. :); They also write about the ADIIS/EDIIS differences for KS-DFT, which are argued to be of no practical importance. I know of no further comparisons and certainly none with big benchmarks sets one would nowadays expect. The ADF programs favours ADIIS but that has also (or mainly) computational reasons based on their 'fragment orbital approach' approach where total energies of molecules come with extra computational costs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874738808
https://github.com/psi4/psi4/issues/2235#issuecomment-874755610:46,Usability,simpl,simple,46,"For several of the problematic cases, another simple solution might be finite-temperature SCF. This approach can solve some of the difficult cases that involve orbital degeneracy (which I suspect are the origin of many of the problems we are experiencing with small molecules), and therefore provide a better initial guess for CASSCF than EDIIS/ADIIS. It would be good to put together a list of problematic examples so we can assess the improvement due to EDIIS/ADIIS, when implemented.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874755610
https://github.com/psi4/psi4/issues/2235#issuecomment-937770538:56,Integrability,depend,dependencies,56,"Are there any special concerns needed to prevent linear dependencies from causing problems in the EDIIS/ADIIS extrapolation, or am I safe to use linearly dependent SO basis quantities?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-937770538
https://github.com/psi4/psi4/issues/2235#issuecomment-937770538:154,Integrability,depend,dependent,154,"Are there any special concerns needed to prevent linear dependencies from causing problems in the EDIIS/ADIIS extrapolation, or am I safe to use linearly dependent SO basis quantities?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-937770538
https://github.com/psi4/psi4/issues/2235#issuecomment-937770538:133,Safety,safe,safe,133,"Are there any special concerns needed to prevent linear dependencies from causing problems in the EDIIS/ADIIS extrapolation, or am I safe to use linearly dependent SO basis quantities?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-937770538
https://github.com/psi4/psi4/issues/2236#issuecomment-874964763:19,Deployability,install,installer,19,Any chance the rc2 installer behaves differently?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-874964763
https://github.com/psi4/psi4/issues/2236#issuecomment-874965917:27,Deployability,install,installer,27,I am not sure what the rc2 installer is or what it could be compared to,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-874965917
https://github.com/psi4/psi4/issues/2236#issuecomment-874976689:36,Deployability,install,installer,36,"Oh, I meant that it looks like your installer was from this page (https://psicode.netlify.app/installs/v14rc1/) rather than this page (https://psicode.netlify.app/installs/v14rc2/). May as well try the most recent.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-874976689
https://github.com/psi4/psi4/issues/2236#issuecomment-874976689:94,Deployability,install,installs,94,"Oh, I meant that it looks like your installer was from this page (https://psicode.netlify.app/installs/v14rc1/) rather than this page (https://psicode.netlify.app/installs/v14rc2/). May as well try the most recent.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-874976689
https://github.com/psi4/psi4/issues/2236#issuecomment-874976689:163,Deployability,install,installs,163,"Oh, I meant that it looks like your installer was from this page (https://psicode.netlify.app/installs/v14rc1/) rather than this page (https://psicode.netlify.app/installs/v14rc2/). May as well try the most recent.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-874976689
https://github.com/psi4/psi4/issues/2236#issuecomment-875007336:50,Availability,error,error,50,"I reinstalled with the rc2 installer and the same error persists. I am looking in the psi4 python module and the ""core"" file seems to not have been compiled correctly? I am guessing it should be a .py file but in my directory its a .pyd file and has a name ""core.cp38-win_amd64.pyd"". Can anyone confirm this and/or point me to where the corrrect file is here so I can download and replace?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875007336
https://github.com/psi4/psi4/issues/2236#issuecomment-875007336:368,Availability,down,download,368,"I reinstalled with the rc2 installer and the same error persists. I am looking in the psi4 python module and the ""core"" file seems to not have been compiled correctly? I am guessing it should be a .py file but in my directory its a .pyd file and has a name ""core.cp38-win_amd64.pyd"". Can anyone confirm this and/or point me to where the corrrect file is here so I can download and replace?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875007336
https://github.com/psi4/psi4/issues/2236#issuecomment-875007336:27,Deployability,install,installer,27,"I reinstalled with the rc2 installer and the same error persists. I am looking in the psi4 python module and the ""core"" file seems to not have been compiled correctly? I am guessing it should be a .py file but in my directory its a .pyd file and has a name ""core.cp38-win_amd64.pyd"". Can anyone confirm this and/or point me to where the corrrect file is here so I can download and replace?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875007336
https://github.com/psi4/psi4/issues/2236#issuecomment-875025483:388,Deployability,install,installers,388,"The `core` file is compiled, so the extension is likely ok. . A few background questions-- ; * do other conda packages like NumPy work for you? ; * can/did you do the Windows equivalent of log out then log back in? ; * what exactly was your ""added the directory to my path"" command? ; * what does `psi4 --version` say?. I know these seem basic, but no one here actually uses Windows (the installers are built on CI), so we have to feel around on debugging Windows installation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875025483
https://github.com/psi4/psi4/issues/2236#issuecomment-875025483:464,Deployability,install,installation,464,"The `core` file is compiled, so the extension is likely ok. . A few background questions-- ; * do other conda packages like NumPy work for you? ; * can/did you do the Windows equivalent of log out then log back in? ; * what exactly was your ""added the directory to my path"" command? ; * what does `psi4 --version` say?. I know these seem basic, but no one here actually uses Windows (the installers are built on CI), so we have to feel around on debugging Windows installation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875025483
https://github.com/psi4/psi4/issues/2236#issuecomment-875025483:189,Testability,log,log,189,"The `core` file is compiled, so the extension is likely ok. . A few background questions-- ; * do other conda packages like NumPy work for you? ; * can/did you do the Windows equivalent of log out then log back in? ; * what exactly was your ""added the directory to my path"" command? ; * what does `psi4 --version` say?. I know these seem basic, but no one here actually uses Windows (the installers are built on CI), so we have to feel around on debugging Windows installation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875025483
https://github.com/psi4/psi4/issues/2236#issuecomment-875025483:202,Testability,log,log,202,"The `core` file is compiled, so the extension is likely ok. . A few background questions-- ; * do other conda packages like NumPy work for you? ; * can/did you do the Windows equivalent of log out then log back in? ; * what exactly was your ""added the directory to my path"" command? ; * what does `psi4 --version` say?. I know these seem basic, but no one here actually uses Windows (the installers are built on CI), so we have to feel around on debugging Windows installation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875025483
https://github.com/psi4/psi4/issues/2236#issuecomment-875053088:264,Availability,error,error,264,"(1) do other conda packages like NumPy work for you?; Yes, I just opened pycharm using conda as the interpreter, import numpy and converted a list to a np array. (2) can/did you do the Windows equivalent of log out then log back in?; I just restarted my computer, error still persists . (3) what exactly was your ""added the directory to my path"" command?; I went system properties --> environment manager --> Path ; then added the following code in ""C:\Users\erikc\psi4conda"". (4) what does psi4 --version say?; C:\Users\erikc>psi4 --version; Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 55, in <module>; from . import core; ImportError: DLL load failed while importing core: The specified module could not be found. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\Scripts\psi4-script.py"", line 182, in <module>; import psi4 # isort:skip; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: DLL load failed while importing core: The specified module could not be found.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875053088
https://github.com/psi4/psi4/issues/2236#issuecomment-875053088:706,Performance,load,load,706,"(1) do other conda packages like NumPy work for you?; Yes, I just opened pycharm using conda as the interpreter, import numpy and converted a list to a np array. (2) can/did you do the Windows equivalent of log out then log back in?; I just restarted my computer, error still persists . (3) what exactly was your ""added the directory to my path"" command?; I went system properties --> environment manager --> Path ; then added the following code in ""C:\Users\erikc\psi4conda"". (4) what does psi4 --version say?; C:\Users\erikc>psi4 --version; Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 55, in <module>; from . import core; ImportError: DLL load failed while importing core: The specified module could not be found. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\Scripts\psi4-script.py"", line 182, in <module>; import psi4 # isort:skip; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: DLL load failed while importing core: The specified module could not be found.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875053088
https://github.com/psi4/psi4/issues/2236#issuecomment-875053088:1136,Performance,load,load,1136,"(1) do other conda packages like NumPy work for you?; Yes, I just opened pycharm using conda as the interpreter, import numpy and converted a list to a np array. (2) can/did you do the Windows equivalent of log out then log back in?; I just restarted my computer, error still persists . (3) what exactly was your ""added the directory to my path"" command?; I went system properties --> environment manager --> Path ; then added the following code in ""C:\Users\erikc\psi4conda"". (4) what does psi4 --version say?; C:\Users\erikc>psi4 --version; Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 55, in <module>; from . import core; ImportError: DLL load failed while importing core: The specified module could not be found. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\Scripts\psi4-script.py"", line 182, in <module>; import psi4 # isort:skip; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: DLL load failed while importing core: The specified module could not be found.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875053088
https://github.com/psi4/psi4/issues/2236#issuecomment-875053088:207,Testability,log,log,207,"(1) do other conda packages like NumPy work for you?; Yes, I just opened pycharm using conda as the interpreter, import numpy and converted a list to a np array. (2) can/did you do the Windows equivalent of log out then log back in?; I just restarted my computer, error still persists . (3) what exactly was your ""added the directory to my path"" command?; I went system properties --> environment manager --> Path ; then added the following code in ""C:\Users\erikc\psi4conda"". (4) what does psi4 --version say?; C:\Users\erikc>psi4 --version; Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 55, in <module>; from . import core; ImportError: DLL load failed while importing core: The specified module could not be found. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\Scripts\psi4-script.py"", line 182, in <module>; import psi4 # isort:skip; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: DLL load failed while importing core: The specified module could not be found.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875053088
https://github.com/psi4/psi4/issues/2236#issuecomment-875053088:220,Testability,log,log,220,"(1) do other conda packages like NumPy work for you?; Yes, I just opened pycharm using conda as the interpreter, import numpy and converted a list to a np array. (2) can/did you do the Windows equivalent of log out then log back in?; I just restarted my computer, error still persists . (3) what exactly was your ""added the directory to my path"" command?; I went system properties --> environment manager --> Path ; then added the following code in ""C:\Users\erikc\psi4conda"". (4) what does psi4 --version say?; C:\Users\erikc>psi4 --version; Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 55, in <module>; from . import core; ImportError: DLL load failed while importing core: The specified module could not be found. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\Scripts\psi4-script.py"", line 182, in <module>; import psi4 # isort:skip; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: DLL load failed while importing core: The specified module could not be found.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875053088
https://github.com/psi4/psi4/issues/2236#issuecomment-875174721:60,Availability,down,downloads,60,"I also tried reinstalling via executing the .exe file in my downloads directory and the same error pops up . ""C:\Users\erikc>psi4 --test; Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 55, in <module>; from . import core; ImportError: DLL load failed while importing core: The specified module could not be found. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\Scripts\psi4-script.py"", line 182, in <module>; import psi4 # isort:skip; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: DLL load failed while importing core: The specified module could not be found.""",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875174721
https://github.com/psi4/psi4/issues/2236#issuecomment-875174721:93,Availability,error,error,93,"I also tried reinstalling via executing the .exe file in my downloads directory and the same error pops up . ""C:\Users\erikc>psi4 --test; Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 55, in <module>; from . import core; ImportError: DLL load failed while importing core: The specified module could not be found. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\Scripts\psi4-script.py"", line 182, in <module>; import psi4 # isort:skip; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: DLL load failed while importing core: The specified module could not be found.""",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875174721
https://github.com/psi4/psi4/issues/2236#issuecomment-875174721:301,Performance,load,load,301,"I also tried reinstalling via executing the .exe file in my downloads directory and the same error pops up . ""C:\Users\erikc>psi4 --test; Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 55, in <module>; from . import core; ImportError: DLL load failed while importing core: The specified module could not be found. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\Scripts\psi4-script.py"", line 182, in <module>; import psi4 # isort:skip; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: DLL load failed while importing core: The specified module could not be found.""",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875174721
https://github.com/psi4/psi4/issues/2236#issuecomment-875174721:731,Performance,load,load,731,"I also tried reinstalling via executing the .exe file in my downloads directory and the same error pops up . ""C:\Users\erikc>psi4 --test; Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 55, in <module>; from . import core; ImportError: DLL load failed while importing core: The specified module could not be found. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\Scripts\psi4-script.py"", line 182, in <module>; import psi4 # isort:skip; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: DLL load failed while importing core: The specified module could not be found.""",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875174721
https://github.com/psi4/psi4/issues/2236#issuecomment-875174721:132,Testability,test,test,132,"I also tried reinstalling via executing the .exe file in my downloads directory and the same error pops up . ""C:\Users\erikc>psi4 --test; Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 55, in <module>; from . import core; ImportError: DLL load failed while importing core: The specified module could not be found. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\Scripts\psi4-script.py"", line 182, in <module>; import psi4 # isort:skip; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: DLL load failed while importing core: The specified module could not be found.""",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875174721
https://github.com/psi4/psi4/issues/2236#issuecomment-875197239:569,Deployability,install,installing-anaconda-windows,569,"`Lib/site-packages/psi4/core.cp38-win_amd64.pyd` is indeed the name for the fat compiled file. The `site-packages\psi4\__init__.py` has the `from . import core`. The dot is ""here"", so it's seeking the `site-packages\psi4\core.*pyd` file, so all's well there, I think. For adding to PATH, I think it'd be `psi4conda\Scripts` to add, not the parent directory. But I wonder if you could be using the ordinary Windows prompt instead of the Anaconda command prompt. Worth trying the left-side ""Recommended Approach"" in step 6 of https://www.datacamp.com/community/tutorials/installing-anaconda-windows rather than the right-side setup, if you aren't already.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875197239
https://github.com/psi4/psi4/issues/2236#issuecomment-875209656:131,Availability,error,error,131,"Sorry, ```C:\Users\erikc\psi4conda\Scripts ``` was what was in my Path. I double checked via ```psi4 --test``` in cmd and the same error pops up. I also just reinstalled anaconda without adding it to my path and then reinstalling psi4. Nothing changed",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875209656
https://github.com/psi4/psi4/issues/2236#issuecomment-875209656:103,Testability,test,test,103,"Sorry, ```C:\Users\erikc\psi4conda\Scripts ``` was what was in my Path. I double checked via ```psi4 --test``` in cmd and the same error pops up. I also just reinstalled anaconda without adding it to my path and then reinstalling psi4. Nothing changed",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875209656
https://github.com/psi4/psi4/issues/2236#issuecomment-875216998:48,Deployability,install,installation,48,"To make sure we're clear, an Ana/Mini/Psi4conda installation are all independent. That is, `where conda`, `where python`, and `where psi4` should all start the same. If you've already got an Ana/Miniconda installation, maybe try skipping the Psi4conda installer, and try installing the psi4 package directly: `conda create -n <p4env> psi4 -c psi4/label/dev`, where `<p4env>` is your choice.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875216998
https://github.com/psi4/psi4/issues/2236#issuecomment-875216998:205,Deployability,install,installation,205,"To make sure we're clear, an Ana/Mini/Psi4conda installation are all independent. That is, `where conda`, `where python`, and `where psi4` should all start the same. If you've already got an Ana/Miniconda installation, maybe try skipping the Psi4conda installer, and try installing the psi4 package directly: `conda create -n <p4env> psi4 -c psi4/label/dev`, where `<p4env>` is your choice.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875216998
https://github.com/psi4/psi4/issues/2236#issuecomment-875216998:252,Deployability,install,installer,252,"To make sure we're clear, an Ana/Mini/Psi4conda installation are all independent. That is, `where conda`, `where python`, and `where psi4` should all start the same. If you've already got an Ana/Miniconda installation, maybe try skipping the Psi4conda installer, and try installing the psi4 package directly: `conda create -n <p4env> psi4 -c psi4/label/dev`, where `<p4env>` is your choice.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875216998
https://github.com/psi4/psi4/issues/2236#issuecomment-875216998:271,Deployability,install,installing,271,"To make sure we're clear, an Ana/Mini/Psi4conda installation are all independent. That is, `where conda`, `where python`, and `where psi4` should all start the same. If you've already got an Ana/Miniconda installation, maybe try skipping the Psi4conda installer, and try installing the psi4 package directly: `conda create -n <p4env> psi4 -c psi4/label/dev`, where `<p4env>` is your choice.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875216998
https://github.com/psi4/psi4/issues/2236#issuecomment-875216998:19,Usability,clear,clear,19,"To make sure we're clear, an Ana/Mini/Psi4conda installation are all independent. That is, `where conda`, `where python`, and `where psi4` should all start the same. If you've already got an Ana/Miniconda installation, maybe try skipping the Psi4conda installer, and try installing the psi4 package directly: `conda create -n <p4env> psi4 -c psi4/label/dev`, where `<p4env>` is your choice.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875216998
https://github.com/psi4/psi4/issues/2236#issuecomment-875226101:2,Deployability,install,installed,2,"I installed anaconda and psi4 independently. does the code below help?. ```; (base) C:\Users\erikc>where conda; C:\Users\erikc\anaconda3\Library\bin\conda.bat; C:\Users\erikc\anaconda3\Scripts\conda.exe; C:\Users\erikc\psi4conda\condabin\conda.bat; C:\Users\erikc\psi4conda\Scripts\conda.exe. (base) C:\Users\erikc>where python; C:\Users\erikc\anaconda3\python.exe. (base) C:\Users\erikc>where psi4; C:\Users\erikc\psi4conda\Scripts\psi4.exe. (base) C:\Users\erikc>conda create -n psi4env psi4 -c psi4/label/dev; Collecting package metadata (current_repodata.json): done; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: -; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed. UnsatisfiableError:. (base) C:\Users\erikc>; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875226101
https://github.com/psi4/psi4/issues/2236#issuecomment-875226101:856,Safety,abort,abort,856,"I installed anaconda and psi4 independently. does the code below help?. ```; (base) C:\Users\erikc>where conda; C:\Users\erikc\anaconda3\Library\bin\conda.bat; C:\Users\erikc\anaconda3\Scripts\conda.exe; C:\Users\erikc\psi4conda\condabin\conda.bat; C:\Users\erikc\psi4conda\Scripts\conda.exe. (base) C:\Users\erikc>where python; C:\Users\erikc\anaconda3\python.exe. (base) C:\Users\erikc>where psi4; C:\Users\erikc\psi4conda\Scripts\psi4.exe. (base) C:\Users\erikc>conda create -n psi4env psi4 -c psi4/label/dev; Collecting package metadata (current_repodata.json): done; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: -; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed. UnsatisfiableError:. (base) C:\Users\erikc>; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875226101
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:796,Deployability,Install,Install,796,"I ran ```conda create -n <p4env> psi4 -c psi4/label/dev -c conda-forge``` and it worked. makes sense since rdkit uses conda-forge as well. I then ran ```psi4 --test``` and here are the results. does it matter some were skipped/ failed?. ```; (psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1162,Deployability,Install,Install,1162," results. does it matter some were skipped/ failed?. ```; (psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4e",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1336,Deployability,Install,Install,1336,"test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1502,Deployability,Install,Install,1502, -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not de,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1769,Deployability,Install,Install,1769,dma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1960,Deployability,Install,Install,1960,lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/li,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2109,Deployability,Install,Install,2109,ED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2282,Deployability,Install,Install,2282, (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2546,Deployability,Install,Install,2546,nvs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2731,Deployability,Install,Install,2731,tecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4en,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2896,Deployability,Install,Install,2896,er] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3157,Deployability,Install,Install,3157,psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3330,Deployability,Install,Install,3330,psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3499,Deployability,Install,Install,3499, detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting mo,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3670,Deployability,Install,Install,3670,ED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not det,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3847,Deployability,Install,Install,3847,ot detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detectin,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4012,Deployability,Install,Install,4012,ED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detect,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4181,Deployability,Install,Install,4181, [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%];,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4354,Deployability,Install,Install,4354, [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%];,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4532,Deployability,Install,Install,4532,%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4711,Deployability,Install,Install,4711,si4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addo,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4884,Deployability,Install,Install,4884,si4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addo,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5051,Deployability,Install,Install,5051,i4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rd,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5331,Deployability,Install,Install,5331,sixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Instal,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5510,Deployability,Install,Install,5510,le gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Ins,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5804,Deployability,Install,Install,5804,ons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6080,Deployability,Install,Install,6080,.) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4c,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6342,Deployability,Install,Install,6342,o e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6521,Deployability,Install,Install,6521,...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PA,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6690,Deployability,Install,Install,6690,si4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6871,Deployability,Install,Install,6871,tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/t,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:7036,Deployability,Install,Install,7036,ting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4con,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:7201,Deployability,Install,Install,7201,i4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:9711,Deployability,release,release,9711,"====================================================================; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:599: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:701: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 2700 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 1773 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 92 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 2330 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 2270 warnings; `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional informat",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:10669,Deployability,release,release,10669,"ails and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 477 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:10799,Deployability,release,release,10799,"ental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 477 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:11667,Deployability,release,release,11667,"he release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 477 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12256,Deployability,Install,Install,12256,"nvs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12414,Deployability,Install,Install,12414," use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12575,Deployability,Install,Install,12575," NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12733,Deployability,Install,Install,12733,"sts/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12893,Deployability,Install,Install,12893,-- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13056,Deployability,Install,Install,13056,==================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13213,Deployability,Install,Install,13213,tecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13373,Deployability,Install,Install,13373,cting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1],MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13532,Deployability,Install,Install,13532,ting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1],MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13698,Deployability,Install,Install,13698,module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13860,Deployability,Install,Install,13860,le libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4con,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14017,Deployability,Install,Install,14017,odule pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4c,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14178,Deployability,Install,Install,14178, module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4c,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14337,Deployability,Install,Install,14337,odule simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14496,Deployability,Install,Install,14496,module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIP,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14657,Deployability,Install,Install,14657,dule v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tes,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14816,Deployability,Install,Install,14816,ting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to en,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14975,Deployability,Install,Install,14975,tecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if neces,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15136,Deployability,Install,Install,15136,ting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install packa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15302,Deployability,Install,Install,15302,module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install pa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15467,Deployability,Install,Install,15467, resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15637,Deployability,Install,Install,15637,stall package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Inst,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15804,Deployability,Install,Install,15804,ckage if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. In,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15973,Deployability,Install,Install,15973,ecessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Inst,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16145,Deployability,Install,Install,16145, enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16314,Deployability,Install,Install,16314,able tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16489,Deployability,Install,Install,16489,.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_mdi.py:11: Not detecting module mdi. Install package if necessary to,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16655,Deployability,Install,Install,16655,"ests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_mdi.py:11: Not detecting module mdi. Install package if necessary to enable tests.; ========================================== 21 passed, 33 skipped, 3301 deselected, 1 xfailed, 16657 warnings in 72.64s (0:01:12) =====================",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16824,Deployability,Install,Install,16824,"da\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_mdi.py:11: Not detecting module mdi. Install package if necessary to enable tests.; ========================================== 21 passed, 33 skipped, 3301 deselected, 1 xfailed, 16657 warnings in 72.64s (0:01:12) ==========================================; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16991,Deployability,Install,Install,16991,"da\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_mdi.py:11: Not detecting module mdi. Install package if necessary to enable tests.; ========================================== 21 passed, 33 skipped, 3301 deselected, 1 xfailed, 16657 warnings in 72.64s (0:01:12) ==========================================; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:17160,Deployability,Install,Install,17160,"da\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_mdi.py:11: Not detecting module mdi. Install package if necessary to enable tests.; ========================================== 21 passed, 33 skipped, 3301 deselected, 1 xfailed, 16657 warnings in 72.64s (0:01:12) ==========================================; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:17327,Deployability,Install,Install,17327,"da\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_mdi.py:11: Not detecting module mdi. Install package if necessary to enable tests.; ========================================== 21 passed, 33 skipped, 3301 deselected, 1 xfailed, 16657 warnings in 72.64s (0:01:12) ==========================================; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:17480,Deployability,Install,Install,17480,"da\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_mdi.py:11: Not detecting module mdi. Install package if necessary to enable tests.; ========================================== 21 passed, 33 skipped, 3301 deselected, 1 xfailed, 16657 warnings in 72.64s (0:01:12) ==========================================; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:578,Performance,cache,cachedir,578,"I ran ```conda create -n <p4env> psi4 -c psi4/label/dev -c conda-forge``` and it worked. makes sense since rdkit uses conda-forge as well. I then ran ```psi4 --test``` and here are the results. does it matter some were skipped/ failed?. ```; (psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:8158,Performance,optimiz,optimization,8158,ing module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cas PASSED [ 94%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_dfmp2 PASSED [ 96%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_sapt PASSED [ 98%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_scfproperty PASSED [100%]. ============================================================================ warnings summary =============================================================================; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:599: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:701: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 2700 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 1773 warnings; psi4conda/envs/psi4env/lib/site-packages/p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:773,Safety,detect,detecting,773,"I ran ```conda create -n <p4env> psi4 -c psi4/label/dev -c conda-forge``` and it worked. makes sense since rdkit uses conda-forge as well. I then ran ```psi4 --test``` and here are the results. does it matter some were skipped/ failed?. ```; (psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1139,Safety,detect,detecting,1139,"l. I then ran ```psi4 --test``` and here are the results. does it matter some were skipped/ failed?. ```; (psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1310,Safety,detect,detecting,1310,"================================================ test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1479,Safety,detect,detecting,1479,"n 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1744,Safety,detect,detecting,1744,dons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install pac,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1932,Safety,detect,detecting,1932,ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2087,Safety,detect,detecting,2087,ages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2257,Safety,detect,detecting,2257,es/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2522,Safety,detect,detecting,2522,f necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if ne,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2700,Safety,detect,detecting,2700,tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2869,Safety,detect,detecting,2869,si4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if n,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3135,Safety,detect,detecting,3135,ssary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3305,Safety,detect,detecting,3305,ecessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3476,Safety,detect,detecting,3476,i4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_q,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3647,Safety,detect,detecting,3647,si4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addon,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3822,Safety,detect,detecting,3822,i4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3989,Safety,detect,detecting,3989,s/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_ad,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4158,Safety,detect,detecting,4158,. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/tes,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4329,Safety,detect,detecting,4329,p2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libe,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4509,Safety,detect,detecting,4509, package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolve,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4689,Safety,detect,detecting,4689,age if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4858,Safety,detect,detecting,4858,package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5028,Safety,detect,detecting,5028,ge if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2r,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5306,Safety,detect,detecting,5306,:test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_d,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5482,Safety,detect,detecting,5482,ma.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsm,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5779,Safety,detect,detecting,5779,si4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6049,Safety,detect,detecting,6049,p2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install pac,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6320,Safety,detect,detecting,6320,odule libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_optio,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6496,Safety,detect,detecting,6496,odule pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6667,Safety,detect,detecting,6667,; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6846,Safety,detect,detecting,6846,i4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:7013,Safety,detect,detecting,7013,ema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschem,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:7179,Safety,detect,detecting,7179,dons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:9548,Safety,safe,safe,9548,"-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_scfproperty PASSED [100%]. ============================================================================ warnings summary =============================================================================; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:599: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:701: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 2700 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 1773 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 92 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 2330 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 2270 warnings; `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When repl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:10512,Safety,safe,safe,10512,"by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 477 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any b",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:11506,Safety,safe,safe,11506," modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 477 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\en",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12233,Safety,detect,detecting,12233,"/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12391,Safety,detect,detecting,12391,"builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if nece",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12549,Safety,detect,detecting,12549," type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if neces",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12710,Safety,detect,detecting,12710,"a/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package i",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12868,Safety,detect,detecting,12868,"ecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install packag",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13028,Safety,detect,detecting,13028,=========== short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13191,Safety,detect,detecting,13191,ges\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13348,Safety,detect,detecting,13348,s\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package i,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13508,Safety,detect,detecting,13508,\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13667,Safety,detect,detecting,13667,si4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13833,Safety,detect,detecting,13833,sts\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if neces,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13995,Safety,detect,detecting,13995,ests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necess,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14153,Safety,detect,detecting,14153,i4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if nece,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14314,Safety,detect,detecting,14314,tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package i,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14473,Safety,detect,detecting,14473,\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install pac,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14632,Safety,detect,detecting,14632,tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. I,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14793,Safety,detect,detecting,14793,\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14952,Safety,detect,detecting,14952,ges\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15111,Safety,detect,detecting,15111,\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15279,Safety,detect,detecting,15279,ests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15445,Safety,detect,detecting,15445,st_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15611,Safety,detect,detecting,15611,s.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcsche,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15781,Safety,detect,detecting,15781,3: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15948,Safety,detect,detecting,15948,tecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschem,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16117,Safety,detect,detecting,16117,ule psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16289,Safety,detect,detecting,16289, gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16458,Safety,detect,detecting,16458,Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_mdi.py:11: Not detecting,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16633,Safety,detect,detecting,16633,"Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_mdi.py:11: Not detecting module mdi. Install package if necessary to enable tests.; ========================================== 21 passed, 33 skipped, 3301 deselected, 1 xfailed, 16657 warnings in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16799,Safety,detect,detecting,16799,"da\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_mdi.py:11: Not detecting module mdi. Install package if necessary to enable tests.; ========================================== 21 passed, 33 skipped, 3301 deselected, 1 xfailed, 16657 warnings in 72.64s (0:01:12) ==========================================; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16968,Safety,detect,detecting,16968,"da\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_mdi.py:11: Not detecting module mdi. Install package if necessary to enable tests.; ========================================== 21 passed, 33 skipped, 3301 deselected, 1 xfailed, 16657 warnings in 72.64s (0:01:12) ==========================================; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:17135,Safety,detect,detecting,17135,"da\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_mdi.py:11: Not detecting module mdi. Install package if necessary to enable tests.; ========================================== 21 passed, 33 skipped, 3301 deselected, 1 xfailed, 16657 warnings in 72.64s (0:01:12) ==========================================; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:17304,Safety,detect,detecting,17304,"da\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_mdi.py:11: Not detecting module mdi. Install package if necessary to enable tests.; ========================================== 21 passed, 33 skipped, 3301 deselected, 1 xfailed, 16657 warnings in 72.64s (0:01:12) ==========================================; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:17458,Safety,detect,detecting,17458,"da\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_mdi.py:11: Not detecting module mdi. Install package if necessary to enable tests.; ========================================== 21 passed, 33 skipped, 3301 deselected, 1 xfailed, 16657 warnings in 72.64s (0:01:12) ==========================================; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:160,Testability,test,test,160,"I ran ```conda create -n <p4env> psi4 -c psi4/label/dev -c conda-forge``` and it worked. makes sense since rdkit uses conda-forge as well. I then ran ```psi4 --test``` and here are the results. does it matter some were skipped/ failed?. ```; (psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:274,Testability,test,test,274,"I ran ```conda create -n <p4env> psi4 -c psi4/label/dev -c conda-forge``` and it worked. makes sense since rdkit uses conda-forge as well. I then ran ```psi4 --test``` and here are the results. does it matter some were skipped/ failed?. ```; (psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:356,Testability,test,test,356,"I ran ```conda create -n <p4env> psi4 -c psi4/label/dev -c conda-forge``` and it worked. makes sense since rdkit uses conda-forge as well. I then ran ```psi4 --test``` and here are the results. does it matter some were skipped/ failed?. ```; (psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:728,Testability,test,tests,728,"I ran ```conda create -n <p4env> psi4 -c psi4/label/dev -c conda-forge``` and it worked. makes sense since rdkit uses conda-forge as well. I then ran ```psi4 --test``` and here are the results. does it matter some were skipped/ failed?. ```; (psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:835,Testability,test,tests,835,"I ran ```conda create -n <p4env> psi4 -c psi4/label/dev -c conda-forge``` and it worked. makes sense since rdkit uses conda-forge as well. I then ran ```psi4 --test``` and here are the results. does it matter some were skipped/ failed?. ```; (psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:896,Testability,test,tests,896,"I ran ```conda create -n <p4env> psi4 -c psi4/label/dev -c conda-forge``` and it worked. makes sense since rdkit uses conda-forge as well. I then ran ```psi4 --test``` and here are the results. does it matter some were skipped/ failed?. ```; (psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:995,Testability,test,tests,995,"I ran ```conda create -n <p4env> psi4 -c psi4/label/dev -c conda-forge``` and it worked. makes sense since rdkit uses conda-forge as well. I then ran ```psi4 --test``` and here are the results. does it matter some were skipped/ failed?. ```; (psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1094,Testability,test,tests,1094,"da-forge``` and it worked. makes sense since rdkit uses conda-forge as well. I then ran ```psi4 --test``` and here are the results. does it matter some were skipped/ failed?. ```; (psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1201,Testability,test,tests,1201," results. does it matter some were skipped/ failed?. ```; (psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4e",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1262,Testability,test,tests,1262,"psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1434,Testability,test,tests,1434,"====================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json P",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1541,Testability,test,tests,1541, -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not de,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1603,Testability,test,tests,1603,ir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1697,Testability,test,tests,1697, 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1808,Testability,test,tests,1808,dma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1870,Testability,test,tests,1870,si4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2043,Testability,test,tests,2043,i_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grim,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2148,Testability,test,tests,2148,ED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2210,Testability,test,tests,2210,to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to en,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2321,Testability,test,tests,2321, (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2383,Testability,test,tests,2383, to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to en,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2476,Testability,test,tests,2476,dons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2585,Testability,test,tests,2585,nvs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2647,Testability,test,tests,2647,t_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_r,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2820,Testability,test,tests,2820,enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2993,Testability,test,tests,2993,e if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cpp,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3091,Testability,test,tests,3091,.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3196,Testability,test,tests,3196,psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3258,Testability,test,tests,3258,mint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3369,Testability,test,tests,3369,psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3431,Testability,test,tests,3431,on PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3538,Testability,test,tests,3538, detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting mo,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3600,Testability,test,tests,3600,ble tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%];,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3709,Testability,test,tests,3709,ED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not det,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3771,Testability,test,tests,3771,cessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3944,Testability,test,tests,3944,to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4051,Testability,test,tests,4051,ED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detect,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4113,Testability,test,tests,4113,ts/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4220,Testability,test,tests,4220, [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%];,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4282,Testability,test,tests,4282,/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_ad,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4393,Testability,test,tests,4393, [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%];,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4455,Testability,test,tests,4455,t_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4628,Testability,test,tests,4628,dons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4801,Testability,test,tests,4801,ns.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detectin,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4974,Testability,test,tests,4974,ns.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5147,Testability,test,tests,5147,y::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5250,Testability,test,tests,5250,.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4c,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5423,Testability,test,tests,5423, psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5596,Testability,test,tests,5596, psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5712,Testability,test,tests,5712,ED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting modu,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5885,Testability,test,tests,5885,dule chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:5987,Testability,test,tests,5987,kages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/test,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6160,Testability,test,tests,6160,4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6267,Testability,test,tests,6267,ages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable t,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6440,Testability,test,tests,6440,sts/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6613,Testability,test,tests,6613,sts/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/te,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6786,Testability,test,tests,6786,ED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/si,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6959,Testability,test,tests,6959,4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:7132,Testability,test,tests,7132,]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qc,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:7240,Testability,test,tests,7240,i4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:7302,Testability,test,tests,7302,s_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cas PASSED [ 94%];,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:7406,Testability,test,tests,7406,to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cas PASSED [ 94%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_df,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:7503,Testability,test,tests,7503,:test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cas PASSED [ 94%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_dfmp2 PASSED [ 96%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:7597,Testability,test,tests,7597, psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cas PASSED [ 94%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_dfmp2 PASSED [ 96%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_sapt PASSED [ 98%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:7692,Testability,test,tests,7692,D (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cas PASSED [ 94%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_dfmp2 PASSED [ 96%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_sapt PASSED [ 98%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_scfproperty PASSED [100%]. ======================================================,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:7789,Testability,test,tests,7789,si4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cas PASSED [ 94%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_dfmp2 PASSED [ 96%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_sapt PASSED [ 98%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_scfproperty PASSED [100%]. ============================================================================ warnings summary ========================================================,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:7885,Testability,test,tests,7885,ng module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cas PASSED [ 94%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_dfmp2 PASSED [ 96%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_sapt PASSED [ 98%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_scfproperty PASSED [100%]. ============================================================================ warnings summary =============================================================================; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:7988,Testability,test,tests,7988,4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cas PASSED [ 94%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_dfmp2 PASSED [ 96%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_sapt PASSED [ 98%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_scfproperty PASSED [100%]. ============================================================================ warnings summary =============================================================================; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:599: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:701: 3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:8094,Testability,test,tests,8094,o enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cas PASSED [ 94%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_dfmp2 PASSED [ 96%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_sapt PASSED [ 98%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_scfproperty PASSED [100%]. ============================================================================ warnings summary =============================================================================; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:599: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:701: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 2700 warnings; psi4conda/envs/,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:8226,Testability,test,tests,8226,ing module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cas PASSED [ 94%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_dfmp2 PASSED [ 96%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_sapt PASSED [ 98%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_scfproperty PASSED [100%]. ============================================================================ warnings summary =============================================================================; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:599: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:701: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 2700 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 1773 warnings; psi4conda/envs/psi4env/lib/site-packages/p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:8330,Testability,test,tests,8330,ests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cas PASSED [ 94%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_dfmp2 PASSED [ 96%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_sapt PASSED [ 98%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_scfproperty PASSED [100%]. ============================================================================ warnings summary =============================================================================; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:599: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:701: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 2700 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 1773 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 92 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 2330 warnings,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:8436,Testability,test,tests,8436,sts/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cas PASSED [ 94%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_dfmp2 PASSED [ 96%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_sapt PASSED [ 98%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_scfproperty PASSED [100%]. ============================================================================ warnings summary =============================================================================; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:599: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:701: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 2700 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 1773 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 92 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 2330 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 2270 warnings; `np.float` is,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:8541,Testability,test,tests,8541,"_psi4.py::test_psi4_cc PASSED [ 81%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 83%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 85%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 87%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [ 89%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cas PASSED [ 94%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_dfmp2 PASSED [ 96%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_sapt PASSED [ 98%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_scfproperty PASSED [100%]. ============================================================================ warnings summary =============================================================================; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:599: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:701: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 2700 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 1773 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 92 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 2330 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 2270 warnings; `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this wi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:9014,Testability,test,tests,9014,"sts/test_psi4_qcschema.py::test_psi4_basic PASSED [ 90%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cas PASSED [ 94%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_dfmp2 PASSED [ 96%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_sapt PASSED [ 98%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_scfproperty PASSED [100%]. ============================================================================ warnings summary =============================================================================; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:599: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:701: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 2700 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 1773 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 92 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 2330 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 2270 warnings; `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:9097,Testability,test,tests,9097,"e-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput optimization) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cas PASSED [ 94%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_dfmp2 PASSED [ 96%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_sapt PASSED [ 98%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_scfproperty PASSED [100%]. ============================================================================ warnings summary =============================================================================; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:599: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:701: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 2700 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 1773 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 92 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 2330 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 2270 warnings; `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:9189,Testability,test,tests,9189,"ation) [ 92%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cas PASSED [ 94%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_dfmp2 PASSED [ 96%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_sapt PASSED [ 98%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_scfproperty PASSED [100%]. ============================================================================ warnings summary =============================================================================; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:599: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:701: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 2700 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 1773 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 92 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 2330 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 2270 warnings; `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:9270,Testability,test,tests,9270,"hema.py::test_psi4_cas PASSED [ 94%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_dfmp2 PASSED [ 96%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_sapt PASSED [ 98%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_scfproperty PASSED [100%]. ============================================================================ warnings summary =============================================================================; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:599: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:701: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 2700 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 1773 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 92 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 2330 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 2270 warnings; `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:9351,Testability,test,tests,9351,"ests/test_psi4_qcschema.py::test_psi4_dfmp2 PASSED [ 96%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_sapt PASSED [ 98%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_scfproperty PASSED [100%]. ============================================================================ warnings summary =============================================================================; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:599: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:701: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 2700 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 1773 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 92 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 2330 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 2270 warnings; `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:9985,Testability,test,tests,9985,"nings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 2700 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 1773 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 92 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 2330 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 2270 warnings; `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:10068,Testability,test,tests,10068,"; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 1773 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 92 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 2330 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 2270 warnings; `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-pa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:10159,Testability,test,tests,10159,"nings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 92 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 2330 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 2270 warnings; `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 477 warnings; psi4conda/envs/psi4env/lib/sit",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:10240,Testability,test,tests,10240,"rnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 2330 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 2270 warnings; `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 477 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/sit",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:10321,Testability,test,tests,10321,"gs; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 2270 warnings; `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 477 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-pa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:10979,Testability,test,tests,10979,"si4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 477 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:11061,Testability,test,tests,11061,"nv/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 477 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ======================================================================",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:11152,Testability,test,tests,11152,"si4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 477 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info ==========================================================",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:11233,Testability,test,tests,11233,"psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 477 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:11313,Testability,test,tests,11313,"4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 477 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:11753,Testability,test,tests,11753,"20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:702: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 707 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 477 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Instal",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12053,Testability,test,test,12053,"7 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12204,Testability,test,tests,12204,"7 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 24 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 651 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12295,Testability,test,tests,12295,"nvs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12361,Testability,test,tests,12361,": 633 warnings; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:7",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12453,Testability,test,tests,12453," use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12519,Testability,test,tests,12519," and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12614,Testability,test,tests,12614," NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12680,Testability,test,tests,12680,"devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:8",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12772,Testability,test,tests,12772,"sts/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12838,Testability,test,tests,12838,"on` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_add",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12932,Testability,test,tests,12932,-- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12998,Testability,test,tests,12998,===================================================================== short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_a,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13095,Testability,test,tests,13095,==================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13161,Testability,test,tests,13161,====; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13252,Testability,test,tests,13252,tecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13318,Testability,test,tests,13318,sts.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_add,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13412,Testability,test,tests,13412,cting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1],MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13478,Testability,test,tests,13478,s.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addo,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13571,Testability,test,tests,13571,ting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1],MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074
