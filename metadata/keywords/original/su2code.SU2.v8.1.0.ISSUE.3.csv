id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/su2code/SU2/issues/1175:301,Usability,SIMPL,SIMPLE,301,"Hello SU2 Community! . I am simulating flow over a 6-blade propeller and modeling 1/6th of the domain with an assumption that it is axisymmetric. I meshed the computational domain generating an unstructured grid using ANSYS Meshing with a targetted y+<1 and simulated the case using a pressure-based (SIMPLE) solver with S-A turbulence model in Fluent. It is a steady-state simulation and used a frozen rotor approach. Fluent converged after the reduction of continuity residuals by four orders of magnitude. For simulating the domain in SU2, I had converted the mesh into CGNS format, simulated with similar settings using SU2's RANS Solver (S-A) with rotating domain and periodic boundary conditions. The simulation converges as the residuals drop by two orders of magnitude and monitors stabilize after 30k iterations. . On checking the contours, the SU2 predicts relatively high y+ values, especially near the junction of propeller blade root and spinner, where the values go up to y+~250, while it is around y+=1-2 in the rest of the domain. Whereas, Fluent predicts the y+<1 throughout for the same mesh. The values of forces and moment are off by two orders, on comparing it with the Fluent and experimental results. But, flow-field and contours of pressure distribution look similar for both SU2 and Fluent. I'm wondering what might have led to the difference in the results. I have refined the mesh, but it only reduces y+ by a small number. I have attached the config file and would like some inputs. Thanks in advance. [Prop_config.txt](https://github.com/su2code/SU2/files/5857368/Prop_config.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175
https://github.com/su2code/SU2/pull/1176:612,Deployability,update,updated,612,"## Proposed Changes; A differentiable maximum VM stress function for optimization.; Simplifies the ""DoubleArray"" option to avoid one array of default values and another of actual values. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176
https://github.com/su2code/SU2/pull/1176:69,Performance,optimiz,optimization,69,"## Proposed Changes; A differentiable maximum VM stress function for optimization.; Simplifies the ""DoubleArray"" option to avoid one array of default values and another of actual values. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176
https://github.com/su2code/SU2/pull/1176:123,Safety,avoid,avoid,123,"## Proposed Changes; A differentiable maximum VM stress function for optimization.; Simplifies the ""DoubleArray"" option to avoid one array of default values and another of actual values. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176
https://github.com/su2code/SU2/pull/1176:539,Testability,test,test,539,"## Proposed Changes; A differentiable maximum VM stress function for optimization.; Simplifies the ""DoubleArray"" option to avoid one array of default values and another of actual values. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176
https://github.com/su2code/SU2/pull/1176:84,Usability,Simpl,Simplifies,84,"## Proposed Changes; A differentiable maximum VM stress function for optimization.; Simplifies the ""DoubleArray"" option to avoid one array of default values and another of actual values. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176
https://github.com/su2code/SU2/pull/1176:410,Usability,simpl,simply,410,"## Proposed Changes; A differentiable maximum VM stress function for optimization.; Simplifies the ""DoubleArray"" option to avoid one array of default values and another of actual values. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176
https://github.com/su2code/SU2/pull/1177:817,Deployability,update,updated,817,"## Proposed Changes; Move more routines to the FVM flow solver base class.; At the risk of sounding like a broken record, one function means:; One test, one optimization, one debug, one fix.; Implementing new features by copy-paste-modify is like eating your legs to get to the end of a marathon, it ain't gonna work in the long run xD; Cut, Paste, Abstract, Survive. ## Related Work; #1044. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177
https://github.com/su2code/SU2/pull/1177:31,Integrability,rout,routines,31,"## Proposed Changes; Move more routines to the FVM flow solver base class.; At the risk of sounding like a broken record, one function means:; One test, one optimization, one debug, one fix.; Implementing new features by copy-paste-modify is like eating your legs to get to the end of a marathon, it ain't gonna work in the long run xD; Cut, Paste, Abstract, Survive. ## Related Work; #1044. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177
https://github.com/su2code/SU2/pull/1177:157,Performance,optimiz,optimization,157,"## Proposed Changes; Move more routines to the FVM flow solver base class.; At the risk of sounding like a broken record, one function means:; One test, one optimization, one debug, one fix.; Implementing new features by copy-paste-modify is like eating your legs to get to the end of a marathon, it ain't gonna work in the long run xD; Cut, Paste, Abstract, Survive. ## Related Work; #1044. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177
https://github.com/su2code/SU2/pull/1177:83,Safety,risk,risk,83,"## Proposed Changes; Move more routines to the FVM flow solver base class.; At the risk of sounding like a broken record, one function means:; One test, one optimization, one debug, one fix.; Implementing new features by copy-paste-modify is like eating your legs to get to the end of a marathon, it ain't gonna work in the long run xD; Cut, Paste, Abstract, Survive. ## Related Work; #1044. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177
https://github.com/su2code/SU2/pull/1177:147,Testability,test,test,147,"## Proposed Changes; Move more routines to the FVM flow solver base class.; At the risk of sounding like a broken record, one function means:; One test, one optimization, one debug, one fix.; Implementing new features by copy-paste-modify is like eating your legs to get to the end of a marathon, it ain't gonna work in the long run xD; Cut, Paste, Abstract, Survive. ## Related Work; #1044. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177
https://github.com/su2code/SU2/pull/1177:744,Testability,test,test,744,"## Proposed Changes; Move more routines to the FVM flow solver base class.; At the risk of sounding like a broken record, one function means:; One test, one optimization, one debug, one fix.; Implementing new features by copy-paste-modify is like eating your legs to get to the end of a marathon, it ain't gonna work in the long run xD; Cut, Paste, Abstract, Survive. ## Related Work; #1044. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177
https://github.com/su2code/SU2/pull/1177:615,Usability,simpl,simply,615,"## Proposed Changes; Move more routines to the FVM flow solver base class.; At the risk of sounding like a broken record, one function means:; One test, one optimization, one debug, one fix.; Implementing new features by copy-paste-modify is like eating your legs to get to the end of a marathon, it ain't gonna work in the long run xD; Cut, Paste, Abstract, Survive. ## Related Work; #1044. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177
https://github.com/su2code/SU2/pull/1178:581,Deployability,update,updated,581,"## Proposed Changes; Remove some more duplication, fix some issues, and make the incompressible solvers compatible with OpenMP. ## Related Work; Fix #1175. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1178
https://github.com/su2code/SU2/pull/1178:508,Testability,test,test,508,"## Proposed Changes; Remove some more duplication, fix some issues, and make the incompressible solvers compatible with OpenMP. ## Related Work; Fix #1175. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1178
https://github.com/su2code/SU2/pull/1178:379,Usability,simpl,simply,379,"## Proposed Changes; Remove some more duplication, fix some issues, and make the incompressible solvers compatible with OpenMP. ## Related Work; Fix #1175. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1178
https://github.com/su2code/SU2/issues/1179:1093,Deployability,configurat,configuration,1093,"e bug**; When creating a CDriver instance, for example through the Python wrapper, with an MPI communicator which is defined only on a subset of the processes on which the MPI library was initialised, SU2 will deadlock. This seems to be because most of the MPI communication and synchronisation operations in SU2 explicitly refer to the global `MPI_COMM_WORLD`. The issue arose when attempting to control several Euler/RANS SU2 `CSinglezoneDriver` and `CDiscAdjSinglezoneDriver` instances in parallel (i.e. simultaneously) within a larger optimisation code, which provides each analysis with a subset of the ranks in its own MPI communicator. Naively replacing _all_ references to `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` throughout the code (except where it is defined, and where it is used to initialise the MPI wrapper in the SU2_XXX.cpp files) prevents the deadlock and results in the desired behaviour. However, I imagine that this ""fix"" may well cause all sorts of issues outside of my own, limited use case. **To Reproduce**; The issue can be reproduced with any SU2_CFD configuration file and mesh, run in parallel using the Python wrapper as follows: ; ```; from mpi4py import MPI; import pysu2 # or pysu2ad. filename = 'example.cfg'; zones = 1. rank = MPI.COMM_WORLD.Get_rank(); size = MPI.COMM_WORLD.Get_size(). group = MPI.COMM_WORLD.group.Excl([0]) # exclude the first rank; comm = MPI.COMM_WORLD.Create_group(group). if comm: # is False only on the excluded rank; print(""Running SU2 on global rank {} of {} ... "".format(rank, size)). # create SU2 instance -- will hang during Geometry preprocessing; instance = pysu2.CSinglezoneDriver(filename, zones, comm). else:; print(""Doing nothing on global rank {} of {} ... "".format(rank, size)). ```. **Desktop (please complete the following information):**; - OS: Redhat 7.7; - C++ compiler and version: g++ (GCC) 4.8.5; - MPI implementation and version: MPICH 3.2.1; - SU2 Version: 7.0.2 ""Blackbird"" (looks to be reproducible on 7.1.0 also)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1179
https://github.com/su2code/SU2/issues/1179:87,Integrability,wrap,wrapper,87,"**Describe the bug**; When creating a CDriver instance, for example through the Python wrapper, with an MPI communicator which is defined only on a subset of the processes on which the MPI library was initialised, SU2 will deadlock. This seems to be because most of the MPI communication and synchronisation operations in SU2 explicitly refer to the global `MPI_COMM_WORLD`. The issue arose when attempting to control several Euler/RANS SU2 `CSinglezoneDriver` and `CDiscAdjSinglezoneDriver` instances in parallel (i.e. simultaneously) within a larger optimisation code, which provides each analysis with a subset of the ranks in its own MPI communicator. Naively replacing _all_ references to `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` throughout the code (except where it is defined, and where it is used to initialise the MPI wrapper in the SU2_XXX.cpp files) prevents the deadlock and results in the desired behaviour. However, I imagine that this ""fix"" may well cause all sorts of issues outside of my own, limited use case. **To Reproduce**; The issue can be reproduced with any SU2_CFD configuration file and mesh, run in parallel using the Python wrapper as follows: ; ```; from mpi4py import MPI; import pysu2 # or pysu2ad. filename = 'example.cfg'; zones = 1. rank = MPI.COMM_WORLD.Get_rank(); size = MPI.COMM_WORLD.Get_size(). group = MPI.COMM_WORLD.group.Excl([0]) # exclude the first rank; comm = MPI.COMM_WORLD.Create_group(group). if comm: # is False only on the excluded rank; print(""Running SU2 on global rank {} of {} ... "".format(rank, size)). # create SU2 instance -- will hang during Geometry preprocessing; instance = pysu2.CSinglezoneDriver(filename, zones, comm). else:; print(""Doing nothing on global rank {} of {} ... "".format(rank, size)). ```. **Desktop (please complete the following information):**; - OS: Redhat 7.7; - C++ compiler and version: g++ (GCC) 4.8.5; - MPI implementation and version: MPICH 3.2.1; - SU2 Version: 7.0.2 ""Blackbird"" (looks to be reproducible on",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1179
https://github.com/su2code/SU2/issues/1179:829,Integrability,wrap,wrapper,829,"**Describe the bug**; When creating a CDriver instance, for example through the Python wrapper, with an MPI communicator which is defined only on a subset of the processes on which the MPI library was initialised, SU2 will deadlock. This seems to be because most of the MPI communication and synchronisation operations in SU2 explicitly refer to the global `MPI_COMM_WORLD`. The issue arose when attempting to control several Euler/RANS SU2 `CSinglezoneDriver` and `CDiscAdjSinglezoneDriver` instances in parallel (i.e. simultaneously) within a larger optimisation code, which provides each analysis with a subset of the ranks in its own MPI communicator. Naively replacing _all_ references to `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` throughout the code (except where it is defined, and where it is used to initialise the MPI wrapper in the SU2_XXX.cpp files) prevents the deadlock and results in the desired behaviour. However, I imagine that this ""fix"" may well cause all sorts of issues outside of my own, limited use case. **To Reproduce**; The issue can be reproduced with any SU2_CFD configuration file and mesh, run in parallel using the Python wrapper as follows: ; ```; from mpi4py import MPI; import pysu2 # or pysu2ad. filename = 'example.cfg'; zones = 1. rank = MPI.COMM_WORLD.Get_rank(); size = MPI.COMM_WORLD.Get_size(). group = MPI.COMM_WORLD.group.Excl([0]) # exclude the first rank; comm = MPI.COMM_WORLD.Create_group(group). if comm: # is False only on the excluded rank; print(""Running SU2 on global rank {} of {} ... "".format(rank, size)). # create SU2 instance -- will hang during Geometry preprocessing; instance = pysu2.CSinglezoneDriver(filename, zones, comm). else:; print(""Doing nothing on global rank {} of {} ... "".format(rank, size)). ```. **Desktop (please complete the following information):**; - OS: Redhat 7.7; - C++ compiler and version: g++ (GCC) 4.8.5; - MPI implementation and version: MPICH 3.2.1; - SU2 Version: 7.0.2 ""Blackbird"" (looks to be reproducible on",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1179
https://github.com/su2code/SU2/issues/1179:1155,Integrability,wrap,wrapper,1155,"e bug**; When creating a CDriver instance, for example through the Python wrapper, with an MPI communicator which is defined only on a subset of the processes on which the MPI library was initialised, SU2 will deadlock. This seems to be because most of the MPI communication and synchronisation operations in SU2 explicitly refer to the global `MPI_COMM_WORLD`. The issue arose when attempting to control several Euler/RANS SU2 `CSinglezoneDriver` and `CDiscAdjSinglezoneDriver` instances in parallel (i.e. simultaneously) within a larger optimisation code, which provides each analysis with a subset of the ranks in its own MPI communicator. Naively replacing _all_ references to `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` throughout the code (except where it is defined, and where it is used to initialise the MPI wrapper in the SU2_XXX.cpp files) prevents the deadlock and results in the desired behaviour. However, I imagine that this ""fix"" may well cause all sorts of issues outside of my own, limited use case. **To Reproduce**; The issue can be reproduced with any SU2_CFD configuration file and mesh, run in parallel using the Python wrapper as follows: ; ```; from mpi4py import MPI; import pysu2 # or pysu2ad. filename = 'example.cfg'; zones = 1. rank = MPI.COMM_WORLD.Get_rank(); size = MPI.COMM_WORLD.Get_size(). group = MPI.COMM_WORLD.group.Excl([0]) # exclude the first rank; comm = MPI.COMM_WORLD.Create_group(group). if comm: # is False only on the excluded rank; print(""Running SU2 on global rank {} of {} ... "".format(rank, size)). # create SU2 instance -- will hang during Geometry preprocessing; instance = pysu2.CSinglezoneDriver(filename, zones, comm). else:; print(""Doing nothing on global rank {} of {} ... "".format(rank, size)). ```. **Desktop (please complete the following information):**; - OS: Redhat 7.7; - C++ compiler and version: g++ (GCC) 4.8.5; - MPI implementation and version: MPICH 3.2.1; - SU2 Version: 7.0.2 ""Blackbird"" (looks to be reproducible on 7.1.0 also)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1179
https://github.com/su2code/SU2/issues/1179:1093,Modifiability,config,configuration,1093,"e bug**; When creating a CDriver instance, for example through the Python wrapper, with an MPI communicator which is defined only on a subset of the processes on which the MPI library was initialised, SU2 will deadlock. This seems to be because most of the MPI communication and synchronisation operations in SU2 explicitly refer to the global `MPI_COMM_WORLD`. The issue arose when attempting to control several Euler/RANS SU2 `CSinglezoneDriver` and `CDiscAdjSinglezoneDriver` instances in parallel (i.e. simultaneously) within a larger optimisation code, which provides each analysis with a subset of the ranks in its own MPI communicator. Naively replacing _all_ references to `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` throughout the code (except where it is defined, and where it is used to initialise the MPI wrapper in the SU2_XXX.cpp files) prevents the deadlock and results in the desired behaviour. However, I imagine that this ""fix"" may well cause all sorts of issues outside of my own, limited use case. **To Reproduce**; The issue can be reproduced with any SU2_CFD configuration file and mesh, run in parallel using the Python wrapper as follows: ; ```; from mpi4py import MPI; import pysu2 # or pysu2ad. filename = 'example.cfg'; zones = 1. rank = MPI.COMM_WORLD.Get_rank(); size = MPI.COMM_WORLD.Get_size(). group = MPI.COMM_WORLD.group.Excl([0]) # exclude the first rank; comm = MPI.COMM_WORLD.Create_group(group). if comm: # is False only on the excluded rank; print(""Running SU2 on global rank {} of {} ... "".format(rank, size)). # create SU2 instance -- will hang during Geometry preprocessing; instance = pysu2.CSinglezoneDriver(filename, zones, comm). else:; print(""Doing nothing on global rank {} of {} ... "".format(rank, size)). ```. **Desktop (please complete the following information):**; - OS: Redhat 7.7; - C++ compiler and version: g++ (GCC) 4.8.5; - MPI implementation and version: MPICH 3.2.1; - SU2 Version: 7.0.2 ""Blackbird"" (looks to be reproducible on 7.1.0 also)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1179
https://github.com/su2code/SU2/pull/1180:773,Deployability,update,updated,773,"## Proposed Changes; Replace references to the global MPI communicator `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` where appropriate. This prevents deadlocking in cases where SU2 is given an MPI communicator other than `MPI_COMM_WORLD`, for example when creating an instance of `CDriver` through the Python interface. ## Related Work; Issue #1179 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1180
https://github.com/su2code/SU2/pull/1180:306,Integrability,interface,interface,306,"## Proposed Changes; Replace references to the global MPI communicator `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` where appropriate. This prevents deadlocking in cases where SU2 is given an MPI communicator other than `MPI_COMM_WORLD`, for example when creating an instance of `CDriver` through the Python interface. ## Related Work; Issue #1179 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1180
https://github.com/su2code/SU2/pull/1180:700,Testability,test,test,700,"## Proposed Changes; Replace references to the global MPI communicator `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` where appropriate. This prevents deadlocking in cases where SU2 is given an MPI communicator other than `MPI_COMM_WORLD`, for example when creating an instance of `CDriver` through the Python interface. ## Related Work; Issue #1179 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1180
https://github.com/su2code/SU2/pull/1180:571,Usability,simpl,simply,571,"## Proposed Changes; Replace references to the global MPI communicator `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` where appropriate. This prevents deadlocking in cases where SU2 is given an MPI communicator other than `MPI_COMM_WORLD`, for example when creating an instance of `CDriver` through the Python interface. ## Related Work; Issue #1179 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1180
https://github.com/su2code/SU2/pull/1181:503,Deployability,update,updated,503,"## Proposed Changes; Run a bunch of loops to nPoint instead of communicating. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1181
https://github.com/su2code/SU2/pull/1181:430,Testability,test,test,430,"## Proposed Changes; Run a bunch of loops to nPoint instead of communicating. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1181
https://github.com/su2code/SU2/pull/1181:301,Usability,simpl,simply,301,"## Proposed Changes; Run a bunch of loops to nPoint instead of communicating. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1181
https://github.com/su2code/SU2/pull/1183:70,Deployability,update,update,70,"## Proposed Changes; In a nutshell, we still solve a linear system to update the solution, but the approximate Jacobian is replaced by matrix-free products with the ""real"" Jacobian which are obtained by finite differences (each product requires the computation of the residual for a perturbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183
https://github.com/su2code/SU2/pull/1183:2194,Deployability,update,updated,2194,"urbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183
https://github.com/su2code/SU2/pull/1183:689,Energy Efficiency,adapt,adaptive,689,"## Proposed Changes; In a nutshell, we still solve a linear system to update the solution, but the approximate Jacobian is replaced by matrix-free products with the ""real"" Jacobian which are obtained by finite differences (each product requires the computation of the residual for a perturbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183
https://github.com/su2code/SU2/pull/1183:689,Modifiability,adapt,adaptive,689,"## Proposed Changes; In a nutshell, we still solve a linear system to update the solution, but the approximate Jacobian is replaced by matrix-free products with the ""real"" Jacobian which are obtained by finite differences (each product requires the computation of the residual for a perturbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183
https://github.com/su2code/SU2/pull/1183:1191,Modifiability,config,config,1191,"ences (each product requires the computation of the residual for a perturbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate do",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183
https://github.com/su2code/SU2/pull/1183:2121,Testability,test,test,2121,"urbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183
https://github.com/su2code/SU2/pull/1183:1586,Usability,simpl,simpler,1586,"urbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183
https://github.com/su2code/SU2/pull/1183:1992,Usability,simpl,simply,1992,"urbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183
https://github.com/su2code/SU2/issues/1184:70,Availability,down,download,70,"A clean build fails nearly immediately upon running ./meson.py as the download of Mutationpp gets a 404 error. to fix:; Remove "".git"" from github_repo_mpp (line 56 of init.py)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1184
https://github.com/su2code/SU2/issues/1184:104,Availability,error,error,104,"A clean build fails nearly immediately upon running ./meson.py as the download of Mutationpp gets a 404 error. to fix:; Remove "".git"" from github_repo_mpp (line 56 of init.py)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1184
https://github.com/su2code/SU2/issues/1185:682,Modifiability,variab,variables,682,"I wonder whether in the following code the arguments of `SetCoord` should be swapped. The code illustrates how the `visc_numerics` is initialized in `CEulerSolver::BC_Far_Field`:. iPoint = geometry->vertex[val_marker][iVertex]->GetNode();; Point_Normal = geometry->vertex[val_marker][iVertex]->GetNormal_Neighbor();. V_domain = nodes->GetPrimitive(iPoint);; V_infty = ... visc_numerics->SetCoord(geometry->nodes->GetCoord(iPoint),; geometry->nodes->GetCoord(Point_Normal));; visc_numerics->SetPrimitive(V_domain, V_infty);. So `iPoint` lies on the boundary. *`Point_Normal` is its normal neighbour in the interior of the domain, and not some ""dummy cell"" outside. But the primitive variables at `Point_Normal` are set to the outside values.*. As far as I can tell, the `CNumerics::Coord_j` member is only used in the child classes of `CAvgGrad_Base`, in order to compute. Edge_Vector[MAXNDIM] = {0.0}, /*!< \brief Vector from point i to point j. */. by. Edge_Vector[iDim] = Coord_j[iDim]-Coord_i[iDim];. which is then used to call `CorrectGradient`. It has the wrong sign if the above code is incorrect. (Apart from that, `Coord_j` is used to compute the distance in the NEMO viscous residuals.). Note that similar calls to `SetCoord` can be found at many places, e.g. in `CEulerSolver::BC_Riemann`, `CEulerSolver::BC_Giles`, their siblings in `CIncEulerSolver`. and `CTurbSASolver::BC_Inlet_Turbo`.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1185
https://github.com/su2code/SU2/pull/1186:250,Deployability,update,update,250,"I ran the git command to list contributors and did my best to remove duplicates.; If git does not know your name it will use the github alias, if you don't like that please correct the file directly on this PR. We have a few new names since the last update, welcome to SU2!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1186
https://github.com/su2code/SU2/pull/1187:805,Deployability,update,updated,805,"## Proposed Changes; Fixed a small memory leak in CConfig by adding CFL_AdaptParam to the destructor of CConfig; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1187
https://github.com/su2code/SU2/pull/1187:732,Testability,test,test,732,"## Proposed Changes; Fixed a small memory leak in CConfig by adding CFL_AdaptParam to the destructor of CConfig; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1187
https://github.com/su2code/SU2/pull/1187:309,Usability,guid,guide,309,"## Proposed Changes; Fixed a small memory leak in CConfig by adding CFL_AdaptParam to the destructor of CConfig; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1187
https://github.com/su2code/SU2/pull/1187:602,Usability,simpl,simply,602,"## Proposed Changes; Fixed a small memory leak in CConfig by adding CFL_AdaptParam to the destructor of CConfig; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1187
https://github.com/su2code/SU2/pull/1188:798,Deployability,update,updated,798,"## Proposed Changes; Small PR to fix a memory leak in CConfig by deleting CFL_AdaptParam in the destructor.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1188
https://github.com/su2code/SU2/pull/1188:725,Testability,test,test,725,"## Proposed Changes; Small PR to fix a memory leak in CConfig by deleting CFL_AdaptParam in the destructor.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1188
https://github.com/su2code/SU2/pull/1188:305,Usability,guid,guide,305,"## Proposed Changes; Small PR to fix a memory leak in CConfig by deleting CFL_AdaptParam in the destructor.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1188
https://github.com/su2code/SU2/pull/1188:596,Usability,simpl,simply,596,"## Proposed Changes; Small PR to fix a memory leak in CConfig by deleting CFL_AdaptParam in the destructor.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1188
https://github.com/su2code/SU2/pull/1189:1137,Deployability,update,updated,1137,"## Proposed Changes; ; The visc_numerics' coordinates were often set to the coordinates; of the boundary vertex and its closest normal neighbour. Setting; them to the boundary vertex and the reflection of the closest; normal neighbour at the vertex is more systematic however.; Normally this should not change much, because the boundary numerics; do not apply gradient correction, so they only depend on the; distance between Coord_i, Coord_j. ## Related Work; #1185 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189
https://github.com/su2code/SU2/pull/1189:394,Integrability,depend,depend,394,"## Proposed Changes; ; The visc_numerics' coordinates were often set to the coordinates; of the boundary vertex and its closest normal neighbour. Setting; them to the boundary vertex and the reflection of the closest; normal neighbour at the vertex is more systematic however.; Normally this should not change much, because the boundary numerics; do not apply gradient correction, so they only depend on the; distance between Coord_i, Coord_j. ## Related Work; #1185 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189
https://github.com/su2code/SU2/pull/1189:1064,Testability,test,test,1064,"## Proposed Changes; ; The visc_numerics' coordinates were often set to the coordinates; of the boundary vertex and its closest normal neighbour. Setting; them to the boundary vertex and the reflection of the closest; normal neighbour at the vertex is more systematic however.; Normally this should not change much, because the boundary numerics; do not apply gradient correction, so they only depend on the; distance between Coord_i, Coord_j. ## Related Work; #1185 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189
https://github.com/su2code/SU2/pull/1189:641,Usability,guid,guide,641,"## Proposed Changes; ; The visc_numerics' coordinates were often set to the coordinates; of the boundary vertex and its closest normal neighbour. Setting; them to the boundary vertex and the reflection of the closest; normal neighbour at the vertex is more systematic however.; Normally this should not change much, because the boundary numerics; do not apply gradient correction, so they only depend on the; distance between Coord_i, Coord_j. ## Related Work; #1185 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189
https://github.com/su2code/SU2/pull/1189:934,Usability,simpl,simply,934,"## Proposed Changes; ; The visc_numerics' coordinates were often set to the coordinates; of the boundary vertex and its closest normal neighbour. Setting; them to the boundary vertex and the reflection of the closest; normal neighbour at the vertex is more systematic however.; Normally this should not change much, because the boundary numerics; do not apply gradient correction, so they only depend on the; distance between Coord_i, Coord_j. ## Related Work; #1185 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189
https://github.com/su2code/SU2/issues/1190:37,Modifiability,config,config,37,"By running exactly the same mesh and config flle on Linux Centos 8 with two version of SU2, it leads to two different values for the wetted area which is calculated during the initialization. with SU2 v7.0.3:. > Finding max control volume width.; > Semi-span length = 13.5934 m.; > **Wetted area = 466.385 m^2.**; > Area projection in the x-plane = 19.4802 m^2, y-plane = 109.691 m^2, z-plane = 165.851 m^2.; > Max. coordinate in the x-direction = 34.8253 m, y-direction = 13.5934 m, z-direction = 5.44607 m.; > Min. coordinate in the x-direction = -0.00557099 m, y-direction = -13.5934 m, z-direction = -1.75235 m. with SU2 v7.1.0:. > Finding max control volume width.; > Semi-span length = 13.5934 m.; > **Wetted area = 1.85378e-06 m^2.**; > Area projection in the x-plane = 19.4802 m^2, y-plane = 109.691 m^2, z-plane = 165.851 m^2.; > Max. coordinate in the x-direction = 34.8253 m, y-direction = 13.5934 m, z-direction = 5.44607 m.; > Min. coordinate in the x-direction = -0.00557099 m, y-direction = -13.5934 m, z-direction = -1.75235 m. Regarding my geometry and the other values given, the second one (v7.1.0) seems to be the wrong one.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1190
https://github.com/su2code/SU2/issues/1191:73,Availability,down,download,73,"# Problem; While building the SU2-v7.1.0 tarball, The meson.py failed to download Mutationpp:; ```; ./meson.py build --prefix=/okyanus/progs/SU2/SU2-v7.1.0-python-3.8.7-mpich-3.4.1-gcc-8.3.0; Downloading CoDiPack '1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8'; Downloading MeDiPack 'b84cef4272ab8bad981c0d0386d855daa8fbd340'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; Downloading Mutationpp '5ff579f43781cae07411e5ab46291c9971536be6'; Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 95, in init_submodules; download_module(mpp_name, alt_name_mpp, github_repo_mpp, sha_version_mpp); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 247, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 222, in urlopen; return opener.open(url, data, timeout); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 531, in open; response = meth(req, response); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 640, in http_response; response = self.parent.error(; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 569, in error; return self._call_chain(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 502, in _call_chain; result = func(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 649, in http_er",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1191
https://github.com/su2code/SU2/issues/1191:192,Availability,Down,Downloading,192,"# Problem; While building the SU2-v7.1.0 tarball, The meson.py failed to download Mutationpp:; ```; ./meson.py build --prefix=/okyanus/progs/SU2/SU2-v7.1.0-python-3.8.7-mpich-3.4.1-gcc-8.3.0; Downloading CoDiPack '1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8'; Downloading MeDiPack 'b84cef4272ab8bad981c0d0386d855daa8fbd340'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; Downloading Mutationpp '5ff579f43781cae07411e5ab46291c9971536be6'; Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 95, in init_submodules; download_module(mpp_name, alt_name_mpp, github_repo_mpp, sha_version_mpp); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 247, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 222, in urlopen; return opener.open(url, data, timeout); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 531, in open; response = meth(req, response); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 640, in http_response; response = self.parent.error(; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 569, in error; return self._call_chain(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 502, in _call_chain; result = func(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 649, in http_er",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1191
https://github.com/su2code/SU2/issues/1191:257,Availability,Down,Downloading,257,"# Problem; While building the SU2-v7.1.0 tarball, The meson.py failed to download Mutationpp:; ```; ./meson.py build --prefix=/okyanus/progs/SU2/SU2-v7.1.0-python-3.8.7-mpich-3.4.1-gcc-8.3.0; Downloading CoDiPack '1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8'; Downloading MeDiPack 'b84cef4272ab8bad981c0d0386d855daa8fbd340'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; Downloading Mutationpp '5ff579f43781cae07411e5ab46291c9971536be6'; Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 95, in init_submodules; download_module(mpp_name, alt_name_mpp, github_repo_mpp, sha_version_mpp); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 247, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 222, in urlopen; return opener.open(url, data, timeout); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 531, in open; response = meth(req, response); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 640, in http_response; response = self.parent.error(; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 569, in error; return self._call_chain(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 502, in _call_chain; result = func(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 649, in http_er",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1191
https://github.com/su2code/SU2/issues/1191:322,Availability,Down,Downloading,322,"# Problem; While building the SU2-v7.1.0 tarball, The meson.py failed to download Mutationpp:; ```; ./meson.py build --prefix=/okyanus/progs/SU2/SU2-v7.1.0-python-3.8.7-mpich-3.4.1-gcc-8.3.0; Downloading CoDiPack '1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8'; Downloading MeDiPack 'b84cef4272ab8bad981c0d0386d855daa8fbd340'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; Downloading Mutationpp '5ff579f43781cae07411e5ab46291c9971536be6'; Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 95, in init_submodules; download_module(mpp_name, alt_name_mpp, github_repo_mpp, sha_version_mpp); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 247, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 222, in urlopen; return opener.open(url, data, timeout); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 531, in open; response = meth(req, response); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 640, in http_response; response = self.parent.error(; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 569, in error; return self._call_chain(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 502, in _call_chain; result = func(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 649, in http_er",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1191
https://github.com/su2code/SU2/issues/1191:384,Availability,Down,Downloading,384,"# Problem; While building the SU2-v7.1.0 tarball, The meson.py failed to download Mutationpp:; ```; ./meson.py build --prefix=/okyanus/progs/SU2/SU2-v7.1.0-python-3.8.7-mpich-3.4.1-gcc-8.3.0; Downloading CoDiPack '1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8'; Downloading MeDiPack 'b84cef4272ab8bad981c0d0386d855daa8fbd340'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; Downloading Mutationpp '5ff579f43781cae07411e5ab46291c9971536be6'; Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 95, in init_submodules; download_module(mpp_name, alt_name_mpp, github_repo_mpp, sha_version_mpp); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 247, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 222, in urlopen; return opener.open(url, data, timeout); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 531, in open; response = meth(req, response); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 640, in http_response; response = self.parent.error(; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 569, in error; return self._call_chain(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 502, in _call_chain; result = func(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 649, in http_er",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1191
https://github.com/su2code/SU2/issues/1191:446,Availability,Down,Downloading,446,"# Problem; While building the SU2-v7.1.0 tarball, The meson.py failed to download Mutationpp:; ```; ./meson.py build --prefix=/okyanus/progs/SU2/SU2-v7.1.0-python-3.8.7-mpich-3.4.1-gcc-8.3.0; Downloading CoDiPack '1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8'; Downloading MeDiPack 'b84cef4272ab8bad981c0d0386d855daa8fbd340'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; Downloading Mutationpp '5ff579f43781cae07411e5ab46291c9971536be6'; Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 95, in init_submodules; download_module(mpp_name, alt_name_mpp, github_repo_mpp, sha_version_mpp); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 247, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 222, in urlopen; return opener.open(url, data, timeout); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 531, in open; response = meth(req, response); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 640, in http_response; response = self.parent.error(; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 569, in error; return self._call_chain(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 502, in _call_chain; result = func(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 649, in http_er",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1191
https://github.com/su2code/SU2/issues/1191:1582,Availability,error,error,1582,"'5ff579f43781cae07411e5ab46291c9971536be6'; Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 95, in init_submodules; download_module(mpp_name, alt_name_mpp, github_repo_mpp, sha_version_mpp); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 247, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 222, in urlopen; return opener.open(url, data, timeout); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 531, in open; response = meth(req, response); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 640, in http_response; response = self.parent.error(; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 569, in error; return self._call_chain(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 502, in _call_chain; result = func(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 649, in http_error_default; raise HTTPError(req.full_url, code, msg, hdrs, fp); urllib.error.HTTPError: HTTP Error 404: Not Found; ```; # Solution; You should edit meson_scripts/init.py file, and replace line56:; ```; github_repo_mpp = 'https://github.com/mutationpp/Mutationpp.git'; ```; with this line:; ```; github_repo_mpp = 'https://github.com/mutationpp/Mutationpp'; ```. # Environment; OS: Centos 7; SU2: SU2-v7.1.0; MPI: mpich-3.4.1; COMPILER: gcc-8.3.0; PYTHON: python-3.8.7",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1191
https://github.com/su2code/SU2/issues/1191:1700,Availability,error,error,1700,"'5ff579f43781cae07411e5ab46291c9971536be6'; Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 95, in init_submodules; download_module(mpp_name, alt_name_mpp, github_repo_mpp, sha_version_mpp); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 247, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 222, in urlopen; return opener.open(url, data, timeout); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 531, in open; response = meth(req, response); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 640, in http_response; response = self.parent.error(; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 569, in error; return self._call_chain(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 502, in _call_chain; result = func(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 649, in http_error_default; raise HTTPError(req.full_url, code, msg, hdrs, fp); urllib.error.HTTPError: HTTP Error 404: Not Found; ```; # Solution; You should edit meson_scripts/init.py file, and replace line56:; ```; github_repo_mpp = 'https://github.com/mutationpp/Mutationpp.git'; ```; with this line:; ```; github_repo_mpp = 'https://github.com/mutationpp/Mutationpp'; ```. # Environment; OS: Centos 7; SU2: SU2-v7.1.0; MPI: mpich-3.4.1; COMPILER: gcc-8.3.0; PYTHON: python-3.8.7",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1191
https://github.com/su2code/SU2/issues/1191:2073,Availability,error,error,2073,"'5ff579f43781cae07411e5ab46291c9971536be6'; Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 95, in init_submodules; download_module(mpp_name, alt_name_mpp, github_repo_mpp, sha_version_mpp); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 247, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 222, in urlopen; return opener.open(url, data, timeout); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 531, in open; response = meth(req, response); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 640, in http_response; response = self.parent.error(; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 569, in error; return self._call_chain(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 502, in _call_chain; result = func(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 649, in http_error_default; raise HTTPError(req.full_url, code, msg, hdrs, fp); urllib.error.HTTPError: HTTP Error 404: Not Found; ```; # Solution; You should edit meson_scripts/init.py file, and replace line56:; ```; github_repo_mpp = 'https://github.com/mutationpp/Mutationpp.git'; ```; with this line:; ```; github_repo_mpp = 'https://github.com/mutationpp/Mutationpp'; ```. # Environment; OS: Centos 7; SU2: SU2-v7.1.0; MPI: mpich-3.4.1; COMPILER: gcc-8.3.0; PYTHON: python-3.8.7",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1191
https://github.com/su2code/SU2/issues/1191:2095,Availability,Error,Error,2095,"'5ff579f43781cae07411e5ab46291c9971536be6'; Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 95, in init_submodules; download_module(mpp_name, alt_name_mpp, github_repo_mpp, sha_version_mpp); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 247, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 222, in urlopen; return opener.open(url, data, timeout); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 531, in open; response = meth(req, response); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 640, in http_response; response = self.parent.error(; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 569, in error; return self._call_chain(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 502, in _call_chain; result = func(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 649, in http_error_default; raise HTTPError(req.full_url, code, msg, hdrs, fp); urllib.error.HTTPError: HTTP Error 404: Not Found; ```; # Solution; You should edit meson_scripts/init.py file, and replace line56:; ```; github_repo_mpp = 'https://github.com/mutationpp/Mutationpp.git'; ```; with this line:; ```; github_repo_mpp = 'https://github.com/mutationpp/Mutationpp'; ```. # Environment; OS: Centos 7; SU2: SU2-v7.1.0; MPI: mpich-3.4.1; COMPILER: gcc-8.3.0; PYTHON: python-3.8.7",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1191
https://github.com/su2code/SU2/issues/1191:1276,Safety,timeout,timeout,1276,"8bad981c0d0386d855daa8fbd340'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; Downloading Mutationpp '5ff579f43781cae07411e5ab46291c9971536be6'; Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 95, in init_submodules; download_module(mpp_name, alt_name_mpp, github_repo_mpp, sha_version_mpp); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 247, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 222, in urlopen; return opener.open(url, data, timeout); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 531, in open; response = meth(req, response); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 640, in http_response; response = self.parent.error(; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 569, in error; return self._call_chain(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 502, in _call_chain; result = func(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 649, in http_error_default; raise HTTPError(req.full_url, code, msg, hdrs, fp); urllib.error.HTTPError: HTTP Error 404: Not Found; ```; # Solution; You should edit meson_scripts/init.py file, and replace line56:; ```; github_repo_mpp = 'https://github.com/mutationpp/Mutationpp.git'; ```; with this line:; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1191
https://github.com/su2code/SU2/pull/1192:259,Availability,error,error,259,This is a small fix of two bugs related to the viscous axisymmetric source terms. 1. As I had suspected in #1106 it should be `AxiAuxVar_Grad_i[2][0]` instead of `AxiAuxVar_Grad_i[2][1]`. The book by Hoffman that was used as a reference actually contained an error. I am attaching a page from another edition of the book (thanks to @dbrezgin). ![image](https://user-images.githubusercontent.com/55834287/107231504-aaae9d00-6a20-11eb-8a82-b169dd941d81.png). 2. The type for the auxvar and gradient fields should be a reference `auto&` not just `auto`. i found the bug after it was pointed out to me that it was always set to zero (thanks to @dbrezgin).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1192
https://github.com/su2code/SU2/pull/1193:640,Deployability,update,updated,640,"## Proposed Changes; Fix #1190; Prevent possible OpenMP bug for van Albada limiter.; Fix frozen limiter logic, freezing means ""do not compute"", and not ""do not apply"".; Fix limiter outputs for turbulence variables. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1193
https://github.com/su2code/SU2/pull/1193:204,Modifiability,variab,variables,204,"## Proposed Changes; Fix #1190; Prevent possible OpenMP bug for van Albada limiter.; Fix frozen limiter logic, freezing means ""do not compute"", and not ""do not apply"".; Fix limiter outputs for turbulence variables. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1193
https://github.com/su2code/SU2/pull/1193:104,Testability,log,logic,104,"## Proposed Changes; Fix #1190; Prevent possible OpenMP bug for van Albada limiter.; Fix frozen limiter logic, freezing means ""do not compute"", and not ""do not apply"".; Fix limiter outputs for turbulence variables. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1193
https://github.com/su2code/SU2/pull/1193:567,Testability,test,test,567,"## Proposed Changes; Fix #1190; Prevent possible OpenMP bug for van Albada limiter.; Fix frozen limiter logic, freezing means ""do not compute"", and not ""do not apply"".; Fix limiter outputs for turbulence variables. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1193
https://github.com/su2code/SU2/pull/1193:438,Usability,simpl,simply,438,"## Proposed Changes; Fix #1190; Prevent possible OpenMP bug for van Albada limiter.; Fix frozen limiter logic, freezing means ""do not compute"", and not ""do not apply"".; Fix limiter outputs for turbulence variables. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1193
https://github.com/su2code/SU2/pull/1194:999,Deployability,update,updated,999,"## Proposed Changes; During multigrid prolongation the no-slip (visc.) wall BC are set again. If there is Grid velocity it was multiplied by the 0th solution entry, both inc and compr. For compr flow it is density which is correct but for inc flow that is pressure. That is corrected by overloading.; ; In a little test with `TestCases/unsteady/pitching_naca0015_rans_inc/config_incomp_turb_sa.cfg` the linear solver diverged in the first iteration before, and now it works. Discovered by @pcarruscag and discussed in last weeks DevMeeting, so props to him. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. *not necessary*; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1194
https://github.com/su2code/SU2/pull/1194:315,Testability,test,test,315,"## Proposed Changes; During multigrid prolongation the no-slip (visc.) wall BC are set again. If there is Grid velocity it was multiplied by the 0th solution entry, both inc and compr. For compr flow it is density which is correct but for inc flow that is pressure. That is corrected by overloading.; ; In a little test with `TestCases/unsteady/pitching_naca0015_rans_inc/config_incomp_turb_sa.cfg` the linear solver diverged in the first iteration before, and now it works. Discovered by @pcarruscag and discussed in last weeks DevMeeting, so props to him. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. *not necessary*; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1194
https://github.com/su2code/SU2/pull/1194:326,Testability,Test,TestCases,326,"## Proposed Changes; During multigrid prolongation the no-slip (visc.) wall BC are set again. If there is Grid velocity it was multiplied by the 0th solution entry, both inc and compr. For compr flow it is density which is correct but for inc flow that is pressure. That is corrected by overloading.; ; In a little test with `TestCases/unsteady/pitching_naca0015_rans_inc/config_incomp_turb_sa.cfg` the linear solver diverged in the first iteration before, and now it works. Discovered by @pcarruscag and discussed in last weeks DevMeeting, so props to him. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. *not necessary*; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1194
https://github.com/su2code/SU2/pull/1194:910,Testability,test,test,910,"## Proposed Changes; During multigrid prolongation the no-slip (visc.) wall BC are set again. If there is Grid velocity it was multiplied by the 0th solution entry, both inc and compr. For compr flow it is density which is correct but for inc flow that is pressure. That is corrected by overloading.; ; In a little test with `TestCases/unsteady/pitching_naca0015_rans_inc/config_incomp_turb_sa.cfg` the linear solver diverged in the first iteration before, and now it works. Discovered by @pcarruscag and discussed in last weeks DevMeeting, so props to him. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. *not necessary*; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1194
https://github.com/su2code/SU2/pull/1194:781,Usability,simpl,simply,781,"## Proposed Changes; During multigrid prolongation the no-slip (visc.) wall BC are set again. If there is Grid velocity it was multiplied by the 0th solution entry, both inc and compr. For compr flow it is density which is correct but for inc flow that is pressure. That is corrected by overloading.; ; In a little test with `TestCases/unsteady/pitching_naca0015_rans_inc/config_incomp_turb_sa.cfg` the linear solver diverged in the first iteration before, and now it works. Discovered by @pcarruscag and discussed in last weeks DevMeeting, so props to him. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. *not necessary*; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1194
https://github.com/su2code/SU2/pull/1195:1468,Deployability,update,updated,1468,"This implements the k-omega SST source terms for 2D axisymmetric problems in a new member function of the existing source term class (it would never be used independently of it so I did not create a new class). The extra source terms are the difference between the equations in 2D cartesian and 3D cylindrical coordinates under an assumption of axisymmetry without swirl. They are almost the same as those for Wilcox's k-omega shown in this image (taken from http://eprints.gla.ac.uk/184394/1/184394.pdf). ; ![kwcyl](https://user-images.githubusercontent.com/55834287/107506869-056e0300-6b9f-11eb-834b-f82d6b502690.png); Only the constants have been swapped for the blended ones and the changed definition of the eddy viscosity is taken into account (see [menter1994.pdf](https://github.com/su2code/SU2/files/5957873/menter1994.pdf)). Cross diffusion is the same as in 2D when assuming there is no azimuth gradient. Note that these source terms have the opposite sign (RHS) of the flow equations source terms (LHS) since the block is subtracted and not added. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. Looking into creating an axisymmetric RANS test/regression case",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1195
https://github.com/su2code/SU2/pull/1195:1395,Testability,test,test,1395,"This implements the k-omega SST source terms for 2D axisymmetric problems in a new member function of the existing source term class (it would never be used independently of it so I did not create a new class). The extra source terms are the difference between the equations in 2D cartesian and 3D cylindrical coordinates under an assumption of axisymmetry without swirl. They are almost the same as those for Wilcox's k-omega shown in this image (taken from http://eprints.gla.ac.uk/184394/1/184394.pdf). ; ![kwcyl](https://user-images.githubusercontent.com/55834287/107506869-056e0300-6b9f-11eb-834b-f82d6b502690.png); Only the constants have been swapped for the blended ones and the changed definition of the eddy viscosity is taken into account (see [menter1994.pdf](https://github.com/su2code/SU2/files/5957873/menter1994.pdf)). Cross diffusion is the same as in 2D when assuming there is no azimuth gradient. Note that these source terms have the opposite sign (RHS) of the flow equations source terms (LHS) since the block is subtracted and not added. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. Looking into creating an axisymmetric RANS test/regression case",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1195
https://github.com/su2code/SU2/pull/1195:1605,Testability,test,test,1605,"This implements the k-omega SST source terms for 2D axisymmetric problems in a new member function of the existing source term class (it would never be used independently of it so I did not create a new class). The extra source terms are the difference between the equations in 2D cartesian and 3D cylindrical coordinates under an assumption of axisymmetry without swirl. They are almost the same as those for Wilcox's k-omega shown in this image (taken from http://eprints.gla.ac.uk/184394/1/184394.pdf). ; ![kwcyl](https://user-images.githubusercontent.com/55834287/107506869-056e0300-6b9f-11eb-834b-f82d6b502690.png); Only the constants have been swapped for the blended ones and the changed definition of the eddy viscosity is taken into account (see [menter1994.pdf](https://github.com/su2code/SU2/files/5957873/menter1994.pdf)). Cross diffusion is the same as in 2D when assuming there is no azimuth gradient. Note that these source terms have the opposite sign (RHS) of the flow equations source terms (LHS) since the block is subtracted and not added. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. Looking into creating an axisymmetric RANS test/regression case",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1195
https://github.com/su2code/SU2/pull/1195:1266,Usability,simpl,simply,1266,"This implements the k-omega SST source terms for 2D axisymmetric problems in a new member function of the existing source term class (it would never be used independently of it so I did not create a new class). The extra source terms are the difference between the equations in 2D cartesian and 3D cylindrical coordinates under an assumption of axisymmetry without swirl. They are almost the same as those for Wilcox's k-omega shown in this image (taken from http://eprints.gla.ac.uk/184394/1/184394.pdf). ; ![kwcyl](https://user-images.githubusercontent.com/55834287/107506869-056e0300-6b9f-11eb-834b-f82d6b502690.png); Only the constants have been swapped for the blended ones and the changed definition of the eddy viscosity is taken into account (see [menter1994.pdf](https://github.com/su2code/SU2/files/5957873/menter1994.pdf)). Cross diffusion is the same as in 2D when assuming there is no azimuth gradient. Note that these source terms have the opposite sign (RHS) of the flow equations source terms (LHS) since the block is subtracted and not added. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. Looking into creating an axisymmetric RANS test/regression case",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1195
https://github.com/su2code/SU2/issues/1196:442,Modifiability,variab,variable,442,"Hi everybody,. First of all thank you so much for all the work you have done with this amazing software. I think there is a bug with the BC transition model in function CSourcePieceWise_TurbSA::ComputeResidual in path SU2_CFD/src/numerics/turbulent/. The initialization value of chi_2 is 50.0 instead of 5.0 as suggested in the original paper at https://journals.sagepub.com/doi/pdf/10.1177/0954406217743537. Moreover, the computation of the variable term2 seems dubious, also when referring to the original paper. . There is another bug related to the fact that gamma_bc is redefined within the above mentioned function. Thus when trying to output it by adding the option INTERMITTENCY to Volume_Output in .cfg file it results in a 0 value everywhere. Thank you so much in advance and keep up with the great work!. Best,; Andrea. **Desktop (please complete the following information):**; - OS: Ubuntu 20.04.2; - C++ compiler and version: gcc 9.3.0; - MPI implementation and version: 4.0.3; - SU2 Version: 7.1.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1196
https://github.com/su2code/SU2/pull/1197:683,Deployability,update,updated,683,"## Proposed Changes; Trying to make the python vertex tractions and vertex traction adjoints independent of a specific marker to allow #1174 to go forward without side effects on how FSI is done via the python wrapper at the moment. ## Related Work; #1174 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1197
https://github.com/su2code/SU2/pull/1197:210,Integrability,wrap,wrapper,210,"## Proposed Changes; Trying to make the python vertex tractions and vertex traction adjoints independent of a specific marker to allow #1174 to go forward without side effects on how FSI is done via the python wrapper at the moment. ## Related Work; #1174 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1197
https://github.com/su2code/SU2/pull/1197:610,Testability,test,test,610,"## Proposed Changes; Trying to make the python vertex tractions and vertex traction adjoints independent of a specific marker to allow #1174 to go forward without side effects on how FSI is done via the python wrapper at the moment. ## Related Work; #1174 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1197
https://github.com/su2code/SU2/pull/1197:481,Usability,simpl,simply,481,"## Proposed Changes; Trying to make the python vertex tractions and vertex traction adjoints independent of a specific marker to allow #1174 to go forward without side effects on how FSI is done via the python wrapper at the moment. ## Related Work; #1174 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1197
https://github.com/su2code/SU2/pull/1198:58,Deployability,update,update,58,The interface received some modifications to clean up and update various function. The python switch has been removed.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1198
https://github.com/su2code/SU2/pull/1198:4,Integrability,interface,interface,4,The interface received some modifications to clean up and update various function. The python switch has been removed.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1198
https://github.com/su2code/SU2/pull/1199:592,Deployability,update,updated,592,"## Proposed Changes; Found while debugging differences between legacy and new mesh deformation with @Nicola-Fonzi in #1197.; Explained below. ## Related Work; #1197 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1199
https://github.com/su2code/SU2/pull/1199:519,Testability,test,test,519,"## Proposed Changes; Found while debugging differences between legacy and new mesh deformation with @Nicola-Fonzi in #1197.; Explained below. ## Related Work; #1197 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1199
https://github.com/su2code/SU2/pull/1199:390,Usability,simpl,simply,390,"## Proposed Changes; Found while debugging differences between legacy and new mesh deformation with @Nicola-Fonzi in #1197.; Explained below. ## Related Work; #1197 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1199
https://github.com/su2code/SU2/pull/1200:789,Deployability,update,updated,789,"## Proposed Changes. In the calculation of the stiffness for the mesh deformation, if the symmetry plane for the deformation is too stiff, cells may get distorted and the simulation may crash. This occurred when the wall distance stiffness was used, and the symmetry plane for the deformation was also a solid wall boundary. This small fix should avoid the issue. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1200
https://github.com/su2code/SU2/pull/1200:347,Safety,avoid,avoid,347,"## Proposed Changes. In the calculation of the stiffness for the mesh deformation, if the symmetry plane for the deformation is too stiff, cells may get distorted and the simulation may crash. This occurred when the wall distance stiffness was used, and the symmetry plane for the deformation was also a solid wall boundary. This small fix should avoid the issue. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1200
https://github.com/su2code/SU2/pull/1200:716,Testability,test,test,716,"## Proposed Changes. In the calculation of the stiffness for the mesh deformation, if the symmetry plane for the deformation is too stiff, cells may get distorted and the simulation may crash. This occurred when the wall distance stiffness was used, and the symmetry plane for the deformation was also a solid wall boundary. This small fix should avoid the issue. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1200
https://github.com/su2code/SU2/pull/1200:587,Usability,simpl,simply,587,"## Proposed Changes. In the calculation of the stiffness for the mesh deformation, if the symmetry plane for the deformation is too stiff, cells may get distorted and the simulation may crash. This occurred when the wall distance stiffness was used, and the symmetry plane for the deformation was also a solid wall boundary. This small fix should avoid the issue. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1200
https://github.com/su2code/SU2/pull/1201:1147,Deployability,update,updated,1147,"## Proposed Changes; Description of `LINEAR_SOLVER_ILU_FILL_IN` wrote Linael instead of Linear .. and that was copied quite a few times; Done using `find ./ -type -f -exec sed -i -e 's/Linael/Linear/g' {} \;` in ./Testcases on Linux. As in none of the appearances the option is not using the default of zero, that option could be removed from all those testcases imo, but I put that up to discussion. As @pcarruscag mentioned in #1195 `[...]simplify the config by removing options that are not needed, this is to make it easier to maintain the testcases if there are changes to some options.`. Feel free to chip any other typos here. . ## Related Work; Seen in #1195 and annoyed me enough to open a PR, but of course not introduced there. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1201
https://github.com/su2code/SU2/pull/1201:454,Modifiability,config,config,454,"## Proposed Changes; Description of `LINEAR_SOLVER_ILU_FILL_IN` wrote Linael instead of Linear .. and that was copied quite a few times; Done using `find ./ -type -f -exec sed -i -e 's/Linael/Linear/g' {} \;` in ./Testcases on Linux. As in none of the appearances the option is not using the default of zero, that option could be removed from all those testcases imo, but I put that up to discussion. As @pcarruscag mentioned in #1195 `[...]simplify the config by removing options that are not needed, this is to make it easier to maintain the testcases if there are changes to some options.`. Feel free to chip any other typos here. . ## Related Work; Seen in #1195 and annoyed me enough to open a PR, but of course not introduced there. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1201
https://github.com/su2code/SU2/pull/1201:214,Testability,Test,Testcases,214,"## Proposed Changes; Description of `LINEAR_SOLVER_ILU_FILL_IN` wrote Linael instead of Linear .. and that was copied quite a few times; Done using `find ./ -type -f -exec sed -i -e 's/Linael/Linear/g' {} \;` in ./Testcases on Linux. As in none of the appearances the option is not using the default of zero, that option could be removed from all those testcases imo, but I put that up to discussion. As @pcarruscag mentioned in #1195 `[...]simplify the config by removing options that are not needed, this is to make it easier to maintain the testcases if there are changes to some options.`. Feel free to chip any other typos here. . ## Related Work; Seen in #1195 and annoyed me enough to open a PR, but of course not introduced there. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1201
https://github.com/su2code/SU2/pull/1201:353,Testability,test,testcases,353,"## Proposed Changes; Description of `LINEAR_SOLVER_ILU_FILL_IN` wrote Linael instead of Linear .. and that was copied quite a few times; Done using `find ./ -type -f -exec sed -i -e 's/Linael/Linear/g' {} \;` in ./Testcases on Linux. As in none of the appearances the option is not using the default of zero, that option could be removed from all those testcases imo, but I put that up to discussion. As @pcarruscag mentioned in #1195 `[...]simplify the config by removing options that are not needed, this is to make it easier to maintain the testcases if there are changes to some options.`. Feel free to chip any other typos here. . ## Related Work; Seen in #1195 and annoyed me enough to open a PR, but of course not introduced there. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1201
https://github.com/su2code/SU2/pull/1201:544,Testability,test,testcases,544,"## Proposed Changes; Description of `LINEAR_SOLVER_ILU_FILL_IN` wrote Linael instead of Linear .. and that was copied quite a few times; Done using `find ./ -type -f -exec sed -i -e 's/Linael/Linear/g' {} \;` in ./Testcases on Linux. As in none of the appearances the option is not using the default of zero, that option could be removed from all those testcases imo, but I put that up to discussion. As @pcarruscag mentioned in #1195 `[...]simplify the config by removing options that are not needed, this is to make it easier to maintain the testcases if there are changes to some options.`. Feel free to chip any other typos here. . ## Related Work; Seen in #1195 and annoyed me enough to open a PR, but of course not introduced there. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1201
https://github.com/su2code/SU2/pull/1201:1074,Testability,test,test,1074,"## Proposed Changes; Description of `LINEAR_SOLVER_ILU_FILL_IN` wrote Linael instead of Linear .. and that was copied quite a few times; Done using `find ./ -type -f -exec sed -i -e 's/Linael/Linear/g' {} \;` in ./Testcases on Linux. As in none of the appearances the option is not using the default of zero, that option could be removed from all those testcases imo, but I put that up to discussion. As @pcarruscag mentioned in #1195 `[...]simplify the config by removing options that are not needed, this is to make it easier to maintain the testcases if there are changes to some options.`. Feel free to chip any other typos here. . ## Related Work; Seen in #1195 and annoyed me enough to open a PR, but of course not introduced there. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1201
https://github.com/su2code/SU2/pull/1201:441,Usability,simpl,simplify,441,"## Proposed Changes; Description of `LINEAR_SOLVER_ILU_FILL_IN` wrote Linael instead of Linear .. and that was copied quite a few times; Done using `find ./ -type -f -exec sed -i -e 's/Linael/Linear/g' {} \;` in ./Testcases on Linux. As in none of the appearances the option is not using the default of zero, that option could be removed from all those testcases imo, but I put that up to discussion. As @pcarruscag mentioned in #1195 `[...]simplify the config by removing options that are not needed, this is to make it easier to maintain the testcases if there are changes to some options.`. Feel free to chip any other typos here. . ## Related Work; Seen in #1195 and annoyed me enough to open a PR, but of course not introduced there. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1201
https://github.com/su2code/SU2/pull/1201:945,Usability,simpl,simply,945,"## Proposed Changes; Description of `LINEAR_SOLVER_ILU_FILL_IN` wrote Linael instead of Linear .. and that was copied quite a few times; Done using `find ./ -type -f -exec sed -i -e 's/Linael/Linear/g' {} \;` in ./Testcases on Linux. As in none of the appearances the option is not using the default of zero, that option could be removed from all those testcases imo, but I put that up to discussion. As @pcarruscag mentioned in #1195 `[...]simplify the config by removing options that are not needed, this is to make it easier to maintain the testcases if there are changes to some options.`. Feel free to chip any other typos here. . ## Related Work; Seen in #1195 and annoyed me enough to open a PR, but of course not introduced there. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1201
https://github.com/su2code/SU2/issues/1202:354,Testability,Test,Tested,354,"The option ""OPT_COMBINE_OBJECTIVE = YES"" does not work for SOLVER=INC_RANS and SOLVER=INC_EULER (and possibly others). ; The issue seems to be that COMBO is not supported in the list of history output:. > Info: Ignoring the following history output groups:; COMBO. When using SOLVER=RANS and SOLVER=EULER, COMBO is written to the history file correctly. Tested with SU2 v 7.1.0 on the testcase multiobjective_wedge (cfg file inv_wedge_ROE_multiobj_combo.cfg).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1202
https://github.com/su2code/SU2/issues/1202:385,Testability,test,testcase,385,"The option ""OPT_COMBINE_OBJECTIVE = YES"" does not work for SOLVER=INC_RANS and SOLVER=INC_EULER (and possibly others). ; The issue seems to be that COMBO is not supported in the list of history output:. > Info: Ignoring the following history output groups:; COMBO. When using SOLVER=RANS and SOLVER=EULER, COMBO is written to the history file correctly. Tested with SU2 v 7.1.0 on the testcase multiobjective_wedge (cfg file inv_wedge_ROE_multiobj_combo.cfg).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1202
https://github.com/su2code/SU2/pull/1203:703,Deployability,update,updated,703,"## Proposed Changes; Regression tests will fail (code will not compile) on pedantic warnings, i.e. -Wall -Wextra -Wpedantic -Werror; For external libraries many warnings were manually disabled, because I don't know a better way of not having -Werror defined for them via meson. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1203
https://github.com/su2code/SU2/pull/1203:32,Testability,test,tests,32,"## Proposed Changes; Regression tests will fail (code will not compile) on pedantic warnings, i.e. -Wall -Wextra -Wpedantic -Werror; For external libraries many warnings were manually disabled, because I don't know a better way of not having -Werror defined for them via meson. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1203
https://github.com/su2code/SU2/pull/1203:630,Testability,test,test,630,"## Proposed Changes; Regression tests will fail (code will not compile) on pedantic warnings, i.e. -Wall -Wextra -Wpedantic -Werror; For external libraries many warnings were manually disabled, because I don't know a better way of not having -Werror defined for them via meson. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1203
https://github.com/su2code/SU2/pull/1203:501,Usability,simpl,simply,501,"## Proposed Changes; Regression tests will fail (code will not compile) on pedantic warnings, i.e. -Wall -Wextra -Wpedantic -Werror; For external libraries many warnings were manually disabled, because I don't know a better way of not having -Werror defined for them via meson. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1203
https://github.com/su2code/SU2/pull/1204:1147,Deployability,update,updated,1147,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes (I think) the current implementation of the wall model. Some work still needs to be done, regarding compressible vs incompressible and validation of heated walls. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. related to #1155 ; Also took some ideas from feature_WallModelLES. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204
https://github.com/su2code/SU2/pull/1204:235,Security,validat,validation,235,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes (I think) the current implementation of the wall model. Some work still needs to be done, regarding compressible vs incompressible and validation of heated walls. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. related to #1155 ; Also took some ideas from feature_WallModelLES. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204
https://github.com/su2code/SU2/pull/1204:1074,Testability,test,test,1074,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes (I think) the current implementation of the wall model. Some work still needs to be done, regarding compressible vs incompressible and validation of heated walls. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. related to #1155 ; Also took some ideas from feature_WallModelLES. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204
https://github.com/su2code/SU2/pull/1204:652,Usability,guid,guide,652,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes (I think) the current implementation of the wall model. Some work still needs to be done, regarding compressible vs incompressible and validation of heated walls. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. related to #1155 ; Also took some ideas from feature_WallModelLES. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204
https://github.com/su2code/SU2/pull/1204:945,Usability,simpl,simply,945,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes (I think) the current implementation of the wall model. Some work still needs to be done, regarding compressible vs incompressible and validation of heated walls. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. related to #1155 ; Also took some ideas from feature_WallModelLES. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204
https://github.com/su2code/SU2/pull/1205:1276,Deployability,update,updated,1276,"fixed set functions for NEMO axisymmetric, implemented auxvargrad correction in nemo axisymmetric source residual, fixed fluid model/transport model print statement. Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; This PR addresses an issue found with not setting primitive and conservative variables in computing the axisymmetric source residual, as well as implementing the auxvargrad indexing correction applied in the standard air axisymmetric source residual and fixing an issue with printing the fluid and transport models. . ## Related Work; This PR is related to #1192 and #1162. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1205
https://github.com/su2code/SU2/pull/1205:314,Modifiability,variab,variables,314,"fixed set functions for NEMO axisymmetric, implemented auxvargrad correction in nemo axisymmetric source residual, fixed fluid model/transport model print statement. Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; This PR addresses an issue found with not setting primitive and conservative variables in computing the axisymmetric source residual, as well as implementing the auxvargrad indexing correction applied in the standard air axisymmetric source residual and fixing an issue with printing the fluid and transport models. . ## Related Work; This PR is related to #1192 and #1162. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1205
https://github.com/su2code/SU2/pull/1205:1203,Testability,test,test,1203,"fixed set functions for NEMO axisymmetric, implemented auxvargrad correction in nemo axisymmetric source residual, fixed fluid model/transport model print statement. Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; This PR addresses an issue found with not setting primitive and conservative variables in computing the axisymmetric source residual, as well as implementing the auxvargrad indexing correction applied in the standard air axisymmetric source residual and fixing an issue with printing the fluid and transport models. . ## Related Work; This PR is related to #1192 and #1162. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1205
https://github.com/su2code/SU2/pull/1205:783,Usability,guid,guide,783,"fixed set functions for NEMO axisymmetric, implemented auxvargrad correction in nemo axisymmetric source residual, fixed fluid model/transport model print statement. Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; This PR addresses an issue found with not setting primitive and conservative variables in computing the axisymmetric source residual, as well as implementing the auxvargrad indexing correction applied in the standard air axisymmetric source residual and fixing an issue with printing the fluid and transport models. . ## Related Work; This PR is related to #1192 and #1162. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1205
https://github.com/su2code/SU2/pull/1205:1074,Usability,simpl,simply,1074,"fixed set functions for NEMO axisymmetric, implemented auxvargrad correction in nemo axisymmetric source residual, fixed fluid model/transport model print statement. Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; This PR addresses an issue found with not setting primitive and conservative variables in computing the axisymmetric source residual, as well as implementing the auxvargrad indexing correction applied in the standard air axisymmetric source residual and fixing an issue with printing the fluid and transport models. . ## Related Work; This PR is related to #1192 and #1162. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1205
https://github.com/su2code/SU2/issues/1206:401,Modifiability,config,config,401,"Hi,; I've been recently been unsuccessful in running an inviscid supersonic case in SU2 using infinitely thin surfaces (baffles) and multiblock meshes created in Pointwise in 3D. I was wondering if these features are supported in SU2, as my results with a multiblock mesh so far don't seem to be correct? I've attached a screenshot of my results using a wing with a diamond airfoil, as well as my SU2 config file.; [GitHubQuestion.zip](https://github.com/su2code/SU2/files/6033830/GitHubQuestion.zip). Thanks,; Chinmay; ![image](https://user-images.githubusercontent.com/74565109/108957238-be6c1d00-7636-11eb-956a-c12ea515fc65.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1206
https://github.com/su2code/SU2/pull/1207:901,Deployability,update,updated,901,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; Correction of indexing in NEMO axisymmetric source residual, consistent with change in perfect gas source residual in develop. . ## Related Work; Related to #1192 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1207
https://github.com/su2code/SU2/pull/1207:828,Testability,test,test,828,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; Correction of indexing in NEMO axisymmetric source residual, consistent with change in perfect gas source residual in develop. . ## Related Work; Related to #1192 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1207
https://github.com/su2code/SU2/pull/1207:408,Usability,guid,guide,408,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; Correction of indexing in NEMO axisymmetric source residual, consistent with change in perfect gas source residual in develop. . ## Related Work; Related to #1192 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1207
https://github.com/su2code/SU2/pull/1207:699,Usability,simpl,simply,699,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; Correction of indexing in NEMO axisymmetric source residual, consistent with change in perfect gas source residual in develop. . ## Related Work; Related to #1192 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1207
https://github.com/su2code/SU2/issues/1209:472,Testability,log,logs,472,**Describe the bug**; Ninja build with -Denable-autodiff=true or -Denable-directdiff=true failed.; Build success with both option = false. **To Reproduce**; set either -Denable-autodiff=true or -Denable-directdiff=true and rebuild. **Desktop (please complete the following information):**; - OS: Macosx BigSur; - C++ compiler and version: clang-1200.0.32.29; - MPI implementation and version: OpenMPI 4.0.5 [via homebrew]; - SU2 Version: 7.1.0 [via git]. Attached are the logs for ninja build and meson.py --reconfigure; Cheers; bakakouhai. [ninja.log](https://github.com/su2code/SU2/files/6038336/ninja.log); [meson.log](https://github.com/su2code/SU2/files/6038339/meson.log),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209
https://github.com/su2code/SU2/issues/1209:548,Testability,log,log,548,**Describe the bug**; Ninja build with -Denable-autodiff=true or -Denable-directdiff=true failed.; Build success with both option = false. **To Reproduce**; set either -Denable-autodiff=true or -Denable-directdiff=true and rebuild. **Desktop (please complete the following information):**; - OS: Macosx BigSur; - C++ compiler and version: clang-1200.0.32.29; - MPI implementation and version: OpenMPI 4.0.5 [via homebrew]; - SU2 Version: 7.1.0 [via git]. Attached are the logs for ninja build and meson.py --reconfigure; Cheers; bakakouhai. [ninja.log](https://github.com/su2code/SU2/files/6038336/ninja.log); [meson.log](https://github.com/su2code/SU2/files/6038339/meson.log),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209
https://github.com/su2code/SU2/issues/1209:604,Testability,log,log,604,**Describe the bug**; Ninja build with -Denable-autodiff=true or -Denable-directdiff=true failed.; Build success with both option = false. **To Reproduce**; set either -Denable-autodiff=true or -Denable-directdiff=true and rebuild. **Desktop (please complete the following information):**; - OS: Macosx BigSur; - C++ compiler and version: clang-1200.0.32.29; - MPI implementation and version: OpenMPI 4.0.5 [via homebrew]; - SU2 Version: 7.1.0 [via git]. Attached are the logs for ninja build and meson.py --reconfigure; Cheers; bakakouhai. [ninja.log](https://github.com/su2code/SU2/files/6038336/ninja.log); [meson.log](https://github.com/su2code/SU2/files/6038339/meson.log),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209
https://github.com/su2code/SU2/issues/1209:617,Testability,log,log,617,**Describe the bug**; Ninja build with -Denable-autodiff=true or -Denable-directdiff=true failed.; Build success with both option = false. **To Reproduce**; set either -Denable-autodiff=true or -Denable-directdiff=true and rebuild. **Desktop (please complete the following information):**; - OS: Macosx BigSur; - C++ compiler and version: clang-1200.0.32.29; - MPI implementation and version: OpenMPI 4.0.5 [via homebrew]; - SU2 Version: 7.1.0 [via git]. Attached are the logs for ninja build and meson.py --reconfigure; Cheers; bakakouhai. [ninja.log](https://github.com/su2code/SU2/files/6038336/ninja.log); [meson.log](https://github.com/su2code/SU2/files/6038339/meson.log),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209
https://github.com/su2code/SU2/issues/1209:673,Testability,log,log,673,**Describe the bug**; Ninja build with -Denable-autodiff=true or -Denable-directdiff=true failed.; Build success with both option = false. **To Reproduce**; set either -Denable-autodiff=true or -Denable-directdiff=true and rebuild. **Desktop (please complete the following information):**; - OS: Macosx BigSur; - C++ compiler and version: clang-1200.0.32.29; - MPI implementation and version: OpenMPI 4.0.5 [via homebrew]; - SU2 Version: 7.1.0 [via git]. Attached are the logs for ninja build and meson.py --reconfigure; Cheers; bakakouhai. [ninja.log](https://github.com/su2code/SU2/files/6038336/ninja.log); [meson.log](https://github.com/su2code/SU2/files/6038339/meson.log),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209
https://github.com/su2code/SU2/pull/1210:0,Deployability,Update,Update,0,Update of MeDiPack. Fixes issue https://github.com/su2code/SU2/issues/1209.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1210
https://github.com/su2code/SU2/issues/1213:272,Usability,SIMPL,SIMPLE-family,272,"One thing I miss from the documentation is saying the algorithms being used. For example, if you go to the Incompressible Navier Stokes section in the Theory chapter of the documentation, it says that ""a FVM algorithm is used"". Well, that's fine, but which ones are used? SIMPLE-family for steady and PISO for unsteady? Or which ones?. Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1213
https://github.com/su2code/SU2/pull/1214:1247,Deployability,update,updated,1247,"## Proposed Changes. The goal of this PR is to establish AD support for the OpenMP features of SU2. AD support in SU2 is provided by [CoDiPack](https://www.scicomp.uni-kl.de/software/codi), which is coupled with [MeDiPack](https://www.scicomp.uni-kl.de/software/medi) for the differentiation of MPI. OpenMP support is added by coupling it in addition with [OpDiLib](https://www.scicomp.uni-kl.de/software/opdi) so that all in all, hybrid parallel AD is achieved. This involves at least the following steps.; 1. Incorporate OpDiLib into the AD workflow.; 2. Establish thread-safety and parallelization of the discrete adjoint code.; 3. Testing of hybrid parallel adjoints.; 4. Performance optimizations. ## Related Work. OpenMP features introduced in #789, #824, #830, #834, #843, #861, #895, #975, #1178, possibly others. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214
https://github.com/su2code/SU2/pull/1214:327,Modifiability,coupling,coupling,327,"## Proposed Changes. The goal of this PR is to establish AD support for the OpenMP features of SU2. AD support in SU2 is provided by [CoDiPack](https://www.scicomp.uni-kl.de/software/codi), which is coupled with [MeDiPack](https://www.scicomp.uni-kl.de/software/medi) for the differentiation of MPI. OpenMP support is added by coupling it in addition with [OpDiLib](https://www.scicomp.uni-kl.de/software/opdi) so that all in all, hybrid parallel AD is achieved. This involves at least the following steps.; 1. Incorporate OpDiLib into the AD workflow.; 2. Establish thread-safety and parallelization of the discrete adjoint code.; 3. Testing of hybrid parallel adjoints.; 4. Performance optimizations. ## Related Work. OpenMP features introduced in #789, #824, #830, #834, #843, #861, #895, #975, #1178, possibly others. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214
https://github.com/su2code/SU2/pull/1214:676,Performance,Perform,Performance,676,"## Proposed Changes. The goal of this PR is to establish AD support for the OpenMP features of SU2. AD support in SU2 is provided by [CoDiPack](https://www.scicomp.uni-kl.de/software/codi), which is coupled with [MeDiPack](https://www.scicomp.uni-kl.de/software/medi) for the differentiation of MPI. OpenMP support is added by coupling it in addition with [OpDiLib](https://www.scicomp.uni-kl.de/software/opdi) so that all in all, hybrid parallel AD is achieved. This involves at least the following steps.; 1. Incorporate OpDiLib into the AD workflow.; 2. Establish thread-safety and parallelization of the discrete adjoint code.; 3. Testing of hybrid parallel adjoints.; 4. Performance optimizations. ## Related Work. OpenMP features introduced in #789, #824, #830, #834, #843, #861, #895, #975, #1178, possibly others. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214
https://github.com/su2code/SU2/pull/1214:688,Performance,optimiz,optimizations,688,"## Proposed Changes. The goal of this PR is to establish AD support for the OpenMP features of SU2. AD support in SU2 is provided by [CoDiPack](https://www.scicomp.uni-kl.de/software/codi), which is coupled with [MeDiPack](https://www.scicomp.uni-kl.de/software/medi) for the differentiation of MPI. OpenMP support is added by coupling it in addition with [OpDiLib](https://www.scicomp.uni-kl.de/software/opdi) so that all in all, hybrid parallel AD is achieved. This involves at least the following steps.; 1. Incorporate OpDiLib into the AD workflow.; 2. Establish thread-safety and parallelization of the discrete adjoint code.; 3. Testing of hybrid parallel adjoints.; 4. Performance optimizations. ## Related Work. OpenMP features introduced in #789, #824, #830, #834, #843, #861, #895, #975, #1178, possibly others. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214
https://github.com/su2code/SU2/pull/1214:574,Safety,safe,safety,574,"## Proposed Changes. The goal of this PR is to establish AD support for the OpenMP features of SU2. AD support in SU2 is provided by [CoDiPack](https://www.scicomp.uni-kl.de/software/codi), which is coupled with [MeDiPack](https://www.scicomp.uni-kl.de/software/medi) for the differentiation of MPI. OpenMP support is added by coupling it in addition with [OpDiLib](https://www.scicomp.uni-kl.de/software/opdi) so that all in all, hybrid parallel AD is achieved. This involves at least the following steps.; 1. Incorporate OpDiLib into the AD workflow.; 2. Establish thread-safety and parallelization of the discrete adjoint code.; 3. Testing of hybrid parallel adjoints.; 4. Performance optimizations. ## Related Work. OpenMP features introduced in #789, #824, #830, #834, #843, #861, #895, #975, #1178, possibly others. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214
https://github.com/su2code/SU2/pull/1214:635,Testability,Test,Testing,635,"## Proposed Changes. The goal of this PR is to establish AD support for the OpenMP features of SU2. AD support in SU2 is provided by [CoDiPack](https://www.scicomp.uni-kl.de/software/codi), which is coupled with [MeDiPack](https://www.scicomp.uni-kl.de/software/medi) for the differentiation of MPI. OpenMP support is added by coupling it in addition with [OpDiLib](https://www.scicomp.uni-kl.de/software/opdi) so that all in all, hybrid parallel AD is achieved. This involves at least the following steps.; 1. Incorporate OpDiLib into the AD workflow.; 2. Establish thread-safety and parallelization of the discrete adjoint code.; 3. Testing of hybrid parallel adjoints.; 4. Performance optimizations. ## Related Work. OpenMP features introduced in #789, #824, #830, #834, #843, #861, #895, #975, #1178, possibly others. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214
https://github.com/su2code/SU2/pull/1214:1174,Testability,test,test,1174,"## Proposed Changes. The goal of this PR is to establish AD support for the OpenMP features of SU2. AD support in SU2 is provided by [CoDiPack](https://www.scicomp.uni-kl.de/software/codi), which is coupled with [MeDiPack](https://www.scicomp.uni-kl.de/software/medi) for the differentiation of MPI. OpenMP support is added by coupling it in addition with [OpDiLib](https://www.scicomp.uni-kl.de/software/opdi) so that all in all, hybrid parallel AD is achieved. This involves at least the following steps.; 1. Incorporate OpDiLib into the AD workflow.; 2. Establish thread-safety and parallelization of the discrete adjoint code.; 3. Testing of hybrid parallel adjoints.; 4. Performance optimizations. ## Related Work. OpenMP features introduced in #789, #824, #830, #834, #843, #861, #895, #975, #1178, possibly others. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214
https://github.com/su2code/SU2/pull/1214:1045,Usability,simpl,simply,1045,"## Proposed Changes. The goal of this PR is to establish AD support for the OpenMP features of SU2. AD support in SU2 is provided by [CoDiPack](https://www.scicomp.uni-kl.de/software/codi), which is coupled with [MeDiPack](https://www.scicomp.uni-kl.de/software/medi) for the differentiation of MPI. OpenMP support is added by coupling it in addition with [OpDiLib](https://www.scicomp.uni-kl.de/software/opdi) so that all in all, hybrid parallel AD is achieved. This involves at least the following steps.; 1. Incorporate OpDiLib into the AD workflow.; 2. Establish thread-safety and parallelization of the discrete adjoint code.; 3. Testing of hybrid parallel adjoints.; 4. Performance optimizations. ## Related Work. OpenMP features introduced in #789, #824, #830, #834, #843, #861, #895, #975, #1178, possibly others. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214
https://github.com/su2code/SU2/pull/1217:322,Availability,down,down,322,"## Proposed Changes; Similar to the quasi-Newton acceleration provided by `CQuasiNewtonInvLeastSquares`, the proposed toolbox class `CNewtonUpdateOnSubspace` performs a correction on adjoint solution updates by keeping track of past iterates. Here, they are used to identify eigenvectors with large eigenvalues which slow down the overall convergence and to form a (small) subspace basis from them. Each fixed-point solution update is then [projected onto that subspace and the projected part will be additionally corrected via a ""real"" Newton step (a.k.a. ""RPM"")](https://doi.org/10.1137/0730057) using the computational graph for precise derivative information. This preliminary result with one basis vector indicates that the procedure can be effective at very low additional cost (for n basis vectors, it mainly reduces to n scalar products of the current fixed-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics pro",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217
https://github.com/su2code/SU2/pull/1217:200,Deployability,update,updates,200,"## Proposed Changes; Similar to the quasi-Newton acceleration provided by `CQuasiNewtonInvLeastSquares`, the proposed toolbox class `CNewtonUpdateOnSubspace` performs a correction on adjoint solution updates by keeping track of past iterates. Here, they are used to identify eigenvectors with large eigenvalues which slow down the overall convergence and to form a (small) subspace basis from them. Each fixed-point solution update is then [projected onto that subspace and the projected part will be additionally corrected via a ""real"" Newton step (a.k.a. ""RPM"")](https://doi.org/10.1137/0730057) using the computational graph for precise derivative information. This preliminary result with one basis vector indicates that the procedure can be effective at very low additional cost (for n basis vectors, it mainly reduces to n scalar products of the current fixed-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics pro",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217
https://github.com/su2code/SU2/pull/1217:425,Deployability,update,update,425,"## Proposed Changes; Similar to the quasi-Newton acceleration provided by `CQuasiNewtonInvLeastSquares`, the proposed toolbox class `CNewtonUpdateOnSubspace` performs a correction on adjoint solution updates by keeping track of past iterates. Here, they are used to identify eigenvectors with large eigenvalues which slow down the overall convergence and to form a (small) subspace basis from them. Each fixed-point solution update is then [projected onto that subspace and the projected part will be additionally corrected via a ""real"" Newton step (a.k.a. ""RPM"")](https://doi.org/10.1137/0730057) using the computational graph for precise derivative information. This preliminary result with one basis vector indicates that the procedure can be effective at very low additional cost (for n basis vectors, it mainly reduces to n scalar products of the current fixed-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics pro",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217
https://github.com/su2code/SU2/pull/1217:2777,Deployability,update,updated,2777,"t iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217
https://github.com/su2code/SU2/pull/1217:816,Energy Efficiency,reduce,reduces,816,"## Proposed Changes; Similar to the quasi-Newton acceleration provided by `CQuasiNewtonInvLeastSquares`, the proposed toolbox class `CNewtonUpdateOnSubspace` performs a correction on adjoint solution updates by keeping track of past iterates. Here, they are used to identify eigenvectors with large eigenvalues which slow down the overall convergence and to form a (small) subspace basis from them. Each fixed-point solution update is then [projected onto that subspace and the projected part will be additionally corrected via a ""real"" Newton step (a.k.a. ""RPM"")](https://doi.org/10.1137/0730057) using the computational graph for precise derivative information. This preliminary result with one basis vector indicates that the procedure can be effective at very low additional cost (for n basis vectors, it mainly reduces to n scalar products of the current fixed-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics pro",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217
https://github.com/su2code/SU2/pull/1217:1230,Energy Efficiency,Green,Green,1230," past iterates. Here, they are used to identify eigenvectors with large eigenvalues which slow down the overall convergence and to form a (small) subspace basis from them. Each fixed-point solution update is then [projected onto that subspace and the projected part will be additionally corrected via a ""real"" Newton step (a.k.a. ""RPM"")](https://doi.org/10.1137/0730057) using the computational graph for precise derivative information. This preliminary result with one basis vector indicates that the procedure can be effective at very low additional cost (for n basis vectors, it mainly reduces to n scalar products of the current fixed-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217
https://github.com/su2code/SU2/pull/1217:1642,Integrability,depend,dependencies,1642,"d-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if nece",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217
https://github.com/su2code/SU2/pull/1217:1825,Integrability,rout,routine,1825,"d-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if nece",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217
https://github.com/su2code/SU2/pull/1217:158,Performance,perform,performs,158,"## Proposed Changes; Similar to the quasi-Newton acceleration provided by `CQuasiNewtonInvLeastSquares`, the proposed toolbox class `CNewtonUpdateOnSubspace` performs a correction on adjoint solution updates by keeping track of past iterates. Here, they are used to identify eigenvectors with large eigenvalues which slow down the overall convergence and to form a (small) subspace basis from them. Each fixed-point solution update is then [projected onto that subspace and the projected part will be additionally corrected via a ""real"" Newton step (a.k.a. ""RPM"")](https://doi.org/10.1137/0730057) using the computational graph for precise derivative information. This preliminary result with one basis vector indicates that the procedure can be effective at very low additional cost (for n basis vectors, it mainly reduces to n scalar products of the current fixed-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics pro",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217
https://github.com/su2code/SU2/pull/1217:1531,Testability,test,testing,1531,"k.a. ""RPM"")](https://doi.org/10.1137/0730057) using the computational graph for precise derivative information. This preliminary result with one basis vector indicates that the procedure can be effective at very low additional cost (for n basis vectors, it mainly reduces to n scalar products of the current fixed-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-bo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217
https://github.com/su2code/SU2/pull/1217:1695,Testability,test,testcase,1695,"d-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if nece",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217
https://github.com/su2code/SU2/pull/1217:2704,Testability,test,test,2704,"t iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217
https://github.com/su2code/SU2/pull/1217:1579,Usability,clear,clear,1579,"k.a. ""RPM"")](https://doi.org/10.1137/0730057) using the computational graph for precise derivative information. This preliminary result with one basis vector indicates that the procedure can be effective at very low additional cost (for n basis vectors, it mainly reduces to n scalar products of the current fixed-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-bo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217
https://github.com/su2code/SU2/pull/1217:2284,Usability,guid,guide,2284,"t iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217
https://github.com/su2code/SU2/pull/1217:2575,Usability,simpl,simply,2575,"t iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217
https://github.com/su2code/SU2/issues/1218:380,Usability,guid,guidelines,380,"I would like to bring your attention to the existence of this gem:; https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#main. Of which I use maybe a subset in my often verbose and perhaps repetitive code reviews.; The things I comment on are as much a matter of style as multiplication taking precedence over addition is.; It is how ""They"" do it. So do please browse the guidelines.; Ingraining some good guidelines, goes a long way towards freeing one's mind to focus on important implementation aspects.; Does this thing need to be const? Just make it, the compiler will tell you if it can't or if you were about to have a bug, the opposite does not happen.; I need this piece of code from somewhere. -> Put it in a function.; My function does not fit the screen. -> Too long.; new su2double[nSomething] -> Some container type, which one? The simplest that will do the job.; etc.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1218
https://github.com/su2code/SU2/issues/1218:414,Usability,guid,guidelines,414,"I would like to bring your attention to the existence of this gem:; https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#main. Of which I use maybe a subset in my often verbose and perhaps repetitive code reviews.; The things I comment on are as much a matter of style as multiplication taking precedence over addition is.; It is how ""They"" do it. So do please browse the guidelines.; Ingraining some good guidelines, goes a long way towards freeing one's mind to focus on important implementation aspects.; Does this thing need to be const? Just make it, the compiler will tell you if it can't or if you were about to have a bug, the opposite does not happen.; I need this piece of code from somewhere. -> Put it in a function.; My function does not fit the screen. -> Too long.; new su2double[nSomething] -> Some container type, which one? The simplest that will do the job.; etc.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1218
https://github.com/su2code/SU2/issues/1218:854,Usability,simpl,simplest,854,"I would like to bring your attention to the existence of this gem:; https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#main. Of which I use maybe a subset in my often verbose and perhaps repetitive code reviews.; The things I comment on are as much a matter of style as multiplication taking precedence over addition is.; It is how ""They"" do it. So do please browse the guidelines.; Ingraining some good guidelines, goes a long way towards freeing one's mind to focus on important implementation aspects.; Does this thing need to be const? Just make it, the compiler will tell you if it can't or if you were about to have a bug, the opposite does not happen.; I need this piece of code from somewhere. -> Put it in a function.; My function does not fit the screen. -> Too long.; new su2double[nSomething] -> Some container type, which one? The simplest that will do the job.; etc.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1218
https://github.com/su2code/SU2/issues/1219:390,Availability,error,error,390,"**### MPI partitioning issues for Turbomachinery for processor count more than 6 in mpi**. I have noticed an issue with running my turbomachinery model in SU2 version 7.04, 7.1 and version 7.1.1 during the Turbomachinery preprocessing step at the ""Initialize Turbo Vertex Structure"" where it **incorrectly** calculates the number of spanwise section in zone 0 and then there is a MPI fatal error. **This happens only when I use more than 6 processors**. For less than or equal to 6 processors there is no error. I have this issue with 7.04, 7.1 and now 7.1.1. . This issue has a previous bug report in the MPI partitioning issues for Turbomachinery runs #990. I am sure the config file is correct. I have my solutions from 6 processors, but I really need to scale up the processor count so that the restitution time is within a reasonable time.; Below is an example of where it crashes for 7 processors: ; ### WITH 7 processors:; ---------------------- Turbomachinery Preprocessing ---------------------. Initialize Turbo Vertex Structure.; **_Number of span-wise sections in Zone 0: 139. [This is incorrect number of span-wise sections]_**; Max number of span-wise sections among all zones: 139.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; [1:node0567] unexpected disconnect completion event from [0:node0564]; [3:node0566] unexpected disconnect completion event from [0:node0564]. ### WITH 6 processors:; Initialize Turbo Vertex Structure.; **Number of span-wise sections in Zone 0: 137. [This is the correct number of span-wise sections]**; Max number of span-wise sections among all zones: 137.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Transfer average geometric quantities to zone 0.; Inlet area for Row 1: 30.7045 cm^2.; Oulet area for Row 1: 16.9716 cm^2.; Recomputed number of blades for Row 1: 36.; Initialize inflow an",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219
https://github.com/su2code/SU2/issues/1219:505,Availability,error,error,505,"**### MPI partitioning issues for Turbomachinery for processor count more than 6 in mpi**. I have noticed an issue with running my turbomachinery model in SU2 version 7.04, 7.1 and version 7.1.1 during the Turbomachinery preprocessing step at the ""Initialize Turbo Vertex Structure"" where it **incorrectly** calculates the number of spanwise section in zone 0 and then there is a MPI fatal error. **This happens only when I use more than 6 processors**. For less than or equal to 6 processors there is no error. I have this issue with 7.04, 7.1 and now 7.1.1. . This issue has a previous bug report in the MPI partitioning issues for Turbomachinery runs #990. I am sure the config file is correct. I have my solutions from 6 processors, but I really need to scale up the processor count so that the restitution time is within a reasonable time.; Below is an example of where it crashes for 7 processors: ; ### WITH 7 processors:; ---------------------- Turbomachinery Preprocessing ---------------------. Initialize Turbo Vertex Structure.; **_Number of span-wise sections in Zone 0: 139. [This is incorrect number of span-wise sections]_**; Max number of span-wise sections among all zones: 139.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; [1:node0567] unexpected disconnect completion event from [0:node0564]; [3:node0566] unexpected disconnect completion event from [0:node0564]. ### WITH 6 processors:; Initialize Turbo Vertex Structure.; **Number of span-wise sections in Zone 0: 137. [This is the correct number of span-wise sections]**; Max number of span-wise sections among all zones: 137.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Transfer average geometric quantities to zone 0.; Inlet area for Row 1: 30.7045 cm^2.; Oulet area for Row 1: 16.9716 cm^2.; Recomputed number of blades for Row 1: 36.; Initialize inflow an",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219
https://github.com/su2code/SU2/issues/1219:2252,Deployability,release,release,2252,"s**. For less than or equal to 6 processors there is no error. I have this issue with 7.04, 7.1 and now 7.1.1. . This issue has a previous bug report in the MPI partitioning issues for Turbomachinery runs #990. I am sure the config file is correct. I have my solutions from 6 processors, but I really need to scale up the processor count so that the restitution time is within a reasonable time.; Below is an example of where it crashes for 7 processors: ; ### WITH 7 processors:; ---------------------- Turbomachinery Preprocessing ---------------------. Initialize Turbo Vertex Structure.; **_Number of span-wise sections in Zone 0: 139. [This is incorrect number of span-wise sections]_**; Max number of span-wise sections among all zones: 139.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; [1:node0567] unexpected disconnect completion event from [0:node0564]; [3:node0566] unexpected disconnect completion event from [0:node0564]. ### WITH 6 processors:; Initialize Turbo Vertex Structure.; **Number of span-wise sections in Zone 0: 137. [This is the correct number of span-wise sections]**; Max number of span-wise sections among all zones: 137.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Transfer average geometric quantities to zone 0.; Inlet area for Row 1: 30.7045 cm^2.; Oulet area for Row 1: 16.9716 cm^2.; Recomputed number of blades for Row 1: 36.; Initialize inflow and outflow average solution quantities.; Inlet flow angle for Row 1: -0.00422866°.; Outlet flow angle for Row 1: -28.9224°.; ------------------------------ Begin Solver -----------------------------; ....... System settings:; **CLUSTER**; - OS: CentOS release 6.5; - C++ compiler and version: GCC/7.3.0-2.30; - MPI implementation and version: compiler/intel/2018.0.1 intelmpi/2018.0.1/64 mkl/2018.0.1; - SU2 Version: [v7.1 and 7.1.1]; Thanks; Ashvin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219
https://github.com/su2code/SU2/issues/1219:674,Modifiability,config,config,674,"**### MPI partitioning issues for Turbomachinery for processor count more than 6 in mpi**. I have noticed an issue with running my turbomachinery model in SU2 version 7.04, 7.1 and version 7.1.1 during the Turbomachinery preprocessing step at the ""Initialize Turbo Vertex Structure"" where it **incorrectly** calculates the number of spanwise section in zone 0 and then there is a MPI fatal error. **This happens only when I use more than 6 processors**. For less than or equal to 6 processors there is no error. I have this issue with 7.04, 7.1 and now 7.1.1. . This issue has a previous bug report in the MPI partitioning issues for Turbomachinery runs #990. I am sure the config file is correct. I have my solutions from 6 processors, but I really need to scale up the processor count so that the restitution time is within a reasonable time.; Below is an example of where it crashes for 7 processors: ; ### WITH 7 processors:; ---------------------- Turbomachinery Preprocessing ---------------------. Initialize Turbo Vertex Structure.; **_Number of span-wise sections in Zone 0: 139. [This is incorrect number of span-wise sections]_**; Max number of span-wise sections among all zones: 139.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; [1:node0567] unexpected disconnect completion event from [0:node0564]; [3:node0566] unexpected disconnect completion event from [0:node0564]. ### WITH 6 processors:; Initialize Turbo Vertex Structure.; **Number of span-wise sections in Zone 0: 137. [This is the correct number of span-wise sections]**; Max number of span-wise sections among all zones: 137.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Transfer average geometric quantities to zone 0.; Inlet area for Row 1: 30.7045 cm^2.; Oulet area for Row 1: 16.9716 cm^2.; Recomputed number of blades for Row 1: 36.; Initialize inflow an",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219
https://github.com/su2code/SU2/issues/1219:1243,Performance,perform,performance,1243,"ing step at the ""Initialize Turbo Vertex Structure"" where it **incorrectly** calculates the number of spanwise section in zone 0 and then there is a MPI fatal error. **This happens only when I use more than 6 processors**. For less than or equal to 6 processors there is no error. I have this issue with 7.04, 7.1 and now 7.1.1. . This issue has a previous bug report in the MPI partitioning issues for Turbomachinery runs #990. I am sure the config file is correct. I have my solutions from 6 processors, but I really need to scale up the processor count so that the restitution time is within a reasonable time.; Below is an example of where it crashes for 7 processors: ; ### WITH 7 processors:; ---------------------- Turbomachinery Preprocessing ---------------------. Initialize Turbo Vertex Structure.; **_Number of span-wise sections in Zone 0: 139. [This is incorrect number of span-wise sections]_**; Max number of span-wise sections among all zones: 139.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; [1:node0567] unexpected disconnect completion event from [0:node0564]; [3:node0566] unexpected disconnect completion event from [0:node0564]. ### WITH 6 processors:; Initialize Turbo Vertex Structure.; **Number of span-wise sections in Zone 0: 137. [This is the correct number of span-wise sections]**; Max number of span-wise sections among all zones: 137.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Transfer average geometric quantities to zone 0.; Inlet area for Row 1: 30.7045 cm^2.; Oulet area for Row 1: 16.9716 cm^2.; Recomputed number of blades for Row 1: 36.; Initialize inflow and outflow average solution quantities.; Inlet flow angle for Row 1: -0.00422866°.; Outlet flow angle for Row 1: -28.9224°.; ------------------------------ Begin Solver -----------------------------; ....... System settings:; **CLU",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219
https://github.com/su2code/SU2/issues/1219:1730,Performance,perform,performance,1730,"s**. For less than or equal to 6 processors there is no error. I have this issue with 7.04, 7.1 and now 7.1.1. . This issue has a previous bug report in the MPI partitioning issues for Turbomachinery runs #990. I am sure the config file is correct. I have my solutions from 6 processors, but I really need to scale up the processor count so that the restitution time is within a reasonable time.; Below is an example of where it crashes for 7 processors: ; ### WITH 7 processors:; ---------------------- Turbomachinery Preprocessing ---------------------. Initialize Turbo Vertex Structure.; **_Number of span-wise sections in Zone 0: 139. [This is incorrect number of span-wise sections]_**; Max number of span-wise sections among all zones: 139.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; [1:node0567] unexpected disconnect completion event from [0:node0564]; [3:node0566] unexpected disconnect completion event from [0:node0564]. ### WITH 6 processors:; Initialize Turbo Vertex Structure.; **Number of span-wise sections in Zone 0: 137. [This is the correct number of span-wise sections]**; Max number of span-wise sections among all zones: 137.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Transfer average geometric quantities to zone 0.; Inlet area for Row 1: 30.7045 cm^2.; Oulet area for Row 1: 16.9716 cm^2.; Recomputed number of blades for Row 1: 36.; Initialize inflow and outflow average solution quantities.; Inlet flow angle for Row 1: -0.00422866°.; Outlet flow angle for Row 1: -28.9224°.; ------------------------------ Begin Solver -----------------------------; ....... System settings:; **CLUSTER**; - OS: CentOS release 6.5; - C++ compiler and version: GCC/7.3.0-2.30; - MPI implementation and version: compiler/intel/2018.0.1 intelmpi/2018.0.1/64 mkl/2018.0.1; - SU2 Version: [v7.1 and 7.1.1]; Thanks; Ashvin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219
https://github.com/su2code/SU2/pull/1221:499,Deployability,update,updated,499,"## Proposed Changes; Try to fix #1219 based on Stephan's insight in #990. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1221
https://github.com/su2code/SU2/pull/1221:426,Testability,test,test,426,"## Proposed Changes; Try to fix #1219 based on Stephan's insight in #990. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1221
https://github.com/su2code/SU2/pull/1221:297,Usability,simpl,simply,297,"## Proposed Changes; Try to fix #1219 based on Stephan's insight in #990. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1221
https://github.com/su2code/SU2/pull/1222:191,Availability,error,error,191,"## Proposed Changes; Remove `CSolver::Convective_Residual`, as it does nothing and no derived class overrides it. There is one call in `CIntegration.cpp`, which I would like to replace by an error message. . Note that in the present version, usage of `numerics[CONV_TERM]` would not be thread-safe, it should be `numerics[CONV_TERM + omp_get_thread_num()*MAX_TERMS]` (see also #1214). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222
https://github.com/su2code/SU2/pull/1222:1050,Deployability,update,updated,1050,"## Proposed Changes; Remove `CSolver::Convective_Residual`, as it does nothing and no derived class overrides it. There is one call in `CIntegration.cpp`, which I would like to replace by an error message. . Note that in the present version, usage of `numerics[CONV_TERM]` would not be thread-safe, it should be `numerics[CONV_TERM + omp_get_thread_num()*MAX_TERMS]` (see also #1214). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222
https://github.com/su2code/SU2/pull/1222:197,Integrability,message,message,197,"## Proposed Changes; Remove `CSolver::Convective_Residual`, as it does nothing and no derived class overrides it. There is one call in `CIntegration.cpp`, which I would like to replace by an error message. . Note that in the present version, usage of `numerics[CONV_TERM]` would not be thread-safe, it should be `numerics[CONV_TERM + omp_get_thread_num()*MAX_TERMS]` (see also #1214). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222
https://github.com/su2code/SU2/pull/1222:293,Safety,safe,safe,293,"## Proposed Changes; Remove `CSolver::Convective_Residual`, as it does nothing and no derived class overrides it. There is one call in `CIntegration.cpp`, which I would like to replace by an error message. . Note that in the present version, usage of `numerics[CONV_TERM]` would not be thread-safe, it should be `numerics[CONV_TERM + omp_get_thread_num()*MAX_TERMS]` (see also #1214). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222
https://github.com/su2code/SU2/pull/1222:977,Testability,test,test,977,"## Proposed Changes; Remove `CSolver::Convective_Residual`, as it does nothing and no derived class overrides it. There is one call in `CIntegration.cpp`, which I would like to replace by an error message. . Note that in the present version, usage of `numerics[CONV_TERM]` would not be thread-safe, it should be `numerics[CONV_TERM + omp_get_thread_num()*MAX_TERMS]` (see also #1214). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222
https://github.com/su2code/SU2/pull/1222:557,Usability,guid,guide,557,"## Proposed Changes; Remove `CSolver::Convective_Residual`, as it does nothing and no derived class overrides it. There is one call in `CIntegration.cpp`, which I would like to replace by an error message. . Note that in the present version, usage of `numerics[CONV_TERM]` would not be thread-safe, it should be `numerics[CONV_TERM + omp_get_thread_num()*MAX_TERMS]` (see also #1214). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222
https://github.com/su2code/SU2/pull/1222:848,Usability,simpl,simply,848,"## Proposed Changes; Remove `CSolver::Convective_Residual`, as it does nothing and no derived class overrides it. There is one call in `CIntegration.cpp`, which I would like to replace by an error message. . Note that in the present version, usage of `numerics[CONV_TERM]` would not be thread-safe, it should be `numerics[CONV_TERM + omp_get_thread_num()*MAX_TERMS]` (see also #1214). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222
https://github.com/su2code/SU2/pull/1223:2309,Deployability,update,updated,2309,"ementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Notes; As indicated, this is work in progress. The code compiles and runs with a test case but is far from being clean. Side effects in non-flamelet simulations might occur.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223
https://github.com/su2code/SU2/pull/1223:936,Integrability,depend,dependent,936,"## Proposed Changes; This PR implements a combustion model for laminar premixed flames in low Mach number flows. The implementation is based on a flamelet progress variable approach - i.e., the combustion chemistry is parameterized with scalar quantities for which scalar transport equations are solved. The scalars are then used to look up scalar source terms, transport -, and thermodynamic quantities from a lookup table. The lookup table is compiled from one-dimensional flame simulations using more expensive chemistry models - typically finite rate mechanisms. In this implementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223
https://github.com/su2code/SU2/pull/1223:164,Modifiability,variab,variable,164,"## Proposed Changes; This PR implements a combustion model for laminar premixed flames in low Mach number flows. The implementation is based on a flamelet progress variable approach - i.e., the combustion chemistry is parameterized with scalar quantities for which scalar transport equations are solved. The scalars are then used to look up scalar source terms, transport -, and thermodynamic quantities from a lookup table. The lookup table is compiled from one-dimensional flame simulations using more expensive chemistry models - typically finite rate mechanisms. In this implementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223
https://github.com/su2code/SU2/pull/1223:218,Modifiability,parameteriz,parameterized,218,"## Proposed Changes; This PR implements a combustion model for laminar premixed flames in low Mach number flows. The implementation is based on a flamelet progress variable approach - i.e., the combustion chemistry is parameterized with scalar quantities for which scalar transport equations are solved. The scalars are then used to look up scalar source terms, transport -, and thermodynamic quantities from a lookup table. The lookup table is compiled from one-dimensional flame simulations using more expensive chemistry models - typically finite rate mechanisms. In this implementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223
https://github.com/su2code/SU2/pull/1223:650,Modifiability,variab,variable,650,"## Proposed Changes; This PR implements a combustion model for laminar premixed flames in low Mach number flows. The implementation is based on a flamelet progress variable approach - i.e., the combustion chemistry is parameterized with scalar quantities for which scalar transport equations are solved. The scalars are then used to look up scalar source terms, transport -, and thermodynamic quantities from a lookup table. The lookup table is compiled from one-dimensional flame simulations using more expensive chemistry models - typically finite rate mechanisms. In this implementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223
https://github.com/su2code/SU2/pull/1223:946,Modifiability,variab,variable,946,"## Proposed Changes; This PR implements a combustion model for laminar premixed flames in low Mach number flows. The implementation is based on a flamelet progress variable approach - i.e., the combustion chemistry is parameterized with scalar quantities for which scalar transport equations are solved. The scalars are then used to look up scalar source terms, transport -, and thermodynamic quantities from a lookup table. The lookup table is compiled from one-dimensional flame simulations using more expensive chemistry models - typically finite rate mechanisms. In this implementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223
https://github.com/su2code/SU2/pull/1223:1317,Modifiability,extend,extended,1317,"calars are then used to look up scalar source terms, transport -, and thermodynamic quantities from a lookup table. The lookup table is compiled from one-dimensional flame simulations using more expensive chemistry models - typically finite rate mechanisms. In this implementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223
https://github.com/su2code/SU2/pull/1223:2236,Testability,test,test,2236,"ementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Notes; As indicated, this is work in progress. The code compiles and runs with a test case but is far from being clean. Side effects in non-flamelet simulations might occur.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223
https://github.com/su2code/SU2/pull/1223:2487,Testability,test,test,2487,"ementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Notes; As indicated, this is work in progress. The code compiles and runs with a test case but is far from being clean. Side effects in non-flamelet simulations might occur.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223
https://github.com/su2code/SU2/pull/1223:1061,Usability,simpl,simply,1061,"inar premixed flames in low Mach number flows. The implementation is based on a flamelet progress variable approach - i.e., the combustion chemistry is parameterized with scalar quantities for which scalar transport equations are solved. The scalars are then used to look up scalar source terms, transport -, and thermodynamic quantities from a lookup table. The lookup table is compiled from one-dimensional flame simulations using more expensive chemistry models - typically finite rate mechanisms. In this implementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parame",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223
https://github.com/su2code/SU2/pull/1223:2107,Usability,simpl,simply,2107,"ementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Notes; As indicated, this is work in progress. The code compiles and runs with a test case but is far from being clean. Side effects in non-flamelet simulations might occur.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223
https://github.com/su2code/SU2/pull/1224:509,Deployability,update,updated,509,"## Proposed Changes; Small fixes and replacing the last ** and *** in CEulerSolver. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1224
https://github.com/su2code/SU2/pull/1224:436,Testability,test,test,436,"## Proposed Changes; Small fixes and replacing the last ** and *** in CEulerSolver. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1224
https://github.com/su2code/SU2/pull/1224:307,Usability,simpl,simply,307,"## Proposed Changes; Small fixes and replacing the last ** and *** in CEulerSolver. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1224
https://github.com/su2code/SU2/pull/1225:470,Deployability,update,updated,470,"## Proposed Changes; Pointers are pure evil. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225
https://github.com/su2code/SU2/pull/1225:397,Testability,test,test,397,"## Proposed Changes; Pointers are pure evil. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225
https://github.com/su2code/SU2/pull/1225:268,Usability,simpl,simply,268,"## Proposed Changes; Pointers are pure evil. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225
https://github.com/su2code/SU2/pull/1226:1221,Deployability,update,updated,1221,"## Proposed Changes; As an alternative to `MARKER_HEATFLUX = (heat_flux_marker, q,... )`, this PR adds `MARKER_HEATTRANSFER = (heat_transfer_marker, h, Twall)` to the list of wall boundary conditions where the wall heat flux is computed by q = h*(Twall-Tref). h is the heat transfer coefficient, Tref is to be set by default or by a further option.; ; @bigfooted Is this what you've been thinking of? If so, I'd go ahead adding this to the compressible and the heat solver as well, if not, we should get this right for the incompressible solver first :-). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226
https://github.com/su2code/SU2/pull/1226:1148,Testability,test,test,1148,"## Proposed Changes; As an alternative to `MARKER_HEATFLUX = (heat_flux_marker, q,... )`, this PR adds `MARKER_HEATTRANSFER = (heat_transfer_marker, h, Twall)` to the list of wall boundary conditions where the wall heat flux is computed by q = h*(Twall-Tref). h is the heat transfer coefficient, Tref is to be set by default or by a further option.; ; @bigfooted Is this what you've been thinking of? If so, I'd go ahead adding this to the compressible and the heat solver as well, if not, we should get this right for the incompressible solver first :-). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226
https://github.com/su2code/SU2/pull/1226:728,Usability,guid,guide,728,"## Proposed Changes; As an alternative to `MARKER_HEATFLUX = (heat_flux_marker, q,... )`, this PR adds `MARKER_HEATTRANSFER = (heat_transfer_marker, h, Twall)` to the list of wall boundary conditions where the wall heat flux is computed by q = h*(Twall-Tref). h is the heat transfer coefficient, Tref is to be set by default or by a further option.; ; @bigfooted Is this what you've been thinking of? If so, I'd go ahead adding this to the compressible and the heat solver as well, if not, we should get this right for the incompressible solver first :-). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226
https://github.com/su2code/SU2/pull/1226:1019,Usability,simpl,simply,1019,"## Proposed Changes; As an alternative to `MARKER_HEATFLUX = (heat_flux_marker, q,... )`, this PR adds `MARKER_HEATTRANSFER = (heat_transfer_marker, h, Twall)` to the list of wall boundary conditions where the wall heat flux is computed by q = h*(Twall-Tref). h is the heat transfer coefficient, Tref is to be set by default or by a further option.; ; @bigfooted Is this what you've been thinking of? If so, I'd go ahead adding this to the compressible and the heat solver as well, if not, we should get this right for the incompressible solver first :-). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226
https://github.com/su2code/SU2/pull/1228:762,Deployability,update,updated,762,"## Proposed Changes; Instead of computing transposed matrix vector products, which are harder to parallelize with OpenMP, and having special handling for transposed preconditioners, the matrix is transposed in place, then any preconditioner can be applied.; Some tweaks to support better Krylov discrete adjoint. ## Related Work; #1214. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1228
https://github.com/su2code/SU2/pull/1228:689,Testability,test,test,689,"## Proposed Changes; Instead of computing transposed matrix vector products, which are harder to parallelize with OpenMP, and having special handling for transposed preconditioners, the matrix is transposed in place, then any preconditioner can be applied.; Some tweaks to support better Krylov discrete adjoint. ## Related Work; #1214. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1228
https://github.com/su2code/SU2/pull/1228:560,Usability,simpl,simply,560,"## Proposed Changes; Instead of computing transposed matrix vector products, which are harder to parallelize with OpenMP, and having special handling for transposed preconditioners, the matrix is transposed in place, then any preconditioner can be applied.; Some tweaks to support better Krylov discrete adjoint. ## Related Work; #1214. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1228
https://github.com/su2code/SU2/issues/1229:1038,Availability,down,downloaded,1038,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229
https://github.com/su2code/SU2/issues/1229:1258,Deployability,configurat,configuration,1258,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229
https://github.com/su2code/SU2/issues/1229:1340,Deployability,configurat,configuration,1340,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229
https://github.com/su2code/SU2/issues/1229:560,Energy Efficiency,reduce,reduces,560,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229
https://github.com/su2code/SU2/issues/1229:673,Energy Efficiency,reduce,reduced,673,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229
https://github.com/su2code/SU2/issues/1229:1258,Modifiability,config,configuration,1258,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229
https://github.com/su2code/SU2/issues/1229:1340,Modifiability,config,configuration,1340,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229
https://github.com/su2code/SU2/issues/1229:51,Performance,optimiz,optimization,51,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229
https://github.com/su2code/SU2/issues/1229:340,Performance,optimiz,optimization,340,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229
https://github.com/su2code/SU2/issues/1229:391,Performance,optimiz,optimization,391,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229
https://github.com/su2code/SU2/issues/1229:537,Performance,optimiz,optimized,537,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229
https://github.com/su2code/SU2/issues/1229:653,Performance,optimiz,optimized,653,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229
https://github.com/su2code/SU2/issues/1229:736,Performance,optimiz,optimized,736,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229
https://github.com/su2code/SU2/issues/1231:261,Modifiability,config,configure,261,"**Describe the bug**; Title says it all. SU2 v. 7.1.1 gives me the following: ""Info: Ignoring the following screen output fields: AVG_MASSFLOW, AVG_MACH"". **To Reproduce**; Use ""MARKER_ANALYZE"" and ""SCREEN_OUTPUT = ( ... , AVG_MASSFLOW, AVG_MACH, ... ) in your configure file. **Desktop (please complete the following information):**; - OS: WSL Debian; - C++ compiler and version: gcc 8.3; - MPI implementation and version: OpenMPI 3.1.3; - SU2 Version: 7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1231
https://github.com/su2code/SU2/issues/1233:52,Deployability,install,installed,52,"Hi,. I am trying to run SU2 on parallel, and MPI is installed and on path in system variables. I have also tried enforcing with meson with the commands said in the website, but the system does not take it either, as in it does not recognize meson commands also, when it is in system variables as well. ; When I installed SU2, it had shown the message of MPI not found. Is there any other way to make it work?. Thank you beforehand!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233
https://github.com/su2code/SU2/issues/1233:311,Deployability,install,installed,311,"Hi,. I am trying to run SU2 on parallel, and MPI is installed and on path in system variables. I have also tried enforcing with meson with the commands said in the website, but the system does not take it either, as in it does not recognize meson commands also, when it is in system variables as well. ; When I installed SU2, it had shown the message of MPI not found. Is there any other way to make it work?. Thank you beforehand!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233
https://github.com/su2code/SU2/issues/1233:343,Integrability,message,message,343,"Hi,. I am trying to run SU2 on parallel, and MPI is installed and on path in system variables. I have also tried enforcing with meson with the commands said in the website, but the system does not take it either, as in it does not recognize meson commands also, when it is in system variables as well. ; When I installed SU2, it had shown the message of MPI not found. Is there any other way to make it work?. Thank you beforehand!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233
https://github.com/su2code/SU2/issues/1233:84,Modifiability,variab,variables,84,"Hi,. I am trying to run SU2 on parallel, and MPI is installed and on path in system variables. I have also tried enforcing with meson with the commands said in the website, but the system does not take it either, as in it does not recognize meson commands also, when it is in system variables as well. ; When I installed SU2, it had shown the message of MPI not found. Is there any other way to make it work?. Thank you beforehand!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233
https://github.com/su2code/SU2/issues/1233:283,Modifiability,variab,variables,283,"Hi,. I am trying to run SU2 on parallel, and MPI is installed and on path in system variables. I have also tried enforcing with meson with the commands said in the website, but the system does not take it either, as in it does not recognize meson commands also, when it is in system variables as well. ; When I installed SU2, it had shown the message of MPI not found. Is there any other way to make it work?. Thank you beforehand!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233
https://github.com/su2code/SU2/issues/1234:131,Modifiability,variab,variables,131,"(new user here and apologies if this has been raised/addressed before). I want to perturb the Hicks and Henne bump function design variables and write out the airfoil shape, __without running the primal or adjoint solvers__. So I want to implement `Y = f(X)` where `X` is the vector of Hicks and Henne bump function weights and `Y` is a vector of the actual `y` coordinate of the airfoil at each `x` corresponding to an element of `X`. Is there a script that already exists to this effect? If so can you share that with me? If not do you have suggestions as to how to implement this? Thank you!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1234
https://github.com/su2code/SU2/pull/1236:140,Deployability,integrat,integrating,140,"## Proposed Changes; On a user-specified upstream half-plane, fix the values of turbulence quantities to their far-field values, instead of integrating the turbulence model equations. In the far-field flow, the production terms of SST for K and omega are zero, while destruction still takes place. Thus the turbulence quantities typically decay on their way from the far-field boundary to the airfoil, until they reach the `lowerlimit`. See for instance this turbulence kinetic energy plot on the NACA0012 mesh:; ![kk_sst_copr_TKE](https://user-images.githubusercontent.com/72806890/111277953-4f805380-8639-11eb-8d34-466e612aac4e.png). This has been presented in [1] together with two solution approaches:; - *Sustaining terms*, which are additional source terms compensating the destruction terms in the far-field flow. This approach has been already implemented with the `KIND_TURB_MODEL= SST_SUST` option.; ![kk_sst_copr_sust_TKE](https://user-images.githubusercontent.com/72806890/111278024-60c96000-8639-11eb-8b1b-f4e95a3f97ab.png); - *Floor values*, which is equivalent to set the `lowerlimit` to the far-field values in the upstream region of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubuserco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236
https://github.com/su2code/SU2/pull/1236:3053,Deployability,update,updated,3053," of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubusercontent.com/72806890/111278050-68890480-8639-11eb-9065-adac2e8cba15.png). The SA model does not suffer from a decaying turbulence variable, but the proposed changes are also functional there. [1] Philippe R. Spalart and Christopher L. Rumsey, Effective Inflow Conditions for Turbulence Models in Aerodynamic Calculations, https://arc.aiaa.org/doi/pdf/10.2514/1.29373. ## Related Work; ?. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236
https://github.com/su2code/SU2/pull/1236:478,Energy Efficiency,energy,energy,478,"## Proposed Changes; On a user-specified upstream half-plane, fix the values of turbulence quantities to their far-field values, instead of integrating the turbulence model equations. In the far-field flow, the production terms of SST for K and omega are zero, while destruction still takes place. Thus the turbulence quantities typically decay on their way from the far-field boundary to the airfoil, until they reach the `lowerlimit`. See for instance this turbulence kinetic energy plot on the NACA0012 mesh:; ![kk_sst_copr_TKE](https://user-images.githubusercontent.com/72806890/111277953-4f805380-8639-11eb-8d34-466e612aac4e.png). This has been presented in [1] together with two solution approaches:; - *Sustaining terms*, which are additional source terms compensating the destruction terms in the far-field flow. This approach has been already implemented with the `KIND_TURB_MODEL= SST_SUST` option.; ![kk_sst_copr_sust_TKE](https://user-images.githubusercontent.com/72806890/111278024-60c96000-8639-11eb-8b1b-f4e95a3f97ab.png); - *Floor values*, which is equivalent to set the `lowerlimit` to the far-field values in the upstream region of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubuserco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236
https://github.com/su2code/SU2/pull/1236:1780,Energy Efficiency,energy,energy,1780,"the far-field flow. This approach has been already implemented with the `KIND_TURB_MODEL= SST_SUST` option.; ![kk_sst_copr_sust_TKE](https://user-images.githubusercontent.com/72806890/111278024-60c96000-8639-11eb-8b1b-f4e95a3f97ab.png); - *Floor values*, which is equivalent to set the `lowerlimit` to the far-field values in the upstream region of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubusercontent.com/72806890/111278050-68890480-8639-11eb-9065-adac2e8cba15.png). The SA model does not suffer from a decaying turbulence variable, but the proposed changes are also functional there. [1] Philippe R. Spalart and Christopher L. Rumsey, Effective Inflow Conditions for Turbulence Models in Aerodynamic Calculations, https://arc.aiaa.org/doi/pdf/10.2514/1.29373. ## Related Work; ?. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236
https://github.com/su2code/SU2/pull/1236:140,Integrability,integrat,integrating,140,"## Proposed Changes; On a user-specified upstream half-plane, fix the values of turbulence quantities to their far-field values, instead of integrating the turbulence model equations. In the far-field flow, the production terms of SST for K and omega are zero, while destruction still takes place. Thus the turbulence quantities typically decay on their way from the far-field boundary to the airfoil, until they reach the `lowerlimit`. See for instance this turbulence kinetic energy plot on the NACA0012 mesh:; ![kk_sst_copr_TKE](https://user-images.githubusercontent.com/72806890/111277953-4f805380-8639-11eb-8d34-466e612aac4e.png). This has been presented in [1] together with two solution approaches:; - *Sustaining terms*, which are additional source terms compensating the destruction terms in the far-field flow. This approach has been already implemented with the `KIND_TURB_MODEL= SST_SUST` option.; ![kk_sst_copr_sust_TKE](https://user-images.githubusercontent.com/72806890/111278024-60c96000-8639-11eb-8b1b-f4e95a3f97ab.png); - *Floor values*, which is equivalent to set the `lowerlimit` to the far-field values in the upstream region of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubuserco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236
https://github.com/su2code/SU2/pull/1236:2129,Modifiability,variab,variable,2129,"upstream region of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubusercontent.com/72806890/111278050-68890480-8639-11eb-9065-adac2e8cba15.png). The SA model does not suffer from a decaying turbulence variable, but the proposed changes are also functional there. [1] Philippe R. Spalart and Christopher L. Rumsey, Effective Inflow Conditions for Turbulence Models in Aerodynamic Calculations, https://arc.aiaa.org/doi/pdf/10.2514/1.29373. ## Related Work; ?. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236
https://github.com/su2code/SU2/pull/1236:2980,Testability,test,test,2980," of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubusercontent.com/72806890/111278050-68890480-8639-11eb-9065-adac2e8cba15.png). The SA model does not suffer from a decaying turbulence variable, but the proposed changes are also functional there. [1] Philippe R. Spalart and Christopher L. Rumsey, Effective Inflow Conditions for Turbulence Models in Aerodynamic Calculations, https://arc.aiaa.org/doi/pdf/10.2514/1.29373. ## Related Work; ?. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236
https://github.com/su2code/SU2/pull/1236:2559,Usability,guid,guide,2559," of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubusercontent.com/72806890/111278050-68890480-8639-11eb-9065-adac2e8cba15.png). The SA model does not suffer from a decaying turbulence variable, but the proposed changes are also functional there. [1] Philippe R. Spalart and Christopher L. Rumsey, Effective Inflow Conditions for Turbulence Models in Aerodynamic Calculations, https://arc.aiaa.org/doi/pdf/10.2514/1.29373. ## Related Work; ?. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236
https://github.com/su2code/SU2/pull/1236:2851,Usability,simpl,simply,2851," of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubusercontent.com/72806890/111278050-68890480-8639-11eb-9065-adac2e8cba15.png). The SA model does not suffer from a decaying turbulence variable, but the proposed changes are also functional there. [1] Philippe R. Spalart and Christopher L. Rumsey, Effective Inflow Conditions for Turbulence Models in Aerodynamic Calculations, https://arc.aiaa.org/doi/pdf/10.2514/1.29373. ## Related Work; ?. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236
https://github.com/su2code/SU2/pull/1237:889,Deployability,update,updated,889,"## Proposed Changes; Single and Multizone driver now write restart files for last and second last iteration, if windowed time convergence happend and 2nd order time marching is active.; . ## Related Work; Solve issue #1211. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1237
https://github.com/su2code/SU2/pull/1237:816,Testability,test,test,816,"## Proposed Changes; Single and Multizone driver now write restart files for last and second last iteration, if windowed time convergence happend and 2nd order time marching is active.; . ## Related Work; Solve issue #1211. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1237
https://github.com/su2code/SU2/pull/1237:396,Usability,guid,guide,396,"## Proposed Changes; Single and Multizone driver now write restart files for last and second last iteration, if windowed time convergence happend and 2nd order time marching is active.; . ## Related Work; Solve issue #1211. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1237
https://github.com/su2code/SU2/pull/1237:687,Usability,simpl,simply,687,"## Proposed Changes; Single and Multizone driver now write restart files for last and second last iteration, if windowed time convergence happend and 2nd order time marching is active.; . ## Related Work; Solve issue #1211. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1237
https://github.com/su2code/SU2/pull/1238:629,Deployability,update,updated,629,"## Proposed Changes; - remove unused CONV_CRITERIA from code and Testcases (223); - remove unused Set/GetGeometryPlanes funciton; - Re-add SURFACE_STATIC_TEMPERATURE objective function for flow_solver; ; ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1238
https://github.com/su2code/SU2/pull/1238:65,Testability,Test,Testcases,65,"## Proposed Changes; - remove unused CONV_CRITERIA from code and Testcases (223); - remove unused Set/GetGeometryPlanes funciton; - Re-add SURFACE_STATIC_TEMPERATURE objective function for flow_solver; ; ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1238
https://github.com/su2code/SU2/pull/1238:556,Testability,test,test,556,"## Proposed Changes; - remove unused CONV_CRITERIA from code and Testcases (223); - remove unused Set/GetGeometryPlanes funciton; - Re-add SURFACE_STATIC_TEMPERATURE objective function for flow_solver; ; ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1238
https://github.com/su2code/SU2/pull/1238:427,Usability,simpl,simply,427,"## Proposed Changes; - remove unused CONV_CRITERIA from code and Testcases (223); - remove unused Set/GetGeometryPlanes funciton; - Re-add SURFACE_STATIC_TEMPERATURE objective function for flow_solver; ; ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1238
https://github.com/su2code/SU2/pull/1240:916,Deployability,update,updated,916,"## Proposed Changes; Remove ununsed multigrid options in cfg file of the new NACA 0012 fixed_values testcase and the SST_SUST testcase, and some other small changes. ## Related Work; Continuation of #1236, comments by @pcarruscag and @TobiKattmann . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240
https://github.com/su2code/SU2/pull/1240:100,Testability,test,testcase,100,"## Proposed Changes; Remove ununsed multigrid options in cfg file of the new NACA 0012 fixed_values testcase and the SST_SUST testcase, and some other small changes. ## Related Work; Continuation of #1236, comments by @pcarruscag and @TobiKattmann . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240
https://github.com/su2code/SU2/pull/1240:126,Testability,test,testcase,126,"## Proposed Changes; Remove ununsed multigrid options in cfg file of the new NACA 0012 fixed_values testcase and the SST_SUST testcase, and some other small changes. ## Related Work; Continuation of #1236, comments by @pcarruscag and @TobiKattmann . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240
https://github.com/su2code/SU2/pull/1240:843,Testability,test,test,843,"## Proposed Changes; Remove ununsed multigrid options in cfg file of the new NACA 0012 fixed_values testcase and the SST_SUST testcase, and some other small changes. ## Related Work; Continuation of #1236, comments by @pcarruscag and @TobiKattmann . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240
https://github.com/su2code/SU2/pull/1240:422,Usability,guid,guide,422,"## Proposed Changes; Remove ununsed multigrid options in cfg file of the new NACA 0012 fixed_values testcase and the SST_SUST testcase, and some other small changes. ## Related Work; Continuation of #1236, comments by @pcarruscag and @TobiKattmann . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240
https://github.com/su2code/SU2/pull/1240:714,Usability,simpl,simply,714,"## Proposed Changes; Remove ununsed multigrid options in cfg file of the new NACA 0012 fixed_values testcase and the SST_SUST testcase, and some other small changes. ## Related Work; Continuation of #1236, comments by @pcarruscag and @TobiKattmann . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240
https://github.com/su2code/SU2/issues/1241:11127,Availability,error,errors,11127,"potted the cout-Debugging in there. I also added a mpi barrier and the screen output i get is ; ```; ... only nElm != nElmDomain=1 above, which prob belong to the fluid iteration; Rank: 3, nElm != nElmDomain=1; Rank: 2, nElm != nElmDomain=1; Rank: 0, nElm != nElmDomain=1; Rank: 1, nElm != nElmDomain=1; Rank: 3, nElm != nElmDomain=1; Rank: 1, nElm != nElmDomain=1; Rank: 2, nElm != nElmDomain=1; Rank: 0, nElm != nElmDomain=0; Rank: 3, nElm != nElmDomain=0; ```; and there it consequently freezes as two procs want to `Allreduce` and the other two never see that line of code. nElm and nElmDomain are not zero btw and have somewhat reasonable values in that case.; If I move ; ```c++; const auto mpi_type = (sizeof(ScalarType) < sizeof(double)) ? MPI_FLOAT : MPI_DOUBLE;; SelectMPIWrapper<ScalarType>::W::Allreduce(&sum, &dotRes, 1, mpi_type, MPI_SUM, SU2_MPI::GetComm());; ```; just outside the conditional then the code runs past that point and iterates normally. For that case it does not create any unwanted sideeffects. The explanatory comment; ```; * The nElm condition is to allow vectors to also be used locally. ---*/; ```; did not really enlighten me. I guess we have `nElm==nElmDomain` if we run without domain decomposition i.e. size=1. And as soon as size>1 `nElm` should be larger than `nElmDomain` as there is communication overhead ... at least how SU2 does it? So maybe the computation of those nElm values is not ok (I will look in that direction). On the other hand I guess such coding style (of putting mpi commands behind conditionals with local vars) provokes these errors? . 🆘 thanks already for the help and feel free to mention things I should try . [This page](https://github.com/dealii/dealii/wiki/Frequently-Asked-Questions#how-do-i-debug-mpi-programs) with the 2 following sections was quite helpful. **Desktop (please complete the following information):**; - gcc 5.3.0, openmpi 3.1.6, RHELS 7.6; - gcc 10.2.0, openmpi 4.0.5, Manjaro 21.0; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:902,Deployability,release,release,902,"Hi all,. When running `TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/configMaster.cfg` with 4 cores, SU2 freezes after printing `Simulation Run using the Multizone Driver` to screen. No more screen or file output (e.g. history), but `top` shows that the processes are not idling and the respective cores are at ~100% workload. . Call `mpirun -n 4 SU2_CFD configMaster.cfg` and tell me if it is the same for you. I tested on on our cluster and my private machine with the same result and it also happens every time. They seem to run forever ... I let both setups run for an hour (on 3 cores it takes a couple of min to complete) without any change in what i see = no output + cores at 100%. With any other number !=4 for cores the code runs. When was it introduced? Not very very recent ... already there when #773 was merged . **Now to the debugging efforts:**; Happens in debug and release mode. I changed quite a few options to see if sth interesting happens (no turb model, velocity inlet and pressure outlet, changed linear solvers and permutated values all over the place) but no change there. . As it is just 4 cores I went attached to all processes with ; ```; mpirun -n 4 xterm -e gdb --args SU2_CFD configMaster.cfg; ```; And the backtraces show that 2 processes are waiting at:; <details>; <summary>this place</summary>. ```; #0 0x00002aaac3d5ec40 in hmca_bcol_basesmuma_bcast_k_nomial_knownroot_progress; () from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:2815,Deployability,integrat,integration,2815,"i.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:3096,Deployability,integrat,integration,3096,"ewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:3225,Deployability,integrat,integration,3225,", ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; ... and two other processes waiting at ; <details>; <summary>that place</summary>. ```; #0 ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:3564,Deployability,integrat,integration,3564," (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; ... and two other processes waiting at ; <details>; <summary>that place</summary>. ```; #0 0x00002aaac3d45500 in hmca_bcol_basesmuma_reduce_intra_fanin_progress (); from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf587798 in _coll_ml_allreduce (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf33038d in mca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:5331,Deployability,integrat,integration,5331,"ntra_fanin_progress (); from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf587798 in _coll_ml_allreduce (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf33038d in mca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:5357,Deployability,integrat,integration,5357," /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf587798 in _coll_ml_allreduce (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf33038d in mca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:5532,Deployability,integrat,integration,5532,"ca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CF",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:5558,Deployability,integrat,integration,5558,"from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:5782,Deployability,integrat,integration,5782,"r::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:5808,Deployability,integrat,integration,5808,"ffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x0000000",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:6763,Deployability,integrat,integration,6763,"/SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:7045,Deployability,integrat,integration,7045,"@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:7231,Deployability,integrat,integration,7231,"=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:7570,Deployability,integrat,integration,7570,"this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:8564,Deployability,Update,Update,8564,"tion=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd(sum, dotRes);; SU2_MPI::Barrier(SU2_MPI::GetComm()); //added by tobi; #ifdef HAVE_MPI; /*--- Reduce across all mpi ranks, only master thread communicates.; * The nElm condition is to allow vectors to also be used locally. ---*/; std::cout << ""Rank: "" << SU2_MPI::GetRank() << "", nElm != nElmDomain="" << (nElm != nElmDomain) << std::endl; //added by tobi; if (nElm != nElmDomain) {; SU2_OMP_BARRIER; SU2_OMP_MASTER {; sum = dotRes;; const auto mpi_type = (sizeof(ScalarType) < sizeof(double)) ? MPI_FLOAT : MPI_DOUBLE;; SelectMPIWrapper<ScalarType>::W::Allreduce(&sum, &dotRes, 1, mpi_type, MPI_SUM, SU2_MPI::GetComm());; }; }; #endif; /*--- Make view of result consistent across threads. ---*/; SU2_OMP_BARRIER. return dotRes;; }; ```; The Problem is the `Allreduce` in the `if (nElm != nElmDomain) {` which leads to a freeze if not all ranks get the same result for that boolean.; The eagle eye prob already spotted the cout-Debugging in there. I a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:6078,Energy Efficiency,monitor,monitoring,6078,"aafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridI",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:8721,Energy Efficiency,Reduce,Reduce,8721,"e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd(sum, dotRes);; SU2_MPI::Barrier(SU2_MPI::GetComm()); //added by tobi; #ifdef HAVE_MPI; /*--- Reduce across all mpi ranks, only master thread communicates.; * The nElm condition is to allow vectors to also be used locally. ---*/; std::cout << ""Rank: "" << SU2_MPI::GetRank() << "", nElm != nElmDomain="" << (nElm != nElmDomain) << std::endl; //added by tobi; if (nElm != nElmDomain) {; SU2_OMP_BARRIER; SU2_OMP_MASTER {; sum = dotRes;; const auto mpi_type = (sizeof(ScalarType) < sizeof(double)) ? MPI_FLOAT : MPI_DOUBLE;; SelectMPIWrapper<ScalarType>::W::Allreduce(&sum, &dotRes, 1, mpi_type, MPI_SUM, SU2_MPI::GetComm());; }; }; #endif; /*--- Make view of result consistent across threads. ---*/; SU2_OMP_BARRIER. return dotRes;; }; ```; The Problem is the `Allreduce` in the `if (nElm != nElmDomain) {` which leads to a freeze if not all ranks get the same result for that boolean.; The eagle eye prob already spotted the cout-Debugging in there. I also added a mpi barrier and the screen output i get is ; ```; ... only nElm != nElmDomain=1 above, which prob belong to",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:2815,Integrability,integrat,integration,2815,"i.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:3096,Integrability,integrat,integration,3096,"ewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:3225,Integrability,integrat,integration,3225,", ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; ... and two other processes waiting at ; <details>; <summary>that place</summary>. ```; #0 ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:3564,Integrability,integrat,integration,3564," (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; ... and two other processes waiting at ; <details>; <summary>that place</summary>. ```; #0 0x00002aaac3d45500 in hmca_bcol_basesmuma_reduce_intra_fanin_progress (); from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf587798 in _coll_ml_allreduce (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf33038d in mca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:5331,Integrability,integrat,integration,5331,"ntra_fanin_progress (); from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf587798 in _coll_ml_allreduce (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf33038d in mca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:5357,Integrability,integrat,integration,5357," /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf587798 in _coll_ml_allreduce (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf33038d in mca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:5532,Integrability,integrat,integration,5532,"ca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CF",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:5558,Integrability,integrat,integration,5558,"from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:5782,Integrability,integrat,integration,5782,"r::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:5808,Integrability,integrat,integration,5808,"ffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x0000000",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:6763,Integrability,integrat,integration,6763,"/SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:7045,Integrability,integrat,integration,7045,"@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:7231,Integrability,integrat,integration,7231,"=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:7570,Integrability,integrat,integration,7570,"this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:88,Modifiability,config,configMaster,88,"Hi all,. When running `TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/configMaster.cfg` with 4 cores, SU2 freezes after printing `Simulation Run using the Multizone Driver` to screen. No more screen or file output (e.g. history), but `top` shows that the processes are not idling and the respective cores are at ~100% workload. . Call `mpirun -n 4 SU2_CFD configMaster.cfg` and tell me if it is the same for you. I tested on on our cluster and my private machine with the same result and it also happens every time. They seem to run forever ... I let both setups run for an hour (on 3 cores it takes a couple of min to complete) without any change in what i see = no output + cores at 100%. With any other number !=4 for cores the code runs. When was it introduced? Not very very recent ... already there when #773 was merged . **Now to the debugging efforts:**; Happens in debug and release mode. I changed quite a few options to see if sth interesting happens (no turb model, velocity inlet and pressure outlet, changed linear solvers and permutated values all over the place) but no change there. . As it is just 4 cores I went attached to all processes with ; ```; mpirun -n 4 xterm -e gdb --args SU2_CFD configMaster.cfg; ```; And the backtraces show that 2 processes are waiting at:; <details>; <summary>this place</summary>. ```; #0 0x00002aaac3d5ec40 in hmca_bcol_basesmuma_bcast_k_nomial_knownroot_progress; () from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:374,Modifiability,config,configMaster,374,"Hi all,. When running `TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/configMaster.cfg` with 4 cores, SU2 freezes after printing `Simulation Run using the Multizone Driver` to screen. No more screen or file output (e.g. history), but `top` shows that the processes are not idling and the respective cores are at ~100% workload. . Call `mpirun -n 4 SU2_CFD configMaster.cfg` and tell me if it is the same for you. I tested on on our cluster and my private machine with the same result and it also happens every time. They seem to run forever ... I let both setups run for an hour (on 3 cores it takes a couple of min to complete) without any change in what i see = no output + cores at 100%. With any other number !=4 for cores the code runs. When was it introduced? Not very very recent ... already there when #773 was merged . **Now to the debugging efforts:**; Happens in debug and release mode. I changed quite a few options to see if sth interesting happens (no turb model, velocity inlet and pressure outlet, changed linear solvers and permutated values all over the place) but no change there. . As it is just 4 cores I went attached to all processes with ; ```; mpirun -n 4 xterm -e gdb --args SU2_CFD configMaster.cfg; ```; And the backtraces show that 2 processes are waiting at:; <details>; <summary>this place</summary>. ```; #0 0x00002aaac3d5ec40 in hmca_bcol_basesmuma_bcast_k_nomial_knownroot_progress; () from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:1227,Modifiability,config,configMaster,1227,"one Driver` to screen. No more screen or file output (e.g. history), but `top` shows that the processes are not idling and the respective cores are at ~100% workload. . Call `mpirun -n 4 SU2_CFD configMaster.cfg` and tell me if it is the same for you. I tested on on our cluster and my private machine with the same result and it also happens every time. They seem to run forever ... I let both setups run for an hour (on 3 cores it takes a couple of min to complete) without any change in what i see = no output + cores at 100%. With any other number !=4 for cores the code runs. When was it introduced? Not very very recent ... already there when #773 was merged . **Now to the debugging efforts:**; Happens in debug and release mode. I changed quite a few options to see if sth interesting happens (no turb model, velocity inlet and pressure outlet, changed linear solvers and permutated values all over the place) but no change there. . As it is just 4 cores I went attached to all processes with ; ```; mpirun -n 4 xterm -e gdb --args SU2_CFD configMaster.cfg; ```; And the backtraces show that 2 processes are waiting at:; <details>; <summary>this place</summary>. ```; #0 0x00002aaac3d5ec40 in hmca_bcol_basesmuma_bcast_k_nomial_knownroot_progress; () from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/par",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:2305,Modifiability,config,config,2305,"s show that 2 processes are waiting at:; <details>; <summary>this place</summary>. ```; #0 0x00002aaac3d5ec40 in hmca_bcol_basesmuma_bcast_k_nomial_knownroot_progress; () from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:2499,Modifiability,config,config,2499,"rom /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:2688,Modifiability,config,config,2688,"1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_mov",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:3018,Modifiability,config,config,3018,"vbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x00000",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:3308,Modifiability,config,config,3308,", ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; ... and two other processes waiting at ; <details>; <summary>that place</summary>. ```; #0 ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:3647,Modifiability,config,config,3647," (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; ... and two other processes waiting at ; <details>; <summary>that place</summary>. ```; #0 0x00002aaac3d45500 in hmca_bcol_basesmuma_reduce_intra_fanin_progress (); from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf587798 in _coll_ml_allreduce (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf33038d in mca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:6096,Modifiability,config,config,6096,"aafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridI",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:6301,Modifiability,config,config,6301,", expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numeri",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:6502,Modifiability,config,config,6502,"0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:6692,Modifiability,config,config,6692,"rn> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:6967,Modifiability,config,config,6967,"0b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:7314,Modifiability,config,config,7314,"=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:7653,Modifiability,config,config,7653,"this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:8578,Modifiability,variab,variable,8578,"tion=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd(sum, dotRes);; SU2_MPI::Barrier(SU2_MPI::GetComm()); //added by tobi; #ifdef HAVE_MPI; /*--- Reduce across all mpi ranks, only master thread communicates.; * The nElm condition is to allow vectors to also be used locally. ---*/; std::cout << ""Rank: "" << SU2_MPI::GetRank() << "", nElm != nElmDomain="" << (nElm != nElmDomain) << std::endl; //added by tobi; if (nElm != nElmDomain) {; SU2_OMP_BARRIER; SU2_OMP_MASTER {; sum = dotRes;; const auto mpi_type = (sizeof(ScalarType) < sizeof(double)) ? MPI_FLOAT : MPI_DOUBLE;; SelectMPIWrapper<ScalarType>::W::Allreduce(&sum, &dotRes, 1, mpi_type, MPI_SUM, SU2_MPI::GetComm());; }; }; #endif; /*--- Make view of result consistent across threads. ---*/; SU2_OMP_BARRIER. return dotRes;; }; ```; The Problem is the `Allreduce` in the `if (nElm != nElmDomain) {` which leads to a freeze if not all ranks get the same result for that boolean.; The eagle eye prob already spotted the cout-Debugging in there. I a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:23,Testability,Test,TestCases,23,"Hi all,. When running `TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/configMaster.cfg` with 4 cores, SU2 freezes after printing `Simulation Run using the Multizone Driver` to screen. No more screen or file output (e.g. history), but `top` shows that the processes are not idling and the respective cores are at ~100% workload. . Call `mpirun -n 4 SU2_CFD configMaster.cfg` and tell me if it is the same for you. I tested on on our cluster and my private machine with the same result and it also happens every time. They seem to run forever ... I let both setups run for an hour (on 3 cores it takes a couple of min to complete) without any change in what i see = no output + cores at 100%. With any other number !=4 for cores the code runs. When was it introduced? Not very very recent ... already there when #773 was merged . **Now to the debugging efforts:**; Happens in debug and release mode. I changed quite a few options to see if sth interesting happens (no turb model, velocity inlet and pressure outlet, changed linear solvers and permutated values all over the place) but no change there. . As it is just 4 cores I went attached to all processes with ; ```; mpirun -n 4 xterm -e gdb --args SU2_CFD configMaster.cfg; ```; And the backtraces show that 2 processes are waiting at:; <details>; <summary>this place</summary>. ```; #0 0x00002aaac3d5ec40 in hmca_bcol_basesmuma_bcast_k_nomial_knownroot_progress; () from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/issues/1241:433,Testability,test,tested,433,"Hi all,. When running `TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/configMaster.cfg` with 4 cores, SU2 freezes after printing `Simulation Run using the Multizone Driver` to screen. No more screen or file output (e.g. history), but `top` shows that the processes are not idling and the respective cores are at ~100% workload. . Call `mpirun -n 4 SU2_CFD configMaster.cfg` and tell me if it is the same for you. I tested on on our cluster and my private machine with the same result and it also happens every time. They seem to run forever ... I let both setups run for an hour (on 3 cores it takes a couple of min to complete) without any change in what i see = no output + cores at 100%. With any other number !=4 for cores the code runs. When was it introduced? Not very very recent ... already there when #773 was merged . **Now to the debugging efforts:**; Happens in debug and release mode. I changed quite a few options to see if sth interesting happens (no turb model, velocity inlet and pressure outlet, changed linear solvers and permutated values all over the place) but no change there. . As it is just 4 cores I went attached to all processes with ; ```; mpirun -n 4 xterm -e gdb --args SU2_CFD configMaster.cfg; ```; And the backtraces show that 2 processes are waiting at:; <details>; <summary>this place</summary>. ```; #0 0x00002aaac3d5ec40 in hmca_bcol_basesmuma_bcast_k_nomial_knownroot_progress; () from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241
https://github.com/su2code/SU2/pull/1242:1501,Deployability,update,updated,1501,"## Proposed Changes; Hi all,. The title gives it away. I imagine that piece by piece some commits are chipped in to remove more and more enum numbers. Like that it is more obvious if sth breaks because somewhere someone uses builds on knowing the actual number to do some shenanigans. ; Maybe just removing all in a big blow saves time bit #1220 already shows some limitations. I used the following command (for streamwise periodic in this case) and looked over the results whether I notice sth fishy. Not perfect but might help catchin some easy problems.; ```bash; grep -r 'NO_STREAMWISE_PERIODIC\|PRESSURE_DROP\|STREAMWISE_MASSFLOW\|Streamwise_Periodic_Map\|GetKind_Streamwise_Periodic' SU2_CFD SU2_DOT SU2_GEO SU2_DEF Common --include=*cpp --include=*hpp --include=*inl; ```. So feel free to commit your removals in here and if it breaks and one doesn't want to search for it just revert that and mention the specific enum so that no-one repeats that. Happy enum-removal . ## Related Work; @bigfooted mentioned that a couple of times and #1220 discusses some limitations. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242
https://github.com/su2code/SU2/pull/1242:1428,Testability,test,test,1428,"## Proposed Changes; Hi all,. The title gives it away. I imagine that piece by piece some commits are chipped in to remove more and more enum numbers. Like that it is more obvious if sth breaks because somewhere someone uses builds on knowing the actual number to do some shenanigans. ; Maybe just removing all in a big blow saves time bit #1220 already shows some limitations. I used the following command (for streamwise periodic in this case) and looked over the results whether I notice sth fishy. Not perfect but might help catchin some easy problems.; ```bash; grep -r 'NO_STREAMWISE_PERIODIC\|PRESSURE_DROP\|STREAMWISE_MASSFLOW\|Streamwise_Periodic_Map\|GetKind_Streamwise_Periodic' SU2_CFD SU2_DOT SU2_GEO SU2_DEF Common --include=*cpp --include=*hpp --include=*inl; ```. So feel free to commit your removals in here and if it breaks and one doesn't want to search for it just revert that and mention the specific enum so that no-one repeats that. Happy enum-removal . ## Related Work; @bigfooted mentioned that a couple of times and #1220 discusses some limitations. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242
https://github.com/su2code/SU2/pull/1242:1299,Usability,simpl,simply,1299,"## Proposed Changes; Hi all,. The title gives it away. I imagine that piece by piece some commits are chipped in to remove more and more enum numbers. Like that it is more obvious if sth breaks because somewhere someone uses builds on knowing the actual number to do some shenanigans. ; Maybe just removing all in a big blow saves time bit #1220 already shows some limitations. I used the following command (for streamwise periodic in this case) and looked over the results whether I notice sth fishy. Not perfect but might help catchin some easy problems.; ```bash; grep -r 'NO_STREAMWISE_PERIODIC\|PRESSURE_DROP\|STREAMWISE_MASSFLOW\|Streamwise_Periodic_Map\|GetKind_Streamwise_Periodic' SU2_CFD SU2_DOT SU2_GEO SU2_DEF Common --include=*cpp --include=*hpp --include=*inl; ```. So feel free to commit your removals in here and if it breaks and one doesn't want to search for it just revert that and mention the specific enum so that no-one repeats that. Happy enum-removal . ## Related Work; @bigfooted mentioned that a couple of times and #1220 discusses some limitations. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242
https://github.com/su2code/SU2/pull/1247:52,Deployability,update,updated,52,## Proposed Changes; According to git this was last updated 7 years ago.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1247
https://github.com/su2code/SU2/issues/1250:1299,Availability,Toler,Tolerance,1299,"n SU2 v7 and v5?. I tested the following .cfg file with the mesh mesh_NACA0012_inv.su2 and it's not working. ```; % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%; %; % Kind of deformation (NO_DEFORMATION, TRANSLATION, ROTATION, SCALE,; % FFD_SETTING, FFD_NACELLE; % FFD_CONTROL_POINT, FFD_CAMBER, FFD_THICKNESS, FFD_TWIST; % FFD_CONTROL_POINT_2D, FFD_CAMBER_2D, FFD_THICKNESS_2D, FFD_TWIST_2D,; % HICKS_HENNE, SURFACE_BUMP); DV_KIND= FFD_SETTING; % ; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( airfoil ); %; % Parameters of the shape deformation; DV_PARAM= ( MAIN_BOX, 3.0, 4.0, 0.0, 0.0); %; % Value of the shape deformation; DV_VALUE= 0.0; %; %; % ------------------------ GRID DEFORMATION PARAMETERS ------------------------%; DEFORM_LINEAR_ITER= 250; %; %; % -------------------- FREE-FORM DEFORMATION PARAMETERS -----------------------%; %; % Tolerance of the Free-Form Deformation point inversion; FFD_TOLERANCE= 1E-10; %; % Maximum number of iterations in the Free-Form Deformation point inversion; FFD_ITERATIONS= 500; %; % FFD box definition: 3D case (FFD_BoxTag, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3, X4, Y4, Z4,; % X5, Y5, Z5, X6, Y6, Z6, X7, Y7, Z7, X8, Y8, Z8); % 2D case (FFD_BoxTag, X1, Y1, 0.0, X2, Y2, 0.0, X3, Y3, 0.0, X4, Y4, 0.0,; % 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0); FFD_DEFINITION= (MAIN_BOX,-0.1, 0.2, 0, 1.1, 0.2, 0, 1.1, -0.2, 0, -0.1, -0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0); %; % FFD box degree: 3D case (x_degree, y_degree, z_degree); % 2D case (x_degree, y_degree, 0); FFD_DEGREE= ( 6 , 1, 0 ); %; % Surface grid continuity at the intersection with the faces of the FFD boxes.; % To keep a particular level of surface continuity, SU2 automatically freezes the right; % number of control point planes (NO_DERIVATIVE, 1ST_DERIVATIVE, 2ND_DERIVATIVE, USER_INPUT); FFD_CONTINUITY= 2ND_DERIVATIVE; %; %; % --------------------- OPTIMAL SHAPE DESIGN DEFINITION ----------",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1250
https://github.com/su2code/SU2/issues/1250:520,Modifiability,VARIAB,VARIABLE,520,"Dear SU2 developers,. I'm trying to set up a FFD box however, after having run the SU2_DEF command, I noticed that no FFD_SURFACE_POINTS are crated in the mesh_out.su2 file. I tried this successfully with SU2 v7 but repeating the same procedure with SU2 v5 lead to the problem. What can be the cause of such a problem? Is the procedure to create the FFD box the same between SU2 v7 and v5?. I tested the following .cfg file with the mesh mesh_NACA0012_inv.su2 and it's not working. ```; % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%; %; % Kind of deformation (NO_DEFORMATION, TRANSLATION, ROTATION, SCALE,; % FFD_SETTING, FFD_NACELLE; % FFD_CONTROL_POINT, FFD_CAMBER, FFD_THICKNESS, FFD_TWIST; % FFD_CONTROL_POINT_2D, FFD_CAMBER_2D, FFD_THICKNESS_2D, FFD_TWIST_2D,; % HICKS_HENNE, SURFACE_BUMP); DV_KIND= FFD_SETTING; % ; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( airfoil ); %; % Parameters of the shape deformation; DV_PARAM= ( MAIN_BOX, 3.0, 4.0, 0.0, 0.0); %; % Value of the shape deformation; DV_VALUE= 0.0; %; %; % ------------------------ GRID DEFORMATION PARAMETERS ------------------------%; DEFORM_LINEAR_ITER= 250; %; %; % -------------------- FREE-FORM DEFORMATION PARAMETERS -----------------------%; %; % Tolerance of the Free-Form Deformation point inversion; FFD_TOLERANCE= 1E-10; %; % Maximum number of iterations in the Free-Form Deformation point inversion; FFD_ITERATIONS= 500; %; % FFD box definition: 3D case (FFD_BoxTag, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3, X4, Y4, Z4,; % X5, Y5, Z5, X6, Y6, Z6, X7, Y7, Z7, X8, Y8, Z8); % 2D case (FFD_BoxTag, X1, Y1, 0.0, X2, Y2, 0.0, X3, Y3, 0.0, X4, Y4, 0.0,; % 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0); FFD_DEFINITION= (MAIN_BOX,-0.1, 0.2, 0, 1.1, 0.2, 0, 1.1, -0.2, 0, -0.1, -0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0); %; % FFD box degree: 3D case (x_degree, y_degree, z_degree); % 2D case (x_degree, y_degree, 0); FFD_DEGREE= ( 6 , 1, 0 ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1250
https://github.com/su2code/SU2/issues/1250:2415,Modifiability,variab,variables,2415,"ORMATION PARAMETERS -----------------------%; %; % Tolerance of the Free-Form Deformation point inversion; FFD_TOLERANCE= 1E-10; %; % Maximum number of iterations in the Free-Form Deformation point inversion; FFD_ITERATIONS= 500; %; % FFD box definition: 3D case (FFD_BoxTag, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3, X4, Y4, Z4,; % X5, Y5, Z5, X6, Y6, Z6, X7, Y7, Z7, X8, Y8, Z8); % 2D case (FFD_BoxTag, X1, Y1, 0.0, X2, Y2, 0.0, X3, Y3, 0.0, X4, Y4, 0.0,; % 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0); FFD_DEFINITION= (MAIN_BOX,-0.1, 0.2, 0, 1.1, 0.2, 0, 1.1, -0.2, 0, -0.1, -0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0); %; % FFD box degree: 3D case (x_degree, y_degree, z_degree); % 2D case (x_degree, y_degree, 0); FFD_DEGREE= ( 6 , 1, 0 ); %; % Surface grid continuity at the intersection with the faces of the FFD boxes.; % To keep a particular level of surface continuity, SU2 automatically freezes the right; % number of control point planes (NO_DERIVATIVE, 1ST_DERIVATIVE, 2ND_DERIVATIVE, USER_INPUT); FFD_CONTINUITY= 2ND_DERIVATIVE; %; %; % --------------------- OPTIMAL SHAPE DESIGN DEFINITION -----------------------%; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | MAIN_BOX, 0, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 1, 0, 0.0, 0.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 2, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 3, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 4, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 5, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 6, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 0, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 1, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 2, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 3, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 4, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 5, 1, 1.0, 0.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 6, 1, 0.0, 1.0 ); . ```. Thank you for your help. - OS: [Linux (Ubuntu 20)]; - SU2 Version: [v5.0.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1250
https://github.com/su2code/SU2/issues/1250:2395,Performance,Optimiz,Optimization,2395,"ORMATION PARAMETERS -----------------------%; %; % Tolerance of the Free-Form Deformation point inversion; FFD_TOLERANCE= 1E-10; %; % Maximum number of iterations in the Free-Form Deformation point inversion; FFD_ITERATIONS= 500; %; % FFD box definition: 3D case (FFD_BoxTag, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3, X4, Y4, Z4,; % X5, Y5, Z5, X6, Y6, Z6, X7, Y7, Z7, X8, Y8, Z8); % 2D case (FFD_BoxTag, X1, Y1, 0.0, X2, Y2, 0.0, X3, Y3, 0.0, X4, Y4, 0.0,; % 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0); FFD_DEFINITION= (MAIN_BOX,-0.1, 0.2, 0, 1.1, 0.2, 0, 1.1, -0.2, 0, -0.1, -0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0); %; % FFD box degree: 3D case (x_degree, y_degree, z_degree); % 2D case (x_degree, y_degree, 0); FFD_DEGREE= ( 6 , 1, 0 ); %; % Surface grid continuity at the intersection with the faces of the FFD boxes.; % To keep a particular level of surface continuity, SU2 automatically freezes the right; % number of control point planes (NO_DERIVATIVE, 1ST_DERIVATIVE, 2ND_DERIVATIVE, USER_INPUT); FFD_CONTINUITY= 2ND_DERIVATIVE; %; %; % --------------------- OPTIMAL SHAPE DESIGN DEFINITION -----------------------%; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | MAIN_BOX, 0, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 1, 0, 0.0, 0.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 2, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 3, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 4, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 5, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 6, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 0, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 1, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 2, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 3, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 4, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 5, 1, 1.0, 0.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 6, 1, 0.0, 1.0 ); . ```. Thank you for your help. - OS: [Linux (Ubuntu 20)]; - SU2 Version: [v5.0.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1250
https://github.com/su2code/SU2/issues/1250:393,Testability,test,tested,393,"Dear SU2 developers,. I'm trying to set up a FFD box however, after having run the SU2_DEF command, I noticed that no FFD_SURFACE_POINTS are crated in the mesh_out.su2 file. I tried this successfully with SU2 v7 but repeating the same procedure with SU2 v5 lead to the problem. What can be the cause of such a problem? Is the procedure to create the FFD box the same between SU2 v7 and v5?. I tested the following .cfg file with the mesh mesh_NACA0012_inv.su2 and it's not working. ```; % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%; %; % Kind of deformation (NO_DEFORMATION, TRANSLATION, ROTATION, SCALE,; % FFD_SETTING, FFD_NACELLE; % FFD_CONTROL_POINT, FFD_CAMBER, FFD_THICKNESS, FFD_TWIST; % FFD_CONTROL_POINT_2D, FFD_CAMBER_2D, FFD_THICKNESS_2D, FFD_TWIST_2D,; % HICKS_HENNE, SURFACE_BUMP); DV_KIND= FFD_SETTING; % ; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( airfoil ); %; % Parameters of the shape deformation; DV_PARAM= ( MAIN_BOX, 3.0, 4.0, 0.0, 0.0); %; % Value of the shape deformation; DV_VALUE= 0.0; %; %; % ------------------------ GRID DEFORMATION PARAMETERS ------------------------%; DEFORM_LINEAR_ITER= 250; %; %; % -------------------- FREE-FORM DEFORMATION PARAMETERS -----------------------%; %; % Tolerance of the Free-Form Deformation point inversion; FFD_TOLERANCE= 1E-10; %; % Maximum number of iterations in the Free-Form Deformation point inversion; FFD_ITERATIONS= 500; %; % FFD box definition: 3D case (FFD_BoxTag, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3, X4, Y4, Z4,; % X5, Y5, Z5, X6, Y6, Z6, X7, Y7, Z7, X8, Y8, Z8); % 2D case (FFD_BoxTag, X1, Y1, 0.0, X2, Y2, 0.0, X3, Y3, 0.0, X4, Y4, 0.0,; % 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0); FFD_DEFINITION= (MAIN_BOX,-0.1, 0.2, 0, 1.1, 0.2, 0, 1.1, -0.2, 0, -0.1, -0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0); %; % FFD box degree: 3D case (x_degree, y_degree, z_degree); % 2D case (x_degree, y_degree, 0); FFD_DEGREE= ( 6 , 1, 0 ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1250
https://github.com/su2code/SU2/issues/1254:197,Modifiability,variab,variables,197,"If I set DV_KIND = HICKS_HENNE, then what exactly does DV_VALUE do? I see that it deforms the mesh, but I am trying to understand how exactly DV_VALUE (a scalar) is related to the vector of design variables defined in DEFINITION_DV?. Thanks for your help and apologies if this is documented elsewhere--I searched for it a bit but could not find a definition.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1254
https://github.com/su2code/SU2/pull/1256:1044,Deployability,update,updated,1044,"## Proposed Changes; The following members of `CHeatSolver` were allocated but never freed: `Primitive_Flow_i`, `Primitive_Flow_j`, `HeatFlux_per_Marker`, `AverageT_per_Marker`, `Surface_Areas`, `ConjugateVar`. I propose to correct this in the spirit of #1225, using containers (`std::vector`) instead of pointers. There is a bit of additional cleanup. ## Related Work; #1225 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256
https://github.com/su2code/SU2/pull/1256:65,Energy Efficiency,allocate,allocated,65,"## Proposed Changes; The following members of `CHeatSolver` were allocated but never freed: `Primitive_Flow_i`, `Primitive_Flow_j`, `HeatFlux_per_Marker`, `AverageT_per_Marker`, `Surface_Areas`, `ConjugateVar`. I propose to correct this in the spirit of #1225, using containers (`std::vector`) instead of pointers. There is a bit of additional cleanup. ## Related Work; #1225 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256
https://github.com/su2code/SU2/pull/1256:971,Testability,test,test,971,"## Proposed Changes; The following members of `CHeatSolver` were allocated but never freed: `Primitive_Flow_i`, `Primitive_Flow_j`, `HeatFlux_per_Marker`, `AverageT_per_Marker`, `Surface_Areas`, `ConjugateVar`. I propose to correct this in the spirit of #1225, using containers (`std::vector`) instead of pointers. There is a bit of additional cleanup. ## Related Work; #1225 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256
https://github.com/su2code/SU2/pull/1256:550,Usability,guid,guide,550,"## Proposed Changes; The following members of `CHeatSolver` were allocated but never freed: `Primitive_Flow_i`, `Primitive_Flow_j`, `HeatFlux_per_Marker`, `AverageT_per_Marker`, `Surface_Areas`, `ConjugateVar`. I propose to correct this in the spirit of #1225, using containers (`std::vector`) instead of pointers. There is a bit of additional cleanup. ## Related Work; #1225 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256
https://github.com/su2code/SU2/pull/1256:842,Usability,simpl,simply,842,"## Proposed Changes; The following members of `CHeatSolver` were allocated but never freed: `Primitive_Flow_i`, `Primitive_Flow_j`, `HeatFlux_per_Marker`, `AverageT_per_Marker`, `Surface_Areas`, `ConjugateVar`. I propose to correct this in the spirit of #1225, using containers (`std::vector`) instead of pointers. There is a bit of additional cleanup. ## Related Work; #1225 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256
https://github.com/su2code/SU2/pull/1257:759,Deployability,update,updated,759,"Hi all,. As I am stepping through DA cases with my debugger I am cleaning some things left and right. No major changes. - making local vars const when possible; - moving the `config->GetBool` directly to the conditional instead of making it a var and using it 1 time; - removing dead code; - adding some comments; - some typos fixed. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1257
https://github.com/su2code/SU2/pull/1257:175,Modifiability,config,config,175,"Hi all,. As I am stepping through DA cases with my debugger I am cleaning some things left and right. No major changes. - making local vars const when possible; - moving the `config->GetBool` directly to the conditional instead of making it a var and using it 1 time; - removing dead code; - adding some comments; - some typos fixed. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1257
https://github.com/su2code/SU2/pull/1257:686,Testability,test,test,686,"Hi all,. As I am stepping through DA cases with my debugger I am cleaning some things left and right. No major changes. - making local vars const when possible; - moving the `config->GetBool` directly to the conditional instead of making it a var and using it 1 time; - removing dead code; - adding some comments; - some typos fixed. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1257
https://github.com/su2code/SU2/pull/1257:557,Usability,simpl,simply,557,"Hi all,. As I am stepping through DA cases with my debugger I am cleaning some things left and right. No major changes. - making local vars const when possible; - moving the `config->GetBool` directly to the conditional instead of making it a var and using it 1 time; - removing dead code; - adding some comments; - some typos fixed. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1257
https://github.com/su2code/SU2/pull/1258:635,Availability,redundant,redundant,635,"Hi all, . this is the continuation of #1242 . Change of the `enum`'s in `option_structure.hpp` into `enum class`. This has the benefit of no implicit conversion to int and therefore increased safety with the enum type -> [c++ core guidelines](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#enum3-prefer-class-enums-over-plain-enums). If you want to sponsor a commit (which I highly recommend ;) ) then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258
https://github.com/su2code/SU2/pull/1258:1605,Availability,error,error,1605,") then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258
https://github.com/su2code/SU2/pull/1258:2316,Deployability,update,updated,2316,") then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258
https://github.com/su2code/SU2/pull/1258:1515,Integrability,message,message,1515,") then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258
https://github.com/su2code/SU2/pull/1258:1012,Modifiability,variab,variable,1012,"Hi all, . this is the continuation of #1242 . Change of the `enum`'s in `option_structure.hpp` into `enum class`. This has the benefit of no implicit conversion to int and therefore increased safety with the enum type -> [c++ core guidelines](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#enum3-prefer-class-enums-over-plain-enums). If you want to sponsor a commit (which I highly recommend ;) ) then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258
https://github.com/su2code/SU2/pull/1258:192,Safety,safe,safety,192,"Hi all, . this is the continuation of #1242 . Change of the `enum`'s in `option_structure.hpp` into `enum class`. This has the benefit of no implicit conversion to int and therefore increased safety with the enum type -> [c++ core guidelines](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#enum3-prefer-class-enums-over-plain-enums). If you want to sponsor a commit (which I highly recommend ;) ) then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258
https://github.com/su2code/SU2/pull/1258:635,Safety,redund,redundant,635,"Hi all, . this is the continuation of #1242 . Change of the `enum`'s in `option_structure.hpp` into `enum class`. This has the benefit of no implicit conversion to int and therefore increased safety with the enum type -> [c++ core guidelines](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#enum3-prefer-class-enums-over-plain-enums). If you want to sponsor a commit (which I highly recommend ;) ) then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258
https://github.com/su2code/SU2/pull/1258:2243,Testability,test,test,2243,") then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258
https://github.com/su2code/SU2/pull/1258:231,Usability,guid,guidelines,231,"Hi all, . this is the continuation of #1242 . Change of the `enum`'s in `option_structure.hpp` into `enum class`. This has the benefit of no implicit conversion to int and therefore increased safety with the enum type -> [c++ core guidelines](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#enum3-prefer-class-enums-over-plain-enums). If you want to sponsor a commit (which I highly recommend ;) ) then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258
https://github.com/su2code/SU2/pull/1258:1509,Usability,clear,clear,1509,") then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258
https://github.com/su2code/SU2/pull/1258:1823,Usability,guid,guide,1823,") then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258
https://github.com/su2code/SU2/pull/1258:2114,Usability,simpl,simply,2114,") then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258
https://github.com/su2code/SU2/pull/1259:171,Deployability,update,updated,171,"## Proposed Changes; Improvements to time averaged history output for dynamic multizone problems, which now also include the structural zone. The averaging logic has been updated to include values only for the final solution in each time iteration. To test the fixes in this PR, time averaged history output has been added to the existing dynamic fsi test case. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259
https://github.com/su2code/SU2/pull/1259:1044,Deployability,update,updated,1044,"## Proposed Changes; Improvements to time averaged history output for dynamic multizone problems, which now also include the structural zone. The averaging logic has been updated to include values only for the final solution in each time iteration. To test the fixes in this PR, time averaged history output has been added to the existing dynamic fsi test case. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259
https://github.com/su2code/SU2/pull/1259:156,Testability,log,logic,156,"## Proposed Changes; Improvements to time averaged history output for dynamic multizone problems, which now also include the structural zone. The averaging logic has been updated to include values only for the final solution in each time iteration. To test the fixes in this PR, time averaged history output has been added to the existing dynamic fsi test case. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259
https://github.com/su2code/SU2/pull/1259:252,Testability,test,test,252,"## Proposed Changes; Improvements to time averaged history output for dynamic multizone problems, which now also include the structural zone. The averaging logic has been updated to include values only for the final solution in each time iteration. To test the fixes in this PR, time averaged history output has been added to the existing dynamic fsi test case. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259
https://github.com/su2code/SU2/pull/1259:351,Testability,test,test,351,"## Proposed Changes; Improvements to time averaged history output for dynamic multizone problems, which now also include the structural zone. The averaging logic has been updated to include values only for the final solution in each time iteration. To test the fixes in this PR, time averaged history output has been added to the existing dynamic fsi test case. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259
https://github.com/su2code/SU2/pull/1259:971,Testability,test,test,971,"## Proposed Changes; Improvements to time averaged history output for dynamic multizone problems, which now also include the structural zone. The averaging logic has been updated to include values only for the final solution in each time iteration. To test the fixes in this PR, time averaged history output has been added to the existing dynamic fsi test case. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259
https://github.com/su2code/SU2/pull/1259:551,Usability,guid,guide,551,"## Proposed Changes; Improvements to time averaged history output for dynamic multizone problems, which now also include the structural zone. The averaging logic has been updated to include values only for the final solution in each time iteration. To test the fixes in this PR, time averaged history output has been added to the existing dynamic fsi test case. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259
https://github.com/su2code/SU2/pull/1259:842,Usability,simpl,simply,842,"## Proposed Changes; Improvements to time averaged history output for dynamic multizone problems, which now also include the structural zone. The averaging logic has been updated to include values only for the final solution in each time iteration. To test the fixes in this PR, time averaged history output has been added to the existing dynamic fsi test case. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259
https://github.com/su2code/SU2/pull/1260:1345,Deployability,update,updated,1345,"## Proposed Changes; The multizone discrete adjoint driver is extended for dynamic problems. A time loop is added to the multizone DA driver, with additional handling for the external container to store the intermediate values and cumulative sensitivities per time step. @TobiKattmann - the changes to the DA multizone driver have been kept generic, they should be transferrable for CHT problems. Adjoint gradients for both dynamic FSI and dynamic CHT have been verified against finite differences. Dynamic adjoint test case has been added similar to an existing steady FSI test. . ## Related Work; #1259 (time averaged history output); #1174 (velocity transfer at FSI boundary). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260
https://github.com/su2code/SU2/pull/1260:62,Modifiability,extend,extended,62,"## Proposed Changes; The multizone discrete adjoint driver is extended for dynamic problems. A time loop is added to the multizone DA driver, with additional handling for the external container to store the intermediate values and cumulative sensitivities per time step. @TobiKattmann - the changes to the DA multizone driver have been kept generic, they should be transferrable for CHT problems. Adjoint gradients for both dynamic FSI and dynamic CHT have been verified against finite differences. Dynamic adjoint test case has been added similar to an existing steady FSI test. . ## Related Work; #1259 (time averaged history output); #1174 (velocity transfer at FSI boundary). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260
https://github.com/su2code/SU2/pull/1260:515,Testability,test,test,515,"## Proposed Changes; The multizone discrete adjoint driver is extended for dynamic problems. A time loop is added to the multizone DA driver, with additional handling for the external container to store the intermediate values and cumulative sensitivities per time step. @TobiKattmann - the changes to the DA multizone driver have been kept generic, they should be transferrable for CHT problems. Adjoint gradients for both dynamic FSI and dynamic CHT have been verified against finite differences. Dynamic adjoint test case has been added similar to an existing steady FSI test. . ## Related Work; #1259 (time averaged history output); #1174 (velocity transfer at FSI boundary). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260
https://github.com/su2code/SU2/pull/1260:574,Testability,test,test,574,"## Proposed Changes; The multizone discrete adjoint driver is extended for dynamic problems. A time loop is added to the multizone DA driver, with additional handling for the external container to store the intermediate values and cumulative sensitivities per time step. @TobiKattmann - the changes to the DA multizone driver have been kept generic, they should be transferrable for CHT problems. Adjoint gradients for both dynamic FSI and dynamic CHT have been verified against finite differences. Dynamic adjoint test case has been added similar to an existing steady FSI test. . ## Related Work; #1259 (time averaged history output); #1174 (velocity transfer at FSI boundary). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260
https://github.com/su2code/SU2/pull/1260:1272,Testability,test,test,1272,"## Proposed Changes; The multizone discrete adjoint driver is extended for dynamic problems. A time loop is added to the multizone DA driver, with additional handling for the external container to store the intermediate values and cumulative sensitivities per time step. @TobiKattmann - the changes to the DA multizone driver have been kept generic, they should be transferrable for CHT problems. Adjoint gradients for both dynamic FSI and dynamic CHT have been verified against finite differences. Dynamic adjoint test case has been added similar to an existing steady FSI test. . ## Related Work; #1259 (time averaged history output); #1174 (velocity transfer at FSI boundary). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260
https://github.com/su2code/SU2/pull/1260:852,Usability,guid,guide,852,"## Proposed Changes; The multizone discrete adjoint driver is extended for dynamic problems. A time loop is added to the multizone DA driver, with additional handling for the external container to store the intermediate values and cumulative sensitivities per time step. @TobiKattmann - the changes to the DA multizone driver have been kept generic, they should be transferrable for CHT problems. Adjoint gradients for both dynamic FSI and dynamic CHT have been verified against finite differences. Dynamic adjoint test case has been added similar to an existing steady FSI test. . ## Related Work; #1259 (time averaged history output); #1174 (velocity transfer at FSI boundary). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260
https://github.com/su2code/SU2/pull/1260:1143,Usability,simpl,simply,1143,"## Proposed Changes; The multizone discrete adjoint driver is extended for dynamic problems. A time loop is added to the multizone DA driver, with additional handling for the external container to store the intermediate values and cumulative sensitivities per time step. @TobiKattmann - the changes to the DA multizone driver have been kept generic, they should be transferrable for CHT problems. Adjoint gradients for both dynamic FSI and dynamic CHT have been verified against finite differences. Dynamic adjoint test case has been added similar to an existing steady FSI test. . ## Related Work; #1259 (time averaged history output); #1174 (velocity transfer at FSI boundary). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260
https://github.com/su2code/SU2/issues/1261:3942,Availability,echo,echo,3942,"measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 100`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below).; ; ## Serial Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `SU2_CFD unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Memory measurement; I measured the memory usage with a minutely cronjob of the following snippet:. ```; #!/bin/bash. dir=/path/to/testdir. #list of PIDs:; pid_list='XXXX XXXX'. cd $dir; for PID in $pid_list; do; 	now=$(date +""%Y%m%d%H%M""); 	current_kb=$(pmap $PID| tail -n 1 | awk '{print $3}') # current memory; 	echo $now,$current_kb >> memory_history_$PID.csv; done; ```. **Desktop (please complete the following information):**; - OS: openSUSE Leap 15.2; - C++ compiler and version: gcc 7.5.0; - MPI implementation and version: OpenMPI 4.1.0; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261
https://github.com/su2code/SU2/issues/1261:59,Deployability,continuous,continuously,59,"# Describe the bug. **Issue**; The memory usage of SU2_CFD continuously grows over time and is most noticeable when writing out files at high frequency. This caught my attention when cluster jobs with higher output frequency were consistently exceeding memory limits after a certain amount of time, leading to the job being killed. The same configuration with a lower output frequency can run significantly more iterations without exceeding limits. I may be missing something, but it seems like there is a potential memory leak dependent on the output frequency, which I've documented in this report. **Expected**; Memory usage remains steady over time and does not significantly change with output frequency. **Local tests**; I was able to reproduce the issue locally on a workstation using the [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012), whereby all 2200 time iterations are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261
https://github.com/su2code/SU2/issues/1261:341,Deployability,configurat,configuration,341,"# Describe the bug. **Issue**; The memory usage of SU2_CFD continuously grows over time and is most noticeable when writing out files at high frequency. This caught my attention when cluster jobs with higher output frequency were consistently exceeding memory limits after a certain amount of time, leading to the job being killed. The same configuration with a lower output frequency can run significantly more iterations without exceeding limits. I may be missing something, but it seems like there is a potential memory leak dependent on the output frequency, which I've documented in this report. **Expected**; Memory usage remains steady over time and does not significantly change with output frequency. **Local tests**; I was able to reproduce the issue locally on a workstation using the [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012), whereby all 2200 time iterations are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261
https://github.com/su2code/SU2/issues/1261:528,Integrability,depend,dependent,528,"# Describe the bug. **Issue**; The memory usage of SU2_CFD continuously grows over time and is most noticeable when writing out files at high frequency. This caught my attention when cluster jobs with higher output frequency were consistently exceeding memory limits after a certain amount of time, leading to the job being killed. The same configuration with a lower output frequency can run significantly more iterations without exceeding limits. I may be missing something, but it seems like there is a potential memory leak dependent on the output frequency, which I've documented in this report. **Expected**; Memory usage remains steady over time and does not significantly change with output frequency. **Local tests**; I was able to reproduce the issue locally on a workstation using the [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012), whereby all 2200 time iterations are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261
https://github.com/su2code/SU2/issues/1261:341,Modifiability,config,configuration,341,"# Describe the bug. **Issue**; The memory usage of SU2_CFD continuously grows over time and is most noticeable when writing out files at high frequency. This caught my attention when cluster jobs with higher output frequency were consistently exceeding memory limits after a certain amount of time, leading to the job being killed. The same configuration with a lower output frequency can run significantly more iterations without exceeding limits. I may be missing something, but it seems like there is a potential memory leak dependent on the output frequency, which I've documented in this report. **Expected**; Memory usage remains steady over time and does not significantly change with output frequency. **Local tests**; I was able to reproduce the issue locally on a workstation using the [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012), whereby all 2200 time iterations are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261
https://github.com/su2code/SU2/issues/1261:1301,Modifiability,config,config,1301,"iguration with a lower output frequency can run significantly more iterations without exceeding limits. I may be missing something, but it seems like there is a potential memory leak dependent on the output frequency, which I've documented in this report. **Expected**; Memory usage remains steady over time and does not significantly change with output frequency. **Local tests**; I was able to reproduce the issue locally on a workstation using the [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012), whereby all 2200 time iterations are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261
https://github.com/su2code/SU2/issues/1261:1975,Modifiability,config,config,1975," are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCH",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261
https://github.com/su2code/SU2/issues/1261:2063,Modifiability,config,config,2063,"er time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`;",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261
https://github.com/su2code/SU2/issues/1261:2284,Modifiability,config,config,2284,"he config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 100`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below).; ; ## Serial Steady Freq=1; * Following cha",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261
https://github.com/su2code/SU2/issues/1261:2527,Modifiability,config,config,2527,"This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 100`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below).; ; ## Serial Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `SU2_CFD unsteady_naca0012.cfg`; * Take note of PIDs for me",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261
https://github.com/su2code/SU2/issues/1261:2921,Modifiability,config,config,2921,"estart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 100`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below).; ; ## Serial Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `SU2_CFD unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Memory measurement; I measured the memory usage with a minutely cronjob of the following snippet:. ```; #!/bin/bash. dir=/path/to/testdir. #list of PIDs:; pid_list='XXXX XXXX'. cd $dir; for PID in $pid_list; do; 	now=$(date +""%Y%m%d%H%M""); 	current_kb=$(pmap $PID| tail -n 1 | awk '{print $3}') # current memory; 	echo $now,$current_kb >> memory_history_$PID.cs",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261
https://github.com/su2code/SU2/issues/1261:3316,Modifiability,config,config,3316,"measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 100`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below).; ; ## Serial Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `SU2_CFD unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Memory measurement; I measured the memory usage with a minutely cronjob of the following snippet:. ```; #!/bin/bash. dir=/path/to/testdir. #list of PIDs:; pid_list='XXXX XXXX'. cd $dir; for PID in $pid_list; do; 	now=$(date +""%Y%m%d%H%M""); 	current_kb=$(pmap $PID| tail -n 1 | awk '{print $3}') # current memory; 	echo $now,$current_kb >> memory_history_$PID.csv; done; ```. **Desktop (please complete the following information):**; - OS: openSUSE Leap 15.2; - C++ compiler and version: gcc 7.5.0; - MPI implementation and version: OpenMPI 4.1.0; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261
https://github.com/su2code/SU2/issues/1261:954,Performance,perform,performed,954,"# Describe the bug. **Issue**; The memory usage of SU2_CFD continuously grows over time and is most noticeable when writing out files at high frequency. This caught my attention when cluster jobs with higher output frequency were consistently exceeding memory limits after a certain amount of time, leading to the job being killed. The same configuration with a lower output frequency can run significantly more iterations without exceeding limits. I may be missing something, but it seems like there is a potential memory leak dependent on the output frequency, which I've documented in this report. **Expected**; Memory usage remains steady over time and does not significantly change with output frequency. **Local tests**; I was able to reproduce the issue locally on a workstation using the [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012), whereby all 2200 time iterations are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261
https://github.com/su2code/SU2/issues/1261:718,Testability,test,tests,718,"# Describe the bug. **Issue**; The memory usage of SU2_CFD continuously grows over time and is most noticeable when writing out files at high frequency. This caught my attention when cluster jobs with higher output frequency were consistently exceeding memory limits after a certain amount of time, leading to the job being killed. The same configuration with a lower output frequency can run significantly more iterations without exceeding limits. I may be missing something, but it seems like there is a potential memory leak dependent on the output frequency, which I've documented in this report. **Expected**; Memory usage remains steady over time and does not significantly change with output frequency. **Local tests**; I was able to reproduce the issue locally on a workstation using the [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012), whereby all 2200 time iterations are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261
https://github.com/su2code/SU2/issues/1261:3758,Testability,test,testdir,3758,"measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 100`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below).; ; ## Serial Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `SU2_CFD unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Memory measurement; I measured the memory usage with a minutely cronjob of the following snippet:. ```; #!/bin/bash. dir=/path/to/testdir. #list of PIDs:; pid_list='XXXX XXXX'. cd $dir; for PID in $pid_list; do; 	now=$(date +""%Y%m%d%H%M""); 	current_kb=$(pmap $PID| tail -n 1 | awk '{print $3}') # current memory; 	echo $now,$current_kb >> memory_history_$PID.csv; done; ```. **Desktop (please complete the following information):**; - OS: openSUSE Leap 15.2; - C++ compiler and version: gcc 7.5.0; - MPI implementation and version: OpenMPI 4.1.0; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261
https://github.com/su2code/SU2/issues/1262:2756,Availability,down,down,2756,"riants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_AD.cpp` into new driver classes, e.g. `CDeformationDriver` and `CDiscAdjProjectionDriver`, broken down into pre-processing, execution, output, and postprocessing.; - Exposing these new driver classes to Python through a SWIG `.i` file. Beyond offering a solution to the problem described above, allowing the complete optimisation iteration to be controlled externally (for example by an MDO framework), this might in the long term also allow providing deformations to the `SU2_DEF` routine directly in Python, as an alternative to the surface deformation file. Similarly, the surface sensitivities resulting from `SU2_DOT_AD` could be accessed directly in Python for post-processing. **Alternatives**; The proposed solution is hopefully a starting point for some discussion, should there be interest in the issue. Suggestions which could help with the refinement and implementation of the proposed solution, or any alternative, would be very welcome. **Disclaimer**; Please excuse the long read. My understanding of the inner workings of SU2 is limited, therefore I have tried to give a complete desc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262
https://github.com/su2code/SU2/issues/1262:830,Deployability,Update,Update,830,"**Context**; I am working in a parallel MDO framework where one or several instances of SU2 (corresponding to different operating cases) can coupled with other solvers and tools, to perform coupled aero-structural shape optimisation. . The framework initialises MPI and assigns processors to the different solvers and tools as required. The SU2 instances are initialised and controlled through Python, and given a communicator for the relevant subset of the MPI processes. . **Issue**; Shape optimisation with SU2 (using discrete adjoints) require four operations at each major optimisation iteration:. 1. `SU2_DEF`: Deform the mesh according to the new design variables (or _design deformations_, in contrast to e.g. the _structural deformations_ in an aeroelastic analysis), and output the deformed mesh to file,; 2. `SU2_CFD`: Update the primal solution, which may include a mesh deformation due to structural deformations in an aeroelastic analysis, and output the converged state to file,; 3. `SU2_CFD_AD`: Update the discrete adjoint solution corresponding to the converged primal solution, once for each objective function of interest, and output the converged adjoints to file,; 4. `SU2_DOT_AD`: Calculate the surface sensititivities from the discrete adjoint solution (from what I can gather, this step is required in the discrete-adjoint sensitivity analysis to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262
https://github.com/su2code/SU2/issues/1262:1012,Deployability,Update,Update,1012,"corresponding to different operating cases) can coupled with other solvers and tools, to perform coupled aero-structural shape optimisation. . The framework initialises MPI and assigns processors to the different solvers and tools as required. The SU2 instances are initialised and controlled through Python, and given a communicator for the relevant subset of the MPI processes. . **Issue**; Shape optimisation with SU2 (using discrete adjoints) require four operations at each major optimisation iteration:. 1. `SU2_DEF`: Deform the mesh according to the new design variables (or _design deformations_, in contrast to e.g. the _structural deformations_ in an aeroelastic analysis), and output the deformed mesh to file,; 2. `SU2_CFD`: Update the primal solution, which may include a mesh deformation due to structural deformations in an aeroelastic analysis, and output the converged state to file,; 3. `SU2_CFD_AD`: Update the discrete adjoint solution corresponding to the converged primal solution, once for each objective function of interest, and output the converged adjoints to file,; 4. `SU2_DOT_AD`: Calculate the surface sensititivities from the discrete adjoint solution (from what I can gather, this step is required in the discrete-adjoint sensitivity analysis to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262
https://github.com/su2code/SU2/issues/1262:1580,Integrability,wrap,wrapper,1580,"n variables (or _design deformations_, in contrast to e.g. the _structural deformations_ in an aeroelastic analysis), and output the deformed mesh to file,; 2. `SU2_CFD`: Update the primal solution, which may include a mesh deformation due to structural deformations in an aeroelastic analysis, and output the converged state to file,; 3. `SU2_CFD_AD`: Update the discrete adjoint solution corresponding to the converged primal solution, once for each objective function of interest, and output the converged adjoints to file,; 4. `SU2_DOT_AD`: Calculate the surface sensititivities from the discrete adjoint solution (from what I can gather, this step is required in the discrete-adjoint sensitivity analysis to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_A",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262
https://github.com/su2code/SU2/issues/1262:2367,Integrability,wrap,wrappers,2367,"to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_AD.cpp` into new driver classes, e.g. `CDeformationDriver` and `CDiscAdjProjectionDriver`, broken down into pre-processing, execution, output, and postprocessing.; - Exposing these new driver classes to Python through a SWIG `.i` file. Beyond offering a solution to the problem described above, allowing the complete optimisation iteration to be controlled externally (for example by an MDO framework), this might in the long term also allow providing deformations to the `SU2_DEF` routine directly in Python, as an alternative to the surface deformation file. Similarly, the surface sensitivities resulting from `SU2_DOT_AD` could be accessed directly in Python for post-processing. **Alternatives**; The propos",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262
https://github.com/su2code/SU2/issues/1262:3140,Integrability,rout,routine,3140,"n the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_AD.cpp` into new driver classes, e.g. `CDeformationDriver` and `CDiscAdjProjectionDriver`, broken down into pre-processing, execution, output, and postprocessing.; - Exposing these new driver classes to Python through a SWIG `.i` file. Beyond offering a solution to the problem described above, allowing the complete optimisation iteration to be controlled externally (for example by an MDO framework), this might in the long term also allow providing deformations to the `SU2_DEF` routine directly in Python, as an alternative to the surface deformation file. Similarly, the surface sensitivities resulting from `SU2_DOT_AD` could be accessed directly in Python for post-processing. **Alternatives**; The proposed solution is hopefully a starting point for some discussion, should there be interest in the issue. Suggestions which could help with the refinement and implementation of the proposed solution, or any alternative, would be very welcome. **Disclaimer**; Please excuse the long read. My understanding of the inner workings of SU2 is limited, therefore I have tried to give a complete description of the assumptions that have led to the issue and the proposed solution. Please let me know if there are mistakes, or if further detail can be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262
https://github.com/su2code/SU2/issues/1262:661,Modifiability,variab,variables,661,"**Context**; I am working in a parallel MDO framework where one or several instances of SU2 (corresponding to different operating cases) can coupled with other solvers and tools, to perform coupled aero-structural shape optimisation. . The framework initialises MPI and assigns processors to the different solvers and tools as required. The SU2 instances are initialised and controlled through Python, and given a communicator for the relevant subset of the MPI processes. . **Issue**; Shape optimisation with SU2 (using discrete adjoints) require four operations at each major optimisation iteration:. 1. `SU2_DEF`: Deform the mesh according to the new design variables (or _design deformations_, in contrast to e.g. the _structural deformations_ in an aeroelastic analysis), and output the deformed mesh to file,; 2. `SU2_CFD`: Update the primal solution, which may include a mesh deformation due to structural deformations in an aeroelastic analysis, and output the converged state to file,; 3. `SU2_CFD_AD`: Update the discrete adjoint solution corresponding to the converged primal solution, once for each objective function of interest, and output the converged adjoints to file,; 4. `SU2_DOT_AD`: Calculate the surface sensititivities from the discrete adjoint solution (from what I can gather, this step is required in the discrete-adjoint sensitivity analysis to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262
https://github.com/su2code/SU2/issues/1262:2597,Modifiability,Refactor,Refactoring,2597,"h allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_AD.cpp` into new driver classes, e.g. `CDeformationDriver` and `CDiscAdjProjectionDriver`, broken down into pre-processing, execution, output, and postprocessing.; - Exposing these new driver classes to Python through a SWIG `.i` file. Beyond offering a solution to the problem described above, allowing the complete optimisation iteration to be controlled externally (for example by an MDO framework), this might in the long term also allow providing deformations to the `SU2_DEF` routine directly in Python, as an alternative to the surface deformation file. Similarly, the surface sensitivities resulting from `SU2_DOT_AD` could be accessed directly in Python for post-processing. **Alternatives**; The proposed solution is hopefully a starting point for some discussion, should there be interest in the issue. Suggestions which could help with the refinement and implementation of the proposed solution, or any alternative, would be very welcome. **Discla",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262
https://github.com/su2code/SU2/issues/1262:182,Performance,perform,perform,182,"**Context**; I am working in a parallel MDO framework where one or several instances of SU2 (corresponding to different operating cases) can coupled with other solvers and tools, to perform coupled aero-structural shape optimisation. . The framework initialises MPI and assigns processors to the different solvers and tools as required. The SU2 instances are initialised and controlled through Python, and given a communicator for the relevant subset of the MPI processes. . **Issue**; Shape optimisation with SU2 (using discrete adjoints) require four operations at each major optimisation iteration:. 1. `SU2_DEF`: Deform the mesh according to the new design variables (or _design deformations_, in contrast to e.g. the _structural deformations_ in an aeroelastic analysis), and output the deformed mesh to file,; 2. `SU2_CFD`: Update the primal solution, which may include a mesh deformation due to structural deformations in an aeroelastic analysis, and output the converged state to file,; 3. `SU2_CFD_AD`: Update the discrete adjoint solution corresponding to the converged primal solution, once for each objective function of interest, and output the converged adjoints to file,; 4. `SU2_DOT_AD`: Calculate the surface sensititivities from the discrete adjoint solution (from what I can gather, this step is required in the discrete-adjoint sensitivity analysis to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262
https://github.com/su2code/SU2/issues/1262:1588,Security,expose,exposes,1588,"n variables (or _design deformations_, in contrast to e.g. the _structural deformations_ in an aeroelastic analysis), and output the deformed mesh to file,; 2. `SU2_CFD`: Update the primal solution, which may include a mesh deformation due to structural deformations in an aeroelastic analysis, and output the converged state to file,; 3. `SU2_CFD_AD`: Update the discrete adjoint solution corresponding to the converged primal solution, once for each objective function of interest, and output the converged adjoints to file,; 4. `SU2_DOT_AD`: Calculate the surface sensititivities from the discrete adjoint solution (from what I can gather, this step is required in the discrete-adjoint sensitivity analysis to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_A",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262
https://github.com/su2code/SU2/issues/1262:2345,Security,expose,exposed,2345,"to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_AD.cpp` into new driver classes, e.g. `CDeformationDriver` and `CDiscAdjProjectionDriver`, broken down into pre-processing, execution, output, and postprocessing.; - Exposing these new driver classes to Python through a SWIG `.i` file. Beyond offering a solution to the problem described above, allowing the complete optimisation iteration to be controlled externally (for example by an MDO framework), this might in the long term also allow providing deformations to the `SU2_DEF` routine directly in Python, as an alternative to the surface deformation file. Similarly, the surface sensitivities resulting from `SU2_DOT_AD` could be accessed directly in Python for post-processing. **Alternatives**; The propos",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262
https://github.com/su2code/SU2/issues/1262:3293,Security,access,accessed,3293,"n the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_AD.cpp` into new driver classes, e.g. `CDeformationDriver` and `CDiscAdjProjectionDriver`, broken down into pre-processing, execution, output, and postprocessing.; - Exposing these new driver classes to Python through a SWIG `.i` file. Beyond offering a solution to the problem described above, allowing the complete optimisation iteration to be controlled externally (for example by an MDO framework), this might in the long term also allow providing deformations to the `SU2_DEF` routine directly in Python, as an alternative to the surface deformation file. Similarly, the surface sensitivities resulting from `SU2_DOT_AD` could be accessed directly in Python for post-processing. **Alternatives**; The proposed solution is hopefully a starting point for some discussion, should there be interest in the issue. Suggestions which could help with the refinement and implementation of the proposed solution, or any alternative, would be very welcome. **Disclaimer**; Please excuse the long read. My understanding of the inner workings of SU2 is limited, therefore I have tried to give a complete description of the assumptions that have led to the issue and the proposed solution. Please let me know if there are mistakes, or if further detail can be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262
https://github.com/su2code/SU2/pull/1264:209,Availability,error,error,209,"## Proposed Changes; When not restarting unsteady problems, set file iteration to 0 (instead of the -1/-2 logic). ## Related Work; https://www.cfd-online.com/Forums/su2/235485-parabolic-velocity-inlet-profile-error.html. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1264
https://github.com/su2code/SU2/pull/1264:646,Deployability,update,updated,646,"## Proposed Changes; When not restarting unsteady problems, set file iteration to 0 (instead of the -1/-2 logic). ## Related Work; https://www.cfd-online.com/Forums/su2/235485-parabolic-velocity-inlet-profile-error.html. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1264
https://github.com/su2code/SU2/pull/1264:106,Testability,log,logic,106,"## Proposed Changes; When not restarting unsteady problems, set file iteration to 0 (instead of the -1/-2 logic). ## Related Work; https://www.cfd-online.com/Forums/su2/235485-parabolic-velocity-inlet-profile-error.html. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1264
https://github.com/su2code/SU2/pull/1264:573,Testability,test,test,573,"## Proposed Changes; When not restarting unsteady problems, set file iteration to 0 (instead of the -1/-2 logic). ## Related Work; https://www.cfd-online.com/Forums/su2/235485-parabolic-velocity-inlet-profile-error.html. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1264
https://github.com/su2code/SU2/pull/1264:444,Usability,simpl,simply,444,"## Proposed Changes; When not restarting unsteady problems, set file iteration to 0 (instead of the -1/-2 logic). ## Related Work; https://www.cfd-online.com/Forums/su2/235485-parabolic-velocity-inlet-profile-error.html. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1264
https://github.com/su2code/SU2/issues/1265:173,Modifiability,config,config,173,"When SU2 creates an inlet profile file, the values in the file are set to 0.0, expect for the vertex coordinates. The values used to be initialized from MARKER_INLET in the config file. Any particular reason this initialization disappeared? I propose to add this again, and also to add a line to inlet.dat with the names of the variables in the columns so it's easier for users to see what's in the columns.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1265
https://github.com/su2code/SU2/issues/1265:328,Modifiability,variab,variables,328,"When SU2 creates an inlet profile file, the values in the file are set to 0.0, expect for the vertex coordinates. The values used to be initialized from MARKER_INLET in the config file. Any particular reason this initialization disappeared? I propose to add this again, and also to add a line to inlet.dat with the names of the variables in the columns so it's easier for users to see what's in the columns.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1265
https://github.com/su2code/SU2/pull/1266:732,Deployability,update,updated,732,"## Proposed Changes; New output to visualize the coarse grids.; It is based on coloring nodes, which is a little difficult to visualize with Paraview since it interpolates to elements, anyway:; ![image](https://user-images.githubusercontent.com/38071223/115119619-4ae4ed00-9fa1-11eb-8974-5cd6000c5b21.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1266
https://github.com/su2code/SU2/pull/1266:659,Testability,test,test,659,"## Proposed Changes; New output to visualize the coarse grids.; It is based on coloring nodes, which is a little difficult to visualize with Paraview since it interpolates to elements, anyway:; ![image](https://user-images.githubusercontent.com/38071223/115119619-4ae4ed00-9fa1-11eb-8974-5cd6000c5b21.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1266
https://github.com/su2code/SU2/pull/1266:530,Usability,simpl,simply,530,"## Proposed Changes; New output to visualize the coarse grids.; It is based on coloring nodes, which is a little difficult to visualize with Paraview since it interpolates to elements, anyway:; ![image](https://user-images.githubusercontent.com/38071223/115119619-4ae4ed00-9fa1-11eb-8974-5cd6000c5b21.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1266
https://github.com/su2code/SU2/pull/1267:1153,Deployability,update,updated,1153,"## Proposed Changes. 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better. ; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader. ; 3. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to issue #1265 and #1263. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267
https://github.com/su2code/SU2/pull/1267:653,Energy Efficiency,energy,energy,653,"## Proposed Changes. 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better. ; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader. ; 3. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to issue #1265 and #1263. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267
https://github.com/su2code/SU2/pull/1267:202,Integrability,rout,routine,202,"## Proposed Changes. 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better. ; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader. ; 3. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to issue #1265 and #1263. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267
https://github.com/su2code/SU2/pull/1267:154,Modifiability,config,config,154,"## Proposed Changes. 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better. ; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader. ; 3. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to issue #1265 and #1263. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267
https://github.com/su2code/SU2/pull/1267:1080,Testability,test,test,1080,"## Proposed Changes. 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better. ; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader. ; 3. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to issue #1265 and #1263. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267
https://github.com/su2code/SU2/pull/1267:951,Usability,simpl,simply,951,"## Proposed Changes. 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better. ; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader. ; 3. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to issue #1265 and #1263. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267
https://github.com/su2code/SU2/pull/1268:1148,Deployability,update,updated,1148,"## Proposed Changes. . 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better.; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader.; 4. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to #1263 and #1265 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268
https://github.com/su2code/SU2/pull/1268:653,Energy Efficiency,energy,energy,653,"## Proposed Changes. . 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better.; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader.; 4. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to #1263 and #1265 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268
https://github.com/su2code/SU2/pull/1268:204,Integrability,rout,routine,204,"## Proposed Changes. . 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better.; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader.; 4. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to #1263 and #1265 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268
https://github.com/su2code/SU2/pull/1268:156,Modifiability,config,config,156,"## Proposed Changes. . 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better.; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader.; 4. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to #1263 and #1265 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268
https://github.com/su2code/SU2/pull/1268:1075,Testability,test,test,1075,"## Proposed Changes. . 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better.; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader.; 4. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to #1263 and #1265 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268
https://github.com/su2code/SU2/pull/1268:946,Usability,simpl,simply,946,"## Proposed Changes. . 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better.; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader.; 4. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to #1263 and #1265 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268
https://github.com/su2code/SU2/pull/1271:586,Deployability,update,update,586,"## Proposed Changes; This PR fixes the version numbers of files and test cases up to the 7.1.1. (Mostly in NEMO) All files should be consistent now, but I may have missed some. . I am not sure if the test cases were intentionally left old, but I can change that. EDIT:; After taking a look through, I used my best judgement regarding what is up-to-date. The biggest issue I had was in the sliding_interface sections where configs for Kind_Interpolation= Weight-Average and Nearest-Neighbor. In this case I assumed that these options or used interchangeably among test cases, that I can update both _NN and _WA. I did similar things for some SST vs SA options. Below are the only cases that Im not sure if they are being used/up-to-date with develop: . fea_fsi/SquareCyl_Beam/; incomp_rans/rough_wall/ [pretty sure this is up-to-date, but not used in regressions]; optimization_euler/steady_inverse_design/; sliding_interface/incompressible_unsteady/ [Commented out, so I left this one alone]; sliding_interface/single_stage/; turbomachinery/centrifugal_*/ . I also went ahead and removed:; rans/naca0012/*_sa_neg [SA_neg is already used in turb_NACA0012_sa.cfg] ?; rans/naca0012/*_sa_binary. ## Related Work; This is a chore. ## PR Checklist; - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271
https://github.com/su2code/SU2/pull/1271:422,Modifiability,config,configs,422,"## Proposed Changes; This PR fixes the version numbers of files and test cases up to the 7.1.1. (Mostly in NEMO) All files should be consistent now, but I may have missed some. . I am not sure if the test cases were intentionally left old, but I can change that. EDIT:; After taking a look through, I used my best judgement regarding what is up-to-date. The biggest issue I had was in the sliding_interface sections where configs for Kind_Interpolation= Weight-Average and Nearest-Neighbor. In this case I assumed that these options or used interchangeably among test cases, that I can update both _NN and _WA. I did similar things for some SST vs SA options. Below are the only cases that Im not sure if they are being used/up-to-date with develop: . fea_fsi/SquareCyl_Beam/; incomp_rans/rough_wall/ [pretty sure this is up-to-date, but not used in regressions]; optimization_euler/steady_inverse_design/; sliding_interface/incompressible_unsteady/ [Commented out, so I left this one alone]; sliding_interface/single_stage/; turbomachinery/centrifugal_*/ . I also went ahead and removed:; rans/naca0012/*_sa_neg [SA_neg is already used in turb_NACA0012_sa.cfg] ?; rans/naca0012/*_sa_binary. ## Related Work; This is a chore. ## PR Checklist; - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271
https://github.com/su2code/SU2/pull/1271:68,Testability,test,test,68,"## Proposed Changes; This PR fixes the version numbers of files and test cases up to the 7.1.1. (Mostly in NEMO) All files should be consistent now, but I may have missed some. . I am not sure if the test cases were intentionally left old, but I can change that. EDIT:; After taking a look through, I used my best judgement regarding what is up-to-date. The biggest issue I had was in the sliding_interface sections where configs for Kind_Interpolation= Weight-Average and Nearest-Neighbor. In this case I assumed that these options or used interchangeably among test cases, that I can update both _NN and _WA. I did similar things for some SST vs SA options. Below are the only cases that Im not sure if they are being used/up-to-date with develop: . fea_fsi/SquareCyl_Beam/; incomp_rans/rough_wall/ [pretty sure this is up-to-date, but not used in regressions]; optimization_euler/steady_inverse_design/; sliding_interface/incompressible_unsteady/ [Commented out, so I left this one alone]; sliding_interface/single_stage/; turbomachinery/centrifugal_*/ . I also went ahead and removed:; rans/naca0012/*_sa_neg [SA_neg is already used in turb_NACA0012_sa.cfg] ?; rans/naca0012/*_sa_binary. ## Related Work; This is a chore. ## PR Checklist; - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271
https://github.com/su2code/SU2/pull/1271:200,Testability,test,test,200,"## Proposed Changes; This PR fixes the version numbers of files and test cases up to the 7.1.1. (Mostly in NEMO) All files should be consistent now, but I may have missed some. . I am not sure if the test cases were intentionally left old, but I can change that. EDIT:; After taking a look through, I used my best judgement regarding what is up-to-date. The biggest issue I had was in the sliding_interface sections where configs for Kind_Interpolation= Weight-Average and Nearest-Neighbor. In this case I assumed that these options or used interchangeably among test cases, that I can update both _NN and _WA. I did similar things for some SST vs SA options. Below are the only cases that Im not sure if they are being used/up-to-date with develop: . fea_fsi/SquareCyl_Beam/; incomp_rans/rough_wall/ [pretty sure this is up-to-date, but not used in regressions]; optimization_euler/steady_inverse_design/; sliding_interface/incompressible_unsteady/ [Commented out, so I left this one alone]; sliding_interface/single_stage/; turbomachinery/centrifugal_*/ . I also went ahead and removed:; rans/naca0012/*_sa_neg [SA_neg is already used in turb_NACA0012_sa.cfg] ?; rans/naca0012/*_sa_binary. ## Related Work; This is a chore. ## PR Checklist; - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271
https://github.com/su2code/SU2/pull/1271:563,Testability,test,test,563,"## Proposed Changes; This PR fixes the version numbers of files and test cases up to the 7.1.1. (Mostly in NEMO) All files should be consistent now, but I may have missed some. . I am not sure if the test cases were intentionally left old, but I can change that. EDIT:; After taking a look through, I used my best judgement regarding what is up-to-date. The biggest issue I had was in the sliding_interface sections where configs for Kind_Interpolation= Weight-Average and Nearest-Neighbor. In this case I assumed that these options or used interchangeably among test cases, that I can update both _NN and _WA. I did similar things for some SST vs SA options. Below are the only cases that Im not sure if they are being used/up-to-date with develop: . fea_fsi/SquareCyl_Beam/; incomp_rans/rough_wall/ [pretty sure this is up-to-date, but not used in regressions]; optimization_euler/steady_inverse_design/; sliding_interface/incompressible_unsteady/ [Commented out, so I left this one alone]; sliding_interface/single_stage/; turbomachinery/centrifugal_*/ . I also went ahead and removed:; rans/naca0012/*_sa_neg [SA_neg is already used in turb_NACA0012_sa.cfg] ?; rans/naca0012/*_sa_binary. ## Related Work; This is a chore. ## PR Checklist; - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271
https://github.com/su2code/SU2/pull/1271:1451,Usability,simpl,simply,1451,"## Proposed Changes; This PR fixes the version numbers of files and test cases up to the 7.1.1. (Mostly in NEMO) All files should be consistent now, but I may have missed some. . I am not sure if the test cases were intentionally left old, but I can change that. EDIT:; After taking a look through, I used my best judgement regarding what is up-to-date. The biggest issue I had was in the sliding_interface sections where configs for Kind_Interpolation= Weight-Average and Nearest-Neighbor. In this case I assumed that these options or used interchangeably among test cases, that I can update both _NN and _WA. I did similar things for some SST vs SA options. Below are the only cases that Im not sure if they are being used/up-to-date with develop: . fea_fsi/SquareCyl_Beam/; incomp_rans/rough_wall/ [pretty sure this is up-to-date, but not used in regressions]; optimization_euler/steady_inverse_design/; sliding_interface/incompressible_unsteady/ [Commented out, so I left this one alone]; sliding_interface/single_stage/; turbomachinery/centrifugal_*/ . I also went ahead and removed:; rans/naca0012/*_sa_neg [SA_neg is already used in turb_NACA0012_sa.cfg] ?; rans/naca0012/*_sa_binary. ## Related Work; This is a chore. ## PR Checklist; - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271
https://github.com/su2code/SU2/issues/1273:124,Availability,error,error,124,"**Describe the bug**; When I try to create the OpenMP version of the adjoint solver with the Intel compiler, I get compiler error in opdi. Here are a couple of examples, which are all of the same error type. ../SU2/externals/opdi/include/opdi/backend/macro/dataTools.hpp(39): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(parallelData). ../SU2/externals/opdi/include/opdi/backend/macro/implicitBarrierTools.hpp(41): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(implicitBarrierStack). ../SU2/externals/opdi/include/opdi/logic/omp/adjointAccessControl.hpp(47): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(currentAdjointAccess). **To Reproduce**; Use the following build options (I don't think the mkl option is needed, but that is what I used). export CXX=mpiicpc; export CC=mpiicc; export CXXFLAGS=""-O2""; export CFLAGS=""-O2"". ./meson.py ../Build_MKL --prefix=/home/whatever -Denable-mkl=true -Dcustom-mpi=true -Dwith-omp=true -Denable-autodiff=true -Denable-directdiff=true; ./ninja -C ../Build_MKL install. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: Intel 19.1.0.166 20191121; - MPI implementation and version: Intel MPI; - SU2 Version: Latest develop version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1273
https://github.com/su2code/SU2/issues/1273:196,Availability,error,error,196,"**Describe the bug**; When I try to create the OpenMP version of the adjoint solver with the Intel compiler, I get compiler error in opdi. Here are a couple of examples, which are all of the same error type. ../SU2/externals/opdi/include/opdi/backend/macro/dataTools.hpp(39): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(parallelData). ../SU2/externals/opdi/include/opdi/backend/macro/implicitBarrierTools.hpp(41): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(implicitBarrierStack). ../SU2/externals/opdi/include/opdi/logic/omp/adjointAccessControl.hpp(47): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(currentAdjointAccess). **To Reproduce**; Use the following build options (I don't think the mkl option is needed, but that is what I used). export CXX=mpiicpc; export CC=mpiicc; export CXXFLAGS=""-O2""; export CFLAGS=""-O2"". ./meson.py ../Build_MKL --prefix=/home/whatever -Denable-mkl=true -Dcustom-mpi=true -Dwith-omp=true -Denable-autodiff=true -Denable-directdiff=true; ./ninja -C ../Build_MKL install. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: Intel 19.1.0.166 20191121; - MPI implementation and version: Intel MPI; - SU2 Version: Latest develop version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1273
https://github.com/su2code/SU2/issues/1273:276,Availability,error,error,276,"**Describe the bug**; When I try to create the OpenMP version of the adjoint solver with the Intel compiler, I get compiler error in opdi. Here are a couple of examples, which are all of the same error type. ../SU2/externals/opdi/include/opdi/backend/macro/dataTools.hpp(39): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(parallelData). ../SU2/externals/opdi/include/opdi/backend/macro/implicitBarrierTools.hpp(41): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(implicitBarrierStack). ../SU2/externals/opdi/include/opdi/logic/omp/adjointAccessControl.hpp(47): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(currentAdjointAccess). **To Reproduce**; Use the following build options (I don't think the mkl option is needed, but that is what I used). export CXX=mpiicpc; export CC=mpiicc; export CXXFLAGS=""-O2""; export CFLAGS=""-O2"". ./meson.py ../Build_MKL --prefix=/home/whatever -Denable-mkl=true -Dcustom-mpi=true -Dwith-omp=true -Denable-autodiff=true -Denable-directdiff=true; ./ninja -C ../Build_MKL install. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: Intel 19.1.0.166 20191121; - MPI implementation and version: Intel MPI; - SU2 Version: Latest develop version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1273
https://github.com/su2code/SU2/issues/1273:470,Availability,error,error,470,"**Describe the bug**; When I try to create the OpenMP version of the adjoint solver with the Intel compiler, I get compiler error in opdi. Here are a couple of examples, which are all of the same error type. ../SU2/externals/opdi/include/opdi/backend/macro/dataTools.hpp(39): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(parallelData). ../SU2/externals/opdi/include/opdi/backend/macro/implicitBarrierTools.hpp(41): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(implicitBarrierStack). ../SU2/externals/opdi/include/opdi/logic/omp/adjointAccessControl.hpp(47): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(currentAdjointAccess). **To Reproduce**; Use the following build options (I don't think the mkl option is needed, but that is what I used). export CXX=mpiicpc; export CC=mpiicc; export CXXFLAGS=""-O2""; export CFLAGS=""-O2"". ./meson.py ../Build_MKL --prefix=/home/whatever -Denable-mkl=true -Dcustom-mpi=true -Dwith-omp=true -Denable-autodiff=true -Denable-directdiff=true; ./ninja -C ../Build_MKL install. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: Intel 19.1.0.166 20191121; - MPI implementation and version: Intel MPI; - SU2 Version: Latest develop version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1273
https://github.com/su2code/SU2/issues/1273:668,Availability,error,error,668,"**Describe the bug**; When I try to create the OpenMP version of the adjoint solver with the Intel compiler, I get compiler error in opdi. Here are a couple of examples, which are all of the same error type. ../SU2/externals/opdi/include/opdi/backend/macro/dataTools.hpp(39): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(parallelData). ../SU2/externals/opdi/include/opdi/backend/macro/implicitBarrierTools.hpp(41): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(implicitBarrierStack). ../SU2/externals/opdi/include/opdi/logic/omp/adjointAccessControl.hpp(47): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(currentAdjointAccess). **To Reproduce**; Use the following build options (I don't think the mkl option is needed, but that is what I used). export CXX=mpiicpc; export CC=mpiicc; export CXXFLAGS=""-O2""; export CFLAGS=""-O2"". ./meson.py ../Build_MKL --prefix=/home/whatever -Denable-mkl=true -Dcustom-mpi=true -Dwith-omp=true -Denable-autodiff=true -Denable-directdiff=true; ./ninja -C ../Build_MKL install. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: Intel 19.1.0.166 20191121; - MPI implementation and version: Intel MPI; - SU2 Version: Latest develop version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1273
https://github.com/su2code/SU2/issues/1273:1163,Deployability,install,install,1163,"**Describe the bug**; When I try to create the OpenMP version of the adjoint solver with the Intel compiler, I get compiler error in opdi. Here are a couple of examples, which are all of the same error type. ../SU2/externals/opdi/include/opdi/backend/macro/dataTools.hpp(39): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(parallelData). ../SU2/externals/opdi/include/opdi/backend/macro/implicitBarrierTools.hpp(41): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(implicitBarrierStack). ../SU2/externals/opdi/include/opdi/logic/omp/adjointAccessControl.hpp(47): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(currentAdjointAccess). **To Reproduce**; Use the following build options (I don't think the mkl option is needed, but that is what I used). export CXX=mpiicpc; export CC=mpiicc; export CXXFLAGS=""-O2""; export CFLAGS=""-O2"". ./meson.py ../Build_MKL --prefix=/home/whatever -Denable-mkl=true -Dcustom-mpi=true -Dwith-omp=true -Denable-autodiff=true -Denable-directdiff=true; ./ninja -C ../Build_MKL install. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: Intel 19.1.0.166 20191121; - MPI implementation and version: Intel MPI; - SU2 Version: Latest develop version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1273
https://github.com/su2code/SU2/issues/1273:297,Modifiability,variab,variable,297,"**Describe the bug**; When I try to create the OpenMP version of the adjoint solver with the Intel compiler, I get compiler error in opdi. Here are a couple of examples, which are all of the same error type. ../SU2/externals/opdi/include/opdi/backend/macro/dataTools.hpp(39): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(parallelData). ../SU2/externals/opdi/include/opdi/backend/macro/implicitBarrierTools.hpp(41): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(implicitBarrierStack). ../SU2/externals/opdi/include/opdi/logic/omp/adjointAccessControl.hpp(47): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(currentAdjointAccess). **To Reproduce**; Use the following build options (I don't think the mkl option is needed, but that is what I used). export CXX=mpiicpc; export CC=mpiicc; export CXXFLAGS=""-O2""; export CFLAGS=""-O2"". ./meson.py ../Build_MKL --prefix=/home/whatever -Denable-mkl=true -Dcustom-mpi=true -Dwith-omp=true -Denable-autodiff=true -Denable-directdiff=true; ./ninja -C ../Build_MKL install. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: Intel 19.1.0.166 20191121; - MPI implementation and version: Intel MPI; - SU2 Version: Latest develop version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1273
https://github.com/su2code/SU2/issues/1273:491,Modifiability,variab,variable,491,"**Describe the bug**; When I try to create the OpenMP version of the adjoint solver with the Intel compiler, I get compiler error in opdi. Here are a couple of examples, which are all of the same error type. ../SU2/externals/opdi/include/opdi/backend/macro/dataTools.hpp(39): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(parallelData). ../SU2/externals/opdi/include/opdi/backend/macro/implicitBarrierTools.hpp(41): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(implicitBarrierStack). ../SU2/externals/opdi/include/opdi/logic/omp/adjointAccessControl.hpp(47): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(currentAdjointAccess). **To Reproduce**; Use the following build options (I don't think the mkl option is needed, but that is what I used). export CXX=mpiicpc; export CC=mpiicc; export CXXFLAGS=""-O2""; export CFLAGS=""-O2"". ./meson.py ../Build_MKL --prefix=/home/whatever -Denable-mkl=true -Dcustom-mpi=true -Dwith-omp=true -Denable-autodiff=true -Denable-directdiff=true; ./ninja -C ../Build_MKL install. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: Intel 19.1.0.166 20191121; - MPI implementation and version: Intel MPI; - SU2 Version: Latest develop version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1273
https://github.com/su2code/SU2/issues/1273:689,Modifiability,variab,variable,689,"**Describe the bug**; When I try to create the OpenMP version of the adjoint solver with the Intel compiler, I get compiler error in opdi. Here are a couple of examples, which are all of the same error type. ../SU2/externals/opdi/include/opdi/backend/macro/dataTools.hpp(39): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(parallelData). ../SU2/externals/opdi/include/opdi/backend/macro/implicitBarrierTools.hpp(41): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(implicitBarrierStack). ../SU2/externals/opdi/include/opdi/logic/omp/adjointAccessControl.hpp(47): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(currentAdjointAccess). **To Reproduce**; Use the following build options (I don't think the mkl option is needed, but that is what I used). export CXX=mpiicpc; export CC=mpiicc; export CXXFLAGS=""-O2""; export CFLAGS=""-O2"". ./meson.py ../Build_MKL --prefix=/home/whatever -Denable-mkl=true -Dcustom-mpi=true -Dwith-omp=true -Denable-autodiff=true -Denable-directdiff=true; ./ninja -C ../Build_MKL install. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: Intel 19.1.0.166 20191121; - MPI implementation and version: Intel MPI; - SU2 Version: Latest develop version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1273
https://github.com/su2code/SU2/issues/1273:628,Testability,log,logic,628,"**Describe the bug**; When I try to create the OpenMP version of the adjoint solver with the Intel compiler, I get compiler error in opdi. Here are a couple of examples, which are all of the same error type. ../SU2/externals/opdi/include/opdi/backend/macro/dataTools.hpp(39): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(parallelData). ../SU2/externals/opdi/include/opdi/backend/macro/implicitBarrierTools.hpp(41): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(implicitBarrierStack). ../SU2/externals/opdi/include/opdi/logic/omp/adjointAccessControl.hpp(47): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(currentAdjointAccess). **To Reproduce**; Use the following build options (I don't think the mkl option is needed, but that is what I used). export CXX=mpiicpc; export CC=mpiicc; export CXXFLAGS=""-O2""; export CFLAGS=""-O2"". ./meson.py ../Build_MKL --prefix=/home/whatever -Denable-mkl=true -Dcustom-mpi=true -Dwith-omp=true -Denable-autodiff=true -Denable-directdiff=true; ./ninja -C ../Build_MKL install. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: Intel 19.1.0.166 20191121; - MPI implementation and version: Intel MPI; - SU2 Version: Latest develop version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1273
https://github.com/su2code/SU2/issues/1274:223,Availability,echo,echo,223,"Hi there, . I am trying to get SU2 work with different software, but the path added to the bashrc does not make it recognized in the terminal of the particular software (Engineering Sketch Pad) I try to run, but I when run echo $PATH on other terminals, the PATH is indeed present. I have already tried what it says on the main website of SU2 as well. . ![Screenshot_20210430_114156](https://user-images.githubusercontent.com/80710208/116678111-44933f80-a9a9-11eb-90ff-f71f993ae147.png). ![path_bashrc](https://user-images.githubusercontent.com/80710208/116678350-7efcdc80-a9a9-11eb-85b7-401d6d6760d2.png). Can you please help me with this issue?. Thank you beforehand!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1274
https://github.com/su2code/SU2/issues/1276:65,Integrability,rout,routines,65,"**Describe the bug**; There is a possible bug in the GetP_Matrix routines in the CNumerics class.; After looking into the computations, I think it only gets called in the AUSM schemes for approximate Jacobians, it seems some terms different then the P matrix computation in Roe solver/generalized routine. . When doing invP*P, has a large off-diagonal terms. Im making a note of it here, but will work on verifying/and fixing",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1276
https://github.com/su2code/SU2/issues/1276:297,Integrability,rout,routine,297,"**Describe the bug**; There is a possible bug in the GetP_Matrix routines in the CNumerics class.; After looking into the computations, I think it only gets called in the AUSM schemes for approximate Jacobians, it seems some terms different then the P matrix computation in Roe solver/generalized routine. . When doing invP*P, has a large off-diagonal terms. Im making a note of it here, but will work on verifying/and fixing",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1276
https://github.com/su2code/SU2/pull/1277:28,Modifiability,config,config,28,"Method described below.; No config options needed.; Takes about a minute to interpolate an 8M node mesh to a 70M mesh on 1000 cores.; May or may not add OpenMP to this which would improve scalability.; Restarts are read twice for RANS problems, which is not great for this type of feature...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1277
https://github.com/su2code/SU2/pull/1277:188,Performance,scalab,scalability,188,"Method described below.; No config options needed.; Takes about a minute to interpolate an 8M node mesh to a 70M mesh on 1000 cores.; May or may not add OpenMP to this which would improve scalability.; Restarts are read twice for RANS problems, which is not great for this type of feature...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1277
https://github.com/su2code/SU2/issues/1278:19,Deployability,install,install,19,"I am attempting to install SU2 master branch and/or feature_NEMO branch on a HPC cluster (https://arc.vt.edu/tinkercliffs/). The modules that I am loading prior to installation are listed below:; GCC/10.2.0; OpenMPI/4.0.5-GCC-10.2.0; CMake/3.18.4-GCCcore-10.2.0; Ninja/1.10.1-GCCcore-10.2.0; Python/3.8.6-GCCcore-10.2.0. My meson command is:; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-mpp=true. The ninja subcommand fails because it fails to link various targets (SU2_GEO/src/SU2_GEO, SU2_DOT/src/SU2_DOT, SU2_DEF/src/SU2_DEF, SU2_SOL/src/SU2_SOL, SU2_CFD/src/SU2_CFD) and then proceeds to Linking static target SU2_CFD/src/libSU2core_AD.a where the message appears: 'ninja: build stopped: subcommand failed.'. The reason for failing to link the targets is common in all instances and is shown as '/apps/easybuild/software/tinkercliffs-rome/libevent/2.1.12-GCCcore-10.2.0/lib64: pread failed: Is a directory'. Please let me know if there's a way to get around this issue. . Thanks in advance. **Desktop (please complete the following information):**; - OS: Linux; - C++ compiler and version: GCC 10.2.0; - MPI implementation and version: OpenMPI 4.0.5; - SU2 Version: 7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1278
https://github.com/su2code/SU2/issues/1278:164,Deployability,install,installation,164,"I am attempting to install SU2 master branch and/or feature_NEMO branch on a HPC cluster (https://arc.vt.edu/tinkercliffs/). The modules that I am loading prior to installation are listed below:; GCC/10.2.0; OpenMPI/4.0.5-GCC-10.2.0; CMake/3.18.4-GCCcore-10.2.0; Ninja/1.10.1-GCCcore-10.2.0; Python/3.8.6-GCCcore-10.2.0. My meson command is:; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-mpp=true. The ninja subcommand fails because it fails to link various targets (SU2_GEO/src/SU2_GEO, SU2_DOT/src/SU2_DOT, SU2_DEF/src/SU2_DEF, SU2_SOL/src/SU2_SOL, SU2_CFD/src/SU2_CFD) and then proceeds to Linking static target SU2_CFD/src/libSU2core_AD.a where the message appears: 'ninja: build stopped: subcommand failed.'. The reason for failing to link the targets is common in all instances and is shown as '/apps/easybuild/software/tinkercliffs-rome/libevent/2.1.12-GCCcore-10.2.0/lib64: pread failed: Is a directory'. Please let me know if there's a way to get around this issue. . Thanks in advance. **Desktop (please complete the following information):**; - OS: Linux; - C++ compiler and version: GCC 10.2.0; - MPI implementation and version: OpenMPI 4.0.5; - SU2 Version: 7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1278
https://github.com/su2code/SU2/issues/1278:682,Integrability,message,message,682,"I am attempting to install SU2 master branch and/or feature_NEMO branch on a HPC cluster (https://arc.vt.edu/tinkercliffs/). The modules that I am loading prior to installation are listed below:; GCC/10.2.0; OpenMPI/4.0.5-GCC-10.2.0; CMake/3.18.4-GCCcore-10.2.0; Ninja/1.10.1-GCCcore-10.2.0; Python/3.8.6-GCCcore-10.2.0. My meson command is:; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-mpp=true. The ninja subcommand fails because it fails to link various targets (SU2_GEO/src/SU2_GEO, SU2_DOT/src/SU2_DOT, SU2_DEF/src/SU2_DEF, SU2_SOL/src/SU2_SOL, SU2_CFD/src/SU2_CFD) and then proceeds to Linking static target SU2_CFD/src/libSU2core_AD.a where the message appears: 'ninja: build stopped: subcommand failed.'. The reason for failing to link the targets is common in all instances and is shown as '/apps/easybuild/software/tinkercliffs-rome/libevent/2.1.12-GCCcore-10.2.0/lib64: pread failed: Is a directory'. Please let me know if there's a way to get around this issue. . Thanks in advance. **Desktop (please complete the following information):**; - OS: Linux; - C++ compiler and version: GCC 10.2.0; - MPI implementation and version: OpenMPI 4.0.5; - SU2 Version: 7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1278
https://github.com/su2code/SU2/issues/1278:147,Performance,load,loading,147,"I am attempting to install SU2 master branch and/or feature_NEMO branch on a HPC cluster (https://arc.vt.edu/tinkercliffs/). The modules that I am loading prior to installation are listed below:; GCC/10.2.0; OpenMPI/4.0.5-GCC-10.2.0; CMake/3.18.4-GCCcore-10.2.0; Ninja/1.10.1-GCCcore-10.2.0; Python/3.8.6-GCCcore-10.2.0. My meson command is:; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-mpp=true. The ninja subcommand fails because it fails to link various targets (SU2_GEO/src/SU2_GEO, SU2_DOT/src/SU2_DOT, SU2_DEF/src/SU2_DEF, SU2_SOL/src/SU2_SOL, SU2_CFD/src/SU2_CFD) and then proceeds to Linking static target SU2_CFD/src/libSU2core_AD.a where the message appears: 'ninja: build stopped: subcommand failed.'. The reason for failing to link the targets is common in all instances and is shown as '/apps/easybuild/software/tinkercliffs-rome/libevent/2.1.12-GCCcore-10.2.0/lib64: pread failed: Is a directory'. Please let me know if there's a way to get around this issue. . Thanks in advance. **Desktop (please complete the following information):**; - OS: Linux; - C++ compiler and version: GCC 10.2.0; - MPI implementation and version: OpenMPI 4.0.5; - SU2 Version: 7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1278
https://github.com/su2code/SU2/issues/1279:347,Usability,simpl,simple,347,"**Is your feature request related to a problem? Please describe.**; When using shape_optimization.py with MULTIZONE option enabled on v7.0.6, the script does not copy .cfg files in CONFIG_LIST setting. **Describe the solution you'd like**; I am not too familiar with python so I am not sure about how hard this is to add but it sounds like a very simple addition. Therefore, if shape_optimization.py were to copy the .cfg files in CONFIG_LIST into direct solution directory which is named DIRECT, it would allow multi zone simulations to be run with shape_optimization.py as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279
https://github.com/su2code/SU2/issues/1280:987,Deployability,configurat,configuration,987,"**Issue Description**; Dear all,; my research group and me found a problem when using the JST scheme.; The problem consists in a difference in the skin friction coefficient along the airfoil between 2D and 3D meshes (the 3D one is obtained by extruding the 2D mesh using only 1 cell in the span wise direction).; This difference arises when the JST scheme is used, and it leads to a ~25% of difference in the drag coefficient. In order to better explain what is happening, here is a summary table of the results for the CRM airfoil:; ![roe_jst](https://user-images.githubusercontent.com/53580993/117454345-56935600-af46-11eb-8c2f-7c314376a2a0.png). It is possible to notice that this difference does not emerge if the ROE scheme is used. For the 3D case, the boundary conditions at the side faces of the domain are `MARKER_SYM`, so that we think that this issue could be connected to the #1125 . **To Reproduce**; In order to reproduce the issue, a zip file is attached. It contains the configuration files for the 3D and 2D cases using JST and ROE, and the two grids of the CRM airfoil. It is possible to reproduce this issue also using a different airfoil. [ROEvsJST.zip](https://github.com/su2code/SU2/files/6441697/ROEvsJST.zip). **Desktop:**; - OS: Linux (Ubuntu); - C++ compiler and version: -; - MPI implementation and version: -; - SU2 Version: v7.1.1 and previous. Thanks for your help.; Ettore Saetta. Theoretical and Applied Aerodynamics Research Group (TAARG); University of Naples Federico II",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280
https://github.com/su2code/SU2/issues/1280:987,Modifiability,config,configuration,987,"**Issue Description**; Dear all,; my research group and me found a problem when using the JST scheme.; The problem consists in a difference in the skin friction coefficient along the airfoil between 2D and 3D meshes (the 3D one is obtained by extruding the 2D mesh using only 1 cell in the span wise direction).; This difference arises when the JST scheme is used, and it leads to a ~25% of difference in the drag coefficient. In order to better explain what is happening, here is a summary table of the results for the CRM airfoil:; ![roe_jst](https://user-images.githubusercontent.com/53580993/117454345-56935600-af46-11eb-8c2f-7c314376a2a0.png). It is possible to notice that this difference does not emerge if the ROE scheme is used. For the 3D case, the boundary conditions at the side faces of the domain are `MARKER_SYM`, so that we think that this issue could be connected to the #1125 . **To Reproduce**; In order to reproduce the issue, a zip file is attached. It contains the configuration files for the 3D and 2D cases using JST and ROE, and the two grids of the CRM airfoil. It is possible to reproduce this issue also using a different airfoil. [ROEvsJST.zip](https://github.com/su2code/SU2/files/6441697/ROEvsJST.zip). **Desktop:**; - OS: Linux (Ubuntu); - C++ compiler and version: -; - MPI implementation and version: -; - SU2 Version: v7.1.1 and previous. Thanks for your help.; Ettore Saetta. Theoretical and Applied Aerodynamics Research Group (TAARG); University of Naples Federico II",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280
https://github.com/su2code/SU2/pull/1281:897,Deployability,update,updated,897,"## Proposed Changes; Cleanup CHeatSolver.cpp; - define loop vars in the loop; - make stuff const auto; - remove unnecessary vars - or move definition&allocation where needed; - some minor logical changes which hopefully are equivalent ( and therefore don't change the reg test 🤞 ); - Fix primal unsteady Heat restarts. @oleburghardt might be interested in these changes ;). Can be seen as a follow up to #1256 of @maxaehle (although I dont specifically fix memory leaks). ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1281
https://github.com/su2code/SU2/pull/1281:188,Testability,log,logical,188,"## Proposed Changes; Cleanup CHeatSolver.cpp; - define loop vars in the loop; - make stuff const auto; - remove unnecessary vars - or move definition&allocation where needed; - some minor logical changes which hopefully are equivalent ( and therefore don't change the reg test 🤞 ); - Fix primal unsteady Heat restarts. @oleburghardt might be interested in these changes ;). Can be seen as a follow up to #1256 of @maxaehle (although I dont specifically fix memory leaks). ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1281
https://github.com/su2code/SU2/pull/1281:272,Testability,test,test,272,"## Proposed Changes; Cleanup CHeatSolver.cpp; - define loop vars in the loop; - make stuff const auto; - remove unnecessary vars - or move definition&allocation where needed; - some minor logical changes which hopefully are equivalent ( and therefore don't change the reg test 🤞 ); - Fix primal unsteady Heat restarts. @oleburghardt might be interested in these changes ;). Can be seen as a follow up to #1256 of @maxaehle (although I dont specifically fix memory leaks). ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1281
https://github.com/su2code/SU2/pull/1281:824,Testability,test,test,824,"## Proposed Changes; Cleanup CHeatSolver.cpp; - define loop vars in the loop; - make stuff const auto; - remove unnecessary vars - or move definition&allocation where needed; - some minor logical changes which hopefully are equivalent ( and therefore don't change the reg test 🤞 ); - Fix primal unsteady Heat restarts. @oleburghardt might be interested in these changes ;). Can be seen as a follow up to #1256 of @maxaehle (although I dont specifically fix memory leaks). ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1281
https://github.com/su2code/SU2/pull/1281:695,Usability,simpl,simply,695,"## Proposed Changes; Cleanup CHeatSolver.cpp; - define loop vars in the loop; - make stuff const auto; - remove unnecessary vars - or move definition&allocation where needed; - some minor logical changes which hopefully are equivalent ( and therefore don't change the reg test 🤞 ); - Fix primal unsteady Heat restarts. @oleburghardt might be interested in these changes ;). Can be seen as a follow up to #1256 of @maxaehle (although I dont specifically fix memory leaks). ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1281
https://github.com/su2code/SU2/pull/1284:1145,Deployability,update,updated,1145,"## Proposed Changes; 1 - Local indices for solution variables (which are overwritten during recording), even in singlezone problems (it was already used in multizone), to make things consistent for the two drivers. 2 - SU2_TYPE::GetDerivative was based on a global counter and a shared vector of input indices, which meant derivatives had to be extracted in the same order they were registered, and made the whole process not thread-safe. This is gone, if an input variable is overwritten during recording its (initial) index needs to be managed explicitly. 3 - Simplify and improve the restart logic because of unsteady FSI issues (not an Hybrid AD topic, but I had enough branches). ## Related Work; Continues #1214 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284
https://github.com/su2code/SU2/pull/1284:52,Modifiability,variab,variables,52,"## Proposed Changes; 1 - Local indices for solution variables (which are overwritten during recording), even in singlezone problems (it was already used in multizone), to make things consistent for the two drivers. 2 - SU2_TYPE::GetDerivative was based on a global counter and a shared vector of input indices, which meant derivatives had to be extracted in the same order they were registered, and made the whole process not thread-safe. This is gone, if an input variable is overwritten during recording its (initial) index needs to be managed explicitly. 3 - Simplify and improve the restart logic because of unsteady FSI issues (not an Hybrid AD topic, but I had enough branches). ## Related Work; Continues #1214 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284
https://github.com/su2code/SU2/pull/1284:465,Modifiability,variab,variable,465,"## Proposed Changes; 1 - Local indices for solution variables (which are overwritten during recording), even in singlezone problems (it was already used in multizone), to make things consistent for the two drivers. 2 - SU2_TYPE::GetDerivative was based on a global counter and a shared vector of input indices, which meant derivatives had to be extracted in the same order they were registered, and made the whole process not thread-safe. This is gone, if an input variable is overwritten during recording its (initial) index needs to be managed explicitly. 3 - Simplify and improve the restart logic because of unsteady FSI issues (not an Hybrid AD topic, but I had enough branches). ## Related Work; Continues #1214 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284
https://github.com/su2code/SU2/pull/1284:433,Safety,safe,safe,433,"## Proposed Changes; 1 - Local indices for solution variables (which are overwritten during recording), even in singlezone problems (it was already used in multizone), to make things consistent for the two drivers. 2 - SU2_TYPE::GetDerivative was based on a global counter and a shared vector of input indices, which meant derivatives had to be extracted in the same order they were registered, and made the whole process not thread-safe. This is gone, if an input variable is overwritten during recording its (initial) index needs to be managed explicitly. 3 - Simplify and improve the restart logic because of unsteady FSI issues (not an Hybrid AD topic, but I had enough branches). ## Related Work; Continues #1214 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284
https://github.com/su2code/SU2/pull/1284:595,Testability,log,logic,595,"## Proposed Changes; 1 - Local indices for solution variables (which are overwritten during recording), even in singlezone problems (it was already used in multizone), to make things consistent for the two drivers. 2 - SU2_TYPE::GetDerivative was based on a global counter and a shared vector of input indices, which meant derivatives had to be extracted in the same order they were registered, and made the whole process not thread-safe. This is gone, if an input variable is overwritten during recording its (initial) index needs to be managed explicitly. 3 - Simplify and improve the restart logic because of unsteady FSI issues (not an Hybrid AD topic, but I had enough branches). ## Related Work; Continues #1214 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284
https://github.com/su2code/SU2/pull/1284:1072,Testability,test,test,1072,"## Proposed Changes; 1 - Local indices for solution variables (which are overwritten during recording), even in singlezone problems (it was already used in multizone), to make things consistent for the two drivers. 2 - SU2_TYPE::GetDerivative was based on a global counter and a shared vector of input indices, which meant derivatives had to be extracted in the same order they were registered, and made the whole process not thread-safe. This is gone, if an input variable is overwritten during recording its (initial) index needs to be managed explicitly. 3 - Simplify and improve the restart logic because of unsteady FSI issues (not an Hybrid AD topic, but I had enough branches). ## Related Work; Continues #1214 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284
https://github.com/su2code/SU2/pull/1284:562,Usability,Simpl,Simplify,562,"## Proposed Changes; 1 - Local indices for solution variables (which are overwritten during recording), even in singlezone problems (it was already used in multizone), to make things consistent for the two drivers. 2 - SU2_TYPE::GetDerivative was based on a global counter and a shared vector of input indices, which meant derivatives had to be extracted in the same order they were registered, and made the whole process not thread-safe. This is gone, if an input variable is overwritten during recording its (initial) index needs to be managed explicitly. 3 - Simplify and improve the restart logic because of unsteady FSI issues (not an Hybrid AD topic, but I had enough branches). ## Related Work; Continues #1214 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284
https://github.com/su2code/SU2/pull/1284:943,Usability,simpl,simply,943,"## Proposed Changes; 1 - Local indices for solution variables (which are overwritten during recording), even in singlezone problems (it was already used in multizone), to make things consistent for the two drivers. 2 - SU2_TYPE::GetDerivative was based on a global counter and a shared vector of input indices, which meant derivatives had to be extracted in the same order they were registered, and made the whole process not thread-safe. This is gone, if an input variable is overwritten during recording its (initial) index needs to be managed explicitly. 3 - Simplify and improve the restart logic because of unsteady FSI issues (not an Hybrid AD topic, but I had enough branches). ## Related Work; Continues #1214 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284
https://github.com/su2code/SU2/issues/1285:787,Deployability,Update,Update,787,"In `CDiscAdjMultizoneDriver::HandleDataTransfer` we have the following code structure:. bool DeformMesh = false;; for (unsigned short jZone = 0; jZone < nZone; jZone++){; if (jZone != iZone && interface_container[jZone][iZone] != nullptr) {; DeformMesh = DeformMesh || Transfer_Data(jZone, iZone);; }; }; if (DeformMesh) DynamicMeshUpdate(iZone, ExtIter);. `Transfer_Data` returns `true` if and only if the interface type is `BOUNDARY_DISPLACEMENTS`. If this happens once, no further call to `Transfer_Data` will occur for this particular `iZone` because of short-circuit evaluation of the `||`. . Though I'm new to the adjoint driver, I can hardly imagine that this is intended. Maybe the order of the arguments of `||` should be swapped, or it should be coded as in `CMultizoneDriver::Update`?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1285
https://github.com/su2code/SU2/issues/1285:407,Integrability,interface,interface,407,"In `CDiscAdjMultizoneDriver::HandleDataTransfer` we have the following code structure:. bool DeformMesh = false;; for (unsigned short jZone = 0; jZone < nZone; jZone++){; if (jZone != iZone && interface_container[jZone][iZone] != nullptr) {; DeformMesh = DeformMesh || Transfer_Data(jZone, iZone);; }; }; if (DeformMesh) DynamicMeshUpdate(iZone, ExtIter);. `Transfer_Data` returns `true` if and only if the interface type is `BOUNDARY_DISPLACEMENTS`. If this happens once, no further call to `Transfer_Data` will occur for this particular `iZone` because of short-circuit evaluation of the `||`. . Though I'm new to the adjoint driver, I can hardly imagine that this is intended. Maybe the order of the arguments of `||` should be swapped, or it should be coded as in `CMultizoneDriver::Update`?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1285
https://github.com/su2code/SU2/pull/1286:1972,Deployability,update,updated,1972,"his PR applies the following bugfixes:; - correct retrieval of the wall roughness in a multizone setup, the original intention of this PR; - the non-MPI substitute for `SU2_MPI::Allgatherv` and `Alltoallv` now takes the displacement into account; - fix #1293, adding a missing `#include` statement . Below is the original PR description. ## Proposed Changes; I think that currently the roughness at the closest wall is retrieved in a wrong way for multizone setups. The current structure is like this:. def CGeometry::ComputeWallDistance:; for each iZone:; construct an ADT which stores the markers of iZone; for each jZone:; call CPhysicalGeometry::SetWallDistance to jZone geometry which \; reduces the stored wall distances of jZone's points according to iZone's markers in the ADT and\; sets wall roughnesses of jZone's points according to data from jZone's geometry. The issue I perceive here is that the closest wall in the ADT, identified by the `markerID`, belongs to `iZone`. `iZone`'s geometry and config must therefore be an additional argument to `CPhysicalGeometry::SetWallDistance`. We must not use the wall roughness from `jZone`'s geometry and config associated to the markerID, as it is currently done. ## Related Work; ?; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286
https://github.com/su2code/SU2/pull/1286:758,Energy Efficiency,reduce,reduces,758,"**Edit**: Besides introducing the `NdFlattener` data structure, this PR applies the following bugfixes:; - correct retrieval of the wall roughness in a multizone setup, the original intention of this PR; - the non-MPI substitute for `SU2_MPI::Allgatherv` and `Alltoallv` now takes the displacement into account; - fix #1293, adding a missing `#include` statement . Below is the original PR description. ## Proposed Changes; I think that currently the roughness at the closest wall is retrieved in a wrong way for multizone setups. The current structure is like this:. def CGeometry::ComputeWallDistance:; for each iZone:; construct an ADT which stores the markers of iZone; for each jZone:; call CPhysicalGeometry::SetWallDistance to jZone geometry which \; reduces the stored wall distances of jZone's points according to iZone's markers in the ADT and\; sets wall roughnesses of jZone's points according to data from jZone's geometry. The issue I perceive here is that the closest wall in the ADT, identified by the `markerID`, belongs to `iZone`. `iZone`'s geometry and config must therefore be an additional argument to `CPhysicalGeometry::SetWallDistance`. We must not use the wall roughness from `jZone`'s geometry and config associated to the markerID, as it is currently done. ## Related Work; ?; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documenta",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286
https://github.com/su2code/SU2/pull/1286:1073,Modifiability,config,config,1073,"his PR applies the following bugfixes:; - correct retrieval of the wall roughness in a multizone setup, the original intention of this PR; - the non-MPI substitute for `SU2_MPI::Allgatherv` and `Alltoallv` now takes the displacement into account; - fix #1293, adding a missing `#include` statement . Below is the original PR description. ## Proposed Changes; I think that currently the roughness at the closest wall is retrieved in a wrong way for multizone setups. The current structure is like this:. def CGeometry::ComputeWallDistance:; for each iZone:; construct an ADT which stores the markers of iZone; for each jZone:; call CPhysicalGeometry::SetWallDistance to jZone geometry which \; reduces the stored wall distances of jZone's points according to iZone's markers in the ADT and\; sets wall roughnesses of jZone's points according to data from jZone's geometry. The issue I perceive here is that the closest wall in the ADT, identified by the `markerID`, belongs to `iZone`. `iZone`'s geometry and config must therefore be an additional argument to `CPhysicalGeometry::SetWallDistance`. We must not use the wall roughness from `jZone`'s geometry and config associated to the markerID, as it is currently done. ## Related Work; ?; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286
https://github.com/su2code/SU2/pull/1286:1225,Modifiability,config,config,1225,"his PR applies the following bugfixes:; - correct retrieval of the wall roughness in a multizone setup, the original intention of this PR; - the non-MPI substitute for `SU2_MPI::Allgatherv` and `Alltoallv` now takes the displacement into account; - fix #1293, adding a missing `#include` statement . Below is the original PR description. ## Proposed Changes; I think that currently the roughness at the closest wall is retrieved in a wrong way for multizone setups. The current structure is like this:. def CGeometry::ComputeWallDistance:; for each iZone:; construct an ADT which stores the markers of iZone; for each jZone:; call CPhysicalGeometry::SetWallDistance to jZone geometry which \; reduces the stored wall distances of jZone's points according to iZone's markers in the ADT and\; sets wall roughnesses of jZone's points according to data from jZone's geometry. The issue I perceive here is that the closest wall in the ADT, identified by the `markerID`, belongs to `iZone`. `iZone`'s geometry and config must therefore be an additional argument to `CPhysicalGeometry::SetWallDistance`. We must not use the wall roughness from `jZone`'s geometry and config associated to the markerID, as it is currently done. ## Related Work; ?; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286
https://github.com/su2code/SU2/pull/1286:1899,Testability,test,test,1899,"his PR applies the following bugfixes:; - correct retrieval of the wall roughness in a multizone setup, the original intention of this PR; - the non-MPI substitute for `SU2_MPI::Allgatherv` and `Alltoallv` now takes the displacement into account; - fix #1293, adding a missing `#include` statement . Below is the original PR description. ## Proposed Changes; I think that currently the roughness at the closest wall is retrieved in a wrong way for multizone setups. The current structure is like this:. def CGeometry::ComputeWallDistance:; for each iZone:; construct an ADT which stores the markers of iZone; for each jZone:; call CPhysicalGeometry::SetWallDistance to jZone geometry which \; reduces the stored wall distances of jZone's points according to iZone's markers in the ADT and\; sets wall roughnesses of jZone's points according to data from jZone's geometry. The issue I perceive here is that the closest wall in the ADT, identified by the `markerID`, belongs to `iZone`. `iZone`'s geometry and config must therefore be an additional argument to `CPhysicalGeometry::SetWallDistance`. We must not use the wall roughness from `jZone`'s geometry and config associated to the markerID, as it is currently done. ## Related Work; ?; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286
https://github.com/su2code/SU2/pull/1286:1477,Usability,guid,guide,1477,"his PR applies the following bugfixes:; - correct retrieval of the wall roughness in a multizone setup, the original intention of this PR; - the non-MPI substitute for `SU2_MPI::Allgatherv` and `Alltoallv` now takes the displacement into account; - fix #1293, adding a missing `#include` statement . Below is the original PR description. ## Proposed Changes; I think that currently the roughness at the closest wall is retrieved in a wrong way for multizone setups. The current structure is like this:. def CGeometry::ComputeWallDistance:; for each iZone:; construct an ADT which stores the markers of iZone; for each jZone:; call CPhysicalGeometry::SetWallDistance to jZone geometry which \; reduces the stored wall distances of jZone's points according to iZone's markers in the ADT and\; sets wall roughnesses of jZone's points according to data from jZone's geometry. The issue I perceive here is that the closest wall in the ADT, identified by the `markerID`, belongs to `iZone`. `iZone`'s geometry and config must therefore be an additional argument to `CPhysicalGeometry::SetWallDistance`. We must not use the wall roughness from `jZone`'s geometry and config associated to the markerID, as it is currently done. ## Related Work; ?; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286
https://github.com/su2code/SU2/pull/1286:1769,Usability,simpl,simply,1769,"his PR applies the following bugfixes:; - correct retrieval of the wall roughness in a multizone setup, the original intention of this PR; - the non-MPI substitute for `SU2_MPI::Allgatherv` and `Alltoallv` now takes the displacement into account; - fix #1293, adding a missing `#include` statement . Below is the original PR description. ## Proposed Changes; I think that currently the roughness at the closest wall is retrieved in a wrong way for multizone setups. The current structure is like this:. def CGeometry::ComputeWallDistance:; for each iZone:; construct an ADT which stores the markers of iZone; for each jZone:; call CPhysicalGeometry::SetWallDistance to jZone geometry which \; reduces the stored wall distances of jZone's points according to iZone's markers in the ADT and\; sets wall roughnesses of jZone's points according to data from jZone's geometry. The issue I perceive here is that the closest wall in the ADT, identified by the `markerID`, belongs to `iZone`. `iZone`'s geometry and config must therefore be an additional argument to `CPhysicalGeometry::SetWallDistance`. We must not use the wall roughness from `jZone`'s geometry and config associated to the markerID, as it is currently done. ## Related Work; ?; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286
https://github.com/su2code/SU2/issues/1287:766,Testability,test,testing,766,"1. Initially I was trying to restart the unsteady FSI from the steady flow solution over the initially undeformed structure. I noticed that the case diverged when I tried to use 2nd order dual time-stepping and the case worked when I used 1st order dual time-stepping.; 2. Then I encountered a new problem when I tried to restart the case from the FSI solutions after 1900 time steps and it diverged. I tried the restart files of time iteration 1890 and it still diverged without iterations. ; 3. Surprisingly, when I tried to restart using the restart file from time iteration 10, iterations started without an immediate divergence. Please advise on what could be going wrong.; Thank You; Sangeet. I have attached the case folder with all required restart files.; [testing.zip](https://github.com/su2code/SU2/files/6464073/testing.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287
https://github.com/su2code/SU2/issues/1287:824,Testability,test,testing,824,"1. Initially I was trying to restart the unsteady FSI from the steady flow solution over the initially undeformed structure. I noticed that the case diverged when I tried to use 2nd order dual time-stepping and the case worked when I used 1st order dual time-stepping.; 2. Then I encountered a new problem when I tried to restart the case from the FSI solutions after 1900 time steps and it diverged. I tried the restart files of time iteration 1890 and it still diverged without iterations. ; 3. Surprisingly, when I tried to restart using the restart file from time iteration 10, iterations started without an immediate divergence. Please advise on what could be going wrong.; Thank You; Sangeet. I have attached the case folder with all required restart files.; [testing.zip](https://github.com/su2code/SU2/files/6464073/testing.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287
https://github.com/su2code/SU2/pull/1288:1140,Deployability,update,updated,1140,"## Proposed Changes; Added files; - README which explains the files and why they are there; - cfg files which contain notes how to be changed for primal/findiff and serious adjoint run; - findiff.py FADO script for finite differences; - postprocess.py to compare the gradients of DA and FD (only screen output); - gmsh .geo file with which the mesh was created. parallel_reg_AD will fail until the [Testcases PR 63](https://github.com/su2code/TestCases/pull/63) is merged. ## Related Work; Depends on #1260 and contains all of those changes (i.e. best reviewed after that is merged .. or just look at the last commit :) ). Meant to be merged shortly after but before #1284 to have an additional safeguarded case. . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1288
https://github.com/su2code/SU2/pull/1288:490,Integrability,Depend,Depends,490,"## Proposed Changes; Added files; - README which explains the files and why they are there; - cfg files which contain notes how to be changed for primal/findiff and serious adjoint run; - findiff.py FADO script for finite differences; - postprocess.py to compare the gradients of DA and FD (only screen output); - gmsh .geo file with which the mesh was created. parallel_reg_AD will fail until the [Testcases PR 63](https://github.com/su2code/TestCases/pull/63) is merged. ## Related Work; Depends on #1260 and contains all of those changes (i.e. best reviewed after that is merged .. or just look at the last commit :) ). Meant to be merged shortly after but before #1284 to have an additional safeguarded case. . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1288
https://github.com/su2code/SU2/pull/1288:695,Safety,safe,safeguarded,695,"## Proposed Changes; Added files; - README which explains the files and why they are there; - cfg files which contain notes how to be changed for primal/findiff and serious adjoint run; - findiff.py FADO script for finite differences; - postprocess.py to compare the gradients of DA and FD (only screen output); - gmsh .geo file with which the mesh was created. parallel_reg_AD will fail until the [Testcases PR 63](https://github.com/su2code/TestCases/pull/63) is merged. ## Related Work; Depends on #1260 and contains all of those changes (i.e. best reviewed after that is merged .. or just look at the last commit :) ). Meant to be merged shortly after but before #1284 to have an additional safeguarded case. . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1288
https://github.com/su2code/SU2/pull/1288:399,Testability,Test,Testcases,399,"## Proposed Changes; Added files; - README which explains the files and why they are there; - cfg files which contain notes how to be changed for primal/findiff and serious adjoint run; - findiff.py FADO script for finite differences; - postprocess.py to compare the gradients of DA and FD (only screen output); - gmsh .geo file with which the mesh was created. parallel_reg_AD will fail until the [Testcases PR 63](https://github.com/su2code/TestCases/pull/63) is merged. ## Related Work; Depends on #1260 and contains all of those changes (i.e. best reviewed after that is merged .. or just look at the last commit :) ). Meant to be merged shortly after but before #1284 to have an additional safeguarded case. . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1288
https://github.com/su2code/SU2/pull/1288:443,Testability,Test,TestCases,443,"## Proposed Changes; Added files; - README which explains the files and why they are there; - cfg files which contain notes how to be changed for primal/findiff and serious adjoint run; - findiff.py FADO script for finite differences; - postprocess.py to compare the gradients of DA and FD (only screen output); - gmsh .geo file with which the mesh was created. parallel_reg_AD will fail until the [Testcases PR 63](https://github.com/su2code/TestCases/pull/63) is merged. ## Related Work; Depends on #1260 and contains all of those changes (i.e. best reviewed after that is merged .. or just look at the last commit :) ). Meant to be merged shortly after but before #1284 to have an additional safeguarded case. . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1288
https://github.com/su2code/SU2/pull/1288:1067,Testability,test,test,1067,"## Proposed Changes; Added files; - README which explains the files and why they are there; - cfg files which contain notes how to be changed for primal/findiff and serious adjoint run; - findiff.py FADO script for finite differences; - postprocess.py to compare the gradients of DA and FD (only screen output); - gmsh .geo file with which the mesh was created. parallel_reg_AD will fail until the [Testcases PR 63](https://github.com/su2code/TestCases/pull/63) is merged. ## Related Work; Depends on #1260 and contains all of those changes (i.e. best reviewed after that is merged .. or just look at the last commit :) ). Meant to be merged shortly after but before #1284 to have an additional safeguarded case. . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1288
https://github.com/su2code/SU2/pull/1288:938,Usability,simpl,simply,938,"## Proposed Changes; Added files; - README which explains the files and why they are there; - cfg files which contain notes how to be changed for primal/findiff and serious adjoint run; - findiff.py FADO script for finite differences; - postprocess.py to compare the gradients of DA and FD (only screen output); - gmsh .geo file with which the mesh was created. parallel_reg_AD will fail until the [Testcases PR 63](https://github.com/su2code/TestCases/pull/63) is merged. ## Related Work; Depends on #1260 and contains all of those changes (i.e. best reviewed after that is merged .. or just look at the last commit :) ). Meant to be merged shortly after but before #1284 to have an additional safeguarded case. . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1288
https://github.com/su2code/SU2/issues/1289:121,Availability,error,error-executing-deformation-multiple-ffd-control-point,121,"Hello,. I'm posting this issue based on the discussion on CFD Online [here](https://www.cfd-online.com/Forums/su2/235889-error-executing-deformation-multiple-ffd-control-point.html#post803932). The original query goes like this- . I'm trying to perform the mesh deformation of Onera M6 mesh with SU2_DEF using multiple FFD control points. The same mesh has been used in the current case as used in the SU2's tutorial of [Onera M6](https://su2code.github.io/tutorials/Inviscid_3D_Constrained_ONERAM6/). The configuration file used in the simulation is attached below- ; [Adjoint_ONERAM6.txt](https://github.com/su2code/SU2/files/6489000/Adjoint_ONERAM6.txt). On executing SU2_DEF, .su2 format of mesh is generated which is used as an input for the simulation. But on executing discrete_adjoint.py, I get the following error-. Error in ""void CConfig::SetConfig_Parsing(std::istream&)"":; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM. ------------------------------ Error Exit -------------------------------. From the looks of the error and my configuration file, I do have an equal number of arguments in the DV_VALUE as well as DV_KIND or DV_PARAM. Thanks! . Desktop:; - OS: Linux (CentOS); - C++ compiler and version: -; - MPI implementation and version: OpenMPI 1.8.8; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289
https://github.com/su2code/SU2/issues/1289:817,Availability,error,error,817,"Hello,. I'm posting this issue based on the discussion on CFD Online [here](https://www.cfd-online.com/Forums/su2/235889-error-executing-deformation-multiple-ffd-control-point.html#post803932). The original query goes like this- . I'm trying to perform the mesh deformation of Onera M6 mesh with SU2_DEF using multiple FFD control points. The same mesh has been used in the current case as used in the SU2's tutorial of [Onera M6](https://su2code.github.io/tutorials/Inviscid_3D_Constrained_ONERAM6/). The configuration file used in the simulation is attached below- ; [Adjoint_ONERAM6.txt](https://github.com/su2code/SU2/files/6489000/Adjoint_ONERAM6.txt). On executing SU2_DEF, .su2 format of mesh is generated which is used as an input for the simulation. But on executing discrete_adjoint.py, I get the following error-. Error in ""void CConfig::SetConfig_Parsing(std::istream&)"":; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM. ------------------------------ Error Exit -------------------------------. From the looks of the error and my configuration file, I do have an equal number of arguments in the DV_VALUE as well as DV_KIND or DV_PARAM. Thanks! . Desktop:; - OS: Linux (CentOS); - C++ compiler and version: -; - MPI implementation and version: OpenMPI 1.8.8; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289
https://github.com/su2code/SU2/issues/1289:825,Availability,Error,Error,825,"Hello,. I'm posting this issue based on the discussion on CFD Online [here](https://www.cfd-online.com/Forums/su2/235889-error-executing-deformation-multiple-ffd-control-point.html#post803932). The original query goes like this- . I'm trying to perform the mesh deformation of Onera M6 mesh with SU2_DEF using multiple FFD control points. The same mesh has been used in the current case as used in the SU2's tutorial of [Onera M6](https://su2code.github.io/tutorials/Inviscid_3D_Constrained_ONERAM6/). The configuration file used in the simulation is attached below- ; [Adjoint_ONERAM6.txt](https://github.com/su2code/SU2/files/6489000/Adjoint_ONERAM6.txt). On executing SU2_DEF, .su2 format of mesh is generated which is used as an input for the simulation. But on executing discrete_adjoint.py, I get the following error-. Error in ""void CConfig::SetConfig_Parsing(std::istream&)"":; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM. ------------------------------ Error Exit -------------------------------. From the looks of the error and my configuration file, I do have an equal number of arguments in the DV_VALUE as well as DV_KIND or DV_PARAM. Thanks! . Desktop:; - OS: Linux (CentOS); - C++ compiler and version: -; - MPI implementation and version: OpenMPI 1.8.8; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289
https://github.com/su2code/SU2/issues/1289:1072,Availability,Error,Error,1072,"Hello,. I'm posting this issue based on the discussion on CFD Online [here](https://www.cfd-online.com/Forums/su2/235889-error-executing-deformation-multiple-ffd-control-point.html#post803932). The original query goes like this- . I'm trying to perform the mesh deformation of Onera M6 mesh with SU2_DEF using multiple FFD control points. The same mesh has been used in the current case as used in the SU2's tutorial of [Onera M6](https://su2code.github.io/tutorials/Inviscid_3D_Constrained_ONERAM6/). The configuration file used in the simulation is attached below- ; [Adjoint_ONERAM6.txt](https://github.com/su2code/SU2/files/6489000/Adjoint_ONERAM6.txt). On executing SU2_DEF, .su2 format of mesh is generated which is used as an input for the simulation. But on executing discrete_adjoint.py, I get the following error-. Error in ""void CConfig::SetConfig_Parsing(std::istream&)"":; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM. ------------------------------ Error Exit -------------------------------. From the looks of the error and my configuration file, I do have an equal number of arguments in the DV_VALUE as well as DV_KIND or DV_PARAM. Thanks! . Desktop:; - OS: Linux (CentOS); - C++ compiler and version: -; - MPI implementation and version: OpenMPI 1.8.8; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289
https://github.com/su2code/SU2/issues/1289:1138,Availability,error,error,1138,"Hello,. I'm posting this issue based on the discussion on CFD Online [here](https://www.cfd-online.com/Forums/su2/235889-error-executing-deformation-multiple-ffd-control-point.html#post803932). The original query goes like this- . I'm trying to perform the mesh deformation of Onera M6 mesh with SU2_DEF using multiple FFD control points. The same mesh has been used in the current case as used in the SU2's tutorial of [Onera M6](https://su2code.github.io/tutorials/Inviscid_3D_Constrained_ONERAM6/). The configuration file used in the simulation is attached below- ; [Adjoint_ONERAM6.txt](https://github.com/su2code/SU2/files/6489000/Adjoint_ONERAM6.txt). On executing SU2_DEF, .su2 format of mesh is generated which is used as an input for the simulation. But on executing discrete_adjoint.py, I get the following error-. Error in ""void CConfig::SetConfig_Parsing(std::istream&)"":; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM. ------------------------------ Error Exit -------------------------------. From the looks of the error and my configuration file, I do have an equal number of arguments in the DV_VALUE as well as DV_KIND or DV_PARAM. Thanks! . Desktop:; - OS: Linux (CentOS); - C++ compiler and version: -; - MPI implementation and version: OpenMPI 1.8.8; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289
https://github.com/su2code/SU2/issues/1289:506,Deployability,configurat,configuration,506,"Hello,. I'm posting this issue based on the discussion on CFD Online [here](https://www.cfd-online.com/Forums/su2/235889-error-executing-deformation-multiple-ffd-control-point.html#post803932). The original query goes like this- . I'm trying to perform the mesh deformation of Onera M6 mesh with SU2_DEF using multiple FFD control points. The same mesh has been used in the current case as used in the SU2's tutorial of [Onera M6](https://su2code.github.io/tutorials/Inviscid_3D_Constrained_ONERAM6/). The configuration file used in the simulation is attached below- ; [Adjoint_ONERAM6.txt](https://github.com/su2code/SU2/files/6489000/Adjoint_ONERAM6.txt). On executing SU2_DEF, .su2 format of mesh is generated which is used as an input for the simulation. But on executing discrete_adjoint.py, I get the following error-. Error in ""void CConfig::SetConfig_Parsing(std::istream&)"":; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM. ------------------------------ Error Exit -------------------------------. From the looks of the error and my configuration file, I do have an equal number of arguments in the DV_VALUE as well as DV_KIND or DV_PARAM. Thanks! . Desktop:; - OS: Linux (CentOS); - C++ compiler and version: -; - MPI implementation and version: OpenMPI 1.8.8; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289
https://github.com/su2code/SU2/issues/1289:1151,Deployability,configurat,configuration,1151,"Hello,. I'm posting this issue based on the discussion on CFD Online [here](https://www.cfd-online.com/Forums/su2/235889-error-executing-deformation-multiple-ffd-control-point.html#post803932). The original query goes like this- . I'm trying to perform the mesh deformation of Onera M6 mesh with SU2_DEF using multiple FFD control points. The same mesh has been used in the current case as used in the SU2's tutorial of [Onera M6](https://su2code.github.io/tutorials/Inviscid_3D_Constrained_ONERAM6/). The configuration file used in the simulation is attached below- ; [Adjoint_ONERAM6.txt](https://github.com/su2code/SU2/files/6489000/Adjoint_ONERAM6.txt). On executing SU2_DEF, .su2 format of mesh is generated which is used as an input for the simulation. But on executing discrete_adjoint.py, I get the following error-. Error in ""void CConfig::SetConfig_Parsing(std::istream&)"":; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM. ------------------------------ Error Exit -------------------------------. From the looks of the error and my configuration file, I do have an equal number of arguments in the DV_VALUE as well as DV_KIND or DV_PARAM. Thanks! . Desktop:; - OS: Linux (CentOS); - C++ compiler and version: -; - MPI implementation and version: OpenMPI 1.8.8; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289
https://github.com/su2code/SU2/issues/1289:506,Modifiability,config,configuration,506,"Hello,. I'm posting this issue based on the discussion on CFD Online [here](https://www.cfd-online.com/Forums/su2/235889-error-executing-deformation-multiple-ffd-control-point.html#post803932). The original query goes like this- . I'm trying to perform the mesh deformation of Onera M6 mesh with SU2_DEF using multiple FFD control points. The same mesh has been used in the current case as used in the SU2's tutorial of [Onera M6](https://su2code.github.io/tutorials/Inviscid_3D_Constrained_ONERAM6/). The configuration file used in the simulation is attached below- ; [Adjoint_ONERAM6.txt](https://github.com/su2code/SU2/files/6489000/Adjoint_ONERAM6.txt). On executing SU2_DEF, .su2 format of mesh is generated which is used as an input for the simulation. But on executing discrete_adjoint.py, I get the following error-. Error in ""void CConfig::SetConfig_Parsing(std::istream&)"":; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM. ------------------------------ Error Exit -------------------------------. From the looks of the error and my configuration file, I do have an equal number of arguments in the DV_VALUE as well as DV_KIND or DV_PARAM. Thanks! . Desktop:; - OS: Linux (CentOS); - C++ compiler and version: -; - MPI implementation and version: OpenMPI 1.8.8; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289
https://github.com/su2code/SU2/issues/1289:1151,Modifiability,config,configuration,1151,"Hello,. I'm posting this issue based on the discussion on CFD Online [here](https://www.cfd-online.com/Forums/su2/235889-error-executing-deformation-multiple-ffd-control-point.html#post803932). The original query goes like this- . I'm trying to perform the mesh deformation of Onera M6 mesh with SU2_DEF using multiple FFD control points. The same mesh has been used in the current case as used in the SU2's tutorial of [Onera M6](https://su2code.github.io/tutorials/Inviscid_3D_Constrained_ONERAM6/). The configuration file used in the simulation is attached below- ; [Adjoint_ONERAM6.txt](https://github.com/su2code/SU2/files/6489000/Adjoint_ONERAM6.txt). On executing SU2_DEF, .su2 format of mesh is generated which is used as an input for the simulation. But on executing discrete_adjoint.py, I get the following error-. Error in ""void CConfig::SetConfig_Parsing(std::istream&)"":; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM. ------------------------------ Error Exit -------------------------------. From the looks of the error and my configuration file, I do have an equal number of arguments in the DV_VALUE as well as DV_KIND or DV_PARAM. Thanks! . Desktop:; - OS: Linux (CentOS); - C++ compiler and version: -; - MPI implementation and version: OpenMPI 1.8.8; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289
https://github.com/su2code/SU2/issues/1289:245,Performance,perform,perform,245,"Hello,. I'm posting this issue based on the discussion on CFD Online [here](https://www.cfd-online.com/Forums/su2/235889-error-executing-deformation-multiple-ffd-control-point.html#post803932). The original query goes like this- . I'm trying to perform the mesh deformation of Onera M6 mesh with SU2_DEF using multiple FFD control points. The same mesh has been used in the current case as used in the SU2's tutorial of [Onera M6](https://su2code.github.io/tutorials/Inviscid_3D_Constrained_ONERAM6/). The configuration file used in the simulation is attached below- ; [Adjoint_ONERAM6.txt](https://github.com/su2code/SU2/files/6489000/Adjoint_ONERAM6.txt). On executing SU2_DEF, .su2 format of mesh is generated which is used as an input for the simulation. But on executing discrete_adjoint.py, I get the following error-. Error in ""void CConfig::SetConfig_Parsing(std::istream&)"":; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM. ------------------------------ Error Exit -------------------------------. From the looks of the error and my configuration file, I do have an equal number of arguments in the DV_VALUE as well as DV_KIND or DV_PARAM. Thanks! . Desktop:; - OS: Linux (CentOS); - C++ compiler and version: -; - MPI implementation and version: OpenMPI 1.8.8; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289
https://github.com/su2code/SU2/pull/1290:1268,Deployability,update,updated,1268,"## Proposed Changes; Hi all,. - Little change to make streamwise and spanwise periodic simulations possible (in CIncNSSolver.cpp). ; - Some cleanup in CConjugateHeatInterface; - Added a CFVMOutput class that only has a CommonFVMoutput for Volume output (COORD-XYZ (fresh addition), MESH_QUALITY, Multigrid visualization and RANK); - in the output folder(s) there were quite some wrong doxygen `\file <filename>`, i changed that. I renamed `CAdjFlowOutput.hpp` -> `CAdjFlowCompOutput.hpp` as the cpp as that name and that class as well.; - little changes/additions to unst CHT gradient validation case . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1290
https://github.com/su2code/SU2/pull/1290:585,Security,validat,validation,585,"## Proposed Changes; Hi all,. - Little change to make streamwise and spanwise periodic simulations possible (in CIncNSSolver.cpp). ; - Some cleanup in CConjugateHeatInterface; - Added a CFVMOutput class that only has a CommonFVMoutput for Volume output (COORD-XYZ (fresh addition), MESH_QUALITY, Multigrid visualization and RANK); - in the output folder(s) there were quite some wrong doxygen `\file <filename>`, i changed that. I renamed `CAdjFlowOutput.hpp` -> `CAdjFlowCompOutput.hpp` as the cpp as that name and that class as well.; - little changes/additions to unst CHT gradient validation case . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1290
https://github.com/su2code/SU2/pull/1290:1195,Testability,test,test,1195,"## Proposed Changes; Hi all,. - Little change to make streamwise and spanwise periodic simulations possible (in CIncNSSolver.cpp). ; - Some cleanup in CConjugateHeatInterface; - Added a CFVMOutput class that only has a CommonFVMoutput for Volume output (COORD-XYZ (fresh addition), MESH_QUALITY, Multigrid visualization and RANK); - in the output folder(s) there were quite some wrong doxygen `\file <filename>`, i changed that. I renamed `CAdjFlowOutput.hpp` -> `CAdjFlowCompOutput.hpp` as the cpp as that name and that class as well.; - little changes/additions to unst CHT gradient validation case . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1290
https://github.com/su2code/SU2/pull/1290:775,Usability,guid,guide,775,"## Proposed Changes; Hi all,. - Little change to make streamwise and spanwise periodic simulations possible (in CIncNSSolver.cpp). ; - Some cleanup in CConjugateHeatInterface; - Added a CFVMOutput class that only has a CommonFVMoutput for Volume output (COORD-XYZ (fresh addition), MESH_QUALITY, Multigrid visualization and RANK); - in the output folder(s) there were quite some wrong doxygen `\file <filename>`, i changed that. I renamed `CAdjFlowOutput.hpp` -> `CAdjFlowCompOutput.hpp` as the cpp as that name and that class as well.; - little changes/additions to unst CHT gradient validation case . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1290
https://github.com/su2code/SU2/pull/1290:1066,Usability,simpl,simply,1066,"## Proposed Changes; Hi all,. - Little change to make streamwise and spanwise periodic simulations possible (in CIncNSSolver.cpp). ; - Some cleanup in CConjugateHeatInterface; - Added a CFVMOutput class that only has a CommonFVMoutput for Volume output (COORD-XYZ (fresh addition), MESH_QUALITY, Multigrid visualization and RANK); - in the output folder(s) there were quite some wrong doxygen `\file <filename>`, i changed that. I renamed `CAdjFlowOutput.hpp` -> `CAdjFlowCompOutput.hpp` as the cpp as that name and that class as well.; - little changes/additions to unst CHT gradient validation case . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1290
https://github.com/su2code/SU2/pull/1292:40,Deployability,pipeline,pipeline,40,"**This PR was created to trigger the CI pipeline, no merging intended.**. I noticed differences between results of regression tests, when running them on my system and by the Github CI pipeline. Let me check whether according to the CI pipeline, the wall roughness was actually always 0 before my bugfix in #1286. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1292
https://github.com/su2code/SU2/pull/1292:185,Deployability,pipeline,pipeline,185,"**This PR was created to trigger the CI pipeline, no merging intended.**. I noticed differences between results of regression tests, when running them on my system and by the Github CI pipeline. Let me check whether according to the CI pipeline, the wall roughness was actually always 0 before my bugfix in #1286. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1292
https://github.com/su2code/SU2/pull/1292:236,Deployability,pipeline,pipeline,236,"**This PR was created to trigger the CI pipeline, no merging intended.**. I noticed differences between results of regression tests, when running them on my system and by the Github CI pipeline. Let me check whether according to the CI pipeline, the wall roughness was actually always 0 before my bugfix in #1286. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1292
https://github.com/su2code/SU2/pull/1292:979,Deployability,update,updated,979,"**This PR was created to trigger the CI pipeline, no merging intended.**. I noticed differences between results of regression tests, when running them on my system and by the Github CI pipeline. Let me check whether according to the CI pipeline, the wall roughness was actually always 0 before my bugfix in #1286. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1292
https://github.com/su2code/SU2/pull/1292:126,Testability,test,tests,126,"**This PR was created to trigger the CI pipeline, no merging intended.**. I noticed differences between results of regression tests, when running them on my system and by the Github CI pipeline. Let me check whether according to the CI pipeline, the wall roughness was actually always 0 before my bugfix in #1286. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1292
https://github.com/su2code/SU2/pull/1292:906,Testability,test,test,906,"**This PR was created to trigger the CI pipeline, no merging intended.**. I noticed differences between results of regression tests, when running them on my system and by the Github CI pipeline. Let me check whether according to the CI pipeline, the wall roughness was actually always 0 before my bugfix in #1286. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1292
https://github.com/su2code/SU2/pull/1292:486,Usability,guid,guide,486,"**This PR was created to trigger the CI pipeline, no merging intended.**. I noticed differences between results of regression tests, when running them on my system and by the Github CI pipeline. Let me check whether according to the CI pipeline, the wall roughness was actually always 0 before my bugfix in #1286. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1292
https://github.com/su2code/SU2/pull/1292:777,Usability,simpl,simply,777,"**This PR was created to trigger the CI pipeline, no merging intended.**. I noticed differences between results of regression tests, when running them on my system and by the Github CI pipeline. Let me check whether according to the CI pipeline, the wall roughness was actually always 0 before my bugfix in #1286. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1292
https://github.com/su2code/SU2/issues/1293:346,Integrability,depend,dependency,346,"**Describe the bug**; When compiling the master branch or v7.1.1 of SU2, as described in the [Quick compilation guide](https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#quick-compilation-guide) with gcc version 11.1.0, the ninja command fails, saying that `'numeric_limits' is not a member of 'std'`. **Likely reason**; There were [header dependency changes in GCC 11](https://www.gnu.org/software/gcc/gcc-11/porting_to.html#header-dep-changes). Probably because of this, the header `<limits>` is not (recursively) `#include`d from the file. Common/include/geometry/primal_grid/CPrimalGrid.hpp. any more. Thus `std::numeric_limits` has not been declared when it is used in line 243. **Solution**; `#include <limits>` in `CPrimalGrid.hpp`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1293
https://github.com/su2code/SU2/issues/1293:112,Usability,guid,guide,112,"**Describe the bug**; When compiling the master branch or v7.1.1 of SU2, as described in the [Quick compilation guide](https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#quick-compilation-guide) with gcc version 11.1.0, the ninja command fails, saying that `'numeric_limits' is not a member of 'std'`. **Likely reason**; There were [header dependency changes in GCC 11](https://www.gnu.org/software/gcc/gcc-11/porting_to.html#header-dep-changes). Probably because of this, the header `<limits>` is not (recursively) `#include`d from the file. Common/include/geometry/primal_grid/CPrimalGrid.hpp. any more. Thus `std::numeric_limits` has not been declared when it is used in line 243. **Solution**; `#include <limits>` in `CPrimalGrid.hpp`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1293
https://github.com/su2code/SU2/issues/1293:194,Usability,guid,guide,194,"**Describe the bug**; When compiling the master branch or v7.1.1 of SU2, as described in the [Quick compilation guide](https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#quick-compilation-guide) with gcc version 11.1.0, the ninja command fails, saying that `'numeric_limits' is not a member of 'std'`. **Likely reason**; There were [header dependency changes in GCC 11](https://www.gnu.org/software/gcc/gcc-11/porting_to.html#header-dep-changes). Probably because of this, the header `<limits>` is not (recursively) `#include`d from the file. Common/include/geometry/primal_grid/CPrimalGrid.hpp. any more. Thus `std::numeric_limits` has not been declared when it is used in line 243. **Solution**; `#include <limits>` in `CPrimalGrid.hpp`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1293
https://github.com/su2code/SU2/pull/1294:773,Deployability,update,updated,773,"## Proposed Changes; 1. Fix preaccumulation issues with `RealReverseIndex`.; 2. ~~Fix~~ Identify issues regarding index reuse and partial tape evaluations.; 3. Add regression tests for hybrid parallel AD (subset of parallel_regression_AD).; 4. Re-enable parallel preaccumulation.; 5. Shared reading optimizations. ## Related Work; continues #1284. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294
https://github.com/su2code/SU2/pull/1294:299,Performance,optimiz,optimizations,299,"## Proposed Changes; 1. Fix preaccumulation issues with `RealReverseIndex`.; 2. ~~Fix~~ Identify issues regarding index reuse and partial tape evaluations.; 3. Add regression tests for hybrid parallel AD (subset of parallel_regression_AD).; 4. Re-enable parallel preaccumulation.; 5. Shared reading optimizations. ## Related Work; continues #1284. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294
https://github.com/su2code/SU2/pull/1294:175,Testability,test,tests,175,"## Proposed Changes; 1. Fix preaccumulation issues with `RealReverseIndex`.; 2. ~~Fix~~ Identify issues regarding index reuse and partial tape evaluations.; 3. Add regression tests for hybrid parallel AD (subset of parallel_regression_AD).; 4. Re-enable parallel preaccumulation.; 5. Shared reading optimizations. ## Related Work; continues #1284. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294
https://github.com/su2code/SU2/pull/1294:700,Testability,test,test,700,"## Proposed Changes; 1. Fix preaccumulation issues with `RealReverseIndex`.; 2. ~~Fix~~ Identify issues regarding index reuse and partial tape evaluations.; 3. Add regression tests for hybrid parallel AD (subset of parallel_regression_AD).; 4. Re-enable parallel preaccumulation.; 5. Shared reading optimizations. ## Related Work; continues #1284. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294
https://github.com/su2code/SU2/pull/1294:571,Usability,simpl,simply,571,"## Proposed Changes; 1. Fix preaccumulation issues with `RealReverseIndex`.; 2. ~~Fix~~ Identify issues regarding index reuse and partial tape evaluations.; 3. Add regression tests for hybrid parallel AD (subset of parallel_regression_AD).; 4. Re-enable parallel preaccumulation.; 5. Shared reading optimizations. ## Related Work; continues #1284. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294
https://github.com/su2code/SU2/pull/1295:46,Deployability,update,updated,46,"Dear all,. This PR resolves an issue with the updated restart logic. Further, it also provides a couple of modifications which will be required in a future PR aimed at the automatic identification of the aerodynamic system. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295
https://github.com/su2code/SU2/pull/1295:649,Deployability,update,updated,649,"Dear all,. This PR resolves an issue with the updated restart logic. Further, it also provides a couple of modifications which will be required in a future PR aimed at the automatic identification of the aerodynamic system. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295
https://github.com/su2code/SU2/pull/1295:62,Testability,log,logic,62,"Dear all,. This PR resolves an issue with the updated restart logic. Further, it also provides a couple of modifications which will be required in a future PR aimed at the automatic identification of the aerodynamic system. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295
https://github.com/su2code/SU2/pull/1295:576,Testability,test,test,576,"Dear all,. This PR resolves an issue with the updated restart logic. Further, it also provides a couple of modifications which will be required in a future PR aimed at the automatic identification of the aerodynamic system. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295
https://github.com/su2code/SU2/pull/1295:447,Usability,simpl,simply,447,"Dear all,. This PR resolves an issue with the updated restart logic. Further, it also provides a couple of modifications which will be required in a future PR aimed at the automatic identification of the aerodynamic system. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295
https://github.com/su2code/SU2/issues/1297:5359,Availability,down,down,5359," (NONE = no marker); MARKER_FAR= ( Farfield ); %; % Symmetry boundary marker(s) (NONE = no marker); % MARKER_SYM= ( Symmetry ); %; % ------------------------ SURFACES IDENTIFICATION ----------------------------%; %; % Marker(s) of the surface to be plotted or designed; MARKER_PLOTTING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%; %; % Numerical method for spatial gradients (GREEN_GAUSS, WEIGHTED_LEAST_SQUARES); NUM_METHOD_GRAD= GREEN_GAUSS; %; % Courant-Friedrichs-Lewy condition of the finest grid; CFL_NUMBER= 20.0; %; % Adaptive CFL number (NO, YES); CFL_ADAPT= NO; %; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10, 0.001 ); %; %; % ------------------------ LINEAR SOLVER DEFINITION ---------------------------%; %; % Linear solver or smoother for implicit formulations (BCGSTAB, FGMRES, SMOOTHER_JACOBI, ; % SMOOTHER_ILU, SMOOTHER_LUSGS, ; % SMOOTHER_LINELET); LINEAR_SOLVER= FGMRES; %; % Preconditioner of the Krylov linear solver (ILU, LU_SGS, LINELET, JACOBI); LINEAR_SOLVER_PREC= ILU; %; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-6; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 5 ; % Restart frequency for RESTARTED_FGMRES; LINEAR_SOLVER_RESTART_FREQUENCY= 10; %; % Relaxation factor for smoother-type solvers (LINEAR_SOLVER= SMOOTHER); LINEAR_SOLVER_SMOOTHER_RELAXATION= 0.9; %; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:5839,Availability,error,error,5839,"ed; MARKER_MONITORING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%; %; % Numerical method for spatial gradients (GREEN_GAUSS, WEIGHTED_LEAST_SQUARES); NUM_METHOD_GRAD= GREEN_GAUSS; %; % Courant-Friedrichs-Lewy condition of the finest grid; CFL_NUMBER= 20.0; %; % Adaptive CFL number (NO, YES); CFL_ADAPT= NO; %; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10, 0.001 ); %; %; % ------------------------ LINEAR SOLVER DEFINITION ---------------------------%; %; % Linear solver or smoother for implicit formulations (BCGSTAB, FGMRES, SMOOTHER_JACOBI, ; % SMOOTHER_ILU, SMOOTHER_LUSGS, ; % SMOOTHER_LINELET); LINEAR_SOLVER= FGMRES; %; % Preconditioner of the Krylov linear solver (ILU, LU_SGS, LINELET, JACOBI); LINEAR_SOLVER_PREC= ILU; %; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-6; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 5 ; % Restart frequency for RESTARTED_FGMRES; LINEAR_SOLVER_RESTART_FREQUENCY= 10; %; % Relaxation factor for smoother-type solvers (LINEAR_SOLVER= SMOOTHER); LINEAR_SOLVER_SMOOTHER_RELAXATION= 0.9; %; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= ROE; %; % Monotonic Upwind Scheme for Conservation Laws (TVD) in the flow equations.; % Required for 2nd order upwind schemes (NO, YES); MUSCL_FLOW= YES; %; % Slope limiter (NONE, VENKATAKRISHNAN, VENKATAKRISHNAN_WANG,; % BARTH_JESPERSEN, VAN_ALBADA_EDGE); %SLOPE_LIMITER_FLOW= VENKATAKRISHNAN_WANG; %; % Coefficient for the Venkat's limiter (upwind scheme). A larger values decrease; % the extent of limiting,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:10521,Availability,avail,available,10521,"adjoint input file; SOLUTION_ADJ_FILENAME= solution_adj.dat; %; % Output file format (TECPLOT, TECPLOT_BINARY, PARAVIEW,; % FIELDVIEW, FIELDVIEW_BINARY); OUTPUT_FILES= RESTART, PARAVIEW_ASCII, SURFACE_PARAVIEW_ASCII; %; % Output file convergence history (w/o extension) ; CONV_FILENAME= history; %; % Output file with the forces breakdown; BREAKDOWN_FILENAME= forces_breakdown.dat; %; % Output file restart flow; RESTART_FILENAME= restart_flow.dat; %; % Output file restart adjoint; RESTART_ADJ_FILENAME= restart_adj.dat; %; % Output file flow (w/o extension) variables; VOLUME_FILENAME= flow; %; % Output file adjoint (w/o extension) variables; VOLUME_ADJ_FILENAME= adjoint; %; % Output Objective function; VALUE_OBJFUNC_FILENAME= of_eval.dat; %; % Output objective function gradient (using continuous adjoint); GRAD_OBJFUNC_FILENAME= of_grad.dat; %; % Output file surface flow coefficient (w/o extension); SURFACE_FILENAME= surface_flow; %; % Output file surface adjoint coefficient (w/o extension); SURFACE_ADJ_FILENAME= surface_adjoint; %; % Writing frequency for volume/surface output; OUTPUT_WRT_FREQ= 5000; % Writing frequency for history output; HISTORY_WRT_FREQ_INNER= 1; % Writing convergence history frequency; SCREEN_WRT_FREQ_INNER= 1; % Screen output fields. SCREEN_OUTPUT = (INNER_ITER, RMS_DENSITY, RMS_TKE, RMS_DISSIPATION, LIFT, DRAG, MOMENT_Y); % History output groups (use 'SU2_CFD -d <config_file>' to view list of available fields); HISTORY_OUTPUT= (ITER, RMS_RES, AERO_COEFF, WALL_TIME); %; % Volume output fields/groups (use 'SU2_CFD -d <config_file>' to view list of available fields); VOLUME_OUTPUT= (COORDINATES, SOLUTION, PRIMITIVE, VORTEX_IDENTIFICATION). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]. Cluster information:; OS: Linux (CentOS 7.9); GCC 7.3.1; Open MPI 3.1.2; SU2 V7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:10677,Availability,avail,available,10677,"adjoint input file; SOLUTION_ADJ_FILENAME= solution_adj.dat; %; % Output file format (TECPLOT, TECPLOT_BINARY, PARAVIEW,; % FIELDVIEW, FIELDVIEW_BINARY); OUTPUT_FILES= RESTART, PARAVIEW_ASCII, SURFACE_PARAVIEW_ASCII; %; % Output file convergence history (w/o extension) ; CONV_FILENAME= history; %; % Output file with the forces breakdown; BREAKDOWN_FILENAME= forces_breakdown.dat; %; % Output file restart flow; RESTART_FILENAME= restart_flow.dat; %; % Output file restart adjoint; RESTART_ADJ_FILENAME= restart_adj.dat; %; % Output file flow (w/o extension) variables; VOLUME_FILENAME= flow; %; % Output file adjoint (w/o extension) variables; VOLUME_ADJ_FILENAME= adjoint; %; % Output Objective function; VALUE_OBJFUNC_FILENAME= of_eval.dat; %; % Output objective function gradient (using continuous adjoint); GRAD_OBJFUNC_FILENAME= of_grad.dat; %; % Output file surface flow coefficient (w/o extension); SURFACE_FILENAME= surface_flow; %; % Output file surface adjoint coefficient (w/o extension); SURFACE_ADJ_FILENAME= surface_adjoint; %; % Writing frequency for volume/surface output; OUTPUT_WRT_FREQ= 5000; % Writing frequency for history output; HISTORY_WRT_FREQ_INNER= 1; % Writing convergence history frequency; SCREEN_WRT_FREQ_INNER= 1; % Screen output fields. SCREEN_OUTPUT = (INNER_ITER, RMS_DENSITY, RMS_TKE, RMS_DISSIPATION, LIFT, DRAG, MOMENT_Y); % History output groups (use 'SU2_CFD -d <config_file>' to view list of available fields); HISTORY_OUTPUT= (ITER, RMS_RES, AERO_COEFF, WALL_TIME); %; % Volume output fields/groups (use 'SU2_CFD -d <config_file>' to view list of available fields); VOLUME_OUTPUT= (COORDINATES, SOLUTION, PRIMITIVE, VORTEX_IDENTIFICATION). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]. Cluster information:; OS: Linux (CentOS 7.9); GCC 7.3.1; Open MPI 3.1.2; SU2 V7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:1017,Deployability,configurat,configuration,1017,"concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi,. I am currently using SU2 to do some test cases for AIAA 1st Stability and Control Workshop. These cases need to run with a fixed-Cl as the DPW6 cases did. When I tried to use the knobs “FIXED_CL_MODE= YES” and “TARGET_CL= 0.50” in the .cfg input file to run these cases, the Cl change always got some odd significant jumps even though the AoA change was quite small and then the computations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % psf = lbf/ft^2, Density = slug/ft^3,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:3262,Deployability,update,updates,3262,"flows); SIDESLIP_ANGLE= 1.0; %; % Free-stream temperature (518.67 R by default); FREESTREAM_TEMPERATURE= 559.67; %; % Reynolds number (non-dimensional, based on the free-stream values); REYNOLDS_NUMBER= 260025.6363; %REYNOLDS_NUMBER= 4260000; %; % Reynolds length (1 in by default); REYNOLDS_LENGTH= 1.0; % Compressible flow non-dimensionalization (DIMENSIONAL, FREESTREAM_PRESS_EQ_ONE,; % FREESTREAM_VEL_EQ_MACH, FREESTREAM_VEL_EQ_ONE); REF_DIMENSIONALIZATION= FREESTREAM_VEL_EQ_MACH. % ----------------------------- CL DRIVER DEFINITION ---------------------------%; %; % Activate fixed lift mode (specify a CL instead of AoA, NO/YES); FIXED_CL_MODE= YES; %; % Target coefficient of lift for fixed lift mode (0.80 by default); TARGET_CL= 0.5; %; % Estimation of dCL/dAlpha (0.2 per degree by default); DCL_DALPHA= 0.3; %; % Maximum number of iterations between AoA updates; UPDATE_AOA_ITER_LIMIT= 200; %; % Number of iterations to evaluate dCL_dAlpha by using finite differences (500 by default); ITER_DCL_DALPHA= 500; %; % ---------------------- REFERENCE VALUE DEFINITION ---------------------------%; %; % Reference origin for moment computation (in); REF_ORIGIN_MOMENT_X = 78.759; REF_ORIGIN_MOMENT_Y = 0.0; REF_ORIGIN_MOMENT_Z = 10.570; %; % Reference length for pitching, rolling, and yawing non-dimensional; % moment (in); REF_LENGTH= 16.383; %; % Reference area for force coefficients (0 implies automatic; % calculation) (in^2); REF_AREA= 2098.39; %; % Aircraft semi-span (0 implies automatic calculation) (m or in); SEMI_SPAN= 68.71; %; % -------------------- BOUNDARY CONDITION DEFINITION --------------------------%; %; % Navier-Stokes wall boundary marker(s) (NONE = no marker); MARKER_HEATFLUX= ( Sting, 0.0, Fuselage, 0.0, WingUpper, 0.0, WingLower, 0.0, VT, 0.0, HTUpper, 0.0, HTLower, 0.0, HTTE, 0.0, VTWingTip, 0.0, VTTE, 0.0, WingTE, 0.0, WBFairing, 0.0, PWUpper, 0.0, PWLower, 0.0, PWTE, 0.0 )%; % Far-field boundary marker(s) (NONE = no marker); MARKER_FAR= ( Farfield ); %; % ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:3675,Deployability,rolling,rolling,3675,"ENGTH= 1.0; % Compressible flow non-dimensionalization (DIMENSIONAL, FREESTREAM_PRESS_EQ_ONE,; % FREESTREAM_VEL_EQ_MACH, FREESTREAM_VEL_EQ_ONE); REF_DIMENSIONALIZATION= FREESTREAM_VEL_EQ_MACH. % ----------------------------- CL DRIVER DEFINITION ---------------------------%; %; % Activate fixed lift mode (specify a CL instead of AoA, NO/YES); FIXED_CL_MODE= YES; %; % Target coefficient of lift for fixed lift mode (0.80 by default); TARGET_CL= 0.5; %; % Estimation of dCL/dAlpha (0.2 per degree by default); DCL_DALPHA= 0.3; %; % Maximum number of iterations between AoA updates; UPDATE_AOA_ITER_LIMIT= 200; %; % Number of iterations to evaluate dCL_dAlpha by using finite differences (500 by default); ITER_DCL_DALPHA= 500; %; % ---------------------- REFERENCE VALUE DEFINITION ---------------------------%; %; % Reference origin for moment computation (in); REF_ORIGIN_MOMENT_X = 78.759; REF_ORIGIN_MOMENT_Y = 0.0; REF_ORIGIN_MOMENT_Z = 10.570; %; % Reference length for pitching, rolling, and yawing non-dimensional; % moment (in); REF_LENGTH= 16.383; %; % Reference area for force coefficients (0 implies automatic; % calculation) (in^2); REF_AREA= 2098.39; %; % Aircraft semi-span (0 implies automatic calculation) (m or in); SEMI_SPAN= 68.71; %; % -------------------- BOUNDARY CONDITION DEFINITION --------------------------%; %; % Navier-Stokes wall boundary marker(s) (NONE = no marker); MARKER_HEATFLUX= ( Sting, 0.0, Fuselage, 0.0, WingUpper, 0.0, WingLower, 0.0, VT, 0.0, HTUpper, 0.0, HTLower, 0.0, HTTE, 0.0, VTWingTip, 0.0, VTTE, 0.0, WingTE, 0.0, WBFairing, 0.0, PWUpper, 0.0, PWLower, 0.0, PWTE, 0.0 )%; % Far-field boundary marker(s) (NONE = no marker); MARKER_FAR= ( Farfield ); %; % Symmetry boundary marker(s) (NONE = no marker); % MARKER_SYM= ( Symmetry ); %; % ------------------------ SURFACES IDENTIFICATION ----------------------------%; %; % Marker(s) of the surface to be plotted or designed; MARKER_PLOTTING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HT",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:9878,Deployability,continuous,continuous,9878,"medium.su2; %; % Mesh input file format (SU2, CGNS); MESH_FORMAT= SU2; %; % Mesh output file; MESH_OUT_FILENAME= mesh_out.su2; %; % Restart flow input file; SOLUTION_FILENAME= solution_flow.dat; %; % Restart adjoint input file; SOLUTION_ADJ_FILENAME= solution_adj.dat; %; % Output file format (TECPLOT, TECPLOT_BINARY, PARAVIEW,; % FIELDVIEW, FIELDVIEW_BINARY); OUTPUT_FILES= RESTART, PARAVIEW_ASCII, SURFACE_PARAVIEW_ASCII; %; % Output file convergence history (w/o extension) ; CONV_FILENAME= history; %; % Output file with the forces breakdown; BREAKDOWN_FILENAME= forces_breakdown.dat; %; % Output file restart flow; RESTART_FILENAME= restart_flow.dat; %; % Output file restart adjoint; RESTART_ADJ_FILENAME= restart_adj.dat; %; % Output file flow (w/o extension) variables; VOLUME_FILENAME= flow; %; % Output file adjoint (w/o extension) variables; VOLUME_ADJ_FILENAME= adjoint; %; % Output Objective function; VALUE_OBJFUNC_FILENAME= of_eval.dat; %; % Output objective function gradient (using continuous adjoint); GRAD_OBJFUNC_FILENAME= of_grad.dat; %; % Output file surface flow coefficient (w/o extension); SURFACE_FILENAME= surface_flow; %; % Output file surface adjoint coefficient (w/o extension); SURFACE_ADJ_FILENAME= surface_adjoint; %; % Writing frequency for volume/surface output; OUTPUT_WRT_FREQ= 5000; % Writing frequency for history output; HISTORY_WRT_FREQ_INNER= 1; % Writing convergence history frequency; SCREEN_WRT_FREQ_INNER= 1; % Screen output fields. SCREEN_OUTPUT = (INNER_ITER, RMS_DENSITY, RMS_TKE, RMS_DISSIPATION, LIFT, DRAG, MOMENT_Y); % History output groups (use 'SU2_CFD -d <config_file>' to view list of available fields); HISTORY_OUTPUT= (ITER, RMS_RES, AERO_COEFF, WALL_TIME); %; % Volume output fields/groups (use 'SU2_CFD -d <config_file>' to view list of available fields); VOLUME_OUTPUT= (COORDINATES, SOLUTION, PRIMITIVE, VORTEX_IDENTIFICATION). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:1786,Energy Efficiency,meter,meters,1786,"ations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % psf = lbf/ft^2, Density = slug/ft^3, ; % Speed = ft/s, Equiv. Area = ft^2 ); SYSTEM_MEASUREMENTS= US. % -------------------- COMPRESSIBLE FREE-STREAM DEFINITION --------------------%; %; % Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.7; %; % Angle of attack (degrees, only for compressible flows); AOA= 3.6; %; % Side-slip angle (degrees, only for compressible flows); SIDESLIP_ANGLE= 1.0; %; % Free-stream temperature (518.67 R by default); FREESTREAM_TEMPERATURE= 559.67; %; % Reynolds number (non-dimensional, based on the free-stream valu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:5262,Energy Efficiency,Adapt,Adaptive,5262," (NONE = no marker); MARKER_FAR= ( Farfield ); %; % Symmetry boundary marker(s) (NONE = no marker); % MARKER_SYM= ( Symmetry ); %; % ------------------------ SURFACES IDENTIFICATION ----------------------------%; %; % Marker(s) of the surface to be plotted or designed; MARKER_PLOTTING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%; %; % Numerical method for spatial gradients (GREEN_GAUSS, WEIGHTED_LEAST_SQUARES); NUM_METHOD_GRAD= GREEN_GAUSS; %; % Courant-Friedrichs-Lewy condition of the finest grid; CFL_NUMBER= 20.0; %; % Adaptive CFL number (NO, YES); CFL_ADAPT= NO; %; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10, 0.001 ); %; %; % ------------------------ LINEAR SOLVER DEFINITION ---------------------------%; %; % Linear solver or smoother for implicit formulations (BCGSTAB, FGMRES, SMOOTHER_JACOBI, ; % SMOOTHER_ILU, SMOOTHER_LUSGS, ; % SMOOTHER_LINELET); LINEAR_SOLVER= FGMRES; %; % Preconditioner of the Krylov linear solver (ILU, LU_SGS, LINELET, JACOBI); LINEAR_SOLVER_PREC= ILU; %; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-6; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 5 ; % Restart frequency for RESTARTED_FGMRES; LINEAR_SOLVER_RESTART_FREQUENCY= 10; %; % Relaxation factor for smoother-type solvers (LINEAR_SOLVER= SMOOTHER); LINEAR_SOLVER_SMOOTHER_RELAXATION= 0.9; %; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:5331,Energy Efficiency,adapt,adaptive,5331," (NONE = no marker); MARKER_FAR= ( Farfield ); %; % Symmetry boundary marker(s) (NONE = no marker); % MARKER_SYM= ( Symmetry ); %; % ------------------------ SURFACES IDENTIFICATION ----------------------------%; %; % Marker(s) of the surface to be plotted or designed; MARKER_PLOTTING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%; %; % Numerical method for spatial gradients (GREEN_GAUSS, WEIGHTED_LEAST_SQUARES); NUM_METHOD_GRAD= GREEN_GAUSS; %; % Courant-Friedrichs-Lewy condition of the finest grid; CFL_NUMBER= 20.0; %; % Adaptive CFL number (NO, YES); CFL_ADAPT= NO; %; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10, 0.001 ); %; %; % ------------------------ LINEAR SOLVER DEFINITION ---------------------------%; %; % Linear solver or smoother for implicit formulations (BCGSTAB, FGMRES, SMOOTHER_JACOBI, ; % SMOOTHER_ILU, SMOOTHER_LUSGS, ; % SMOOTHER_LINELET); LINEAR_SOLVER= FGMRES; %; % Preconditioner of the Krylov linear solver (ILU, LU_SGS, LINELET, JACOBI); LINEAR_SOLVER_PREC= ILU; %; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-6; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 5 ; % Restart frequency for RESTARTED_FGMRES; LINEAR_SOLVER_RESTART_FREQUENCY= 10; %; % Relaxation factor for smoother-type solvers (LINEAR_SOLVER= SMOOTHER); LINEAR_SOLVER_SMOOTHER_RELAXATION= 0.9; %; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:851,Modifiability,config,config,851,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi,. I am currently using SU2 to do some test cases for AIAA 1st Stability and Control Workshop. These cases need to run with a fixed-Cl as the DPW6 cases did. When I tried to use the knobs “FIXED_CL_MODE= YES” and “TARGET_CL= 0.50” in the .cfg input file to run these cases, the Cl change always got some odd significant jumps even though the AoA change was quite small and then the computations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:1017,Modifiability,config,configuration,1017,"concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi,. I am currently using SU2 to do some test cases for AIAA 1st Stability and Control Workshop. These cases need to run with a fixed-Cl as the DPW6 cases did. When I tried to use the knobs “FIXED_CL_MODE= YES” and “TARGET_CL= 0.50” in the .cfg input file to run these cases, the Cl change always got some odd significant jumps even though the AoA change was quite small and then the computations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % psf = lbf/ft^2, Density = slug/ft^3,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:5262,Modifiability,Adapt,Adaptive,5262," (NONE = no marker); MARKER_FAR= ( Farfield ); %; % Symmetry boundary marker(s) (NONE = no marker); % MARKER_SYM= ( Symmetry ); %; % ------------------------ SURFACES IDENTIFICATION ----------------------------%; %; % Marker(s) of the surface to be plotted or designed; MARKER_PLOTTING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%; %; % Numerical method for spatial gradients (GREEN_GAUSS, WEIGHTED_LEAST_SQUARES); NUM_METHOD_GRAD= GREEN_GAUSS; %; % Courant-Friedrichs-Lewy condition of the finest grid; CFL_NUMBER= 20.0; %; % Adaptive CFL number (NO, YES); CFL_ADAPT= NO; %; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10, 0.001 ); %; %; % ------------------------ LINEAR SOLVER DEFINITION ---------------------------%; %; % Linear solver or smoother for implicit formulations (BCGSTAB, FGMRES, SMOOTHER_JACOBI, ; % SMOOTHER_ILU, SMOOTHER_LUSGS, ; % SMOOTHER_LINELET); LINEAR_SOLVER= FGMRES; %; % Preconditioner of the Krylov linear solver (ILU, LU_SGS, LINELET, JACOBI); LINEAR_SOLVER_PREC= ILU; %; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-6; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 5 ; % Restart frequency for RESTARTED_FGMRES; LINEAR_SOLVER_RESTART_FREQUENCY= 10; %; % Relaxation factor for smoother-type solvers (LINEAR_SOLVER= SMOOTHER); LINEAR_SOLVER_SMOOTHER_RELAXATION= 0.9; %; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:5331,Modifiability,adapt,adaptive,5331," (NONE = no marker); MARKER_FAR= ( Farfield ); %; % Symmetry boundary marker(s) (NONE = no marker); % MARKER_SYM= ( Symmetry ); %; % ------------------------ SURFACES IDENTIFICATION ----------------------------%; %; % Marker(s) of the surface to be plotted or designed; MARKER_PLOTTING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%; %; % Numerical method for spatial gradients (GREEN_GAUSS, WEIGHTED_LEAST_SQUARES); NUM_METHOD_GRAD= GREEN_GAUSS; %; % Courant-Friedrichs-Lewy condition of the finest grid; CFL_NUMBER= 20.0; %; % Adaptive CFL number (NO, YES); CFL_ADAPT= NO; %; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10, 0.001 ); %; %; % ------------------------ LINEAR SOLVER DEFINITION ---------------------------%; %; % Linear solver or smoother for implicit formulations (BCGSTAB, FGMRES, SMOOTHER_JACOBI, ; % SMOOTHER_ILU, SMOOTHER_LUSGS, ; % SMOOTHER_LINELET); LINEAR_SOLVER= FGMRES; %; % Preconditioner of the Krylov linear solver (ILU, LU_SGS, LINELET, JACOBI); LINEAR_SOLVER_PREC= ILU; %; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-6; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 5 ; % Restart frequency for RESTARTED_FGMRES; LINEAR_SOLVER_RESTART_FREQUENCY= 10; %; % Relaxation factor for smoother-type solvers (LINEAR_SOLVER= SMOOTHER); LINEAR_SOLVER_SMOOTHER_RELAXATION= 0.9; %; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:9646,Modifiability,variab,variables,9646,"s convergence; CONV_CAUCHY_EPS= 1E-8; %; % ------------------------- INPUT/OUTPUT INFORMATION --------------------------%; %; % Mesh input file; MESH_FILENAME= SnC_medium.su2; %; % Mesh input file format (SU2, CGNS); MESH_FORMAT= SU2; %; % Mesh output file; MESH_OUT_FILENAME= mesh_out.su2; %; % Restart flow input file; SOLUTION_FILENAME= solution_flow.dat; %; % Restart adjoint input file; SOLUTION_ADJ_FILENAME= solution_adj.dat; %; % Output file format (TECPLOT, TECPLOT_BINARY, PARAVIEW,; % FIELDVIEW, FIELDVIEW_BINARY); OUTPUT_FILES= RESTART, PARAVIEW_ASCII, SURFACE_PARAVIEW_ASCII; %; % Output file convergence history (w/o extension) ; CONV_FILENAME= history; %; % Output file with the forces breakdown; BREAKDOWN_FILENAME= forces_breakdown.dat; %; % Output file restart flow; RESTART_FILENAME= restart_flow.dat; %; % Output file restart adjoint; RESTART_ADJ_FILENAME= restart_adj.dat; %; % Output file flow (w/o extension) variables; VOLUME_FILENAME= flow; %; % Output file adjoint (w/o extension) variables; VOLUME_ADJ_FILENAME= adjoint; %; % Output Objective function; VALUE_OBJFUNC_FILENAME= of_eval.dat; %; % Output objective function gradient (using continuous adjoint); GRAD_OBJFUNC_FILENAME= of_grad.dat; %; % Output file surface flow coefficient (w/o extension); SURFACE_FILENAME= surface_flow; %; % Output file surface adjoint coefficient (w/o extension); SURFACE_ADJ_FILENAME= surface_adjoint; %; % Writing frequency for volume/surface output; OUTPUT_WRT_FREQ= 5000; % Writing frequency for history output; HISTORY_WRT_FREQ_INNER= 1; % Writing convergence history frequency; SCREEN_WRT_FREQ_INNER= 1; % Screen output fields. SCREEN_OUTPUT = (INNER_ITER, RMS_DENSITY, RMS_TKE, RMS_DISSIPATION, LIFT, DRAG, MOMENT_Y); % History output groups (use 'SU2_CFD -d <config_file>' to view list of available fields); HISTORY_OUTPUT= (ITER, RMS_RES, AERO_COEFF, WALL_TIME); %; % Volume output fields/groups (use 'SU2_CFD -d <config_file>' to view list of available fields); VOLUME_OUTPUT= (COO",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:9721,Modifiability,variab,variables,9721,"s convergence; CONV_CAUCHY_EPS= 1E-8; %; % ------------------------- INPUT/OUTPUT INFORMATION --------------------------%; %; % Mesh input file; MESH_FILENAME= SnC_medium.su2; %; % Mesh input file format (SU2, CGNS); MESH_FORMAT= SU2; %; % Mesh output file; MESH_OUT_FILENAME= mesh_out.su2; %; % Restart flow input file; SOLUTION_FILENAME= solution_flow.dat; %; % Restart adjoint input file; SOLUTION_ADJ_FILENAME= solution_adj.dat; %; % Output file format (TECPLOT, TECPLOT_BINARY, PARAVIEW,; % FIELDVIEW, FIELDVIEW_BINARY); OUTPUT_FILES= RESTART, PARAVIEW_ASCII, SURFACE_PARAVIEW_ASCII; %; % Output file convergence history (w/o extension) ; CONV_FILENAME= history; %; % Output file with the forces breakdown; BREAKDOWN_FILENAME= forces_breakdown.dat; %; % Output file restart flow; RESTART_FILENAME= restart_flow.dat; %; % Output file restart adjoint; RESTART_ADJ_FILENAME= restart_adj.dat; %; % Output file flow (w/o extension) variables; VOLUME_FILENAME= flow; %; % Output file adjoint (w/o extension) variables; VOLUME_ADJ_FILENAME= adjoint; %; % Output Objective function; VALUE_OBJFUNC_FILENAME= of_eval.dat; %; % Output objective function gradient (using continuous adjoint); GRAD_OBJFUNC_FILENAME= of_grad.dat; %; % Output file surface flow coefficient (w/o extension); SURFACE_FILENAME= surface_flow; %; % Output file surface adjoint coefficient (w/o extension); SURFACE_ADJ_FILENAME= surface_adjoint; %; % Writing frequency for volume/surface output; OUTPUT_WRT_FREQ= 5000; % Writing frequency for history output; HISTORY_WRT_FREQ_INNER= 1; % Writing convergence history frequency; SCREEN_WRT_FREQ_INNER= 1; % Screen output fields. SCREEN_OUTPUT = (INNER_ITER, RMS_DENSITY, RMS_TKE, RMS_DISSIPATION, LIFT, DRAG, MOMENT_Y); % History output groups (use 'SU2_CFD -d <config_file>' to view list of available fields); HISTORY_OUTPUT= (ITER, RMS_RES, AERO_COEFF, WALL_TIME); %; % Volume output fields/groups (use 'SU2_CFD -d <config_file>' to view list of available fields); VOLUME_OUTPUT= (COO",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:680,Performance,optimiz,optimization,680,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi,. I am currently using SU2 to do some test cases for AIAA 1st Stability and Control Workshop. These cases need to run with a fixed-Cl as the DPW6 cases did. When I tried to use the knobs “FIXED_CL_MODE= YES” and “TARGET_CL= 0.50” in the .cfg input file to run these cases, the Cl change always got some odd significant jumps even though the AoA change was quite small and then the computations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:2285,Security,attack,attack,2285,"ROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % psf = lbf/ft^2, Density = slug/ft^3, ; % Speed = ft/s, Equiv. Area = ft^2 ); SYSTEM_MEASUREMENTS= US. % -------------------- COMPRESSIBLE FREE-STREAM DEFINITION --------------------%; %; % Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.7; %; % Angle of attack (degrees, only for compressible flows); AOA= 3.6; %; % Side-slip angle (degrees, only for compressible flows); SIDESLIP_ANGLE= 1.0; %; % Free-stream temperature (518.67 R by default); FREESTREAM_TEMPERATURE= 559.67; %; % Reynolds number (non-dimensional, based on the free-stream values); REYNOLDS_NUMBER= 260025.6363; %REYNOLDS_NUMBER= 4260000; %; % Reynolds length (1 in by default); REYNOLDS_LENGTH= 1.0; % Compressible flow non-dimensionalization (DIMENSIONAL, FREESTREAM_PRESS_EQ_ONE,; % FREESTREAM_VEL_EQ_MACH, FREESTREAM_VEL_EQ_ONE); REF_DIMENSIONALIZATION= FREESTREAM_VEL_EQ_MACH. % ----------------------------- CL DRIVER DEFINITION ---------------------------%; %; % Activate fixed lift mode (specify a CL instead of AoA, NO/YES); FIXED_CL_MODE= YES; %; % Target coefficient of lift for fixed lift mode (0.80 by default); TARGET_CL= 0.5; %; % Estimation of dCL/dAlpha (0.2 per degree by default); DCL_DALPHA= 0.3; %; % Maximum number of iterations between AoA updates; UPDATE_AOA_ITER_LIMIT= 200; %; % ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:226,Testability,test,test,226,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi,. I am currently using SU2 to do some test cases for AIAA 1st Stability and Control Workshop. These cases need to run with a fixed-Cl as the DPW6 cases did. When I tried to use the knobs “FIXED_CL_MODE= YES” and “TARGET_CL= 0.50” in the .cfg input file to run these cases, the Cl change always got some odd significant jumps even though the AoA change was quite small and then the computations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/issues/1297:25,Usability,clear,clear,25,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi,. I am currently using SU2 to do some test cases for AIAA 1st Stability and Control Workshop. These cases need to run with a fixed-Cl as the DPW6 cases did. When I tried to use the knobs “FIXED_CL_MODE= YES” and “TARGET_CL= 0.50” in the .cfg input file to run these cases, the Cl change always got some odd significant jumps even though the AoA change was quite small and then the computations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297
https://github.com/su2code/SU2/pull/1300:545,Deployability,integrat,integration,545,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300
https://github.com/su2code/SU2/pull/1300:1398,Deployability,integrat,integrated,1398,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300
https://github.com/su2code/SU2/pull/1300:1898,Deployability,update,updated,1898,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300
https://github.com/su2code/SU2/pull/1300:97,Integrability,rout,routines,97,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300
https://github.com/su2code/SU2/pull/1300:545,Integrability,integrat,integration,545,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300
https://github.com/su2code/SU2/pull/1300:846,Integrability,depend,depending,846,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300
https://github.com/su2code/SU2/pull/1300:1398,Integrability,integrat,integrated,1398,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300
https://github.com/su2code/SU2/pull/1300:193,Modifiability,refactor,refactorization,193,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300
https://github.com/su2code/SU2/pull/1300:906,Modifiability,config,config,906,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300
https://github.com/su2code/SU2/pull/1300:1022,Modifiability,coupling,coupling,1022,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300
https://github.com/su2code/SU2/pull/1300:1228,Modifiability,extend,extended,1228,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300
https://github.com/su2code/SU2/pull/1300:1316,Modifiability,variab,variables,1316,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300
https://github.com/su2code/SU2/pull/1300:1327,Modifiability,config,config,1327,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300
https://github.com/su2code/SU2/pull/1300:1261,Security,access,accessible,1261,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300
https://github.com/su2code/SU2/pull/1300:1825,Testability,test,test,1825,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300
https://github.com/su2code/SU2/pull/1300:1696,Usability,simpl,simply,1696,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300
https://github.com/su2code/SU2/pull/1303:562,Deployability,update,updated,562,"## Proposed Changes; Move from CGeometry to an interpolation class (solves the ""numerical recipes problem"", let's not do that again...). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1303
https://github.com/su2code/SU2/pull/1303:489,Testability,test,test,489,"## Proposed Changes; Move from CGeometry to an interpolation class (solves the ""numerical recipes problem"", let's not do that again...). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1303
https://github.com/su2code/SU2/pull/1303:360,Usability,simpl,simply,360,"## Proposed Changes; Move from CGeometry to an interpolation class (solves the ""numerical recipes problem"", let's not do that again...). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1303
https://github.com/su2code/SU2/issues/1307:596,Integrability,depend,depending,596,"Description:; With our current mesh, on an 8 node, 32 intel cores per node system, our average CPU utilization per node ranges between 31% and 86%. The interconnect fabric is far from fully utilized in terms of throughput. Memory utilization is not nearly that inconsistent (differences of 2-3x). On a different system, 4 node 128 AMD cores per node, the average CPU utilization per node ranges between 54% and 95%. The same mesh is used in both instances. To Reproduce:; Run a mesh on a multi-node system with different core counts and I expect that you will see varied CPU utilization per node depending on how ParMETIS decided to partition the mesh. System Software Environment:; OS: CentOS7; GCC 7.3.1; MPI: openMPI 3.1.2; SU2 7.0.1 (with modifications so that it can write files and to correct the fixed CL issue). Do you have recommendations on how to improve the decomposition?; Or, if parmetis does not give sufficient options to improve the decomposition result, perhaps change this to a feature request to add ptscotch and/or zoltan support?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307
https://github.com/su2code/SU2/issues/1307:211,Performance,throughput,throughput,211,"Description:; With our current mesh, on an 8 node, 32 intel cores per node system, our average CPU utilization per node ranges between 31% and 86%. The interconnect fabric is far from fully utilized in terms of throughput. Memory utilization is not nearly that inconsistent (differences of 2-3x). On a different system, 4 node 128 AMD cores per node, the average CPU utilization per node ranges between 54% and 95%. The same mesh is used in both instances. To Reproduce:; Run a mesh on a multi-node system with different core counts and I expect that you will see varied CPU utilization per node depending on how ParMETIS decided to partition the mesh. System Software Environment:; OS: CentOS7; GCC 7.3.1; MPI: openMPI 3.1.2; SU2 7.0.1 (with modifications so that it can write files and to correct the fixed CL issue). Do you have recommendations on how to improve the decomposition?; Or, if parmetis does not give sufficient options to improve the decomposition result, perhaps change this to a feature request to add ptscotch and/or zoltan support?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307
https://github.com/su2code/SU2/pull/1310:1670,Deployability,update,updated,1670,"ith SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `export LD_LIBRARY_PATH=/path/to/libROM/build/:$LD_LIBRARY_PATH`; 4. You can test by adding `SAVE_LIBROM=YES` to the Quickstart config",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310
https://github.com/su2code/SU2/pull/1310:108,Energy Efficiency,reduce,reduced,108,"## Proposed Changes; Adding support to use the external library libROM (https://github.com/LLNL/libROM) for reduced order modeling with SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `ex",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310
https://github.com/su2code/SU2/pull/1310:1987,Modifiability,variab,variable,1987,"ith SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `export LD_LIBRARY_PATH=/path/to/libROM/build/:$LD_LIBRARY_PATH`; 4. You can test by adding `SAVE_LIBROM=YES` to the Quickstart config",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310
https://github.com/su2code/SU2/pull/1310:2126,Modifiability,config,config,2126,"ith SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `export LD_LIBRARY_PATH=/path/to/libROM/build/:$LD_LIBRARY_PATH`; 4. You can test by adding `SAVE_LIBROM=YES` to the Quickstart config",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310
https://github.com/su2code/SU2/pull/1310:565,Testability,test,test,565,"## Proposed Changes; Adding support to use the external library libROM (https://github.com/LLNL/libROM) for reduced order modeling with SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `ex",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310
https://github.com/su2code/SU2/pull/1310:971,Testability,test,tested,971,"## Proposed Changes; Adding support to use the external library libROM (https://github.com/LLNL/libROM) for reduced order modeling with SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `ex",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310
https://github.com/su2code/SU2/pull/1310:1597,Testability,test,test,1597,"ith SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `export LD_LIBRARY_PATH=/path/to/libROM/build/:$LD_LIBRARY_PATH`; 4. You can test by adding `SAVE_LIBROM=YES` to the Quickstart config",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310
https://github.com/su2code/SU2/pull/1310:2075,Testability,test,test,2075,"ith SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `export LD_LIBRARY_PATH=/path/to/libROM/build/:$LD_LIBRARY_PATH`; 4. You can test by adding `SAVE_LIBROM=YES` to the Quickstart config",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310
https://github.com/su2code/SU2/pull/1310:1177,Usability,guid,guide,1177,"ith SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `export LD_LIBRARY_PATH=/path/to/libROM/build/:$LD_LIBRARY_PATH`; 4. You can test by adding `SAVE_LIBROM=YES` to the Quickstart config",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310
https://github.com/su2code/SU2/pull/1310:1468,Usability,simpl,simply,1468,"ith SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `export LD_LIBRARY_PATH=/path/to/libROM/build/:$LD_LIBRARY_PATH`; 4. You can test by adding `SAVE_LIBROM=YES` to the Quickstart config",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310
https://github.com/su2code/SU2/pull/1311:669,Deployability,update,updated,669,"## Proposed Changes; It had mpi problems and others: https://www.cfd-online.com/Forums/su2/236677-mpi-returns-wrong-objective-function-values.html. The target Cp file was also not formatted correctly, the residuals will change because of that. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1311
https://github.com/su2code/SU2/pull/1311:596,Testability,test,test,596,"## Proposed Changes; It had mpi problems and others: https://www.cfd-online.com/Forums/su2/236677-mpi-returns-wrong-objective-function-values.html. The target Cp file was also not formatted correctly, the residuals will change because of that. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1311
https://github.com/su2code/SU2/pull/1311:467,Usability,simpl,simply,467,"## Proposed Changes; It had mpi problems and others: https://www.cfd-online.com/Forums/su2/236677-mpi-returns-wrong-objective-function-values.html. The target Cp file was also not formatted correctly, the residuals will change because of that. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1311
https://github.com/su2code/SU2/pull/1312:557,Deployability,update,updated,557,"## Proposed Changes; Introduce a ""matrix view"" type to avoid ** for example when passing gradients of primitives into the numerics. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1312
https://github.com/su2code/SU2/pull/1312:55,Safety,avoid,avoid,55,"## Proposed Changes; Introduce a ""matrix view"" type to avoid ** for example when passing gradients of primitives into the numerics. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1312
https://github.com/su2code/SU2/pull/1312:484,Testability,test,test,484,"## Proposed Changes; Introduce a ""matrix view"" type to avoid ** for example when passing gradients of primitives into the numerics. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1312
https://github.com/su2code/SU2/pull/1312:355,Usability,simpl,simply,355,"## Proposed Changes; Introduce a ""matrix view"" type to avoid ** for example when passing gradients of primitives into the numerics. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1312
https://github.com/su2code/SU2/pull/1316:1151,Deployability,update,updated,1151,"## Proposed Changes; *This branch includes steady state turbomachinery features like multi-zone mixing plane, pressure ramps and rotations ramps essential for convergence. In additions, multi-zone performance computations with screen output is also implemented here.*; . ## Related Work; * The code now follows the same path as that of fluid driver, CTurbomachineryDriver will be removed after verification. There is some implementation of boost currently, it will be re-coded soon.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. *Please note, this is a draft pull request. I wish to get more comments on the section of code which are working like, mixing plane and performance computations. Config, tutorial and comments will be updated follow soon after.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1316
https://github.com/su2code/SU2/pull/1316:1445,Deployability,update,updated,1445,"## Proposed Changes; *This branch includes steady state turbomachinery features like multi-zone mixing plane, pressure ramps and rotations ramps essential for convergence. In additions, multi-zone performance computations with screen output is also implemented here.*; . ## Related Work; * The code now follows the same path as that of fluid driver, CTurbomachineryDriver will be removed after verification. There is some implementation of boost currently, it will be re-coded soon.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. *Please note, this is a draft pull request. I wish to get more comments on the section of code which are working like, mixing plane and performance computations. Config, tutorial and comments will be updated follow soon after.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1316
https://github.com/su2code/SU2/pull/1316:1407,Modifiability,Config,Config,1407,"## Proposed Changes; *This branch includes steady state turbomachinery features like multi-zone mixing plane, pressure ramps and rotations ramps essential for convergence. In additions, multi-zone performance computations with screen output is also implemented here.*; . ## Related Work; * The code now follows the same path as that of fluid driver, CTurbomachineryDriver will be removed after verification. There is some implementation of boost currently, it will be re-coded soon.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. *Please note, this is a draft pull request. I wish to get more comments on the section of code which are working like, mixing plane and performance computations. Config, tutorial and comments will be updated follow soon after.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1316
https://github.com/su2code/SU2/pull/1316:197,Performance,perform,performance,197,"## Proposed Changes; *This branch includes steady state turbomachinery features like multi-zone mixing plane, pressure ramps and rotations ramps essential for convergence. In additions, multi-zone performance computations with screen output is also implemented here.*; . ## Related Work; * The code now follows the same path as that of fluid driver, CTurbomachineryDriver will be removed after verification. There is some implementation of boost currently, it will be re-coded soon.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. *Please note, this is a draft pull request. I wish to get more comments on the section of code which are working like, mixing plane and performance computations. Config, tutorial and comments will be updated follow soon after.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1316
https://github.com/su2code/SU2/pull/1316:1381,Performance,perform,performance,1381,"## Proposed Changes; *This branch includes steady state turbomachinery features like multi-zone mixing plane, pressure ramps and rotations ramps essential for convergence. In additions, multi-zone performance computations with screen output is also implemented here.*; . ## Related Work; * The code now follows the same path as that of fluid driver, CTurbomachineryDriver will be removed after verification. There is some implementation of boost currently, it will be re-coded soon.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. *Please note, this is a draft pull request. I wish to get more comments on the section of code which are working like, mixing plane and performance computations. Config, tutorial and comments will be updated follow soon after.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1316
https://github.com/su2code/SU2/pull/1316:1078,Testability,test,test,1078,"## Proposed Changes; *This branch includes steady state turbomachinery features like multi-zone mixing plane, pressure ramps and rotations ramps essential for convergence. In additions, multi-zone performance computations with screen output is also implemented here.*; . ## Related Work; * The code now follows the same path as that of fluid driver, CTurbomachineryDriver will be removed after verification. There is some implementation of boost currently, it will be re-coded soon.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. *Please note, this is a draft pull request. I wish to get more comments on the section of code which are working like, mixing plane and performance computations. Config, tutorial and comments will be updated follow soon after.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1316
https://github.com/su2code/SU2/pull/1316:657,Usability,guid,guide,657,"## Proposed Changes; *This branch includes steady state turbomachinery features like multi-zone mixing plane, pressure ramps and rotations ramps essential for convergence. In additions, multi-zone performance computations with screen output is also implemented here.*; . ## Related Work; * The code now follows the same path as that of fluid driver, CTurbomachineryDriver will be removed after verification. There is some implementation of boost currently, it will be re-coded soon.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. *Please note, this is a draft pull request. I wish to get more comments on the section of code which are working like, mixing plane and performance computations. Config, tutorial and comments will be updated follow soon after.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1316
https://github.com/su2code/SU2/pull/1316:949,Usability,simpl,simply,949,"## Proposed Changes; *This branch includes steady state turbomachinery features like multi-zone mixing plane, pressure ramps and rotations ramps essential for convergence. In additions, multi-zone performance computations with screen output is also implemented here.*; . ## Related Work; * The code now follows the same path as that of fluid driver, CTurbomachineryDriver will be removed after verification. There is some implementation of boost currently, it will be re-coded soon.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. *Please note, this is a draft pull request. I wish to get more comments on the section of code which are working like, mixing plane and performance computations. Config, tutorial and comments will be updated follow soon after.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1316
https://github.com/su2code/SU2/issues/1319:933,Availability,fault,fault,933,"Hi all, . I recently discovered the Gust simulation capabilities of SU2 for two-dimensional Euler flows. . I am trying to implement the additional terms necessary for extending the method to 3D Navier-Stokes flows. I am running into trouble when trying to implement the changes necessary to achieve this. For now, I have began working on the two functions responsible for the gust simulations:. 1. SU2/SU2_CFD/src/iteration_structure.cpp::CFluidIteration::SetWind_GustField; 2. SU2/SU2_CFD/src/numerics/flow/flow_sources.cpp::CSourceWindGust::ComputeResidual. From what I understand the extension to 3D should simply consist in modifying the function `SetWind_GustField` to impose a 3D grid-velocity instead of a 2D grid velocity, and adding the appropriate source terms in the function `CSourceWindGust` (these can even be set to zero, just to debug the code). . However, when I try to implement these changes, I get a segmentation fault that I cannot identify. . Does someone have an idea on how to implement this feature successfully ? . PS: I have attached the modifications I made to the two functions mentioned above here:; [SetWind_GustField.txt](https://github.com/su2code/SU2/files/6740388/SetWind_GustField.txt); [ComputeResidual.txt](https://github.com/su2code/SU2/files/6740389/ComputeResidual.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1319
https://github.com/su2code/SU2/issues/1319:167,Modifiability,extend,extending,167,"Hi all, . I recently discovered the Gust simulation capabilities of SU2 for two-dimensional Euler flows. . I am trying to implement the additional terms necessary for extending the method to 3D Navier-Stokes flows. I am running into trouble when trying to implement the changes necessary to achieve this. For now, I have began working on the two functions responsible for the gust simulations:. 1. SU2/SU2_CFD/src/iteration_structure.cpp::CFluidIteration::SetWind_GustField; 2. SU2/SU2_CFD/src/numerics/flow/flow_sources.cpp::CSourceWindGust::ComputeResidual. From what I understand the extension to 3D should simply consist in modifying the function `SetWind_GustField` to impose a 3D grid-velocity instead of a 2D grid velocity, and adding the appropriate source terms in the function `CSourceWindGust` (these can even be set to zero, just to debug the code). . However, when I try to implement these changes, I get a segmentation fault that I cannot identify. . Does someone have an idea on how to implement this feature successfully ? . PS: I have attached the modifications I made to the two functions mentioned above here:; [SetWind_GustField.txt](https://github.com/su2code/SU2/files/6740388/SetWind_GustField.txt); [ComputeResidual.txt](https://github.com/su2code/SU2/files/6740389/ComputeResidual.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1319
https://github.com/su2code/SU2/issues/1319:610,Usability,simpl,simply,610,"Hi all, . I recently discovered the Gust simulation capabilities of SU2 for two-dimensional Euler flows. . I am trying to implement the additional terms necessary for extending the method to 3D Navier-Stokes flows. I am running into trouble when trying to implement the changes necessary to achieve this. For now, I have began working on the two functions responsible for the gust simulations:. 1. SU2/SU2_CFD/src/iteration_structure.cpp::CFluidIteration::SetWind_GustField; 2. SU2/SU2_CFD/src/numerics/flow/flow_sources.cpp::CSourceWindGust::ComputeResidual. From what I understand the extension to 3D should simply consist in modifying the function `SetWind_GustField` to impose a 3D grid-velocity instead of a 2D grid velocity, and adding the appropriate source terms in the function `CSourceWindGust` (these can even be set to zero, just to debug the code). . However, when I try to implement these changes, I get a segmentation fault that I cannot identify. . Does someone have an idea on how to implement this feature successfully ? . PS: I have attached the modifications I made to the two functions mentioned above here:; [SetWind_GustField.txt](https://github.com/su2code/SU2/files/6740388/SetWind_GustField.txt); [ComputeResidual.txt](https://github.com/su2code/SU2/files/6740389/ComputeResidual.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1319
https://github.com/su2code/SU2/pull/1320:117,Availability,down,download,117,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Simple update of link to download for Operating Systems in ReadMe. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1320
https://github.com/su2code/SU2/pull/1320:99,Deployability,update,update,99,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Simple update of link to download for Operating Systems in ReadMe. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1320
https://github.com/su2code/SU2/pull/1320:972,Deployability,update,updated,972,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Simple update of link to download for Operating Systems in ReadMe. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1320
https://github.com/su2code/SU2/pull/1320:899,Testability,test,test,899,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Simple update of link to download for Operating Systems in ReadMe. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1320
https://github.com/su2code/SU2/pull/1320:92,Usability,Simpl,Simple,92,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Simple update of link to download for Operating Systems in ReadMe. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1320
https://github.com/su2code/SU2/pull/1320:479,Usability,guid,guide,479,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Simple update of link to download for Operating Systems in ReadMe. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1320
https://github.com/su2code/SU2/pull/1320:770,Usability,simpl,simply,770,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Simple update of link to download for Operating Systems in ReadMe. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1320
https://github.com/su2code/SU2/pull/1326:319,Availability,error,errors,319,"## Proposed Changes; -This work is focused on fixing some of the axisymmetric loop structures within NEMO, which prevented residual evolution. This also changes a viscous planar wedge regression to an axisymmetric case. . -Code updates to make NEMO more-in-line with SU2 code style. i.e. variable declarations, SU2 MPI errors, etc. -Fixes bug in vibrational-electronic functionality for CSU2TCLib. -Updating ionization/nheavy loops so CSU2TCLib and CMutationTCLib are consistent. . ## Related Work; This addresses/builds on #1106 #1205 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1326
https://github.com/su2code/SU2/pull/1326:228,Deployability,update,updates,228,"## Proposed Changes; -This work is focused on fixing some of the axisymmetric loop structures within NEMO, which prevented residual evolution. This also changes a viscous planar wedge regression to an axisymmetric case. . -Code updates to make NEMO more-in-line with SU2 code style. i.e. variable declarations, SU2 MPI errors, etc. -Fixes bug in vibrational-electronic functionality for CSU2TCLib. -Updating ionization/nheavy loops so CSU2TCLib and CMutationTCLib are consistent. . ## Related Work; This addresses/builds on #1106 #1205 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1326
https://github.com/su2code/SU2/pull/1326:963,Deployability,update,updated,963,"## Proposed Changes; -This work is focused on fixing some of the axisymmetric loop structures within NEMO, which prevented residual evolution. This also changes a viscous planar wedge regression to an axisymmetric case. . -Code updates to make NEMO more-in-line with SU2 code style. i.e. variable declarations, SU2 MPI errors, etc. -Fixes bug in vibrational-electronic functionality for CSU2TCLib. -Updating ionization/nheavy loops so CSU2TCLib and CMutationTCLib are consistent. . ## Related Work; This addresses/builds on #1106 #1205 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1326
https://github.com/su2code/SU2/pull/1326:288,Modifiability,variab,variable,288,"## Proposed Changes; -This work is focused on fixing some of the axisymmetric loop structures within NEMO, which prevented residual evolution. This also changes a viscous planar wedge regression to an axisymmetric case. . -Code updates to make NEMO more-in-line with SU2 code style. i.e. variable declarations, SU2 MPI errors, etc. -Fixes bug in vibrational-electronic functionality for CSU2TCLib. -Updating ionization/nheavy loops so CSU2TCLib and CMutationTCLib are consistent. . ## Related Work; This addresses/builds on #1106 #1205 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1326
https://github.com/su2code/SU2/pull/1326:890,Testability,test,test,890,"## Proposed Changes; -This work is focused on fixing some of the axisymmetric loop structures within NEMO, which prevented residual evolution. This also changes a viscous planar wedge regression to an axisymmetric case. . -Code updates to make NEMO more-in-line with SU2 code style. i.e. variable declarations, SU2 MPI errors, etc. -Fixes bug in vibrational-electronic functionality for CSU2TCLib. -Updating ionization/nheavy loops so CSU2TCLib and CMutationTCLib are consistent. . ## Related Work; This addresses/builds on #1106 #1205 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1326
https://github.com/su2code/SU2/pull/1326:761,Usability,simpl,simply,761,"## Proposed Changes; -This work is focused on fixing some of the axisymmetric loop structures within NEMO, which prevented residual evolution. This also changes a viscous planar wedge regression to an axisymmetric case. . -Code updates to make NEMO more-in-line with SU2 code style. i.e. variable declarations, SU2 MPI errors, etc. -Fixes bug in vibrational-electronic functionality for CSU2TCLib. -Updating ionization/nheavy loops so CSU2TCLib and CMutationTCLib are consistent. . ## Related Work; This addresses/builds on #1106 #1205 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1326
https://github.com/su2code/SU2/pull/1329:1453,Deployability,update,updated,1453,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Since #724, equivalent area calculation and its use as objective function when EQUIV_AREA is set to YES have not been functioning. I have moved `SpecialOutput_SonicBoom` from output_structure_legacy.cpp to CFlowOutput.cpp and called it out in CFlowCompOutput.cpp similarly to inverse design Cp function mentioned in #1311. This PR fixes #841. This is my first PR on github, so let me know if I should fix anything. Mesh file and TargetEA.dat; [NACA64206_EA.zip](https://github.com/su2code/SU2/files/6839247/NACA64206_EA.zip). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #724 ; #1311 ; #841 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329
https://github.com/su2code/SU2/pull/1329:1380,Testability,test,test,1380,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Since #724, equivalent area calculation and its use as objective function when EQUIV_AREA is set to YES have not been functioning. I have moved `SpecialOutput_SonicBoom` from output_structure_legacy.cpp to CFlowOutput.cpp and called it out in CFlowCompOutput.cpp similarly to inverse design Cp function mentioned in #1311. This PR fixes #841. This is my first PR on github, so let me know if I should fix anything. Mesh file and TargetEA.dat; [NACA64206_EA.zip](https://github.com/su2code/SU2/files/6839247/NACA64206_EA.zip). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #724 ; #1311 ; #841 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329
https://github.com/su2code/SU2/pull/1329:960,Usability,guid,guide,960,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Since #724, equivalent area calculation and its use as objective function when EQUIV_AREA is set to YES have not been functioning. I have moved `SpecialOutput_SonicBoom` from output_structure_legacy.cpp to CFlowOutput.cpp and called it out in CFlowCompOutput.cpp similarly to inverse design Cp function mentioned in #1311. This PR fixes #841. This is my first PR on github, so let me know if I should fix anything. Mesh file and TargetEA.dat; [NACA64206_EA.zip](https://github.com/su2code/SU2/files/6839247/NACA64206_EA.zip). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #724 ; #1311 ; #841 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329
https://github.com/su2code/SU2/pull/1329:1251,Usability,simpl,simply,1251,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Since #724, equivalent area calculation and its use as objective function when EQUIV_AREA is set to YES have not been functioning. I have moved `SpecialOutput_SonicBoom` from output_structure_legacy.cpp to CFlowOutput.cpp and called it out in CFlowCompOutput.cpp similarly to inverse design Cp function mentioned in #1311. This PR fixes #841. This is my first PR on github, so let me know if I should fix anything. Mesh file and TargetEA.dat; [NACA64206_EA.zip](https://github.com/su2code/SU2/files/6839247/NACA64206_EA.zip). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #724 ; #1311 ; #841 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329
https://github.com/su2code/SU2/pull/1330:884,Deployability,pipeline,pipeline,884,"## Proposed Changes; Hi all,. The general idea for this PR can be cited from @pcarruscag in #1226:; ```; The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:. Turbulence solvers;; Heat solver;; Radiation solver;; General passive/active scalar solvers;; Eventual transition solvers;. The starting point would be the current base turbulence solver.; ```; ; Right now the only things I did were (i.e. don't fear the large diff); - create CScalarSolver/Variable files/classes and scalar_convection/diffusion/sources files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330
https://github.com/su2code/SU2/pull/1330:1501,Deployability,integrat,integrated,1501,"rces files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330
https://github.com/su2code/SU2/pull/1330:2988,Deployability,update,updated,2988,"els (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_flamelet. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330
https://github.com/su2code/SU2/pull/1330:1018,Integrability,interface,interface,1018,"arruscag in #1226:; ```; The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:. Turbulence solvers;; Heat solver;; Radiation solver;; General passive/active scalar solvers;; Eventual transition solvers;. The starting point would be the current base turbulence solver.; ```; ; Right now the only things I did were (i.e. don't fear the large diff); - create CScalarSolver/Variable files/classes and scalar_convection/diffusion/sources files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330
https://github.com/su2code/SU2/pull/1330:1138,Integrability,interface,interface,1138,"arruscag in #1226:; ```; The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:. Turbulence solvers;; Heat solver;; Radiation solver;; General passive/active scalar solvers;; Eventual transition solvers;. The starting point would be the current base turbulence solver.; ```; ; Right now the only things I did were (i.e. don't fear the large diff); - create CScalarSolver/Variable files/classes and scalar_convection/diffusion/sources files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330
https://github.com/su2code/SU2/pull/1330:1501,Integrability,integrat,integrated,1501,"rces files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330
https://github.com/su2code/SU2/pull/1330:495,Modifiability,Variab,Variable,495,"## Proposed Changes; Hi all,. The general idea for this PR can be cited from @pcarruscag in #1226:; ```; The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:. Turbulence solvers;; Heat solver;; Radiation solver;; General passive/active scalar solvers;; Eventual transition solvers;. The starting point would be the current base turbulence solver.; ```; ; Right now the only things I did were (i.e. don't fear the large diff); - create CScalarSolver/Variable files/classes and scalar_convection/diffusion/sources files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330
https://github.com/su2code/SU2/pull/1330:649,Modifiability,Variab,Variable,649,"## Proposed Changes; Hi all,. The general idea for this PR can be cited from @pcarruscag in #1226:; ```; The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:. Turbulence solvers;; Heat solver;; Radiation solver;; General passive/active scalar solvers;; Eventual transition solvers;. The starting point would be the current base turbulence solver.; ```; ; Right now the only things I did were (i.e. don't fear the large diff); - create CScalarSolver/Variable files/classes and scalar_convection/diffusion/sources files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330
https://github.com/su2code/SU2/pull/1330:690,Modifiability,Variab,Variable,690,"## Proposed Changes; Hi all,. The general idea for this PR can be cited from @pcarruscag in #1226:; ```; The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:. Turbulence solvers;; Heat solver;; Radiation solver;; General passive/active scalar solvers;; Eventual transition solvers;. The starting point would be the current base turbulence solver.; ```; ; Right now the only things I did were (i.e. don't fear the large diff); - create CScalarSolver/Variable files/classes and scalar_convection/diffusion/sources files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330
https://github.com/su2code/SU2/pull/1330:2072,Modifiability,extend,extends,2072," what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_flamelet. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330
https://github.com/su2code/SU2/pull/1330:835,Testability,test,testing,835,"## Proposed Changes; Hi all,. The general idea for this PR can be cited from @pcarruscag in #1226:; ```; The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:. Turbulence solvers;; Heat solver;; Radiation solver;; General passive/active scalar solvers;; Eventual transition solvers;. The starting point would be the current base turbulence solver.; ```; ; Right now the only things I did were (i.e. don't fear the large diff); - create CScalarSolver/Variable files/classes and scalar_convection/diffusion/sources files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330
https://github.com/su2code/SU2/pull/1330:1667,Testability,Test,Testcases,1667,"able; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_flamelet. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warni",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330
https://github.com/su2code/SU2/pull/1330:2915,Testability,test,test,2915,"els (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_flamelet. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330
https://github.com/su2code/SU2/pull/1330:1430,Usability,simpl,simple,1430,"he current base turbulence solver.; ```; ; Right now the only things I did were (i.e. don't fear the large diff); - create CScalarSolver/Variable files/classes and scalar_convection/diffusion/sources files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing propertie",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330
https://github.com/su2code/SU2/pull/1330:2786,Usability,simpl,simply,2786,"els (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_flamelet. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330
https://github.com/su2code/SU2/issues/1331:47,Availability,failure,failure,47,"**Describe the bug**; Hi,all.; I encountered a failure when I was running a unit test. **To Reproduce**; Here are my reproduction steps; ```; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331
https://github.com/su2code/SU2/issues/1331:243,Availability,error,error,243,"**Describe the bug**; Hi,all.; I encountered a failure when I was running a unit test. **To Reproduce**; Here are my reproduction steps; ```; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331
https://github.com/su2code/SU2/issues/1331:1626,Availability,Failure,Failures,1626,; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; - C++ compiler and version: gcc version 8.3.1 20191121 (Red Hat 8.3.1-5) (GCC); - MPI implementation and version: none; - SU2 Version: 7.1.1,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331
https://github.com/su2code/SU2/issues/1331:249,Integrability,message,message,249,"**Describe the bug**; Hi,all.; I encountered a failure when I was running a unit test. **To Reproduce**; Here are my reproduction steps; ```; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331
https://github.com/su2code/SU2/issues/1331:1752,Safety,Timeout,Timeout,1752,; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; - C++ compiler and version: gcc version 8.3.1 20191121 (Red Hat 8.3.1-5) (GCC); - MPI implementation and version: none; - SU2 Version: 7.1.1,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331
https://github.com/su2code/SU2/issues/1331:81,Testability,test,test,81,"**Describe the bug**; Hi,all.; I encountered a failure when I was running a unit test. **To Reproduce**; Here are my reproduction steps; ```; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331
https://github.com/su2code/SU2/issues/1331:186,Testability,test,tests,186,"**Describe the bug**; Hi,all.; I encountered a failure when I was running a unit test. **To Reproduce**; Here are my reproduction steps; ```; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331
https://github.com/su2code/SU2/issues/1331:219,Testability,test,test,219,"**Describe the bug**; Hi,all.; I encountered a failure when I was running a unit test. **To Reproduce**; Here are my reproduction steps; ```; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331
https://github.com/su2code/SU2/issues/1331:269,Testability,test,test,269,"**Describe the bug**; Hi,all.; I encountered a failure when I was running a unit test. **To Reproduce**; Here are my reproduction steps; ```; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331
https://github.com/su2code/SU2/issues/1331:308,Testability,test,tests,308,"**Describe the bug**; Hi,all.; I encountered a failure when I was running a unit test. **To Reproduce**; Here are my reproduction steps; ```; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331
https://github.com/su2code/SU2/issues/1331:327,Testability,test,test,327,"**Describe the bug**; Hi,all.; I encountered a failure when I was running a unit test. **To Reproduce**; Here are my reproduction steps; ```; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331
https://github.com/su2code/SU2/issues/1331:1340,Testability,test,test,1340,; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; - C++ compiler and version: gcc version 8.3.1 20191121 (Red Hat 8.3.1-5) (GCC); - MPI implementation and version: none; - SU2 Version: 7.1.1,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331
https://github.com/su2code/SU2/issues/1331:1379,Testability,assert,assertions,1379,; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; - C++ compiler and version: gcc version 8.3.1 20191121 (Red Hat 8.3.1-5) (GCC); - MPI implementation and version: none; - SU2 Version: 7.1.1,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331
https://github.com/su2code/SU2/issues/1331:1648,Testability,test,test,1648,; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; - C++ compiler and version: gcc version 8.3.1 20191121 (Red Hat 8.3.1-5) (GCC); - MPI implementation and version: none; - SU2 Version: 7.1.1,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331
https://github.com/su2code/SU2/issues/1331:1769,Testability,log,log,1769,; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; - C++ compiler and version: gcc version 8.3.1 20191121 (Red Hat 8.3.1-5) (GCC); - MPI implementation and version: none; - SU2 Version: 7.1.1,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331
https://github.com/su2code/SU2/issues/1331:1890,Testability,log,logs,1890,; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; - C++ compiler and version: gcc version 8.3.1 20191121 (Red Hat 8.3.1-5) (GCC); - MPI implementation and version: none; - SU2 Version: 7.1.1,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331
https://github.com/su2code/SU2/issues/1331:1895,Testability,test,testlog,1895,; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; - C++ compiler and version: gcc version 8.3.1 20191121 (Red Hat 8.3.1-5) (GCC); - MPI implementation and version: none; - SU2 Version: 7.1.1,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331
https://github.com/su2code/SU2/pull/1332:1845,Deployability,update,updated,1845,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332
https://github.com/su2code/SU2/pull/1332:78,Integrability,depend,dependent,78,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332
https://github.com/su2code/SU2/pull/1332:197,Modifiability,inherit,inherits,197,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332
https://github.com/su2code/SU2/pull/1332:425,Modifiability,variab,variable,425,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332
https://github.com/su2code/SU2/pull/1332:474,Modifiability,variab,variable,474,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332
https://github.com/su2code/SU2/pull/1332:235,Security,access,accessed,235,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332
https://github.com/su2code/SU2/pull/1332:375,Testability,test,test,375,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332
https://github.com/su2code/SU2/pull/1332:1772,Testability,test,test,1772,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332
https://github.com/su2code/SU2/pull/1332:1352,Usability,guid,guide,1352,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332
https://github.com/su2code/SU2/pull/1332:1643,Usability,simpl,simply,1643,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332
https://github.com/su2code/SU2/issues/1335:84,Availability,down,downloaded,84,"Hi,. I am trying to install SU2 v7.1.1 on a cluster without internet access. I have downloaded CoDiPack, MeDiPack, Meson, Ninja and Mutation modules in the root directory. However, when I run meson.py I get the following error:. Downloading CoDiPack '1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8'; Traceback (most recent call last):; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1318, in do_open; encode_chunked=req.has_header('Transfer-encoding')); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1239, in request; self._send_request(method, url, body, headers, encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1285, in _send_request; self.endheaders(body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1234, in endheaders; self._send_output(message_body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1026, in _send_output; self.send(msg); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 964, in send; self.connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1392, in connect; super().connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 936, in connect; (self.host,self.port), self.timeout, self.source_address); File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 724, in create_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335
https://github.com/su2code/SU2/issues/1335:221,Availability,error,error,221,"Hi,. I am trying to install SU2 v7.1.1 on a cluster without internet access. I have downloaded CoDiPack, MeDiPack, Meson, Ninja and Mutation modules in the root directory. However, when I run meson.py I get the following error:. Downloading CoDiPack '1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8'; Traceback (most recent call last):; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1318, in do_open; encode_chunked=req.has_header('Transfer-encoding')); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1239, in request; self._send_request(method, url, body, headers, encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1285, in _send_request; self.endheaders(body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1234, in endheaders; self._send_output(message_body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1026, in _send_output; self.send(msg); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 964, in send; self.connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1392, in connect; super().connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 936, in connect; (self.host,self.port), self.timeout, self.source_address); File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 724, in create_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335
https://github.com/su2code/SU2/issues/1335:229,Availability,Down,Downloading,229,"Hi,. I am trying to install SU2 v7.1.1 on a cluster without internet access. I have downloaded CoDiPack, MeDiPack, Meson, Ninja and Mutation modules in the root directory. However, when I run meson.py I get the following error:. Downloading CoDiPack '1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8'; Traceback (most recent call last):; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1318, in do_open; encode_chunked=req.has_header('Transfer-encoding')); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1239, in request; self._send_request(method, url, body, headers, encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1285, in _send_request; self.endheaders(body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1234, in endheaders; self._send_output(message_body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1026, in _send_output; self.send(msg); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 964, in send; self.connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1392, in connect; super().connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 936, in connect; (self.host,self.port), self.timeout, self.source_address); File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 724, in create_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335
https://github.com/su2code/SU2/issues/1335:2844,Availability,error,error,2844,"te_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 248, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 223, in urlopen; return opener.open(url, data, timeout); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 526, in open; response = self._open(req, data); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 544, in _open; '_open', req); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 504, in _call_chain; result = func(*args); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1361, in https_open; context=self._context, check_hostname=self._check_hostname); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1320, in do_open; raise URLError(err); urllib.error.URLError: <urlopen error [Errno 110] Connection timed out>. I have no idea why this is happening. I was able to install SU2 v7.0.3 this way. Any help regarding this will be greatly appreciated. These are the modules in the root directory. MeDiPack-6aef76912e7099c4f08c9705848797ca9e8070da.zip ; CoDiPack-1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8.zip ; meson-29ef4478df6d3aaca40c7993f125b29409be1de2.zip ; Mutationpp-5ff579f43781cae07411e5ab46291c9971536be6.zip ; ninja-52649de2c56b63f42bc59513d51286531c595b44.zip. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335
https://github.com/su2code/SU2/issues/1335:2869,Availability,error,error,2869,"te_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 248, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 223, in urlopen; return opener.open(url, data, timeout); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 526, in open; response = self._open(req, data); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 544, in _open; '_open', req); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 504, in _call_chain; result = func(*args); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1361, in https_open; context=self._context, check_hostname=self._check_hostname); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1320, in do_open; raise URLError(err); urllib.error.URLError: <urlopen error [Errno 110] Connection timed out>. I have no idea why this is happening. I was able to install SU2 v7.0.3 this way. Any help regarding this will be greatly appreciated. These are the modules in the root directory. MeDiPack-6aef76912e7099c4f08c9705848797ca9e8070da.zip ; CoDiPack-1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8.zip ; meson-29ef4478df6d3aaca40c7993f125b29409be1de2.zip ; Mutationpp-5ff579f43781cae07411e5ab46291c9971536be6.zip ; ninja-52649de2c56b63f42bc59513d51286531c595b44.zip. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335
https://github.com/su2code/SU2/issues/1335:20,Deployability,install,install,20,"Hi,. I am trying to install SU2 v7.1.1 on a cluster without internet access. I have downloaded CoDiPack, MeDiPack, Meson, Ninja and Mutation modules in the root directory. However, when I run meson.py I get the following error:. Downloading CoDiPack '1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8'; Traceback (most recent call last):; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1318, in do_open; encode_chunked=req.has_header('Transfer-encoding')); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1239, in request; self._send_request(method, url, body, headers, encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1285, in _send_request; self.endheaders(body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1234, in endheaders; self._send_output(message_body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1026, in _send_output; self.send(msg); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 964, in send; self.connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1392, in connect; super().connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 936, in connect; (self.host,self.port), self.timeout, self.source_address); File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 724, in create_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335
https://github.com/su2code/SU2/issues/1335:2962,Deployability,install,install,2962,"te_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 248, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 223, in urlopen; return opener.open(url, data, timeout); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 526, in open; response = self._open(req, data); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 544, in _open; '_open', req); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 504, in _call_chain; result = func(*args); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1361, in https_open; context=self._context, check_hostname=self._check_hostname); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1320, in do_open; raise URLError(err); urllib.error.URLError: <urlopen error [Errno 110] Connection timed out>. I have no idea why this is happening. I was able to install SU2 v7.0.3 this way. Any help regarding this will be greatly appreciated. These are the modules in the root directory. MeDiPack-6aef76912e7099c4f08c9705848797ca9e8070da.zip ; CoDiPack-1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8.zip ; meson-29ef4478df6d3aaca40c7993f125b29409be1de2.zip ; Mutationpp-5ff579f43781cae07411e5ab46291c9971536be6.zip ; ninja-52649de2c56b63f42bc59513d51286531c595b44.zip. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335
https://github.com/su2code/SU2/issues/1335:1280,Safety,timeout,timeout,1280,"67d8'; Traceback (most recent call last):; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1318, in do_open; encode_chunked=req.has_header('Transfer-encoding')); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1239, in request; self._send_request(method, url, body, headers, encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1285, in _send_request; self.endheaders(body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1234, in endheaders; self._send_output(message_body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1026, in _send_output; self.send(msg); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 964, in send; self.connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1392, in connect; super().connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 936, in connect; (self.host,self.port), self.timeout, self.source_address); File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 724, in create_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 248, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 223, in urlopen; return opener.open(url, data, timeout); File ""/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335
https://github.com/su2code/SU2/issues/1335:1504,Safety,Timeout,TimeoutError,1504,"ne 1239, in request; self._send_request(method, url, body, headers, encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1285, in _send_request; self.endheaders(body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1234, in endheaders; self._send_output(message_body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1026, in _send_output; self.send(msg); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 964, in send; self.connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1392, in connect; super().connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 936, in connect; (self.host,self.port), self.timeout, self.source_address); File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 724, in create_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 248, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 223, in urlopen; return opener.open(url, data, timeout); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 526, in open; response = self._open(req, data); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 544, in _open; '_open', req); File ""/app/python-3.6.3/lib/python3.6",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335
https://github.com/su2code/SU2/issues/1335:2270,Safety,timeout,timeout,2270,"lf.timeout, self.source_address); File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 724, in create_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 248, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 223, in urlopen; return opener.open(url, data, timeout); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 526, in open; response = self._open(req, data); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 544, in _open; '_open', req); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 504, in _call_chain; result = func(*args); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1361, in https_open; context=self._context, check_hostname=self._check_hostname); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1320, in do_open; raise URLError(err); urllib.error.URLError: <urlopen error [Errno 110] Connection timed out>. I have no idea why this is happening. I was able to install SU2 v7.0.3 this way. Any help regarding this will be greatly appreciated. These are the modules in the root directory. MeDiPack-6aef76912e7099c4f08c9705848797ca9e8070da.zip ; CoDiPack-1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8.zip ; meson-29ef4478df6d3aaca40c7993f125b29409be1de2.zip ; Mutationpp-5ff579f43781",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335
https://github.com/su2code/SU2/issues/1335:69,Security,access,access,69,"Hi,. I am trying to install SU2 v7.1.1 on a cluster without internet access. I have downloaded CoDiPack, MeDiPack, Meson, Ninja and Mutation modules in the root directory. However, when I run meson.py I get the following error:. Downloading CoDiPack '1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8'; Traceback (most recent call last):; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1318, in do_open; encode_chunked=req.has_header('Transfer-encoding')); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1239, in request; self._send_request(method, url, body, headers, encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1285, in _send_request; self.endheaders(body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1234, in endheaders; self._send_output(message_body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1026, in _send_output; self.send(msg); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 964, in send; self.connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1392, in connect; super().connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 936, in connect; (self.host,self.port), self.timeout, self.source_address); File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 724, in create_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335
https://github.com/su2code/SU2/issues/1337:953,Deployability,configurat,configuration,953,"I am using SU2 v7.0.6 to do turbomachinery simulations. I am using a radial compressor. There are points in my flow field that show unexpected values of temperature and density, which also makes mach values at those points to be abnormal. There is a sudden change at the trailing edge in my geometry. These points are located right at the trailing edge of my blade and only at these points I see abnormal density and temperature values. I made sure that the velocity of the blade was correctly set. I am sharing a sectional close-up of the trailing edge of my blade with the mesh at that region being visible. . ![teTipMach](https://user-images.githubusercontent.com/66836581/127540972-80cf9914-d6e9-4c9a-af48-aa48478d2c09.png). I am using SST turbulence model. I have simulated a specific case without turbulence to see if it was the issue and the same behavior was present so, the turbulence model does not seem to induce this issue. I have shared my configuration file with numerical information redacted, only to show which markers and settings I am using. Currently I can't share my mesh file. [Configuration.txt](https://github.com/su2code/SU2/files/6902770/Configuration.txt). This issue is present when I am only using basic Roe scheme with MUSCL option turned off. If I turn on MUSCL option, the density and temperature values at these points become even more unnatural and diverge my simulation. - OS: [ Linux (Ubuntu 18.04.5)]; - C++ compiler and version: [g++ (GCC) 7.5.0]; - MPI implementation and version: [OpenMPI 2.1.1]; - SU2 Version: [v7.0.6]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1337
https://github.com/su2code/SU2/issues/1337:1100,Deployability,Configurat,Configuration,1100,"I am using SU2 v7.0.6 to do turbomachinery simulations. I am using a radial compressor. There are points in my flow field that show unexpected values of temperature and density, which also makes mach values at those points to be abnormal. There is a sudden change at the trailing edge in my geometry. These points are located right at the trailing edge of my blade and only at these points I see abnormal density and temperature values. I made sure that the velocity of the blade was correctly set. I am sharing a sectional close-up of the trailing edge of my blade with the mesh at that region being visible. . ![teTipMach](https://user-images.githubusercontent.com/66836581/127540972-80cf9914-d6e9-4c9a-af48-aa48478d2c09.png). I am using SST turbulence model. I have simulated a specific case without turbulence to see if it was the issue and the same behavior was present so, the turbulence model does not seem to induce this issue. I have shared my configuration file with numerical information redacted, only to show which markers and settings I am using. Currently I can't share my mesh file. [Configuration.txt](https://github.com/su2code/SU2/files/6902770/Configuration.txt). This issue is present when I am only using basic Roe scheme with MUSCL option turned off. If I turn on MUSCL option, the density and temperature values at these points become even more unnatural and diverge my simulation. - OS: [ Linux (Ubuntu 18.04.5)]; - C++ compiler and version: [g++ (GCC) 7.5.0]; - MPI implementation and version: [OpenMPI 2.1.1]; - SU2 Version: [v7.0.6]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1337
https://github.com/su2code/SU2/issues/1337:1164,Deployability,Configurat,Configuration,1164,"I am using SU2 v7.0.6 to do turbomachinery simulations. I am using a radial compressor. There are points in my flow field that show unexpected values of temperature and density, which also makes mach values at those points to be abnormal. There is a sudden change at the trailing edge in my geometry. These points are located right at the trailing edge of my blade and only at these points I see abnormal density and temperature values. I made sure that the velocity of the blade was correctly set. I am sharing a sectional close-up of the trailing edge of my blade with the mesh at that region being visible. . ![teTipMach](https://user-images.githubusercontent.com/66836581/127540972-80cf9914-d6e9-4c9a-af48-aa48478d2c09.png). I am using SST turbulence model. I have simulated a specific case without turbulence to see if it was the issue and the same behavior was present so, the turbulence model does not seem to induce this issue. I have shared my configuration file with numerical information redacted, only to show which markers and settings I am using. Currently I can't share my mesh file. [Configuration.txt](https://github.com/su2code/SU2/files/6902770/Configuration.txt). This issue is present when I am only using basic Roe scheme with MUSCL option turned off. If I turn on MUSCL option, the density and temperature values at these points become even more unnatural and diverge my simulation. - OS: [ Linux (Ubuntu 18.04.5)]; - C++ compiler and version: [g++ (GCC) 7.5.0]; - MPI implementation and version: [OpenMPI 2.1.1]; - SU2 Version: [v7.0.6]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1337
https://github.com/su2code/SU2/issues/1337:953,Modifiability,config,configuration,953,"I am using SU2 v7.0.6 to do turbomachinery simulations. I am using a radial compressor. There are points in my flow field that show unexpected values of temperature and density, which also makes mach values at those points to be abnormal. There is a sudden change at the trailing edge in my geometry. These points are located right at the trailing edge of my blade and only at these points I see abnormal density and temperature values. I made sure that the velocity of the blade was correctly set. I am sharing a sectional close-up of the trailing edge of my blade with the mesh at that region being visible. . ![teTipMach](https://user-images.githubusercontent.com/66836581/127540972-80cf9914-d6e9-4c9a-af48-aa48478d2c09.png). I am using SST turbulence model. I have simulated a specific case without turbulence to see if it was the issue and the same behavior was present so, the turbulence model does not seem to induce this issue. I have shared my configuration file with numerical information redacted, only to show which markers and settings I am using. Currently I can't share my mesh file. [Configuration.txt](https://github.com/su2code/SU2/files/6902770/Configuration.txt). This issue is present when I am only using basic Roe scheme with MUSCL option turned off. If I turn on MUSCL option, the density and temperature values at these points become even more unnatural and diverge my simulation. - OS: [ Linux (Ubuntu 18.04.5)]; - C++ compiler and version: [g++ (GCC) 7.5.0]; - MPI implementation and version: [OpenMPI 2.1.1]; - SU2 Version: [v7.0.6]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1337
https://github.com/su2code/SU2/issues/1337:1100,Modifiability,Config,Configuration,1100,"I am using SU2 v7.0.6 to do turbomachinery simulations. I am using a radial compressor. There are points in my flow field that show unexpected values of temperature and density, which also makes mach values at those points to be abnormal. There is a sudden change at the trailing edge in my geometry. These points are located right at the trailing edge of my blade and only at these points I see abnormal density and temperature values. I made sure that the velocity of the blade was correctly set. I am sharing a sectional close-up of the trailing edge of my blade with the mesh at that region being visible. . ![teTipMach](https://user-images.githubusercontent.com/66836581/127540972-80cf9914-d6e9-4c9a-af48-aa48478d2c09.png). I am using SST turbulence model. I have simulated a specific case without turbulence to see if it was the issue and the same behavior was present so, the turbulence model does not seem to induce this issue. I have shared my configuration file with numerical information redacted, only to show which markers and settings I am using. Currently I can't share my mesh file. [Configuration.txt](https://github.com/su2code/SU2/files/6902770/Configuration.txt). This issue is present when I am only using basic Roe scheme with MUSCL option turned off. If I turn on MUSCL option, the density and temperature values at these points become even more unnatural and diverge my simulation. - OS: [ Linux (Ubuntu 18.04.5)]; - C++ compiler and version: [g++ (GCC) 7.5.0]; - MPI implementation and version: [OpenMPI 2.1.1]; - SU2 Version: [v7.0.6]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1337
https://github.com/su2code/SU2/issues/1337:1164,Modifiability,Config,Configuration,1164,"I am using SU2 v7.0.6 to do turbomachinery simulations. I am using a radial compressor. There are points in my flow field that show unexpected values of temperature and density, which also makes mach values at those points to be abnormal. There is a sudden change at the trailing edge in my geometry. These points are located right at the trailing edge of my blade and only at these points I see abnormal density and temperature values. I made sure that the velocity of the blade was correctly set. I am sharing a sectional close-up of the trailing edge of my blade with the mesh at that region being visible. . ![teTipMach](https://user-images.githubusercontent.com/66836581/127540972-80cf9914-d6e9-4c9a-af48-aa48478d2c09.png). I am using SST turbulence model. I have simulated a specific case without turbulence to see if it was the issue and the same behavior was present so, the turbulence model does not seem to induce this issue. I have shared my configuration file with numerical information redacted, only to show which markers and settings I am using. Currently I can't share my mesh file. [Configuration.txt](https://github.com/su2code/SU2/files/6902770/Configuration.txt). This issue is present when I am only using basic Roe scheme with MUSCL option turned off. If I turn on MUSCL option, the density and temperature values at these points become even more unnatural and diverge my simulation. - OS: [ Linux (Ubuntu 18.04.5)]; - C++ compiler and version: [g++ (GCC) 7.5.0]; - MPI implementation and version: [OpenMPI 2.1.1]; - SU2 Version: [v7.0.6]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1337
https://github.com/su2code/SU2/pull/1340:1464,Availability,error,error,1464,"tting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Overview. I have optimized the initialization time of SU2-NEMO. You can check the time comparison between the old and new version at the table below. ![image](https://user-images.githubusercontent.com/29612207/127698090-e4924a77-a5f0-40fc-90eb-ce218c413aaf.png). Some steps that I have done:; ### CNEMOEulerVariable.cpp ; * Removed constant calculations inside a for loop; * Passed the Solution_Old = Solution to outside the loop. ### CNEMOEulerSolver.cpp; * Removed the ""for"" loop that fills the Nodes Primitive Fields (already done in the Preprocessing phase); * Removed the error counter (already done in the Preprocessing phase). ### CSolverFactory.cpp; * Removed the Preprocessing step after the CNEMOEulerSolver instantiation (**This is done before the start of the iterative process, regardless. Additionally, the Navier-Stokes do not have any preprocess phase after the instantiation, why is that ?** ). The residuals may slightly different, because of the removal of the for loop inside CNEMOEulerSolver.cpp. Notice that inside that for loop, the soundspeed is obtained using the function FluidModel->GetSoundSpeed(), which gives a slight different value than the one calculated inside CNEMOEulerVariable.cpp using FluidModel->ComputeSoundSpeed(). This means that the regression tests may fail.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340
https://github.com/su2code/SU2/pull/1340:785,Deployability,update,updated,785,"## Proposed Changes. Optimize the SU2-NEMO solver initialization time . ## Related Work; None that I remember. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Overview. I have optimized the initialization time of SU2-NEMO. You can check the time comparison between the old and new version at the table below. ![image](https://user-images.githubusercontent.com/29612207/127698090-e4924a77-a5f0-40fc-90eb-ce218c413aaf.png). Some steps that I have done:; ### CNEMOEulerVariable.cpp ; * Removed constant calculations inside a for loop; * Passed the Solution_Old = Solution to outside the loop. ### CNEMOEulerSolver.cpp; * Removed the ""for"" loop that fills the Nodes Primitive Fields (already done in the Preprocessing phase); * Removed the error counter (already done in the Preprocessing phase). ### CSolverFactory.cpp; * Removed the Preprocessing step after the CNEMOEulerSolver instantiation (**This is done before the start of the iterative process, regardless. Additionally, the Navier-Stokes do not have any preprocess phase after the instantiation, why is that ?** ). The residuals may slightly different, because of the removal of the for loop inside CNEMOEulerSolver.cpp. Notice that inside that for loop, the soundspeed is obtained using the function FluidModel->GetS",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340
https://github.com/su2code/SU2/pull/1340:21,Performance,Optimiz,Optimize,21,"## Proposed Changes. Optimize the SU2-NEMO solver initialization time . ## Related Work; None that I remember. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Overview. I have optimized the initialization time of SU2-NEMO. You can check the time comparison between the old and new version at the table below. ![image](https://user-images.githubusercontent.com/29612207/127698090-e4924a77-a5f0-40fc-90eb-ce218c413aaf.png). Some steps that I have done:; ### CNEMOEulerVariable.cpp ; * Removed constant calculations inside a for loop; * Passed the Solution_Old = Solution to outside the loop. ### CNEMOEulerSolver.cpp; * Removed the ""for"" loop that fills the Nodes Primitive Fields (already done in the Preprocessing phase); * Removed the error counter (already done in the Preprocessing phase). ### CSolverFactory.cpp; * Removed the Preprocessing step after the CNEMOEulerSolver instantiation (**This is done before the start of the iterative process, regardless. Additionally, the Navier-Stokes do not have any preprocess phase after the instantiation, why is that ?** ). The residuals may slightly different, because of the removal of the for loop inside CNEMOEulerSolver.cpp. Notice that inside that for loop, the soundspeed is obtained using the function FluidModel->GetS",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340
https://github.com/su2code/SU2/pull/1340:904,Performance,optimiz,optimized,904,"## Proposed Changes. Optimize the SU2-NEMO solver initialization time . ## Related Work; None that I remember. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Overview. I have optimized the initialization time of SU2-NEMO. You can check the time comparison between the old and new version at the table below. ![image](https://user-images.githubusercontent.com/29612207/127698090-e4924a77-a5f0-40fc-90eb-ce218c413aaf.png). Some steps that I have done:; ### CNEMOEulerVariable.cpp ; * Removed constant calculations inside a for loop; * Passed the Solution_Old = Solution to outside the loop. ### CNEMOEulerSolver.cpp; * Removed the ""for"" loop that fills the Nodes Primitive Fields (already done in the Preprocessing phase); * Removed the error counter (already done in the Preprocessing phase). ### CSolverFactory.cpp; * Removed the Preprocessing step after the CNEMOEulerSolver instantiation (**This is done before the start of the iterative process, regardless. Additionally, the Navier-Stokes do not have any preprocess phase after the instantiation, why is that ?** ). The residuals may slightly different, because of the removal of the for loop inside CNEMOEulerSolver.cpp. Notice that inside that for loop, the soundspeed is obtained using the function FluidModel->GetS",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340
https://github.com/su2code/SU2/pull/1340:710,Testability,test,test,710,"## Proposed Changes. Optimize the SU2-NEMO solver initialization time . ## Related Work; None that I remember. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Overview. I have optimized the initialization time of SU2-NEMO. You can check the time comparison between the old and new version at the table below. ![image](https://user-images.githubusercontent.com/29612207/127698090-e4924a77-a5f0-40fc-90eb-ce218c413aaf.png). Some steps that I have done:; ### CNEMOEulerVariable.cpp ; * Removed constant calculations inside a for loop; * Passed the Solution_Old = Solution to outside the loop. ### CNEMOEulerSolver.cpp; * Removed the ""for"" loop that fills the Nodes Primitive Fields (already done in the Preprocessing phase); * Removed the error counter (already done in the Preprocessing phase). ### CSolverFactory.cpp; * Removed the Preprocessing step after the CNEMOEulerSolver instantiation (**This is done before the start of the iterative process, regardless. Additionally, the Navier-Stokes do not have any preprocess phase after the instantiation, why is that ?** ). The residuals may slightly different, because of the removal of the for loop inside CNEMOEulerSolver.cpp. Notice that inside that for loop, the soundspeed is obtained using the function FluidModel->GetS",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340
https://github.com/su2code/SU2/pull/1340:2175,Testability,test,tests,2175,"tting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Overview. I have optimized the initialization time of SU2-NEMO. You can check the time comparison between the old and new version at the table below. ![image](https://user-images.githubusercontent.com/29612207/127698090-e4924a77-a5f0-40fc-90eb-ce218c413aaf.png). Some steps that I have done:; ### CNEMOEulerVariable.cpp ; * Removed constant calculations inside a for loop; * Passed the Solution_Old = Solution to outside the loop. ### CNEMOEulerSolver.cpp; * Removed the ""for"" loop that fills the Nodes Primitive Fields (already done in the Preprocessing phase); * Removed the error counter (already done in the Preprocessing phase). ### CSolverFactory.cpp; * Removed the Preprocessing step after the CNEMOEulerSolver instantiation (**This is done before the start of the iterative process, regardless. Additionally, the Navier-Stokes do not have any preprocess phase after the instantiation, why is that ?** ). The residuals may slightly different, because of the removal of the for loop inside CNEMOEulerSolver.cpp. Notice that inside that for loop, the soundspeed is obtained using the function FluidModel->GetSoundSpeed(), which gives a slight different value than the one calculated inside CNEMOEulerVariable.cpp using FluidModel->ComputeSoundSpeed(). This means that the regression tests may fail.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340
https://github.com/su2code/SU2/pull/1340:283,Usability,guid,guide,283,"## Proposed Changes. Optimize the SU2-NEMO solver initialization time . ## Related Work; None that I remember. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Overview. I have optimized the initialization time of SU2-NEMO. You can check the time comparison between the old and new version at the table below. ![image](https://user-images.githubusercontent.com/29612207/127698090-e4924a77-a5f0-40fc-90eb-ce218c413aaf.png). Some steps that I have done:; ### CNEMOEulerVariable.cpp ; * Removed constant calculations inside a for loop; * Passed the Solution_Old = Solution to outside the loop. ### CNEMOEulerSolver.cpp; * Removed the ""for"" loop that fills the Nodes Primitive Fields (already done in the Preprocessing phase); * Removed the error counter (already done in the Preprocessing phase). ### CSolverFactory.cpp; * Removed the Preprocessing step after the CNEMOEulerSolver instantiation (**This is done before the start of the iterative process, regardless. Additionally, the Navier-Stokes do not have any preprocess phase after the instantiation, why is that ?** ). The residuals may slightly different, because of the removal of the for loop inside CNEMOEulerSolver.cpp. Notice that inside that for loop, the soundspeed is obtained using the function FluidModel->GetS",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340
https://github.com/su2code/SU2/pull/1340:577,Usability,simpl,simply,577,"## Proposed Changes. Optimize the SU2-NEMO solver initialization time . ## Related Work; None that I remember. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Overview. I have optimized the initialization time of SU2-NEMO. You can check the time comparison between the old and new version at the table below. ![image](https://user-images.githubusercontent.com/29612207/127698090-e4924a77-a5f0-40fc-90eb-ce218c413aaf.png). Some steps that I have done:; ### CNEMOEulerVariable.cpp ; * Removed constant calculations inside a for loop; * Passed the Solution_Old = Solution to outside the loop. ### CNEMOEulerSolver.cpp; * Removed the ""for"" loop that fills the Nodes Primitive Fields (already done in the Preprocessing phase); * Removed the error counter (already done in the Preprocessing phase). ### CSolverFactory.cpp; * Removed the Preprocessing step after the CNEMOEulerSolver instantiation (**This is done before the start of the iterative process, regardless. Additionally, the Navier-Stokes do not have any preprocess phase after the instantiation, why is that ?** ). The residuals may slightly different, because of the removal of the for loop inside CNEMOEulerSolver.cpp. Notice that inside that for loop, the soundspeed is obtained using the function FluidModel->GetS",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340
https://github.com/su2code/SU2/pull/1342:0,Safety,Avoid,Avoid,0,Avoid using File_close followed by File_delete in case the file already exists.; Simply use File_open in overwrite mode. @oleburghardt @WallyMaier @TobiKattmann if you could test this on clusters you have access to it would be great :pleading_face: ; Try it both writing over existing files and creating new ones and running on multiple nodes please.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342
https://github.com/su2code/SU2/pull/1342:205,Security,access,access,205,Avoid using File_close followed by File_delete in case the file already exists.; Simply use File_open in overwrite mode. @oleburghardt @WallyMaier @TobiKattmann if you could test this on clusters you have access to it would be great :pleading_face: ; Try it both writing over existing files and creating new ones and running on multiple nodes please.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342
https://github.com/su2code/SU2/pull/1342:174,Testability,test,test,174,Avoid using File_close followed by File_delete in case the file already exists.; Simply use File_open in overwrite mode. @oleburghardt @WallyMaier @TobiKattmann if you could test this on clusters you have access to it would be great :pleading_face: ; Try it both writing over existing files and creating new ones and running on multiple nodes please.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342
https://github.com/su2code/SU2/pull/1342:81,Usability,Simpl,Simply,81,Avoid using File_close followed by File_delete in case the file already exists.; Simply use File_open in overwrite mode. @oleburghardt @WallyMaier @TobiKattmann if you could test this on clusters you have access to it would be great :pleading_face: ; Try it both writing over existing files and creating new ones and running on multiple nodes please.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342
https://github.com/su2code/SU2/pull/1343:817,Deployability,update,updated,817,"## Proposed Changes; Optimization of the Preprocessing phase;; Inclusion of the Chapmann-Enskog option for Mutation++. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Performed. I have reduced almost by half the time of the preprocessing phase, leading to a ~10% less time per iteration. This was done by:; * Calculate dPdU, dTdU, dTvedU only for the implicit case; * Avoid the calculation of eve_min and eve_max using Mutation++. Instead, return nonphysical if the vibrational temperatures reach the specified minimum and maximum value. Additionally, I have included the option of using Chapmann-Enskog for the calculation of transport equations and thermal conductivity using Mutation++",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343
https://github.com/su2code/SU2/pull/1343:937,Energy Efficiency,reduce,reduced,937,"## Proposed Changes; Optimization of the Preprocessing phase;; Inclusion of the Chapmann-Enskog option for Mutation++. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Performed. I have reduced almost by half the time of the preprocessing phase, leading to a ~10% less time per iteration. This was done by:; * Calculate dPdU, dTdU, dTvedU only for the implicit case; * Avoid the calculation of eve_min and eve_max using Mutation++. Instead, return nonphysical if the vibrational temperatures reach the specified minimum and maximum value. Additionally, I have included the option of using Chapmann-Enskog for the calculation of transport equations and thermal conductivity using Mutation++",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343
https://github.com/su2code/SU2/pull/1343:21,Performance,Optimiz,Optimization,21,"## Proposed Changes; Optimization of the Preprocessing phase;; Inclusion of the Chapmann-Enskog option for Mutation++. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Performed. I have reduced almost by half the time of the preprocessing phase, leading to a ~10% less time per iteration. This was done by:; * Calculate dPdU, dTdU, dTvedU only for the implicit case; * Avoid the calculation of eve_min and eve_max using Mutation++. Instead, return nonphysical if the vibrational temperatures reach the specified minimum and maximum value. Additionally, I have included the option of using Chapmann-Enskog for the calculation of transport equations and thermal conductivity using Mutation++",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343
https://github.com/su2code/SU2/pull/1343:919,Performance,Perform,Performed,919,"## Proposed Changes; Optimization of the Preprocessing phase;; Inclusion of the Chapmann-Enskog option for Mutation++. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Performed. I have reduced almost by half the time of the preprocessing phase, leading to a ~10% less time per iteration. This was done by:; * Calculate dPdU, dTdU, dTvedU only for the implicit case; * Avoid the calculation of eve_min and eve_max using Mutation++. Instead, return nonphysical if the vibrational temperatures reach the specified minimum and maximum value. Additionally, I have included the option of using Chapmann-Enskog for the calculation of transport equations and thermal conductivity using Mutation++",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343
https://github.com/su2code/SU2/pull/1343:1120,Safety,Avoid,Avoid,1120,"## Proposed Changes; Optimization of the Preprocessing phase;; Inclusion of the Chapmann-Enskog option for Mutation++. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Performed. I have reduced almost by half the time of the preprocessing phase, leading to a ~10% less time per iteration. This was done by:; * Calculate dPdU, dTdU, dTvedU only for the implicit case; * Avoid the calculation of eve_min and eve_max using Mutation++. Instead, return nonphysical if the vibrational temperatures reach the specified minimum and maximum value. Additionally, I have included the option of using Chapmann-Enskog for the calculation of transport equations and thermal conductivity using Mutation++",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343
https://github.com/su2code/SU2/pull/1343:742,Testability,test,test,742,"## Proposed Changes; Optimization of the Preprocessing phase;; Inclusion of the Chapmann-Enskog option for Mutation++. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Performed. I have reduced almost by half the time of the preprocessing phase, leading to a ~10% less time per iteration. This was done by:; * Calculate dPdU, dTdU, dTvedU only for the implicit case; * Avoid the calculation of eve_min and eve_max using Mutation++. Instead, return nonphysical if the vibrational temperatures reach the specified minimum and maximum value. Additionally, I have included the option of using Chapmann-Enskog for the calculation of transport equations and thermal conductivity using Mutation++",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343
https://github.com/su2code/SU2/pull/1343:314,Usability,guid,guide,314,"## Proposed Changes; Optimization of the Preprocessing phase;; Inclusion of the Chapmann-Enskog option for Mutation++. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Performed. I have reduced almost by half the time of the preprocessing phase, leading to a ~10% less time per iteration. This was done by:; * Calculate dPdU, dTdU, dTvedU only for the implicit case; * Avoid the calculation of eve_min and eve_max using Mutation++. Instead, return nonphysical if the vibrational temperatures reach the specified minimum and maximum value. Additionally, I have included the option of using Chapmann-Enskog for the calculation of transport equations and thermal conductivity using Mutation++",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343
https://github.com/su2code/SU2/pull/1343:609,Usability,simpl,simply,609,"## Proposed Changes; Optimization of the Preprocessing phase;; Inclusion of the Chapmann-Enskog option for Mutation++. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Performed. I have reduced almost by half the time of the preprocessing phase, leading to a ~10% less time per iteration. This was done by:; * Calculate dPdU, dTdU, dTvedU only for the implicit case; * Avoid the calculation of eve_min and eve_max using Mutation++. Instead, return nonphysical if the vibrational temperatures reach the specified minimum and maximum value. Additionally, I have included the option of using Chapmann-Enskog for the calculation of transport equations and thermal conductivity using Mutation++",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343
https://github.com/su2code/SU2/pull/1344:1278,Deployability,update,updated,1278,"## Proposed Changes; `CSlidingInterface::GetDonor_Variable` needs to access the `Primitive` of flow variables and the `Solution` of turbulent variables. Which one is the case, is currently decided by checking `donor_solution->GetnPrimVar() == 2` (true->turbulent, false->flow). If the SA turbulence model is used, the non-overidden ""virtual placeholder"" `CVariable::GetPrimitive(unsigned long,unsigned long) const` returning zero is incorrectly called. We propose to fix this by additionally checking for `donor_solution->GetnPrimVar() == 1`. ## Related Work; @maxaehle, @mcmorelli, @BeckettZhou, @EduardoMolina. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344
https://github.com/su2code/SU2/pull/1344:100,Modifiability,variab,variables,100,"## Proposed Changes; `CSlidingInterface::GetDonor_Variable` needs to access the `Primitive` of flow variables and the `Solution` of turbulent variables. Which one is the case, is currently decided by checking `donor_solution->GetnPrimVar() == 2` (true->turbulent, false->flow). If the SA turbulence model is used, the non-overidden ""virtual placeholder"" `CVariable::GetPrimitive(unsigned long,unsigned long) const` returning zero is incorrectly called. We propose to fix this by additionally checking for `donor_solution->GetnPrimVar() == 1`. ## Related Work; @maxaehle, @mcmorelli, @BeckettZhou, @EduardoMolina. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344
https://github.com/su2code/SU2/pull/1344:142,Modifiability,variab,variables,142,"## Proposed Changes; `CSlidingInterface::GetDonor_Variable` needs to access the `Primitive` of flow variables and the `Solution` of turbulent variables. Which one is the case, is currently decided by checking `donor_solution->GetnPrimVar() == 2` (true->turbulent, false->flow). If the SA turbulence model is used, the non-overidden ""virtual placeholder"" `CVariable::GetPrimitive(unsigned long,unsigned long) const` returning zero is incorrectly called. We propose to fix this by additionally checking for `donor_solution->GetnPrimVar() == 1`. ## Related Work; @maxaehle, @mcmorelli, @BeckettZhou, @EduardoMolina. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344
https://github.com/su2code/SU2/pull/1344:69,Security,access,access,69,"## Proposed Changes; `CSlidingInterface::GetDonor_Variable` needs to access the `Primitive` of flow variables and the `Solution` of turbulent variables. Which one is the case, is currently decided by checking `donor_solution->GetnPrimVar() == 2` (true->turbulent, false->flow). If the SA turbulence model is used, the non-overidden ""virtual placeholder"" `CVariable::GetPrimitive(unsigned long,unsigned long) const` returning zero is incorrectly called. We propose to fix this by additionally checking for `donor_solution->GetnPrimVar() == 1`. ## Related Work; @maxaehle, @mcmorelli, @BeckettZhou, @EduardoMolina. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344
https://github.com/su2code/SU2/pull/1344:1205,Testability,test,test,1205,"## Proposed Changes; `CSlidingInterface::GetDonor_Variable` needs to access the `Primitive` of flow variables and the `Solution` of turbulent variables. Which one is the case, is currently decided by checking `donor_solution->GetnPrimVar() == 2` (true->turbulent, false->flow). If the SA turbulence model is used, the non-overidden ""virtual placeholder"" `CVariable::GetPrimitive(unsigned long,unsigned long) const` returning zero is incorrectly called. We propose to fix this by additionally checking for `donor_solution->GetnPrimVar() == 1`. ## Related Work; @maxaehle, @mcmorelli, @BeckettZhou, @EduardoMolina. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344
https://github.com/su2code/SU2/pull/1344:785,Usability,guid,guide,785,"## Proposed Changes; `CSlidingInterface::GetDonor_Variable` needs to access the `Primitive` of flow variables and the `Solution` of turbulent variables. Which one is the case, is currently decided by checking `donor_solution->GetnPrimVar() == 2` (true->turbulent, false->flow). If the SA turbulence model is used, the non-overidden ""virtual placeholder"" `CVariable::GetPrimitive(unsigned long,unsigned long) const` returning zero is incorrectly called. We propose to fix this by additionally checking for `donor_solution->GetnPrimVar() == 1`. ## Related Work; @maxaehle, @mcmorelli, @BeckettZhou, @EduardoMolina. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344
https://github.com/su2code/SU2/pull/1344:1076,Usability,simpl,simply,1076,"## Proposed Changes; `CSlidingInterface::GetDonor_Variable` needs to access the `Primitive` of flow variables and the `Solution` of turbulent variables. Which one is the case, is currently decided by checking `donor_solution->GetnPrimVar() == 2` (true->turbulent, false->flow). If the SA turbulence model is used, the non-overidden ""virtual placeholder"" `CVariable::GetPrimitive(unsigned long,unsigned long) const` returning zero is incorrectly called. We propose to fix this by additionally checking for `donor_solution->GetnPrimVar() == 1`. ## Related Work; @maxaehle, @mcmorelli, @BeckettZhou, @EduardoMolina. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344
https://github.com/su2code/SU2/issues/1345:907,Energy Efficiency,consumption,consumption,907,"**Describe the bug**; When loading grid points for the ith zone, it seems that grid points for all zones after the ith zone will be loaded as well.; This grid point loading is implemented in the function of void CSU2ASCIIMeshReaderFVM::ReadPointCoordinates() . The code snippet below is doing the function. I think there should be a break for the while loop once the grid points for the required zone are loaded. /*--- Open the mesh file and jump to our zone. ---*/. mesh_file.open(meshFilename, ios::in);; FastForwardToMyZone();. /*--- Read the point coordinates into our data structure. ---*/. string text_line;; string::size_type position;; while (getline (mesh_file, text_line)) {. position = text_line.find (""NPOIN="",0);; if (position != string::npos) {. - SU2 Version:7.1.1. It should be noted that this bug is not expected to cause wrong solutions, but lead to unnecessary extra time cost and memory consumption probably.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1345
https://github.com/su2code/SU2/issues/1345:27,Performance,load,loading,27,"**Describe the bug**; When loading grid points for the ith zone, it seems that grid points for all zones after the ith zone will be loaded as well.; This grid point loading is implemented in the function of void CSU2ASCIIMeshReaderFVM::ReadPointCoordinates() . The code snippet below is doing the function. I think there should be a break for the while loop once the grid points for the required zone are loaded. /*--- Open the mesh file and jump to our zone. ---*/. mesh_file.open(meshFilename, ios::in);; FastForwardToMyZone();. /*--- Read the point coordinates into our data structure. ---*/. string text_line;; string::size_type position;; while (getline (mesh_file, text_line)) {. position = text_line.find (""NPOIN="",0);; if (position != string::npos) {. - SU2 Version:7.1.1. It should be noted that this bug is not expected to cause wrong solutions, but lead to unnecessary extra time cost and memory consumption probably.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1345
https://github.com/su2code/SU2/issues/1345:132,Performance,load,loaded,132,"**Describe the bug**; When loading grid points for the ith zone, it seems that grid points for all zones after the ith zone will be loaded as well.; This grid point loading is implemented in the function of void CSU2ASCIIMeshReaderFVM::ReadPointCoordinates() . The code snippet below is doing the function. I think there should be a break for the while loop once the grid points for the required zone are loaded. /*--- Open the mesh file and jump to our zone. ---*/. mesh_file.open(meshFilename, ios::in);; FastForwardToMyZone();. /*--- Read the point coordinates into our data structure. ---*/. string text_line;; string::size_type position;; while (getline (mesh_file, text_line)) {. position = text_line.find (""NPOIN="",0);; if (position != string::npos) {. - SU2 Version:7.1.1. It should be noted that this bug is not expected to cause wrong solutions, but lead to unnecessary extra time cost and memory consumption probably.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1345
https://github.com/su2code/SU2/issues/1345:165,Performance,load,loading,165,"**Describe the bug**; When loading grid points for the ith zone, it seems that grid points for all zones after the ith zone will be loaded as well.; This grid point loading is implemented in the function of void CSU2ASCIIMeshReaderFVM::ReadPointCoordinates() . The code snippet below is doing the function. I think there should be a break for the while loop once the grid points for the required zone are loaded. /*--- Open the mesh file and jump to our zone. ---*/. mesh_file.open(meshFilename, ios::in);; FastForwardToMyZone();. /*--- Read the point coordinates into our data structure. ---*/. string text_line;; string::size_type position;; while (getline (mesh_file, text_line)) {. position = text_line.find (""NPOIN="",0);; if (position != string::npos) {. - SU2 Version:7.1.1. It should be noted that this bug is not expected to cause wrong solutions, but lead to unnecessary extra time cost and memory consumption probably.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1345
https://github.com/su2code/SU2/issues/1345:405,Performance,load,loaded,405,"**Describe the bug**; When loading grid points for the ith zone, it seems that grid points for all zones after the ith zone will be loaded as well.; This grid point loading is implemented in the function of void CSU2ASCIIMeshReaderFVM::ReadPointCoordinates() . The code snippet below is doing the function. I think there should be a break for the while loop once the grid points for the required zone are loaded. /*--- Open the mesh file and jump to our zone. ---*/. mesh_file.open(meshFilename, ios::in);; FastForwardToMyZone();. /*--- Read the point coordinates into our data structure. ---*/. string text_line;; string::size_type position;; while (getline (mesh_file, text_line)) {. position = text_line.find (""NPOIN="",0);; if (position != string::npos) {. - SU2 Version:7.1.1. It should be noted that this bug is not expected to cause wrong solutions, but lead to unnecessary extra time cost and memory consumption probably.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1345
https://github.com/su2code/SU2/pull/1346:2433,Deployability,update,updated,2433,"tions are equivalent for smooth surfaces and clearly surface neighbors are always volume neighbors as well. However, at surfaces with sharp edges, two vertices can be volume neighbors without being surface neighbors. This happens when the edge of the volume element connecting the vertices lies inside the domain. `CInterpolator::ReconstructBoundary` is called from `CSlidingMesh::SetTransferCoeff`, which then hands the connectivity structure to `CSlidingMesh::Build_3D_surface_element`. The latter function forms a circular ordering of the neighbors of each vertex s: e.g. if there are four neighbors a,b,c,d of s with connectivity a-b,c-d,b-c,a-d then it performs an iteration over e.g. a-b-c-d. If we understand ""neighbors"" as ""surface neighbors"", the neighbors of any vertex s can be brought into a ""closed circle"" or ""open chain"" ordering where each of them is neighbor only to its direct predecessor and successor. This is not true for the volume neighbor relation however, and in this case the iteration might enter an infinite loop e-a-b-c-d-a-b-... (until the access to `element[ iElementNode ]` segfaults). That's approximately how we (@maxaehle,@mcmorelli,@BeckettZhou,@EduardoMolina) noticed the bug.; ; ## Related Work; #1344 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346
https://github.com/su2code/SU2/pull/1346:1184,Performance,perform,performs,1184," the marker, i.e. the list of neighbor vertices for each vertex. In the previous version of the code, two vertices were considered ""neighbors"" if they were connected through an edge of a volume element (""volume neighbors""). We propose to consider vertices as ""neighbors"" only if they are connected through an edge of a surface element (""surface neighbors""). These two notions are equivalent for smooth surfaces and clearly surface neighbors are always volume neighbors as well. However, at surfaces with sharp edges, two vertices can be volume neighbors without being surface neighbors. This happens when the edge of the volume element connecting the vertices lies inside the domain. `CInterpolator::ReconstructBoundary` is called from `CSlidingMesh::SetTransferCoeff`, which then hands the connectivity structure to `CSlidingMesh::Build_3D_surface_element`. The latter function forms a circular ordering of the neighbors of each vertex s: e.g. if there are four neighbors a,b,c,d of s with connectivity a-b,c-d,b-c,a-d then it performs an iteration over e.g. a-b-c-d. If we understand ""neighbors"" as ""surface neighbors"", the neighbors of any vertex s can be brought into a ""closed circle"" or ""open chain"" ordering where each of them is neighbor only to its direct predecessor and successor. This is not true for the volume neighbor relation however, and in this case the iteration might enter an infinite loop e-a-b-c-d-a-b-... (until the access to `element[ iElementNode ]` segfaults). That's approximately how we (@maxaehle,@mcmorelli,@BeckettZhou,@EduardoMolina) noticed the bug.; ; ## Related Work; #1344 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346
https://github.com/su2code/SU2/pull/1346:1596,Security,access,access,1596,"tions are equivalent for smooth surfaces and clearly surface neighbors are always volume neighbors as well. However, at surfaces with sharp edges, two vertices can be volume neighbors without being surface neighbors. This happens when the edge of the volume element connecting the vertices lies inside the domain. `CInterpolator::ReconstructBoundary` is called from `CSlidingMesh::SetTransferCoeff`, which then hands the connectivity structure to `CSlidingMesh::Build_3D_surface_element`. The latter function forms a circular ordering of the neighbors of each vertex s: e.g. if there are four neighbors a,b,c,d of s with connectivity a-b,c-d,b-c,a-d then it performs an iteration over e.g. a-b-c-d. If we understand ""neighbors"" as ""surface neighbors"", the neighbors of any vertex s can be brought into a ""closed circle"" or ""open chain"" ordering where each of them is neighbor only to its direct predecessor and successor. This is not true for the volume neighbor relation however, and in this case the iteration might enter an infinite loop e-a-b-c-d-a-b-... (until the access to `element[ iElementNode ]` segfaults). That's approximately how we (@maxaehle,@mcmorelli,@BeckettZhou,@EduardoMolina) noticed the bug.; ; ## Related Work; #1344 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346
https://github.com/su2code/SU2/pull/1346:2360,Testability,test,test,2360,"tions are equivalent for smooth surfaces and clearly surface neighbors are always volume neighbors as well. However, at surfaces with sharp edges, two vertices can be volume neighbors without being surface neighbors. This happens when the edge of the volume element connecting the vertices lies inside the domain. `CInterpolator::ReconstructBoundary` is called from `CSlidingMesh::SetTransferCoeff`, which then hands the connectivity structure to `CSlidingMesh::Build_3D_surface_element`. The latter function forms a circular ordering of the neighbors of each vertex s: e.g. if there are four neighbors a,b,c,d of s with connectivity a-b,c-d,b-c,a-d then it performs an iteration over e.g. a-b-c-d. If we understand ""neighbors"" as ""surface neighbors"", the neighbors of any vertex s can be brought into a ""closed circle"" or ""open chain"" ordering where each of them is neighbor only to its direct predecessor and successor. This is not true for the volume neighbor relation however, and in this case the iteration might enter an infinite loop e-a-b-c-d-a-b-... (until the access to `element[ iElementNode ]` segfaults). That's approximately how we (@maxaehle,@mcmorelli,@BeckettZhou,@EduardoMolina) noticed the bug.; ; ## Related Work; #1344 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346
https://github.com/su2code/SU2/pull/1346:571,Usability,clear,clearly,571,"## Proposed Changes; `CInterpolator::ReconstructBoundary` builds arrays `Buffer_Receive_StartLinkedNodes`, `_LinkedNodes`,... that store the connectivity of the marker, i.e. the list of neighbor vertices for each vertex. In the previous version of the code, two vertices were considered ""neighbors"" if they were connected through an edge of a volume element (""volume neighbors""). We propose to consider vertices as ""neighbors"" only if they are connected through an edge of a surface element (""surface neighbors""). These two notions are equivalent for smooth surfaces and clearly surface neighbors are always volume neighbors as well. However, at surfaces with sharp edges, two vertices can be volume neighbors without being surface neighbors. This happens when the edge of the volume element connecting the vertices lies inside the domain. `CInterpolator::ReconstructBoundary` is called from `CSlidingMesh::SetTransferCoeff`, which then hands the connectivity structure to `CSlidingMesh::Build_3D_surface_element`. The latter function forms a circular ordering of the neighbors of each vertex s: e.g. if there are four neighbors a,b,c,d of s with connectivity a-b,c-d,b-c,a-d then it performs an iteration over e.g. a-b-c-d. If we understand ""neighbors"" as ""surface neighbors"", the neighbors of any vertex s can be brought into a ""closed circle"" or ""open chain"" ordering where each of them is neighbor only to its direct predecessor and successor. This is not true for the volume neighbor relation however, and in this case the iteration might enter an infinite loop e-a-b-c-d-a-b-... (until the access to `element[ iElementNode ]` segfaults). That's approximately how we (@maxaehle,@mcmorelli,@BeckettZhou,@EduardoMolina) noticed the bug.; ; ## Related Work; #1344 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346
https://github.com/su2code/SU2/pull/1346:1940,Usability,guid,guide,1940,"tions are equivalent for smooth surfaces and clearly surface neighbors are always volume neighbors as well. However, at surfaces with sharp edges, two vertices can be volume neighbors without being surface neighbors. This happens when the edge of the volume element connecting the vertices lies inside the domain. `CInterpolator::ReconstructBoundary` is called from `CSlidingMesh::SetTransferCoeff`, which then hands the connectivity structure to `CSlidingMesh::Build_3D_surface_element`. The latter function forms a circular ordering of the neighbors of each vertex s: e.g. if there are four neighbors a,b,c,d of s with connectivity a-b,c-d,b-c,a-d then it performs an iteration over e.g. a-b-c-d. If we understand ""neighbors"" as ""surface neighbors"", the neighbors of any vertex s can be brought into a ""closed circle"" or ""open chain"" ordering where each of them is neighbor only to its direct predecessor and successor. This is not true for the volume neighbor relation however, and in this case the iteration might enter an infinite loop e-a-b-c-d-a-b-... (until the access to `element[ iElementNode ]` segfaults). That's approximately how we (@maxaehle,@mcmorelli,@BeckettZhou,@EduardoMolina) noticed the bug.; ; ## Related Work; #1344 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346
https://github.com/su2code/SU2/pull/1346:2231,Usability,simpl,simply,2231,"tions are equivalent for smooth surfaces and clearly surface neighbors are always volume neighbors as well. However, at surfaces with sharp edges, two vertices can be volume neighbors without being surface neighbors. This happens when the edge of the volume element connecting the vertices lies inside the domain. `CInterpolator::ReconstructBoundary` is called from `CSlidingMesh::SetTransferCoeff`, which then hands the connectivity structure to `CSlidingMesh::Build_3D_surface_element`. The latter function forms a circular ordering of the neighbors of each vertex s: e.g. if there are four neighbors a,b,c,d of s with connectivity a-b,c-d,b-c,a-d then it performs an iteration over e.g. a-b-c-d. If we understand ""neighbors"" as ""surface neighbors"", the neighbors of any vertex s can be brought into a ""closed circle"" or ""open chain"" ordering where each of them is neighbor only to its direct predecessor and successor. This is not true for the volume neighbor relation however, and in this case the iteration might enter an infinite loop e-a-b-c-d-a-b-... (until the access to `element[ iElementNode ]` segfaults). That's approximately how we (@maxaehle,@mcmorelli,@BeckettZhou,@EduardoMolina) noticed the bug.; ; ## Related Work; #1344 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346
https://github.com/su2code/SU2/pull/1347:29,Deployability,update,updates,29,"## Proposed Changes; This PR updates some of the NEMO viscous routines to be more inline with the overall SU2 structure. Hopefully paving the way for an easier merge with turbulence solvers in the future. ## Related Work; This is coming with an effort to update and optimize NEMO, like in #1343. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347
https://github.com/su2code/SU2/pull/1347:255,Deployability,update,update,255,"## Proposed Changes; This PR updates some of the NEMO viscous routines to be more inline with the overall SU2 structure. Hopefully paving the way for an easier merge with turbulence solvers in the future. ## Related Work; This is coming with an effort to update and optimize NEMO, like in #1343. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347
https://github.com/su2code/SU2/pull/1347:961,Deployability,update,updated,961,"## Proposed Changes; This PR updates some of the NEMO viscous routines to be more inline with the overall SU2 structure. Hopefully paving the way for an easier merge with turbulence solvers in the future. ## Related Work; This is coming with an effort to update and optimize NEMO, like in #1343. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347
https://github.com/su2code/SU2/pull/1347:62,Integrability,rout,routines,62,"## Proposed Changes; This PR updates some of the NEMO viscous routines to be more inline with the overall SU2 structure. Hopefully paving the way for an easier merge with turbulence solvers in the future. ## Related Work; This is coming with an effort to update and optimize NEMO, like in #1343. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347
https://github.com/su2code/SU2/pull/1347:266,Performance,optimiz,optimize,266,"## Proposed Changes; This PR updates some of the NEMO viscous routines to be more inline with the overall SU2 structure. Hopefully paving the way for an easier merge with turbulence solvers in the future. ## Related Work; This is coming with an effort to update and optimize NEMO, like in #1343. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347
https://github.com/su2code/SU2/pull/1347:888,Testability,test,test,888,"## Proposed Changes; This PR updates some of the NEMO viscous routines to be more inline with the overall SU2 structure. Hopefully paving the way for an easier merge with turbulence solvers in the future. ## Related Work; This is coming with an effort to update and optimize NEMO, like in #1343. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347
https://github.com/su2code/SU2/pull/1347:468,Usability,guid,guide,468,"## Proposed Changes; This PR updates some of the NEMO viscous routines to be more inline with the overall SU2 structure. Hopefully paving the way for an easier merge with turbulence solvers in the future. ## Related Work; This is coming with an effort to update and optimize NEMO, like in #1343. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347
https://github.com/su2code/SU2/pull/1347:759,Usability,simpl,simply,759,"## Proposed Changes; This PR updates some of the NEMO viscous routines to be more inline with the overall SU2 structure. Hopefully paving the way for an easier merge with turbulence solvers in the future. ## Related Work; This is coming with an effort to update and optimize NEMO, like in #1343. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347
https://github.com/su2code/SU2/pull/1348:836,Availability,toler,tolerant,836,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348
https://github.com/su2code/SU2/pull/1348:652,Deployability,integrat,integration,652,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348
https://github.com/su2code/SU2/pull/1348:1804,Deployability,update,updated,1804,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348
https://github.com/su2code/SU2/pull/1348:61,Energy Efficiency,efficient,efficient,61,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348
https://github.com/su2code/SU2/pull/1348:224,Energy Efficiency,energy,energy,224,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348
https://github.com/su2code/SU2/pull/1348:733,Energy Efficiency,efficient,efficient,733,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348
https://github.com/su2code/SU2/pull/1348:652,Integrability,integrat,integration,652,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348
https://github.com/su2code/SU2/pull/1348:668,Modifiability,coupling,coupling,668,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348
https://github.com/su2code/SU2/pull/1348:869,Modifiability,variab,variable,869,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348
https://github.com/su2code/SU2/pull/1348:1731,Testability,test,test,1731,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348
https://github.com/su2code/SU2/pull/1348:1311,Usability,guid,guide,1311,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348
https://github.com/su2code/SU2/pull/1348:1602,Usability,simpl,simply,1602,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348
https://github.com/su2code/SU2/issues/1349:179,Availability,error,error,179,"**Describe the bug**. When compiling SU2 7.1.1 Blackbird from the Develop Branch with Pastix support, the build fails at Common/src/libSU2CommonAD.a.p/wall_model.cpp.o with a c++ error saying unrecognized command-line-option '-fexceptions;-pthread'. Here is a snip from the error message: ; ![image](https://user-images.githubusercontent.com/24353606/128623331-461f0ded-4b4d-4ece-83e8-b2eb40e9129d.png). **To Reproduce**; Basically I download the develop branch from SU2 7.1.1,; extract it and configure using:; ![image](https://user-images.githubusercontent.com/24353606/128623382-55f4bc2e-e971-4b1d-81bf-626fc9ae484d.png). **Desktop (please complete the following information):**; - OS: Fedora 34; - C++ compiler and version: g++ (GCC) 11.2.1; - MPI implementation and version: OpenMPI-4.1.1; - SU2 Version: 7.1.1-Develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349
https://github.com/su2code/SU2/issues/1349:274,Availability,error,error,274,"**Describe the bug**. When compiling SU2 7.1.1 Blackbird from the Develop Branch with Pastix support, the build fails at Common/src/libSU2CommonAD.a.p/wall_model.cpp.o with a c++ error saying unrecognized command-line-option '-fexceptions;-pthread'. Here is a snip from the error message: ; ![image](https://user-images.githubusercontent.com/24353606/128623331-461f0ded-4b4d-4ece-83e8-b2eb40e9129d.png). **To Reproduce**; Basically I download the develop branch from SU2 7.1.1,; extract it and configure using:; ![image](https://user-images.githubusercontent.com/24353606/128623382-55f4bc2e-e971-4b1d-81bf-626fc9ae484d.png). **Desktop (please complete the following information):**; - OS: Fedora 34; - C++ compiler and version: g++ (GCC) 11.2.1; - MPI implementation and version: OpenMPI-4.1.1; - SU2 Version: 7.1.1-Develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349
https://github.com/su2code/SU2/issues/1349:434,Availability,down,download,434,"**Describe the bug**. When compiling SU2 7.1.1 Blackbird from the Develop Branch with Pastix support, the build fails at Common/src/libSU2CommonAD.a.p/wall_model.cpp.o with a c++ error saying unrecognized command-line-option '-fexceptions;-pthread'. Here is a snip from the error message: ; ![image](https://user-images.githubusercontent.com/24353606/128623331-461f0ded-4b4d-4ece-83e8-b2eb40e9129d.png). **To Reproduce**; Basically I download the develop branch from SU2 7.1.1,; extract it and configure using:; ![image](https://user-images.githubusercontent.com/24353606/128623382-55f4bc2e-e971-4b1d-81bf-626fc9ae484d.png). **Desktop (please complete the following information):**; - OS: Fedora 34; - C++ compiler and version: g++ (GCC) 11.2.1; - MPI implementation and version: OpenMPI-4.1.1; - SU2 Version: 7.1.1-Develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349
https://github.com/su2code/SU2/issues/1349:280,Integrability,message,message,280,"**Describe the bug**. When compiling SU2 7.1.1 Blackbird from the Develop Branch with Pastix support, the build fails at Common/src/libSU2CommonAD.a.p/wall_model.cpp.o with a c++ error saying unrecognized command-line-option '-fexceptions;-pthread'. Here is a snip from the error message: ; ![image](https://user-images.githubusercontent.com/24353606/128623331-461f0ded-4b4d-4ece-83e8-b2eb40e9129d.png). **To Reproduce**; Basically I download the develop branch from SU2 7.1.1,; extract it and configure using:; ![image](https://user-images.githubusercontent.com/24353606/128623382-55f4bc2e-e971-4b1d-81bf-626fc9ae484d.png). **Desktop (please complete the following information):**; - OS: Fedora 34; - C++ compiler and version: g++ (GCC) 11.2.1; - MPI implementation and version: OpenMPI-4.1.1; - SU2 Version: 7.1.1-Develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349
https://github.com/su2code/SU2/issues/1349:494,Modifiability,config,configure,494,"**Describe the bug**. When compiling SU2 7.1.1 Blackbird from the Develop Branch with Pastix support, the build fails at Common/src/libSU2CommonAD.a.p/wall_model.cpp.o with a c++ error saying unrecognized command-line-option '-fexceptions;-pthread'. Here is a snip from the error message: ; ![image](https://user-images.githubusercontent.com/24353606/128623331-461f0ded-4b4d-4ece-83e8-b2eb40e9129d.png). **To Reproduce**; Basically I download the develop branch from SU2 7.1.1,; extract it and configure using:; ![image](https://user-images.githubusercontent.com/24353606/128623382-55f4bc2e-e971-4b1d-81bf-626fc9ae484d.png). **Desktop (please complete the following information):**; - OS: Fedora 34; - C++ compiler and version: g++ (GCC) 11.2.1; - MPI implementation and version: OpenMPI-4.1.1; - SU2 Version: 7.1.1-Develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349
https://github.com/su2code/SU2/pull/1351:41,Integrability,interface,interface,41,"I think nearfield was a kind of internal interface between two boundaries with the same points, so not a ""do nothing"" group of points but more like an actuator disk without any jump.; Anyway, it was all incomplete or broken and there was no documentation in the code, for a change...; To anyone in the future the commit to revert is 265bfe8814ed345e9ab6288265e80858b00ae59e",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351
https://github.com/su2code/SU2/pull/1352:1064,Deployability,update,updated,1064,"## Proposed Changes; - Qualify member functions `CPrimalGrid::Get...` as const; - `CPrimalGridFEM::GetCornerPointsAllFaces` did set the member `nFaces`. To make it const, I introduced `CPrimalGridFEM::elementtype_to_nFaces` and initialized `nFaces` in the constructor.; - Now we can use `const CPrimalGrid* elem` in `CInterpolator::ReconstructBoundary` (#1346).; - **EDIT**: see more changes below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1352
https://github.com/su2code/SU2/pull/1352:991,Testability,test,test,991,"## Proposed Changes; - Qualify member functions `CPrimalGrid::Get...` as const; - `CPrimalGridFEM::GetCornerPointsAllFaces` did set the member `nFaces`. To make it const, I introduced `CPrimalGridFEM::elementtype_to_nFaces` and initialized `nFaces` in the constructor.; - Now we can use `const CPrimalGrid* elem` in `CInterpolator::ReconstructBoundary` (#1346).; - **EDIT**: see more changes below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1352
https://github.com/su2code/SU2/pull/1352:571,Usability,guid,guide,571,"## Proposed Changes; - Qualify member functions `CPrimalGrid::Get...` as const; - `CPrimalGridFEM::GetCornerPointsAllFaces` did set the member `nFaces`. To make it const, I introduced `CPrimalGridFEM::elementtype_to_nFaces` and initialized `nFaces` in the constructor.; - Now we can use `const CPrimalGrid* elem` in `CInterpolator::ReconstructBoundary` (#1346).; - **EDIT**: see more changes below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1352
https://github.com/su2code/SU2/pull/1352:862,Usability,simpl,simply,862,"## Proposed Changes; - Qualify member functions `CPrimalGrid::Get...` as const; - `CPrimalGridFEM::GetCornerPointsAllFaces` did set the member `nFaces`. To make it const, I introduced `CPrimalGridFEM::elementtype_to_nFaces` and initialized `nFaces` in the constructor.; - Now we can use `const CPrimalGrid* elem` in `CInterpolator::ReconstructBoundary` (#1346).; - **EDIT**: see more changes below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1352
https://github.com/su2code/SU2/pull/1356:1081,Deployability,update,updated,1081,"## Proposed Changes; This PR addresses adding in the Jacobians for the NEMO convective, viscous and source terms. Much improvement and testing is still needed, but I was hoping to get feedback on some coding methodologies/strategies to avoid code bloat, etc. I would very much appreciate thoughts and feedback!. ## Related Work; This is a continuation of the recent NEMO improvements/modernization #1343 and #1347 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356
https://github.com/su2code/SU2/pull/1356:236,Safety,avoid,avoid,236,"## Proposed Changes; This PR addresses adding in the Jacobians for the NEMO convective, viscous and source terms. Much improvement and testing is still needed, but I was hoping to get feedback on some coding methodologies/strategies to avoid code bloat, etc. I would very much appreciate thoughts and feedback!. ## Related Work; This is a continuation of the recent NEMO improvements/modernization #1343 and #1347 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356
https://github.com/su2code/SU2/pull/1356:135,Testability,test,testing,135,"## Proposed Changes; This PR addresses adding in the Jacobians for the NEMO convective, viscous and source terms. Much improvement and testing is still needed, but I was hoping to get feedback on some coding methodologies/strategies to avoid code bloat, etc. I would very much appreciate thoughts and feedback!. ## Related Work; This is a continuation of the recent NEMO improvements/modernization #1343 and #1347 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356
https://github.com/su2code/SU2/pull/1356:1008,Testability,test,test,1008,"## Proposed Changes; This PR addresses adding in the Jacobians for the NEMO convective, viscous and source terms. Much improvement and testing is still needed, but I was hoping to get feedback on some coding methodologies/strategies to avoid code bloat, etc. I would very much appreciate thoughts and feedback!. ## Related Work; This is a continuation of the recent NEMO improvements/modernization #1343 and #1347 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356
https://github.com/su2code/SU2/pull/1356:184,Usability,feedback,feedback,184,"## Proposed Changes; This PR addresses adding in the Jacobians for the NEMO convective, viscous and source terms. Much improvement and testing is still needed, but I was hoping to get feedback on some coding methodologies/strategies to avoid code bloat, etc. I would very much appreciate thoughts and feedback!. ## Related Work; This is a continuation of the recent NEMO improvements/modernization #1343 and #1347 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356
https://github.com/su2code/SU2/pull/1356:301,Usability,feedback,feedback,301,"## Proposed Changes; This PR addresses adding in the Jacobians for the NEMO convective, viscous and source terms. Much improvement and testing is still needed, but I was hoping to get feedback on some coding methodologies/strategies to avoid code bloat, etc. I would very much appreciate thoughts and feedback!. ## Related Work; This is a continuation of the recent NEMO improvements/modernization #1343 and #1347 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356
https://github.com/su2code/SU2/pull/1356:588,Usability,guid,guide,588,"## Proposed Changes; This PR addresses adding in the Jacobians for the NEMO convective, viscous and source terms. Much improvement and testing is still needed, but I was hoping to get feedback on some coding methodologies/strategies to avoid code bloat, etc. I would very much appreciate thoughts and feedback!. ## Related Work; This is a continuation of the recent NEMO improvements/modernization #1343 and #1347 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356
https://github.com/su2code/SU2/pull/1356:879,Usability,simpl,simply,879,"## Proposed Changes; This PR addresses adding in the Jacobians for the NEMO convective, viscous and source terms. Much improvement and testing is still needed, but I was hoping to get feedback on some coding methodologies/strategies to avoid code bloat, etc. I would very much appreciate thoughts and feedback!. ## Related Work; This is a continuation of the recent NEMO improvements/modernization #1343 and #1347 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356
https://github.com/su2code/SU2/pull/1357:46,Deployability,update,updates,46,"## Proposed Changes; Dear all,. Here are some updates for the python fsi interface. Namely:. - Better use of mpi4py, using always numpy array (more computationally efficient); - Fix of the restarted coupled simulation; - Automatic use of default values, in case of wrong inputs; - Introduction of a sort of dry run, which actually prints out the mapped modes and the normals of the aerodynamic surface mesh. This is yet another step towards the automatic creation of ROM from aerodynamic response; - Fix of small bugs. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357
https://github.com/su2code/SU2/pull/1357:944,Deployability,update,updated,944,"## Proposed Changes; Dear all,. Here are some updates for the python fsi interface. Namely:. - Better use of mpi4py, using always numpy array (more computationally efficient); - Fix of the restarted coupled simulation; - Automatic use of default values, in case of wrong inputs; - Introduction of a sort of dry run, which actually prints out the mapped modes and the normals of the aerodynamic surface mesh. This is yet another step towards the automatic creation of ROM from aerodynamic response; - Fix of small bugs. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357
https://github.com/su2code/SU2/pull/1357:164,Energy Efficiency,efficient,efficient,164,"## Proposed Changes; Dear all,. Here are some updates for the python fsi interface. Namely:. - Better use of mpi4py, using always numpy array (more computationally efficient); - Fix of the restarted coupled simulation; - Automatic use of default values, in case of wrong inputs; - Introduction of a sort of dry run, which actually prints out the mapped modes and the normals of the aerodynamic surface mesh. This is yet another step towards the automatic creation of ROM from aerodynamic response; - Fix of small bugs. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357
https://github.com/su2code/SU2/pull/1357:73,Integrability,interface,interface,73,"## Proposed Changes; Dear all,. Here are some updates for the python fsi interface. Namely:. - Better use of mpi4py, using always numpy array (more computationally efficient); - Fix of the restarted coupled simulation; - Automatic use of default values, in case of wrong inputs; - Introduction of a sort of dry run, which actually prints out the mapped modes and the normals of the aerodynamic surface mesh. This is yet another step towards the automatic creation of ROM from aerodynamic response; - Fix of small bugs. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357
https://github.com/su2code/SU2/pull/1357:871,Testability,test,test,871,"## Proposed Changes; Dear all,. Here are some updates for the python fsi interface. Namely:. - Better use of mpi4py, using always numpy array (more computationally efficient); - Fix of the restarted coupled simulation; - Automatic use of default values, in case of wrong inputs; - Introduction of a sort of dry run, which actually prints out the mapped modes and the normals of the aerodynamic surface mesh. This is yet another step towards the automatic creation of ROM from aerodynamic response; - Fix of small bugs. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357
https://github.com/su2code/SU2/pull/1357:742,Usability,simpl,simply,742,"## Proposed Changes; Dear all,. Here are some updates for the python fsi interface. Namely:. - Better use of mpi4py, using always numpy array (more computationally efficient); - Fix of the restarted coupled simulation; - Automatic use of default values, in case of wrong inputs; - Introduction of a sort of dry run, which actually prints out the mapped modes and the normals of the aerodynamic surface mesh. This is yet another step towards the automatic creation of ROM from aerodynamic response; - Fix of small bugs. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357
https://github.com/su2code/SU2/pull/1359:514,Deployability,update,updated,514,"## Proposed Changes; Just small changes suggested by @TobiKattmann (Thank you) in #1357. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1359
https://github.com/su2code/SU2/pull/1359:441,Testability,test,test,441,"## Proposed Changes; Just small changes suggested by @TobiKattmann (Thank you) in #1357. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1359
https://github.com/su2code/SU2/pull/1359:312,Usability,simpl,simply,312,"## Proposed Changes; Just small changes suggested by @TobiKattmann (Thank you) in #1357. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1359
https://github.com/su2code/SU2/pull/1360:1178,Deployability,update,updated,1178,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; - fixed a small bug in the wall model; - added config options (replace as many hard coded constants as possible); - aerodynamic heating (wall temperature imposed in compressible flow, still needs a high mach testcase); - added a test case for SA model; - cleaned up a bit. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360
https://github.com/su2code/SU2/pull/1360:139,Modifiability,config,config,139,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; - fixed a small bug in the wall model; - added config options (replace as many hard coded constants as possible); - aerodynamic heating (wall temperature imposed in compressible flow, still needs a high mach testcase); - added a test case for SA model; - cleaned up a bit. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360
https://github.com/su2code/SU2/pull/1360:300,Testability,test,testcase,300,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; - fixed a small bug in the wall model; - added config options (replace as many hard coded constants as possible); - aerodynamic heating (wall temperature imposed in compressible flow, still needs a high mach testcase); - added a test case for SA model; - cleaned up a bit. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360
https://github.com/su2code/SU2/pull/1360:321,Testability,test,test,321,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; - fixed a small bug in the wall model; - added config options (replace as many hard coded constants as possible); - aerodynamic heating (wall temperature imposed in compressible flow, still needs a high mach testcase); - added a test case for SA model; - cleaned up a bit. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360
https://github.com/su2code/SU2/pull/1360:1105,Testability,test,test,1105,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; - fixed a small bug in the wall model; - added config options (replace as many hard coded constants as possible); - aerodynamic heating (wall temperature imposed in compressible flow, still needs a high mach testcase); - added a test case for SA model; - cleaned up a bit. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360
https://github.com/su2code/SU2/pull/1360:685,Usability,guid,guide,685,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; - fixed a small bug in the wall model; - added config options (replace as many hard coded constants as possible); - aerodynamic heating (wall temperature imposed in compressible flow, still needs a high mach testcase); - added a test case for SA model; - cleaned up a bit. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360
https://github.com/su2code/SU2/pull/1360:976,Usability,simpl,simply,976,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; - fixed a small bug in the wall model; - added config options (replace as many hard coded constants as possible); - aerodynamic heating (wall temperature imposed in compressible flow, still needs a high mach testcase); - added a test case for SA model; - cleaned up a bit. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360
https://github.com/su2code/SU2/pull/1361:1205,Deployability,update,updated,1205,"## Proposed Changes; Reduce duplication and maybe make it a bit faster. We were reading the entire mesh file in four passes (open-close, open-close, ...) one for metadata (NDIME, NELEM, etc.) one for points, one for elements, and then one for markers.; Now we have a maximum of 2 (meta + reading) and if the points are listed before the elements we do it in 1 pass (there are some meshes like that in TestCases).; If we need to split actuator disk surfaces there are more passes, don't ask me how many because I'm not going to touch that function (it is probably not used often). We still do a lot of reading for single-file multizone meshes to get to each zone, and usually we put smaller meshes at the end right :sweat_smile: I won't get into that now. ## Related Work; #1345 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1361
https://github.com/su2code/SU2/pull/1361:21,Energy Efficiency,Reduce,Reduce,21,"## Proposed Changes; Reduce duplication and maybe make it a bit faster. We were reading the entire mesh file in four passes (open-close, open-close, ...) one for metadata (NDIME, NELEM, etc.) one for points, one for elements, and then one for markers.; Now we have a maximum of 2 (meta + reading) and if the points are listed before the elements we do it in 1 pass (there are some meshes like that in TestCases).; If we need to split actuator disk surfaces there are more passes, don't ask me how many because I'm not going to touch that function (it is probably not used often). We still do a lot of reading for single-file multizone meshes to get to each zone, and usually we put smaller meshes at the end right :sweat_smile: I won't get into that now. ## Related Work; #1345 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1361
https://github.com/su2code/SU2/pull/1361:401,Testability,Test,TestCases,401,"## Proposed Changes; Reduce duplication and maybe make it a bit faster. We were reading the entire mesh file in four passes (open-close, open-close, ...) one for metadata (NDIME, NELEM, etc.) one for points, one for elements, and then one for markers.; Now we have a maximum of 2 (meta + reading) and if the points are listed before the elements we do it in 1 pass (there are some meshes like that in TestCases).; If we need to split actuator disk surfaces there are more passes, don't ask me how many because I'm not going to touch that function (it is probably not used often). We still do a lot of reading for single-file multizone meshes to get to each zone, and usually we put smaller meshes at the end right :sweat_smile: I won't get into that now. ## Related Work; #1345 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1361
https://github.com/su2code/SU2/pull/1361:1132,Testability,test,test,1132,"## Proposed Changes; Reduce duplication and maybe make it a bit faster. We were reading the entire mesh file in four passes (open-close, open-close, ...) one for metadata (NDIME, NELEM, etc.) one for points, one for elements, and then one for markers.; Now we have a maximum of 2 (meta + reading) and if the points are listed before the elements we do it in 1 pass (there are some meshes like that in TestCases).; If we need to split actuator disk surfaces there are more passes, don't ask me how many because I'm not going to touch that function (it is probably not used often). We still do a lot of reading for single-file multizone meshes to get to each zone, and usually we put smaller meshes at the end right :sweat_smile: I won't get into that now. ## Related Work; #1345 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1361
https://github.com/su2code/SU2/pull/1361:1003,Usability,simpl,simply,1003,"## Proposed Changes; Reduce duplication and maybe make it a bit faster. We were reading the entire mesh file in four passes (open-close, open-close, ...) one for metadata (NDIME, NELEM, etc.) one for points, one for elements, and then one for markers.; Now we have a maximum of 2 (meta + reading) and if the points are listed before the elements we do it in 1 pass (there are some meshes like that in TestCases).; If we need to split actuator disk surfaces there are more passes, don't ask me how many because I'm not going to touch that function (it is probably not used often). We still do a lot of reading for single-file multizone meshes to get to each zone, and usually we put smaller meshes at the end right :sweat_smile: I won't get into that now. ## Related Work; #1345 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1361
https://github.com/su2code/SU2/pull/1362:35,Availability,fault,faults,35,"FULLMG_CYCLE produces segmentation faults in different ways:. 1. When using the SST turbulent solver; 2. When running in parallel (mpirun/mpiexec). This PR tries to fix these segmentation faults. ## Proposed Changes; **First issue**; In CTurbSSTSolver::CTurbSSTSolver() we do not initialize the residual nor the solution if we are using a FULLMG_CYCLE, producing a segmentation fault. I have included a line of code to consider the FULLMG_CYCLE scenario. **Second issue**; This issue is not related to mpi _per se_ but to domain partitioning.; In CMultiGridGeometry::CMultiGridGeometry() is computed the ratio between the number of points in the finest grid and a given coarse grid level. If this ratio is below 2.5 (I do not know why do we make this evaluation neither the reason why exactly 2.5) a multigrid level is removed (without warning the user!?), see lines 629-632. For a few cases that I have tested, when running in parallel certain grid levels have a ratio below 2.5 hence are removed. This does not happen when running in serial.; In CMultiGridIntegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362
https://github.com/su2code/SU2/pull/1362:188,Availability,fault,faults,188,"FULLMG_CYCLE produces segmentation faults in different ways:. 1. When using the SST turbulent solver; 2. When running in parallel (mpirun/mpiexec). This PR tries to fix these segmentation faults. ## Proposed Changes; **First issue**; In CTurbSSTSolver::CTurbSSTSolver() we do not initialize the residual nor the solution if we are using a FULLMG_CYCLE, producing a segmentation fault. I have included a line of code to consider the FULLMG_CYCLE scenario. **Second issue**; This issue is not related to mpi _per se_ but to domain partitioning.; In CMultiGridGeometry::CMultiGridGeometry() is computed the ratio between the number of points in the finest grid and a given coarse grid level. If this ratio is below 2.5 (I do not know why do we make this evaluation neither the reason why exactly 2.5) a multigrid level is removed (without warning the user!?), see lines 629-632. For a few cases that I have tested, when running in parallel certain grid levels have a ratio below 2.5 hence are removed. This does not happen when running in serial.; In CMultiGridIntegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362
https://github.com/su2code/SU2/pull/1362:378,Availability,fault,fault,378,"FULLMG_CYCLE produces segmentation faults in different ways:. 1. When using the SST turbulent solver; 2. When running in parallel (mpirun/mpiexec). This PR tries to fix these segmentation faults. ## Proposed Changes; **First issue**; In CTurbSSTSolver::CTurbSSTSolver() we do not initialize the residual nor the solution if we are using a FULLMG_CYCLE, producing a segmentation fault. I have included a line of code to consider the FULLMG_CYCLE scenario. **Second issue**; This issue is not related to mpi _per se_ but to domain partitioning.; In CMultiGridGeometry::CMultiGridGeometry() is computed the ratio between the number of points in the finest grid and a given coarse grid level. If this ratio is below 2.5 (I do not know why do we make this evaluation neither the reason why exactly 2.5) a multigrid level is removed (without warning the user!?), see lines 629-632. For a few cases that I have tested, when running in parallel certain grid levels have a ratio below 2.5 hence are removed. This does not happen when running in serial.; In CMultiGridIntegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362
https://github.com/su2code/SU2/pull/1362:1526,Availability,fault,fault,1526,"the FULLMG_CYCLE scenario. **Second issue**; This issue is not related to mpi _per se_ but to domain partitioning.; In CMultiGridGeometry::CMultiGridGeometry() is computed the ratio between the number of points in the finest grid and a given coarse grid level. If this ratio is below 2.5 (I do not know why do we make this evaluation neither the reason why exactly 2.5) a multigrid level is removed (without warning the user!?), see lines 629-632. For a few cases that I have tested, when running in parallel certain grid levels have a ratio below 2.5 hence are removed. This does not happen when running in serial.; In CMultiGridIntegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these fi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362
https://github.com/su2code/SU2/pull/1362:2115,Availability,fault,fault,2115,"tegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed. ## PR Checklist; - [ ] I am submitting my",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362
https://github.com/su2code/SU2/pull/1362:2822,Deployability,update,updated,2822,"lve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362
https://github.com/su2code/SU2/pull/1362:3445,Deployability,update,updated,3445,"lve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362
https://github.com/su2code/SU2/pull/1362:2033,Integrability,depend,depending,2033,"tegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed. ## PR Checklist; - [ ] I am submitting my",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362
https://github.com/su2code/SU2/pull/1362:1313,Modifiability,config,config,1313,"do not initialize the residual nor the solution if we are using a FULLMG_CYCLE, producing a segmentation fault. I have included a line of code to consider the FULLMG_CYCLE scenario. **Second issue**; This issue is not related to mpi _per se_ but to domain partitioning.; In CMultiGridGeometry::CMultiGridGeometry() is computed the ratio between the number of points in the finest grid and a given coarse grid level. If this ratio is below 2.5 (I do not know why do we make this evaluation neither the reason why exactly 2.5) a multigrid level is removed (without warning the user!?), see lines 629-632. For a few cases that I have tested, when running in parallel certain grid levels have a ratio below 2.5 hence are removed. This does not happen when running in serial.; In CMultiGridIntegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Force",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362
https://github.com/su2code/SU2/pull/1362:1926,Modifiability,config,config,1926,"tain grid levels have a ratio below 2.5 hence are removed. This does not happen when running in serial.; In CMultiGridIntegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongate",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362
https://github.com/su2code/SU2/pull/1362:2576,Modifiability,variab,variable,2576,"lve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362
https://github.com/su2code/SU2/pull/1362:2646,Modifiability,variab,variable,2646,"lve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362
https://github.com/su2code/SU2/pull/1362:1390,Security,access,access,1390,"the FULLMG_CYCLE scenario. **Second issue**; This issue is not related to mpi _per se_ but to domain partitioning.; In CMultiGridGeometry::CMultiGridGeometry() is computed the ratio between the number of points in the finest grid and a given coarse grid level. If this ratio is below 2.5 (I do not know why do we make this evaluation neither the reason why exactly 2.5) a multigrid level is removed (without warning the user!?), see lines 629-632. For a few cases that I have tested, when running in parallel certain grid levels have a ratio below 2.5 hence are removed. This does not happen when running in serial.; In CMultiGridIntegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these fi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362
https://github.com/su2code/SU2/pull/1362:904,Testability,test,tested,904,"FULLMG_CYCLE produces segmentation faults in different ways:. 1. When using the SST turbulent solver; 2. When running in parallel (mpirun/mpiexec). This PR tries to fix these segmentation faults. ## Proposed Changes; **First issue**; In CTurbSSTSolver::CTurbSSTSolver() we do not initialize the residual nor the solution if we are using a FULLMG_CYCLE, producing a segmentation fault. I have included a line of code to consider the FULLMG_CYCLE scenario. **Second issue**; This issue is not related to mpi _per se_ but to domain partitioning.; In CMultiGridGeometry::CMultiGridGeometry() is computed the ratio between the number of points in the finest grid and a given coarse grid level. If this ratio is below 2.5 (I do not know why do we make this evaluation neither the reason why exactly 2.5) a multigrid level is removed (without warning the user!?), see lines 629-632. For a few cases that I have tested, when running in parallel certain grid levels have a ratio below 2.5 hence are removed. This does not happen when running in serial.; In CMultiGridIntegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362
https://github.com/su2code/SU2/pull/1362:3372,Testability,test,test,3372,"lve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362
https://github.com/su2code/SU2/pull/1362:3243,Usability,simpl,simply,3243,"lve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362
https://github.com/su2code/SU2/pull/1363:638,Deployability,update,updated,638,"## Proposed Changes; Sorry for the separate PR... we are working to include more solid solvers that can be used with the interface. This PR introduces few modifications that are required to include other solvers. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1363
https://github.com/su2code/SU2/pull/1363:121,Integrability,interface,interface,121,"## Proposed Changes; Sorry for the separate PR... we are working to include more solid solvers that can be used with the interface. This PR introduces few modifications that are required to include other solvers. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1363
https://github.com/su2code/SU2/pull/1363:565,Testability,test,test,565,"## Proposed Changes; Sorry for the separate PR... we are working to include more solid solvers that can be used with the interface. This PR introduces few modifications that are required to include other solvers. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1363
https://github.com/su2code/SU2/pull/1363:436,Usability,simpl,simply,436,"## Proposed Changes; Sorry for the separate PR... we are working to include more solid solvers that can be used with the interface. This PR introduces few modifications that are required to include other solvers. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1363
https://github.com/su2code/SU2/issues/1364:308,Modifiability,config,config,308,"_Originally posted by @suargi in https://github.com/su2code/SU2/issues/1066#issuecomment-906376697_. Currently each variation/correction model has its unique name identification in SU2. In order to simultaneously combine multiple correction models to a given turbulence model I suggest the following:; - The config file option KIND_TURB_MODEL should specify only which turbulence model to use, i.e. SA or SST.; - Introduce an additional config file field TURB_MODEL_CORRECTIONS to indicate all variations/corrections to be considered. . Here an example,; % Specify turbulent model (NONE, SA, SST); KIND_TURB_MODEL= SA; % Turbulence model corrections (NONE, SA-EDW, SA-NOFT2, SA-COMP, SA-NEG, SA-QCR2000, SST-SUST); TURB_MODEL_CORRECTIONS= SA-EDW, SA-NEG. What do you think?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364
https://github.com/su2code/SU2/issues/1364:437,Modifiability,config,config,437,"_Originally posted by @suargi in https://github.com/su2code/SU2/issues/1066#issuecomment-906376697_. Currently each variation/correction model has its unique name identification in SU2. In order to simultaneously combine multiple correction models to a given turbulence model I suggest the following:; - The config file option KIND_TURB_MODEL should specify only which turbulence model to use, i.e. SA or SST.; - Introduce an additional config file field TURB_MODEL_CORRECTIONS to indicate all variations/corrections to be considered. . Here an example,; % Specify turbulent model (NONE, SA, SST); KIND_TURB_MODEL= SA; % Turbulence model corrections (NONE, SA-EDW, SA-NOFT2, SA-COMP, SA-NEG, SA-QCR2000, SST-SUST); TURB_MODEL_CORRECTIONS= SA-EDW, SA-NEG. What do you think?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364
https://github.com/su2code/SU2/issues/1365:80,Energy Efficiency,energy,energy,80,"Dear all,. In my opinion, there is a bug in axisymmetric viscous source term of energy equation. ![AxiSymm_3](https://user-images.githubusercontent.com/74228020/131637195-699fc230-e499-4b32-80a4-d309fa6adb01.png); From the equation D-55 of reference in PR#1192 , the energy equation should be ; ```; ...; +v*TWO3*(2*PrimVar_Grad_i[2][1]-PrimVar_Grad_i[1][0]-v*yinv)); ...; ```. below is current code in `void CSourceAxisymmetric_Flow::ResidualDiffusion()` ; ```; residual[3] -= Volume*(yinv*(total_viscosity_i*(u*(PrimVar_Grad_i[2][0]+PrimVar_Grad_i[1][1]); +v*TWO3*(2*PrimVar_Grad_i[1][1]-PrimVar_Grad_i[1][0]; -v*yinv+U_i[0]*turb_ke_i)); +total_conductivity_i*PrimVar_Grad_i[0][1]); -TWO3*(AuxVar_Grad_i[1][1]+AuxVar_Grad_i[2][0]));; ```. I appreciate if someone let me know correct thing if I miss something.; Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1365
https://github.com/su2code/SU2/issues/1365:267,Energy Efficiency,energy,energy,267,"Dear all,. In my opinion, there is a bug in axisymmetric viscous source term of energy equation. ![AxiSymm_3](https://user-images.githubusercontent.com/74228020/131637195-699fc230-e499-4b32-80a4-d309fa6adb01.png); From the equation D-55 of reference in PR#1192 , the energy equation should be ; ```; ...; +v*TWO3*(2*PrimVar_Grad_i[2][1]-PrimVar_Grad_i[1][0]-v*yinv)); ...; ```. below is current code in `void CSourceAxisymmetric_Flow::ResidualDiffusion()` ; ```; residual[3] -= Volume*(yinv*(total_viscosity_i*(u*(PrimVar_Grad_i[2][0]+PrimVar_Grad_i[1][1]); +v*TWO3*(2*PrimVar_Grad_i[1][1]-PrimVar_Grad_i[1][0]; -v*yinv+U_i[0]*turb_ke_i)); +total_conductivity_i*PrimVar_Grad_i[0][1]); -TWO3*(AuxVar_Grad_i[1][1]+AuxVar_Grad_i[2][0]));; ```. I appreciate if someone let me know correct thing if I miss something.; Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1365
https://github.com/su2code/SU2/issues/1368:37,Availability,error,error,37,"Hello to everyone. . I found out the error while cloning the SU2 repository on Windows. The problem is related to **OpDiLib** module, in which the 'aux' directory exists. The '_aux_' is a reserved name in Windows and cannot be used in file or catalog names. ; I realize that **OpDiLib** is an external module and removing/renaming '_aux_' directory (which actually prevents successful cloning on Windows) is not an option but there are probably other ways to fix it. Best wishes. - OS: [Windows Server 2016]; - C++ compiler and version: [Mingw-w64 8.1.0]; - MPI implementation and version: [Microsoft MPI]; - SU2 Version: [7.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1368
https://github.com/su2code/SU2/pull/1369:29,Deployability,update,update,29,"## Proposed Changes; OpDiLib update.; . ## Related Work; Fixes #1368. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1369
https://github.com/su2code/SU2/pull/1369:735,Deployability,update,updated,735,"## Proposed Changes; OpDiLib update.; . ## Related Work; Fixes #1368. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1369
https://github.com/su2code/SU2/pull/1369:662,Testability,test,test,662,"## Proposed Changes; OpDiLib update.; . ## Related Work; Fixes #1368. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1369
https://github.com/su2code/SU2/pull/1369:242,Usability,guid,guide,242,"## Proposed Changes; OpDiLib update.; . ## Related Work; Fixes #1368. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1369
https://github.com/su2code/SU2/pull/1369:533,Usability,simpl,simply,533,"## Proposed Changes; OpDiLib update.; . ## Related Work; Fixes #1368. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1369
https://github.com/su2code/SU2/pull/1370:809,Deployability,update,updated,809,"## Proposed Changes; This simply adds a quick calculation so the proper value of Reynolds number is displayed when INIT_OPTION=TD_CONDITIONS. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1370
https://github.com/su2code/SU2/pull/1370:736,Testability,test,test,736,"## Proposed Changes; This simply adds a quick calculation so the proper value of Reynolds number is displayed when INIT_OPTION=TD_CONDITIONS. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1370
https://github.com/su2code/SU2/pull/1370:26,Usability,simpl,simply,26,"## Proposed Changes; This simply adds a quick calculation so the proper value of Reynolds number is displayed when INIT_OPTION=TD_CONDITIONS. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1370
https://github.com/su2code/SU2/pull/1370:316,Usability,guid,guide,316,"## Proposed Changes; This simply adds a quick calculation so the proper value of Reynolds number is displayed when INIT_OPTION=TD_CONDITIONS. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1370
https://github.com/su2code/SU2/pull/1370:607,Usability,simpl,simply,607,"## Proposed Changes; This simply adds a quick calculation so the proper value of Reynolds number is displayed when INIT_OPTION=TD_CONDITIONS. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1370
https://github.com/su2code/SU2/pull/1371:1253,Deployability,update,updated,1253,"Hi all,. lately I was fixing restarts. Making sure the adjoint also has a correct primal restart is somewhat annoying due to the way the residuals are printed to screen. I want to change that to look like a normal screen output of all residuals. Here the old variant on top and the new below (field names need to be adapted to usual screen output); ![image](https://user-images.githubusercontent.com/31306376/133253618-e20b6be0-fd29-4c03-96b5-a70f84f06523.png). The code as of today only changes this for single zone and does not use the usual output routines (and is a bit hacky). I want to add multizone and use the output routines instead of this handwritten PrintDirectResidual routine. I'll look into both. Let me know if there are reasons against this or any other comments. ## Related Work; The printing tool box of Tim. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1371
https://github.com/su2code/SU2/pull/1371:316,Energy Efficiency,adapt,adapted,316,"Hi all,. lately I was fixing restarts. Making sure the adjoint also has a correct primal restart is somewhat annoying due to the way the residuals are printed to screen. I want to change that to look like a normal screen output of all residuals. Here the old variant on top and the new below (field names need to be adapted to usual screen output); ![image](https://user-images.githubusercontent.com/31306376/133253618-e20b6be0-fd29-4c03-96b5-a70f84f06523.png). The code as of today only changes this for single zone and does not use the usual output routines (and is a bit hacky). I want to add multizone and use the output routines instead of this handwritten PrintDirectResidual routine. I'll look into both. Let me know if there are reasons against this or any other comments. ## Related Work; The printing tool box of Tim. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1371
https://github.com/su2code/SU2/pull/1371:551,Integrability,rout,routines,551,"Hi all,. lately I was fixing restarts. Making sure the adjoint also has a correct primal restart is somewhat annoying due to the way the residuals are printed to screen. I want to change that to look like a normal screen output of all residuals. Here the old variant on top and the new below (field names need to be adapted to usual screen output); ![image](https://user-images.githubusercontent.com/31306376/133253618-e20b6be0-fd29-4c03-96b5-a70f84f06523.png). The code as of today only changes this for single zone and does not use the usual output routines (and is a bit hacky). I want to add multizone and use the output routines instead of this handwritten PrintDirectResidual routine. I'll look into both. Let me know if there are reasons against this or any other comments. ## Related Work; The printing tool box of Tim. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1371
https://github.com/su2code/SU2/pull/1371:625,Integrability,rout,routines,625,"Hi all,. lately I was fixing restarts. Making sure the adjoint also has a correct primal restart is somewhat annoying due to the way the residuals are printed to screen. I want to change that to look like a normal screen output of all residuals. Here the old variant on top and the new below (field names need to be adapted to usual screen output); ![image](https://user-images.githubusercontent.com/31306376/133253618-e20b6be0-fd29-4c03-96b5-a70f84f06523.png). The code as of today only changes this for single zone and does not use the usual output routines (and is a bit hacky). I want to add multizone and use the output routines instead of this handwritten PrintDirectResidual routine. I'll look into both. Let me know if there are reasons against this or any other comments. ## Related Work; The printing tool box of Tim. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1371
https://github.com/su2code/SU2/pull/1371:682,Integrability,rout,routine,682,"Hi all,. lately I was fixing restarts. Making sure the adjoint also has a correct primal restart is somewhat annoying due to the way the residuals are printed to screen. I want to change that to look like a normal screen output of all residuals. Here the old variant on top and the new below (field names need to be adapted to usual screen output); ![image](https://user-images.githubusercontent.com/31306376/133253618-e20b6be0-fd29-4c03-96b5-a70f84f06523.png). The code as of today only changes this for single zone and does not use the usual output routines (and is a bit hacky). I want to add multizone and use the output routines instead of this handwritten PrintDirectResidual routine. I'll look into both. Let me know if there are reasons against this or any other comments. ## Related Work; The printing tool box of Tim. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1371
https://github.com/su2code/SU2/pull/1371:316,Modifiability,adapt,adapted,316,"Hi all,. lately I was fixing restarts. Making sure the adjoint also has a correct primal restart is somewhat annoying due to the way the residuals are printed to screen. I want to change that to look like a normal screen output of all residuals. Here the old variant on top and the new below (field names need to be adapted to usual screen output); ![image](https://user-images.githubusercontent.com/31306376/133253618-e20b6be0-fd29-4c03-96b5-a70f84f06523.png). The code as of today only changes this for single zone and does not use the usual output routines (and is a bit hacky). I want to add multizone and use the output routines instead of this handwritten PrintDirectResidual routine. I'll look into both. Let me know if there are reasons against this or any other comments. ## Related Work; The printing tool box of Tim. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1371
https://github.com/su2code/SU2/pull/1371:1180,Testability,test,test,1180,"Hi all,. lately I was fixing restarts. Making sure the adjoint also has a correct primal restart is somewhat annoying due to the way the residuals are printed to screen. I want to change that to look like a normal screen output of all residuals. Here the old variant on top and the new below (field names need to be adapted to usual screen output); ![image](https://user-images.githubusercontent.com/31306376/133253618-e20b6be0-fd29-4c03-96b5-a70f84f06523.png). The code as of today only changes this for single zone and does not use the usual output routines (and is a bit hacky). I want to add multizone and use the output routines instead of this handwritten PrintDirectResidual routine. I'll look into both. Let me know if there are reasons against this or any other comments. ## Related Work; The printing tool box of Tim. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1371
https://github.com/su2code/SU2/pull/1371:1051,Usability,simpl,simply,1051,"Hi all,. lately I was fixing restarts. Making sure the adjoint also has a correct primal restart is somewhat annoying due to the way the residuals are printed to screen. I want to change that to look like a normal screen output of all residuals. Here the old variant on top and the new below (field names need to be adapted to usual screen output); ![image](https://user-images.githubusercontent.com/31306376/133253618-e20b6be0-fd29-4c03-96b5-a70f84f06523.png). The code as of today only changes this for single zone and does not use the usual output routines (and is a bit hacky). I want to add multizone and use the output routines instead of this handwritten PrintDirectResidual routine. I'll look into both. Let me know if there are reasons against this or any other comments. ## Related Work; The printing tool box of Tim. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1371
https://github.com/su2code/SU2/pull/1372:387,Deployability,update,updated,387,"## Proposed Changes; In trying to understand the algorithm a little better I also tried to improve the documentation and clean up some redundancy. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1372
https://github.com/su2code/SU2/pull/1372:135,Safety,redund,redundancy,135,"## Proposed Changes; In trying to understand the algorithm a little better I also tried to improve the documentation and clean up some redundancy. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1372
https://github.com/su2code/SU2/pull/1372:314,Testability,test,test,314,"## Proposed Changes; In trying to understand the algorithm a little better I also tried to improve the documentation and clean up some redundancy. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1372
https://github.com/su2code/SU2/issues/1373:1256,Energy Efficiency,energy,energy,1256,"Dear all,. I simulated Sym_plane_testcases from #657 ; When I simulate axisymmetric probem (AXISYMMETRIC =YES), I found odd value at symmetric axis. This problem doesn't appear when I turn off AXISYMMETRIC option. ![Cp_comparison](https://user-images.githubusercontent.com/74228020/133757118-b17e8772-9919-4cb1-b1f2-8cf18e4a48ac.png); ========================================================================; ========================================================================; .; . ![Density_comparison](https://user-images.githubusercontent.com/74228020/133757136-63ae13a2-7c3d-478f-9a81-7aaf001c6dd2.png); ========================================================================; ========================================================================; .; . ![Mach_comparison](https://user-images.githubusercontent.com/74228020/133757154-9ed10855-3070-4210-b5b5-e2e3f2fad273.png); ========================================================================; ========================================================================; .; . ![Temp_comparison](https://user-images.githubusercontent.com/74228020/133757157-18646978-20e6-49e7-a44f-ac45151b3901.png). It seems that temperature, Mach, and momentum have no problem, but density, pressure, and energy are strange at the symmetric axis...; From #657 , I think it is flux related problem. I attached version 7 configure file I used.; [Sym_BC_test.zip](https://github.com/su2code/SU2/files/7184390/Sym_BC_test.zip). I'm also trying to simulate my axisymmetric problem and this problem appears too in my case.; ![Base_Axis](https://user-images.githubusercontent.com/74228020/133761583-b3ea8fb4-876a-422c-a957-4a0ce1cc9783.png); Symmetric BC is x-axis. How I fix this problem? Could anyone help me?. Thank you. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - SU2 Version: v7.1.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373
https://github.com/su2code/SU2/issues/1373:1370,Modifiability,config,configure,1370,"Dear all,. I simulated Sym_plane_testcases from #657 ; When I simulate axisymmetric probem (AXISYMMETRIC =YES), I found odd value at symmetric axis. This problem doesn't appear when I turn off AXISYMMETRIC option. ![Cp_comparison](https://user-images.githubusercontent.com/74228020/133757118-b17e8772-9919-4cb1-b1f2-8cf18e4a48ac.png); ========================================================================; ========================================================================; .; . ![Density_comparison](https://user-images.githubusercontent.com/74228020/133757136-63ae13a2-7c3d-478f-9a81-7aaf001c6dd2.png); ========================================================================; ========================================================================; .; . ![Mach_comparison](https://user-images.githubusercontent.com/74228020/133757154-9ed10855-3070-4210-b5b5-e2e3f2fad273.png); ========================================================================; ========================================================================; .; . ![Temp_comparison](https://user-images.githubusercontent.com/74228020/133757157-18646978-20e6-49e7-a44f-ac45151b3901.png). It seems that temperature, Mach, and momentum have no problem, but density, pressure, and energy are strange at the symmetric axis...; From #657 , I think it is flux related problem. I attached version 7 configure file I used.; [Sym_BC_test.zip](https://github.com/su2code/SU2/files/7184390/Sym_BC_test.zip). I'm also trying to simulate my axisymmetric problem and this problem appears too in my case.; ![Base_Axis](https://user-images.githubusercontent.com/74228020/133761583-b3ea8fb4-876a-422c-a957-4a0ce1cc9783.png); Symmetric BC is x-axis. How I fix this problem? Could anyone help me?. Thank you. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - SU2 Version: v7.1.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373
https://github.com/su2code/SU2/pull/1374:754,Deployability,update,updated,754,"## Proposed Changes; Register TauWall as preaccumulation input. ## Related Work; #1204 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1374
https://github.com/su2code/SU2/pull/1374:681,Testability,test,test,681,"## Proposed Changes; Register TauWall as preaccumulation input. ## Related Work; #1204 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1374
https://github.com/su2code/SU2/pull/1374:261,Usability,guid,guide,261,"## Proposed Changes; Register TauWall as preaccumulation input. ## Related Work; #1204 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1374
https://github.com/su2code/SU2/pull/1374:552,Usability,simpl,simply,552,"## Proposed Changes; Register TauWall as preaccumulation input. ## Related Work; #1204 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1374
https://github.com/su2code/SU2/pull/1375:808,Deployability,update,updated,808,"## Proposed Changes; ```; CVariable -> CFlowVariable -> CEulerVariable -> CNSVariable; ```; **Likewise for incompressible and NEMO.**. **CFlowVariable** stores, allocates, and gives access to, primitives, their gradients and limiters, and a few other odd things.; For now this is just cleanup but it can be used to give non-virtual access to these flow variables to other solvers.; For example, the scalar solver #1330 can static_cast or dynamic_cast the nodes of the flow solver to access some quantities more efficiently.; I'll leave that for after #1330 is merged. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375
https://github.com/su2code/SU2/pull/1375:161,Energy Efficiency,allocate,allocates,161,"## Proposed Changes; ```; CVariable -> CFlowVariable -> CEulerVariable -> CNSVariable; ```; **Likewise for incompressible and NEMO.**. **CFlowVariable** stores, allocates, and gives access to, primitives, their gradients and limiters, and a few other odd things.; For now this is just cleanup but it can be used to give non-virtual access to these flow variables to other solvers.; For example, the scalar solver #1330 can static_cast or dynamic_cast the nodes of the flow solver to access some quantities more efficiently.; I'll leave that for after #1330 is merged. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375
https://github.com/su2code/SU2/pull/1375:511,Energy Efficiency,efficient,efficiently,511,"## Proposed Changes; ```; CVariable -> CFlowVariable -> CEulerVariable -> CNSVariable; ```; **Likewise for incompressible and NEMO.**. **CFlowVariable** stores, allocates, and gives access to, primitives, their gradients and limiters, and a few other odd things.; For now this is just cleanup but it can be used to give non-virtual access to these flow variables to other solvers.; For example, the scalar solver #1330 can static_cast or dynamic_cast the nodes of the flow solver to access some quantities more efficiently.; I'll leave that for after #1330 is merged. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375
https://github.com/su2code/SU2/pull/1375:353,Modifiability,variab,variables,353,"## Proposed Changes; ```; CVariable -> CFlowVariable -> CEulerVariable -> CNSVariable; ```; **Likewise for incompressible and NEMO.**. **CFlowVariable** stores, allocates, and gives access to, primitives, their gradients and limiters, and a few other odd things.; For now this is just cleanup but it can be used to give non-virtual access to these flow variables to other solvers.; For example, the scalar solver #1330 can static_cast or dynamic_cast the nodes of the flow solver to access some quantities more efficiently.; I'll leave that for after #1330 is merged. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375
https://github.com/su2code/SU2/pull/1375:182,Security,access,access,182,"## Proposed Changes; ```; CVariable -> CFlowVariable -> CEulerVariable -> CNSVariable; ```; **Likewise for incompressible and NEMO.**. **CFlowVariable** stores, allocates, and gives access to, primitives, their gradients and limiters, and a few other odd things.; For now this is just cleanup but it can be used to give non-virtual access to these flow variables to other solvers.; For example, the scalar solver #1330 can static_cast or dynamic_cast the nodes of the flow solver to access some quantities more efficiently.; I'll leave that for after #1330 is merged. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375
https://github.com/su2code/SU2/pull/1375:332,Security,access,access,332,"## Proposed Changes; ```; CVariable -> CFlowVariable -> CEulerVariable -> CNSVariable; ```; **Likewise for incompressible and NEMO.**. **CFlowVariable** stores, allocates, and gives access to, primitives, their gradients and limiters, and a few other odd things.; For now this is just cleanup but it can be used to give non-virtual access to these flow variables to other solvers.; For example, the scalar solver #1330 can static_cast or dynamic_cast the nodes of the flow solver to access some quantities more efficiently.; I'll leave that for after #1330 is merged. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375
https://github.com/su2code/SU2/pull/1375:483,Security,access,access,483,"## Proposed Changes; ```; CVariable -> CFlowVariable -> CEulerVariable -> CNSVariable; ```; **Likewise for incompressible and NEMO.**. **CFlowVariable** stores, allocates, and gives access to, primitives, their gradients and limiters, and a few other odd things.; For now this is just cleanup but it can be used to give non-virtual access to these flow variables to other solvers.; For example, the scalar solver #1330 can static_cast or dynamic_cast the nodes of the flow solver to access some quantities more efficiently.; I'll leave that for after #1330 is merged. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375
https://github.com/su2code/SU2/pull/1375:735,Testability,test,test,735,"## Proposed Changes; ```; CVariable -> CFlowVariable -> CEulerVariable -> CNSVariable; ```; **Likewise for incompressible and NEMO.**. **CFlowVariable** stores, allocates, and gives access to, primitives, their gradients and limiters, and a few other odd things.; For now this is just cleanup but it can be used to give non-virtual access to these flow variables to other solvers.; For example, the scalar solver #1330 can static_cast or dynamic_cast the nodes of the flow solver to access some quantities more efficiently.; I'll leave that for after #1330 is merged. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375
https://github.com/su2code/SU2/issues/1376:398,Deployability,update,update,398,"Hi, . I am getting a strange build issue when I enable pywrapper. See below. . I build my meson with: . `python meson.py build --reconfigure -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=""C:\bin""`. `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; The Meson build system; Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Valu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:1613,Deployability,install,install,1613,"Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:1681,Deployability,install,install,1681," dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Bui",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:1812,Deployability,Release,Release,1812,"on: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 fi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:1885,Deployability,Configurat,Configuration,1885,"he host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SH",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:2277,Deployability,update,update,2277,"y name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:2369,Deployability,configurat,configuration,2369,"d pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:2615,Deployability,install,install,2615,"am install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:2639,Deployability,install,install,2639,"am install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:2760,Deployability,install,install,2760,"------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\D",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:2951,Deployability,update,update,2951,"--. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:3118,Deployability,Install,Installing,3118," OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:3168,Deployability,Install,Installing,3168,"t: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:3221,Deployability,Install,Installing,3221,"OME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_f",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:3282,Deployability,Install,Installing,3282," $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Document",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:3332,Deployability,Install,Installing,3332,"N. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:3385,Deployability,Install,Installing,3385,se lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optim,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:3435,Deployability,Install,Installing,3435,bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Dani,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:3485,Deployability,Install,Installing,3485,SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:3535,Deployability,Install,Installing,3535,=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:3585,Deployability,Install,Installing,3585,nie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:3637,Deployability,Install,Installing,3637,l SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:3689,Deployability,Install,Installing,3689,e-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:3743,Deployability,Install,Installing,3743, successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Dani,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:3827,Deployability,Install,Installing,3827,Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:3912,Deployability,Install,Installing,3912,'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Da,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:3996,Deployability,Install,Installing,3996,the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Dani,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:4078,Deployability,Install,Installing,4078, this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:4164,Deployability,Install,Installing,4164,SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\S,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:4254,Deployability,Install,Installing,4254,n\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:4333,Deployability,Install,Installing,4333,2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Dani,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:4417,Deployability,Install,Installing,4417,alling SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:4497,Deployability,Install,Installing,4497,o C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Ins,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:4581,Deployability,Install,Installing,4581,/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io;,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:4660,Deployability,Install,Installing,4660,bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bi,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:4744,Deployability,Install,Installing,4744,e\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\b,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:4826,Deployability,Install,Installing,4826,\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:4914,Deployability,Install,Installing,4914,e\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py t,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:4995,Deployability,Install,Installing,4995,rs\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/st,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:5068,Deployability,Install,Installing,5068,C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:5150,Deployability,Install,Installing,5150,ling C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:5240,Deployability,Install,Installing,5240,lling C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:5333,Deployability,Install,Installing,5333,\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:5426,Deployability,Install,Installing,5426,cuments\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:5518,Deployability,Install,Installing,5518,2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:5604,Deployability,Install,Installing,5604,Y\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\S,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:5698,Deployability,Install,Installing,5698,multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\S,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:5782,Deployability,Install,Installing,5782,djoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:5870,Deployability,Install,Installing,5870,iation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:5958,Deployability,Install,Installing,5958,n.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:6043,Deployability,Install,Installing,6043,in\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:6128,Deployability,Install,Installing,6128,; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\S,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:6218,Deployability,Install,Installing,6218,l; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Document,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:6306,Deployability,Install,Installing,6306,2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Docume,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:6395,Deployability,Install,Installing,6395,/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Document,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:6488,Deployability,Install,Installing,6488,/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\D,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:6578,Deployability,Install,Installing,6578,SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:6667,Deployability,Install,Installing,6667,\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:6755,Deployability,Install,Installing,6755,/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Da,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:6843,Deployability,Install,Installing,6843,SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\U,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:6934,Deployability,Install,Installing,6934,U2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installi,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:7021,Deployability,Install,Installing,7021,o; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installi,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:7111,Deployability,Install,Installing,7111,talling C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; In,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:7203,Deployability,Install,Installing,7203,alling C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Inst,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:7293,Deployability,Install,Installing,7293,lling C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Ins,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:7382,Deployability,Install,Installing,7382,g C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Inst,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:7480,Deployability,Install,Installing,7480,C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Insta,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:7572,Deployability,Install,Installing,7572,C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tool,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:7660,Deployability,Install,Installing,7660,C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FS,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:7751,Deployability,Install,Installing,7751,rs\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:7848,Deployability,Install,Installing,7848,Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\b,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:7944,Deployability,Install,Installing,7944,ocuments\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:8032,Deployability,Install,Installing,8032,nts\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:8129,Deployability,Install,Installing,8129,\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\User,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:8218,Deployability,Install,Installing,8218,"ts\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\User",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:8308,Deployability,Install,Installing,8308,"s\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:8400,Deployability,Install,Installing,8400,"U2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.py"" ""install"" ""--no-rebuild""; ninja: build stopped: subcommand failed.`. I think it might be d",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:8494,Deployability,Install,Installing,8494,"uments\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.py"" ""install"" ""--no-rebuild""; ninja: build stopped: subcommand failed.`. I think it might be due to the fact that I am working in an Anaconda environment. But maybe not. Any thoughts?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:8592,Deployability,Install,Installing,8592,"uments\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.py"" ""install"" ""--no-rebuild""; ninja: build stopped: subcommand failed.`. I think it might be due to the fact that I am working in an Anaconda environment. But maybe not. Any thoughts?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:8688,Deployability,Install,Installing,8688,"uments\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.py"" ""install"" ""--no-rebuild""; ninja: build stopped: subcommand failed.`. I think it might be due to the fact that I am working in an Anaconda environment. But maybe not. Any thoughts?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:8786,Deployability,Install,Installing,8786,"uments\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.py"" ""install"" ""--no-rebuild""; ninja: build stopped: subcommand failed.`. I think it might be due to the fact that I am working in an Anaconda environment. But maybe not. Any thoughts?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:8904,Deployability,install,install,8904,"uments\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.py"" ""install"" ""--no-rebuild""; ninja: build stopped: subcommand failed.`. I think it might be due to the fact that I am working in an Anaconda environment. But maybe not. Any thoughts?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:8971,Deployability,install,install,8971,"uments\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.py"" ""install"" ""--no-rebuild""; ninja: build stopped: subcommand failed.`. I think it might be due to the fact that I am working in an Anaconda environment. But maybe not. Any thoughts?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:9061,Deployability,install,install,9061,"uments\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.py"" ""install"" ""--no-rebuild""; ninja: build stopped: subcommand failed.`. I think it might be due to the fact that I am working in an Anaconda environment. But maybe not. Any thoughts?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:9128,Deployability,install,install,9128,"uments\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.py"" ""install"" ""--no-rebuild""; ninja: build stopped: subcommand failed.`. I think it might be due to the fact that I am working in an Anaconda environment. But maybe not. Any thoughts?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:9218,Deployability,install,install,9218,"uments\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.py"" ""install"" ""--no-rebuild""; ninja: build stopped: subcommand failed.`. I think it might be due to the fact that I am working in an Anaconda environment. But maybe not. Any thoughts?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:9331,Deployability,install,install,9331,"uments\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.py"" ""install"" ""--no-rebuild""; ninja: build stopped: subcommand failed.`. I think it might be due to the fact that I am working in an Anaconda environment. But maybe not. Any thoughts?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:1339,Integrability,depend,dependency,1339,"dule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; The Meson build system; Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:1432,Integrability,depend,dependency,1432,"dule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; The Meson build system; Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:1563,Integrability,Depend,Dependency,1563,"Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:1694,Integrability,Message,Message,1694,"on: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 fi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:2100,Integrability,Wrap,Wrapper,2100,"d.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:6898,Integrability,interface,interface,6898,SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\U,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:1262,Modifiability,config,config,1262,"dule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; The Meson build system; Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:1282,Modifiability,config,config,1282,"dule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; The Meson build system; Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:1301,Modifiability,config,config,1301,"dule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; The Meson build system; Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:1391,Modifiability,config,config-tool,1391,"dule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; The Meson build system; Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:1486,Modifiability,config,config-tool,1486,"dule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; The Meson build system; Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:1885,Modifiability,Config,Configuration,1885,"he host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SH",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:2261,Modifiability,variab,variables,2261,"y name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:2369,Modifiability,config,configuration,2369,"d pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1376:5572,Modifiability,config,config,5572,2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376
https://github.com/su2code/SU2/issues/1378:442,Availability,avail,available,442,"**Issue description**. Hi all, I am trying to run a rather large mesh computation with SU2. The mesh counts 170M cells. I managed to run it with the native SU2 mesh format with 480 cores but the preprocessing step took 90 minutes with a huge load on the file system impacting all the other users of the cluster. To reduce the load, I was thinking about using the CGNS mesh file format. However the preprocessing step fills all the RAM memory available and the job fails. All the setup being identical. . By reducing the number of cells, I am able to run with the CGNS file format. Is it a common behavior with the CGNS file format?. **Hardware and software :**; - OS: Linux Red Hat ELS 6.5; - Nodes: Intel Xeon Ivy bridge; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378
https://github.com/su2code/SU2/issues/1378:315,Energy Efficiency,reduce,reduce,315,"**Issue description**. Hi all, I am trying to run a rather large mesh computation with SU2. The mesh counts 170M cells. I managed to run it with the native SU2 mesh format with 480 cores but the preprocessing step took 90 minutes with a huge load on the file system impacting all the other users of the cluster. To reduce the load, I was thinking about using the CGNS mesh file format. However the preprocessing step fills all the RAM memory available and the job fails. All the setup being identical. . By reducing the number of cells, I am able to run with the CGNS file format. Is it a common behavior with the CGNS file format?. **Hardware and software :**; - OS: Linux Red Hat ELS 6.5; - Nodes: Intel Xeon Ivy bridge; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378
https://github.com/su2code/SU2/issues/1378:715,Integrability,bridg,bridge,715,"**Issue description**. Hi all, I am trying to run a rather large mesh computation with SU2. The mesh counts 170M cells. I managed to run it with the native SU2 mesh format with 480 cores but the preprocessing step took 90 minutes with a huge load on the file system impacting all the other users of the cluster. To reduce the load, I was thinking about using the CGNS mesh file format. However the preprocessing step fills all the RAM memory available and the job fails. All the setup being identical. . By reducing the number of cells, I am able to run with the CGNS file format. Is it a common behavior with the CGNS file format?. **Hardware and software :**; - OS: Linux Red Hat ELS 6.5; - Nodes: Intel Xeon Ivy bridge; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378
https://github.com/su2code/SU2/issues/1378:242,Performance,load,load,242,"**Issue description**. Hi all, I am trying to run a rather large mesh computation with SU2. The mesh counts 170M cells. I managed to run it with the native SU2 mesh format with 480 cores but the preprocessing step took 90 minutes with a huge load on the file system impacting all the other users of the cluster. To reduce the load, I was thinking about using the CGNS mesh file format. However the preprocessing step fills all the RAM memory available and the job fails. All the setup being identical. . By reducing the number of cells, I am able to run with the CGNS file format. Is it a common behavior with the CGNS file format?. **Hardware and software :**; - OS: Linux Red Hat ELS 6.5; - Nodes: Intel Xeon Ivy bridge; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378
https://github.com/su2code/SU2/issues/1378:326,Performance,load,load,326,"**Issue description**. Hi all, I am trying to run a rather large mesh computation with SU2. The mesh counts 170M cells. I managed to run it with the native SU2 mesh format with 480 cores but the preprocessing step took 90 minutes with a huge load on the file system impacting all the other users of the cluster. To reduce the load, I was thinking about using the CGNS mesh file format. However the preprocessing step fills all the RAM memory available and the job fails. All the setup being identical. . By reducing the number of cells, I am able to run with the CGNS file format. Is it a common behavior with the CGNS file format?. **Hardware and software :**; - OS: Linux Red Hat ELS 6.5; - Nodes: Intel Xeon Ivy bridge; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378
https://github.com/su2code/SU2/issues/1379:10457,Availability,error,error,10457,"urces/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lmsvcr140; collect2.exe: error: ld returned 1 exit status; error: command 'C:\\Program Files\\mingw-w64\\x86_64-8.1.0-posix-seh-rt_v6-rev0\\mingw64\\bin\\gcc.exe' failed with exit status 1`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:10491,Availability,error,error,10491,"urces/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lmsvcr140; collect2.exe: error: ld returned 1 exit status; error: command 'C:\\Program Files\\mingw-w64\\x86_64-8.1.0-posix-seh-rt_v6-rev0\\mingw64\\bin\\gcc.exe' failed with exit status 1`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:635,Deployability,Release,Release,635,"Upfront: I am running a mingw-64 terminal on windows as suggested in the SUAVE build instructions. . From another thread, it was suggested to go into SU2\externals\AMGIO\su2io and try to manually build the _amgio; When I run the command 'python setup.py build_ext -c mingw32' I get the following output. . `running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; C:\Softwares\swigwin-4.0.2\swig.exe -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; creating build; creating build\temp.win-amd64-3.8; creating build\temp.win-amd64-3.8\Release; creating build\temp.win-amd64-3.8\Release\sources; creating build\temp.win-amd64-3.8\Release\sources\python3.7; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c: In function 'py_WriteMeshAndSol':; ./sources/Python3.7/amgio_py.c:628:28: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:628:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:624:28: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:624:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:614:26: warning: ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:678,Deployability,Release,Release,678,"Upfront: I am running a mingw-64 terminal on windows as suggested in the SUAVE build instructions. . From another thread, it was suggested to go into SU2\externals\AMGIO\su2io and try to manually build the _amgio; When I run the command 'python setup.py build_ext -c mingw32' I get the following output. . `running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; C:\Softwares\swigwin-4.0.2\swig.exe -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; creating build; creating build\temp.win-amd64-3.8; creating build\temp.win-amd64-3.8\Release; creating build\temp.win-amd64-3.8\Release\sources; creating build\temp.win-amd64-3.8\Release\sources\python3.7; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c: In function 'py_WriteMeshAndSol':; ./sources/Python3.7/amgio_py.c:628:28: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:628:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:624:28: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:624:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:614:26: warning: ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:729,Deployability,Release,Release,729,"Upfront: I am running a mingw-64 terminal on windows as suggested in the SUAVE build instructions. . From another thread, it was suggested to go into SU2\externals\AMGIO\su2io and try to manually build the _amgio; When I run the command 'python setup.py build_ext -c mingw32' I get the following output. . `running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; C:\Softwares\swigwin-4.0.2\swig.exe -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; creating build; creating build\temp.win-amd64-3.8; creating build\temp.win-amd64-3.8\Release; creating build\temp.win-amd64-3.8\Release\sources; creating build\temp.win-amd64-3.8\Release\sources\python3.7; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c: In function 'py_WriteMeshAndSol':; ./sources/Python3.7/amgio_py.c:628:28: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:628:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:624:28: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:624:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:614:26: warning: ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:1023,Deployability,Release,Release,1023,"ngw-64 terminal on windows as suggested in the SUAVE build instructions. . From another thread, it was suggested to go into SU2\externals\AMGIO\su2io and try to manually build the _amgio; When I run the command 'python setup.py build_ext -c mingw32' I get the following output. . `running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; C:\Softwares\swigwin-4.0.2\swig.exe -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; creating build; creating build\temp.win-amd64-3.8; creating build\temp.win-amd64-3.8\Release; creating build\temp.win-amd64-3.8\Release\sources; creating build\temp.win-amd64-3.8\Release\sources\python3.7; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c: In function 'py_WriteMeshAndSol':; ./sources/Python3.7/amgio_py.c:628:28: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:628:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:624:28: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:624:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:614:26: warning: '.solb' directive writing ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:2606,Deployability,Release,Release,2606,"rning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:624:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:614:26: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~; ./sources/Python3.7/amgio_py.c:614:7: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:2959,Deployability,Release,Release,2959,"/Python3.7/amgio_py.c:614:26: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~; ./sources/Python3.7/amgio_py.c:614:7: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warn",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:3313,Deployability,Release,Release,3313,"~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:4790,Deployability,Release,Release,4790,"iable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/option.c: In function 'CheckOptions':; ./sources/Python3.7/option.c:46:32: warning: '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:5615,Deployability,Release,Release,5615,"ll -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/option.c: In function 'CheckOptions':; ./sources/Python3.7/option.c:46:32: warning: '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:5980,Deployability,Release,Release,5980,": '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -1;; ^~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFtoSU2Sol':; ./sources/Python3.7/convert.c:32:26: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:32:7: note: 'sprintf' output between 5 and 1028 bytes into a desti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:6344,Deployability,Release,Release,6344," C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -1;; ^~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFtoSU2Sol':; ./sources/Python3.7/convert.c:32:26: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:32:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c:28:26: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:28:7: note: 'sprintf' output betwe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:9326,Deployability,Release,Release,9326,"~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFSoltoMet':; ./sources/Python3.7/convert.c:114:22: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:9532,Deployability,Release,Release,9532,"nd 1024 [-Wformat-overflow=]; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lmsvcr140; collect2.exe: error: ld returned 1 exit status; error: command 'C:\\Program Files\\mingw-w64\",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:9596,Deployability,Release,Release,9596,">OutNam);; ^~~~~; ./sources/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lmsvcr140; collect2.exe: error: ld returned 1 exit status; error: command 'C:\\Program Files\\mingw-w64\\x86_64-8.1.0-posix-seh-rt_v6-rev0\\mingw64\\bin\\gcc.exe' faile",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:9656,Deployability,Release,Release,9656,"urces/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lmsvcr140; collect2.exe: error: ld returned 1 exit status; error: command 'C:\\Program Files\\mingw-w64\\x86_64-8.1.0-posix-seh-rt_v6-rev0\\mingw64\\bin\\gcc.exe' failed with exit status 1`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:9717,Deployability,Release,Release,9717,"urces/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lmsvcr140; collect2.exe: error: ld returned 1 exit status; error: command 'C:\\Program Files\\mingw-w64\\x86_64-8.1.0-posix-seh-rt_v6-rev0\\mingw64\\bin\\gcc.exe' failed with exit status 1`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:9778,Deployability,Release,Release,9778,"urces/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lmsvcr140; collect2.exe: error: ld returned 1 exit status; error: command 'C:\\Program Files\\mingw-w64\\x86_64-8.1.0-posix-seh-rt_v6-rev0\\mingw64\\bin\\gcc.exe' failed with exit status 1`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:9840,Deployability,Release,Release,9840,"urces/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lmsvcr140; collect2.exe: error: ld returned 1 exit status; error: command 'C:\\Program Files\\mingw-w64\\x86_64-8.1.0-posix-seh-rt_v6-rev0\\mingw64\\bin\\gcc.exe' failed with exit status 1`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:9904,Deployability,Release,Release,9904,"urces/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lmsvcr140; collect2.exe: error: ld returned 1 exit status; error: command 'C:\\Program Files\\mingw-w64\\x86_64-8.1.0-posix-seh-rt_v6-rev0\\mingw64\\bin\\gcc.exe' failed with exit status 1`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:9973,Deployability,Release,Release,9973,"urces/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lmsvcr140; collect2.exe: error: ld returned 1 exit status; error: command 'C:\\Program Files\\mingw-w64\\x86_64-8.1.0-posix-seh-rt_v6-rev0\\mingw64\\bin\\gcc.exe' failed with exit status 1`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:10036,Deployability,Release,Release,10036,"urces/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lmsvcr140; collect2.exe: error: ld returned 1 exit status; error: command 'C:\\Program Files\\mingw-w64\\x86_64-8.1.0-posix-seh-rt_v6-rev0\\mingw64\\bin\\gcc.exe' failed with exit status 1`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:1083,Modifiability,variab,variable,1083,"tructions. . From another thread, it was suggested to go into SU2\externals\AMGIO\su2io and try to manually build the _amgio; When I run the command 'python setup.py build_ext -c mingw32' I get the following output. . `running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; C:\Softwares\swigwin-4.0.2\swig.exe -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; creating build; creating build\temp.win-amd64-3.8; creating build\temp.win-amd64-3.8\Release; creating build\temp.win-amd64-3.8\Release\sources; creating build\temp.win-amd64-3.8\Release\sources\python3.7; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c: In function 'py_WriteMeshAndSol':; ./sources/Python3.7/amgio_py.c:628:28: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:628:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:624:28: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:624:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:614:26: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-ove",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:2662,Modifiability,variab,variable,2662,"1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:624:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:614:26: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~; ./sources/Python3.7/amgio_py.c:614:7: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:3016,Modifiability,variab,variable,3016," a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~; ./sources/Python3.7/amgio_py.c:614:7: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:3370,Modifiability,variab,variable,3370,"4-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified boun",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:3509,Modifiability,variab,variable,3509,"ython3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:3559,Modifiability,variab,variable,3559,"ython3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:3740,Modifiability,variab,variable,3740,"MS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Rele",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:3790,Modifiability,variab,variable,3790,"MS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Rele",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:4228,Modifiability,variab,variable,4228,"/sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/option.c: In function 'CheckOptions':; ./sources/Python3.7/option.c:46:32: warning: '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(m",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:4278,Modifiability,variab,variable,4278,"/sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/option.c: In function 'CheckOptions':; ./sources/Python3.7/option.c:46:32: warning: '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(m",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:4848,Modifiability,variab,variable,4848," res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/option.c: In function 'CheckOptions':; ./sources/Python3.7/option.c:46:32: warning: '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptool",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:5675,Modifiability,variab,variable,5675,"Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/option.c: In function 'CheckOptions':; ./sources/Python3.7/option.c:46:32: warning: '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -1;; ^~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFtoSU2Sol':; ./",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:6045,Modifiability,variab,variable,6045,"verflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -1;; ^~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFtoSU2Sol':; ./sources/Python3.7/convert.c:32:26: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:32:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:6403,Modifiability,variab,variable,6403,"\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -1;; ^~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFtoSU2Sol':; ./sources/Python3.7/convert.c:32:26: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:32:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c:28:26: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:28:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:6543,Modifiability,variab,variable,6543,"bmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -1;; ^~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFtoSU2Sol':; ./sources/Python3.7/convert.c:32:26: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:32:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c:28:26: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:28:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFWithBoundtoSU2Sol':; ./sources/Pytho",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1379:6595,Modifiability,variab,variable,6595,"bmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -1;; ^~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFtoSU2Sol':; ./sources/Python3.7/convert.c:32:26: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:32:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c:28:26: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:28:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFWithBoundtoSU2Sol':; ./sources/Pytho",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379
https://github.com/su2code/SU2/issues/1380:11,Availability,down,downloaded,11,"I recently downloaded and compiled the feature_adap branch of SU2. . After installing I attempted to run an adaptation case with pyamg. However my code errors out with, . 'File ""C:\bin\SU2\amginria\interface.py"", line 136, in call_pyamg; mesh_new = pyamg.adapt_mesh(mesh, remesh_options); AttributeError: module 'pyamg' has no attribute 'adapt_mesh''. Does the newest version of pyamg no longer have this method? If so, what is the fix?. Thanks; Daniel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1380
https://github.com/su2code/SU2/issues/1380:152,Availability,error,errors,152,"I recently downloaded and compiled the feature_adap branch of SU2. . After installing I attempted to run an adaptation case with pyamg. However my code errors out with, . 'File ""C:\bin\SU2\amginria\interface.py"", line 136, in call_pyamg; mesh_new = pyamg.adapt_mesh(mesh, remesh_options); AttributeError: module 'pyamg' has no attribute 'adapt_mesh''. Does the newest version of pyamg no longer have this method? If so, what is the fix?. Thanks; Daniel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1380
https://github.com/su2code/SU2/issues/1380:75,Deployability,install,installing,75,"I recently downloaded and compiled the feature_adap branch of SU2. . After installing I attempted to run an adaptation case with pyamg. However my code errors out with, . 'File ""C:\bin\SU2\amginria\interface.py"", line 136, in call_pyamg; mesh_new = pyamg.adapt_mesh(mesh, remesh_options); AttributeError: module 'pyamg' has no attribute 'adapt_mesh''. Does the newest version of pyamg no longer have this method? If so, what is the fix?. Thanks; Daniel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1380
https://github.com/su2code/SU2/issues/1380:108,Energy Efficiency,adapt,adaptation,108,"I recently downloaded and compiled the feature_adap branch of SU2. . After installing I attempted to run an adaptation case with pyamg. However my code errors out with, . 'File ""C:\bin\SU2\amginria\interface.py"", line 136, in call_pyamg; mesh_new = pyamg.adapt_mesh(mesh, remesh_options); AttributeError: module 'pyamg' has no attribute 'adapt_mesh''. Does the newest version of pyamg no longer have this method? If so, what is the fix?. Thanks; Daniel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1380
https://github.com/su2code/SU2/issues/1380:198,Integrability,interface,interface,198,"I recently downloaded and compiled the feature_adap branch of SU2. . After installing I attempted to run an adaptation case with pyamg. However my code errors out with, . 'File ""C:\bin\SU2\amginria\interface.py"", line 136, in call_pyamg; mesh_new = pyamg.adapt_mesh(mesh, remesh_options); AttributeError: module 'pyamg' has no attribute 'adapt_mesh''. Does the newest version of pyamg no longer have this method? If so, what is the fix?. Thanks; Daniel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1380
https://github.com/su2code/SU2/issues/1380:108,Modifiability,adapt,adaptation,108,"I recently downloaded and compiled the feature_adap branch of SU2. . After installing I attempted to run an adaptation case with pyamg. However my code errors out with, . 'File ""C:\bin\SU2\amginria\interface.py"", line 136, in call_pyamg; mesh_new = pyamg.adapt_mesh(mesh, remesh_options); AttributeError: module 'pyamg' has no attribute 'adapt_mesh''. Does the newest version of pyamg no longer have this method? If so, what is the fix?. Thanks; Daniel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1380
https://github.com/su2code/SU2/pull/1382:369,Availability,down,down,369,"Dear friends of the Heat Solver and Periodic Boundary conditions, . I feared no exhausting work and added periodic BC to the Heat Solver. Stock up your supplies, cancel meetings for today and dive into the diff to review this piece. Ok for real, I don't know if that is all that has to be done? I did some early testing with mixed results, I noticed that I had to turn down CFL for the solid zone (1e4 in non-periodic case-> 1) to get a solution that seems to respect the periodicity. If the CFL is too large then I get some spurious temperature and weird residual pattern. Any comments are appreciated. This was just a first shot so Im gonna do more digging on that issue. ## Related Work; Periodic bc was initially implemented in #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382
https://github.com/su2code/SU2/pull/1382:1404,Deployability,update,updated,1404,"Dear friends of the Heat Solver and Periodic Boundary conditions, . I feared no exhausting work and added periodic BC to the Heat Solver. Stock up your supplies, cancel meetings for today and dive into the diff to review this piece. Ok for real, I don't know if that is all that has to be done? I did some early testing with mixed results, I noticed that I had to turn down CFL for the solid zone (1e4 in non-periodic case-> 1) to get a solution that seems to respect the periodicity. If the CFL is too large then I get some spurious temperature and weird residual pattern. Any comments are appreciated. This was just a first shot so Im gonna do more digging on that issue. ## Related Work; Periodic bc was initially implemented in #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382
https://github.com/su2code/SU2/pull/1382:312,Testability,test,testing,312,"Dear friends of the Heat Solver and Periodic Boundary conditions, . I feared no exhausting work and added periodic BC to the Heat Solver. Stock up your supplies, cancel meetings for today and dive into the diff to review this piece. Ok for real, I don't know if that is all that has to be done? I did some early testing with mixed results, I noticed that I had to turn down CFL for the solid zone (1e4 in non-periodic case-> 1) to get a solution that seems to respect the periodicity. If the CFL is too large then I get some spurious temperature and weird residual pattern. Any comments are appreciated. This was just a first shot so Im gonna do more digging on that issue. ## Related Work; Periodic bc was initially implemented in #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382
https://github.com/su2code/SU2/pull/1382:1331,Testability,test,test,1331,"Dear friends of the Heat Solver and Periodic Boundary conditions, . I feared no exhausting work and added periodic BC to the Heat Solver. Stock up your supplies, cancel meetings for today and dive into the diff to review this piece. Ok for real, I don't know if that is all that has to be done? I did some early testing with mixed results, I noticed that I had to turn down CFL for the solid zone (1e4 in non-periodic case-> 1) to get a solution that seems to respect the periodicity. If the CFL is too large then I get some spurious temperature and weird residual pattern. Any comments are appreciated. This was just a first shot so Im gonna do more digging on that issue. ## Related Work; Periodic bc was initially implemented in #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382
https://github.com/su2code/SU2/pull/1382:911,Usability,guid,guide,911,"Dear friends of the Heat Solver and Periodic Boundary conditions, . I feared no exhausting work and added periodic BC to the Heat Solver. Stock up your supplies, cancel meetings for today and dive into the diff to review this piece. Ok for real, I don't know if that is all that has to be done? I did some early testing with mixed results, I noticed that I had to turn down CFL for the solid zone (1e4 in non-periodic case-> 1) to get a solution that seems to respect the periodicity. If the CFL is too large then I get some spurious temperature and weird residual pattern. Any comments are appreciated. This was just a first shot so Im gonna do more digging on that issue. ## Related Work; Periodic bc was initially implemented in #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382
https://github.com/su2code/SU2/pull/1382:1202,Usability,simpl,simply,1202,"Dear friends of the Heat Solver and Periodic Boundary conditions, . I feared no exhausting work and added periodic BC to the Heat Solver. Stock up your supplies, cancel meetings for today and dive into the diff to review this piece. Ok for real, I don't know if that is all that has to be done? I did some early testing with mixed results, I noticed that I had to turn down CFL for the solid zone (1e4 in non-periodic case-> 1) to get a solution that seems to respect the periodicity. If the CFL is too large then I get some spurious temperature and weird residual pattern. Any comments are appreciated. This was just a first shot so Im gonna do more digging on that issue. ## Related Work; Periodic bc was initially implemented in #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382
https://github.com/su2code/SU2/pull/1383:1004,Deployability,update,updated,1004,"## Proposed Changes. - Addition of species diffusion terms to surface energy balance in NEMO, important for highly dissociated flows; - Addition of vector for s species, ""enthalpys"", to variable to store values accessed in solver.; - General cleanup/commenting of the NEMO heat flux computation in CFVMFlowSolverBase.inl. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1383
https://github.com/su2code/SU2/pull/1383:70,Energy Efficiency,energy,energy,70,"## Proposed Changes. - Addition of species diffusion terms to surface energy balance in NEMO, important for highly dissociated flows; - Addition of vector for s species, ""enthalpys"", to variable to store values accessed in solver.; - General cleanup/commenting of the NEMO heat flux computation in CFVMFlowSolverBase.inl. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1383
https://github.com/su2code/SU2/pull/1383:186,Modifiability,variab,variable,186,"## Proposed Changes. - Addition of species diffusion terms to surface energy balance in NEMO, important for highly dissociated flows; - Addition of vector for s species, ""enthalpys"", to variable to store values accessed in solver.; - General cleanup/commenting of the NEMO heat flux computation in CFVMFlowSolverBase.inl. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1383
https://github.com/su2code/SU2/pull/1383:211,Security,access,accessed,211,"## Proposed Changes. - Addition of species diffusion terms to surface energy balance in NEMO, important for highly dissociated flows; - Addition of vector for s species, ""enthalpys"", to variable to store values accessed in solver.; - General cleanup/commenting of the NEMO heat flux computation in CFVMFlowSolverBase.inl. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1383
https://github.com/su2code/SU2/pull/1383:931,Testability,test,test,931,"## Proposed Changes. - Addition of species diffusion terms to surface energy balance in NEMO, important for highly dissociated flows; - Addition of vector for s species, ""enthalpys"", to variable to store values accessed in solver.; - General cleanup/commenting of the NEMO heat flux computation in CFVMFlowSolverBase.inl. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1383
https://github.com/su2code/SU2/pull/1383:511,Usability,guid,guide,511,"## Proposed Changes. - Addition of species diffusion terms to surface energy balance in NEMO, important for highly dissociated flows; - Addition of vector for s species, ""enthalpys"", to variable to store values accessed in solver.; - General cleanup/commenting of the NEMO heat flux computation in CFVMFlowSolverBase.inl. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1383
https://github.com/su2code/SU2/pull/1383:802,Usability,simpl,simply,802,"## Proposed Changes. - Addition of species diffusion terms to surface energy balance in NEMO, important for highly dissociated flows; - Addition of vector for s species, ""enthalpys"", to variable to store values accessed in solver.; - General cleanup/commenting of the NEMO heat flux computation in CFVMFlowSolverBase.inl. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1383
https://github.com/su2code/SU2/pull/1385:1016,Deployability,update,updated,1016,"## Proposed Changes; This adds/extends the turbulence solver for NEMO. As of right now, there is a lot of repeated code. ; Much testing is still needed, but the base structure is here. I hoping to get some early comments, and ideas of how to reduces the code repetition. ## Related Work; Other feature developments in NEMO, as PR #1356 and PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1385
https://github.com/su2code/SU2/pull/1385:242,Energy Efficiency,reduce,reduces,242,"## Proposed Changes; This adds/extends the turbulence solver for NEMO. As of right now, there is a lot of repeated code. ; Much testing is still needed, but the base structure is here. I hoping to get some early comments, and ideas of how to reduces the code repetition. ## Related Work; Other feature developments in NEMO, as PR #1356 and PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1385
https://github.com/su2code/SU2/pull/1385:31,Modifiability,extend,extends,31,"## Proposed Changes; This adds/extends the turbulence solver for NEMO. As of right now, there is a lot of repeated code. ; Much testing is still needed, but the base structure is here. I hoping to get some early comments, and ideas of how to reduces the code repetition. ## Related Work; Other feature developments in NEMO, as PR #1356 and PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1385
https://github.com/su2code/SU2/pull/1385:128,Testability,test,testing,128,"## Proposed Changes; This adds/extends the turbulence solver for NEMO. As of right now, there is a lot of repeated code. ; Much testing is still needed, but the base structure is here. I hoping to get some early comments, and ideas of how to reduces the code repetition. ## Related Work; Other feature developments in NEMO, as PR #1356 and PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1385
https://github.com/su2code/SU2/pull/1385:943,Testability,test,test,943,"## Proposed Changes; This adds/extends the turbulence solver for NEMO. As of right now, there is a lot of repeated code. ; Much testing is still needed, but the base structure is here. I hoping to get some early comments, and ideas of how to reduces the code repetition. ## Related Work; Other feature developments in NEMO, as PR #1356 and PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1385
https://github.com/su2code/SU2/pull/1385:523,Usability,guid,guide,523,"## Proposed Changes; This adds/extends the turbulence solver for NEMO. As of right now, there is a lot of repeated code. ; Much testing is still needed, but the base structure is here. I hoping to get some early comments, and ideas of how to reduces the code repetition. ## Related Work; Other feature developments in NEMO, as PR #1356 and PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1385
https://github.com/su2code/SU2/pull/1385:814,Usability,simpl,simply,814,"## Proposed Changes; This adds/extends the turbulence solver for NEMO. As of right now, there is a lot of repeated code. ; Much testing is still needed, but the base structure is here. I hoping to get some early comments, and ideas of how to reduces the code repetition. ## Related Work; Other feature developments in NEMO, as PR #1356 and PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1385
https://github.com/su2code/SU2/pull/1386:991,Deployability,update,updated,991,"## Proposed Changes; I removed the calls to SetConsVarGradient in NEMO. It was causing a segfault locally when running any viscous case, though I couldn't produce the issue on other machines. If anyone has an explanation, I'm all ears! These seem to be superfluous anyway. ## Related Work; This is a continuation of PR #1375. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1386
https://github.com/su2code/SU2/pull/1386:918,Testability,test,test,918,"## Proposed Changes; I removed the calls to SetConsVarGradient in NEMO. It was causing a segfault locally when running any viscous case, though I couldn't produce the issue on other machines. If anyone has an explanation, I'm all ears! These seem to be superfluous anyway. ## Related Work; This is a continuation of PR #1375. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1386
https://github.com/su2code/SU2/pull/1386:498,Usability,guid,guide,498,"## Proposed Changes; I removed the calls to SetConsVarGradient in NEMO. It was causing a segfault locally when running any viscous case, though I couldn't produce the issue on other machines. If anyone has an explanation, I'm all ears! These seem to be superfluous anyway. ## Related Work; This is a continuation of PR #1375. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1386
https://github.com/su2code/SU2/pull/1386:789,Usability,simpl,simply,789,"## Proposed Changes; I removed the calls to SetConsVarGradient in NEMO. It was causing a segfault locally when running any viscous case, though I couldn't produce the issue on other machines. If anyone has an explanation, I'm all ears! These seem to be superfluous anyway. ## Related Work; This is a continuation of PR #1375. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1386
https://github.com/su2code/SU2/pull/1387:902,Deployability,update,updated,902,"## Proposed Changes; Added CGNS output format. Master node writes the output files and receives data from other processes (one at a time for each field to avoid memory limit problems). Some suggestions from [feature_CGNS_output](https://github.com/su2code/SU2/pull/1131) are included in the code. However, this first version produce a new file, mesh and solution, at each call as in the Paraview format. The code support `CGNS` and `SURFACE_CGNS` in the `OUTPUT_FILES` option. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387
https://github.com/su2code/SU2/pull/1387:155,Safety,avoid,avoid,155,"## Proposed Changes; Added CGNS output format. Master node writes the output files and receives data from other processes (one at a time for each field to avoid memory limit problems). Some suggestions from [feature_CGNS_output](https://github.com/su2code/SU2/pull/1131) are included in the code. However, this first version produce a new file, mesh and solution, at each call as in the Paraview format. The code support `CGNS` and `SURFACE_CGNS` in the `OUTPUT_FILES` option. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387
https://github.com/su2code/SU2/pull/1387:829,Testability,test,test,829,"## Proposed Changes; Added CGNS output format. Master node writes the output files and receives data from other processes (one at a time for each field to avoid memory limit problems). Some suggestions from [feature_CGNS_output](https://github.com/su2code/SU2/pull/1131) are included in the code. However, this first version produce a new file, mesh and solution, at each call as in the Paraview format. The code support `CGNS` and `SURFACE_CGNS` in the `OUTPUT_FILES` option. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387
https://github.com/su2code/SU2/pull/1387:700,Usability,simpl,simply,700,"## Proposed Changes; Added CGNS output format. Master node writes the output files and receives data from other processes (one at a time for each field to avoid memory limit problems). Some suggestions from [feature_CGNS_output](https://github.com/su2code/SU2/pull/1131) are included in the code. However, this first version produce a new file, mesh and solution, at each call as in the Paraview format. The code support `CGNS` and `SURFACE_CGNS` in the `OUTPUT_FILES` option. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387
https://github.com/su2code/SU2/pull/1388:1617,Deployability,update,updated,1617,"## Proposed Changes; Hi all,. This PR implements a passive species transport solver. The passive means, that the mass fraction at each location does not influence any fluid-properties and thereby the mean flow (which reminds me that this is a good sanity check to compare mean flow residuals). A new `CSpeciesSolver` and `CSpeciesVariable` were added based on the `CScalar*` things done in #1330 . Additionally `species_convection/diffusion/sources` were added just as it is the case for the turbulence solver (both based on the general scalar* framework). Please note that prob ~1000 lines are cfg's, README's, helping scripts. . ## Related Work; Preliminary work was done in #1330 with creating a base class for scalar transport equations. #1223 and #1332 already mostly implement the here shown species solver and big chunks were copied over from there, but they are not based on the new CScalarSolver. In order to chunk the work for these branches this PR will not contain any species mixing properties or TableLookUps. . After this PR #1332 will be tackled next. Whether we try to merge develop then into those branches or copy stuff over in a new branch will be seen when we get there. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388
https://github.com/su2code/SU2/pull/1388:248,Safety,sanity check,sanity check,248,"## Proposed Changes; Hi all,. This PR implements a passive species transport solver. The passive means, that the mass fraction at each location does not influence any fluid-properties and thereby the mean flow (which reminds me that this is a good sanity check to compare mean flow residuals). A new `CSpeciesSolver` and `CSpeciesVariable` were added based on the `CScalar*` things done in #1330 . Additionally `species_convection/diffusion/sources` were added just as it is the case for the turbulence solver (both based on the general scalar* framework). Please note that prob ~1000 lines are cfg's, README's, helping scripts. . ## Related Work; Preliminary work was done in #1330 with creating a base class for scalar transport equations. #1223 and #1332 already mostly implement the here shown species solver and big chunks were copied over from there, but they are not based on the new CScalarSolver. In order to chunk the work for these branches this PR will not contain any species mixing properties or TableLookUps. . After this PR #1332 will be tackled next. Whether we try to merge develop then into those branches or copy stuff over in a new branch will be seen when we get there. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388
https://github.com/su2code/SU2/pull/1388:1544,Testability,test,test,1544,"## Proposed Changes; Hi all,. This PR implements a passive species transport solver. The passive means, that the mass fraction at each location does not influence any fluid-properties and thereby the mean flow (which reminds me that this is a good sanity check to compare mean flow residuals). A new `CSpeciesSolver` and `CSpeciesVariable` were added based on the `CScalar*` things done in #1330 . Additionally `species_convection/diffusion/sources` were added just as it is the case for the turbulence solver (both based on the general scalar* framework). Please note that prob ~1000 lines are cfg's, README's, helping scripts. . ## Related Work; Preliminary work was done in #1330 with creating a base class for scalar transport equations. #1223 and #1332 already mostly implement the here shown species solver and big chunks were copied over from there, but they are not based on the new CScalarSolver. In order to chunk the work for these branches this PR will not contain any species mixing properties or TableLookUps. . After this PR #1332 will be tackled next. Whether we try to merge develop then into those branches or copy stuff over in a new branch will be seen when we get there. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388
https://github.com/su2code/SU2/pull/1388:1415,Usability,simpl,simply,1415,"## Proposed Changes; Hi all,. This PR implements a passive species transport solver. The passive means, that the mass fraction at each location does not influence any fluid-properties and thereby the mean flow (which reminds me that this is a good sanity check to compare mean flow residuals). A new `CSpeciesSolver` and `CSpeciesVariable` were added based on the `CScalar*` things done in #1330 . Additionally `species_convection/diffusion/sources` were added just as it is the case for the turbulence solver (both based on the general scalar* framework). Please note that prob ~1000 lines are cfg's, README's, helping scripts. . ## Related Work; Preliminary work was done in #1330 with creating a base class for scalar transport equations. #1223 and #1332 already mostly implement the here shown species solver and big chunks were copied over from there, but they are not based on the new CScalarSolver. In order to chunk the work for these branches this PR will not contain any species mixing properties or TableLookUps. . After this PR #1332 will be tackled next. Whether we try to merge develop then into those branches or copy stuff over in a new branch will be seen when we get there. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388
https://github.com/su2code/SU2/pull/1389:811,Deployability,update,updated,811,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes. - General cleanup/optimization in NEMO solver/numerics. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1389
https://github.com/su2code/SU2/pull/1389:89,Performance,optimiz,optimization,89,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes. - General cleanup/optimization in NEMO solver/numerics. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1389
https://github.com/su2code/SU2/pull/1389:738,Testability,test,test,738,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes. - General cleanup/optimization in NEMO solver/numerics. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1389
https://github.com/su2code/SU2/pull/1389:318,Usability,guid,guide,318,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes. - General cleanup/optimization in NEMO solver/numerics. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1389
https://github.com/su2code/SU2/pull/1389:609,Usability,simpl,simply,609,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes. - General cleanup/optimization in NEMO solver/numerics. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1389
https://github.com/su2code/SU2/pull/1390:67,Deployability,update,updated,67,"Add yourself if you are a new contributor I missed, or if you have updated your github handle, or if you want to use your name instead, etc.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1390
https://github.com/su2code/SU2/pull/1391:765,Deployability,update,updated,765,"## Proposed Changes. - Adding newline to some files, removing extraneous newlines. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1391
https://github.com/su2code/SU2/pull/1391:692,Testability,test,test,692,"## Proposed Changes. - Adding newline to some files, removing extraneous newlines. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1391
https://github.com/su2code/SU2/pull/1391:272,Usability,guid,guide,272,"## Proposed Changes. - Adding newline to some files, removing extraneous newlines. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1391
https://github.com/su2code/SU2/pull/1391:563,Usability,simpl,simply,563,"## Proposed Changes. - Adding newline to some files, removing extraneous newlines. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1391
https://github.com/su2code/SU2/pull/1392:1163,Deployability,update,updated,1163,"## Proposed Changes; This draft PR aims to generalize and template the turbulence solver/ scalar solvers to reduce code duplication and allow NEMO access to the turbulence solvers. The ideas were discussed with @pcarruscag, @TobiKattmann and @suargi, ; I am opening up the draft PR very early, so this is very much a work in process. The main idea is use templates to introduce differing variable index values into the Scalar/Turb solvers. ## Related Work; This idea follows PR #1375 and PR #1330. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392
https://github.com/su2code/SU2/pull/1392:108,Energy Efficiency,reduce,reduce,108,"## Proposed Changes; This draft PR aims to generalize and template the turbulence solver/ scalar solvers to reduce code duplication and allow NEMO access to the turbulence solvers. The ideas were discussed with @pcarruscag, @TobiKattmann and @suargi, ; I am opening up the draft PR very early, so this is very much a work in process. The main idea is use templates to introduce differing variable index values into the Scalar/Turb solvers. ## Related Work; This idea follows PR #1375 and PR #1330. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392
https://github.com/su2code/SU2/pull/1392:388,Modifiability,variab,variable,388,"## Proposed Changes; This draft PR aims to generalize and template the turbulence solver/ scalar solvers to reduce code duplication and allow NEMO access to the turbulence solvers. The ideas were discussed with @pcarruscag, @TobiKattmann and @suargi, ; I am opening up the draft PR very early, so this is very much a work in process. The main idea is use templates to introduce differing variable index values into the Scalar/Turb solvers. ## Related Work; This idea follows PR #1375 and PR #1330. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392
https://github.com/su2code/SU2/pull/1392:147,Security,access,access,147,"## Proposed Changes; This draft PR aims to generalize and template the turbulence solver/ scalar solvers to reduce code duplication and allow NEMO access to the turbulence solvers. The ideas were discussed with @pcarruscag, @TobiKattmann and @suargi, ; I am opening up the draft PR very early, so this is very much a work in process. The main idea is use templates to introduce differing variable index values into the Scalar/Turb solvers. ## Related Work; This idea follows PR #1375 and PR #1330. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392
https://github.com/su2code/SU2/pull/1392:1090,Testability,test,test,1090,"## Proposed Changes; This draft PR aims to generalize and template the turbulence solver/ scalar solvers to reduce code duplication and allow NEMO access to the turbulence solvers. The ideas were discussed with @pcarruscag, @TobiKattmann and @suargi, ; I am opening up the draft PR very early, so this is very much a work in process. The main idea is use templates to introduce differing variable index values into the Scalar/Turb solvers. ## Related Work; This idea follows PR #1375 and PR #1330. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392
https://github.com/su2code/SU2/pull/1392:670,Usability,guid,guide,670,"## Proposed Changes; This draft PR aims to generalize and template the turbulence solver/ scalar solvers to reduce code duplication and allow NEMO access to the turbulence solvers. The ideas were discussed with @pcarruscag, @TobiKattmann and @suargi, ; I am opening up the draft PR very early, so this is very much a work in process. The main idea is use templates to introduce differing variable index values into the Scalar/Turb solvers. ## Related Work; This idea follows PR #1375 and PR #1330. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392
https://github.com/su2code/SU2/pull/1392:961,Usability,simpl,simply,961,"## Proposed Changes; This draft PR aims to generalize and template the turbulence solver/ scalar solvers to reduce code duplication and allow NEMO access to the turbulence solvers. The ideas were discussed with @pcarruscag, @TobiKattmann and @suargi, ; I am opening up the draft PR very early, so this is very much a work in process. The main idea is use templates to introduce differing variable index values into the Scalar/Turb solvers. ## Related Work; This idea follows PR #1375 and PR #1330. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392
https://github.com/su2code/SU2/pull/1394:1162,Deployability,update,updated,1162,"## Proposed Changes; Hi, . A small one: For 1 zone heat equation, the primal restart for the adjoint run was missing the solution reset after the CLEAR_INDICES run. Additionally I added a output_precision to the primal Residual Table for the adjoint. My recommendation is to set OUTPUT_PRECISION= 12 (because that is the fixed field Width of the table) and compare those screen residuals to the history output of the comparing primal simulations. I noticed this problem while looking at non-perfect restarts for CHT cases, which I am currently still debugging. I will make an issue for that soon (Edit #1395 ). Note though that the discrepancies seem subtle and a gradient comparison with FD shows and showed good agreement in the past. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1394
https://github.com/su2code/SU2/pull/1394:1089,Testability,test,test,1089,"## Proposed Changes; Hi, . A small one: For 1 zone heat equation, the primal restart for the adjoint run was missing the solution reset after the CLEAR_INDICES run. Additionally I added a output_precision to the primal Residual Table for the adjoint. My recommendation is to set OUTPUT_PRECISION= 12 (because that is the fixed field Width of the table) and compare those screen residuals to the history output of the comparing primal simulations. I noticed this problem while looking at non-perfect restarts for CHT cases, which I am currently still debugging. I will make an issue for that soon (Edit #1395 ). Note though that the discrepancies seem subtle and a gradient comparison with FD shows and showed good agreement in the past. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1394
https://github.com/su2code/SU2/pull/1394:960,Usability,simpl,simply,960,"## Proposed Changes; Hi, . A small one: For 1 zone heat equation, the primal restart for the adjoint run was missing the solution reset after the CLEAR_INDICES run. Additionally I added a output_precision to the primal Residual Table for the adjoint. My recommendation is to set OUTPUT_PRECISION= 12 (because that is the fixed field Width of the table) and compare those screen residuals to the history output of the comparing primal simulations. I noticed this problem while looking at non-perfect restarts for CHT cases, which I am currently still debugging. I will make an issue for that soon (Edit #1395 ). Note though that the discrepancies seem subtle and a gradient comparison with FD shows and showed good agreement in the past. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1394
https://github.com/su2code/SU2/issues/1395:2211,Availability,error,error,2211,"....; 4.res[1]; ```. Of course the best outcome would be 3 identical lines ... which we dont get :(. ## Pin Array setup 2D - Fluid Only. (p, vx, vy, T, k, w); 200 iterations; ```; -7.16607941386 -7.34805457325 -6.99877222345 -1.01313133295 -8.55717653108 -1.6476144338; -7.16607941386 -7.34805457325 -6.99877222345 -1.01313133295 -8.55717653108 -1.6476144338; -7.16607941386 -7.34805457325 -6.99877222345 -1.01313133295 -8.55717653108 -1.6476144338; ```; everythings fine 👍 . ## Pin Array setup 2D - Solid Only. Note that this will only work with the fix in #1394 . 10 iterations (8 Linear Solver Iter); ```; -6.83193258622; -6.83193258622; -6.83193258622; ```. 10 iterations (10 Linear Solver Iter); ```; -7.38737630018; -7.38737630016; -7.38737630016; ```. 10 iterations (20 Linear Solver Iter); ```; -8.92762658265; -8.92762658317; -8.92762658317; ```. 10 iterations (200 Linear Solver Iter); ``` ; -8.92702259526; -8.92702259594; -8.92702259594; ```; Here I suspect some floating point things going with some minor error that accumulates up to a certain point. Doesn't worry me too much to be fair. 200 iterations (10 Linear Solver Iter); ```; -16.5822916687; -16.2000952843; -16.2000952843; ```; But with more iterations more problems arise. So back to the drawing board for that. Maybe here the root cause for the cht problems is hidden as well. ## CHT Pin Array setup 2D. Here things get really weird. . 1. With low iteration count it looks like the primal-only restart works perfectly and only the solid residual of temperature is flawed; 2. With higher iteration counts the solid temperature is still different but now both restarted mean flow residuals are not in line with the X+1 iteration simulation ... what?. (p, vx, vy, T_fluid, T_solid); 10 Iterations; ```; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -5.8150835186; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -5.8150835186; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -6.27627665971; ```. 2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395
https://github.com/su2code/SU2/issues/1395:6256,Availability,error,errors,6256,"ow match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" case shouldnt be counted for this I feel). **To Reproduce**; I post my setups later here. Cannot upload through vpn. I also use a simple bash script to do these comparisons for me. So the chance for manual errors is much lower. **Additional Notes**; A few things ahead, I run FGMRES+ILU for all configurations. No periodic boundaries at all. I went without turbulence for the cht cases to make it simpler. In the past and now we were able to see some good gradient validation against FD. So this issue is not super dramatic (although I am pretty annoyed by that) and I think I simply overlooked it in the past. In case there is sth unclear pls let me know, I'll will try to clarify asap. I still have some debugging to do but I appreciate all hints as I am currently more poking into the fog. . Thanks already , Tobi. **Desktop (please complete the following information):**; - OS: [RHELS 7.6 Maipo]; - C++ compiler and version: [g++ (GCC) 5.3.0]; - MPI implementation and version: [OpenMPI 3.1.6]; - SU2 Version: [#1394]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395
https://github.com/su2code/SU2/issues/1395:6345,Deployability,configurat,configurations,6345,"ow match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" case shouldnt be counted for this I feel). **To Reproduce**; I post my setups later here. Cannot upload through vpn. I also use a simple bash script to do these comparisons for me. So the chance for manual errors is much lower. **Additional Notes**; A few things ahead, I run FGMRES+ILU for all configurations. No periodic boundaries at all. I went without turbulence for the cht cases to make it simpler. In the past and now we were able to see some good gradient validation against FD. So this issue is not super dramatic (although I am pretty annoyed by that) and I think I simply overlooked it in the past. In case there is sth unclear pls let me know, I'll will try to clarify asap. I still have some debugging to do but I appreciate all hints as I am currently more poking into the fog. . Thanks already , Tobi. **Desktop (please complete the following information):**; - OS: [RHELS 7.6 Maipo]; - C++ compiler and version: [g++ (GCC) 5.3.0]; - MPI implementation and version: [OpenMPI 3.1.6]; - SU2 Version: [#1394]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395
https://github.com/su2code/SU2/issues/1395:3468,Integrability,interface,interface,3468,"d for that. Maybe here the root cause for the cht problems is hidden as well. ## CHT Pin Array setup 2D. Here things get really weird. . 1. With low iteration count it looks like the primal-only restart works perfectly and only the solid residual of temperature is flawed; 2. With higher iteration counts the solid temperature is still different but now both restarted mean flow residuals are not in line with the X+1 iteration simulation ... what?. (p, vx, vy, T_fluid, T_solid); 10 Iterations; ```; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -5.8150835186; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -5.8150835186; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -6.27627665971; ```. 200 Iterations; ```; -12.6894989871 -13.0272466772 -12.776380701 -1.01446550457 -7.17890161426; -12.6894989199 -13.0272465259 -12.7763807181 -1.01446550457 -7.17890161426; -12.6894989199 -13.0272465259 -12.7763807181 -1.01446550457 -7.30259065606; ```. 200 Iterations (No CHT interface at all, i.e. still ""multizone"" but no coupling between the zones); ```; -12.6993664689 -13.037441642 -12.7880987801 -0.895636121058 -16.5806369934; -12.6993665267 -13.0374417614 -12.7880988088 -0.895636121058 -16.1994417242; -12.6993665267 -13.0374417614 -12.7880988088 -0.895636121058 -16.1994417242; ```. 2000 Iterations; ```; -17.5073098614 -17.7104073858 -17.9003808832 -3.34538088409 -9.30160418764; -17.4072816449 -17.5306206426 -17.7140334705 -3.34538088409 -9.30160418771; -17.4072816449 -17.5306206426 -17.7140334705 -3.34538088409 -9.425709713; ```. Also note that the residual for the adjoint-restart is better than expected, and not even by a tiny amount. This naturally leads to the hypothesis that the direct-solution is not reset after the CLEAR_INDICES run. But that is the case, I checked and I also Print the DirectResdiual for all DIrectIterations (2 flow + 2 mesh ones) and they are always the same. If the residual were to drop dramatically for the adjoint restart th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395
https://github.com/su2code/SU2/issues/1395:3516,Modifiability,coupling,coupling,3516,"ms is hidden as well. ## CHT Pin Array setup 2D. Here things get really weird. . 1. With low iteration count it looks like the primal-only restart works perfectly and only the solid residual of temperature is flawed; 2. With higher iteration counts the solid temperature is still different but now both restarted mean flow residuals are not in line with the X+1 iteration simulation ... what?. (p, vx, vy, T_fluid, T_solid); 10 Iterations; ```; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -5.8150835186; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -5.8150835186; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -6.27627665971; ```. 200 Iterations; ```; -12.6894989871 -13.0272466772 -12.776380701 -1.01446550457 -7.17890161426; -12.6894989199 -13.0272465259 -12.7763807181 -1.01446550457 -7.17890161426; -12.6894989199 -13.0272465259 -12.7763807181 -1.01446550457 -7.30259065606; ```. 200 Iterations (No CHT interface at all, i.e. still ""multizone"" but no coupling between the zones); ```; -12.6993664689 -13.037441642 -12.7880987801 -0.895636121058 -16.5806369934; -12.6993665267 -13.0374417614 -12.7880988088 -0.895636121058 -16.1994417242; -12.6993665267 -13.0374417614 -12.7880988088 -0.895636121058 -16.1994417242; ```. 2000 Iterations; ```; -17.5073098614 -17.7104073858 -17.9003808832 -3.34538088409 -9.30160418764; -17.4072816449 -17.5306206426 -17.7140334705 -3.34538088409 -9.30160418771; -17.4072816449 -17.5306206426 -17.7140334705 -3.34538088409 -9.425709713; ```. Also note that the residual for the adjoint-restart is better than expected, and not even by a tiny amount. This naturally leads to the hypothesis that the direct-solution is not reset after the CLEAR_INDICES run. But that is the case, I checked and I also Print the DirectResdiual for all DIrectIterations (2 flow + 2 mesh ones) and they are always the same. If the residual were to drop dramatically for the adjoint restart that would prob be easier to debug. I of course also check",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395
https://github.com/su2code/SU2/issues/1395:6040,Modifiability,coupling,coupling,6040,"e primal restarted and adjoint restarted now match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" case shouldnt be counted for this I feel). **To Reproduce**; I post my setups later here. Cannot upload through vpn. I also use a simple bash script to do these comparisons for me. So the chance for manual errors is much lower. **Additional Notes**; A few things ahead, I run FGMRES+ILU for all configurations. No periodic boundaries at all. I went without turbulence for the cht cases to make it simpler. In the past and now we were able to see some good gradient validation against FD. So this issue is not super dramatic (although I am pretty annoyed by that) and I think I simply overlooked it in the past. In case there is sth unclear pls let me know, I'll will try to clarify asap. I still have some debugging to do but I appreciate all hints as I am currently more poking into the fog. . Thanks already , Tobi. **Desktop (please complete the following information):**; - OS: [RHELS 7.6 Maipo]; - C++ compiler and version: [g++ (GCC) 5.3.0]; - MPI implementation and version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395
https://github.com/su2code/SU2/issues/1395:6345,Modifiability,config,configurations,6345,"ow match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" case shouldnt be counted for this I feel). **To Reproduce**; I post my setups later here. Cannot upload through vpn. I also use a simple bash script to do these comparisons for me. So the chance for manual errors is much lower. **Additional Notes**; A few things ahead, I run FGMRES+ILU for all configurations. No periodic boundaries at all. I went without turbulence for the cht cases to make it simpler. In the past and now we were able to see some good gradient validation against FD. So this issue is not super dramatic (although I am pretty annoyed by that) and I think I simply overlooked it in the past. In case there is sth unclear pls let me know, I'll will try to clarify asap. I still have some debugging to do but I appreciate all hints as I am currently more poking into the fog. . Thanks already , Tobi. **Desktop (please complete the following information):**; - OS: [RHELS 7.6 Maipo]; - C++ compiler and version: [g++ (GCC) 5.3.0]; - MPI implementation and version: [OpenMPI 3.1.6]; - SU2 Version: [#1394]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395
https://github.com/su2code/SU2/issues/1395:411,Safety,sanity check,sanity check,411,"**Describe the bug**; Hi all, . I noticed some issues with restarts (primal only and for the primal-iteration in the discrete adjoint). I do the following:; 1. Run a simulation with X+1 iterations. The residuals of the X+1st iterations are basically what we try to recreate in the restarted version. This is the ground truth; 2. Run a simulation with X iterations. This gives us a file to restart from. (A good sanity check with the 1. simulation is to diff with the history file to see whether the simulations are deterministic at all); 3. Run a primal restarted simulation from the restart file of 2. with just 1 iteration. The residuals should match the results of 1.; 4. Run an adjoint simulation with the restart file of 2. . The residuals should match the results of 1. What you will see in the following is 3 lines with multiple residual values each. The first line corresponds to the X+1st history entry of simulation 1. (the ground truth). The second line is the restarted primal from simulation 3., also last history line. The third line is from the adjoint-primal-restart, grabbed from the screen output with OUTPUT_PRECISION=12 (see #1394 ); ```; 1.res[1], 1.res[s] ...; 3.res[1] ....; 4.res[1]; ```. Of course the best outcome would be 3 identical lines ... which we dont get :(. ## Pin Array setup 2D - Fluid Only. (p, vx, vy, T, k, w); 200 iterations; ```; -7.16607941386 -7.34805457325 -6.99877222345 -1.01313133295 -8.55717653108 -1.6476144338; -7.16607941386 -7.34805457325 -6.99877222345 -1.01313133295 -8.55717653108 -1.6476144338; -7.16607941386 -7.34805457325 -6.99877222345 -1.01313133295 -8.55717653108 -1.6476144338; ```; everythings fine 👍 . ## Pin Array setup 2D - Solid Only. Note that this will only work with the fix in #1394 . 10 iterations (8 Linear Solver Iter); ```; -6.83193258622; -6.83193258622; -6.83193258622; ```. 10 iterations (10 Linear Solver Iter); ```; -7.38737630018; -7.38737630016; -7.38737630016; ```. 10 iterations (20 Linear Solver Iter); ```; -8.927",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395
https://github.com/su2code/SU2/issues/1395:6515,Security,validat,validation,6515,"ow match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" case shouldnt be counted for this I feel). **To Reproduce**; I post my setups later here. Cannot upload through vpn. I also use a simple bash script to do these comparisons for me. So the chance for manual errors is much lower. **Additional Notes**; A few things ahead, I run FGMRES+ILU for all configurations. No periodic boundaries at all. I went without turbulence for the cht cases to make it simpler. In the past and now we were able to see some good gradient validation against FD. So this issue is not super dramatic (although I am pretty annoyed by that) and I think I simply overlooked it in the past. In case there is sth unclear pls let me know, I'll will try to clarify asap. I still have some debugging to do but I appreciate all hints as I am currently more poking into the fog. . Thanks already , Tobi. **Desktop (please complete the following information):**; - OS: [RHELS 7.6 Maipo]; - C++ compiler and version: [g++ (GCC) 5.3.0]; - MPI implementation and version: [OpenMPI 3.1.6]; - SU2 Version: [#1394]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395
https://github.com/su2code/SU2/issues/1395:4940,Testability,test,testcase,4940,"the residual for the adjoint-restart is better than expected, and not even by a tiny amount. This naturally leads to the hypothesis that the direct-solution is not reset after the CLEAR_INDICES run. But that is the case, I checked and I also Print the DirectResdiual for all DIrectIterations (2 flow + 2 mesh ones) and they are always the same. If the residual were to drop dramatically for the adjoint restart that would prob be easier to debug. I of course also checked whether the correct Solution values are read, which I am somewhat sure they are... also I can only do spot checks.; ; 4000 iterations; ```; -17.5190807322 -17.7163086125 -17.8778784145 -5.70791061685 -11.6640663533; -17.418063519 -17.5356055663 -17.7081078178 -5.70791062246 -11.6640664169; -17.418063519 -17.5356055663 -17.7081078178 -5.70791062246 -11.7881662873; ```. ## CHT Pin in Crossflow 2D. For another CHT testcase the findings are similar with one notable difference: The solid_T res between the primal restarted and adjoint restarted now match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" cas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395
https://github.com/su2code/SU2/issues/1395:6180,Usability,simpl,simple,6180,"ow match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" case shouldnt be counted for this I feel). **To Reproduce**; I post my setups later here. Cannot upload through vpn. I also use a simple bash script to do these comparisons for me. So the chance for manual errors is much lower. **Additional Notes**; A few things ahead, I run FGMRES+ILU for all configurations. No periodic boundaries at all. I went without turbulence for the cht cases to make it simpler. In the past and now we were able to see some good gradient validation against FD. So this issue is not super dramatic (although I am pretty annoyed by that) and I think I simply overlooked it in the past. In case there is sth unclear pls let me know, I'll will try to clarify asap. I still have some debugging to do but I appreciate all hints as I am currently more poking into the fog. . Thanks already , Tobi. **Desktop (please complete the following information):**; - OS: [RHELS 7.6 Maipo]; - C++ compiler and version: [g++ (GCC) 5.3.0]; - MPI implementation and version: [OpenMPI 3.1.6]; - SU2 Version: [#1394]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395
https://github.com/su2code/SU2/issues/1395:6447,Usability,simpl,simpler,6447,"ow match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" case shouldnt be counted for this I feel). **To Reproduce**; I post my setups later here. Cannot upload through vpn. I also use a simple bash script to do these comparisons for me. So the chance for manual errors is much lower. **Additional Notes**; A few things ahead, I run FGMRES+ILU for all configurations. No periodic boundaries at all. I went without turbulence for the cht cases to make it simpler. In the past and now we were able to see some good gradient validation against FD. So this issue is not super dramatic (although I am pretty annoyed by that) and I think I simply overlooked it in the past. In case there is sth unclear pls let me know, I'll will try to clarify asap. I still have some debugging to do but I appreciate all hints as I am currently more poking into the fog. . Thanks already , Tobi. **Desktop (please complete the following information):**; - OS: [RHELS 7.6 Maipo]; - C++ compiler and version: [g++ (GCC) 5.3.0]; - MPI implementation and version: [OpenMPI 3.1.6]; - SU2 Version: [#1394]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395
https://github.com/su2code/SU2/issues/1395:6627,Usability,simpl,simply,6627,"ow match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" case shouldnt be counted for this I feel). **To Reproduce**; I post my setups later here. Cannot upload through vpn. I also use a simple bash script to do these comparisons for me. So the chance for manual errors is much lower. **Additional Notes**; A few things ahead, I run FGMRES+ILU for all configurations. No periodic boundaries at all. I went without turbulence for the cht cases to make it simpler. In the past and now we were able to see some good gradient validation against FD. So this issue is not super dramatic (although I am pretty annoyed by that) and I think I simply overlooked it in the past. In case there is sth unclear pls let me know, I'll will try to clarify asap. I still have some debugging to do but I appreciate all hints as I am currently more poking into the fog. . Thanks already , Tobi. **Desktop (please complete the following information):**; - OS: [RHELS 7.6 Maipo]; - C++ compiler and version: [g++ (GCC) 5.3.0]; - MPI implementation and version: [OpenMPI 3.1.6]; - SU2 Version: [#1394]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395
https://github.com/su2code/SU2/pull/1396:1128,Deployability,update,updated,1128,"## Proposed Changes; -This PR addresses re-activating the super-catalytic wall boundary, which enforces full recombination of monatomic species to their free-stream concentrations.; -This work is conducted as part of a larger effort to implement more complex gas-surface interaction boundary conditions in NEMO.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1396
https://github.com/su2code/SU2/pull/1396:1055,Testability,test,test,1055,"## Proposed Changes; -This PR addresses re-activating the super-catalytic wall boundary, which enforces full recombination of monatomic species to their free-stream concentrations.; -This work is conducted as part of a larger effort to implement more complex gas-surface interaction boundary conditions in NEMO.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1396
https://github.com/su2code/SU2/pull/1396:635,Usability,guid,guide,635,"## Proposed Changes; -This PR addresses re-activating the super-catalytic wall boundary, which enforces full recombination of monatomic species to their free-stream concentrations.; -This work is conducted as part of a larger effort to implement more complex gas-surface interaction boundary conditions in NEMO.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1396
https://github.com/su2code/SU2/pull/1396:926,Usability,simpl,simply,926,"## Proposed Changes; -This PR addresses re-activating the super-catalytic wall boundary, which enforces full recombination of monatomic species to their free-stream concentrations.; -This work is conducted as part of a larger effort to implement more complex gas-surface interaction boundary conditions in NEMO.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1396
https://github.com/su2code/SU2/pull/1399:1082,Deployability,update,updated,1082,"## Proposed Changes; This introduces the implicit solver for the Euler solver with SU2-NEMO. I created this branch/PR for a clean commit history version. ; This PR also does some general cleanup (declaring variables, use of geometry toolbox) to be more consistent in the SU2 style. ## Related Work; This is based on the previous draft PR #1356. And in general work continued from other NEMO cleanups #1343 and #1347. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1399
https://github.com/su2code/SU2/pull/1399:206,Modifiability,variab,variables,206,"## Proposed Changes; This introduces the implicit solver for the Euler solver with SU2-NEMO. I created this branch/PR for a clean commit history version. ; This PR also does some general cleanup (declaring variables, use of geometry toolbox) to be more consistent in the SU2 style. ## Related Work; This is based on the previous draft PR #1356. And in general work continued from other NEMO cleanups #1343 and #1347. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1399
https://github.com/su2code/SU2/pull/1399:1009,Testability,test,test,1009,"## Proposed Changes; This introduces the implicit solver for the Euler solver with SU2-NEMO. I created this branch/PR for a clean commit history version. ; This PR also does some general cleanup (declaring variables, use of geometry toolbox) to be more consistent in the SU2 style. ## Related Work; This is based on the previous draft PR #1356. And in general work continued from other NEMO cleanups #1343 and #1347. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1399
https://github.com/su2code/SU2/pull/1399:589,Usability,guid,guide,589,"## Proposed Changes; This introduces the implicit solver for the Euler solver with SU2-NEMO. I created this branch/PR for a clean commit history version. ; This PR also does some general cleanup (declaring variables, use of geometry toolbox) to be more consistent in the SU2 style. ## Related Work; This is based on the previous draft PR #1356. And in general work continued from other NEMO cleanups #1343 and #1347. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1399
https://github.com/su2code/SU2/pull/1399:880,Usability,simpl,simply,880,"## Proposed Changes; This introduces the implicit solver for the Euler solver with SU2-NEMO. I created this branch/PR for a clean commit history version. ; This PR also does some general cleanup (declaring variables, use of geometry toolbox) to be more consistent in the SU2 style. ## Related Work; This is based on the previous draft PR #1356. And in general work continued from other NEMO cleanups #1343 and #1347. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1399
https://github.com/su2code/SU2/pull/1400:1103,Deployability,update,updated,1103,"## Proposed Changes. - Temporarily remove sumJhs term from surface energy balance. The species density gradients provided by WLS and GG are very different, and the GG values give incorrect results for surface heating. I want to remove this term for now, until the gradient difference sorted, so it does not result in incorrect surface heating prediction if the user specifies GG. . ## Related Work; This reverts the changes in PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1400
https://github.com/su2code/SU2/pull/1400:67,Energy Efficiency,energy,energy,67,"## Proposed Changes. - Temporarily remove sumJhs term from surface energy balance. The species density gradients provided by WLS and GG are very different, and the GG values give incorrect results for surface heating. I want to remove this term for now, until the gradient difference sorted, so it does not result in incorrect surface heating prediction if the user specifies GG. . ## Related Work; This reverts the changes in PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1400
https://github.com/su2code/SU2/pull/1400:343,Safety,predict,prediction,343,"## Proposed Changes. - Temporarily remove sumJhs term from surface energy balance. The species density gradients provided by WLS and GG are very different, and the GG values give incorrect results for surface heating. I want to remove this term for now, until the gradient difference sorted, so it does not result in incorrect surface heating prediction if the user specifies GG. . ## Related Work; This reverts the changes in PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1400
https://github.com/su2code/SU2/pull/1400:1030,Testability,test,test,1030,"## Proposed Changes. - Temporarily remove sumJhs term from surface energy balance. The species density gradients provided by WLS and GG are very different, and the GG values give incorrect results for surface heating. I want to remove this term for now, until the gradient difference sorted, so it does not result in incorrect surface heating prediction if the user specifies GG. . ## Related Work; This reverts the changes in PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1400
https://github.com/su2code/SU2/pull/1400:610,Usability,guid,guide,610,"## Proposed Changes. - Temporarily remove sumJhs term from surface energy balance. The species density gradients provided by WLS and GG are very different, and the GG values give incorrect results for surface heating. I want to remove this term for now, until the gradient difference sorted, so it does not result in incorrect surface heating prediction if the user specifies GG. . ## Related Work; This reverts the changes in PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1400
https://github.com/su2code/SU2/pull/1400:901,Usability,simpl,simply,901,"## Proposed Changes. - Temporarily remove sumJhs term from surface energy balance. The species density gradients provided by WLS and GG are very different, and the GG values give incorrect results for surface heating. I want to remove this term for now, until the gradient difference sorted, so it does not result in incorrect surface heating prediction if the user specifies GG. . ## Related Work; This reverts the changes in PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1400
https://github.com/su2code/SU2/pull/1402:622,Availability,avail,available,622,"## Proposed Changes; This feature allows of employing cubic equation of state based on the **CoolProp** library's Peng-Robinson backend [1,2]. The present Peng-Robinson fluid model implementation (CPenRobinson.cpp file) requires '_Specific heat ratio_' (_gamma_) as an input which is not always possible to know in advance, especially for organic fluids (refrigerants).; The fluid model (titled as **PR_COOLPROP_GAS** in config file) in the proposed branch is completely free of any '_gamma_' in particular functions and allows of utilizing the spatially variable of isobaric and isochoric specific heats. The full set of available fluids is presented in the **config_template.cfg** file. One must be aware that the reviewed fluid model assumes imposing pure substance in gas phase (no mixtures or multiphase flows). The implemented fluid model improves the thermodynamic consistency however there is performance penalty related to algorithmic overhead. . 1. http://coolprop.org/; 2. https://github.com/CoolProp/CoolProp. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [+ ] I am submitting my contribution to the develop branch.; - [+ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ +] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ +] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402
https://github.com/su2code/SU2/pull/1402:1839,Deployability,update,updated,1839,"## Proposed Changes; This feature allows of employing cubic equation of state based on the **CoolProp** library's Peng-Robinson backend [1,2]. The present Peng-Robinson fluid model implementation (CPenRobinson.cpp file) requires '_Specific heat ratio_' (_gamma_) as an input which is not always possible to know in advance, especially for organic fluids (refrigerants).; The fluid model (titled as **PR_COOLPROP_GAS** in config file) in the proposed branch is completely free of any '_gamma_' in particular functions and allows of utilizing the spatially variable of isobaric and isochoric specific heats. The full set of available fluids is presented in the **config_template.cfg** file. One must be aware that the reviewed fluid model assumes imposing pure substance in gas phase (no mixtures or multiphase flows). The implemented fluid model improves the thermodynamic consistency however there is performance penalty related to algorithmic overhead. . 1. http://coolprop.org/; 2. https://github.com/CoolProp/CoolProp. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [+ ] I am submitting my contribution to the develop branch.; - [+ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ +] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ +] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402
https://github.com/su2code/SU2/pull/1402:421,Modifiability,config,config,421,"## Proposed Changes; This feature allows of employing cubic equation of state based on the **CoolProp** library's Peng-Robinson backend [1,2]. The present Peng-Robinson fluid model implementation (CPenRobinson.cpp file) requires '_Specific heat ratio_' (_gamma_) as an input which is not always possible to know in advance, especially for organic fluids (refrigerants).; The fluid model (titled as **PR_COOLPROP_GAS** in config file) in the proposed branch is completely free of any '_gamma_' in particular functions and allows of utilizing the spatially variable of isobaric and isochoric specific heats. The full set of available fluids is presented in the **config_template.cfg** file. One must be aware that the reviewed fluid model assumes imposing pure substance in gas phase (no mixtures or multiphase flows). The implemented fluid model improves the thermodynamic consistency however there is performance penalty related to algorithmic overhead. . 1. http://coolprop.org/; 2. https://github.com/CoolProp/CoolProp. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [+ ] I am submitting my contribution to the develop branch.; - [+ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ +] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ +] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402
https://github.com/su2code/SU2/pull/1402:555,Modifiability,variab,variable,555,"## Proposed Changes; This feature allows of employing cubic equation of state based on the **CoolProp** library's Peng-Robinson backend [1,2]. The present Peng-Robinson fluid model implementation (CPenRobinson.cpp file) requires '_Specific heat ratio_' (_gamma_) as an input which is not always possible to know in advance, especially for organic fluids (refrigerants).; The fluid model (titled as **PR_COOLPROP_GAS** in config file) in the proposed branch is completely free of any '_gamma_' in particular functions and allows of utilizing the spatially variable of isobaric and isochoric specific heats. The full set of available fluids is presented in the **config_template.cfg** file. One must be aware that the reviewed fluid model assumes imposing pure substance in gas phase (no mixtures or multiphase flows). The implemented fluid model improves the thermodynamic consistency however there is performance penalty related to algorithmic overhead. . 1. http://coolprop.org/; 2. https://github.com/CoolProp/CoolProp. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [+ ] I am submitting my contribution to the develop branch.; - [+ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ +] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ +] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402
https://github.com/su2code/SU2/pull/1402:901,Performance,perform,performance,901,"## Proposed Changes; This feature allows of employing cubic equation of state based on the **CoolProp** library's Peng-Robinson backend [1,2]. The present Peng-Robinson fluid model implementation (CPenRobinson.cpp file) requires '_Specific heat ratio_' (_gamma_) as an input which is not always possible to know in advance, especially for organic fluids (refrigerants).; The fluid model (titled as **PR_COOLPROP_GAS** in config file) in the proposed branch is completely free of any '_gamma_' in particular functions and allows of utilizing the spatially variable of isobaric and isochoric specific heats. The full set of available fluids is presented in the **config_template.cfg** file. One must be aware that the reviewed fluid model assumes imposing pure substance in gas phase (no mixtures or multiphase flows). The implemented fluid model improves the thermodynamic consistency however there is performance penalty related to algorithmic overhead. . 1. http://coolprop.org/; 2. https://github.com/CoolProp/CoolProp. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [+ ] I am submitting my contribution to the develop branch.; - [+ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ +] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ +] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402
https://github.com/su2code/SU2/pull/1402:1765,Testability,test,test,1765,"## Proposed Changes; This feature allows of employing cubic equation of state based on the **CoolProp** library's Peng-Robinson backend [1,2]. The present Peng-Robinson fluid model implementation (CPenRobinson.cpp file) requires '_Specific heat ratio_' (_gamma_) as an input which is not always possible to know in advance, especially for organic fluids (refrigerants).; The fluid model (titled as **PR_COOLPROP_GAS** in config file) in the proposed branch is completely free of any '_gamma_' in particular functions and allows of utilizing the spatially variable of isobaric and isochoric specific heats. The full set of available fluids is presented in the **config_template.cfg** file. One must be aware that the reviewed fluid model assumes imposing pure substance in gas phase (no mixtures or multiphase flows). The implemented fluid model improves the thermodynamic consistency however there is performance penalty related to algorithmic overhead. . 1. http://coolprop.org/; 2. https://github.com/CoolProp/CoolProp. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [+ ] I am submitting my contribution to the develop branch.; - [+ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ +] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ +] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402
https://github.com/su2code/SU2/pull/1402:1342,Usability,guid,guide,1342,"## Proposed Changes; This feature allows of employing cubic equation of state based on the **CoolProp** library's Peng-Robinson backend [1,2]. The present Peng-Robinson fluid model implementation (CPenRobinson.cpp file) requires '_Specific heat ratio_' (_gamma_) as an input which is not always possible to know in advance, especially for organic fluids (refrigerants).; The fluid model (titled as **PR_COOLPROP_GAS** in config file) in the proposed branch is completely free of any '_gamma_' in particular functions and allows of utilizing the spatially variable of isobaric and isochoric specific heats. The full set of available fluids is presented in the **config_template.cfg** file. One must be aware that the reviewed fluid model assumes imposing pure substance in gas phase (no mixtures or multiphase flows). The implemented fluid model improves the thermodynamic consistency however there is performance penalty related to algorithmic overhead. . 1. http://coolprop.org/; 2. https://github.com/CoolProp/CoolProp. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [+ ] I am submitting my contribution to the develop branch.; - [+ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ +] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ +] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402
https://github.com/su2code/SU2/pull/1402:1635,Usability,simpl,simply,1635,"## Proposed Changes; This feature allows of employing cubic equation of state based on the **CoolProp** library's Peng-Robinson backend [1,2]. The present Peng-Robinson fluid model implementation (CPenRobinson.cpp file) requires '_Specific heat ratio_' (_gamma_) as an input which is not always possible to know in advance, especially for organic fluids (refrigerants).; The fluid model (titled as **PR_COOLPROP_GAS** in config file) in the proposed branch is completely free of any '_gamma_' in particular functions and allows of utilizing the spatially variable of isobaric and isochoric specific heats. The full set of available fluids is presented in the **config_template.cfg** file. One must be aware that the reviewed fluid model assumes imposing pure substance in gas phase (no mixtures or multiphase flows). The implemented fluid model improves the thermodynamic consistency however there is performance penalty related to algorithmic overhead. . 1. http://coolprop.org/; 2. https://github.com/CoolProp/CoolProp. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [+ ] I am submitting my contribution to the develop branch.; - [+ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ +] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ +] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402
https://github.com/su2code/SU2/pull/1404:1078,Deployability,update,updated,1078,"Hi all,. I made the ENUM_TURB_MODEL an enum class. I will add a few other small things in here. In case you have some minor cleanup commit feel free to push in here. Also made some turbSA+SST functions final where it was override previously. ## Related Work; #1220 #1242 and probably some others on the road to enum class. @suargi i hope this will not interfere to heavily with your work on the SA model things . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1404
https://github.com/su2code/SU2/pull/1404:1005,Testability,test,test,1005,"Hi all,. I made the ENUM_TURB_MODEL an enum class. I will add a few other small things in here. In case you have some minor cleanup commit feel free to push in here. Also made some turbSA+SST functions final where it was override previously. ## Related Work; #1220 #1242 and probably some others on the road to enum class. @suargi i hope this will not interfere to heavily with your work on the SA model things . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1404
https://github.com/su2code/SU2/pull/1404:585,Usability,guid,guide,585,"Hi all,. I made the ENUM_TURB_MODEL an enum class. I will add a few other small things in here. In case you have some minor cleanup commit feel free to push in here. Also made some turbSA+SST functions final where it was override previously. ## Related Work; #1220 #1242 and probably some others on the road to enum class. @suargi i hope this will not interfere to heavily with your work on the SA model things . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1404
https://github.com/su2code/SU2/pull/1404:876,Usability,simpl,simply,876,"Hi all,. I made the ENUM_TURB_MODEL an enum class. I will add a few other small things in here. In case you have some minor cleanup commit feel free to push in here. Also made some turbSA+SST functions final where it was override previously. ## Related Work; #1220 #1242 and probably some others on the road to enum class. @suargi i hope this will not interfere to heavily with your work on the SA model things . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1404
https://github.com/su2code/SU2/pull/1405:21,Deployability,Update,Updated,21,"## Proposed Changes; Updated Xcode to latest version of develop.; Also re-organized so the files are in ABC order / match Finder so its easier to find things. Thats most of the file diff. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1405
https://github.com/su2code/SU2/pull/1405:864,Deployability,update,updated,864,"## Proposed Changes; Updated Xcode to latest version of develop.; Also re-organized so the files are in ABC order / match Finder so its easier to find things. Thats most of the file diff. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1405
https://github.com/su2code/SU2/pull/1405:788,Testability,test,test,788,"## Proposed Changes; Updated Xcode to latest version of develop.; Also re-organized so the files are in ABC order / match Finder so its easier to find things. Thats most of the file diff. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1405
https://github.com/su2code/SU2/pull/1405:362,Usability,guid,guide,362,"## Proposed Changes; Updated Xcode to latest version of develop.; Also re-organized so the files are in ABC order / match Finder so its easier to find things. Thats most of the file diff. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1405
https://github.com/su2code/SU2/pull/1405:655,Usability,simpl,simply,655,"## Proposed Changes; Updated Xcode to latest version of develop.; Also re-organized so the files are in ABC order / match Finder so its easier to find things. Thats most of the file diff. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1405
https://github.com/su2code/SU2/issues/1406:107,Testability,Test,Test,107,"Hi everyone. I am working in SU2. I want to find the hotspot of Euler solver code () in SU2. knew to run a Test case Inviscid Bump in a Channel (A simulation of internal, inviscid flow through a 2D geometry). Have anyone worked for profiling of SU2 already ? kindly share your experience on the same.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1406
https://github.com/su2code/SU2/issues/1407:202,Availability,error,errors,202,I have opened Su2_CFD module in debug mode (linux - command line ). I can step through line by line by giving step command of a test case. I could removed the header files dependencies. But i am facing errors with Class . Is it possible to make standalone program of SU2 test case without any dependency ? Is it possible to segregate the test case code alone from SU2 ?. kindly share your knowledge on this .,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1407
https://github.com/su2code/SU2/issues/1407:172,Integrability,depend,dependencies,172,I have opened Su2_CFD module in debug mode (linux - command line ). I can step through line by line by giving step command of a test case. I could removed the header files dependencies. But i am facing errors with Class . Is it possible to make standalone program of SU2 test case without any dependency ? Is it possible to segregate the test case code alone from SU2 ?. kindly share your knowledge on this .,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1407
https://github.com/su2code/SU2/issues/1407:293,Integrability,depend,dependency,293,I have opened Su2_CFD module in debug mode (linux - command line ). I can step through line by line by giving step command of a test case. I could removed the header files dependencies. But i am facing errors with Class . Is it possible to make standalone program of SU2 test case without any dependency ? Is it possible to segregate the test case code alone from SU2 ?. kindly share your knowledge on this .,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1407
https://github.com/su2code/SU2/issues/1407:128,Testability,test,test,128,I have opened Su2_CFD module in debug mode (linux - command line ). I can step through line by line by giving step command of a test case. I could removed the header files dependencies. But i am facing errors with Class . Is it possible to make standalone program of SU2 test case without any dependency ? Is it possible to segregate the test case code alone from SU2 ?. kindly share your knowledge on this .,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1407
https://github.com/su2code/SU2/issues/1407:271,Testability,test,test,271,I have opened Su2_CFD module in debug mode (linux - command line ). I can step through line by line by giving step command of a test case. I could removed the header files dependencies. But i am facing errors with Class . Is it possible to make standalone program of SU2 test case without any dependency ? Is it possible to segregate the test case code alone from SU2 ?. kindly share your knowledge on this .,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1407
https://github.com/su2code/SU2/issues/1407:338,Testability,test,test,338,I have opened Su2_CFD module in debug mode (linux - command line ). I can step through line by line by giving step command of a test case. I could removed the header files dependencies. But i am facing errors with Class . Is it possible to make standalone program of SU2 test case without any dependency ? Is it possible to segregate the test case code alone from SU2 ?. kindly share your knowledge on this .,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1407
https://github.com/su2code/SU2/issues/1408:154,Availability,avail,available,154,I could find the config_structure.hpp file content from net ( https://codedocs.xyz/talbring/SU2/config__structure_8hpp_source.html ) but there is no code available for config_structure.inl,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1408
https://github.com/su2code/SU2/issues/1410:18,Integrability,wrap,wrap,18,"Is there a way to wrap SU2 code in a namespace quickly? When I try to add new header files from another library, the SU2 constants and variables often conflict.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1410
https://github.com/su2code/SU2/issues/1410:135,Modifiability,variab,variables,135,"Is there a way to wrap SU2 code in a namespace quickly? When I try to add new header files from another library, the SU2 constants and variables often conflict.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1410
https://github.com/su2code/SU2/pull/1411:1323,Availability,Down,Down,1323," to this pull request. ## Short history summary; Originally the idea behind such an approach is given by @clarkpede in [here](https://github.com/su2code/SU2/issues/992#issuecomment-652446915).; The code implementation was suggested by @pcarruscag in [here](https://github.com/su2code/SU2/pull/1066#discussion_r470975915).; For the user interface, this is being or was discussed in [here](https://github.com/su2code/SU2/issues/1364#issue-981474153). Some time ago, I made a PR #1066 to correct the SA model in SU2. Further I had the intention to implement the above presented approach to the SA for that pull request. However since the the presented approach can also be applied to the [SST](https://github.com/su2code/SU2/discussions/1403#discussion-3625259) or any turbulence model, I decided to create a new pull request. _Please note that this is a very draft pull request, it is not meant to work at all._. ## Documentation; Down below I will explain the ""theory"" behind it as well as the code structure that I will try to follow, just in case someone wants to replicate it for the SST. Regarding the user interface, I did not work on that yet. I will address it at the end. ### Theory; The Spalart-Allamaras correction/variation models to be implemented in SU2 are listed below. One can find a detailed description for example in [NASA TMR website](https://turbmodels.larc.nasa.gov/spalart.html).; - Spalart-Allmaras standard; - Spalart-Allmaras negative; - Spalart-Allmaras **yes** ft2 term; - Spalart-Allmaras mixing layer compressibility correction; - Spalart-Allmaras Edwards modification; - Spalart-Allmaras QCR-2000. The first step is to identify the core, i.e., the mathematical formulation that is shared/common between all of them. Below I provide a very short description of their main characteristics. #### Spalart-Allmaras standard; In the literature one can find a correction that sets the ft2-term to zero. However, the current baseline model in SU2 sets this ft2-term to zero. As ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411
https://github.com/su2code/SU2/pull/1411:3875,Availability,error,error,3875,"ied to prevent it from acquiring negative values. When $\tilde \nu$ is negative a slightly different integral equation is solved. The viscous fluxes are redefined as well. The boundary conditions are the same as for the standard S-A. #### Spalart-Allmaras nonzero ft2 term; This is the approach corresponds to the faithful baseline. The equations are the same as for the ""baseline"" version (SA), except we take the term $f_{t2}$ into account. #### Spalart-Allmaras mixing layer compressibility correction; This version is the same as for the ""baseline"" version except that an additional term is included on the right hand side of the equation. #### Spalart-Allmaras Edwards modification; This version is the same as for the ""baseline"" version, except that $f_{t2}$ is ignored, and two variables are redefined: the modified vorticity $\tilde{S}$ and $r$. Note that this correction is not compatible with the negative SA model. Since there is no literature on how to handle both corrections simultaneously, the community decision was to prompt an error when trying to use them. #### Spalart-Allmaras QCR-2000; The QCR correction modifies the turbulent stresses definition. ### Code structure; The approach that I decided to follow is:; The baseline/standalone SA class will have several templates parameters. Each of them will correspond to one of those variables that are subject to change in a SA correction/variation. Then, when creating the SA turbulence model, one just needs to replace each of these templates by the appropriate class. For those corrections/variations that just introduce an additional source term, I think it is better to implement them using decorators. Hence multiple corrections/variations introducing source terms can be simultaneously used. Here is a minimal example:. ```c++; template<class ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411
https://github.com/su2code/SU2/pull/1411:6556,Deployability,update,updated,6556,"ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411
https://github.com/su2code/SU2/pull/1411:730,Integrability,interface,interface,730,"## Pull request description; The idea of this pull request is to provide a new code structure to implement the turbulence models in SU2. In the new approach, ""all"" variations/correction from a turbulence model should be compatible with each other and the user can use them simultaneously. Most of these variations/corrections only affect to the source terms, thus it forms the main contribution to this pull request. ## Short history summary; Originally the idea behind such an approach is given by @clarkpede in [here](https://github.com/su2code/SU2/issues/992#issuecomment-652446915).; The code implementation was suggested by @pcarruscag in [here](https://github.com/su2code/SU2/pull/1066#discussion_r470975915).; For the user interface, this is being or was discussed in [here](https://github.com/su2code/SU2/issues/1364#issue-981474153). Some time ago, I made a PR #1066 to correct the SA model in SU2. Further I had the intention to implement the above presented approach to the SA for that pull request. However since the the presented approach can also be applied to the [SST](https://github.com/su2code/SU2/discussions/1403#discussion-3625259) or any turbulence model, I decided to create a new pull request. _Please note that this is a very draft pull request, it is not meant to work at all._. ## Documentation; Down below I will explain the ""theory"" behind it as well as the code structure that I will try to follow, just in case someone wants to replicate it for the SST. Regarding the user interface, I did not work on that yet. I will address it at the end. ### Theory; The Spalart-Allamaras correction/variation models to be implemented in SU2 are listed below. One can find a detailed description for example in [NASA TMR website](https://turbmodels.larc.nasa.gov/spalart.html).; - Spalart-Allmaras standard; - Spalart-Allmaras negative; - Spalart-Allmaras **yes** ft2 term; - Spalart-Allmaras mixing layer compressibility correction; - Spalart-Allmaras Edwards modification; - Spalar",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411
https://github.com/su2code/SU2/pull/1411:1504,Integrability,interface,interface,1504,"[here](https://github.com/su2code/SU2/issues/992#issuecomment-652446915).; The code implementation was suggested by @pcarruscag in [here](https://github.com/su2code/SU2/pull/1066#discussion_r470975915).; For the user interface, this is being or was discussed in [here](https://github.com/su2code/SU2/issues/1364#issue-981474153). Some time ago, I made a PR #1066 to correct the SA model in SU2. Further I had the intention to implement the above presented approach to the SA for that pull request. However since the the presented approach can also be applied to the [SST](https://github.com/su2code/SU2/discussions/1403#discussion-3625259) or any turbulence model, I decided to create a new pull request. _Please note that this is a very draft pull request, it is not meant to work at all._. ## Documentation; Down below I will explain the ""theory"" behind it as well as the code structure that I will try to follow, just in case someone wants to replicate it for the SST. Regarding the user interface, I did not work on that yet. I will address it at the end. ### Theory; The Spalart-Allamaras correction/variation models to be implemented in SU2 are listed below. One can find a detailed description for example in [NASA TMR website](https://turbmodels.larc.nasa.gov/spalart.html).; - Spalart-Allmaras standard; - Spalart-Allmaras negative; - Spalart-Allmaras **yes** ft2 term; - Spalart-Allmaras mixing layer compressibility correction; - Spalart-Allmaras Edwards modification; - Spalart-Allmaras QCR-2000. The first step is to identify the core, i.e., the mathematical formulation that is shared/common between all of them. Below I provide a very short description of their main characteristics. #### Spalart-Allmaras standard; In the literature one can find a correction that sets the ft2-term to zero. However, the current baseline model in SU2 sets this ft2-term to zero. As discussed in [here](https://github.com/su2code/SU2/issues/1364#issuecomment-916890178) in order to keep compatibility w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411
https://github.com/su2code/SU2/pull/1411:2743,Modifiability,variab,variable,2743,"ample in [NASA TMR website](https://turbmodels.larc.nasa.gov/spalart.html).; - Spalart-Allmaras standard; - Spalart-Allmaras negative; - Spalart-Allmaras **yes** ft2 term; - Spalart-Allmaras mixing layer compressibility correction; - Spalart-Allmaras Edwards modification; - Spalart-Allmaras QCR-2000. The first step is to identify the core, i.e., the mathematical formulation that is shared/common between all of them. Below I provide a very short description of their main characteristics. #### Spalart-Allmaras standard; In the literature one can find a correction that sets the ft2-term to zero. However, the current baseline model in SU2 sets this ft2-term to zero. As discussed in [here](https://github.com/su2code/SU2/issues/1364#issuecomment-916890178) in order to keep compatibility with previous SU2 versions results it is preferable to keep the current nomenclature, i.e., SA will refer to the SA-noft2 variant. #### Spalart-Allmaras negative; The model is the same as the ""baseline"" version when the turbulence variable $\tilde \nu$ is greater than or equal to zero. The modified vorticity is modified to prevent it from acquiring negative values. When $\tilde \nu$ is negative a slightly different integral equation is solved. The viscous fluxes are redefined as well. The boundary conditions are the same as for the standard S-A. #### Spalart-Allmaras nonzero ft2 term; This is the approach corresponds to the faithful baseline. The equations are the same as for the ""baseline"" version (SA), except we take the term $f_{t2}$ into account. #### Spalart-Allmaras mixing layer compressibility correction; This version is the same as for the ""baseline"" version except that an additional term is included on the right hand side of the equation. #### Spalart-Allmaras Edwards modification; This version is the same as for the ""baseline"" version, except that $f_{t2}$ is ignored, and two variables are redefined: the modified vorticity $\tilde{S}$ and $r$. Note that this correction is not com",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411
https://github.com/su2code/SU2/pull/1411:3615,Modifiability,variab,variables,3615,"rrent nomenclature, i.e., SA will refer to the SA-noft2 variant. #### Spalart-Allmaras negative; The model is the same as the ""baseline"" version when the turbulence variable $\tilde \nu$ is greater than or equal to zero. The modified vorticity is modified to prevent it from acquiring negative values. When $\tilde \nu$ is negative a slightly different integral equation is solved. The viscous fluxes are redefined as well. The boundary conditions are the same as for the standard S-A. #### Spalart-Allmaras nonzero ft2 term; This is the approach corresponds to the faithful baseline. The equations are the same as for the ""baseline"" version (SA), except we take the term $f_{t2}$ into account. #### Spalart-Allmaras mixing layer compressibility correction; This version is the same as for the ""baseline"" version except that an additional term is included on the right hand side of the equation. #### Spalart-Allmaras Edwards modification; This version is the same as for the ""baseline"" version, except that $f_{t2}$ is ignored, and two variables are redefined: the modified vorticity $\tilde{S}$ and $r$. Note that this correction is not compatible with the negative SA model. Since there is no literature on how to handle both corrections simultaneously, the community decision was to prompt an error when trying to use them. #### Spalart-Allmaras QCR-2000; The QCR correction modifies the turbulent stresses definition. ### Code structure; The approach that I decided to follow is:; The baseline/standalone SA class will have several templates parameters. Each of them will correspond to one of those variables that are subject to change in a SA correction/variation. Then, when creating the SA turbulence model, one just needs to replace each of these templates by the appropriate class. For those corrections/variations that just introduce an additional source term, I think it is better to implement them using decorators. Hence multiple corrections/variations introducing source terms can be s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411
https://github.com/su2code/SU2/pull/1411:4182,Modifiability,variab,variables,4182," for the ""baseline"" version (SA), except we take the term $f_{t2}$ into account. #### Spalart-Allmaras mixing layer compressibility correction; This version is the same as for the ""baseline"" version except that an additional term is included on the right hand side of the equation. #### Spalart-Allmaras Edwards modification; This version is the same as for the ""baseline"" version, except that $f_{t2}$ is ignored, and two variables are redefined: the modified vorticity $\tilde{S}$ and $r$. Note that this correction is not compatible with the negative SA model. Since there is no literature on how to handle both corrections simultaneously, the community decision was to prompt an error when trying to use them. #### Spalart-Allmaras QCR-2000; The QCR correction modifies the turbulent stresses definition. ### Code structure; The approach that I decided to follow is:; The baseline/standalone SA class will have several templates parameters. Each of them will correspond to one of those variables that are subject to change in a SA correction/variation. Then, when creating the SA turbulence model, one just needs to replace each of these templates by the appropriate class. For those corrections/variations that just introduce an additional source term, I think it is better to implement them using decorators. Hence multiple corrections/variations introducing source terms can be simultaneously used. Here is a minimal example:. ```c++; template<class ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Ed",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411
https://github.com/su2code/SU2/pull/1411:5312,Modifiability,config,config,5312,"ne just needs to replace each of these templates by the appropriate class. For those corrections/variations that just introduce an additional source term, I think it is better to implement them using decorators. Hence multiple corrections/variations introducing source terms can be simultaneously used. Here is a minimal example:. ```c++; template<class ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411
https://github.com/su2code/SU2/pull/1411:6483,Testability,test,test,6483,"ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411
https://github.com/su2code/SU2/pull/1411:6354,Usability,simpl,simply,6354,"ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411
https://github.com/su2code/SU2/pull/1412:552,Deployability,update,updated,552,"This PR introduces a quick fix for the output routine. It allows to print grid velocities also if the new mesh solver is used. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1412
https://github.com/su2code/SU2/pull/1412:46,Integrability,rout,routine,46,"This PR introduces a quick fix for the output routine. It allows to print grid velocities also if the new mesh solver is used. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1412
https://github.com/su2code/SU2/pull/1412:479,Testability,test,test,479,"This PR introduces a quick fix for the output routine. It allows to print grid velocities also if the new mesh solver is used. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1412
https://github.com/su2code/SU2/pull/1412:350,Usability,simpl,simply,350,"This PR introduces a quick fix for the output routine. It allows to print grid velocities also if the new mesh solver is used. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1412
https://github.com/su2code/SU2/pull/1413:1323,Availability,Down,Down,1323," to this pull request. ## Short history summary; Originally the idea behind such an approach is given by @clarkpede in [here](https://github.com/su2code/SU2/issues/992#issuecomment-652446915).; The code implementation was suggested by @pcarruscag in [here](https://github.com/su2code/SU2/pull/1066#discussion_r470975915).; For the user interface, this is being or was discussed in [here](https://github.com/su2code/SU2/issues/1364#issue-981474153). Some time ago, I made a PR #1066 to correct the SA model in SU2. Further I had the intention to implement the above presented approach to the SA for that pull request. However since the the presented approach can also be applied to the [SST](https://github.com/su2code/SU2/discussions/1403#discussion-3625259) or any turbulence model, I decided to create a new pull request. _Please note that this is a very draft pull request, it is not meant to work at all._. ## Documentation; Down below I will explain the ""theory"" behind it as well as the code structure that I will try to follow, just in case someone wants to replicate it for the SST. Regarding the user interface, I did not work on that yet. I will address it at the end. ### Theory; The Spalart-Allamaras correction/variation models to be implemented in SU2 are listed below. One can find a detailed description for example in [NASA TMR website](https://turbmodels.larc.nasa.gov/spalart.html).; - Spalart-Allmaras standard; - Spalart-Allmaras negative; - Spalart-Allmaras **yes** ft2 term; - Spalart-Allmaras mixing layer compressibility correction; - Spalart-Allmaras Edwards modification; - Spalart-Allmaras QCR-2000. The first step is to identify the core, i.e., the mathematical formulation that is shared/common between all of them. Below I provide a very short description of their main characteristics. #### Spalart-Allmaras standard; In the literature one can find a correction that sets the ft2-term to zero. However, the current baseline model in SU2 sets this ft2-term to zero. As ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413
https://github.com/su2code/SU2/pull/1413:3875,Availability,error,error,3875,"ied to prevent it from acquiring negative values. When $\tilde \nu$ is negative a slightly different integral equation is solved. The viscous fluxes are redefined as well. The boundary conditions are the same as for the standard S-A. #### Spalart-Allmaras nonzero ft2 term; This is the approach corresponds to the faithful baseline. The equations are the same as for the ""baseline"" version (SA), except we take the term $f_{t2}$ into account. #### Spalart-Allmaras mixing layer compressibility correction; This version is the same as for the ""baseline"" version except that an additional term is included on the right hand side of the equation. #### Spalart-Allmaras Edwards modification; This version is the same as for the ""baseline"" version, except that $f_{t2}$ is ignored, and two variables are redefined: the modified vorticity $\tilde{S}$ and $r$. Note that this correction is not compatible with the negative SA model. Since there is no literature on how to handle both corrections simultaneously, the community decision was to prompt an error when trying to use them. #### Spalart-Allmaras QCR-2000; The QCR correction modifies the turbulent stresses definition. ### Code structure; The approach that I decided to follow is:; The baseline/standalone SA class will have several templates parameters. Each of them will correspond to one of those variables that are subject to change in a SA correction/variation. Then, when creating the SA turbulence model, one just needs to replace each of these templates by the appropriate class. For those corrections/variations that just introduce an additional source term, I think it is better to implement them using decorators. Hence multiple corrections/variations introducing source terms can be simultaneously used. Here is a minimal example:. :bangbang: IMPORTANT: the following code served as a first draft and orientation. The final version has slightly changed to improve efficiency, reusability and readability. :bangbang:. ```c++; template<cl",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413
https://github.com/su2code/SU2/pull/1413:6741,Deployability,update,updated,6741,"ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413
https://github.com/su2code/SU2/pull/1413:730,Integrability,interface,interface,730,"## Pull request description; The idea of this pull request is to provide a new code structure to implement the turbulence models in SU2. In the new approach, ""all"" variations/correction from a turbulence model should be compatible with each other and the user can use them simultaneously. Most of these variations/corrections only affect to the source terms, thus it forms the main contribution to this pull request. ## Short history summary; Originally the idea behind such an approach is given by @clarkpede in [here](https://github.com/su2code/SU2/issues/992#issuecomment-652446915).; The code implementation was suggested by @pcarruscag in [here](https://github.com/su2code/SU2/pull/1066#discussion_r470975915).; For the user interface, this is being or was discussed in [here](https://github.com/su2code/SU2/issues/1364#issue-981474153). Some time ago, I made a PR #1066 to correct the SA model in SU2. Further I had the intention to implement the above presented approach to the SA for that pull request. However since the the presented approach can also be applied to the [SST](https://github.com/su2code/SU2/discussions/1403#discussion-3625259) or any turbulence model, I decided to create a new pull request. _Please note that this is a very draft pull request, it is not meant to work at all._. ## Documentation; Down below I will explain the ""theory"" behind it as well as the code structure that I will try to follow, just in case someone wants to replicate it for the SST. Regarding the user interface, I did not work on that yet. I will address it at the end. ### Theory; The Spalart-Allamaras correction/variation models to be implemented in SU2 are listed below. One can find a detailed description for example in [NASA TMR website](https://turbmodels.larc.nasa.gov/spalart.html).; - Spalart-Allmaras standard; - Spalart-Allmaras negative; - Spalart-Allmaras **yes** ft2 term; - Spalart-Allmaras mixing layer compressibility correction; - Spalart-Allmaras Edwards modification; - Spalar",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413
https://github.com/su2code/SU2/pull/1413:1504,Integrability,interface,interface,1504,"[here](https://github.com/su2code/SU2/issues/992#issuecomment-652446915).; The code implementation was suggested by @pcarruscag in [here](https://github.com/su2code/SU2/pull/1066#discussion_r470975915).; For the user interface, this is being or was discussed in [here](https://github.com/su2code/SU2/issues/1364#issue-981474153). Some time ago, I made a PR #1066 to correct the SA model in SU2. Further I had the intention to implement the above presented approach to the SA for that pull request. However since the the presented approach can also be applied to the [SST](https://github.com/su2code/SU2/discussions/1403#discussion-3625259) or any turbulence model, I decided to create a new pull request. _Please note that this is a very draft pull request, it is not meant to work at all._. ## Documentation; Down below I will explain the ""theory"" behind it as well as the code structure that I will try to follow, just in case someone wants to replicate it for the SST. Regarding the user interface, I did not work on that yet. I will address it at the end. ### Theory; The Spalart-Allamaras correction/variation models to be implemented in SU2 are listed below. One can find a detailed description for example in [NASA TMR website](https://turbmodels.larc.nasa.gov/spalart.html).; - Spalart-Allmaras standard; - Spalart-Allmaras negative; - Spalart-Allmaras **yes** ft2 term; - Spalart-Allmaras mixing layer compressibility correction; - Spalart-Allmaras Edwards modification; - Spalart-Allmaras QCR-2000. The first step is to identify the core, i.e., the mathematical formulation that is shared/common between all of them. Below I provide a very short description of their main characteristics. #### Spalart-Allmaras standard; In the literature one can find a correction that sets the ft2-term to zero. However, the current baseline model in SU2 sets this ft2-term to zero. As discussed in [here](https://github.com/su2code/SU2/issues/1364#issuecomment-916890178) in order to keep compatibility w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413
https://github.com/su2code/SU2/pull/1413:2743,Modifiability,variab,variable,2743,"ample in [NASA TMR website](https://turbmodels.larc.nasa.gov/spalart.html).; - Spalart-Allmaras standard; - Spalart-Allmaras negative; - Spalart-Allmaras **yes** ft2 term; - Spalart-Allmaras mixing layer compressibility correction; - Spalart-Allmaras Edwards modification; - Spalart-Allmaras QCR-2000. The first step is to identify the core, i.e., the mathematical formulation that is shared/common between all of them. Below I provide a very short description of their main characteristics. #### Spalart-Allmaras standard; In the literature one can find a correction that sets the ft2-term to zero. However, the current baseline model in SU2 sets this ft2-term to zero. As discussed in [here](https://github.com/su2code/SU2/issues/1364#issuecomment-916890178) in order to keep compatibility with previous SU2 versions results it is preferable to keep the current nomenclature, i.e., SA will refer to the SA-noft2 variant. #### Spalart-Allmaras negative; The model is the same as the ""baseline"" version when the turbulence variable $\tilde \nu$ is greater than or equal to zero. The modified vorticity is modified to prevent it from acquiring negative values. When $\tilde \nu$ is negative a slightly different integral equation is solved. The viscous fluxes are redefined as well. The boundary conditions are the same as for the standard S-A. #### Spalart-Allmaras nonzero ft2 term; This is the approach corresponds to the faithful baseline. The equations are the same as for the ""baseline"" version (SA), except we take the term $f_{t2}$ into account. #### Spalart-Allmaras mixing layer compressibility correction; This version is the same as for the ""baseline"" version except that an additional term is included on the right hand side of the equation. #### Spalart-Allmaras Edwards modification; This version is the same as for the ""baseline"" version, except that $f_{t2}$ is ignored, and two variables are redefined: the modified vorticity $\tilde{S}$ and $r$. Note that this correction is not com",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413
https://github.com/su2code/SU2/pull/1413:3615,Modifiability,variab,variables,3615,"rrent nomenclature, i.e., SA will refer to the SA-noft2 variant. #### Spalart-Allmaras negative; The model is the same as the ""baseline"" version when the turbulence variable $\tilde \nu$ is greater than or equal to zero. The modified vorticity is modified to prevent it from acquiring negative values. When $\tilde \nu$ is negative a slightly different integral equation is solved. The viscous fluxes are redefined as well. The boundary conditions are the same as for the standard S-A. #### Spalart-Allmaras nonzero ft2 term; This is the approach corresponds to the faithful baseline. The equations are the same as for the ""baseline"" version (SA), except we take the term $f_{t2}$ into account. #### Spalart-Allmaras mixing layer compressibility correction; This version is the same as for the ""baseline"" version except that an additional term is included on the right hand side of the equation. #### Spalart-Allmaras Edwards modification; This version is the same as for the ""baseline"" version, except that $f_{t2}$ is ignored, and two variables are redefined: the modified vorticity $\tilde{S}$ and $r$. Note that this correction is not compatible with the negative SA model. Since there is no literature on how to handle both corrections simultaneously, the community decision was to prompt an error when trying to use them. #### Spalart-Allmaras QCR-2000; The QCR correction modifies the turbulent stresses definition. ### Code structure; The approach that I decided to follow is:; The baseline/standalone SA class will have several templates parameters. Each of them will correspond to one of those variables that are subject to change in a SA correction/variation. Then, when creating the SA turbulence model, one just needs to replace each of these templates by the appropriate class. For those corrections/variations that just introduce an additional source term, I think it is better to implement them using decorators. Hence multiple corrections/variations introducing source terms can be s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413
https://github.com/su2code/SU2/pull/1413:4182,Modifiability,variab,variables,4182," for the ""baseline"" version (SA), except we take the term $f_{t2}$ into account. #### Spalart-Allmaras mixing layer compressibility correction; This version is the same as for the ""baseline"" version except that an additional term is included on the right hand side of the equation. #### Spalart-Allmaras Edwards modification; This version is the same as for the ""baseline"" version, except that $f_{t2}$ is ignored, and two variables are redefined: the modified vorticity $\tilde{S}$ and $r$. Note that this correction is not compatible with the negative SA model. Since there is no literature on how to handle both corrections simultaneously, the community decision was to prompt an error when trying to use them. #### Spalart-Allmaras QCR-2000; The QCR correction modifies the turbulent stresses definition. ### Code structure; The approach that I decided to follow is:; The baseline/standalone SA class will have several templates parameters. Each of them will correspond to one of those variables that are subject to change in a SA correction/variation. Then, when creating the SA turbulence model, one just needs to replace each of these templates by the appropriate class. For those corrections/variations that just introduce an additional source term, I think it is better to implement them using decorators. Hence multiple corrections/variations introducing source terms can be simultaneously used. Here is a minimal example:. :bangbang: IMPORTANT: the following code served as a first draft and orientation. The final version has slightly changed to improve efficiency, reusability and readability. :bangbang:. ```c++; template<class ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413
https://github.com/su2code/SU2/pull/1413:5497,Modifiability,config,config,5497,"ent them using decorators. Hence multiple corrections/variations introducing source terms can be simultaneously used. Here is a minimal example:. :bangbang: IMPORTANT: the following code served as a first draft and orientation. The final version has slightly changed to improve efficiency, reusability and readability. :bangbang:. ```c++; template<class ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413
https://github.com/su2code/SU2/pull/1413:6668,Testability,test,test,6668,"ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413
https://github.com/su2code/SU2/pull/1413:6539,Usability,simpl,simply,6539,"ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413
https://github.com/su2code/SU2/issues/1414:963,Availability,Down,Download,963,"Summary; ========; The **fluid interface** connects RANS zones in such a way that flow can freely pass through it just as if they were a single RANS zone. We (@maxaehle, @BeckettZhou) observed convergence problems in cases where the meshes had ""boundary-layer-like"" high anisotropy at the fluid interface. However a singlezone simulation, for which the meshes are joined together, converged. Setup (.cfg, .su2); ===============; **Density for singlezone run with joined meshes, converged**:; ![singlezone-rho](https://user-images.githubusercontent.com/72806890/138854768-3f188819-c924-4025-9404-f5d58bfa6b7d.png); **Density for multizone run with separate meshes and fluid interface, diverged**:; ![multizone-rho](https://user-images.githubusercontent.com/72806890/138854792-6c71c0a9-0af7-402e-b65c-d7711e0245e1.png); **Mesh:**; ![Multizone_Mesh_Annotated](https://user-images.githubusercontent.com/72806890/138855444-8fd029bc-2f6d-4e94-b3da-a3c997ec418b.png); **Download link**: https://seafile.rlp.net/d/bb0fbb16eb414263b642/. In this issue I consider compressible flow around a circle at Re=1e6, Mach=0.15, using the SST turbulence model. The radial mesh has a boundary layer at the circle of radius 1 (adiabatic wall), and a ""boundary-layer-like"" structure around a circle of radius (approximately) 4. Having this ""boundary-layer-like"" structure does not make sense here, but in our project we later want to change the area `1<=radius<=4` to a ""porous material"" zone and this would introduce a boundary layer there. Both the [attached](https://seafile.rlp.net/d/bb0fbb16eb414263b642/) `issue_complicated.zip`, `issue_simplified.zip` contain subdirectories `singlezone`, `multizone`. I observed the problem best for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:3491,Availability,error,error,3491," I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:3609,Availability,error,error,3609," `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:2152,Energy Efficiency,adapt,adapted,2152,"circle of radius 1 (adiabatic wall), and a ""boundary-layer-like"" structure around a circle of radius (approximately) 4. Having this ""boundary-layer-like"" structure does not make sense here, but in our project we later want to change the area `1<=radius<=4` to a ""porous material"" zone and this would introduce a boundary layer there. Both the [attached](https://seafile.rlp.net/d/bb0fbb16eb414263b642/) `issue_complicated.zip`, `issue_simplified.zip` contain subdirectories `singlezone`, `multizone`. I observed the problem best for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In the singlezone setup, the whole mesh has been exported to `singlezone.su2`. The `singlezone.cfg` is `TestCases/rans/naca0012/turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed f",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:2714,Energy Efficiency,adapt,adapted,2714," for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In the singlezone setup, the whole mesh has been exported to `singlezone.su2`. The `singlezone.cfg` is `TestCases/rans/naca0012/turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; ======================",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:5005,Energy Efficiency,Green,Green-,5005,"gh I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multizone setup. - **General structure of the drivers**: Maybe there are relevant differences between `CSinglezoneDriver` and `CMultizoneDriver`, I don't know.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:31,Integrability,interface,interface,31,"Summary; ========; The **fluid interface** connects RANS zones in such a way that flow can freely pass through it just as if they were a single RANS zone. We (@maxaehle, @BeckettZhou) observed convergence problems in cases where the meshes had ""boundary-layer-like"" high anisotropy at the fluid interface. However a singlezone simulation, for which the meshes are joined together, converged. Setup (.cfg, .su2); ===============; **Density for singlezone run with joined meshes, converged**:; ![singlezone-rho](https://user-images.githubusercontent.com/72806890/138854768-3f188819-c924-4025-9404-f5d58bfa6b7d.png); **Density for multizone run with separate meshes and fluid interface, diverged**:; ![multizone-rho](https://user-images.githubusercontent.com/72806890/138854792-6c71c0a9-0af7-402e-b65c-d7711e0245e1.png); **Mesh:**; ![Multizone_Mesh_Annotated](https://user-images.githubusercontent.com/72806890/138855444-8fd029bc-2f6d-4e94-b3da-a3c997ec418b.png); **Download link**: https://seafile.rlp.net/d/bb0fbb16eb414263b642/. In this issue I consider compressible flow around a circle at Re=1e6, Mach=0.15, using the SST turbulence model. The radial mesh has a boundary layer at the circle of radius 1 (adiabatic wall), and a ""boundary-layer-like"" structure around a circle of radius (approximately) 4. Having this ""boundary-layer-like"" structure does not make sense here, but in our project we later want to change the area `1<=radius<=4` to a ""porous material"" zone and this would introduce a boundary layer there. Both the [attached](https://seafile.rlp.net/d/bb0fbb16eb414263b642/) `issue_complicated.zip`, `issue_simplified.zip` contain subdirectories `singlezone`, `multizone`. I observed the problem best for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:295,Integrability,interface,interface,295,"Summary; ========; The **fluid interface** connects RANS zones in such a way that flow can freely pass through it just as if they were a single RANS zone. We (@maxaehle, @BeckettZhou) observed convergence problems in cases where the meshes had ""boundary-layer-like"" high anisotropy at the fluid interface. However a singlezone simulation, for which the meshes are joined together, converged. Setup (.cfg, .su2); ===============; **Density for singlezone run with joined meshes, converged**:; ![singlezone-rho](https://user-images.githubusercontent.com/72806890/138854768-3f188819-c924-4025-9404-f5d58bfa6b7d.png); **Density for multizone run with separate meshes and fluid interface, diverged**:; ![multizone-rho](https://user-images.githubusercontent.com/72806890/138854792-6c71c0a9-0af7-402e-b65c-d7711e0245e1.png); **Mesh:**; ![Multizone_Mesh_Annotated](https://user-images.githubusercontent.com/72806890/138855444-8fd029bc-2f6d-4e94-b3da-a3c997ec418b.png); **Download link**: https://seafile.rlp.net/d/bb0fbb16eb414263b642/. In this issue I consider compressible flow around a circle at Re=1e6, Mach=0.15, using the SST turbulence model. The radial mesh has a boundary layer at the circle of radius 1 (adiabatic wall), and a ""boundary-layer-like"" structure around a circle of radius (approximately) 4. Having this ""boundary-layer-like"" structure does not make sense here, but in our project we later want to change the area `1<=radius<=4` to a ""porous material"" zone and this would introduce a boundary layer there. Both the [attached](https://seafile.rlp.net/d/bb0fbb16eb414263b642/) `issue_complicated.zip`, `issue_simplified.zip` contain subdirectories `singlezone`, `multizone`. I observed the problem best for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:673,Integrability,interface,interface,673,"Summary; ========; The **fluid interface** connects RANS zones in such a way that flow can freely pass through it just as if they were a single RANS zone. We (@maxaehle, @BeckettZhou) observed convergence problems in cases where the meshes had ""boundary-layer-like"" high anisotropy at the fluid interface. However a singlezone simulation, for which the meshes are joined together, converged. Setup (.cfg, .su2); ===============; **Density for singlezone run with joined meshes, converged**:; ![singlezone-rho](https://user-images.githubusercontent.com/72806890/138854768-3f188819-c924-4025-9404-f5d58bfa6b7d.png); **Density for multizone run with separate meshes and fluid interface, diverged**:; ![multizone-rho](https://user-images.githubusercontent.com/72806890/138854792-6c71c0a9-0af7-402e-b65c-d7711e0245e1.png); **Mesh:**; ![Multizone_Mesh_Annotated](https://user-images.githubusercontent.com/72806890/138855444-8fd029bc-2f6d-4e94-b3da-a3c997ec418b.png); **Download link**: https://seafile.rlp.net/d/bb0fbb16eb414263b642/. In this issue I consider compressible flow around a circle at Re=1e6, Mach=0.15, using the SST turbulence model. The radial mesh has a boundary layer at the circle of radius 1 (adiabatic wall), and a ""boundary-layer-like"" structure around a circle of radius (approximately) 4. Having this ""boundary-layer-like"" structure does not make sense here, but in our project we later want to change the area `1<=radius<=4` to a ""porous material"" zone and this would introduce a boundary layer there. Both the [attached](https://seafile.rlp.net/d/bb0fbb16eb414263b642/) `issue_complicated.zip`, `issue_simplified.zip` contain subdirectories `singlezone`, `multizone`. I observed the problem best for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:3652,Integrability,interface,interface,3652,", filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:3827,Integrability,interface,interface,3827,", filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:4258,Integrability,interface,interface,4258,"veloper meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multiz",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:4575,Integrability,interface,interface,4575,"gh I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multizone setup. - **General structure of the drivers**: Maybe there are relevant differences between `CSinglezoneDriver` and `CMultizoneDriver`, I don't know.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:2152,Modifiability,adapt,adapted,2152,"circle of radius 1 (adiabatic wall), and a ""boundary-layer-like"" structure around a circle of radius (approximately) 4. Having this ""boundary-layer-like"" structure does not make sense here, but in our project we later want to change the area `1<=radius<=4` to a ""porous material"" zone and this would introduce a boundary layer there. Both the [attached](https://seafile.rlp.net/d/bb0fbb16eb414263b642/) `issue_complicated.zip`, `issue_simplified.zip` contain subdirectories `singlezone`, `multizone`. I observed the problem best for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In the singlezone setup, the whole mesh has been exported to `singlezone.su2`. The `singlezone.cfg` is `TestCases/rans/naca0012/turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed f",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:2714,Modifiability,adapt,adapted,2714," for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In the singlezone setup, the whole mesh has been exported to `singlezone.su2`. The `singlezone.cfg` is `TestCases/rans/naca0012/turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; ======================",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:4390,Modifiability,variab,variables,4390,"veloper meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multiz",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:4535,Modifiability,variab,variables,4535,"gh I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multizone setup. - **General structure of the drivers**: Maybe there are relevant differences between `CSinglezoneDriver` and `CMultizoneDriver`, I don't know.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:4642,Modifiability,variab,variables,4642,"gh I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multizone setup. - **General structure of the drivers**: Maybe there are relevant differences between `CSinglezoneDriver` and `CMultizoneDriver`, I don't know.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:3089,Safety,detect,detected,3089," exported to `singlezone.su2`. The `singlezone.cfg` is `TestCases/rans/naca0012/turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:3140,Safety,detect,detected,3140,"turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:3597,Safety,detect,detected,3597,"es by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:4379,Security,access,access,4379,"veloper meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multiz",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:4524,Security,access,access,4524,"gh I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multizone setup. - **General structure of the drivers**: Maybe there are relevant differences between `CSinglezoneDriver` and `CMultizoneDriver`, I don't know.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:2100,Testability,Test,TestCases,2100,"the SST turbulence model. The radial mesh has a boundary layer at the circle of radius 1 (adiabatic wall), and a ""boundary-layer-like"" structure around a circle of radius (approximately) 4. Having this ""boundary-layer-like"" structure does not make sense here, but in our project we later want to change the area `1<=radius<=4` to a ""porous material"" zone and this would introduce a boundary layer there. Both the [attached](https://seafile.rlp.net/d/bb0fbb16eb414263b642/) `issue_complicated.zip`, `issue_simplified.zip` contain subdirectories `singlezone`, `multizone`. I observed the problem best for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In the singlezone setup, the whole mesh has been exported to `singlezone.su2`. The `singlezone.cfg` is `TestCases/rans/naca0012/turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has dive",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/issues/1414:3402,Testability,test,testcase,3402," 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of contr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414
https://github.com/su2code/SU2/pull/1417:81,Deployability,integrat,integration,81,"## Proposed Changes; Addition and cleanup of isothermal catalytic wall boundary, integration with rest of code. Code optimization of catalytic wall routines, removal of array allocations. Submitting this draft PR primarily to get comments on approach, style, not looking to PR into develop quite yet. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1417
https://github.com/su2code/SU2/pull/1417:1114,Deployability,update,updated,1114,"## Proposed Changes; Addition and cleanup of isothermal catalytic wall boundary, integration with rest of code. Code optimization of catalytic wall routines, removal of array allocations. Submitting this draft PR primarily to get comments on approach, style, not looking to PR into develop quite yet. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1417
https://github.com/su2code/SU2/pull/1417:81,Integrability,integrat,integration,81,"## Proposed Changes; Addition and cleanup of isothermal catalytic wall boundary, integration with rest of code. Code optimization of catalytic wall routines, removal of array allocations. Submitting this draft PR primarily to get comments on approach, style, not looking to PR into develop quite yet. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1417
https://github.com/su2code/SU2/pull/1417:148,Integrability,rout,routines,148,"## Proposed Changes; Addition and cleanup of isothermal catalytic wall boundary, integration with rest of code. Code optimization of catalytic wall routines, removal of array allocations. Submitting this draft PR primarily to get comments on approach, style, not looking to PR into develop quite yet. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1417
https://github.com/su2code/SU2/pull/1417:117,Performance,optimiz,optimization,117,"## Proposed Changes; Addition and cleanup of isothermal catalytic wall boundary, integration with rest of code. Code optimization of catalytic wall routines, removal of array allocations. Submitting this draft PR primarily to get comments on approach, style, not looking to PR into develop quite yet. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1417
https://github.com/su2code/SU2/pull/1417:1041,Testability,test,test,1041,"## Proposed Changes; Addition and cleanup of isothermal catalytic wall boundary, integration with rest of code. Code optimization of catalytic wall routines, removal of array allocations. Submitting this draft PR primarily to get comments on approach, style, not looking to PR into develop quite yet. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1417
https://github.com/su2code/SU2/pull/1417:621,Usability,guid,guide,621,"## Proposed Changes; Addition and cleanup of isothermal catalytic wall boundary, integration with rest of code. Code optimization of catalytic wall routines, removal of array allocations. Submitting this draft PR primarily to get comments on approach, style, not looking to PR into develop quite yet. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1417
https://github.com/su2code/SU2/pull/1417:912,Usability,simpl,simply,912,"## Proposed Changes; Addition and cleanup of isothermal catalytic wall boundary, integration with rest of code. Code optimization of catalytic wall routines, removal of array allocations. Submitting this draft PR primarily to get comments on approach, style, not looking to PR into develop quite yet. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1417
https://github.com/su2code/SU2/pull/1418:344,Deployability,update,updated,344,"## Pull request description; This pull request introduces a series of regression cases for the Spalart-Allmaras turbulence model variations and corrections:. - Baseline; - Negative; - Edwards; - Compressibility; - Compressibility and Edwards; - QCR2000; ; ~~The residuals on the python scripts are wrong. These values are temporary and will be updated once the regression tests are run on the Travis CI system.~~; Since this pull request does not introduce any code modification, the residuals on the python scripts have been updated on commit https://github.com/su2code/SU2/pull/1418/commits/1a1661f6cf51be9cdc3c642a7d0424016c7ea3fc with the Travis Cl (sim_vals (computed)) values. ## Related Work; These tests will be further used to verify the correct implementation of #1413 . - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418
https://github.com/su2code/SU2/pull/1418:526,Deployability,update,updated,526,"## Pull request description; This pull request introduces a series of regression cases for the Spalart-Allmaras turbulence model variations and corrections:. - Baseline; - Negative; - Edwards; - Compressibility; - Compressibility and Edwards; - QCR2000; ; ~~The residuals on the python scripts are wrong. These values are temporary and will be updated once the regression tests are run on the Travis CI system.~~; Since this pull request does not introduce any code modification, the residuals on the python scripts have been updated on commit https://github.com/su2code/SU2/pull/1418/commits/1a1661f6cf51be9cdc3c642a7d0424016c7ea3fc with the Travis Cl (sim_vals (computed)) values. ## Related Work; These tests will be further used to verify the correct implementation of #1413 . - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418
https://github.com/su2code/SU2/pull/1418:1189,Deployability,update,updated,1189,"## Pull request description; This pull request introduces a series of regression cases for the Spalart-Allmaras turbulence model variations and corrections:. - Baseline; - Negative; - Edwards; - Compressibility; - Compressibility and Edwards; - QCR2000; ; ~~The residuals on the python scripts are wrong. These values are temporary and will be updated once the regression tests are run on the Travis CI system.~~; Since this pull request does not introduce any code modification, the residuals on the python scripts have been updated on commit https://github.com/su2code/SU2/pull/1418/commits/1a1661f6cf51be9cdc3c642a7d0424016c7ea3fc with the Travis Cl (sim_vals (computed)) values. ## Related Work; These tests will be further used to verify the correct implementation of #1413 . - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418
https://github.com/su2code/SU2/pull/1418:372,Testability,test,tests,372,"## Pull request description; This pull request introduces a series of regression cases for the Spalart-Allmaras turbulence model variations and corrections:. - Baseline; - Negative; - Edwards; - Compressibility; - Compressibility and Edwards; - QCR2000; ; ~~The residuals on the python scripts are wrong. These values are temporary and will be updated once the regression tests are run on the Travis CI system.~~; Since this pull request does not introduce any code modification, the residuals on the python scripts have been updated on commit https://github.com/su2code/SU2/pull/1418/commits/1a1661f6cf51be9cdc3c642a7d0424016c7ea3fc with the Travis Cl (sim_vals (computed)) values. ## Related Work; These tests will be further used to verify the correct implementation of #1413 . - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418
https://github.com/su2code/SU2/pull/1418:706,Testability,test,tests,706,"## Pull request description; This pull request introduces a series of regression cases for the Spalart-Allmaras turbulence model variations and corrections:. - Baseline; - Negative; - Edwards; - Compressibility; - Compressibility and Edwards; - QCR2000; ; ~~The residuals on the python scripts are wrong. These values are temporary and will be updated once the regression tests are run on the Travis CI system.~~; Since this pull request does not introduce any code modification, the residuals on the python scripts have been updated on commit https://github.com/su2code/SU2/pull/1418/commits/1a1661f6cf51be9cdc3c642a7d0424016c7ea3fc with the Travis Cl (sim_vals (computed)) values. ## Related Work; These tests will be further used to verify the correct implementation of #1413 . - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418
https://github.com/su2code/SU2/pull/1418:1116,Testability,test,test,1116,"## Pull request description; This pull request introduces a series of regression cases for the Spalart-Allmaras turbulence model variations and corrections:. - Baseline; - Negative; - Edwards; - Compressibility; - Compressibility and Edwards; - QCR2000; ; ~~The residuals on the python scripts are wrong. These values are temporary and will be updated once the regression tests are run on the Travis CI system.~~; Since this pull request does not introduce any code modification, the residuals on the python scripts have been updated on commit https://github.com/su2code/SU2/pull/1418/commits/1a1661f6cf51be9cdc3c642a7d0424016c7ea3fc with the Travis Cl (sim_vals (computed)) values. ## Related Work; These tests will be further used to verify the correct implementation of #1413 . - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418
https://github.com/su2code/SU2/pull/1418:987,Usability,simpl,simply,987,"## Pull request description; This pull request introduces a series of regression cases for the Spalart-Allmaras turbulence model variations and corrections:. - Baseline; - Negative; - Edwards; - Compressibility; - Compressibility and Edwards; - QCR2000; ; ~~The residuals on the python scripts are wrong. These values are temporary and will be updated once the regression tests are run on the Travis CI system.~~; Since this pull request does not introduce any code modification, the residuals on the python scripts have been updated on commit https://github.com/su2code/SU2/pull/1418/commits/1a1661f6cf51be9cdc3c642a7d0424016c7ea3fc with the Travis Cl (sim_vals (computed)) values. ## Related Work; These tests will be further used to verify the correct implementation of #1413 . - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418
https://github.com/su2code/SU2/issues/1420:1871,Availability,error,errors,1871," machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -I/home/FDa/FDa045/programs/intel/2020_update4/mkl/include -I../externals/codi/include -I../externals/medi/include -I../externals/medi/src -ICommon/src -I../Common/src -I/work/A/openmpi/3.0.0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -m64 -pthread -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:3566,Availability,error,error,3566,".0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -m64 -pthread -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -DHAVE_MKL -DCODI_REVERSE_TYPE -MD -MQ SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -MF 'SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o.d' -o SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -c ../SU2_CFD/src/solvers/CTurbSolver.cpp; In file included from ../SU2_CFD/src/solvers/CTurbSolver.cpp:31:0:; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; CScalarSolver<VariableType>::CScalarSolver(bool conservative) : CSolver(), Conservative(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:3848,Availability,error,error,3848,"_PARMETIS -DHAVE_TECIO -DTECIOMPI -DHAVE_MKL -DCODI_REVERSE_TYPE -MD -MQ SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -MF 'SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o.d' -o SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -c ../SU2_CFD/src/solvers/CTurbSolver.cpp; In file included from ../SU2_CFD/src/solvers/CTurbSolver.cpp:31:0:; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; CScalarSolver<VariableType>::CScalarSolver(bool conservative) : CSolver(), Conservative(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:4021,Availability,error,error,4021,"urbSolver.cpp.o.d' -o SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -c ../SU2_CFD/src/solvers/CTurbSolver.cpp; In file included from ../SU2_CFD/src/solvers/CTurbSolver.cpp:31:0:; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; CScalarSolver<VariableType>::CScalarSolver(bool conservative) : CSolver(), Conservative(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; [726/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CEulerSolver.cpp.o; ninja: build stopped: subcomm",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:4456,Availability,error,error,4456,"nclude/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; CScalarSolver<VariableType>::CScalarSolver(bool conservative) : CSolver(), Conservative(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; [726/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CEulerSolver.cpp.o; ninja: build stopped: subcommand failed. **I suspect it got something to do with my GCC version. Since I can't update the system GCC, I tried to build the newer version of GCC locally and used it to build SU2. But then I encountered another systemic error that seem to be much more complicated (long errors, but one of them is..)**. > /home/FDa/FDa045/.local/lib64/libstdc++.so.6: no version information available (required by /usr/bin/swig) . I am happy if anybody could suggest me any",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:4674,Availability,error,error,4674,"ervative) : CSolver(), Conservative(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; [726/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CEulerSolver.cpp.o; ninja: build stopped: subcommand failed. **I suspect it got something to do with my GCC version. Since I can't update the system GCC, I tried to build the newer version of GCC locally and used it to build SU2. But then I encountered another systemic error that seem to be much more complicated (long errors, but one of them is..)**. > /home/FDa/FDa045/.local/lib64/libstdc++.so.6: no version information available (required by /usr/bin/swig) . I am happy if anybody could suggest me anything!!. **The remote server systems**; - OS: Linux (Red Hat Enterprise Linux Server 7.5 (Maipo)); - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [OpenMPI 3.0.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:4846,Availability,error,error,4846,"tive(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; [726/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CEulerSolver.cpp.o; ninja: build stopped: subcommand failed. **I suspect it got something to do with my GCC version. Since I can't update the system GCC, I tried to build the newer version of GCC locally and used it to build SU2. But then I encountered another systemic error that seem to be much more complicated (long errors, but one of them is..)**. > /home/FDa/FDa045/.local/lib64/libstdc++.so.6: no version information available (required by /usr/bin/swig) . I am happy if anybody could suggest me anything!!. **The remote server systems**; - OS: Linux (Red Hat Enterprise Linux Server 7.5 (Maipo)); - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [OpenMPI 3.0.0]; - SU2 Version: [e.g., v7.2.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:5289,Availability,error,error,5289,"tive(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; [726/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CEulerSolver.cpp.o; ninja: build stopped: subcommand failed. **I suspect it got something to do with my GCC version. Since I can't update the system GCC, I tried to build the newer version of GCC locally and used it to build SU2. But then I encountered another systemic error that seem to be much more complicated (long errors, but one of them is..)**. > /home/FDa/FDa045/.local/lib64/libstdc++.so.6: no version information available (required by /usr/bin/swig) . I am happy if anybody could suggest me anything!!. **The remote server systems**; - OS: Linux (Red Hat Enterprise Linux Server 7.5 (Maipo)); - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [OpenMPI 3.0.0]; - SU2 Version: [e.g., v7.2.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:5339,Availability,error,errors,5339,"tive(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; [726/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CEulerSolver.cpp.o; ninja: build stopped: subcommand failed. **I suspect it got something to do with my GCC version. Since I can't update the system GCC, I tried to build the newer version of GCC locally and used it to build SU2. But then I encountered another systemic error that seem to be much more complicated (long errors, but one of them is..)**. > /home/FDa/FDa045/.local/lib64/libstdc++.so.6: no version information available (required by /usr/bin/swig) . I am happy if anybody could suggest me anything!!. **The remote server systems**; - OS: Linux (Red Hat Enterprise Linux Server 7.5 (Maipo)); - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [OpenMPI 3.0.0]; - SU2 Version: [e.g., v7.2.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:5443,Availability,avail,available,5443,"tive(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; [726/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CEulerSolver.cpp.o; ninja: build stopped: subcommand failed. **I suspect it got something to do with my GCC version. Since I can't update the system GCC, I tried to build the newer version of GCC locally and used it to build SU2. But then I encountered another systemic error that seem to be much more complicated (long errors, but one of them is..)**. > /home/FDa/FDa045/.local/lib64/libstdc++.so.6: no version information available (required by /usr/bin/swig) . I am happy if anybody could suggest me anything!!. **The remote server systems**; - OS: Linux (Red Hat Enterprise Linux Server 7.5 (Maipo)); - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [OpenMPI 3.0.0]; - SU2 Version: [e.g., v7.2.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:82,Deployability,install,install,82,"Hi all! I am facing this issue when trying to do the ninja build.; I am trying to install SU2 on the remote server where I don't have root access. **Firstly, I cloned the latest repo (per Nov 3, 2021), and then run the following meson command.**; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:1650,Deployability,install,install,1650,"(GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -I/home/FDa/FDa045/programs/intel/2020_update4/mkl/include -I../externals/codi/include -I../externals/medi/include -I../externals/medi/s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:1724,Deployability,install,install,1724,"d 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -I/home/FDa/FDa045/programs/intel/2020_update4/mkl/include -I../externals/codi/include -I../externals/medi/include -I../externals/medi/src -ICommon/src -I../Common/src -I/work/A/openmpi/3.0.0_intel2018u2/include -pipe ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:1833,Deployability,install,install,1833," machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -I/home/FDa/FDa045/programs/intel/2020_update4/mkl/include -I../externals/codi/include -I../externals/medi/include -I../externals/medi/src -ICommon/src -I../Common/src -I/work/A/openmpi/3.0.0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -m64 -pthread -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -Wno-no",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:5150,Deployability,update,update,5150,"tive(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; [726/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CEulerSolver.cpp.o; ninja: build stopped: subcommand failed. **I suspect it got something to do with my GCC version. Since I can't update the system GCC, I tried to build the newer version of GCC locally and used it to build SU2. But then I encountered another systemic error that seem to be much more complicated (long errors, but one of them is..)**. > /home/FDa/FDa045/.local/lib64/libstdc++.so.6: no version information available (required by /usr/bin/swig) . I am happy if anybody could suggest me anything!!. **The remote server systems**; - OS: Linux (Red Hat Enterprise Linux Server 7.5 (Maipo)); - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [OpenMPI 3.0.0]; - SU2 Version: [e.g., v7.2.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:1112,Integrability,depend,dependency,1112,"don't have root access. **Firstly, I cloned the latest repo (per Nov 3, 2021), and then run the following meson command.**; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:1232,Integrability,depend,dependency,1232,"*; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/in",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:1273,Integrability,Message,Message,1273,"e -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../exte",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:1391,Integrability,depend,dependency,1391,"date4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:1502,Integrability,Message,Message,1502,"date4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:1600,Integrability,Depend,Dependency,1600,"(GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -I/home/FDa/FDa045/programs/intel/2020_update4/mkl/include -I../externals/codi/include -I../externals/medi/include -I../externals/medi/s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:995,Modifiability,config,config,995,"Hi all! I am facing this issue when trying to do the ninja build.; I am trying to install SU2 on the remote server where I don't have root access. **Firstly, I cloned the latest repo (per Nov 3, 2021), and then run the following meson command.**; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:1016,Modifiability,config,config,1016,"Hi all! I am facing this issue when trying to do the ninja build.; I am trying to install SU2 on the remote server where I don't have root access. **Firstly, I cloned the latest repo (per Nov 3, 2021), and then run the following meson command.**; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:3355,Modifiability,Variab,VariableType,3355,"is -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -I/home/FDa/FDa045/programs/intel/2020_update4/mkl/include -I../externals/codi/include -I../externals/medi/include -I../externals/medi/src -ICommon/src -I../Common/src -I/work/A/openmpi/3.0.0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -m64 -pthread -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -DHAVE_MKL -DCODI_REVERSE_TYPE -MD -MQ SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -MF 'SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o.d' -o SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -c ../SU2_CFD/src/solvers/CTurbSolver.cpp; In file included from ../SU2_CFD/src/solvers/CTurbSolver.cpp:31:0:; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; CScalarSolver<VariableType>::CScalarSolver(bool conservative) : CSolver(), Conservative(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: require",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:3396,Modifiability,Variab,VariableType,3396,"is -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -I/home/FDa/FDa045/programs/intel/2020_update4/mkl/include -I../externals/codi/include -I../externals/medi/include -I../externals/medi/src -ICommon/src -I../Common/src -I/work/A/openmpi/3.0.0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -m64 -pthread -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -DHAVE_MKL -DCODI_REVERSE_TYPE -MD -MQ SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -MF 'SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o.d' -o SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -c ../SU2_CFD/src/solvers/CTurbSolver.cpp; In file included from ../SU2_CFD/src/solvers/CTurbSolver.cpp:31:0:; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; CScalarSolver<VariableType>::CScalarSolver(bool conservative) : CSolver(), Conservative(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: require",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:3682,Modifiability,Variab,VariableType,3682,".0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -m64 -pthread -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -DHAVE_MKL -DCODI_REVERSE_TYPE -MD -MQ SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -MF 'SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o.d' -o SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -c ../SU2_CFD/src/solvers/CTurbSolver.cpp; In file included from ../SU2_CFD/src/solvers/CTurbSolver.cpp:31:0:; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; CScalarSolver<VariableType>::CScalarSolver(bool conservative) : CSolver(), Conservative(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:4224,Modifiability,Variab,VariableType,4224,"0:; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; CScalarSolver<VariableType>::CScalarSolver(bool conservative) : CSolver(), Conservative(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; [726/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CEulerSolver.cpp.o; ninja: build stopped: subcommand failed. **I suspect it got something to do with my GCC version. Since I can't update the system GCC, I tried to build the newer version of GCC locally and used it to build SU2. But ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:4287,Modifiability,Variab,VariableType,4287,"0:; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; CScalarSolver<VariableType>::CScalarSolver(bool conservative) : CSolver(), Conservative(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; [726/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CEulerSolver.cpp.o; ninja: build stopped: subcommand failed. **I suspect it got something to do with my GCC version. Since I can't update the system GCC, I tried to build the newer version of GCC locally and used it to build SU2. But ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/issues/1420:139,Security,access,access,139,"Hi all! I am facing this issue when trying to do the ninja build.; I am trying to install SU2 on the remote server where I don't have root access. **Firstly, I cloned the latest repo (per Nov 3, 2021), and then run the following meson command.**; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420
https://github.com/su2code/SU2/pull/1422:1304,Deployability,update,updated,1304,"## Proposed Changes; This PR introduces the implicit time-stepping capability for viscous problems using NEMO. ; The is a ""clean"" of PR #1356 (which should be closed by the time you read this). Most of the implementation discussion can be found there. Thanks to @pcarruscag for helping modernize the approach taken!. There are also several small fixes throughout addressing some LGTM.com and codefactor issues. Future work will include extracting Jacobians from the Mutation++ to be used with NEMO. As of right now, only the native library can be used with the implementation. ## Related Work; Related PRs include #1356, #1343, and #1347. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1422
https://github.com/su2code/SU2/pull/1422:1231,Testability,test,test,1231,"## Proposed Changes; This PR introduces the implicit time-stepping capability for viscous problems using NEMO. ; The is a ""clean"" of PR #1356 (which should be closed by the time you read this). Most of the implementation discussion can be found there. Thanks to @pcarruscag for helping modernize the approach taken!. There are also several small fixes throughout addressing some LGTM.com and codefactor issues. Future work will include extracting Jacobians from the Mutation++ to be used with NEMO. As of right now, only the native library can be used with the implementation. ## Related Work; Related PRs include #1356, #1343, and #1347. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1422
https://github.com/su2code/SU2/pull/1422:811,Usability,guid,guide,811,"## Proposed Changes; This PR introduces the implicit time-stepping capability for viscous problems using NEMO. ; The is a ""clean"" of PR #1356 (which should be closed by the time you read this). Most of the implementation discussion can be found there. Thanks to @pcarruscag for helping modernize the approach taken!. There are also several small fixes throughout addressing some LGTM.com and codefactor issues. Future work will include extracting Jacobians from the Mutation++ to be used with NEMO. As of right now, only the native library can be used with the implementation. ## Related Work; Related PRs include #1356, #1343, and #1347. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1422
https://github.com/su2code/SU2/pull/1422:1102,Usability,simpl,simply,1102,"## Proposed Changes; This PR introduces the implicit time-stepping capability for viscous problems using NEMO. ; The is a ""clean"" of PR #1356 (which should be closed by the time you read this). Most of the implementation discussion can be found there. Thanks to @pcarruscag for helping modernize the approach taken!. There are also several small fixes throughout addressing some LGTM.com and codefactor issues. Future work will include extracting Jacobians from the Mutation++ to be used with NEMO. As of right now, only the native library can be used with the implementation. ## Related Work; Related PRs include #1356, #1343, and #1347. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1422
https://github.com/su2code/SU2/pull/1427:2266,Deployability,update,updated,2266,"he tests I did over at #1388 where I will also add a inc+turb+2species-with-2-inlets reg test (and hopefully also non-dimensional). Inlet file non-dimensionalization: The inlet file writes dimensional values for the mean flow, and the values that are read are non-dimensionalized in the BC_Inlet routine itself -> I personally find this approach quite good, but I dont believe the SA+SST are adhering to that. See also [this cfd-online issue](https://www.cfd-online.com/Forums/su2/239313-inlet-profile-sst-nondimensional-treatment.html). I will try to fix this here as well.; - nu tilde is non-dimensionalized by multiplying with densityRef/viscosityRef (which I guess from the code); - TKE by multiplying with 1/VelocityRef^2 (which I guess from the code, and would fit with Feng Liu Non-Dim paper i have); - Omega ~~by multiplying with length_Ref/VelocityRef (which would fit with Feng Liu) or~~ by multiplying with ViscRef/(rhoRef*VelocityRef^2); Any info on this is appreciated.; My approach would be non-dimensionalize in the BC_Inlet routine for Turb as well to stay consistent with the mean flow, For the mean flow it has to be done like that because the meaning of the values is determined in the inlet routine. Otherwise one could do all that consistently a bit earlier. I have to remember to add a little hint to the laminar step tutorial to state that the inlet file should be dimensional. ## Related Work; https://github.com/su2code/SU2/pull/516 initial implementation. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427
https://github.com/su2code/SU2/pull/1427:655,Integrability,rout,routine,655,"Hi all,. I noticed problems when using multiple inlet files: At the template values were mixed between the inlets because there is a (in my eyes) superfluous `sort` done. So the problem is just with the template-writing and would not happen if alphabetical and nMarker_all order between the inlet marker_tags were identical. This PR fixes this, at least for the tests I did over at #1388 where I will also add a inc+turb+2species-with-2-inlets reg test (and hopefully also non-dimensional). Inlet file non-dimensionalization: The inlet file writes dimensional values for the mean flow, and the values that are read are non-dimensionalized in the BC_Inlet routine itself -> I personally find this approach quite good, but I dont believe the SA+SST are adhering to that. See also [this cfd-online issue](https://www.cfd-online.com/Forums/su2/239313-inlet-profile-sst-nondimensional-treatment.html). I will try to fix this here as well.; - nu tilde is non-dimensionalized by multiplying with densityRef/viscosityRef (which I guess from the code); - TKE by multiplying with 1/VelocityRef^2 (which I guess from the code, and would fit with Feng Liu Non-Dim paper i have); - Omega ~~by multiplying with length_Ref/VelocityRef (which would fit with Feng Liu) or~~ by multiplying with ViscRef/(rhoRef*VelocityRef^2); Any info on this is appreciated.; My approach would be non-dimensionalize in the BC_Inlet routine for Turb as well to stay consistent with the mean flow, For the mean flow it has to be done like that because the meaning of the values is determined in the inlet routine. Otherwise one could do all that consistently a bit earlier. I have to remember to add a little hint to the laminar step tutorial to state that the inlet file should be dimensional. ## Related Work; https://github.com/su2code/SU2/pull/516 initial implementation. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -We",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427
https://github.com/su2code/SU2/pull/1427:1399,Integrability,rout,routine,1399,"he tests I did over at #1388 where I will also add a inc+turb+2species-with-2-inlets reg test (and hopefully also non-dimensional). Inlet file non-dimensionalization: The inlet file writes dimensional values for the mean flow, and the values that are read are non-dimensionalized in the BC_Inlet routine itself -> I personally find this approach quite good, but I dont believe the SA+SST are adhering to that. See also [this cfd-online issue](https://www.cfd-online.com/Forums/su2/239313-inlet-profile-sst-nondimensional-treatment.html). I will try to fix this here as well.; - nu tilde is non-dimensionalized by multiplying with densityRef/viscosityRef (which I guess from the code); - TKE by multiplying with 1/VelocityRef^2 (which I guess from the code, and would fit with Feng Liu Non-Dim paper i have); - Omega ~~by multiplying with length_Ref/VelocityRef (which would fit with Feng Liu) or~~ by multiplying with ViscRef/(rhoRef*VelocityRef^2); Any info on this is appreciated.; My approach would be non-dimensionalize in the BC_Inlet routine for Turb as well to stay consistent with the mean flow, For the mean flow it has to be done like that because the meaning of the values is determined in the inlet routine. Otherwise one could do all that consistently a bit earlier. I have to remember to add a little hint to the laminar step tutorial to state that the inlet file should be dimensional. ## Related Work; https://github.com/su2code/SU2/pull/516 initial implementation. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427
https://github.com/su2code/SU2/pull/1427:1570,Integrability,rout,routine,1570,"he tests I did over at #1388 where I will also add a inc+turb+2species-with-2-inlets reg test (and hopefully also non-dimensional). Inlet file non-dimensionalization: The inlet file writes dimensional values for the mean flow, and the values that are read are non-dimensionalized in the BC_Inlet routine itself -> I personally find this approach quite good, but I dont believe the SA+SST are adhering to that. See also [this cfd-online issue](https://www.cfd-online.com/Forums/su2/239313-inlet-profile-sst-nondimensional-treatment.html). I will try to fix this here as well.; - nu tilde is non-dimensionalized by multiplying with densityRef/viscosityRef (which I guess from the code); - TKE by multiplying with 1/VelocityRef^2 (which I guess from the code, and would fit with Feng Liu Non-Dim paper i have); - Omega ~~by multiplying with length_Ref/VelocityRef (which would fit with Feng Liu) or~~ by multiplying with ViscRef/(rhoRef*VelocityRef^2); Any info on this is appreciated.; My approach would be non-dimensionalize in the BC_Inlet routine for Turb as well to stay consistent with the mean flow, For the mean flow it has to be done like that because the meaning of the values is determined in the inlet routine. Otherwise one could do all that consistently a bit earlier. I have to remember to add a little hint to the laminar step tutorial to state that the inlet file should be dimensional. ## Related Work; https://github.com/su2code/SU2/pull/516 initial implementation. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427
https://github.com/su2code/SU2/pull/1427:362,Testability,test,tests,362,"Hi all,. I noticed problems when using multiple inlet files: At the template values were mixed between the inlets because there is a (in my eyes) superfluous `sort` done. So the problem is just with the template-writing and would not happen if alphabetical and nMarker_all order between the inlet marker_tags were identical. This PR fixes this, at least for the tests I did over at #1388 where I will also add a inc+turb+2species-with-2-inlets reg test (and hopefully also non-dimensional). Inlet file non-dimensionalization: The inlet file writes dimensional values for the mean flow, and the values that are read are non-dimensionalized in the BC_Inlet routine itself -> I personally find this approach quite good, but I dont believe the SA+SST are adhering to that. See also [this cfd-online issue](https://www.cfd-online.com/Forums/su2/239313-inlet-profile-sst-nondimensional-treatment.html). I will try to fix this here as well.; - nu tilde is non-dimensionalized by multiplying with densityRef/viscosityRef (which I guess from the code); - TKE by multiplying with 1/VelocityRef^2 (which I guess from the code, and would fit with Feng Liu Non-Dim paper i have); - Omega ~~by multiplying with length_Ref/VelocityRef (which would fit with Feng Liu) or~~ by multiplying with ViscRef/(rhoRef*VelocityRef^2); Any info on this is appreciated.; My approach would be non-dimensionalize in the BC_Inlet routine for Turb as well to stay consistent with the mean flow, For the mean flow it has to be done like that because the meaning of the values is determined in the inlet routine. Otherwise one could do all that consistently a bit earlier. I have to remember to add a little hint to the laminar step tutorial to state that the inlet file should be dimensional. ## Related Work; https://github.com/su2code/SU2/pull/516 initial implementation. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -We",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427
https://github.com/su2code/SU2/pull/1427:448,Testability,test,test,448,"Hi all,. I noticed problems when using multiple inlet files: At the template values were mixed between the inlets because there is a (in my eyes) superfluous `sort` done. So the problem is just with the template-writing and would not happen if alphabetical and nMarker_all order between the inlet marker_tags were identical. This PR fixes this, at least for the tests I did over at #1388 where I will also add a inc+turb+2species-with-2-inlets reg test (and hopefully also non-dimensional). Inlet file non-dimensionalization: The inlet file writes dimensional values for the mean flow, and the values that are read are non-dimensionalized in the BC_Inlet routine itself -> I personally find this approach quite good, but I dont believe the SA+SST are adhering to that. See also [this cfd-online issue](https://www.cfd-online.com/Forums/su2/239313-inlet-profile-sst-nondimensional-treatment.html). I will try to fix this here as well.; - nu tilde is non-dimensionalized by multiplying with densityRef/viscosityRef (which I guess from the code); - TKE by multiplying with 1/VelocityRef^2 (which I guess from the code, and would fit with Feng Liu Non-Dim paper i have); - Omega ~~by multiplying with length_Ref/VelocityRef (which would fit with Feng Liu) or~~ by multiplying with ViscRef/(rhoRef*VelocityRef^2); Any info on this is appreciated.; My approach would be non-dimensionalize in the BC_Inlet routine for Turb as well to stay consistent with the mean flow, For the mean flow it has to be done like that because the meaning of the values is determined in the inlet routine. Otherwise one could do all that consistently a bit earlier. I have to remember to add a little hint to the laminar step tutorial to state that the inlet file should be dimensional. ## Related Work; https://github.com/su2code/SU2/pull/516 initial implementation. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -We",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427
https://github.com/su2code/SU2/pull/1427:2193,Testability,test,test,2193,"he tests I did over at #1388 where I will also add a inc+turb+2species-with-2-inlets reg test (and hopefully also non-dimensional). Inlet file non-dimensionalization: The inlet file writes dimensional values for the mean flow, and the values that are read are non-dimensionalized in the BC_Inlet routine itself -> I personally find this approach quite good, but I dont believe the SA+SST are adhering to that. See also [this cfd-online issue](https://www.cfd-online.com/Forums/su2/239313-inlet-profile-sst-nondimensional-treatment.html). I will try to fix this here as well.; - nu tilde is non-dimensionalized by multiplying with densityRef/viscosityRef (which I guess from the code); - TKE by multiplying with 1/VelocityRef^2 (which I guess from the code, and would fit with Feng Liu Non-Dim paper i have); - Omega ~~by multiplying with length_Ref/VelocityRef (which would fit with Feng Liu) or~~ by multiplying with ViscRef/(rhoRef*VelocityRef^2); Any info on this is appreciated.; My approach would be non-dimensionalize in the BC_Inlet routine for Turb as well to stay consistent with the mean flow, For the mean flow it has to be done like that because the meaning of the values is determined in the inlet routine. Otherwise one could do all that consistently a bit earlier. I have to remember to add a little hint to the laminar step tutorial to state that the inlet file should be dimensional. ## Related Work; https://github.com/su2code/SU2/pull/516 initial implementation. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427
https://github.com/su2code/SU2/pull/1427:2064,Usability,simpl,simply,2064,"he tests I did over at #1388 where I will also add a inc+turb+2species-with-2-inlets reg test (and hopefully also non-dimensional). Inlet file non-dimensionalization: The inlet file writes dimensional values for the mean flow, and the values that are read are non-dimensionalized in the BC_Inlet routine itself -> I personally find this approach quite good, but I dont believe the SA+SST are adhering to that. See also [this cfd-online issue](https://www.cfd-online.com/Forums/su2/239313-inlet-profile-sst-nondimensional-treatment.html). I will try to fix this here as well.; - nu tilde is non-dimensionalized by multiplying with densityRef/viscosityRef (which I guess from the code); - TKE by multiplying with 1/VelocityRef^2 (which I guess from the code, and would fit with Feng Liu Non-Dim paper i have); - Omega ~~by multiplying with length_Ref/VelocityRef (which would fit with Feng Liu) or~~ by multiplying with ViscRef/(rhoRef*VelocityRef^2); Any info on this is appreciated.; My approach would be non-dimensionalize in the BC_Inlet routine for Turb as well to stay consistent with the mean flow, For the mean flow it has to be done like that because the meaning of the values is determined in the inlet routine. Otherwise one could do all that consistently a bit earlier. I have to remember to add a little hint to the laminar step tutorial to state that the inlet file should be dimensional. ## Related Work; https://github.com/su2code/SU2/pull/516 initial implementation. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427
https://github.com/su2code/SU2/pull/1428:943,Deployability,update,updated,943,"## Proposed Changes; Setting MUSCL reconstruction in CNEMOEulerSolver to use the minimum limiter val for all primitives, consistent with the feature_NEMO branch, to try and address issues with non-physical points using MUSCL with the NEMO solver in Develop.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428
https://github.com/su2code/SU2/pull/1428:870,Testability,test,test,870,"## Proposed Changes; Setting MUSCL reconstruction in CNEMOEulerSolver to use the minimum limiter val for all primitives, consistent with the feature_NEMO branch, to try and address issues with non-physical points using MUSCL with the NEMO solver in Develop.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428
https://github.com/su2code/SU2/pull/1428:450,Usability,guid,guide,450,"## Proposed Changes; Setting MUSCL reconstruction in CNEMOEulerSolver to use the minimum limiter val for all primitives, consistent with the feature_NEMO branch, to try and address issues with non-physical points using MUSCL with the NEMO solver in Develop.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428
https://github.com/su2code/SU2/pull/1428:741,Usability,simpl,simply,741,"## Proposed Changes; Setting MUSCL reconstruction in CNEMOEulerSolver to use the minimum limiter val for all primitives, consistent with the feature_NEMO branch, to try and address issues with non-physical points using MUSCL with the NEMO solver in Develop.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428
https://github.com/su2code/SU2/issues/1429:1282,Availability,fault,fault,1282,"8-3b91-4476-9eae-8907b20a8bf7.png). To simplify a bit the problem, the geometry is assumed to be constant along the span. Therefore, a hybrid mesh is used on a 2d surface and is extruded along the span. The following pictures represented a global view of the test case, the hybrid mesh and the mesh distribution for the extrusion:. ![global](https://user-images.githubusercontent.com/24920252/140758176-d1e5da98-5e54-457e-9a80-92878a1e88ba.png); ![2dmesh](https://user-images.githubusercontent.com/24920252/140756176-4560688b-1c6c-42e7-b404-95589764acad.png). ![extrusion](https://user-images.githubusercontent.com/24920252/140756190-d5a423b7-c172-4fff-9fe3-53ed0364756e.png). As we can see, the mesh is refined near the two walls (the hub/shroud) to get a y+ of 1 and here starts my issue. . While I can retrieve a correct y+ near the blade, I have trouble to get a y+ lower than 65 near the walls. At y+ = 65, SU2 runs and converges to some results. For y+ < 65, SU2 raises a segmentation fault at this location: ; ![segfault](https://user-images.githubusercontent.com/24920252/140756620-db3ed08f-05cd-4811-b037-642a221ea501.png); Here are the results of the gdb analysis. It seems that the seg faut comes from the Giles BC part of the initialisation of the turbo data containers. Especially those lines (CEulerSolver.cpp line 435-436). `CkInflow[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(INFLOW)+1) = complex<su2double>(0.0,0.0);`. `CkOutflow1[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(OUTFLOW)+1) = complex<su2double>(0.0,0.0);`. but I don't understand why. ![issue](https://user-images.githubusercontent.com/24920252/140783485-0d856d2a-7353-468f-aeab-c78b742d8582.png). The first thing I checked was to reduce the number of elements in my domain but the problem remains the same (so no memory issue).; Then I checked if it was not an issue from . - : a too small size of my first element. I scaled my domain by a factor of 1000 and the issue is the same (",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429
https://github.com/su2code/SU2/issues/1429:2039,Energy Efficiency,reduce,reduce,2039,"s my issue. . While I can retrieve a correct y+ near the blade, I have trouble to get a y+ lower than 65 near the walls. At y+ = 65, SU2 runs and converges to some results. For y+ < 65, SU2 raises a segmentation fault at this location: ; ![segfault](https://user-images.githubusercontent.com/24920252/140756620-db3ed08f-05cd-4811-b037-642a221ea501.png); Here are the results of the gdb analysis. It seems that the seg faut comes from the Giles BC part of the initialisation of the turbo data containers. Especially those lines (CEulerSolver.cpp line 435-436). `CkInflow[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(INFLOW)+1) = complex<su2double>(0.0,0.0);`. `CkOutflow1[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(OUTFLOW)+1) = complex<su2double>(0.0,0.0);`. but I don't understand why. ![issue](https://user-images.githubusercontent.com/24920252/140783485-0d856d2a-7353-468f-aeab-c78b742d8582.png). The first thing I checked was to reduce the number of elements in my domain but the problem remains the same (so no memory issue).; Then I checked if it was not an issue from . - : a too small size of my first element. I scaled my domain by a factor of 1000 and the issue is the same (can't go below y+ = 65);; - : trouble with the expansion ratio of the boundary layer;; - :the number of procs (tried with 2 - 6 -15 and the issue is the same). I don't have idea anymore and that is why I'm coming to you. . *Please provide a config file and mesh for a minimal example that recreates the problem.*. Here is a link to the .geo file (line 28 is to get a y+ of 1. You can uncomment line 29 for y+=65), the .cfg and two .su2 meshes to directly launch the case. . https://mseduculiegebe-my.sharepoint.com/:u:/g/personal/amaury_bilocq_uliege_be/EaUIIj1J_-BBktcLu8F9kosBsRjtOduWrrtENbW_bnx1ow?e=F47adW. Thank you already for your help!. Amaury. **Desktop (please complete the following information):**; - OS: Linux - Ubuntu 21.04; - C++ compiler and version: g++ (GCC) 10.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429
https://github.com/su2code/SU2/issues/1429:2532,Modifiability,config,config,2532," = 65, SU2 runs and converges to some results. For y+ < 65, SU2 raises a segmentation fault at this location: ; ![segfault](https://user-images.githubusercontent.com/24920252/140756620-db3ed08f-05cd-4811-b037-642a221ea501.png); Here are the results of the gdb analysis. It seems that the seg faut comes from the Giles BC part of the initialisation of the turbo data containers. Especially those lines (CEulerSolver.cpp line 435-436). `CkInflow[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(INFLOW)+1) = complex<su2double>(0.0,0.0);`. `CkOutflow1[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(OUTFLOW)+1) = complex<su2double>(0.0,0.0);`. but I don't understand why. ![issue](https://user-images.githubusercontent.com/24920252/140783485-0d856d2a-7353-468f-aeab-c78b742d8582.png). The first thing I checked was to reduce the number of elements in my domain but the problem remains the same (so no memory issue).; Then I checked if it was not an issue from . - : a too small size of my first element. I scaled my domain by a factor of 1000 and the issue is the same (can't go below y+ = 65);; - : trouble with the expansion ratio of the boundary layer;; - :the number of procs (tried with 2 - 6 -15 and the issue is the same). I don't have idea anymore and that is why I'm coming to you. . *Please provide a config file and mesh for a minimal example that recreates the problem.*. Here is a link to the .geo file (line 28 is to get a y+ of 1. You can uncomment line 29 for y+=65), the .cfg and two .su2 meshes to directly launch the case. . https://mseduculiegebe-my.sharepoint.com/:u:/g/personal/amaury_bilocq_uliege_be/EaUIIj1J_-BBktcLu8F9kosBsRjtOduWrrtENbW_bnx1ow?e=F47adW. Thank you already for your help!. Amaury. **Desktop (please complete the following information):**; - OS: Linux - Ubuntu 21.04; - C++ compiler and version: g++ (GCC) 10.3.0; - MPI implementation and version: Intel(R) MPI Library for Linux* OS, Version 2021.4 Build 20210831; - SU2 Version:7.2.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429
https://github.com/su2code/SU2/issues/1429:550,Testability,test,test,550,"**Describe the bug**; Hello everyone, . I'm trying to study the secondary flows around a compressor stator blade. To do so, I need to simulate the 3d blade, the hub and the shroud (as shown in the picture below).; ![blade](https://user-images.githubusercontent.com/24920252/140755903-23c7ad28-3b91-4476-9eae-8907b20a8bf7.png). To simplify a bit the problem, the geometry is assumed to be constant along the span. Therefore, a hybrid mesh is used on a 2d surface and is extruded along the span. The following pictures represented a global view of the test case, the hybrid mesh and the mesh distribution for the extrusion:. ![global](https://user-images.githubusercontent.com/24920252/140758176-d1e5da98-5e54-457e-9a80-92878a1e88ba.png); ![2dmesh](https://user-images.githubusercontent.com/24920252/140756176-4560688b-1c6c-42e7-b404-95589764acad.png). ![extrusion](https://user-images.githubusercontent.com/24920252/140756190-d5a423b7-c172-4fff-9fe3-53ed0364756e.png). As we can see, the mesh is refined near the two walls (the hub/shroud) to get a y+ of 1 and here starts my issue. . While I can retrieve a correct y+ near the blade, I have trouble to get a y+ lower than 65 near the walls. At y+ = 65, SU2 runs and converges to some results. For y+ < 65, SU2 raises a segmentation fault at this location: ; ![segfault](https://user-images.githubusercontent.com/24920252/140756620-db3ed08f-05cd-4811-b037-642a221ea501.png); Here are the results of the gdb analysis. It seems that the seg faut comes from the Giles BC part of the initialisation of the turbo data containers. Especially those lines (CEulerSolver.cpp line 435-436). `CkInflow[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(INFLOW)+1) = complex<su2double>(0.0,0.0);`. `CkOutflow1[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(OUTFLOW)+1) = complex<su2double>(0.0,0.0);`. but I don't understand why. ![issue](https://user-images.githubusercontent.com/24920252/140783485-0d856d2a-7353-468f-aeab-c78b742d8582.p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429
https://github.com/su2code/SU2/issues/1429:330,Usability,simpl,simplify,330,"**Describe the bug**; Hello everyone, . I'm trying to study the secondary flows around a compressor stator blade. To do so, I need to simulate the 3d blade, the hub and the shroud (as shown in the picture below).; ![blade](https://user-images.githubusercontent.com/24920252/140755903-23c7ad28-3b91-4476-9eae-8907b20a8bf7.png). To simplify a bit the problem, the geometry is assumed to be constant along the span. Therefore, a hybrid mesh is used on a 2d surface and is extruded along the span. The following pictures represented a global view of the test case, the hybrid mesh and the mesh distribution for the extrusion:. ![global](https://user-images.githubusercontent.com/24920252/140758176-d1e5da98-5e54-457e-9a80-92878a1e88ba.png); ![2dmesh](https://user-images.githubusercontent.com/24920252/140756176-4560688b-1c6c-42e7-b404-95589764acad.png). ![extrusion](https://user-images.githubusercontent.com/24920252/140756190-d5a423b7-c172-4fff-9fe3-53ed0364756e.png). As we can see, the mesh is refined near the two walls (the hub/shroud) to get a y+ of 1 and here starts my issue. . While I can retrieve a correct y+ near the blade, I have trouble to get a y+ lower than 65 near the walls. At y+ = 65, SU2 runs and converges to some results. For y+ < 65, SU2 raises a segmentation fault at this location: ; ![segfault](https://user-images.githubusercontent.com/24920252/140756620-db3ed08f-05cd-4811-b037-642a221ea501.png); Here are the results of the gdb analysis. It seems that the seg faut comes from the Giles BC part of the initialisation of the turbo data containers. Especially those lines (CEulerSolver.cpp line 435-436). `CkInflow[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(INFLOW)+1) = complex<su2double>(0.0,0.0);`. `CkOutflow1[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(OUTFLOW)+1) = complex<su2double>(0.0,0.0);`. but I don't understand why. ![issue](https://user-images.githubusercontent.com/24920252/140783485-0d856d2a-7353-468f-aeab-c78b742d8582.p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429
https://github.com/su2code/SU2/issues/1430:1415,Security,access,accessed,1415,"**Describe the bug**; In CFVMFlowSolverBase<>::Friction_Forces, there is the following piece of code ([permalink](https://github.com/su2code/SU2/blob/641d2544d8958e9c74fbe9e22d9eb16cbc99167f/SU2_CFD/include/solvers/CFVMFlowSolverBase.inl#L2477)):; ```c++; /*--- Loop over the vertices to compute the forces ---*/; ; for (iVertex = 0; iVertex < geometry->nVertex[iMarker]; iVertex++) {; iPoint = geometry->vertex[iMarker][iVertex]->GetNode();; iPointNormal = geometry->vertex[iMarker][iVertex]->GetNormal_Neighbor();; ...; }; ```; However, a normal neighbor exists only for vertices on the domain (see [`CMultiGridGeometry::FindNormal_Neighbor`](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/Common/src/geometry/CMultiGridGeometry.cpp#L1159) and [`CPhysicalGeometry::FindNormal_Neighbor`](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/Common/src/geometry/CPhysicalGeometry.cpp#L8470)), not for halo points. ; **Edit**: The link for `CPhysicalGeometry` was wrong. `CPhysicalGeometry` actually computes the normal neighbors for halo points, `CMultigridGeometry` doesn't. . `iPointNormal` is needed to retrieve `Coord_Normal`, which is needed to compute `WallDist`/`WallDistMod`, which are needed to compute `YPlus`. To fix the above problem, I would therefore suggest to compute `YPlus` only for domain points. Looking for locations where `YPlus` could be accessed (to see whether `YPlus` is needed on non-domain points), I found e.g. [`CTurbSSTSolver::SetTurbVars_WF`](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/SU2_CFD/src/solvers/CTurbSSTSolver.cpp#L494). However there again the normal neighbor is accessed without checking that we're on a domain point, so likely this should also be changed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430
https://github.com/su2code/SU2/issues/1430:1695,Security,access,accessed,1695,"**Describe the bug**; In CFVMFlowSolverBase<>::Friction_Forces, there is the following piece of code ([permalink](https://github.com/su2code/SU2/blob/641d2544d8958e9c74fbe9e22d9eb16cbc99167f/SU2_CFD/include/solvers/CFVMFlowSolverBase.inl#L2477)):; ```c++; /*--- Loop over the vertices to compute the forces ---*/; ; for (iVertex = 0; iVertex < geometry->nVertex[iMarker]; iVertex++) {; iPoint = geometry->vertex[iMarker][iVertex]->GetNode();; iPointNormal = geometry->vertex[iMarker][iVertex]->GetNormal_Neighbor();; ...; }; ```; However, a normal neighbor exists only for vertices on the domain (see [`CMultiGridGeometry::FindNormal_Neighbor`](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/Common/src/geometry/CMultiGridGeometry.cpp#L1159) and [`CPhysicalGeometry::FindNormal_Neighbor`](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/Common/src/geometry/CPhysicalGeometry.cpp#L8470)), not for halo points. ; **Edit**: The link for `CPhysicalGeometry` was wrong. `CPhysicalGeometry` actually computes the normal neighbors for halo points, `CMultigridGeometry` doesn't. . `iPointNormal` is needed to retrieve `Coord_Normal`, which is needed to compute `WallDist`/`WallDistMod`, which are needed to compute `YPlus`. To fix the above problem, I would therefore suggest to compute `YPlus` only for domain points. Looking for locations where `YPlus` could be accessed (to see whether `YPlus` is needed on non-domain points), I found e.g. [`CTurbSSTSolver::SetTurbVars_WF`](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/SU2_CFD/src/solvers/CTurbSSTSolver.cpp#L494). However there again the normal neighbor is accessed without checking that we're on a domain point, so likely this should also be changed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430
https://github.com/su2code/SU2/issues/1431:160,Integrability,rout,routine,160,"**Description**. The Coupled RHT-CFD Adjoint test in the serial_regression_AD.py is designed to compare the calculated gradient file with a reference.; Yet the routine run_filediff() is never called for this test, only the routine run_test(). I tried to modify the reference file 'of_grad_cd.csv.ref' and checked it on my local machine. The output still shows that the test has passed, even though the calculated gradient file and the reference file are different. **To Reproduce**; Change the reference values in the file 'of_grad_cd.csv.ref' and run serial_regression.py. This might be a bug in this test. Can you check if the test fails in the automated tests if a wrong reference gradient file is used?. **Desktop (please complete the following information):**. OS: Linux - Fedora; C++ compiler and version: g++ (GCC) 11.2.1; MPI implementation and version: Open MPI; SU2 Version: 7.2.1. Thanks and Best Regards,; Thomas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1431
https://github.com/su2code/SU2/issues/1431:223,Integrability,rout,routine,223,"**Description**. The Coupled RHT-CFD Adjoint test in the serial_regression_AD.py is designed to compare the calculated gradient file with a reference.; Yet the routine run_filediff() is never called for this test, only the routine run_test(). I tried to modify the reference file 'of_grad_cd.csv.ref' and checked it on my local machine. The output still shows that the test has passed, even though the calculated gradient file and the reference file are different. **To Reproduce**; Change the reference values in the file 'of_grad_cd.csv.ref' and run serial_regression.py. This might be a bug in this test. Can you check if the test fails in the automated tests if a wrong reference gradient file is used?. **Desktop (please complete the following information):**. OS: Linux - Fedora; C++ compiler and version: g++ (GCC) 11.2.1; MPI implementation and version: Open MPI; SU2 Version: 7.2.1. Thanks and Best Regards,; Thomas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1431
https://github.com/su2code/SU2/issues/1431:45,Testability,test,test,45,"**Description**. The Coupled RHT-CFD Adjoint test in the serial_regression_AD.py is designed to compare the calculated gradient file with a reference.; Yet the routine run_filediff() is never called for this test, only the routine run_test(). I tried to modify the reference file 'of_grad_cd.csv.ref' and checked it on my local machine. The output still shows that the test has passed, even though the calculated gradient file and the reference file are different. **To Reproduce**; Change the reference values in the file 'of_grad_cd.csv.ref' and run serial_regression.py. This might be a bug in this test. Can you check if the test fails in the automated tests if a wrong reference gradient file is used?. **Desktop (please complete the following information):**. OS: Linux - Fedora; C++ compiler and version: g++ (GCC) 11.2.1; MPI implementation and version: Open MPI; SU2 Version: 7.2.1. Thanks and Best Regards,; Thomas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1431
https://github.com/su2code/SU2/issues/1431:208,Testability,test,test,208,"**Description**. The Coupled RHT-CFD Adjoint test in the serial_regression_AD.py is designed to compare the calculated gradient file with a reference.; Yet the routine run_filediff() is never called for this test, only the routine run_test(). I tried to modify the reference file 'of_grad_cd.csv.ref' and checked it on my local machine. The output still shows that the test has passed, even though the calculated gradient file and the reference file are different. **To Reproduce**; Change the reference values in the file 'of_grad_cd.csv.ref' and run serial_regression.py. This might be a bug in this test. Can you check if the test fails in the automated tests if a wrong reference gradient file is used?. **Desktop (please complete the following information):**. OS: Linux - Fedora; C++ compiler and version: g++ (GCC) 11.2.1; MPI implementation and version: Open MPI; SU2 Version: 7.2.1. Thanks and Best Regards,; Thomas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1431
https://github.com/su2code/SU2/issues/1431:369,Testability,test,test,369,"**Description**. The Coupled RHT-CFD Adjoint test in the serial_regression_AD.py is designed to compare the calculated gradient file with a reference.; Yet the routine run_filediff() is never called for this test, only the routine run_test(). I tried to modify the reference file 'of_grad_cd.csv.ref' and checked it on my local machine. The output still shows that the test has passed, even though the calculated gradient file and the reference file are different. **To Reproduce**; Change the reference values in the file 'of_grad_cd.csv.ref' and run serial_regression.py. This might be a bug in this test. Can you check if the test fails in the automated tests if a wrong reference gradient file is used?. **Desktop (please complete the following information):**. OS: Linux - Fedora; C++ compiler and version: g++ (GCC) 11.2.1; MPI implementation and version: Open MPI; SU2 Version: 7.2.1. Thanks and Best Regards,; Thomas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1431
https://github.com/su2code/SU2/issues/1431:602,Testability,test,test,602,"**Description**. The Coupled RHT-CFD Adjoint test in the serial_regression_AD.py is designed to compare the calculated gradient file with a reference.; Yet the routine run_filediff() is never called for this test, only the routine run_test(). I tried to modify the reference file 'of_grad_cd.csv.ref' and checked it on my local machine. The output still shows that the test has passed, even though the calculated gradient file and the reference file are different. **To Reproduce**; Change the reference values in the file 'of_grad_cd.csv.ref' and run serial_regression.py. This might be a bug in this test. Can you check if the test fails in the automated tests if a wrong reference gradient file is used?. **Desktop (please complete the following information):**. OS: Linux - Fedora; C++ compiler and version: g++ (GCC) 11.2.1; MPI implementation and version: Open MPI; SU2 Version: 7.2.1. Thanks and Best Regards,; Thomas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1431
https://github.com/su2code/SU2/issues/1431:629,Testability,test,test,629,"**Description**. The Coupled RHT-CFD Adjoint test in the serial_regression_AD.py is designed to compare the calculated gradient file with a reference.; Yet the routine run_filediff() is never called for this test, only the routine run_test(). I tried to modify the reference file 'of_grad_cd.csv.ref' and checked it on my local machine. The output still shows that the test has passed, even though the calculated gradient file and the reference file are different. **To Reproduce**; Change the reference values in the file 'of_grad_cd.csv.ref' and run serial_regression.py. This might be a bug in this test. Can you check if the test fails in the automated tests if a wrong reference gradient file is used?. **Desktop (please complete the following information):**. OS: Linux - Fedora; C++ compiler and version: g++ (GCC) 11.2.1; MPI implementation and version: Open MPI; SU2 Version: 7.2.1. Thanks and Best Regards,; Thomas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1431
https://github.com/su2code/SU2/issues/1431:657,Testability,test,tests,657,"**Description**. The Coupled RHT-CFD Adjoint test in the serial_regression_AD.py is designed to compare the calculated gradient file with a reference.; Yet the routine run_filediff() is never called for this test, only the routine run_test(). I tried to modify the reference file 'of_grad_cd.csv.ref' and checked it on my local machine. The output still shows that the test has passed, even though the calculated gradient file and the reference file are different. **To Reproduce**; Change the reference values in the file 'of_grad_cd.csv.ref' and run serial_regression.py. This might be a bug in this test. Can you check if the test fails in the automated tests if a wrong reference gradient file is used?. **Desktop (please complete the following information):**. OS: Linux - Fedora; C++ compiler and version: g++ (GCC) 11.2.1; MPI implementation and version: Open MPI; SU2 Version: 7.2.1. Thanks and Best Regards,; Thomas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1431
https://github.com/su2code/SU2/issues/1432:270,Availability,error,error,270,"We need to improve the behavior of SU2 for `TIME_DISCRE_TURB=EULER_EXPLICIT`. Currently explicit Euler (and also the Runge-Kutta variants) are not implemented for the turbulence solvers, see https://github.com/su2code/SU2/issues/1414#issuecomment-964236535, but also no error message is thrown when a user specifies this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1432
https://github.com/su2code/SU2/issues/1432:276,Integrability,message,message,276,"We need to improve the behavior of SU2 for `TIME_DISCRE_TURB=EULER_EXPLICIT`. Currently explicit Euler (and also the Runge-Kutta variants) are not implemented for the turbulence solvers, see https://github.com/su2code/SU2/issues/1414#issuecomment-964236535, but also no error message is thrown when a user specifies this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1432
https://github.com/su2code/SU2/pull/1435:33,Deployability,integrat,integration,33,"## Proposed Changes; Enable time integration by the explicit Euler scheme for e.g. turbulence solvers, by implementing ``CScalarSolver<>::ExplicitEuler_Iteration``. ## Related Work; This fixes #1432 with respect to explicit Euler. I need the feature for further investigation of #1414. ``CScalarSolver`` was introduced in #1330. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435
https://github.com/su2code/SU2/pull/1435:996,Deployability,update,updated,996,"## Proposed Changes; Enable time integration by the explicit Euler scheme for e.g. turbulence solvers, by implementing ``CScalarSolver<>::ExplicitEuler_Iteration``. ## Related Work; This fixes #1432 with respect to explicit Euler. I need the feature for further investigation of #1414. ``CScalarSolver`` was introduced in #1330. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435
https://github.com/su2code/SU2/pull/1435:33,Integrability,integrat,integration,33,"## Proposed Changes; Enable time integration by the explicit Euler scheme for e.g. turbulence solvers, by implementing ``CScalarSolver<>::ExplicitEuler_Iteration``. ## Related Work; This fixes #1432 with respect to explicit Euler. I need the feature for further investigation of #1414. ``CScalarSolver`` was introduced in #1330. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435
https://github.com/su2code/SU2/pull/1435:923,Testability,test,test,923,"## Proposed Changes; Enable time integration by the explicit Euler scheme for e.g. turbulence solvers, by implementing ``CScalarSolver<>::ExplicitEuler_Iteration``. ## Related Work; This fixes #1432 with respect to explicit Euler. I need the feature for further investigation of #1414. ``CScalarSolver`` was introduced in #1330. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435
https://github.com/su2code/SU2/pull/1435:503,Usability,guid,guide,503,"## Proposed Changes; Enable time integration by the explicit Euler scheme for e.g. turbulence solvers, by implementing ``CScalarSolver<>::ExplicitEuler_Iteration``. ## Related Work; This fixes #1432 with respect to explicit Euler. I need the feature for further investigation of #1414. ``CScalarSolver`` was introduced in #1330. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435
https://github.com/su2code/SU2/pull/1435:794,Usability,simpl,simply,794,"## Proposed Changes; Enable time integration by the explicit Euler scheme for e.g. turbulence solvers, by implementing ``CScalarSolver<>::ExplicitEuler_Iteration``. ## Related Work; This fixes #1432 with respect to explicit Euler. I need the feature for further investigation of #1414. ``CScalarSolver`` was introduced in #1330. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435
https://github.com/su2code/SU2/pull/1436:27,Deployability,update,updates,27,"## Proposed Changes; Small updates due to changes in libROM API (corresponds to PR https://github.com/LLNL/libROM/pull/80 ). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1436
https://github.com/su2code/SU2/pull/1436:797,Deployability,update,updated,797,"## Proposed Changes; Small updates due to changes in libROM API (corresponds to PR https://github.com/LLNL/libROM/pull/80 ). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1436
https://github.com/su2code/SU2/pull/1436:723,Testability,test,test,723,"## Proposed Changes; Small updates due to changes in libROM API (corresponds to PR https://github.com/LLNL/libROM/pull/80 ). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1436
https://github.com/su2code/SU2/pull/1436:297,Usability,guid,guide,297,"## Proposed Changes; Small updates due to changes in libROM API (corresponds to PR https://github.com/LLNL/libROM/pull/80 ). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1436
https://github.com/su2code/SU2/pull/1436:590,Usability,simpl,simply,590,"## Proposed Changes; Small updates due to changes in libROM API (corresponds to PR https://github.com/LLNL/libROM/pull/80 ). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1436
https://github.com/su2code/SU2/pull/1437:293,Availability,down,down,293,"The Coupled RHT-CFD Adjoint did not compare the computed gradient file to the reference file. Instead, the test case passed without file comparison. ## Proposed Changes; Added a call to run_filediff to ensure the test is run.; Moved the Coupled RHT-CFD Adjoint test in serial_regression_AD.py down to the file difference test. ## Related Work; This fixes the related issue #1431 ; The reference gradient file in the test case repo needs a small modification. See su2code/TestCases/pull/84. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437
https://github.com/su2code/SU2/pull/1437:1155,Deployability,update,updated,1155,"The Coupled RHT-CFD Adjoint did not compare the computed gradient file to the reference file. Instead, the test case passed without file comparison. ## Proposed Changes; Added a call to run_filediff to ensure the test is run.; Moved the Coupled RHT-CFD Adjoint test in serial_regression_AD.py down to the file difference test. ## Related Work; This fixes the related issue #1431 ; The reference gradient file in the test case repo needs a small modification. See su2code/TestCases/pull/84. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437
https://github.com/su2code/SU2/pull/1437:107,Testability,test,test,107,"The Coupled RHT-CFD Adjoint did not compare the computed gradient file to the reference file. Instead, the test case passed without file comparison. ## Proposed Changes; Added a call to run_filediff to ensure the test is run.; Moved the Coupled RHT-CFD Adjoint test in serial_regression_AD.py down to the file difference test. ## Related Work; This fixes the related issue #1431 ; The reference gradient file in the test case repo needs a small modification. See su2code/TestCases/pull/84. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437
https://github.com/su2code/SU2/pull/1437:213,Testability,test,test,213,"The Coupled RHT-CFD Adjoint did not compare the computed gradient file to the reference file. Instead, the test case passed without file comparison. ## Proposed Changes; Added a call to run_filediff to ensure the test is run.; Moved the Coupled RHT-CFD Adjoint test in serial_regression_AD.py down to the file difference test. ## Related Work; This fixes the related issue #1431 ; The reference gradient file in the test case repo needs a small modification. See su2code/TestCases/pull/84. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437
https://github.com/su2code/SU2/pull/1437:261,Testability,test,test,261,"The Coupled RHT-CFD Adjoint did not compare the computed gradient file to the reference file. Instead, the test case passed without file comparison. ## Proposed Changes; Added a call to run_filediff to ensure the test is run.; Moved the Coupled RHT-CFD Adjoint test in serial_regression_AD.py down to the file difference test. ## Related Work; This fixes the related issue #1431 ; The reference gradient file in the test case repo needs a small modification. See su2code/TestCases/pull/84. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437
https://github.com/su2code/SU2/pull/1437:321,Testability,test,test,321,"The Coupled RHT-CFD Adjoint did not compare the computed gradient file to the reference file. Instead, the test case passed without file comparison. ## Proposed Changes; Added a call to run_filediff to ensure the test is run.; Moved the Coupled RHT-CFD Adjoint test in serial_regression_AD.py down to the file difference test. ## Related Work; This fixes the related issue #1431 ; The reference gradient file in the test case repo needs a small modification. See su2code/TestCases/pull/84. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437
https://github.com/su2code/SU2/pull/1437:416,Testability,test,test,416,"The Coupled RHT-CFD Adjoint did not compare the computed gradient file to the reference file. Instead, the test case passed without file comparison. ## Proposed Changes; Added a call to run_filediff to ensure the test is run.; Moved the Coupled RHT-CFD Adjoint test in serial_regression_AD.py down to the file difference test. ## Related Work; This fixes the related issue #1431 ; The reference gradient file in the test case repo needs a small modification. See su2code/TestCases/pull/84. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437
https://github.com/su2code/SU2/pull/1437:471,Testability,Test,TestCases,471,"The Coupled RHT-CFD Adjoint did not compare the computed gradient file to the reference file. Instead, the test case passed without file comparison. ## Proposed Changes; Added a call to run_filediff to ensure the test is run.; Moved the Coupled RHT-CFD Adjoint test in serial_regression_AD.py down to the file difference test. ## Related Work; This fixes the related issue #1431 ; The reference gradient file in the test case repo needs a small modification. See su2code/TestCases/pull/84. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437
https://github.com/su2code/SU2/pull/1437:1082,Testability,test,test,1082,"The Coupled RHT-CFD Adjoint did not compare the computed gradient file to the reference file. Instead, the test case passed without file comparison. ## Proposed Changes; Added a call to run_filediff to ensure the test is run.; Moved the Coupled RHT-CFD Adjoint test in serial_regression_AD.py down to the file difference test. ## Related Work; This fixes the related issue #1431 ; The reference gradient file in the test case repo needs a small modification. See su2code/TestCases/pull/84. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437
https://github.com/su2code/SU2/pull/1437:662,Usability,guid,guide,662,"The Coupled RHT-CFD Adjoint did not compare the computed gradient file to the reference file. Instead, the test case passed without file comparison. ## Proposed Changes; Added a call to run_filediff to ensure the test is run.; Moved the Coupled RHT-CFD Adjoint test in serial_regression_AD.py down to the file difference test. ## Related Work; This fixes the related issue #1431 ; The reference gradient file in the test case repo needs a small modification. See su2code/TestCases/pull/84. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437
https://github.com/su2code/SU2/pull/1437:953,Usability,simpl,simply,953,"The Coupled RHT-CFD Adjoint did not compare the computed gradient file to the reference file. Instead, the test case passed without file comparison. ## Proposed Changes; Added a call to run_filediff to ensure the test is run.; Moved the Coupled RHT-CFD Adjoint test in serial_regression_AD.py down to the file difference test. ## Related Work; This fixes the related issue #1431 ; The reference gradient file in the test case repo needs a small modification. See su2code/TestCases/pull/84. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437
https://github.com/su2code/SU2/pull/1438:115,Usability,learn,learned,115,"This fixes a small mistake I discovered in code that I added with https://github.com/su2code/SU2/pull/1195 (I just learned the hard way that it is better to use common/general forms of equations instead of trying to simplify/factorise them as much as possible). . In case anyone wants to verify, the sources used are in https://github.com/su2code/SU2/pull/1195, the terms are found by subtracting the cartesian formulation from the cylindrical one and here is the simplification/factorisation bit:. ![IMG_20211113_110505](https://user-images.githubusercontent.com/55834287/141643365-9be4da4b-279e-4b36-8145-14cd76b56f15.jpg). Sorry!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1438
https://github.com/su2code/SU2/pull/1438:216,Usability,simpl,simplify,216,"This fixes a small mistake I discovered in code that I added with https://github.com/su2code/SU2/pull/1195 (I just learned the hard way that it is better to use common/general forms of equations instead of trying to simplify/factorise them as much as possible). . In case anyone wants to verify, the sources used are in https://github.com/su2code/SU2/pull/1195, the terms are found by subtracting the cartesian formulation from the cylindrical one and here is the simplification/factorisation bit:. ![IMG_20211113_110505](https://user-images.githubusercontent.com/55834287/141643365-9be4da4b-279e-4b36-8145-14cd76b56f15.jpg). Sorry!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1438
https://github.com/su2code/SU2/pull/1438:464,Usability,simpl,simplification,464,"This fixes a small mistake I discovered in code that I added with https://github.com/su2code/SU2/pull/1195 (I just learned the hard way that it is better to use common/general forms of equations instead of trying to simplify/factorise them as much as possible). . In case anyone wants to verify, the sources used are in https://github.com/su2code/SU2/pull/1195, the terms are found by subtracting the cartesian formulation from the cylindrical one and here is the simplification/factorisation bit:. ![IMG_20211113_110505](https://user-images.githubusercontent.com/55834287/141643365-9be4da4b-279e-4b36-8145-14cd76b56f15.jpg). Sorry!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1438
https://github.com/su2code/SU2/pull/1439:441,Deployability,update,updates,441,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439
https://github.com/su2code/SU2/pull/1439:764,Deployability,update,update,764,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439
https://github.com/su2code/SU2/pull/1439:1708,Deployability,update,updated,1708,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439
https://github.com/su2code/SU2/pull/1439:1022,Integrability,depend,dependency,1022,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439
https://github.com/su2code/SU2/pull/1439:668,Modifiability,parameteriz,parameterization,668,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439
https://github.com/su2code/SU2/pull/1439:489,Performance,optimiz,optimization,489,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439
https://github.com/su2code/SU2/pull/1439:1635,Testability,test,test,1635,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439
https://github.com/su2code/SU2/pull/1439:1215,Usability,guid,guide,1215,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439
https://github.com/su2code/SU2/pull/1439:1506,Usability,simpl,simply,1506,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439
https://github.com/su2code/SU2/pull/1446:1338,Availability,recover,recover,1338,"pers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/167",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:975,Deployability,update,updates,975,"## Proposed Changes. The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. . Sobolev smoothing of gradients computes a reinterpretation of the gradient in a different Hilbert space, [see this short overview.](http://www.cse.unt.edu/~renka/papers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definiti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:1199,Deployability,update,updates,1199," gradients computes a reinterpretation of the gradient in a different Hilbert space, [see this short overview.](http://www.cse.unt.edu/~renka/papers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the com",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:1264,Deployability,update,update,1264,"pers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/167",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:3771,Deployability,update,updated,3771," the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:2622,Integrability,rout,routines,2622,"cbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test cas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:608,Modifiability,extend,extended,608,"## Proposed Changes. The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. . Sobolev smoothing of gradients computes a reinterpretation of the gradient in a different Hilbert space, [see this short overview.](http://www.cse.unt.edu/~renka/papers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definiti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:636,Modifiability,parameteriz,parameterization,636,"## Proposed Changes. The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. . Sobolev smoothing of gradients computes a reinterpretation of the gradient in a different Hilbert space, [see this short overview.](http://www.cse.unt.edu/~renka/papers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definiti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:1981,Modifiability,extend,extends,1981,"specially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request nee",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:2422,Modifiability,parameteriz,parameterization,2422,"g minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribut",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:2635,Modifiability,extend,extended,2635,"cbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test cas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:2728,Modifiability,parameteriz,parameterization,2728,"cbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test cas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:1023,Performance,optimiz,optimization,1023,"hanges. The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. . Sobolev smoothing of gradients computes a reinterpretation of the gradient in a different Hilbert space, [see this short overview.](http://www.cse.unt.edu/~renka/papers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Ga",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:1055,Performance,optimiz,optimization,1055,"sitivities based on the idea of Sobolev gradient smoothing. . Sobolev smoothing of gradients computes a reinterpretation of the gradient in a different Hilbert space, [see this short overview.](http://www.cse.unt.edu/~renka/papers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different m",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:1393,Performance,optimiz,optimization,1393,"pers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/167",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:1584,Performance,optimiz,optimization,1584," the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:1338,Safety,recover,recover,1338,"pers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/167",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:2573,Testability,log,logic,2573,"ons and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:2954,Testability,test,tests,2954," the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:3040,Testability,Test,TestCases,3040," the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:3086,Testability,Test,TestCases,3086," the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:3698,Testability,test,test,3698," the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:1225,Usability,simpl,simple,1225,"pers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/167",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:3278,Usability,guid,guide,3278," the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1446:3569,Usability,simpl,simply,3569," the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446
https://github.com/su2code/SU2/pull/1449:1073,Deployability,update,updated,1073,"Hi,. Comp/Inc/Nemo output all had the same RMS_TKE etc output -> now this is done once in CFlowOutput and Comp/Inc/NemoOutput only call sth like `SetHistoryOutput_Turb` in their respective `SetHistoryOutput`. this is just a cleanup and shouldnt change too much. I do this in anticipation of addition of Species related output which I dont want to repeat. So #1388 will use the same concept. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1449
https://github.com/su2code/SU2/pull/1449:1000,Testability,test,test,1000,"Hi,. Comp/Inc/Nemo output all had the same RMS_TKE etc output -> now this is done once in CFlowOutput and Comp/Inc/NemoOutput only call sth like `SetHistoryOutput_Turb` in their respective `SetHistoryOutput`. this is just a cleanup and shouldnt change too much. I do this in anticipation of addition of Species related output which I dont want to repeat. So #1388 will use the same concept. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1449
https://github.com/su2code/SU2/pull/1449:580,Usability,guid,guide,580,"Hi,. Comp/Inc/Nemo output all had the same RMS_TKE etc output -> now this is done once in CFlowOutput and Comp/Inc/NemoOutput only call sth like `SetHistoryOutput_Turb` in their respective `SetHistoryOutput`. this is just a cleanup and shouldnt change too much. I do this in anticipation of addition of Species related output which I dont want to repeat. So #1388 will use the same concept. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1449
https://github.com/su2code/SU2/pull/1449:871,Usability,simpl,simply,871,"Hi,. Comp/Inc/Nemo output all had the same RMS_TKE etc output -> now this is done once in CFlowOutput and Comp/Inc/NemoOutput only call sth like `SetHistoryOutput_Turb` in their respective `SetHistoryOutput`. this is just a cleanup and shouldnt change too much. I do this in anticipation of addition of Species related output which I dont want to repeat. So #1388 will use the same concept. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1449
https://github.com/su2code/SU2/pull/1450:1215,Deployability,update,updated,1215,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450
https://github.com/su2code/SU2/pull/1450:57,Integrability,rout,routines,57,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450
https://github.com/su2code/SU2/pull/1450:408,Modifiability,Variab,Variable,408,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450
https://github.com/su2code/SU2/pull/1450:447,Modifiability,Config,Config,447,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450
https://github.com/su2code/SU2/pull/1450:45,Performance,Load,LoadRestart,45,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450
https://github.com/su2code/SU2/pull/1450:430,Security,access,accessed,430,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450
https://github.com/su2code/SU2/pull/1450:1142,Testability,test,test,1142,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450
https://github.com/su2code/SU2/pull/1450:722,Usability,guid,guide,722,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450
https://github.com/su2code/SU2/pull/1450:1013,Usability,simpl,simply,1013,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450
https://github.com/su2code/SU2/pull/1451:992,Deployability,update,updated,992,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; make kind_solver an enum class . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; continuing work on making enums into enum classes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1451
https://github.com/su2code/SU2/pull/1451:919,Testability,test,test,919,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; make kind_solver an enum class . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; continuing work on making enums into enum classes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1451
https://github.com/su2code/SU2/pull/1451:496,Usability,guid,guide,496,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; make kind_solver an enum class . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; continuing work on making enums into enum classes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1451
https://github.com/su2code/SU2/pull/1451:789,Usability,simpl,simply,789,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; make kind_solver an enum class . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; continuing work on making enums into enum classes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1451
https://github.com/su2code/SU2/pull/1452:974,Deployability,update,updated,974,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; continuing work on making making enum classes for all addEnumOption. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1452
https://github.com/su2code/SU2/pull/1452:901,Testability,test,test,901,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; continuing work on making making enum classes for all addEnumOption. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1452
https://github.com/su2code/SU2/pull/1452:481,Usability,guid,guide,481,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; continuing work on making making enum classes for all addEnumOption. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1452
https://github.com/su2code/SU2/pull/1452:772,Usability,simpl,simply,772,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; continuing work on making making enum classes for all addEnumOption. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1452
https://github.com/su2code/SU2/pull/1453:1014,Deployability,update,updated,1014,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; ongoing work on implementing enum classes.; This changes the turbulent transition keyword to enum class. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1453
https://github.com/su2code/SU2/pull/1453:941,Testability,test,test,941,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; ongoing work on implementing enum classes.; This changes the turbulent transition keyword to enum class. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1453
https://github.com/su2code/SU2/pull/1453:521,Usability,guid,guide,521,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; ongoing work on implementing enum classes.; This changes the turbulent transition keyword to enum class. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1453
https://github.com/su2code/SU2/pull/1453:812,Usability,simpl,simply,812,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; ongoing work on implementing enum classes.; This changes the turbulent transition keyword to enum class. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1453
https://github.com/su2code/SU2/pull/1457:945,Deployability,update,updated,945,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ongoing effort to change to enum class. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1457
https://github.com/su2code/SU2/pull/1457:872,Testability,test,test,872,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ongoing effort to change to enum class. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1457
https://github.com/su2code/SU2/pull/1457:452,Usability,guid,guide,452,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ongoing effort to change to enum class. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1457
https://github.com/su2code/SU2/pull/1457:743,Usability,simpl,simply,743,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ongoing effort to change to enum class. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1457
https://github.com/su2code/SU2/issues/1458:450,Availability,Error,Error,450,"### Discussed in https://github.com/su2code/SU2/discussions/1456. <div type='discussions-op-text'>. <sup>Originally posted by **CipollinoDuck** November 30, 2021</sup>; Hello everyone,. I ask here because I cannot find any solution elsewhere. I am attempting an **Adjoint Optimization problem** with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver doe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1458
https://github.com/su2code/SU2/issues/1458:439,Integrability,message,message,439,"### Discussed in https://github.com/su2code/SU2/discussions/1456. <div type='discussions-op-text'>. <sup>Originally posted by **CipollinoDuck** November 30, 2021</sup>; Hello everyone,. I ask here because I cannot find any solution elsewhere. I am attempting an **Adjoint Optimization problem** with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver doe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1458
https://github.com/su2code/SU2/issues/1458:272,Performance,Optimiz,Optimization,272,"### Discussed in https://github.com/su2code/SU2/discussions/1456. <div type='discussions-op-text'>. <sup>Originally posted by **CipollinoDuck** November 30, 2021</sup>; Hello everyone,. I ask here because I cannot find any solution elsewhere. I am attempting an **Adjoint Optimization problem** with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver doe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1458
https://github.com/su2code/SU2/issues/1458:1539,Performance,perform,performed,1539," I cannot find any solution elsewhere. I am attempting an **Adjoint Optimization problem** with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. Have I missed something written in other tutorials?. Thank you very much for all of the support.</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1458
https://github.com/su2code/SU2/issues/1458:1292,Testability,Test,Test,1292," I cannot find any solution elsewhere. I am attempting an **Adjoint Optimization problem** with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. Have I missed something written in other tutorials?. Thank you very much for all of the support.</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1458
https://github.com/su2code/SU2/issues/1459:44,Performance,perform,perform,44,"Hello, Everyone. Currently, I'm learning to perform unsteady simulation on SU2. I run successfully with the SU2 given tutorial unsteady NACA0012 case in compressible part. However, that case is the one which two restart file are given to performing the unsteady simulation. My question is that how to run the this unsteady case without pre-given restart file. I have tried RESTART_SOL = NO , but the results from this simulation is totally different with the given results as shown in the SU2 website. Specifically, there is no lift or drag coefficient periodic oscillation with time iteration. Can anyone tell me the normal process for performing general unsteady simulation in SU2 and take this SU2 tutorial NACA-0012 case as an example to explain. Thanks very much.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1459
https://github.com/su2code/SU2/issues/1459:238,Performance,perform,performing,238,"Hello, Everyone. Currently, I'm learning to perform unsteady simulation on SU2. I run successfully with the SU2 given tutorial unsteady NACA0012 case in compressible part. However, that case is the one which two restart file are given to performing the unsteady simulation. My question is that how to run the this unsteady case without pre-given restart file. I have tried RESTART_SOL = NO , but the results from this simulation is totally different with the given results as shown in the SU2 website. Specifically, there is no lift or drag coefficient periodic oscillation with time iteration. Can anyone tell me the normal process for performing general unsteady simulation in SU2 and take this SU2 tutorial NACA-0012 case as an example to explain. Thanks very much.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1459
https://github.com/su2code/SU2/issues/1459:637,Performance,perform,performing,637,"Hello, Everyone. Currently, I'm learning to perform unsteady simulation on SU2. I run successfully with the SU2 given tutorial unsteady NACA0012 case in compressible part. However, that case is the one which two restart file are given to performing the unsteady simulation. My question is that how to run the this unsteady case without pre-given restart file. I have tried RESTART_SOL = NO , but the results from this simulation is totally different with the given results as shown in the SU2 website. Specifically, there is no lift or drag coefficient periodic oscillation with time iteration. Can anyone tell me the normal process for performing general unsteady simulation in SU2 and take this SU2 tutorial NACA-0012 case as an example to explain. Thanks very much.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1459
https://github.com/su2code/SU2/issues/1459:32,Usability,learn,learning,32,"Hello, Everyone. Currently, I'm learning to perform unsteady simulation on SU2. I run successfully with the SU2 given tutorial unsteady NACA0012 case in compressible part. However, that case is the one which two restart file are given to performing the unsteady simulation. My question is that how to run the this unsteady case without pre-given restart file. I have tried RESTART_SOL = NO , but the results from this simulation is totally different with the given results as shown in the SU2 website. Specifically, there is no lift or drag coefficient periodic oscillation with time iteration. Can anyone tell me the normal process for performing general unsteady simulation in SU2 and take this SU2 tutorial NACA-0012 case as an example to explain. Thanks very much.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1459
https://github.com/su2code/SU2/pull/1461:325,Availability,avail,available,325,"Hi,. Some necessary changes for the species transport solver to work nicely with the Discrete adjoint solver. So it is the same structure that was Introduced for CFlowOutput but now it is CAdjFlowOutput.; - generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication (Done); - Make More OF available such that one can actually use the DA solver; - Add a Gradient validation + Optimization FADO template plus add DA regression tests (or tutorials 🤔 I think I will make a tutorial thing for this); - Some smaller fixes to the previous PR. ## Related Work; directly following #1388 where the majority of adjoint work for the species solver was already done. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461
https://github.com/su2code/SU2/pull/1461:1115,Deployability,update,updated,1115,"Hi,. Some necessary changes for the species transport solver to work nicely with the Discrete adjoint solver. So it is the same structure that was Introduced for CFlowOutput but now it is CAdjFlowOutput.; - generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication (Done); - Make More OF available such that one can actually use the DA solver; - Add a Gradient validation + Optimization FADO template plus add DA regression tests (or tutorials 🤔 I think I will make a tutorial thing for this); - Some smaller fixes to the previous PR. ## Related Work; directly following #1388 where the majority of adjoint work for the species solver was already done. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461
https://github.com/su2code/SU2/pull/1461:411,Performance,Optimiz,Optimization,411,"Hi,. Some necessary changes for the species transport solver to work nicely with the Discrete adjoint solver. So it is the same structure that was Introduced for CFlowOutput but now it is CAdjFlowOutput.; - generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication (Done); - Make More OF available such that one can actually use the DA solver; - Add a Gradient validation + Optimization FADO template plus add DA regression tests (or tutorials 🤔 I think I will make a tutorial thing for this); - Some smaller fixes to the previous PR. ## Related Work; directly following #1388 where the majority of adjoint work for the species solver was already done. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461
https://github.com/su2code/SU2/pull/1461:284,Safety,avoid,avoid,284,"Hi,. Some necessary changes for the species transport solver to work nicely with the Discrete adjoint solver. So it is the same structure that was Introduced for CFlowOutput but now it is CAdjFlowOutput.; - generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication (Done); - Make More OF available such that one can actually use the DA solver; - Add a Gradient validation + Optimization FADO template plus add DA regression tests (or tutorials 🤔 I think I will make a tutorial thing for this); - Some smaller fixes to the previous PR. ## Related Work; directly following #1388 where the majority of adjoint work for the species solver was already done. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461
https://github.com/su2code/SU2/pull/1461:398,Security,validat,validation,398,"Hi,. Some necessary changes for the species transport solver to work nicely with the Discrete adjoint solver. So it is the same structure that was Introduced for CFlowOutput but now it is CAdjFlowOutput.; - generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication (Done); - Make More OF available such that one can actually use the DA solver; - Add a Gradient validation + Optimization FADO template plus add DA regression tests (or tutorials 🤔 I think I will make a tutorial thing for this); - Some smaller fixes to the previous PR. ## Related Work; directly following #1388 where the majority of adjoint work for the species solver was already done. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461
https://github.com/su2code/SU2/pull/1461:461,Testability,test,tests,461,"Hi,. Some necessary changes for the species transport solver to work nicely with the Discrete adjoint solver. So it is the same structure that was Introduced for CFlowOutput but now it is CAdjFlowOutput.; - generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication (Done); - Make More OF available such that one can actually use the DA solver; - Add a Gradient validation + Optimization FADO template plus add DA regression tests (or tutorials 🤔 I think I will make a tutorial thing for this); - Some smaller fixes to the previous PR. ## Related Work; directly following #1388 where the majority of adjoint work for the species solver was already done. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461
https://github.com/su2code/SU2/pull/1461:1042,Testability,test,test,1042,"Hi,. Some necessary changes for the species transport solver to work nicely with the Discrete adjoint solver. So it is the same structure that was Introduced for CFlowOutput but now it is CAdjFlowOutput.; - generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication (Done); - Make More OF available such that one can actually use the DA solver; - Add a Gradient validation + Optimization FADO template plus add DA regression tests (or tutorials 🤔 I think I will make a tutorial thing for this); - Some smaller fixes to the previous PR. ## Related Work; directly following #1388 where the majority of adjoint work for the species solver was already done. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461
https://github.com/su2code/SU2/pull/1461:913,Usability,simpl,simply,913,"Hi,. Some necessary changes for the species transport solver to work nicely with the Discrete adjoint solver. So it is the same structure that was Introduced for CFlowOutput but now it is CAdjFlowOutput.; - generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication (Done); - Make More OF available such that one can actually use the DA solver; - Add a Gradient validation + Optimization FADO template plus add DA regression tests (or tutorials 🤔 I think I will make a tutorial thing for this); - Some smaller fixes to the previous PR. ## Related Work; directly following #1388 where the majority of adjoint work for the species solver was already done. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461
https://github.com/su2code/SU2/issues/1462:406,Energy Efficiency,adapt,adaptive,406,"**Describe the bug**. Hi, everyone. I'm trying to using hybrid rans/les method in my work. However, it seems that the implementation of SA_EDDES length scale in su2 is different from the paper, so I wonder whether it is a bug or just for the sake of experience. The relevant code locate in the void SetDES_LengthScale() function in SU2_CFD/src/solvers/CTurbSASolver.cpp， in line 1480 to 1495 the vorticity-adaptive SGS is calculated. But different for the published function, the absolute value of edge vector between vertex i and j are used and such a form seems unphysical. 1480 ln_max = 0.0;; 1481 deltaDDES = 0.0;; 1482 for (iNeigh = 0;iNeigh < nNeigh; iNeigh++){; 1483 jPoint = geometry->nodes->GetPoint(iPoint, iNeigh);; 1484 coord_j = geometry->nodes->GetCoord(jPoint);; 1485 for (iDim = 0; iDim < nDim; iDim++){; 1486 delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]); //why absolute value; 1487 }; 1488 deltaDDES = geometry->nodes->GetMaxLength(iPoint);; 1489 ln[0] = delta[1]*ratioOmega[2] - delta[2]*ratioOmega[1];; 1490 ln[1] = delta[2]*ratioOmega[0] - delta[0]*ratioOmega[2];; 1491 ln[2] = delta[0]*ratioOmega[1] - delta[1]*ratioOmega[0];; 1492 aux_ln = sqrt(ln[0]*ln[0] + ln[1]*ln[1] + ln[2]*ln[2]);; 1493 ln_max = max(ln_max,aux_ln);; 1494 vortexTiltingMeasure += nodes->GetVortex_Tilting(jPoint);; 1495 }. Any help would be appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462
https://github.com/su2code/SU2/issues/1462:406,Modifiability,adapt,adaptive,406,"**Describe the bug**. Hi, everyone. I'm trying to using hybrid rans/les method in my work. However, it seems that the implementation of SA_EDDES length scale in su2 is different from the paper, so I wonder whether it is a bug or just for the sake of experience. The relevant code locate in the void SetDES_LengthScale() function in SU2_CFD/src/solvers/CTurbSASolver.cpp， in line 1480 to 1495 the vorticity-adaptive SGS is calculated. But different for the published function, the absolute value of edge vector between vertex i and j are used and such a form seems unphysical. 1480 ln_max = 0.0;; 1481 deltaDDES = 0.0;; 1482 for (iNeigh = 0;iNeigh < nNeigh; iNeigh++){; 1483 jPoint = geometry->nodes->GetPoint(iPoint, iNeigh);; 1484 coord_j = geometry->nodes->GetCoord(jPoint);; 1485 for (iDim = 0; iDim < nDim; iDim++){; 1486 delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]); //why absolute value; 1487 }; 1488 deltaDDES = geometry->nodes->GetMaxLength(iPoint);; 1489 ln[0] = delta[1]*ratioOmega[2] - delta[2]*ratioOmega[1];; 1490 ln[1] = delta[2]*ratioOmega[0] - delta[0]*ratioOmega[2];; 1491 ln[2] = delta[0]*ratioOmega[1] - delta[1]*ratioOmega[0];; 1492 aux_ln = sqrt(ln[0]*ln[0] + ln[1]*ln[1] + ln[2]*ln[2]);; 1493 ln_max = max(ln_max,aux_ln);; 1494 vortexTiltingMeasure += nodes->GetVortex_Tilting(jPoint);; 1495 }. Any help would be appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462
https://github.com/su2code/SU2/pull/1464:796,Deployability,update,updated,796,"## Proposed Changes; Creating new fork to work on the LM feature. Starting from the Develop branch; . ## Related Work; LM feature. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1464
https://github.com/su2code/SU2/pull/1464:723,Testability,test,test,723,"## Proposed Changes; Creating new fork to work on the LM feature. Starting from the Develop branch; . ## Related Work; LM feature. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1464
https://github.com/su2code/SU2/pull/1464:303,Usability,guid,guide,303,"## Proposed Changes; Creating new fork to work on the LM feature. Starting from the Develop branch; . ## Related Work; LM feature. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1464
https://github.com/su2code/SU2/pull/1464:594,Usability,simpl,simply,594,"## Proposed Changes; Creating new fork to work on the LM feature. Starting from the Develop branch; . ## Related Work; LM feature. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1464
https://github.com/su2code/SU2/pull/1465:1376,Deployability,update,updated,1376,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; WRT_RESTART_OVERWRITE= NO; WRT_VOLUME_OVERWRITE= NO; WRT_SURFACE_OVERWRITE= NO; will create, every WRT_FREQ iterations, output files with the iteration number appended. This is additional to the normal output, so the restart.dat, etc files will always contain the most recent results. Other features that we can add:; WRT_RESTART_MAX_FILES_TO_KEEP= 5; will keep only the 5 most recently written restart_xxxx.dat files, throwing away older ones. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; related to the issue #1463. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465
https://github.com/su2code/SU2/pull/1465:1304,Testability,test,test,1304,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; WRT_RESTART_OVERWRITE= NO; WRT_VOLUME_OVERWRITE= NO; WRT_SURFACE_OVERWRITE= NO; will create, every WRT_FREQ iterations, output files with the iteration number appended. This is additional to the normal output, so the restart.dat, etc files will always contain the most recent results. Other features that we can add:; WRT_RESTART_MAX_FILES_TO_KEEP= 5; will keep only the 5 most recently written restart_xxxx.dat files, throwing away older ones. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; related to the issue #1463. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465
https://github.com/su2code/SU2/pull/1465:885,Usability,guid,guide,885,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; WRT_RESTART_OVERWRITE= NO; WRT_VOLUME_OVERWRITE= NO; WRT_SURFACE_OVERWRITE= NO; will create, every WRT_FREQ iterations, output files with the iteration number appended. This is additional to the normal output, so the restart.dat, etc files will always contain the most recent results. Other features that we can add:; WRT_RESTART_MAX_FILES_TO_KEEP= 5; will keep only the 5 most recently written restart_xxxx.dat files, throwing away older ones. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; related to the issue #1463. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465
https://github.com/su2code/SU2/pull/1465:1176,Usability,simpl,simply,1176,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; WRT_RESTART_OVERWRITE= NO; WRT_VOLUME_OVERWRITE= NO; WRT_SURFACE_OVERWRITE= NO; will create, every WRT_FREQ iterations, output files with the iteration number appended. This is additional to the normal output, so the restart.dat, etc files will always contain the most recent results. Other features that we can add:; WRT_RESTART_MAX_FILES_TO_KEEP= 5; will keep only the 5 most recently written restart_xxxx.dat files, throwing away older ones. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; related to the issue #1463. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465
https://github.com/su2code/SU2/issues/1466:450,Availability,Error,Error,450,"### Discussed in https://github.com/su2code/SU2/discussions/1456. <div type='discussions-op-text'>. <sup>Originally posted by **CipollinoDuck** November 30, 2021</sup>; Hello everyone,. I ask here because I cannot find any solution elsewhere. I am attempting an **Adjoint Optimization problem** with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver doe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1466
https://github.com/su2code/SU2/issues/1466:2551,Deployability,UPDATE,UPDATE,2551,"le besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. I am using SU2 V7.2.1 but I also tested them with versions from this to 7.0.0. The files from the tutorial without solution_*.dat files:; [turb_SA_RAE2822.zip](https://github.com/su2code/SU2/files/7639785/turb_SA_RAE2822.zip). Personal files:; [naca0012_8_1_0_700.zip](https://github.com/su2code/SU2/files/7640051/naca0012_8_1_0_700.zip). The command that I use is: python shape_optimization.py -n 8 -g CONTINUOUS_ADJOINT -o SLSQP -f used_file.cfg. UPDATE: I also compiled the code in Ubuntu 20.04 enabling the DISCRETE_ADJOINT functionality but I always receive the same message. How can I create those solution_adj_*.dat files to start the ADJOINT problem?. Have I missed something written in other tutorials?. Thank you very much for all of the support.</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1466
https://github.com/su2code/SU2/issues/1466:439,Integrability,message,message,439,"### Discussed in https://github.com/su2code/SU2/discussions/1456. <div type='discussions-op-text'>. <sup>Originally posted by **CipollinoDuck** November 30, 2021</sup>; Hello everyone,. I ask here because I cannot find any solution elsewhere. I am attempting an **Adjoint Optimization problem** with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver doe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1466
https://github.com/su2code/SU2/issues/1466:2674,Integrability,message,message,2674,"le besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. I am using SU2 V7.2.1 but I also tested them with versions from this to 7.0.0. The files from the tutorial without solution_*.dat files:; [turb_SA_RAE2822.zip](https://github.com/su2code/SU2/files/7639785/turb_SA_RAE2822.zip). Personal files:; [naca0012_8_1_0_700.zip](https://github.com/su2code/SU2/files/7640051/naca0012_8_1_0_700.zip). The command that I use is: python shape_optimization.py -n 8 -g CONTINUOUS_ADJOINT -o SLSQP -f used_file.cfg. UPDATE: I also compiled the code in Ubuntu 20.04 enabling the DISCRETE_ADJOINT functionality but I always receive the same message. How can I create those solution_adj_*.dat files to start the ADJOINT problem?. Have I missed something written in other tutorials?. Thank you very much for all of the support.</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1466
https://github.com/su2code/SU2/issues/1466:272,Performance,Optimiz,Optimization,272,"### Discussed in https://github.com/su2code/SU2/discussions/1456. <div type='discussions-op-text'>. <sup>Originally posted by **CipollinoDuck** November 30, 2021</sup>; Hello everyone,. I ask here because I cannot find any solution elsewhere. I am attempting an **Adjoint Optimization problem** with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver doe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1466
https://github.com/su2code/SU2/issues/1466:1539,Performance,perform,performed,1539,"__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. I am using SU2 V7.2.1 but I also tested them with versions from this to 7.0.0. The files from the tutorial without solution_*.dat files:; [turb_SA_RAE2822.zip](https://github.com/su2code/SU2/files/7639785/turb_SA_RAE2822.zip). Personal files:; [naca0012_8_1_0_700.zip](https://github.com/su2code/SU2/files/7640051/naca0012_8_1_0_700.zip). The command that I use is: python shape_optimization.py -n 8 -g CONTINUOUS_ADJOINT -o SLSQP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1466
https://github.com/su2code/SU2/issues/1466:1292,Testability,Test,Test,1292,"with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. I am using SU2 V7.2.1 but I also tested them with versions from this to 7.0.0. The files from the tutorial without solution_*.dat files:; [turb_SA_RAE2822.zip](https://github.com/su2code/SU2/fi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1466
https://github.com/su2code/SU2/issues/1466:2135,Testability,test,tested,2135,"le besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. I am using SU2 V7.2.1 but I also tested them with versions from this to 7.0.0. The files from the tutorial without solution_*.dat files:; [turb_SA_RAE2822.zip](https://github.com/su2code/SU2/files/7639785/turb_SA_RAE2822.zip). Personal files:; [naca0012_8_1_0_700.zip](https://github.com/su2code/SU2/files/7640051/naca0012_8_1_0_700.zip). The command that I use is: python shape_optimization.py -n 8 -g CONTINUOUS_ADJOINT -o SLSQP -f used_file.cfg. UPDATE: I also compiled the code in Ubuntu 20.04 enabling the DISCRETE_ADJOINT functionality but I always receive the same message. How can I create those solution_adj_*.dat files to start the ADJOINT problem?. Have I missed something written in other tutorials?. Thank you very much for all of the support.</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1466
https://github.com/su2code/SU2/issues/1467:837,Integrability,bridg,bridge,837,"**Describe the bug**; In a RANS computation of a 2.5D section of a wing, the periodic plane exhibits oscillations of pressure in the boundary layer. The issue is only present on the periodic face, not in the volume. Using a CFL of 1 helps but the instability does not disappear. A CFL of 10 leads to a crash of the computation with multiple spots like on the screenshot. Would it be linked to issue #1090 ?. ![pres_per_face](https://user-images.githubusercontent.com/91184648/145236024-fc713cbd-66d8-40b3-9036-7c1925f10229.png); ![pres_cut](https://user-images.githubusercontent.com/91184648/145236048-a91ca27a-c1c9-4d6c-9639-8b34ea5de307.png). Here is the config file:; [hl_3d_landing.txt](https://github.com/su2code/SU2/files/7677092/hl_3d_landing.txt). **Hardware and software:**; - OS: Linux Red Hat ELS 6.5; - Nodes: Intel Xeon Ivy bridge; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.2.1. Thank you for looking at this issue and for any help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467
https://github.com/su2code/SU2/issues/1467:657,Modifiability,config,config,657,"**Describe the bug**; In a RANS computation of a 2.5D section of a wing, the periodic plane exhibits oscillations of pressure in the boundary layer. The issue is only present on the periodic face, not in the volume. Using a CFL of 1 helps but the instability does not disappear. A CFL of 10 leads to a crash of the computation with multiple spots like on the screenshot. Would it be linked to issue #1090 ?. ![pres_per_face](https://user-images.githubusercontent.com/91184648/145236024-fc713cbd-66d8-40b3-9036-7c1925f10229.png); ![pres_cut](https://user-images.githubusercontent.com/91184648/145236048-a91ca27a-c1c9-4d6c-9639-8b34ea5de307.png). Here is the config file:; [hl_3d_landing.txt](https://github.com/su2code/SU2/files/7677092/hl_3d_landing.txt). **Hardware and software:**; - OS: Linux Red Hat ELS 6.5; - Nodes: Intel Xeon Ivy bridge; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.2.1. Thank you for looking at this issue and for any help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467
https://github.com/su2code/SU2/issues/1468:188,Availability,error,error,188,"Good evening, I am currently struggling with compiling SU2 from source code. After I have built the program I try to compile it using ninja.exe, but during the process I get the following error:. ```; [443/454] Linking target SU2_DEF/src/SU2_DEF.exe; FAILED: SU2_DEF/src/SU2_DEF.exe; c++ @SU2_DEF/src/SU2_DEF.exe.rsp; C:/Program Files/mingw-w64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; C:/Program Files/mingw-w64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; C:/Program Files/mingw-w64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; C:/Program Files/mingw-w64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; collect2.exe: error: ld returned 1 exit status; [448/454] Compiling C++ object SU2_CFD/src/libSU2core.a.p/.._include_numerics_simd_CNumericsSIMD.cpp.obj; ninja: build stopped: subcommand failed.; ```. I do not understand what causes the problem since MPI should have been correctly installed and the msmpi.lib file is present in C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64.; I imagine this is a trivial problem due to my inexperience but I am not able to understand how to fix it. Any help would be greatly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1468
https://github.com/su2code/SU2/issues/1468:1088,Availability,error,error,1088,"Good evening, I am currently struggling with compiling SU2 from source code. After I have built the program I try to compile it using ninja.exe, but during the process I get the following error:. ```; [443/454] Linking target SU2_DEF/src/SU2_DEF.exe; FAILED: SU2_DEF/src/SU2_DEF.exe; c++ @SU2_DEF/src/SU2_DEF.exe.rsp; C:/Program Files/mingw-w64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; C:/Program Files/mingw-w64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; C:/Program Files/mingw-w64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; C:/Program Files/mingw-w64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; collect2.exe: error: ld returned 1 exit status; [448/454] Compiling C++ object SU2_CFD/src/libSU2core.a.p/.._include_numerics_simd_CNumericsSIMD.cpp.obj; ninja: build stopped: subcommand failed.; ```. I do not understand what causes the problem since MPI should have been correctly installed and the msmpi.lib file is present in C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64.; I imagine this is a trivial problem due to my inexperience but I am not able to understand how to fix it. Any help would be greatly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1468
https://github.com/su2code/SU2/issues/1468:1356,Deployability,install,installed,1356,"Good evening, I am currently struggling with compiling SU2 from source code. After I have built the program I try to compile it using ninja.exe, but during the process I get the following error:. ```; [443/454] Linking target SU2_DEF/src/SU2_DEF.exe; FAILED: SU2_DEF/src/SU2_DEF.exe; c++ @SU2_DEF/src/SU2_DEF.exe.rsp; C:/Program Files/mingw-w64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; C:/Program Files/mingw-w64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; C:/Program Files/mingw-w64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; C:/Program Files/mingw-w64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; collect2.exe: error: ld returned 1 exit status; [448/454] Compiling C++ object SU2_CFD/src/libSU2core.a.p/.._include_numerics_simd_CNumericsSIMD.cpp.obj; ninja: build stopped: subcommand failed.; ```. I do not understand what causes the problem since MPI should have been correctly installed and the msmpi.lib file is present in C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64.; I imagine this is a trivial problem due to my inexperience but I am not able to understand how to fix it. Any help would be greatly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1468
https://github.com/su2code/SU2/pull/1470:1072,Deployability,update,updated,1072,"## Proposed Changes. In the last developer meeting, there were some mentions of changing the meson build process for some of the executables. . The idea is to use the static libraries su2_cfd_lib and su2_cfd_lib_ad for linking when building SU2_DEF, SU2_DOT, SU2_SOL. This way it is no longer necessary to extract the needed sources for building the executables by hand in the meson.build files of each subdirectory. The linking process should ensure that only the necessary sources are linked and the size of the executables does not change too much. Please feel free to comment on this pull request, whether you think it is a good change to the build process? . - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1470
https://github.com/su2code/SU2/pull/1470:999,Testability,test,test,999,"## Proposed Changes. In the last developer meeting, there were some mentions of changing the meson build process for some of the executables. . The idea is to use the static libraries su2_cfd_lib and su2_cfd_lib_ad for linking when building SU2_DEF, SU2_DOT, SU2_SOL. This way it is no longer necessary to extract the needed sources for building the executables by hand in the meson.build files of each subdirectory. The linking process should ensure that only the necessary sources are linked and the size of the executables does not change too much. Please feel free to comment on this pull request, whether you think it is a good change to the build process? . - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1470
https://github.com/su2code/SU2/pull/1470:870,Usability,simpl,simply,870,"## Proposed Changes. In the last developer meeting, there were some mentions of changing the meson build process for some of the executables. . The idea is to use the static libraries su2_cfd_lib and su2_cfd_lib_ad for linking when building SU2_DEF, SU2_DOT, SU2_SOL. This way it is no longer necessary to extract the needed sources for building the executables by hand in the meson.build files of each subdirectory. The linking process should ensure that only the necessary sources are linked and the size of the executables does not change too much. Please feel free to comment on this pull request, whether you think it is a good change to the build process? . - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1470
https://github.com/su2code/SU2/issues/1471:246,Availability,error,error,246,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; When I build a parallel version of SU2 under Win10, I get an error like. “OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'D:\\mingw-w64\\x86_64\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'”. I noticed that other people on Github have also raised this issue, but it hasn't been resolved, and I'm curious to know, what should I deal with it.; thanks！. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wrong _information.txt](https://github.com/su2code/SU2/files/7734843/wrong._information.txt); [meson-info_json.txt](https://github.com/su2code/SU2/files/7734868/meson-info_json.txt). **Desktop (please complete the following information):**; - OS: [win10 ]; - C++ compiler and version: [ g++ (GCC) 8.1.0]; - MPI implementation and version: [Microsoft MPI v10.1.2]; - SU2 Version: [v7.2.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471
https://github.com/su2code/SU2/issues/1471:645,Modifiability,config,config,645,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; When I build a parallel version of SU2 under Win10, I get an error like. “OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'D:\\mingw-w64\\x86_64\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'”. I noticed that other people on Github have also raised this issue, but it hasn't been resolved, and I'm curious to know, what should I deal with it.; thanks！. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wrong _information.txt](https://github.com/su2code/SU2/files/7734843/wrong._information.txt); [meson-info_json.txt](https://github.com/su2code/SU2/files/7734868/meson-info_json.txt). **Desktop (please complete the following information):**; - OS: [win10 ]; - C++ compiler and version: [ g++ (GCC) 8.1.0]; - MPI implementation and version: [Microsoft MPI v10.1.2]; - SU2 Version: [v7.2.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471
https://github.com/su2code/SU2/issues/1471:25,Usability,clear,clear,25,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; When I build a parallel version of SU2 under Win10, I get an error like. “OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'D:\\mingw-w64\\x86_64\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'”. I noticed that other people on Github have also raised this issue, but it hasn't been resolved, and I'm curious to know, what should I deal with it.; thanks！. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wrong _information.txt](https://github.com/su2code/SU2/files/7734843/wrong._information.txt); [meson-info_json.txt](https://github.com/su2code/SU2/files/7734868/meson-info_json.txt). **Desktop (please complete the following information):**; - OS: [win10 ]; - C++ compiler and version: [ g++ (GCC) 8.1.0]; - MPI implementation and version: [Microsoft MPI v10.1.2]; - SU2 Version: [v7.2.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471
https://github.com/su2code/SU2/issues/1472:68,Testability,test,test,68,"**2D PERIODIC BOUNDARY CONDITIONS - DIVERGENT SOLUTION**; Different test cases have been investigated in order to solve 2D-boundary conditions problems. While translational periodic boundary conditions set up perfectly worked and provided consistent results, rotational periodic boundary conditions set up lead to a divergent solution. ; The meshes have been realized with Ansys Fluent Mesher, then converted into .CGNS (adf) file format using ICEM CFD. **To Reproduce**. The investigated scenario can be better visualized thanks in the following image:; ![2021-12-22 (2)](https://user-images.githubusercontent.com/96534491/147110477-ace3e92c-225d-4973-9675-8fd6f57a8404.png). Eventually, it was possible to observe the non-convergence of 2D rotational periodic boundary conditions solutions.; The divergent behavior above mentioned cannot be traced to deceleration effects with respect to the fluid domain, since different ratios inlet/outlet have been simulated and the solution behavior itself has never changed. The solver crashes after 245 iterations, approximately. Considering that 2D translational periodic boundary condition problems are converging, it is suggested that this behavior might be traced to a bug. . In order to reproduce the simulation, here attached the .cfg file:; [Cone.txt](https://github.com/su2code/SU2/files/7763374/Cone.txt); _(according to github, I cannot upload .CGNS file to this report)_. **Desktop:**; - **OS:** Microsoft Windows 10 64bit; - **C++ compiler and version:** g++ (GCC) 1.42.0; - **MPI implementation and version:** OpenMPI 10.1.12498.18; - **SU2 Version:** v7.2.1 Blackbird",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1472
https://github.com/su2code/SU2/issues/1473:70,Modifiability,variab,variable,70,"Hello, I want to plot streamline in ParaView ,but I found no Velocity variable ，Can I output the velocity field or how plot streamline without Velocity in ParaView?. thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1473
https://github.com/su2code/SU2/pull/1475:13,Availability,down,download,13,"fix mutation download, exception catching to inform user, and more flexible names for manual downloads; Closes #1335",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1475
https://github.com/su2code/SU2/pull/1475:93,Availability,down,downloads,93,"fix mutation download, exception catching to inform user, and more flexible names for manual downloads; Closes #1335",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1475
https://github.com/su2code/SU2/pull/1475:67,Modifiability,flexible,flexible,67,"fix mutation download, exception catching to inform user, and more flexible names for manual downloads; Closes #1335",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1475
https://github.com/su2code/SU2/pull/1478:610,Deployability,update,updated,610,"## Proposed Changes; Allows specifying an objective function via a math expression using the history outputs and typical math functions.; General cleanup of dead code and output fixes. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1478
https://github.com/su2code/SU2/pull/1478:537,Testability,test,test,537,"## Proposed Changes; Allows specifying an objective function via a math expression using the history outputs and typical math functions.; General cleanup of dead code and output fixes. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1478
https://github.com/su2code/SU2/pull/1478:408,Usability,simpl,simply,408,"## Proposed Changes; Allows specifying an objective function via a math expression using the history outputs and typical math functions.; General cleanup of dead code and output fixes. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1478
https://github.com/su2code/SU2/pull/1479:25,Deployability,release,release,25,"CGNS file older than 4.0 release have a high ram memory usage. ## Proposed Changes. Add a small message to help users understand that SU2 is eating their RAM with old CGNS files.; ; ## Related Work. See: #1378 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1479
https://github.com/su2code/SU2/pull/1479:877,Deployability,update,updated,877,"CGNS file older than 4.0 release have a high ram memory usage. ## Proposed Changes. Add a small message to help users understand that SU2 is eating their RAM with old CGNS files.; ; ## Related Work. See: #1378 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1479
https://github.com/su2code/SU2/pull/1479:96,Integrability,message,message,96,"CGNS file older than 4.0 release have a high ram memory usage. ## Proposed Changes. Add a small message to help users understand that SU2 is eating their RAM with old CGNS files.; ; ## Related Work. See: #1378 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1479
https://github.com/su2code/SU2/pull/1479:804,Testability,test,test,804,"CGNS file older than 4.0 release have a high ram memory usage. ## Proposed Changes. Add a small message to help users understand that SU2 is eating their RAM with old CGNS files.; ; ## Related Work. See: #1378 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1479
https://github.com/su2code/SU2/pull/1479:384,Usability,guid,guide,384,"CGNS file older than 4.0 release have a high ram memory usage. ## Proposed Changes. Add a small message to help users understand that SU2 is eating their RAM with old CGNS files.; ; ## Related Work. See: #1378 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1479
https://github.com/su2code/SU2/pull/1479:675,Usability,simpl,simply,675,"CGNS file older than 4.0 release have a high ram memory usage. ## Proposed Changes. Add a small message to help users understand that SU2 is eating their RAM with old CGNS files.; ; ## Related Work. See: #1378 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1479
https://github.com/su2code/SU2/pull/1482:234,Deployability,update,updated,234,"## Proposed Changes; This changes a boolean check in CNEMONumerics.cpp which always seems to be true. This has been causing some segfaults in 10-11 species viscous cases. I suspect this is causes because the Kind_TimeNumScheme is not updated before the numerics constructor. Some work that still needs to be done is confirm/test 10 and 11 species gases do work when the problem is supposed implicit. ; ; ## Related Work; PR#1422. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1482
https://github.com/su2code/SU2/pull/1482:324,Testability,test,test,324,"## Proposed Changes; This changes a boolean check in CNEMONumerics.cpp which always seems to be true. This has been causing some segfaults in 10-11 species viscous cases. I suspect this is causes because the Kind_TimeNumScheme is not updated before the numerics constructor. Some work that still needs to be done is confirm/test 10 and 11 species gases do work when the problem is supposed implicit. ; ; ## Related Work; PR#1422. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1482
https://github.com/su2code/SU2/pull/1482:602,Usability,guid,guide,602,"## Proposed Changes; This changes a boolean check in CNEMONumerics.cpp which always seems to be true. This has been causing some segfaults in 10-11 species viscous cases. I suspect this is causes because the Kind_TimeNumScheme is not updated before the numerics constructor. Some work that still needs to be done is confirm/test 10 and 11 species gases do work when the problem is supposed implicit. ; ; ## Related Work; PR#1422. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1482
https://github.com/su2code/SU2/pull/1482:893,Usability,simpl,simply,893,"## Proposed Changes; This changes a boolean check in CNEMONumerics.cpp which always seems to be true. This has been causing some segfaults in 10-11 species viscous cases. I suspect this is causes because the Kind_TimeNumScheme is not updated before the numerics constructor. Some work that still needs to be done is confirm/test 10 and 11 species gases do work when the problem is supposed implicit. ; ; ## Related Work; PR#1422. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1482
https://github.com/su2code/SU2/pull/1485:6,Deployability,update,update,6,Small update to version numbers.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1485
https://github.com/su2code/SU2/issues/1487:483,Availability,avail,available,483,"[WIP]. Because we can only pin up to 3 issues in GitHub, I'm creating this one to track major aspects we need to fix or implement in SU2.; This issue shall only contain the list and a brief description, with links to associated issues and pull requests.; To propose major issues / development areas please use discussion #1486. The purpose of this list is two fold:; - Direct the efforts of the SU2 Foundation towards addressing these issues, by efforts I mean funds (as they become available).; - Try to enlist help from the community to start addressing these issues, as much as possible we will try to break these down into ""bite sized"" chunks. **To be clear, all contributions are welcome, even if they do not fit in one of the categories below.**; **The main objective here is consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:617,Availability,down,down,617,"[WIP]. Because we can only pin up to 3 issues in GitHub, I'm creating this one to track major aspects we need to fix or implement in SU2.; This issue shall only contain the list and a brief description, with links to associated issues and pull requests.; To propose major issues / development areas please use discussion #1486. The purpose of this list is two fold:; - Direct the efforts of the SU2 Foundation towards addressing these issues, by efforts I mean funds (as they become available).; - Try to enlist help from the community to start addressing these issues, as much as possible we will try to break these down into ""bite sized"" chunks. **To be clear, all contributions are welcome, even if they do not fit in one of the categories below.**; **The main objective here is consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2153,Availability,redundant,redundant,2153,"update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2501,Availability,mainten,maintenance,2501,"ce model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (mainta",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2694,Availability,Robust,Robust,2694,"204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2764,Availability,robust,robust,2764,"204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:1133,Deployability,update,update,1133,"; This issue shall only contain the list and a brief description, with links to associated issues and pull requests.; To propose major issues / development areas please use discussion #1486. The purpose of this list is two fold:; - Direct the efforts of the SU2 Foundation towards addressing these issues, by efforts I mean funds (as they become available).; - Try to enlist help from the community to start addressing these issues, as much as possible we will try to break these down into ""bite sized"" chunks. **To be clear, all contributions are welcome, even if they do not fit in one of the categories below.**; **The main objective here is consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum workin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2811,Energy Efficiency,Reduce,Reduced,2811,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2864,Energy Efficiency,Reduce,Reduced,2864,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2978,Energy Efficiency,adapt,adapted,2978,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:3667,Energy Efficiency,Adapt,Adaptive,3667,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2844,Integrability,interface,interfaces,2844,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:3126,Integrability,wrap,wrapper,3126,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:3173,Integrability,depend,dependent,3173,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:3256,Integrability,wrap,wrapper,3256,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:1499,Modifiability,refactor,refactoring,1499,"from the community to start addressing these issues, as much as possible we will try to break these down into ""bite sized"" chunks. **To be clear, all contributions are welcome, even if they do not fit in one of the categories below.**; **The main objective here is consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - B",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:1854,Modifiability,variab,variable,1854,"ested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2212,Modifiability,config,config,2212,"update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2978,Modifiability,adapt,adapted,2978,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:3012,Modifiability,flexible,flexible,3012,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:3265,Modifiability,refactor,refactor,3265,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:3333,Modifiability,variab,variables,3333,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:3667,Modifiability,Adapt,Adaptive,3667,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:3218,Performance,Optimiz,Optimization,3218,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:3367,Performance,optimiz,optimization,3367,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2153,Safety,redund,redundant,2153,"update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:1749,Security,Validat,Validation,1749," consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2322,Security,validat,validated,2322,"e models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the enti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:3135,Security,expose,expose,3135,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:843,Testability,test,tested,843,"[WIP]. Because we can only pin up to 3 issues in GitHub, I'm creating this one to track major aspects we need to fix or implement in SU2.; This issue shall only contain the list and a brief description, with links to associated issues and pull requests.; To propose major issues / development areas please use discussion #1486. The purpose of this list is two fold:; - Direct the efforts of the SU2 Foundation towards addressing these issues, by efforts I mean funds (as they become available).; - Try to enlist help from the community to start addressing these issues, as much as possible we will try to break these down into ""bite sized"" chunks. **To be clear, all contributions are welcome, even if they do not fit in one of the categories below.**; **The main objective here is consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:1729,Testability,test,testcase,1729,"To be clear, all contributions are welcome, even if they do not fit in one of the categories below.**; **The main objective here is consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:1894,Testability,test,test,1894,"cording to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2038,Testability,Test,Testing,2038,"update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2050,Testability,test,test,2050,"update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2074,Testability,test,tests,2074,"update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2099,Testability,Test,TestCases,2099,"update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2345,Testability,test,tested,2345,"e models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the enti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2398,Testability,Test,TestCases,2398,"e models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the enti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:2439,Testability,test,test,2439,"e models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the enti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:656,Usability,clear,clear,656,"[WIP]. Because we can only pin up to 3 issues in GitHub, I'm creating this one to track major aspects we need to fix or implement in SU2.; This issue shall only contain the list and a brief description, with links to associated issues and pull requests.; To propose major issues / development areas please use discussion #1486. The purpose of this list is two fold:; - Direct the efforts of the SU2 Foundation towards addressing these issues, by efforts I mean funds (as they become available).; - Try to enlist help from the community to start addressing these issues, as much as possible we will try to break these down into ""bite sized"" chunks. **To be clear, all contributions are welcome, even if they do not fit in one of the categories below.**; **The main objective here is consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:1140,Usability,simpl,simplify,1140,"; This issue shall only contain the list and a brief description, with links to associated issues and pull requests.; To propose major issues / development areas please use discussion #1486. The purpose of this list is two fold:; - Direct the efforts of the SU2 Foundation towards addressing these issues, by efforts I mean funds (as they become available).; - Try to enlist help from the community to start addressing these issues, as much as possible we will try to break these down into ""bite sized"" chunks. **To be clear, all contributions are welcome, even if they do not fit in one of the categories below.**; **The main objective here is consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum workin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/issues/1487:1514,Usability,simpl,simplify,1514,"from the community to start addressing these issues, as much as possible we will try to break these down into ""bite sized"" chunks. **To be clear, all contributions are welcome, even if they do not fit in one of the categories below.**; **The main objective here is consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - B",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487
https://github.com/su2code/SU2/pull/1488:238,Deployability,Update,Update,238,"## Proposed Changes; This PR cleans up some functions in NEMO. removing some unused code, adding comments, etc.; I plan to do some more cleanup for the PR, but this should impact the functioning of the code at all. Future work will:; 1.) Update boundary conditions to a working state (Supersonic Inlet, inlet, etc.); 2.) Make use of CharacPrimVar() for further code integration; 3.) Remove dependency of conserved variables in numerical schemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1488
https://github.com/su2code/SU2/pull/1488:366,Deployability,integrat,integration,366,"## Proposed Changes; This PR cleans up some functions in NEMO. removing some unused code, adding comments, etc.; I plan to do some more cleanup for the PR, but this should impact the functioning of the code at all. Future work will:; 1.) Update boundary conditions to a working state (Supersonic Inlet, inlet, etc.); 2.) Make use of CharacPrimVar() for further code integration; 3.) Remove dependency of conserved variables in numerical schemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1488
https://github.com/su2code/SU2/pull/1488:366,Integrability,integrat,integration,366,"## Proposed Changes; This PR cleans up some functions in NEMO. removing some unused code, adding comments, etc.; I plan to do some more cleanup for the PR, but this should impact the functioning of the code at all. Future work will:; 1.) Update boundary conditions to a working state (Supersonic Inlet, inlet, etc.); 2.) Make use of CharacPrimVar() for further code integration; 3.) Remove dependency of conserved variables in numerical schemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1488
https://github.com/su2code/SU2/pull/1488:390,Integrability,depend,dependency,390,"## Proposed Changes; This PR cleans up some functions in NEMO. removing some unused code, adding comments, etc.; I plan to do some more cleanup for the PR, but this should impact the functioning of the code at all. Future work will:; 1.) Update boundary conditions to a working state (Supersonic Inlet, inlet, etc.); 2.) Make use of CharacPrimVar() for further code integration; 3.) Remove dependency of conserved variables in numerical schemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1488
https://github.com/su2code/SU2/pull/1488:414,Modifiability,variab,variables,414,"## Proposed Changes; This PR cleans up some functions in NEMO. removing some unused code, adding comments, etc.; I plan to do some more cleanup for the PR, but this should impact the functioning of the code at all. Future work will:; 1.) Update boundary conditions to a working state (Supersonic Inlet, inlet, etc.); 2.) Make use of CharacPrimVar() for further code integration; 3.) Remove dependency of conserved variables in numerical schemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1488
https://github.com/su2code/SU2/issues/1489:616,Usability,feedback,feedback,616,"Dear all,. I am taking a course called Software Simulation Engineering and one of the course challenges is to make a contribution to an Open-Source Simulation Software. I chose SU2 and would like to contribute with a tutorial concerning a 2D internal compressible flow, possibly with heat transfer from the environment to the pipe wall. I noticed that there are no internal compressible flow tutorials in the website, and therefore I came up with this idea. I would like to know if this topic is of any interest to SU2. If so, I could develop it and create a pull request for its evaluation. Looking forward to your feedback. Best regards.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1489
https://github.com/su2code/SU2/pull/1491:497,Deployability,update,updated,497,"## Proposed Changes; A cout line for debugging purposes was left in the paraview writer. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1491
https://github.com/su2code/SU2/pull/1491:424,Testability,test,test,424,"## Proposed Changes; A cout line for debugging purposes was left in the paraview writer. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1491
https://github.com/su2code/SU2/pull/1491:295,Usability,simpl,simply,295,"## Proposed Changes; A cout line for debugging purposes was left in the paraview writer. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1491
https://github.com/su2code/SU2/pull/1492:1504,Deployability,update,updated,1504,"This is a small issue I noticed when I worked on some features for the discrete adjoint driver.; In CDiscAdjFluidIteration::RegisterInput the inputs for the AD tape are registered.; At the moment if kind_recording == RECORDING::SOLUTION_AND_MESH is set it only registers the flow variables and has no difference to RECORDING::SOLUTION_VARIABLES. If I understand the logic for this enum option correctly, it should register the flow variables and the mesh coordinates from geometry. I.e. if you want to add unctions to the driver, which can evaluate derivatives w.r.t. flow and geometry in one tape evaluation, you should use this option. In addition, I change an out-of-date comment. ## Proposed Changes; Register the geometry variables as inputs in the discrete adjoint flow iteration if 'kind_recording == RECORDING::SOLUTION_AND_MESH'. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492
https://github.com/su2code/SU2/pull/1492:280,Modifiability,variab,variables,280,"This is a small issue I noticed when I worked on some features for the discrete adjoint driver.; In CDiscAdjFluidIteration::RegisterInput the inputs for the AD tape are registered.; At the moment if kind_recording == RECORDING::SOLUTION_AND_MESH is set it only registers the flow variables and has no difference to RECORDING::SOLUTION_VARIABLES. If I understand the logic for this enum option correctly, it should register the flow variables and the mesh coordinates from geometry. I.e. if you want to add unctions to the driver, which can evaluate derivatives w.r.t. flow and geometry in one tape evaluation, you should use this option. In addition, I change an out-of-date comment. ## Proposed Changes; Register the geometry variables as inputs in the discrete adjoint flow iteration if 'kind_recording == RECORDING::SOLUTION_AND_MESH'. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492
https://github.com/su2code/SU2/pull/1492:432,Modifiability,variab,variables,432,"This is a small issue I noticed when I worked on some features for the discrete adjoint driver.; In CDiscAdjFluidIteration::RegisterInput the inputs for the AD tape are registered.; At the moment if kind_recording == RECORDING::SOLUTION_AND_MESH is set it only registers the flow variables and has no difference to RECORDING::SOLUTION_VARIABLES. If I understand the logic for this enum option correctly, it should register the flow variables and the mesh coordinates from geometry. I.e. if you want to add unctions to the driver, which can evaluate derivatives w.r.t. flow and geometry in one tape evaluation, you should use this option. In addition, I change an out-of-date comment. ## Proposed Changes; Register the geometry variables as inputs in the discrete adjoint flow iteration if 'kind_recording == RECORDING::SOLUTION_AND_MESH'. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492
https://github.com/su2code/SU2/pull/1492:727,Modifiability,variab,variables,727,"This is a small issue I noticed when I worked on some features for the discrete adjoint driver.; In CDiscAdjFluidIteration::RegisterInput the inputs for the AD tape are registered.; At the moment if kind_recording == RECORDING::SOLUTION_AND_MESH is set it only registers the flow variables and has no difference to RECORDING::SOLUTION_VARIABLES. If I understand the logic for this enum option correctly, it should register the flow variables and the mesh coordinates from geometry. I.e. if you want to add unctions to the driver, which can evaluate derivatives w.r.t. flow and geometry in one tape evaluation, you should use this option. In addition, I change an out-of-date comment. ## Proposed Changes; Register the geometry variables as inputs in the discrete adjoint flow iteration if 'kind_recording == RECORDING::SOLUTION_AND_MESH'. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492
https://github.com/su2code/SU2/pull/1492:366,Testability,log,logic,366,"This is a small issue I noticed when I worked on some features for the discrete adjoint driver.; In CDiscAdjFluidIteration::RegisterInput the inputs for the AD tape are registered.; At the moment if kind_recording == RECORDING::SOLUTION_AND_MESH is set it only registers the flow variables and has no difference to RECORDING::SOLUTION_VARIABLES. If I understand the logic for this enum option correctly, it should register the flow variables and the mesh coordinates from geometry. I.e. if you want to add unctions to the driver, which can evaluate derivatives w.r.t. flow and geometry in one tape evaluation, you should use this option. In addition, I change an out-of-date comment. ## Proposed Changes; Register the geometry variables as inputs in the discrete adjoint flow iteration if 'kind_recording == RECORDING::SOLUTION_AND_MESH'. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492
https://github.com/su2code/SU2/pull/1492:1431,Testability,test,test,1431,"This is a small issue I noticed when I worked on some features for the discrete adjoint driver.; In CDiscAdjFluidIteration::RegisterInput the inputs for the AD tape are registered.; At the moment if kind_recording == RECORDING::SOLUTION_AND_MESH is set it only registers the flow variables and has no difference to RECORDING::SOLUTION_VARIABLES. If I understand the logic for this enum option correctly, it should register the flow variables and the mesh coordinates from geometry. I.e. if you want to add unctions to the driver, which can evaluate derivatives w.r.t. flow and geometry in one tape evaluation, you should use this option. In addition, I change an out-of-date comment. ## Proposed Changes; Register the geometry variables as inputs in the discrete adjoint flow iteration if 'kind_recording == RECORDING::SOLUTION_AND_MESH'. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492
https://github.com/su2code/SU2/pull/1492:1011,Usability,guid,guide,1011,"This is a small issue I noticed when I worked on some features for the discrete adjoint driver.; In CDiscAdjFluidIteration::RegisterInput the inputs for the AD tape are registered.; At the moment if kind_recording == RECORDING::SOLUTION_AND_MESH is set it only registers the flow variables and has no difference to RECORDING::SOLUTION_VARIABLES. If I understand the logic for this enum option correctly, it should register the flow variables and the mesh coordinates from geometry. I.e. if you want to add unctions to the driver, which can evaluate derivatives w.r.t. flow and geometry in one tape evaluation, you should use this option. In addition, I change an out-of-date comment. ## Proposed Changes; Register the geometry variables as inputs in the discrete adjoint flow iteration if 'kind_recording == RECORDING::SOLUTION_AND_MESH'. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492
https://github.com/su2code/SU2/pull/1492:1302,Usability,simpl,simply,1302,"This is a small issue I noticed when I worked on some features for the discrete adjoint driver.; In CDiscAdjFluidIteration::RegisterInput the inputs for the AD tape are registered.; At the moment if kind_recording == RECORDING::SOLUTION_AND_MESH is set it only registers the flow variables and has no difference to RECORDING::SOLUTION_VARIABLES. If I understand the logic for this enum option correctly, it should register the flow variables and the mesh coordinates from geometry. I.e. if you want to add unctions to the driver, which can evaluate derivatives w.r.t. flow and geometry in one tape evaluation, you should use this option. In addition, I change an out-of-date comment. ## Proposed Changes; Register the geometry variables as inputs in the discrete adjoint flow iteration if 'kind_recording == RECORDING::SOLUTION_AND_MESH'. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492
https://github.com/su2code/SU2/issues/1493:712,Safety,safe,safely,712,"**Describe the bug**. Maybe ""it's not a bug, it's a feature"", but:; I can for example select a field for output; SCREEN_OUTPUT= INNER_ITER ; or use the group,; SCREEN_OUTPUT= ITER; which is equivalent to choosing the fields INNER_ITER, OUTER_ITER, TIME_ITER. But for HISTORY_OUTPUT, I can only choose the group. This leads to a lot of data in the history file if I want to know what happens at a number of markers. So I would like to do this:. HISTORY_OUTPUT= (INNER_ITER, SURFACE_MASSFLOW). to get 2 columns in my history file. Instead I have to do this:. HISTORY_OUTPUT= (ITER, SURFACE_MASSFLOW). which leads to a lot of columns. Is there a reason that only groups are allowed or can this limitation be lifted safely?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1493
https://github.com/su2code/SU2/issues/1495:372,Availability,error,error,372,"**Describe the bug**; It looks like we do not actually need to prescribe unit normal vectors for MARKER_INLET, because it is normalized in the code, e.g. in BC_Inlet. When a 2D inlet is at a 45 degree angle, the normal vector of the inlet can be given as [1.0, 1.0] in the config file. However, when you want to generate and use an inlet profile for this, you will get an error message . ```; ERROR: Found these values in columns 4 - 5; [1.000000e+00, 1.000000e+00]; These values should be components of a unit vector for direction,; but their magnitude is: 1.414214e+00; ```; I suggest to accept non-normalized vectors as input. This simply means that we remove this check for inlet profiles and update the description for the inlet boundary condition: **accepts surface normal vector** instead of **accepts surface unit normal vector**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1495
https://github.com/su2code/SU2/issues/1495:393,Availability,ERROR,ERROR,393,"**Describe the bug**; It looks like we do not actually need to prescribe unit normal vectors for MARKER_INLET, because it is normalized in the code, e.g. in BC_Inlet. When a 2D inlet is at a 45 degree angle, the normal vector of the inlet can be given as [1.0, 1.0] in the config file. However, when you want to generate and use an inlet profile for this, you will get an error message . ```; ERROR: Found these values in columns 4 - 5; [1.000000e+00, 1.000000e+00]; These values should be components of a unit vector for direction,; but their magnitude is: 1.414214e+00; ```; I suggest to accept non-normalized vectors as input. This simply means that we remove this check for inlet profiles and update the description for the inlet boundary condition: **accepts surface normal vector** instead of **accepts surface unit normal vector**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1495
https://github.com/su2code/SU2/issues/1495:697,Deployability,update,update,697,"**Describe the bug**; It looks like we do not actually need to prescribe unit normal vectors for MARKER_INLET, because it is normalized in the code, e.g. in BC_Inlet. When a 2D inlet is at a 45 degree angle, the normal vector of the inlet can be given as [1.0, 1.0] in the config file. However, when you want to generate and use an inlet profile for this, you will get an error message . ```; ERROR: Found these values in columns 4 - 5; [1.000000e+00, 1.000000e+00]; These values should be components of a unit vector for direction,; but their magnitude is: 1.414214e+00; ```; I suggest to accept non-normalized vectors as input. This simply means that we remove this check for inlet profiles and update the description for the inlet boundary condition: **accepts surface normal vector** instead of **accepts surface unit normal vector**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1495
https://github.com/su2code/SU2/issues/1495:378,Integrability,message,message,378,"**Describe the bug**; It looks like we do not actually need to prescribe unit normal vectors for MARKER_INLET, because it is normalized in the code, e.g. in BC_Inlet. When a 2D inlet is at a 45 degree angle, the normal vector of the inlet can be given as [1.0, 1.0] in the config file. However, when you want to generate and use an inlet profile for this, you will get an error message . ```; ERROR: Found these values in columns 4 - 5; [1.000000e+00, 1.000000e+00]; These values should be components of a unit vector for direction,; but their magnitude is: 1.414214e+00; ```; I suggest to accept non-normalized vectors as input. This simply means that we remove this check for inlet profiles and update the description for the inlet boundary condition: **accepts surface normal vector** instead of **accepts surface unit normal vector**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1495
https://github.com/su2code/SU2/issues/1495:273,Modifiability,config,config,273,"**Describe the bug**; It looks like we do not actually need to prescribe unit normal vectors for MARKER_INLET, because it is normalized in the code, e.g. in BC_Inlet. When a 2D inlet is at a 45 degree angle, the normal vector of the inlet can be given as [1.0, 1.0] in the config file. However, when you want to generate and use an inlet profile for this, you will get an error message . ```; ERROR: Found these values in columns 4 - 5; [1.000000e+00, 1.000000e+00]; These values should be components of a unit vector for direction,; but their magnitude is: 1.414214e+00; ```; I suggest to accept non-normalized vectors as input. This simply means that we remove this check for inlet profiles and update the description for the inlet boundary condition: **accepts surface normal vector** instead of **accepts surface unit normal vector**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1495
https://github.com/su2code/SU2/issues/1495:635,Usability,simpl,simply,635,"**Describe the bug**; It looks like we do not actually need to prescribe unit normal vectors for MARKER_INLET, because it is normalized in the code, e.g. in BC_Inlet. When a 2D inlet is at a 45 degree angle, the normal vector of the inlet can be given as [1.0, 1.0] in the config file. However, when you want to generate and use an inlet profile for this, you will get an error message . ```; ERROR: Found these values in columns 4 - 5; [1.000000e+00, 1.000000e+00]; These values should be components of a unit vector for direction,; but their magnitude is: 1.414214e+00; ```; I suggest to accept non-normalized vectors as input. This simply means that we remove this check for inlet profiles and update the description for the inlet boundary condition: **accepts surface normal vector** instead of **accepts surface unit normal vector**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1495
https://github.com/su2code/SU2/pull/1496:1103,Deployability,update,updated,1103,"Hi, all. This PR is for implementing various transition models, which are composed of 1~2 additional transport equations. List of wishes to implement transition model : . - [Langtry and Menter model](https://doi.org/10.2514/1.42362) ; - [k-w-gamma](https://doi.org/10.1016/j.paerosci.2012.08.004); - [SA-AFT](https://doi.org/10.2514/6.2019-0039). Now working on : ; - Langtry and Menter model. ## Related Work. LM feature -> development. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496
https://github.com/su2code/SU2/pull/1496:1030,Testability,test,test,1030,"Hi, all. This PR is for implementing various transition models, which are composed of 1~2 additional transport equations. List of wishes to implement transition model : . - [Langtry and Menter model](https://doi.org/10.2514/1.42362) ; - [k-w-gamma](https://doi.org/10.1016/j.paerosci.2012.08.004); - [SA-AFT](https://doi.org/10.2514/6.2019-0039). Now working on : ; - Langtry and Menter model. ## Related Work. LM feature -> development. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496
https://github.com/su2code/SU2/pull/1496:610,Usability,guid,guide,610,"Hi, all. This PR is for implementing various transition models, which are composed of 1~2 additional transport equations. List of wishes to implement transition model : . - [Langtry and Menter model](https://doi.org/10.2514/1.42362) ; - [k-w-gamma](https://doi.org/10.1016/j.paerosci.2012.08.004); - [SA-AFT](https://doi.org/10.2514/6.2019-0039). Now working on : ; - Langtry and Menter model. ## Related Work. LM feature -> development. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496
https://github.com/su2code/SU2/pull/1496:901,Usability,simpl,simply,901,"Hi, all. This PR is for implementing various transition models, which are composed of 1~2 additional transport equations. List of wishes to implement transition model : . - [Langtry and Menter model](https://doi.org/10.2514/1.42362) ; - [k-w-gamma](https://doi.org/10.1016/j.paerosci.2012.08.004); - [SA-AFT](https://doi.org/10.2514/6.2019-0039). Now working on : ; - Langtry and Menter model. ## Related Work. LM feature -> development. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496
https://github.com/su2code/SU2/pull/1497:797,Deployability,update,updated,797,"## Proposed Changes; adding basic protection for the case of a nonequilibrium viscous flow with ionization; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [x ] I have added a test case that demonstrates my contribution, if necessary.; - [x ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1497
https://github.com/su2code/SU2/pull/1497:723,Testability,test,test,723,"## Proposed Changes; adding basic protection for the case of a nonequilibrium viscous flow with ionization; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [x ] I have added a test case that demonstrates my contribution, if necessary.; - [x ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1497
https://github.com/su2code/SU2/pull/1497:299,Usability,guid,guide,299,"## Proposed Changes; adding basic protection for the case of a nonequilibrium viscous flow with ionization; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [x ] I have added a test case that demonstrates my contribution, if necessary.; - [x ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1497
https://github.com/su2code/SU2/pull/1497:592,Usability,simpl,simply,592,"## Proposed Changes; adding basic protection for the case of a nonequilibrium viscous flow with ionization; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [x ] I have added a test case that demonstrates my contribution, if necessary.; - [x ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1497
https://github.com/su2code/SU2/issues/1498:821,Modifiability,enhance,enhanced,821,"Good evening everybody.; I apoligize in advance for the banality of my question, but I am facing some problematics I did not expect.; I am currently trying to run some symulations on NASA Rotor67 using the Body Force Model (implemented in the GIT branch feature_turbo_bodyforce) but my issues are connected with boundary conditions in general.; I am imposing total conditions at the inlet (Pt = 101325 [Pa], Tt = 288.15 [K]) and static pressure at the outlet (P = 12600 [Pa]). The symulation is then run up to convergece (RMS < 1e-8).; The fact is that when I postprocess the data I find:; - Both the BC are not respected, especially the outlet one;; - The flow shows regular behaviour in the straight outlet section until it develops an unreasoable bubble of high P and T near the ; outlet hub.; These isues are further enhanced as I refine the grid more and more. Even though this is just very short semplification of the problem at hand, I would like to know wheter this issue can be related to my the model I am using or rather to some wrong settings. I have been told that the RMS instability at the outlet hub is not unusual in SU2. How can I hardly enforce my BC? I do not understand why I get an inlet different from what I set. Moreover is there any way to impose a mass flow outlet condition? ; Thanks for the attention.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1498
https://github.com/su2code/SU2/pull/1500:1019,Deployability,update,updated,1019,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The proposed changes consist in providing an hdf5 enabled cgns library inside SU2.; This is done by embedding the needed hdf5 sources inside the cgns directory.; A basic meson.build file helps with compilation (instead of original cmake). ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500
https://github.com/su2code/SU2/pull/1500:946,Testability,test,test,946,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The proposed changes consist in providing an hdf5 enabled cgns library inside SU2.; This is done by embedding the needed hdf5 sources inside the cgns directory.; A basic meson.build file helps with compilation (instead of original cmake). ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500
https://github.com/su2code/SU2/pull/1500:526,Usability,guid,guide,526,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The proposed changes consist in providing an hdf5 enabled cgns library inside SU2.; This is done by embedding the needed hdf5 sources inside the cgns directory.; A basic meson.build file helps with compilation (instead of original cmake). ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500
https://github.com/su2code/SU2/pull/1500:817,Usability,simpl,simply,817,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The proposed changes consist in providing an hdf5 enabled cgns library inside SU2.; This is done by embedding the needed hdf5 sources inside the cgns directory.; A basic meson.build file helps with compilation (instead of original cmake). ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500
https://github.com/su2code/SU2/issues/1507:72,Availability,error,error,72,"reported by @jtlau . > I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":; > ; > Configuring H5pubconf.h using configuration; > ; > externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; > ; > I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; > LMK if you need the full configure error",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1507
https://github.com/su2code/SU2/issues/1507:201,Availability,ERROR,ERROR,201,"reported by @jtlau . > I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":; > ; > Configuring H5pubconf.h using configuration; > ; > externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; > ; > I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; > LMK if you need the full configure error",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1507
https://github.com/su2code/SU2/issues/1507:450,Availability,error,error,450,"reported by @jtlau . > I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":; > ; > Configuring H5pubconf.h using configuration; > ; > externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; > ; > I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; > LMK if you need the full configure error",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1507
https://github.com/su2code/SU2/issues/1507:141,Deployability,configurat,configuration,141,"reported by @jtlau . > I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":; > ; > Configuring H5pubconf.h using configuration; > ; > externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; > ; > I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; > LMK if you need the full configure error",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1507
https://github.com/su2code/SU2/issues/1507:111,Modifiability,Config,Configuring,111,"reported by @jtlau . > I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":; > ; > Configuring H5pubconf.h using configuration; > ; > externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; > ; > I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; > LMK if you need the full configure error",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1507
https://github.com/su2code/SU2/issues/1507:141,Modifiability,config,configuration,141,"reported by @jtlau . > I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":; > ; > Configuring H5pubconf.h using configuration; > ; > externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; > ; > I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; > LMK if you need the full configure error",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1507
https://github.com/su2code/SU2/issues/1507:440,Modifiability,config,configure,440,"reported by @jtlau . > I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":; > ; > Configuring H5pubconf.h using configuration; > ; > externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; > ; > I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; > LMK if you need the full configure error",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1507
https://github.com/su2code/SU2/pull/1508:47,Deployability,configurat,configuration,47,"## Proposed Changes; Detect when meson can run configuration test or if cross compiling for cgns hdf5 backend; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508
https://github.com/su2code/SU2/pull/1508:926,Deployability,update,updated,926,"## Proposed Changes; Detect when meson can run configuration test or if cross compiling for cgns hdf5 backend; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508
https://github.com/su2code/SU2/pull/1508:47,Modifiability,config,configuration,47,"## Proposed Changes; Detect when meson can run configuration test or if cross compiling for cgns hdf5 backend; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508
https://github.com/su2code/SU2/pull/1508:21,Safety,Detect,Detect,21,"## Proposed Changes; Detect when meson can run configuration test or if cross compiling for cgns hdf5 backend; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508
https://github.com/su2code/SU2/pull/1508:61,Testability,test,test,61,"## Proposed Changes; Detect when meson can run configuration test or if cross compiling for cgns hdf5 backend; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508
https://github.com/su2code/SU2/pull/1508:853,Testability,test,test,853,"## Proposed Changes; Detect when meson can run configuration test or if cross compiling for cgns hdf5 backend; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508
https://github.com/su2code/SU2/pull/1508:433,Usability,guid,guide,433,"## Proposed Changes; Detect when meson can run configuration test or if cross compiling for cgns hdf5 backend; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508
https://github.com/su2code/SU2/pull/1508:724,Usability,simpl,simply,724,"## Proposed Changes; Detect when meson can run configuration test or if cross compiling for cgns hdf5 backend; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508
https://github.com/su2code/SU2/pull/1510:947,Deployability,update,updated,947,"## Proposed Changes; Add ""native"" option to enable executable to use the build environment to generate headers instead of the host. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1510
https://github.com/su2code/SU2/pull/1510:874,Testability,test,test,874,"## Proposed Changes; Add ""native"" option to enable executable to use the build environment to generate headers instead of the host. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1510
https://github.com/su2code/SU2/pull/1510:454,Usability,guid,guide,454,"## Proposed Changes; Add ""native"" option to enable executable to use the build environment to generate headers instead of the host. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1510
https://github.com/su2code/SU2/pull/1510:745,Usability,simpl,simply,745,"## Proposed Changes; Add ""native"" option to enable executable to use the build environment to generate headers instead of the host. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1510
https://github.com/su2code/SU2/pull/1511:40,Deployability,configurat,configuration,40,"## Proposed Changes; Try to improve the configuration detection of hdf5.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1511
https://github.com/su2code/SU2/pull/1511:889,Deployability,update,updated,889,"## Proposed Changes; Try to improve the configuration detection of hdf5.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1511
https://github.com/su2code/SU2/pull/1511:40,Modifiability,config,configuration,40,"## Proposed Changes; Try to improve the configuration detection of hdf5.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1511
https://github.com/su2code/SU2/pull/1511:54,Safety,detect,detection,54,"## Proposed Changes; Try to improve the configuration detection of hdf5.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1511
https://github.com/su2code/SU2/pull/1511:816,Testability,test,test,816,"## Proposed Changes; Try to improve the configuration detection of hdf5.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1511
https://github.com/su2code/SU2/pull/1511:396,Usability,guid,guide,396,"## Proposed Changes; Try to improve the configuration detection of hdf5.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1511
https://github.com/su2code/SU2/pull/1511:687,Usability,simpl,simply,687,"## Proposed Changes; Try to improve the configuration detection of hdf5.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1511
https://github.com/su2code/SU2/pull/1512:907,Deployability,update,updated,907,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1512
https://github.com/su2code/SU2/pull/1512:834,Testability,test,test,834,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1512
https://github.com/su2code/SU2/pull/1512:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1512
https://github.com/su2code/SU2/pull/1512:705,Usability,simpl,simply,705,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1512
https://github.com/su2code/SU2/pull/1514:907,Deployability,update,updated,907,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1514
https://github.com/su2code/SU2/pull/1514:834,Testability,test,test,834,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1514
https://github.com/su2code/SU2/pull/1514:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1514
https://github.com/su2code/SU2/pull/1514:705,Usability,simpl,simply,705,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1514
https://github.com/su2code/SU2/pull/1515:907,Deployability,update,updated,907,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1515
https://github.com/su2code/SU2/pull/1515:834,Testability,test,test,834,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1515
https://github.com/su2code/SU2/pull/1515:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1515
https://github.com/su2code/SU2/pull/1515:705,Usability,simpl,simply,705,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1515
https://github.com/su2code/SU2/pull/1516:907,Deployability,update,updated,907,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1516
https://github.com/su2code/SU2/pull/1516:834,Testability,test,test,834,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1516
https://github.com/su2code/SU2/pull/1516:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1516
https://github.com/su2code/SU2/pull/1516:705,Usability,simpl,simply,705,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1516
https://github.com/su2code/SU2/pull/1526:5,Deployability,update,updates,5,This updates some dates and version numbers not captured in the recent update to develop. #1518,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1526
https://github.com/su2code/SU2/pull/1526:71,Deployability,update,update,71,This updates some dates and version numbers not captured in the recent update to develop. #1518,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1526
https://github.com/su2code/SU2/pull/1527:1210,Deployability,update,updated,1210,"ng restarts for prescribed massflow in streamwise periodic simulations (primal and adjoint). The massflow is achieved by dialing a pressure drop which is written and read to/from the `flow.meta` file. That file was used mainly for fixed CL stuff as far as I am aware of. The story is not done though really with this one change. There is still the restart-should-contain-everything-in-the-first-iteration-for-the-adjoint-taping issue which is currently not the case ... and not super straightforward to solve -> see https://github.com/su2code/SU2/commit/c11354115757d673a771e04562e6920024e013a2 description for more info. (EDIT: I will not tackle the massflow adjoint part in this PR, as with the PerSurf output it contains enough stuff which I like to have merged); - I added a `weight` to heat-solid zone OF's; - when `pressure_drop` is used, the first two entries of `MARKER_ANALYZE` are used as out-inlet but more than two markers are allowed. This comes in handy with `FLOW_COEFF_SURF` imo; - Adding per surface output for multizone cases. Was not working before in the way that `_SURF[0]` fields were reported to be ignored. A regression test is updated for that.; - Little fix to the regression system where Testcase.py had unsuitable default values such that failing reg tests were reported passing. So I will continue fiddling a little bit with massflow restarts but i already successfully optimized with that setup so it is not completely useless. ## Related Work; #773 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1527
https://github.com/su2code/SU2/pull/1527:1965,Deployability,update,updated,1965,"ng restarts for prescribed massflow in streamwise periodic simulations (primal and adjoint). The massflow is achieved by dialing a pressure drop which is written and read to/from the `flow.meta` file. That file was used mainly for fixed CL stuff as far as I am aware of. The story is not done though really with this one change. There is still the restart-should-contain-everything-in-the-first-iteration-for-the-adjoint-taping issue which is currently not the case ... and not super straightforward to solve -> see https://github.com/su2code/SU2/commit/c11354115757d673a771e04562e6920024e013a2 description for more info. (EDIT: I will not tackle the massflow adjoint part in this PR, as with the PerSurf output it contains enough stuff which I like to have merged); - I added a `weight` to heat-solid zone OF's; - when `pressure_drop` is used, the first two entries of `MARKER_ANALYZE` are used as out-inlet but more than two markers are allowed. This comes in handy with `FLOW_COEFF_SURF` imo; - Adding per surface output for multizone cases. Was not working before in the way that `_SURF[0]` fields were reported to be ignored. A regression test is updated for that.; - Little fix to the regression system where Testcase.py had unsuitable default values such that failing reg tests were reported passing. So I will continue fiddling a little bit with massflow restarts but i already successfully optimized with that setup so it is not completely useless. ## Related Work; #773 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1527
https://github.com/su2code/SU2/pull/1527:1457,Performance,optimiz,optimized,1457,"ng restarts for prescribed massflow in streamwise periodic simulations (primal and adjoint). The massflow is achieved by dialing a pressure drop which is written and read to/from the `flow.meta` file. That file was used mainly for fixed CL stuff as far as I am aware of. The story is not done though really with this one change. There is still the restart-should-contain-everything-in-the-first-iteration-for-the-adjoint-taping issue which is currently not the case ... and not super straightforward to solve -> see https://github.com/su2code/SU2/commit/c11354115757d673a771e04562e6920024e013a2 description for more info. (EDIT: I will not tackle the massflow adjoint part in this PR, as with the PerSurf output it contains enough stuff which I like to have merged); - I added a `weight` to heat-solid zone OF's; - when `pressure_drop` is used, the first two entries of `MARKER_ANALYZE` are used as out-inlet but more than two markers are allowed. This comes in handy with `FLOW_COEFF_SURF` imo; - Adding per surface output for multizone cases. Was not working before in the way that `_SURF[0]` fields were reported to be ignored. A regression test is updated for that.; - Little fix to the regression system where Testcase.py had unsuitable default values such that failing reg tests were reported passing. So I will continue fiddling a little bit with massflow restarts but i already successfully optimized with that setup so it is not completely useless. ## Related Work; #773 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1527
https://github.com/su2code/SU2/pull/1527:1202,Testability,test,test,1202,"ng restarts for prescribed massflow in streamwise periodic simulations (primal and adjoint). The massflow is achieved by dialing a pressure drop which is written and read to/from the `flow.meta` file. That file was used mainly for fixed CL stuff as far as I am aware of. The story is not done though really with this one change. There is still the restart-should-contain-everything-in-the-first-iteration-for-the-adjoint-taping issue which is currently not the case ... and not super straightforward to solve -> see https://github.com/su2code/SU2/commit/c11354115757d673a771e04562e6920024e013a2 description for more info. (EDIT: I will not tackle the massflow adjoint part in this PR, as with the PerSurf output it contains enough stuff which I like to have merged); - I added a `weight` to heat-solid zone OF's; - when `pressure_drop` is used, the first two entries of `MARKER_ANALYZE` are used as out-inlet but more than two markers are allowed. This comes in handy with `FLOW_COEFF_SURF` imo; - Adding per surface output for multizone cases. Was not working before in the way that `_SURF[0]` fields were reported to be ignored. A regression test is updated for that.; - Little fix to the regression system where Testcase.py had unsuitable default values such that failing reg tests were reported passing. So I will continue fiddling a little bit with massflow restarts but i already successfully optimized with that setup so it is not completely useless. ## Related Work; #773 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1527
https://github.com/su2code/SU2/pull/1527:1273,Testability,Test,Testcase,1273,"ng restarts for prescribed massflow in streamwise periodic simulations (primal and adjoint). The massflow is achieved by dialing a pressure drop which is written and read to/from the `flow.meta` file. That file was used mainly for fixed CL stuff as far as I am aware of. The story is not done though really with this one change. There is still the restart-should-contain-everything-in-the-first-iteration-for-the-adjoint-taping issue which is currently not the case ... and not super straightforward to solve -> see https://github.com/su2code/SU2/commit/c11354115757d673a771e04562e6920024e013a2 description for more info. (EDIT: I will not tackle the massflow adjoint part in this PR, as with the PerSurf output it contains enough stuff which I like to have merged); - I added a `weight` to heat-solid zone OF's; - when `pressure_drop` is used, the first two entries of `MARKER_ANALYZE` are used as out-inlet but more than two markers are allowed. This comes in handy with `FLOW_COEFF_SURF` imo; - Adding per surface output for multizone cases. Was not working before in the way that `_SURF[0]` fields were reported to be ignored. A regression test is updated for that.; - Little fix to the regression system where Testcase.py had unsuitable default values such that failing reg tests were reported passing. So I will continue fiddling a little bit with massflow restarts but i already successfully optimized with that setup so it is not completely useless. ## Related Work; #773 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1527
https://github.com/su2code/SU2/pull/1527:1337,Testability,test,tests,1337,"ng restarts for prescribed massflow in streamwise periodic simulations (primal and adjoint). The massflow is achieved by dialing a pressure drop which is written and read to/from the `flow.meta` file. That file was used mainly for fixed CL stuff as far as I am aware of. The story is not done though really with this one change. There is still the restart-should-contain-everything-in-the-first-iteration-for-the-adjoint-taping issue which is currently not the case ... and not super straightforward to solve -> see https://github.com/su2code/SU2/commit/c11354115757d673a771e04562e6920024e013a2 description for more info. (EDIT: I will not tackle the massflow adjoint part in this PR, as with the PerSurf output it contains enough stuff which I like to have merged); - I added a `weight` to heat-solid zone OF's; - when `pressure_drop` is used, the first two entries of `MARKER_ANALYZE` are used as out-inlet but more than two markers are allowed. This comes in handy with `FLOW_COEFF_SURF` imo; - Adding per surface output for multizone cases. Was not working before in the way that `_SURF[0]` fields were reported to be ignored. A regression test is updated for that.; - Little fix to the regression system where Testcase.py had unsuitable default values such that failing reg tests were reported passing. So I will continue fiddling a little bit with massflow restarts but i already successfully optimized with that setup so it is not completely useless. ## Related Work; #773 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1527
https://github.com/su2code/SU2/pull/1527:1892,Testability,test,test,1892,"ng restarts for prescribed massflow in streamwise periodic simulations (primal and adjoint). The massflow is achieved by dialing a pressure drop which is written and read to/from the `flow.meta` file. That file was used mainly for fixed CL stuff as far as I am aware of. The story is not done though really with this one change. There is still the restart-should-contain-everything-in-the-first-iteration-for-the-adjoint-taping issue which is currently not the case ... and not super straightforward to solve -> see https://github.com/su2code/SU2/commit/c11354115757d673a771e04562e6920024e013a2 description for more info. (EDIT: I will not tackle the massflow adjoint part in this PR, as with the PerSurf output it contains enough stuff which I like to have merged); - I added a `weight` to heat-solid zone OF's; - when `pressure_drop` is used, the first two entries of `MARKER_ANALYZE` are used as out-inlet but more than two markers are allowed. This comes in handy with `FLOW_COEFF_SURF` imo; - Adding per surface output for multizone cases. Was not working before in the way that `_SURF[0]` fields were reported to be ignored. A regression test is updated for that.; - Little fix to the regression system where Testcase.py had unsuitable default values such that failing reg tests were reported passing. So I will continue fiddling a little bit with massflow restarts but i already successfully optimized with that setup so it is not completely useless. ## Related Work; #773 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1527
https://github.com/su2code/SU2/pull/1527:1763,Usability,simpl,simply,1763,"ng restarts for prescribed massflow in streamwise periodic simulations (primal and adjoint). The massflow is achieved by dialing a pressure drop which is written and read to/from the `flow.meta` file. That file was used mainly for fixed CL stuff as far as I am aware of. The story is not done though really with this one change. There is still the restart-should-contain-everything-in-the-first-iteration-for-the-adjoint-taping issue which is currently not the case ... and not super straightforward to solve -> see https://github.com/su2code/SU2/commit/c11354115757d673a771e04562e6920024e013a2 description for more info. (EDIT: I will not tackle the massflow adjoint part in this PR, as with the PerSurf output it contains enough stuff which I like to have merged); - I added a `weight` to heat-solid zone OF's; - when `pressure_drop` is used, the first two entries of `MARKER_ANALYZE` are used as out-inlet but more than two markers are allowed. This comes in handy with `FLOW_COEFF_SURF` imo; - Adding per surface output for multizone cases. Was not working before in the way that `_SURF[0]` fields were reported to be ignored. A regression test is updated for that.; - Little fix to the regression system where Testcase.py had unsuitable default values such that failing reg tests were reported passing. So I will continue fiddling a little bit with massflow restarts but i already successfully optimized with that setup so it is not completely useless. ## Related Work; #773 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1527
https://github.com/su2code/SU2/issues/1528:95,Availability,error,error,95,"**Describe the bug**; Master branch of SU2 version 7.3.0 will not compile due to the following error:. `In file included from ../SU2_CFD/src/output/COutputFactory.cpp:30:`; `../SU2_CFD/src/output/../../include/output/COutput.hpp:50:10: fatal error: mel.hpp: No such file or directory`; ` 50 | #include ""mel.hpp""`; ` | ^~~~~~~~~`; `compilation terminated.`. In commit: ab5ab6c79be812db9dad77ffb9a24b1d96e50733 by Pedro on December 30, 2021, the following code was added to the master branch:. `/*--- AD workaround for a cmath function not defined in CoDi. ---*/`; `namespace mel::internal {`; `inline su2double hypot(const su2double& a, const su2double& b) {`; ` return sqrt(a*a + b*b);`; `}`; `}`; `#include ""mel.hpp""`. What is mel.hpp?. If this is a workaround for a deficiency in CoDiPack, should it have a pre-processor flag to disable it when CodiPack is not in use?. EDITED: To recreate this error, use OS's meson rather than meson.py. **Desktop (please complete the following information):**; - OS: Arch Linux; - C++ compiler and version: GCC 11.1.0; - MPI implementation and version: OpenMPI 4.1.2; - SU2 Version: 7.3.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1528
https://github.com/su2code/SU2/issues/1528:242,Availability,error,error,242,"**Describe the bug**; Master branch of SU2 version 7.3.0 will not compile due to the following error:. `In file included from ../SU2_CFD/src/output/COutputFactory.cpp:30:`; `../SU2_CFD/src/output/../../include/output/COutput.hpp:50:10: fatal error: mel.hpp: No such file or directory`; ` 50 | #include ""mel.hpp""`; ` | ^~~~~~~~~`; `compilation terminated.`. In commit: ab5ab6c79be812db9dad77ffb9a24b1d96e50733 by Pedro on December 30, 2021, the following code was added to the master branch:. `/*--- AD workaround for a cmath function not defined in CoDi. ---*/`; `namespace mel::internal {`; `inline su2double hypot(const su2double& a, const su2double& b) {`; ` return sqrt(a*a + b*b);`; `}`; `}`; `#include ""mel.hpp""`. What is mel.hpp?. If this is a workaround for a deficiency in CoDiPack, should it have a pre-processor flag to disable it when CodiPack is not in use?. EDITED: To recreate this error, use OS's meson rather than meson.py. **Desktop (please complete the following information):**; - OS: Arch Linux; - C++ compiler and version: GCC 11.1.0; - MPI implementation and version: OpenMPI 4.1.2; - SU2 Version: 7.3.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1528
https://github.com/su2code/SU2/issues/1528:897,Availability,error,error,897,"**Describe the bug**; Master branch of SU2 version 7.3.0 will not compile due to the following error:. `In file included from ../SU2_CFD/src/output/COutputFactory.cpp:30:`; `../SU2_CFD/src/output/../../include/output/COutput.hpp:50:10: fatal error: mel.hpp: No such file or directory`; ` 50 | #include ""mel.hpp""`; ` | ^~~~~~~~~`; `compilation terminated.`. In commit: ab5ab6c79be812db9dad77ffb9a24b1d96e50733 by Pedro on December 30, 2021, the following code was added to the master branch:. `/*--- AD workaround for a cmath function not defined in CoDi. ---*/`; `namespace mel::internal {`; `inline su2double hypot(const su2double& a, const su2double& b) {`; ` return sqrt(a*a + b*b);`; `}`; `}`; `#include ""mel.hpp""`. What is mel.hpp?. If this is a workaround for a deficiency in CoDiPack, should it have a pre-processor flag to disable it when CodiPack is not in use?. EDITED: To recreate this error, use OS's meson rather than meson.py. **Desktop (please complete the following information):**; - OS: Arch Linux; - C++ compiler and version: GCC 11.1.0; - MPI implementation and version: OpenMPI 4.1.2; - SU2 Version: 7.3.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1528
https://github.com/su2code/SU2/pull/1530:1190,Deployability,update,updated,1190,"Hi,. Possibility to give the Heatflux over a boundary in [W] instead of [W/m^2]. This was already possible in the HeatSolver but now also in Inc and Comp flow solvers.; Prescribing a fixed Watt is especially useful in optimization scenarios with Temperature OF where otherwise the optimizer can exploit that a smaller boundary almost certainly yields smaller Temperatures. The necessary SurfaceAreas are computed and stored in CGeometry instances which is computed once at program start by a call from the Driver. I also added NEMO for this feature. There is currently no Testcase which uses `INTEGRATED_HEATFLUX= YES` so one might want to change that :grimacing: :shushing_face: . For the HeatSolver this was originally introduced at some point by @oleburghardt . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530
https://github.com/su2code/SU2/pull/1530:189,Energy Efficiency,Watt,Watt,189,"Hi,. Possibility to give the Heatflux over a boundary in [W] instead of [W/m^2]. This was already possible in the HeatSolver but now also in Inc and Comp flow solvers.; Prescribing a fixed Watt is especially useful in optimization scenarios with Temperature OF where otherwise the optimizer can exploit that a smaller boundary almost certainly yields smaller Temperatures. The necessary SurfaceAreas are computed and stored in CGeometry instances which is computed once at program start by a call from the Driver. I also added NEMO for this feature. There is currently no Testcase which uses `INTEGRATED_HEATFLUX= YES` so one might want to change that :grimacing: :shushing_face: . For the HeatSolver this was originally introduced at some point by @oleburghardt . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530
https://github.com/su2code/SU2/pull/1530:218,Performance,optimiz,optimization,218,"Hi,. Possibility to give the Heatflux over a boundary in [W] instead of [W/m^2]. This was already possible in the HeatSolver but now also in Inc and Comp flow solvers.; Prescribing a fixed Watt is especially useful in optimization scenarios with Temperature OF where otherwise the optimizer can exploit that a smaller boundary almost certainly yields smaller Temperatures. The necessary SurfaceAreas are computed and stored in CGeometry instances which is computed once at program start by a call from the Driver. I also added NEMO for this feature. There is currently no Testcase which uses `INTEGRATED_HEATFLUX= YES` so one might want to change that :grimacing: :shushing_face: . For the HeatSolver this was originally introduced at some point by @oleburghardt . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530
https://github.com/su2code/SU2/pull/1530:281,Performance,optimiz,optimizer,281,"Hi,. Possibility to give the Heatflux over a boundary in [W] instead of [W/m^2]. This was already possible in the HeatSolver but now also in Inc and Comp flow solvers.; Prescribing a fixed Watt is especially useful in optimization scenarios with Temperature OF where otherwise the optimizer can exploit that a smaller boundary almost certainly yields smaller Temperatures. The necessary SurfaceAreas are computed and stored in CGeometry instances which is computed once at program start by a call from the Driver. I also added NEMO for this feature. There is currently no Testcase which uses `INTEGRATED_HEATFLUX= YES` so one might want to change that :grimacing: :shushing_face: . For the HeatSolver this was originally introduced at some point by @oleburghardt . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530
https://github.com/su2code/SU2/pull/1530:572,Testability,Test,Testcase,572,"Hi,. Possibility to give the Heatflux over a boundary in [W] instead of [W/m^2]. This was already possible in the HeatSolver but now also in Inc and Comp flow solvers.; Prescribing a fixed Watt is especially useful in optimization scenarios with Temperature OF where otherwise the optimizer can exploit that a smaller boundary almost certainly yields smaller Temperatures. The necessary SurfaceAreas are computed and stored in CGeometry instances which is computed once at program start by a call from the Driver. I also added NEMO for this feature. There is currently no Testcase which uses `INTEGRATED_HEATFLUX= YES` so one might want to change that :grimacing: :shushing_face: . For the HeatSolver this was originally introduced at some point by @oleburghardt . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530
https://github.com/su2code/SU2/pull/1530:1117,Testability,test,test,1117,"Hi,. Possibility to give the Heatflux over a boundary in [W] instead of [W/m^2]. This was already possible in the HeatSolver but now also in Inc and Comp flow solvers.; Prescribing a fixed Watt is especially useful in optimization scenarios with Temperature OF where otherwise the optimizer can exploit that a smaller boundary almost certainly yields smaller Temperatures. The necessary SurfaceAreas are computed and stored in CGeometry instances which is computed once at program start by a call from the Driver. I also added NEMO for this feature. There is currently no Testcase which uses `INTEGRATED_HEATFLUX= YES` so one might want to change that :grimacing: :shushing_face: . For the HeatSolver this was originally introduced at some point by @oleburghardt . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530
https://github.com/su2code/SU2/pull/1530:988,Usability,simpl,simply,988,"Hi,. Possibility to give the Heatflux over a boundary in [W] instead of [W/m^2]. This was already possible in the HeatSolver but now also in Inc and Comp flow solvers.; Prescribing a fixed Watt is especially useful in optimization scenarios with Temperature OF where otherwise the optimizer can exploit that a smaller boundary almost certainly yields smaller Temperatures. The necessary SurfaceAreas are computed and stored in CGeometry instances which is computed once at program start by a call from the Driver. I also added NEMO for this feature. There is currently no Testcase which uses `INTEGRATED_HEATFLUX= YES` so one might want to change that :grimacing: :shushing_face: . For the HeatSolver this was originally introduced at some point by @oleburghardt . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530
https://github.com/su2code/SU2/issues/1531:190,Energy Efficiency,monitor,monitor,190,"**Is your feature request related to a problem? Please describe.**; In my application the heat flux over various surfaces is an important figure of merit of a specific design. Being able to monitor the average (or total) heat flux over different surfaces during runtime would be a good metric for judging convergence and quality of the design. Currently (as of 7.3.0) this does not seem to be possible. *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*; In my mesh I have defined various markers which indicate the surfaces of interest, where I would like the average heat-flux to evaluate over time. As suggested by the DryRun info I've indicated the surfaces with the MARKER_MONITORING specifier in the config file:. `MARKER_MONITORING = (NS_WALL_RESONATORTIP, NS_WALL_RESONATOR3, NS_WALL_RESONATOR2)`. However, the history and screen output shows only the heat flux aggregated over all surfaces. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. I would like the values of the HEAT group to behave just like those of the FLOW_COEFF group, where the heat flux is indicated on a per-surface basis. This would allow me to track the development of the heat fluxes with good time resolution, without having to write an excessive amount of surface files. The output in the solution history could be similar to that of other output groups, i. e.:; `""Avg_HeatFlux(SURF1)"",""Avg_HeatFlux(SURF2)"",...`. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*; Regularly exporting the entire surface data to discrete files and analyzing them during post-processing is a possible work-around, but leads to an excessive amount of files. **Additional context**; *Add any other context or screenshots about the feature request here.*; My cases are highly transient and require quite some timesteps until a quasi-stationary limit cycle ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1531
https://github.com/su2code/SU2/issues/1531:2185,Energy Efficiency,monitor,monitor,2185," heat flux over different surfaces during runtime would be a good metric for judging convergence and quality of the design. Currently (as of 7.3.0) this does not seem to be possible. *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*; In my mesh I have defined various markers which indicate the surfaces of interest, where I would like the average heat-flux to evaluate over time. As suggested by the DryRun info I've indicated the surfaces with the MARKER_MONITORING specifier in the config file:. `MARKER_MONITORING = (NS_WALL_RESONATORTIP, NS_WALL_RESONATOR3, NS_WALL_RESONATOR2)`. However, the history and screen output shows only the heat flux aggregated over all surfaces. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. I would like the values of the HEAT group to behave just like those of the FLOW_COEFF group, where the heat flux is indicated on a per-surface basis. This would allow me to track the development of the heat fluxes with good time resolution, without having to write an excessive amount of surface files. The output in the solution history could be similar to that of other output groups, i. e.:; `""Avg_HeatFlux(SURF1)"",""Avg_HeatFlux(SURF2)"",...`. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*; Regularly exporting the entire surface data to discrete files and analyzing them during post-processing is a possible work-around, but leads to an excessive amount of files. **Additional context**; *Add any other context or screenshots about the feature request here.*; My cases are highly transient and require quite some timesteps until a quasi-stationary limit cycle is reached. In the limit cycle the cycle-averaged net heat fluxes should be nearly zero. However, the magnitude of the heat transport is also of interest, which is why I would like to monitor these properties over time.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1531
https://github.com/su2code/SU2/issues/1531:750,Modifiability,config,config,750,"**Is your feature request related to a problem? Please describe.**; In my application the heat flux over various surfaces is an important figure of merit of a specific design. Being able to monitor the average (or total) heat flux over different surfaces during runtime would be a good metric for judging convergence and quality of the design. Currently (as of 7.3.0) this does not seem to be possible. *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*; In my mesh I have defined various markers which indicate the surfaces of interest, where I would like the average heat-flux to evaluate over time. As suggested by the DryRun info I've indicated the surfaces with the MARKER_MONITORING specifier in the config file:. `MARKER_MONITORING = (NS_WALL_RESONATORTIP, NS_WALL_RESONATOR3, NS_WALL_RESONATOR2)`. However, the history and screen output shows only the heat flux aggregated over all surfaces. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. I would like the values of the HEAT group to behave just like those of the FLOW_COEFF group, where the heat flux is indicated on a per-surface basis. This would allow me to track the development of the heat fluxes with good time resolution, without having to write an excessive amount of surface files. The output in the solution history could be similar to that of other output groups, i. e.:; `""Avg_HeatFlux(SURF1)"",""Avg_HeatFlux(SURF2)"",...`. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*; Regularly exporting the entire surface data to discrete files and analyzing them during post-processing is a possible work-around, but leads to an excessive amount of files. **Additional context**; *Add any other context or screenshots about the feature request here.*; My cases are highly transient and require quite some timesteps until a quasi-stationary limit cycle ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1531
https://github.com/su2code/SU2/issues/1531:406,Usability,clear,clear,406,"**Is your feature request related to a problem? Please describe.**; In my application the heat flux over various surfaces is an important figure of merit of a specific design. Being able to monitor the average (or total) heat flux over different surfaces during runtime would be a good metric for judging convergence and quality of the design. Currently (as of 7.3.0) this does not seem to be possible. *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*; In my mesh I have defined various markers which indicate the surfaces of interest, where I would like the average heat-flux to evaluate over time. As suggested by the DryRun info I've indicated the surfaces with the MARKER_MONITORING specifier in the config file:. `MARKER_MONITORING = (NS_WALL_RESONATORTIP, NS_WALL_RESONATOR3, NS_WALL_RESONATOR2)`. However, the history and screen output shows only the heat flux aggregated over all surfaces. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. I would like the values of the HEAT group to behave just like those of the FLOW_COEFF group, where the heat flux is indicated on a per-surface basis. This would allow me to track the development of the heat fluxes with good time resolution, without having to write an excessive amount of surface files. The output in the solution history could be similar to that of other output groups, i. e.:; `""Avg_HeatFlux(SURF1)"",""Avg_HeatFlux(SURF2)"",...`. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*; Regularly exporting the entire surface data to discrete files and analyzing them during post-processing is a possible work-around, but leads to an excessive amount of files. **Additional context**; *Add any other context or screenshots about the feature request here.*; My cases are highly transient and require quite some timesteps until a quasi-stationary limit cycle ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1531
https://github.com/su2code/SU2/issues/1531:985,Usability,clear,clear,985,"**Is your feature request related to a problem? Please describe.**; In my application the heat flux over various surfaces is an important figure of merit of a specific design. Being able to monitor the average (or total) heat flux over different surfaces during runtime would be a good metric for judging convergence and quality of the design. Currently (as of 7.3.0) this does not seem to be possible. *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*; In my mesh I have defined various markers which indicate the surfaces of interest, where I would like the average heat-flux to evaluate over time. As suggested by the DryRun info I've indicated the surfaces with the MARKER_MONITORING specifier in the config file:. `MARKER_MONITORING = (NS_WALL_RESONATORTIP, NS_WALL_RESONATOR3, NS_WALL_RESONATOR2)`. However, the history and screen output shows only the heat flux aggregated over all surfaces. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. I would like the values of the HEAT group to behave just like those of the FLOW_COEFF group, where the heat flux is indicated on a per-surface basis. This would allow me to track the development of the heat fluxes with good time resolution, without having to write an excessive amount of surface files. The output in the solution history could be similar to that of other output groups, i. e.:; `""Avg_HeatFlux(SURF1)"",""Avg_HeatFlux(SURF2)"",...`. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*; Regularly exporting the entire surface data to discrete files and analyzing them during post-processing is a possible work-around, but leads to an excessive amount of files. **Additional context**; *Add any other context or screenshots about the feature request here.*; My cases are highly transient and require quite some timesteps until a quasi-stationary limit cycle ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1531
https://github.com/su2code/SU2/issues/1531:1539,Usability,clear,clear,1539," heat flux over different surfaces during runtime would be a good metric for judging convergence and quality of the design. Currently (as of 7.3.0) this does not seem to be possible. *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*; In my mesh I have defined various markers which indicate the surfaces of interest, where I would like the average heat-flux to evaluate over time. As suggested by the DryRun info I've indicated the surfaces with the MARKER_MONITORING specifier in the config file:. `MARKER_MONITORING = (NS_WALL_RESONATORTIP, NS_WALL_RESONATOR3, NS_WALL_RESONATOR2)`. However, the history and screen output shows only the heat flux aggregated over all surfaces. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. I would like the values of the HEAT group to behave just like those of the FLOW_COEFF group, where the heat flux is indicated on a per-surface basis. This would allow me to track the development of the heat fluxes with good time resolution, without having to write an excessive amount of surface files. The output in the solution history could be similar to that of other output groups, i. e.:; `""Avg_HeatFlux(SURF1)"",""Avg_HeatFlux(SURF2)"",...`. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*; Regularly exporting the entire surface data to discrete files and analyzing them during post-processing is a possible work-around, but leads to an excessive amount of files. **Additional context**; *Add any other context or screenshots about the feature request here.*; My cases are highly transient and require quite some timesteps until a quasi-stationary limit cycle is reached. In the limit cycle the cycle-averaged net heat fluxes should be nearly zero. However, the magnitude of the heat transport is also of interest, which is why I would like to monitor these properties over time.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1531
https://github.com/su2code/SU2/pull/1532:509,Deployability,update,updates,509,"## Proposed Changes; In `SU2/meson.build`, specify the version of the C standard used when compiling SU2, as C99. It must be at least C99 because of the for loop initial declarations in `externals/cgns/cgnslib.c`. (One could probably use a newer C standard as well.). This change was necessary to compile SU2 on a system where `cc` is the GCC 4.8.5 (from 2015), which used `-std=gnu89` by default. ## Related Work; The change was not necessary in v7.1.0. I suppose it has something to do with the recent CGNS updates (#1500, #1507, ...). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1532
https://github.com/su2code/SU2/pull/1532:1203,Deployability,update,updated,1203,"## Proposed Changes; In `SU2/meson.build`, specify the version of the C standard used when compiling SU2, as C99. It must be at least C99 because of the for loop initial declarations in `externals/cgns/cgnslib.c`. (One could probably use a newer C standard as well.). This change was necessary to compile SU2 on a system where `cc` is the GCC 4.8.5 (from 2015), which used `-std=gnu89` by default. ## Related Work; The change was not necessary in v7.1.0. I suppose it has something to do with the recent CGNS updates (#1500, #1507, ...). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1532
https://github.com/su2code/SU2/pull/1532:1130,Testability,test,test,1130,"## Proposed Changes; In `SU2/meson.build`, specify the version of the C standard used when compiling SU2, as C99. It must be at least C99 because of the for loop initial declarations in `externals/cgns/cgnslib.c`. (One could probably use a newer C standard as well.). This change was necessary to compile SU2 on a system where `cc` is the GCC 4.8.5 (from 2015), which used `-std=gnu89` by default. ## Related Work; The change was not necessary in v7.1.0. I suppose it has something to do with the recent CGNS updates (#1500, #1507, ...). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1532
https://github.com/su2code/SU2/pull/1532:710,Usability,guid,guide,710,"## Proposed Changes; In `SU2/meson.build`, specify the version of the C standard used when compiling SU2, as C99. It must be at least C99 because of the for loop initial declarations in `externals/cgns/cgnslib.c`. (One could probably use a newer C standard as well.). This change was necessary to compile SU2 on a system where `cc` is the GCC 4.8.5 (from 2015), which used `-std=gnu89` by default. ## Related Work; The change was not necessary in v7.1.0. I suppose it has something to do with the recent CGNS updates (#1500, #1507, ...). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1532
https://github.com/su2code/SU2/pull/1532:1001,Usability,simpl,simply,1001,"## Proposed Changes; In `SU2/meson.build`, specify the version of the C standard used when compiling SU2, as C99. It must be at least C99 because of the for loop initial declarations in `externals/cgns/cgnslib.c`. (One could probably use a newer C standard as well.). This change was necessary to compile SU2 on a system where `cc` is the GCC 4.8.5 (from 2015), which used `-std=gnu89` by default. ## Related Work; The change was not necessary in v7.1.0. I suppose it has something to do with the recent CGNS updates (#1500, #1507, ...). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1532
https://github.com/su2code/SU2/pull/1533:1039,Deployability,update,updated,1039,"This PR addresses the dual-time solver of NEMO. A small lack of initialization of the solutions was causing problems. ; There are also some small code clean-ups here and there. Our current regression uses regular time-stepping, not sure if its worth adding an additional case for this.; I have yet to fully test this to make sure it works properly. ## Related Work; #1391 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1533
https://github.com/su2code/SU2/pull/1533:307,Testability,test,test,307,"This PR addresses the dual-time solver of NEMO. A small lack of initialization of the solutions was causing problems. ; There are also some small code clean-ups here and there. Our current regression uses regular time-stepping, not sure if its worth adding an additional case for this.; I have yet to fully test this to make sure it works properly. ## Related Work; #1391 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1533
https://github.com/su2code/SU2/pull/1533:966,Testability,test,test,966,"This PR addresses the dual-time solver of NEMO. A small lack of initialization of the solutions was causing problems. ; There are also some small code clean-ups here and there. Our current regression uses regular time-stepping, not sure if its worth adding an additional case for this.; I have yet to fully test this to make sure it works properly. ## Related Work; #1391 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1533
https://github.com/su2code/SU2/pull/1533:546,Usability,guid,guide,546,"This PR addresses the dual-time solver of NEMO. A small lack of initialization of the solutions was causing problems. ; There are also some small code clean-ups here and there. Our current regression uses regular time-stepping, not sure if its worth adding an additional case for this.; I have yet to fully test this to make sure it works properly. ## Related Work; #1391 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1533
https://github.com/su2code/SU2/pull/1533:837,Usability,simpl,simply,837,"This PR addresses the dual-time solver of NEMO. A small lack of initialization of the solutions was causing problems. ; There are also some small code clean-ups here and there. Our current regression uses regular time-stepping, not sure if its worth adding an additional case for this.; I have yet to fully test this to make sure it works properly. ## Related Work; #1391 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1533
https://github.com/su2code/SU2/pull/1535:52,Deployability,update,update,52,"## Proposed Changes; Just your periodic small xcode update, including header search update for mel.hpp. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1535
https://github.com/su2code/SU2/pull/1535:84,Deployability,update,update,84,"## Proposed Changes; Just your periodic small xcode update, including header search update for mel.hpp. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1535
https://github.com/su2code/SU2/pull/1535:778,Deployability,update,updated,778,"## Proposed Changes; Just your periodic small xcode update, including header search update for mel.hpp. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1535
https://github.com/su2code/SU2/pull/1535:702,Testability,test,test,702,"## Proposed Changes; Just your periodic small xcode update, including header search update for mel.hpp. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1535
https://github.com/su2code/SU2/pull/1535:276,Usability,guid,guide,276,"## Proposed Changes; Just your periodic small xcode update, including header search update for mel.hpp. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1535
https://github.com/su2code/SU2/pull/1535:569,Usability,simpl,simply,569,"## Proposed Changes; Just your periodic small xcode update, including header search update for mel.hpp. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1535
https://github.com/su2code/SU2/pull/1536:3246,Availability,recover,recovered,3246,"ers are O(1 - 1e4) so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massflow and dp for prescribed dp); ![image](https://user-images.githubusercontent.com/31306376/152564385-4ce45439-ec60-459a-a16b-7ec61b0c1cec.png); For massflow OF I get wrongly reported gradients by the adjoints, both before and after this PR; ![image](https://user-images.githubusercontent.com/31306376/152565095-f84084c6-3568-495b-bc14-19278b2a5eb6.png); and pressure drop OF; ![image](https://user-images.githubusercontent.com/31306376/152565915-1f5a9bd8-203a-4711-81f7-7021e307c756.png). Two other aspects.; 1. the PRESSURE_DROP OF is computed in streamwise periodic flow using the Recovered_Pressure (as the ""standard"" Pressure is the same on both faces). There I need to make sure that the recovered values are computed as well after the iteration (but with the Flow Preprocessing after the MultiGridCycle that seems to be the case); 2. As pressure drop is iterated to get the correct flow solution, is it necessary to treat is specially in the adjoint like a solution variable? <- turns out, that was the case and also is the majority of work done in this PR. Le fin. ## Related Work; #773 initial implementation; #1527 first step in getting a consistent restart for massflow prescribed flow by storing the pressure drop in massflow-meta file. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536
https://github.com/su2code/SU2/pull/1536:535,Deployability,update,update,535,"Dear reader, . Let me give a little bit background first:. When a massflow is prescribed for periodic flow (`KIND_STREAMWISE_PERIODIC= MASSFLOW`), then a pressure drop is iterated(/adapted in each iteration) to fulfill that massflow requirement. In the Volume Source term only this pressure drop is used. The initial value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Mass",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536
https://github.com/su2code/SU2/pull/1536:892,Deployability,update,update,892,"Dear reader, . Let me give a little bit background first:. When a massflow is prescribed for periodic flow (`KIND_STREAMWISE_PERIODIC= MASSFLOW`), then a pressure drop is iterated(/adapted in each iteration) to fulfill that massflow requirement. In the Volume Source term only this pressure drop is used. The initial value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Mass",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536
https://github.com/su2code/SU2/pull/1536:1239,Deployability,update,update,1239,"Volume Source term only this pressure drop is used. The initial value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536
https://github.com/su2code/SU2/pull/1536:1277,Deployability,Update,Update,1277,"al value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The Pressure-drop gradient is O(1e-5) where the others are O(1 -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536
https://github.com/su2code/SU2/pull/1536:4226,Deployability,update,updated,4226," so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massflow and dp for prescribed dp); ![image](https://user-images.githubusercontent.com/31306376/152564385-4ce45439-ec60-459a-a16b-7ec61b0c1cec.png); For massflow OF I get wrongly reported gradients by the adjoints, both before and after this PR; ![image](https://user-images.githubusercontent.com/31306376/152565095-f84084c6-3568-495b-bc14-19278b2a5eb6.png); and pressure drop OF; ![image](https://user-images.githubusercontent.com/31306376/152565915-1f5a9bd8-203a-4711-81f7-7021e307c756.png). Two other aspects.; 1. the PRESSURE_DROP OF is computed in streamwise periodic flow using the Recovered_Pressure (as the ""standard"" Pressure is the same on both faces). There I need to make sure that the recovered values are computed as well after the iteration (but with the Flow Preprocessing after the MultiGridCycle that seems to be the case); 2. As pressure drop is iterated to get the correct flow solution, is it necessary to treat is specially in the adjoint like a solution variable? <- turns out, that was the case and also is the majority of work done in this PR. Le fin. ## Related Work; #773 initial implementation; #1527 first step in getting a consistent restart for massflow prescribed flow by storing the pressure drop in massflow-meta file. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536
https://github.com/su2code/SU2/pull/1536:181,Energy Efficiency,adapt,adapted,181,"Dear reader, . Let me give a little bit background first:. When a massflow is prescribed for periodic flow (`KIND_STREAMWISE_PERIODIC= MASSFLOW`), then a pressure drop is iterated(/adapted in each iteration) to fulfill that massflow requirement. In the Volume Source term only this pressure drop is used. The initial value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Mass",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536
https://github.com/su2code/SU2/pull/1536:705,Integrability,rout,routine,705,"Dear reader, . Let me give a little bit background first:. When a massflow is prescribed for periodic flow (`KIND_STREAMWISE_PERIODIC= MASSFLOW`), then a pressure drop is iterated(/adapted in each iteration) to fulfill that massflow requirement. In the Volume Source term only this pressure drop is used. The initial value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Mass",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536
https://github.com/su2code/SU2/pull/1536:1501,Integrability,Interface,Interface,1501,"sure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The Pressure-drop gradient is O(1e-5) where the others are O(1 - 1e4) so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massf",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536
https://github.com/su2code/SU2/pull/1536:181,Modifiability,adapt,adapted,181,"Dear reader, . Let me give a little bit background first:. When a massflow is prescribed for periodic flow (`KIND_STREAMWISE_PERIODIC= MASSFLOW`), then a pressure drop is iterated(/adapted in each iteration) to fulfill that massflow requirement. In the Volume Source term only this pressure drop is used. The initial value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Mass",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536
https://github.com/su2code/SU2/pull/1536:1427,Modifiability,variab,variables,1427,"sure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The Pressure-drop gradient is O(1e-5) where the others are O(1 - 1e4) so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massf",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536
https://github.com/su2code/SU2/pull/1536:3525,Modifiability,variab,variable,3525," so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massflow and dp for prescribed dp); ![image](https://user-images.githubusercontent.com/31306376/152564385-4ce45439-ec60-459a-a16b-7ec61b0c1cec.png); For massflow OF I get wrongly reported gradients by the adjoints, both before and after this PR; ![image](https://user-images.githubusercontent.com/31306376/152565095-f84084c6-3568-495b-bc14-19278b2a5eb6.png); and pressure drop OF; ![image](https://user-images.githubusercontent.com/31306376/152565915-1f5a9bd8-203a-4711-81f7-7021e307c756.png). Two other aspects.; 1. the PRESSURE_DROP OF is computed in streamwise periodic flow using the Recovered_Pressure (as the ""standard"" Pressure is the same on both faces). There I need to make sure that the recovered values are computed as well after the iteration (but with the Flow Preprocessing after the MultiGridCycle that seems to be the case); 2. As pressure drop is iterated to get the correct flow solution, is it necessary to treat is specially in the adjoint like a solution variable? <- turns out, that was the case and also is the majority of work done in this PR. Le fin. ## Related Work; #773 initial implementation; #1527 first step in getting a consistent restart for massflow prescribed flow by storing the pressure drop in massflow-meta file. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536
https://github.com/su2code/SU2/pull/1536:2088,Performance,optimiz,optimizer,2088,"t makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The Pressure-drop gradient is O(1e-5) where the others are O(1 - 1e4) so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massflow and dp for prescribed dp); ![image](https://user-images.githubusercontent.com/31306376/152564385-4ce45439-ec60-459a-a16b-7ec61b0c1cec.png); For massflow OF I get wrongly reported gradients by the adjoints, both before and after this PR; ![image](https://user-images.githubusercontent.com/31306376/152565095-f84084c6-3568-495b-bc14-19278b2a5eb6.png); and pressure drop OF; ![image](https://user-images.githubusercontent.com/31306376/152565915-1f5a9bd8-203a-4711-81f7-7021e307c756.png). Two other aspects.; 1. the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536
https://github.com/su2code/SU2/pull/1536:3246,Safety,recover,recovered,3246,"ers are O(1 - 1e4) so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massflow and dp for prescribed dp); ![image](https://user-images.githubusercontent.com/31306376/152564385-4ce45439-ec60-459a-a16b-7ec61b0c1cec.png); For massflow OF I get wrongly reported gradients by the adjoints, both before and after this PR; ![image](https://user-images.githubusercontent.com/31306376/152565095-f84084c6-3568-495b-bc14-19278b2a5eb6.png); and pressure drop OF; ![image](https://user-images.githubusercontent.com/31306376/152565915-1f5a9bd8-203a-4711-81f7-7021e307c756.png). Two other aspects.; 1. the PRESSURE_DROP OF is computed in streamwise periodic flow using the Recovered_Pressure (as the ""standard"" Pressure is the same on both faces). There I need to make sure that the recovered values are computed as well after the iteration (but with the Flow Preprocessing after the MultiGridCycle that seems to be the case); 2. As pressure drop is iterated to get the correct flow solution, is it necessary to treat is specially in the adjoint like a solution variable? <- turns out, that was the case and also is the majority of work done in this PR. Le fin. ## Related Work; #773 initial implementation; #1527 first step in getting a consistent restart for massflow prescribed flow by storing the pressure drop in massflow-meta file. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536
https://github.com/su2code/SU2/pull/1536:1341,Security,validat,validation,1341,"al value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The Pressure-drop gradient is O(1e-5) where the others are O(1 -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536
