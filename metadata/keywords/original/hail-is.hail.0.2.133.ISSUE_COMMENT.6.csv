id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:204,Modifiability,config,config,204,"I'm hitting default & my local build is latest hi/main (`15a45cfb9b0f8da01b2d0408993556f8391749e3`), still broke. I started hail this way:; ```; hailctl config set batch/billing_project hail; hailctl dev config set default_namespace default; HAIL_QUERY_BACKEND=service ipython; ```; ```ipython; In [1]: In [1]: import hail as hl ; ...: ...: ; ...: ...: temp = hl.utils.range_table(100) ; ...: ...: temp.write('gs://danking/workshop-test/1kg.mt', overwrite=True) ; ...: ; Initializing Hail with default parameters...; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.61-15a45cfb9b0f; LOGGING: writing to /Users/dking/projects/hail/hail-20210202-1642-0.2.61-15a45cfb9b0f.log; Traceback (most recent call last):; File ""<ipython-input-1-92be8dd8c99f>"", line 4, in <module>; temp.write('gs://danking/workshop-test/1kg.mt', overwrite=True); File ""</Users/dking/miniconda3/lib/python3.7/site-packages/decorator.py:decorator-gen-1094>"", line 2, in write; File ""/Users/dking/projects/hail/hail/python/hail/typecheck/check.py"", line 577, in wrapper; return __original_func(*args_, **kwargs_); File ""/Users/dking/projects/hail/hail/python/hail/table.py"", line 1271, in write; Env.backend().execute(ir.TableWrite(self._tir, ir.TableNativeWriter(output, overwrite, stage_locally, _codec_spec))); File ""/Users/dking/projects/hail/hail/python/hail/backend/service_backend.py"", line 103, in execute; bucket=self._bucket); File ""/Users/dking/projects/hail/hail/python/hail/backend/service_backend.py"", line 48, in request; return async_to_blocking(retry_transient_errors(self.async_request, endpoint, **data)); File ""/Users/dking/projects/hail/hail/python/hailtop/utils/utils.py"", line 116, in async_to_blocking; return asyncio.get_event_loop().run_until_complete(coro); File ""/Users/dking/miniconda3/lib/python3.7/asyncio/base_events.py"", line 587, in run_until_complete; return future.result(); File ""/Users/dking/projects/hail/hail/python/hailtop/utils/utils.py"", line 395, in ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601
https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:9220,Security,Hash,HashMap,9220,"vType"":""Struct{children:Array[Struct{index_file_offset:Int64,first_idx:Int64,first_key:Struct{idx:Int32},first_record_offset:Int64,first_annotation:Struct{}}]}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},struct{idx: int32},struct{},None),Map()))), WriteMetadata(ToArray(StreamMap(ToStream(Ref(__iruid_369,array<struct{filePath: str, partitionCounts: int64}>),false),__iruid_377,GetField(Ref(__iruid_377,struct{filePath: str, partitionCounts: int64}),partitionCounts))),TableSpecWriter(gs://danking/workshop-test/1kg.mt,Table{global:Struct{},key:[idx],row:Struct{idx:Int32}},rows,globals,references,true))))),RelationalWriter(gs://danking/workshop-test/1kg.mt,true,Some((references,Set()))))); 	at scala.collection.MapLike$class.default(MapLike.scala:228); 	at scala.collection.AbstractMap.default(Map.scala:59); 	at scala.collection.mutable.HashMap.apply(HashMap.scala:65); 	at is.hail.expr.ir.Memo.lookup(RefEquality.scala:38); 	at is.hail.expr.ir.Memo.lookup(RefEquality.scala:37); 	at is.hail.expr.ir.Memo.apply(RefEquality.scala:40); 	at is.hail.expr.ir.Requiredness.lookup(Requiredness.scala:42); 	at is.hail.expr.ir.Requiredness$$anonfun$analyzeIR$16.apply(Requiredness.scala:617); 	at is.hail.expr.ir.Requiredness$$anonfun$analyzeIR$16.apply(Requiredness.scala:616); 	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59); 	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48); 	at is.hail.expr.ir.Requiredness.analyzeIR(Requiredness.scala:616); 	at is.hail.expr.ir.Requiredness.analyze(Requiredness.scala:266); 	at is.hail.expr.ir.Requiredness.run(Requiredness.scala:92); 	at is.hail.expr.ir.Requiredness$.apply(Requiredness.scala:17); 	at is.hail.expr.ir.Requiredness$.apply(Requiredness.scala:22); 	at is.hail.expr.ir.lowering.LowerArrayAggsToRunAggsPass$.transform(LoweringPass.scala:95); ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601
https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:9234,Security,Hash,HashMap,9234,"uct{children:Array[Struct{index_file_offset:Int64,first_idx:Int64,first_key:Struct{idx:Int32},first_record_offset:Int64,first_annotation:Struct{}}]}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},struct{idx: int32},struct{},None),Map()))), WriteMetadata(ToArray(StreamMap(ToStream(Ref(__iruid_369,array<struct{filePath: str, partitionCounts: int64}>),false),__iruid_377,GetField(Ref(__iruid_377,struct{filePath: str, partitionCounts: int64}),partitionCounts))),TableSpecWriter(gs://danking/workshop-test/1kg.mt,Table{global:Struct{},key:[idx],row:Struct{idx:Int32}},rows,globals,references,true))))),RelationalWriter(gs://danking/workshop-test/1kg.mt,true,Some((references,Set()))))); 	at scala.collection.MapLike$class.default(MapLike.scala:228); 	at scala.collection.AbstractMap.default(Map.scala:59); 	at scala.collection.mutable.HashMap.apply(HashMap.scala:65); 	at is.hail.expr.ir.Memo.lookup(RefEquality.scala:38); 	at is.hail.expr.ir.Memo.lookup(RefEquality.scala:37); 	at is.hail.expr.ir.Memo.apply(RefEquality.scala:40); 	at is.hail.expr.ir.Requiredness.lookup(Requiredness.scala:42); 	at is.hail.expr.ir.Requiredness$$anonfun$analyzeIR$16.apply(Requiredness.scala:617); 	at is.hail.expr.ir.Requiredness$$anonfun$analyzeIR$16.apply(Requiredness.scala:616); 	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59); 	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48); 	at is.hail.expr.ir.Requiredness.analyzeIR(Requiredness.scala:616); 	at is.hail.expr.ir.Requiredness.analyze(Requiredness.scala:266); 	at is.hail.expr.ir.Requiredness.run(Requiredness.scala:92); 	at is.hail.expr.ir.Requiredness$.apply(Requiredness.scala:17); 	at is.hail.expr.ir.Requiredness$.apply(Requiredness.scala:22); 	at is.hail.expr.ir.lowering.LowerArrayAggsToRunAggsPass$.transform(LoweringPass.scala:95); 	at is.hail",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601
https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:432,Testability,test,test,432,"I'm hitting default & my local build is latest hi/main (`15a45cfb9b0f8da01b2d0408993556f8391749e3`), still broke. I started hail this way:; ```; hailctl config set batch/billing_project hail; hailctl dev config set default_namespace default; HAIL_QUERY_BACKEND=service ipython; ```; ```ipython; In [1]: In [1]: import hail as hl ; ...: ...: ; ...: ...: temp = hl.utils.range_table(100) ; ...: ...: temp.write('gs://danking/workshop-test/1kg.mt', overwrite=True) ; ...: ; Initializing Hail with default parameters...; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.61-15a45cfb9b0f; LOGGING: writing to /Users/dking/projects/hail/hail-20210202-1642-0.2.61-15a45cfb9b0f.log; Traceback (most recent call last):; File ""<ipython-input-1-92be8dd8c99f>"", line 4, in <module>; temp.write('gs://danking/workshop-test/1kg.mt', overwrite=True); File ""</Users/dking/miniconda3/lib/python3.7/site-packages/decorator.py:decorator-gen-1094>"", line 2, in write; File ""/Users/dking/projects/hail/hail/python/hail/typecheck/check.py"", line 577, in wrapper; return __original_func(*args_, **kwargs_); File ""/Users/dking/projects/hail/hail/python/hail/table.py"", line 1271, in write; Env.backend().execute(ir.TableWrite(self._tir, ir.TableNativeWriter(output, overwrite, stage_locally, _codec_spec))); File ""/Users/dking/projects/hail/hail/python/hail/backend/service_backend.py"", line 103, in execute; bucket=self._bucket); File ""/Users/dking/projects/hail/hail/python/hail/backend/service_backend.py"", line 48, in request; return async_to_blocking(retry_transient_errors(self.async_request, endpoint, **data)); File ""/Users/dking/projects/hail/hail/python/hailtop/utils/utils.py"", line 116, in async_to_blocking; return asyncio.get_event_loop().run_until_complete(coro); File ""/Users/dking/miniconda3/lib/python3.7/asyncio/base_events.py"", line 587, in run_until_complete; return future.result(); File ""/Users/dking/projects/hail/hail/python/hailtop/utils/utils.py"", line 395, in ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601
https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:621,Testability,LOG,LOGGING,621,"I'm hitting default & my local build is latest hi/main (`15a45cfb9b0f8da01b2d0408993556f8391749e3`), still broke. I started hail this way:; ```; hailctl config set batch/billing_project hail; hailctl dev config set default_namespace default; HAIL_QUERY_BACKEND=service ipython; ```; ```ipython; In [1]: In [1]: import hail as hl ; ...: ...: ; ...: ...: temp = hl.utils.range_table(100) ; ...: ...: temp.write('gs://danking/workshop-test/1kg.mt', overwrite=True) ; ...: ; Initializing Hail with default parameters...; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.61-15a45cfb9b0f; LOGGING: writing to /Users/dking/projects/hail/hail-20210202-1642-0.2.61-15a45cfb9b0f.log; Traceback (most recent call last):; File ""<ipython-input-1-92be8dd8c99f>"", line 4, in <module>; temp.write('gs://danking/workshop-test/1kg.mt', overwrite=True); File ""</Users/dking/miniconda3/lib/python3.7/site-packages/decorator.py:decorator-gen-1094>"", line 2, in write; File ""/Users/dking/projects/hail/hail/python/hail/typecheck/check.py"", line 577, in wrapper; return __original_func(*args_, **kwargs_); File ""/Users/dking/projects/hail/hail/python/hail/table.py"", line 1271, in write; Env.backend().execute(ir.TableWrite(self._tir, ir.TableNativeWriter(output, overwrite, stage_locally, _codec_spec))); File ""/Users/dking/projects/hail/hail/python/hail/backend/service_backend.py"", line 103, in execute; bucket=self._bucket); File ""/Users/dking/projects/hail/hail/python/hail/backend/service_backend.py"", line 48, in request; return async_to_blocking(retry_transient_errors(self.async_request, endpoint, **data)); File ""/Users/dking/projects/hail/hail/python/hailtop/utils/utils.py"", line 116, in async_to_blocking; return asyncio.get_event_loop().run_until_complete(coro); File ""/Users/dking/miniconda3/lib/python3.7/asyncio/base_events.py"", line 587, in run_until_complete; return future.result(); File ""/Users/dking/projects/hail/hail/python/hailtop/utils/utils.py"", line 395, in ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601
https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:707,Testability,log,log,707,"I'm hitting default & my local build is latest hi/main (`15a45cfb9b0f8da01b2d0408993556f8391749e3`), still broke. I started hail this way:; ```; hailctl config set batch/billing_project hail; hailctl dev config set default_namespace default; HAIL_QUERY_BACKEND=service ipython; ```; ```ipython; In [1]: In [1]: import hail as hl ; ...: ...: ; ...: ...: temp = hl.utils.range_table(100) ; ...: ...: temp.write('gs://danking/workshop-test/1kg.mt', overwrite=True) ; ...: ; Initializing Hail with default parameters...; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.61-15a45cfb9b0f; LOGGING: writing to /Users/dking/projects/hail/hail-20210202-1642-0.2.61-15a45cfb9b0f.log; Traceback (most recent call last):; File ""<ipython-input-1-92be8dd8c99f>"", line 4, in <module>; temp.write('gs://danking/workshop-test/1kg.mt', overwrite=True); File ""</Users/dking/miniconda3/lib/python3.7/site-packages/decorator.py:decorator-gen-1094>"", line 2, in write; File ""/Users/dking/projects/hail/hail/python/hail/typecheck/check.py"", line 577, in wrapper; return __original_func(*args_, **kwargs_); File ""/Users/dking/projects/hail/hail/python/hail/table.py"", line 1271, in write; Env.backend().execute(ir.TableWrite(self._tir, ir.TableNativeWriter(output, overwrite, stage_locally, _codec_spec))); File ""/Users/dking/projects/hail/hail/python/hail/backend/service_backend.py"", line 103, in execute; bucket=self._bucket); File ""/Users/dking/projects/hail/hail/python/hail/backend/service_backend.py"", line 48, in request; return async_to_blocking(retry_transient_errors(self.async_request, endpoint, **data)); File ""/Users/dking/projects/hail/hail/python/hailtop/utils/utils.py"", line 116, in async_to_blocking; return asyncio.get_event_loop().run_until_complete(coro); File ""/Users/dking/miniconda3/lib/python3.7/asyncio/base_events.py"", line 587, in run_until_complete; return future.result(); File ""/Users/dking/projects/hail/hail/python/hailtop/utils/utils.py"", line 395, in ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601
https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:842,Testability,test,test,842,"I'm hitting default & my local build is latest hi/main (`15a45cfb9b0f8da01b2d0408993556f8391749e3`), still broke. I started hail this way:; ```; hailctl config set batch/billing_project hail; hailctl dev config set default_namespace default; HAIL_QUERY_BACKEND=service ipython; ```; ```ipython; In [1]: In [1]: import hail as hl ; ...: ...: ; ...: ...: temp = hl.utils.range_table(100) ; ...: ...: temp.write('gs://danking/workshop-test/1kg.mt', overwrite=True) ; ...: ; Initializing Hail with default parameters...; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.61-15a45cfb9b0f; LOGGING: writing to /Users/dking/projects/hail/hail-20210202-1642-0.2.61-15a45cfb9b0f.log; Traceback (most recent call last):; File ""<ipython-input-1-92be8dd8c99f>"", line 4, in <module>; temp.write('gs://danking/workshop-test/1kg.mt', overwrite=True); File ""</Users/dking/miniconda3/lib/python3.7/site-packages/decorator.py:decorator-gen-1094>"", line 2, in write; File ""/Users/dking/projects/hail/hail/python/hail/typecheck/check.py"", line 577, in wrapper; return __original_func(*args_, **kwargs_); File ""/Users/dking/projects/hail/hail/python/hail/table.py"", line 1271, in write; Env.backend().execute(ir.TableWrite(self._tir, ir.TableNativeWriter(output, overwrite, stage_locally, _codec_spec))); File ""/Users/dking/projects/hail/hail/python/hail/backend/service_backend.py"", line 103, in execute; bucket=self._bucket); File ""/Users/dking/projects/hail/hail/python/hail/backend/service_backend.py"", line 48, in request; return async_to_blocking(retry_transient_errors(self.async_request, endpoint, **data)); File ""/Users/dking/projects/hail/hail/python/hailtop/utils/utils.py"", line 116, in async_to_blocking; return asyncio.get_event_loop().run_until_complete(coro); File ""/Users/dking/miniconda3/lib/python3.7/asyncio/base_events.py"", line 587, in run_until_complete; return future.result(); File ""/Users/dking/projects/hail/hail/python/hailtop/utils/utils.py"", line 395, in ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601
https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:3341,Testability,Assert,AssertSameLength,3341,"entException: key not found: RefEquality(WriteMetadata(Let(__iruid_369,CollectDistributedArray(StreamZip(ArrayBuffer(MakeStream(ArrayBuffer(Literal(struct{start: int32, end: int32},[0,10]), Literal(struct{start: int32, end: int32},[10,20]), Literal(struct{start: int32, end: int32},[20,30]), Literal(struct{start: int32, end: int32},[30,40]), Literal(struct{start: int32, end: int32},[40,50]), Literal(struct{start: int32, end: int32},[50,60]), Literal(struct{start: int32, end: int32},[60,70]), Literal(struct{start: int32, end: int32},[70,80]), Literal(struct{start: int32, end: int32},[80,90]), Literal(struct{start: int32, end: int32},[90,100])),stream<struct{start: int32, end: int32}>,false), MakeStream(ArrayBuffer(Str(""part-00-""), Str(""part-01-""), Str(""part-02-""), Str(""part-03-""), Str(""part-04-""), Str(""part-05-""), Str(""part-06-""), Str(""part-07-""), Str(""part-08-""), Str(""part-09-"")),stream<str>,false)),ArrayBuffer(__iruid_372, __iruid_373),MakeStruct(ArrayBuffer((oldCtx,Ref(__iruid_372,struct{start: int32, end: int32})), (writeCtx,Ref(__iruid_373,str)))),AssertSameLength),Literal(struct{},[]),__iruid_370,__iruid_371,WritePartition(Let(__iruid_374,GetField(Ref(__iruid_370,struct{oldCtx: struct{start: int32, end: int32}, writeCtx: str}),oldCtx),StreamMap(StreamRange(GetField(Ref(__iruid_374,struct{start: int32, end: int32}),start),GetField(Ref(__iruid_374,struct{start: int32, end: int32}),end),I32(1),false),__iruid_375,MakeStruct(ArrayBuffer((idx,Ref(__iruid_375,int32)))))),Apply(concat,WrappedArray(),ArrayBuffer(GetField(Ref(__iruid_370,struct{oldCtx: struct{start: int32, end: int32}, writeCtx: str}),writeCtx), UUID4(__iruid_290)),str),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{idx:+EInt32}"",""_vType"":""Struct{idx:Int32}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601
https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:4266,Testability,test,test,4266,"entException: key not found: RefEquality(WriteMetadata(Let(__iruid_369,CollectDistributedArray(StreamZip(ArrayBuffer(MakeStream(ArrayBuffer(Literal(struct{start: int32, end: int32},[0,10]), Literal(struct{start: int32, end: int32},[10,20]), Literal(struct{start: int32, end: int32},[20,30]), Literal(struct{start: int32, end: int32},[30,40]), Literal(struct{start: int32, end: int32},[40,50]), Literal(struct{start: int32, end: int32},[50,60]), Literal(struct{start: int32, end: int32},[60,70]), Literal(struct{start: int32, end: int32},[70,80]), Literal(struct{start: int32, end: int32},[80,90]), Literal(struct{start: int32, end: int32},[90,100])),stream<struct{start: int32, end: int32}>,false), MakeStream(ArrayBuffer(Str(""part-00-""), Str(""part-01-""), Str(""part-02-""), Str(""part-03-""), Str(""part-04-""), Str(""part-05-""), Str(""part-06-""), Str(""part-07-""), Str(""part-08-""), Str(""part-09-"")),stream<str>,false)),ArrayBuffer(__iruid_372, __iruid_373),MakeStruct(ArrayBuffer((oldCtx,Ref(__iruid_372,struct{start: int32, end: int32})), (writeCtx,Ref(__iruid_373,str)))),AssertSameLength),Literal(struct{},[]),__iruid_370,__iruid_371,WritePartition(Let(__iruid_374,GetField(Ref(__iruid_370,struct{oldCtx: struct{start: int32, end: int32}, writeCtx: str}),oldCtx),StreamMap(StreamRange(GetField(Ref(__iruid_374,struct{start: int32, end: int32}),start),GetField(Ref(__iruid_374,struct{start: int32, end: int32}),end),I32(1),false),__iruid_375,MakeStruct(ArrayBuffer((idx,Ref(__iruid_375,int32)))))),Apply(concat,WrappedArray(),ArrayBuffer(GetField(Ref(__iruid_370,struct{oldCtx: struct{start: int32, end: int32}, writeCtx: str}),writeCtx), UUID4(__iruid_290)),str),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{idx:+EInt32}"",""_vType"":""Struct{idx:Int32}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601
https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:4318,Testability,test,test,4318,"2})), (writeCtx,Ref(__iruid_373,str)))),AssertSameLength),Literal(struct{},[]),__iruid_370,__iruid_371,WritePartition(Let(__iruid_374,GetField(Ref(__iruid_370,struct{oldCtx: struct{start: int32, end: int32}, writeCtx: str}),oldCtx),StreamMap(StreamRange(GetField(Ref(__iruid_374,struct{start: int32, end: int32}),start),GetField(Ref(__iruid_374,struct{start: int32, end: int32}),end),I32(1),false),__iruid_375,MakeStruct(ArrayBuffer((idx,Ref(__iruid_375,int32)))))),Apply(concat,WrappedArray(),ArrayBuffer(GetField(Ref(__iruid_370,struct{oldCtx: struct{start: int32, end: int32}, writeCtx: str}),writeCtx), UUID4(__iruid_290)),str),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{idx:+EInt32}"",""_vType"":""Struct{idx:Int32}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/rows/parts/,Some((gs://danking/workshop-test/1kg.mt/index/,+PCStruct{idx:+PInt32})),None)),Some(TableStageDependency(WrappedArray()))),Begin(ArrayBuffer(WriteMetadata(MakeArray(ArrayBuffer(GetField(WritePartition(MakeStream(ArrayBuffer(Literal(struct{},[])),stream<struct{}>,false),Str(""part-0""),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/globals/parts/,None,None)),filePath)),array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/globals,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray()",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601
https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:4887,Testability,test,test,4887,"}),start),GetField(Ref(__iruid_374,struct{start: int32, end: int32}),end),I32(1),false),__iruid_375,MakeStruct(ArrayBuffer((idx,Ref(__iruid_375,int32)))))),Apply(concat,WrappedArray(),ArrayBuffer(GetField(Ref(__iruid_370,struct{oldCtx: struct{start: int32, end: int32}, writeCtx: str}),writeCtx), UUID4(__iruid_290)),str),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{idx:+EInt32}"",""_vType"":""Struct{idx:Int32}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/rows/parts/,Some((gs://danking/workshop-test/1kg.mt/index/,+PCStruct{idx:+PInt32})),None)),Some(TableStageDependency(WrappedArray()))),Begin(ArrayBuffer(WriteMetadata(MakeArray(ArrayBuffer(GetField(WritePartition(MakeStream(ArrayBuffer(Literal(struct{},[])),stream<struct{}>,false),Str(""part-0""),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/globals/parts/,None,None)),filePath)),array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/globals,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(),JArray(List(JObject(List((start,JObject(List())), (end,JObject(List())), (includeStart,JBool(true)), (includeEnd,JBool(true)))))),null,Map()))), WriteMetadata(ToArray(StreamMap(ToStream(Ref(__iruid_369,array<struct{filePath: str, partitionCounts: int64}>),false),__iruid_376,GetField(Ref(__iruid_376,struct{fil",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601
https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:4985,Testability,test,test,4985,"iveWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{idx:+EInt32}"",""_vType"":""Struct{idx:Int32}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/rows/parts/,Some((gs://danking/workshop-test/1kg.mt/index/,+PCStruct{idx:+PInt32})),None)),Some(TableStageDependency(WrappedArray()))),Begin(ArrayBuffer(WriteMetadata(MakeArray(ArrayBuffer(GetField(WritePartition(MakeStream(ArrayBuffer(Literal(struct{},[])),stream<struct{}>,false),Str(""part-0""),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/globals/parts/,None,None)),filePath)),array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/globals,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(),JArray(List(JObject(List((start,JObject(List())), (end,JObject(List())), (includeStart,JBool(true)), (includeEnd,JBool(true)))))),null,Map()))), WriteMetadata(ToArray(StreamMap(ToStream(Ref(__iruid_369,array<struct{filePath: str, partitionCounts: int64}>),false),__iruid_376,GetField(Ref(__iruid_376,struct{filePath: str, partitionCounts: int64}),filePath))),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/rows,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{idx:+EInt32}"",""_vType"":""Struct{idx:Int32}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBuff",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601
https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:5697,Testability,test,test,5697,":+PInt32})),None)),Some(TableStageDependency(WrappedArray()))),Begin(ArrayBuffer(WriteMetadata(MakeArray(ArrayBuffer(GetField(WritePartition(MakeStream(ArrayBuffer(Literal(struct{},[])),stream<struct{}>,false),Str(""part-0""),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/globals/parts/,None,None)),filePath)),array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/globals,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(),JArray(List(JObject(List((start,JObject(List())), (end,JObject(List())), (includeStart,JBool(true)), (includeEnd,JBool(true)))))),null,Map()))), WriteMetadata(ToArray(StreamMap(ToStream(Ref(__iruid_369,array<struct{filePath: str, partitionCounts: int64}>),false),__iruid_376,GetField(Ref(__iruid_376,struct{filePath: str, partitionCounts: int64}),filePath))),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/rows,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{idx:+EInt32}"",""_vType"":""Struct{idx:Int32}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(idx),JArray(List(JObject(List((start,JObject(List((idx,JInt(0))))), (end,JObject(List((idx,JInt(10))))), (includeStart,JBool(true)), (includeEnd,JBool(false)))), JObject(List((start,JObject(List((idx,JInt(10))))), (end,JObject(List((idx,JInt(20))))), (includeStart,JBool(true)), (includeEnd,JBool(false)))), JObject(List(",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601
https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:8886,Testability,test,test,8886,")))), JObject(List((start,JObject(List((idx,JInt(80))))), (end,JObject(List((idx,JInt(90))))), (includeStart,JBool(true)), (includeEnd,JBool(false)))), JObject(List((start,JObject(List((idx,JInt(90))))), (end,JObject(List((idx,JInt(100))))), (includeStart,JBool(true)), (includeEnd,JBool(false)))))),IndexSpec2(../index,{""name"":""TypedCodecSpec"",""_eType"":""EBaseStruct{first_idx:+EInt64,keys:+EArray[+EBaseStruct{key:+EBaseStruct{idx:+EInt32},offset:+EInt64,annotation:+EBaseStruct{}}]}"",""_vType"":""Struct{first_idx:Int64,keys:Array[Struct{key:Struct{idx:Int32},offset:Int64,annotation:Struct{}}]}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},{""name"":""TypedCodecSpec"",""_eType"":""EBaseStruct{children:+EArray[+EBaseStruct{index_file_offset:+EInt64,first_idx:+EInt64,first_key:+EBaseStruct{idx:+EInt32},first_record_offset:+EInt64,first_annotation:+EBaseStruct{}}]}"",""_vType"":""Struct{children:Array[Struct{index_file_offset:Int64,first_idx:Int64,first_key:Struct{idx:Int32},first_record_offset:Int64,first_annotation:Struct{}}]}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},struct{idx: int32},struct{},None),Map()))), WriteMetadata(ToArray(StreamMap(ToStream(Ref(__iruid_369,array<struct{filePath: str, partitionCounts: int64}>),false),__iruid_377,GetField(Ref(__iruid_377,struct{filePath: str, partitionCounts: int64}),partitionCounts))),TableSpecWriter(gs://danking/workshop-test/1kg.mt,Table{global:Struct{},key:[idx],row:Struct{idx:Int32}},rows,globals,references,true))))),RelationalWriter(gs://danking/workshop-test/1kg.mt,true,Some((references,Set()))))); 	at scala.collection.MapLike$class.default(MapLike.scala:228); 	at scala.collection.AbstractMap.default(Map.scala:59); 	at scala.collect",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601
https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:9026,Testability,test,test,9026,"""name"":""StreamBlockBufferSpec""}}}}},{""name"":""TypedCodecSpec"",""_eType"":""EBaseStruct{children:+EArray[+EBaseStruct{index_file_offset:+EInt64,first_idx:+EInt64,first_key:+EBaseStruct{idx:+EInt32},first_record_offset:+EInt64,first_annotation:+EBaseStruct{}}]}"",""_vType"":""Struct{children:Array[Struct{index_file_offset:Int64,first_idx:Int64,first_key:Struct{idx:Int32},first_record_offset:Int64,first_annotation:Struct{}}]}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},struct{idx: int32},struct{},None),Map()))), WriteMetadata(ToArray(StreamMap(ToStream(Ref(__iruid_369,array<struct{filePath: str, partitionCounts: int64}>),false),__iruid_377,GetField(Ref(__iruid_377,struct{filePath: str, partitionCounts: int64}),partitionCounts))),TableSpecWriter(gs://danking/workshop-test/1kg.mt,Table{global:Struct{},key:[idx],row:Struct{idx:Int32}},rows,globals,references,true))))),RelationalWriter(gs://danking/workshop-test/1kg.mt,true,Some((references,Set()))))); 	at scala.collection.MapLike$class.default(MapLike.scala:228); 	at scala.collection.AbstractMap.default(Map.scala:59); 	at scala.collection.mutable.HashMap.apply(HashMap.scala:65); 	at is.hail.expr.ir.Memo.lookup(RefEquality.scala:38); 	at is.hail.expr.ir.Memo.lookup(RefEquality.scala:37); 	at is.hail.expr.ir.Memo.apply(RefEquality.scala:40); 	at is.hail.expr.ir.Requiredness.lookup(Requiredness.scala:42); 	at is.hail.expr.ir.Requiredness$$anonfun$analyzeIR$16.apply(Requiredness.scala:617); 	at is.hail.expr.ir.Requiredness$$anonfun$analyzeIR$16.apply(Requiredness.scala:616); 	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59); 	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48); 	at is.hail.expr.ir.Requiredness.analyzeIR(Requiredness.scala:616); 	at is.hail.expr.ir.Requiredness.analyze(Requiredness.scala:266); 	at is.hail.expr.ir.Re",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601
https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:12528,Testability,log,logTime,12528,ckend$$anonfun$execute$1$$anonfun$apply$11$$anonfun$apply$12.apply(ServiceBackend.scala:337); 	at is.hail.backend.service.ServiceBackend$$anonfun$execute$1$$anonfun$apply$11$$anonfun$apply$12.apply(ServiceBackend.scala:334); 	at is.hail.expr.ir.ExecuteContext$$anonfun$scoped$1.apply(ExecuteContext.scala:25); 	at is.hail.expr.ir.ExecuteContext$$anonfun$scoped$1.apply(ExecuteContext.scala:23); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:23); 	at is.hail.backend.service.ServiceBackend.userContext(ServiceBackend.scala:132); 	at is.hail.backend.service.ServiceBackend$$anonfun$execute$1$$anonfun$apply$11.apply(ServiceBackend.scala:334); 	at is.hail.backend.service.ServiceBackend$$anonfun$execute$1$$anonfun$apply$11.apply(ServiceBackend.scala:333); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.utils.ExecutionTimer$.logTime(ExecutionTimer.scala:59); 	at is.hail.backend.service.ServiceBackend$$anonfun$execute$1.apply(ServiceBackend.scala:333); 	at is.hail.backend.service.ServiceBackend$$anonfun$execute$1.apply(ServiceBackend.scala:333); 	at is.hail.backend.service.ServiceBackend.statusForException(ServiceBackend.scala:243); 	at is.hail.backend.service.ServiceBackend.execute(ServiceBackend.scala:332); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.Gate,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601
https://github.com/hail-is/hail/issues/9856#issuecomment-772014076:37,Testability,log,logic,37,"I thought the fix was the void-typed logic for the service execute. Looks like that's not in main, is it in your branch?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772014076
https://github.com/hail-is/hail/pull/9862#issuecomment-758202690:32,Security,encrypt,encryption,32,"The test is fixed, we don't use encryption to talk to the internal gateway. I had to fix https.client_session to handle the gce case.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9862#issuecomment-758202690
https://github.com/hail-is/hail/pull/9862#issuecomment-758202690:4,Testability,test,test,4,"The test is fixed, we don't use encryption to talk to the internal gateway. I had to fix https.client_session to handle the gce case.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9862#issuecomment-758202690
https://github.com/hail-is/hail/pull/9862#issuecomment-759793573:54,Testability,test,test,54,I'm confused. I was ready to approve this pending the test passing. Now there's stacked PRs that include these changes. What PR should I look at?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9862#issuecomment-759793573
https://github.com/hail-is/hail/pull/9862#issuecomment-760323340:35,Testability,test,test,35,"Not sure why the BatchPoolExecutor test failed, but approving.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9862#issuecomment-760323340
https://github.com/hail-is/hail/pull/9868#issuecomment-763075785:97,Testability,benchmark,benchmarks,97,"> I'm ready to merge this. Woohoo!. I'm in a state of deep depression about the replicability of benchmarks right now. They seem (subjectively) even more noisy from run to run than things were six months ago. This could be 1-2% slower overall, or identical to main -- I can't tell, since benchmarks of main vary by nearly 5% from day to day. Either way, I'm good to merge this even with the worst-case 2% degradation. Progress toward stack struct is worth it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9868#issuecomment-763075785
https://github.com/hail-is/hail/pull/9868#issuecomment-763075785:288,Testability,benchmark,benchmarks,288,"> I'm ready to merge this. Woohoo!. I'm in a state of deep depression about the replicability of benchmarks right now. They seem (subjectively) even more noisy from run to run than things were six months ago. This could be 1-2% slower overall, or identical to main -- I can't tell, since benchmarks of main vary by nearly 5% from day to day. Either way, I'm good to merge this even with the worst-case 2% degradation. Progress toward stack struct is worth it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9868#issuecomment-763075785
https://github.com/hail-is/hail/pull/9871#issuecomment-757514725:54,Safety,avoid,avoid,54,"Verified it works. On Monday, I'll think about how to avoid this kind of bug.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9871#issuecomment-757514725
https://github.com/hail-is/hail/pull/9875#issuecomment-759878149:72,Integrability,depend,dependency,72,"Bah, sorry, CI does all merges and there's a bug introduced in a python dependency of ours. I'll get that fixed.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9875#issuecomment-759878149
https://github.com/hail-is/hail/pull/9875#issuecomment-759878545:39,Testability,test,test,39,"Ah, the fix was just merged, CI should test and merge this within 30 minutes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9875#issuecomment-759878545
https://github.com/hail-is/hail/pull/9886#issuecomment-760995871:23,Availability,redundant,redundant,23,"I see, it wasn't doing redundant work, just generating redundant IR by regenerating the IR to load covariates per set of phenotypes. This would only affect chained linear regression, since that's the only time there's more than one `one_y_field_name_set in y_field_names`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9886#issuecomment-760995871
https://github.com/hail-is/hail/pull/9886#issuecomment-760995871:55,Availability,redundant,redundant,55,"I see, it wasn't doing redundant work, just generating redundant IR by regenerating the IR to load covariates per set of phenotypes. This would only affect chained linear regression, since that's the only time there's more than one `one_y_field_name_set in y_field_names`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9886#issuecomment-760995871
https://github.com/hail-is/hail/pull/9886#issuecomment-760995871:94,Performance,load,load,94,"I see, it wasn't doing redundant work, just generating redundant IR by regenerating the IR to load covariates per set of phenotypes. This would only affect chained linear regression, since that's the only time there's more than one `one_y_field_name_set in y_field_names`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9886#issuecomment-760995871
https://github.com/hail-is/hail/pull/9886#issuecomment-760995871:23,Safety,redund,redundant,23,"I see, it wasn't doing redundant work, just generating redundant IR by regenerating the IR to load covariates per set of phenotypes. This would only affect chained linear regression, since that's the only time there's more than one `one_y_field_name_set in y_field_names`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9886#issuecomment-760995871
https://github.com/hail-is/hail/pull/9886#issuecomment-760995871:55,Safety,redund,redundant,55,"I see, it wasn't doing redundant work, just generating redundant IR by regenerating the IR to load covariates per set of phenotypes. This would only affect chained linear regression, since that's the only time there's more than one `one_y_field_name_set in y_field_names`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9886#issuecomment-760995871
https://github.com/hail-is/hail/pull/9888#issuecomment-761060616:0,Integrability,Depend,Depending,0,"Depending on how long the benchmark takes, you might want to make it work harder by setting k to something bigger, like 500 to 1000.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9888#issuecomment-761060616
https://github.com/hail-is/hail/pull/9888#issuecomment-761060616:26,Testability,benchmark,benchmark,26,"Depending on how long the benchmark takes, you might want to make it work harder by setting k to something bigger, like 500 to 1000.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9888#issuecomment-761060616
https://github.com/hail-is/hail/pull/9892#issuecomment-770085173:98,Availability,error,errors,98,"Agh, the unsafeRow and UnsafeIndexedSeq optimizations must be wrong, getting out of bounds memory errors.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9892#issuecomment-770085173
https://github.com/hail-is/hail/pull/9892#issuecomment-770085173:40,Performance,optimiz,optimizations,40,"Agh, the unsafeRow and UnsafeIndexedSeq optimizations must be wrong, getting out of bounds memory errors.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9892#issuecomment-770085173
https://github.com/hail-is/hail/pull/9892#issuecomment-770085173:9,Safety,unsafe,unsafeRow,9,"Agh, the unsafeRow and UnsafeIndexedSeq optimizations must be wrong, getting out of bounds memory errors.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9892#issuecomment-770085173
https://github.com/hail-is/hail/pull/9892#issuecomment-770085173:23,Safety,Unsafe,UnsafeIndexedSeq,23,"Agh, the unsafeRow and UnsafeIndexedSeq optimizations must be wrong, getting out of bounds memory errors.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9892#issuecomment-770085173
https://github.com/hail-is/hail/pull/9906#issuecomment-767033129:254,Availability,recover,recover,254,"> I do not know why the retries setting in pip.conf did not catch https://ci.hail.is/batches/167314/jobs/27, but more retries never hurt anyone. Is the whole pip process crashing because of the exception? Perhaps a different kind of crash that pip can't recover from and retry. > Another CI-related PR. This one changes the base image of everything else: hail-ubuntu. It's an ubuntu image with two scripts that make pip and apt more resilient. Take a look at docker/hail-ubuntu. Should we do this for `apt` too?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-767033129
https://github.com/hail-is/hail/pull/9906#issuecomment-767033129:433,Availability,resilien,resilient,433,"> I do not know why the retries setting in pip.conf did not catch https://ci.hail.is/batches/167314/jobs/27, but more retries never hurt anyone. Is the whole pip process crashing because of the exception? Perhaps a different kind of crash that pip can't recover from and retry. > Another CI-related PR. This one changes the base image of everything else: hail-ubuntu. It's an ubuntu image with two scripts that make pip and apt more resilient. Take a look at docker/hail-ubuntu. Should we do this for `apt` too?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-767033129
https://github.com/hail-is/hail/pull/9906#issuecomment-767033129:254,Safety,recover,recover,254,"> I do not know why the retries setting in pip.conf did not catch https://ci.hail.is/batches/167314/jobs/27, but more retries never hurt anyone. Is the whole pip process crashing because of the exception? Perhaps a different kind of crash that pip can't recover from and retry. > Another CI-related PR. This one changes the base image of everything else: hail-ubuntu. It's an ubuntu image with two scripts that make pip and apt more resilient. Take a look at docker/hail-ubuntu. Should we do this for `apt` too?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-767033129
https://github.com/hail-is/hail/pull/9906#issuecomment-767034755:91,Availability,down,downloading,91,"I think this is just pip not honoring retries everywhere. The crash appears to occur while downloading a dependency. Sure, I can add a retry to apt as well, though apt seems to be more careful about retrying on its own.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-767034755
https://github.com/hail-is/hail/pull/9906#issuecomment-767034755:105,Integrability,depend,dependency,105,"I think this is just pip not honoring retries everywhere. The crash appears to occur while downloading a dependency. Sure, I can add a retry to apt as well, though apt seems to be more careful about retrying on its own.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-767034755
https://github.com/hail-is/hail/pull/9906#issuecomment-767083626:14,Usability,clear,clear,14,"I wasn't very clear initially, I think if `apt` hasn't shown reason to be retried then we can leave it without a retry. If it ever seriously acts up there's one less thing in the way.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-767083626
https://github.com/hail-is/hail/pull/9906#issuecomment-767084684:36,Deployability,install,install,36,"OK, I reverted the retry on apt-get install, but kept the refactoring that makes apt-get update and pip use the same retry script.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-767084684
https://github.com/hail-is/hail/pull/9906#issuecomment-767084684:89,Deployability,update,update,89,"OK, I reverted the retry on apt-get install, but kept the refactoring that makes apt-get update and pip use the same retry script.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-767084684
https://github.com/hail-is/hail/pull/9906#issuecomment-767084684:58,Modifiability,refactor,refactoring,58,"OK, I reverted the retry on apt-get install, but kept the refactoring that makes apt-get update and pip use the same retry script.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-767084684
https://github.com/hail-is/hail/pull/9906#issuecomment-775241278:632,Availability,down,downloading,632,"At some point, we should think about how to improve the discoverability and machine-verifiability of our APIs. Currently the tightest type of job log is rather complex. If the performance is OK, I think we should move towards classes that define the request and response types of each call. ---. The main difference is `hail-pip-install` having `retry`. If pip exits with a non-zero exit code, we'll just rerun the command exactly, at most four more times. This mitigates missing retry logic in `pip` itself. For example, [this job](https://ci.hail.is/batches/167314/jobs/27) failed because pip encountered a connection reset while downloading a file. Ideally, pip would simply retry the download. Since we don't control the pip source code, I use a retry that treats all of pip as a black box. There's definitely a failure mode: if you specify a package that doesn't exist, pip will error five times in a row and take ~30 seconds before the retry logic gives up. I'm OK with this because pip should basically never fail for legitimate reasons.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-775241278
https://github.com/hail-is/hail/pull/9906#issuecomment-775241278:688,Availability,down,download,688,"At some point, we should think about how to improve the discoverability and machine-verifiability of our APIs. Currently the tightest type of job log is rather complex. If the performance is OK, I think we should move towards classes that define the request and response types of each call. ---. The main difference is `hail-pip-install` having `retry`. If pip exits with a non-zero exit code, we'll just rerun the command exactly, at most four more times. This mitigates missing retry logic in `pip` itself. For example, [this job](https://ci.hail.is/batches/167314/jobs/27) failed because pip encountered a connection reset while downloading a file. Ideally, pip would simply retry the download. Since we don't control the pip source code, I use a retry that treats all of pip as a black box. There's definitely a failure mode: if you specify a package that doesn't exist, pip will error five times in a row and take ~30 seconds before the retry logic gives up. I'm OK with this because pip should basically never fail for legitimate reasons.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-775241278
https://github.com/hail-is/hail/pull/9906#issuecomment-775241278:816,Availability,failure,failure,816,"At some point, we should think about how to improve the discoverability and machine-verifiability of our APIs. Currently the tightest type of job log is rather complex. If the performance is OK, I think we should move towards classes that define the request and response types of each call. ---. The main difference is `hail-pip-install` having `retry`. If pip exits with a non-zero exit code, we'll just rerun the command exactly, at most four more times. This mitigates missing retry logic in `pip` itself. For example, [this job](https://ci.hail.is/batches/167314/jobs/27) failed because pip encountered a connection reset while downloading a file. Ideally, pip would simply retry the download. Since we don't control the pip source code, I use a retry that treats all of pip as a black box. There's definitely a failure mode: if you specify a package that doesn't exist, pip will error five times in a row and take ~30 seconds before the retry logic gives up. I'm OK with this because pip should basically never fail for legitimate reasons.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-775241278
https://github.com/hail-is/hail/pull/9906#issuecomment-775241278:884,Availability,error,error,884,"At some point, we should think about how to improve the discoverability and machine-verifiability of our APIs. Currently the tightest type of job log is rather complex. If the performance is OK, I think we should move towards classes that define the request and response types of each call. ---. The main difference is `hail-pip-install` having `retry`. If pip exits with a non-zero exit code, we'll just rerun the command exactly, at most four more times. This mitigates missing retry logic in `pip` itself. For example, [this job](https://ci.hail.is/batches/167314/jobs/27) failed because pip encountered a connection reset while downloading a file. Ideally, pip would simply retry the download. Since we don't control the pip source code, I use a retry that treats all of pip as a black box. There's definitely a failure mode: if you specify a package that doesn't exist, pip will error five times in a row and take ~30 seconds before the retry logic gives up. I'm OK with this because pip should basically never fail for legitimate reasons.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-775241278
https://github.com/hail-is/hail/pull/9906#issuecomment-775241278:329,Deployability,install,install,329,"At some point, we should think about how to improve the discoverability and machine-verifiability of our APIs. Currently the tightest type of job log is rather complex. If the performance is OK, I think we should move towards classes that define the request and response types of each call. ---. The main difference is `hail-pip-install` having `retry`. If pip exits with a non-zero exit code, we'll just rerun the command exactly, at most four more times. This mitigates missing retry logic in `pip` itself. For example, [this job](https://ci.hail.is/batches/167314/jobs/27) failed because pip encountered a connection reset while downloading a file. Ideally, pip would simply retry the download. Since we don't control the pip source code, I use a retry that treats all of pip as a black box. There's definitely a failure mode: if you specify a package that doesn't exist, pip will error five times in a row and take ~30 seconds before the retry logic gives up. I'm OK with this because pip should basically never fail for legitimate reasons.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-775241278
https://github.com/hail-is/hail/pull/9906#issuecomment-775241278:176,Performance,perform,performance,176,"At some point, we should think about how to improve the discoverability and machine-verifiability of our APIs. Currently the tightest type of job log is rather complex. If the performance is OK, I think we should move towards classes that define the request and response types of each call. ---. The main difference is `hail-pip-install` having `retry`. If pip exits with a non-zero exit code, we'll just rerun the command exactly, at most four more times. This mitigates missing retry logic in `pip` itself. For example, [this job](https://ci.hail.is/batches/167314/jobs/27) failed because pip encountered a connection reset while downloading a file. Ideally, pip would simply retry the download. Since we don't control the pip source code, I use a retry that treats all of pip as a black box. There's definitely a failure mode: if you specify a package that doesn't exist, pip will error five times in a row and take ~30 seconds before the retry logic gives up. I'm OK with this because pip should basically never fail for legitimate reasons.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-775241278
https://github.com/hail-is/hail/pull/9906#issuecomment-775241278:146,Testability,log,log,146,"At some point, we should think about how to improve the discoverability and machine-verifiability of our APIs. Currently the tightest type of job log is rather complex. If the performance is OK, I think we should move towards classes that define the request and response types of each call. ---. The main difference is `hail-pip-install` having `retry`. If pip exits with a non-zero exit code, we'll just rerun the command exactly, at most four more times. This mitigates missing retry logic in `pip` itself. For example, [this job](https://ci.hail.is/batches/167314/jobs/27) failed because pip encountered a connection reset while downloading a file. Ideally, pip would simply retry the download. Since we don't control the pip source code, I use a retry that treats all of pip as a black box. There's definitely a failure mode: if you specify a package that doesn't exist, pip will error five times in a row and take ~30 seconds before the retry logic gives up. I'm OK with this because pip should basically never fail for legitimate reasons.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-775241278
https://github.com/hail-is/hail/pull/9906#issuecomment-775241278:486,Testability,log,logic,486,"At some point, we should think about how to improve the discoverability and machine-verifiability of our APIs. Currently the tightest type of job log is rather complex. If the performance is OK, I think we should move towards classes that define the request and response types of each call. ---. The main difference is `hail-pip-install` having `retry`. If pip exits with a non-zero exit code, we'll just rerun the command exactly, at most four more times. This mitigates missing retry logic in `pip` itself. For example, [this job](https://ci.hail.is/batches/167314/jobs/27) failed because pip encountered a connection reset while downloading a file. Ideally, pip would simply retry the download. Since we don't control the pip source code, I use a retry that treats all of pip as a black box. There's definitely a failure mode: if you specify a package that doesn't exist, pip will error five times in a row and take ~30 seconds before the retry logic gives up. I'm OK with this because pip should basically never fail for legitimate reasons.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-775241278
https://github.com/hail-is/hail/pull/9906#issuecomment-775241278:948,Testability,log,logic,948,"At some point, we should think about how to improve the discoverability and machine-verifiability of our APIs. Currently the tightest type of job log is rather complex. If the performance is OK, I think we should move towards classes that define the request and response types of each call. ---. The main difference is `hail-pip-install` having `retry`. If pip exits with a non-zero exit code, we'll just rerun the command exactly, at most four more times. This mitigates missing retry logic in `pip` itself. For example, [this job](https://ci.hail.is/batches/167314/jobs/27) failed because pip encountered a connection reset while downloading a file. Ideally, pip would simply retry the download. Since we don't control the pip source code, I use a retry that treats all of pip as a black box. There's definitely a failure mode: if you specify a package that doesn't exist, pip will error five times in a row and take ~30 seconds before the retry logic gives up. I'm OK with this because pip should basically never fail for legitimate reasons.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-775241278
https://github.com/hail-is/hail/pull/9906#issuecomment-775241278:671,Usability,simpl,simply,671,"At some point, we should think about how to improve the discoverability and machine-verifiability of our APIs. Currently the tightest type of job log is rather complex. If the performance is OK, I think we should move towards classes that define the request and response types of each call. ---. The main difference is `hail-pip-install` having `retry`. If pip exits with a non-zero exit code, we'll just rerun the command exactly, at most four more times. This mitigates missing retry logic in `pip` itself. For example, [this job](https://ci.hail.is/batches/167314/jobs/27) failed because pip encountered a connection reset while downloading a file. Ideally, pip would simply retry the download. Since we don't control the pip source code, I use a retry that treats all of pip as a black box. There's definitely a failure mode: if you specify a package that doesn't exist, pip will error five times in a row and take ~30 seconds before the retry logic gives up. I'm OK with this because pip should basically never fail for legitimate reasons.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-775241278
https://github.com/hail-is/hail/pull/9907#issuecomment-767596412:108,Availability,down,down,108,"@danking What do you think about this change? I think it's fine, but if it's not fine, then we need to lock down this feature as anyone can just set it to True in the batch_client.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-767596412
https://github.com/hail-is/hail/pull/9907#issuecomment-767739020:40,Deployability,configurat,configuration,40,"Can we make it a job and/or batch level configuration? The user obviously can do whatever they like with their tokens. However, since most users don't need them, I prefer our default to be to not expose them. I think we just need a new method and attribute on `Job` and `Batch` that mirrors, say, `image` or `memory`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-767739020
https://github.com/hail-is/hail/pull/9907#issuecomment-767739020:40,Modifiability,config,configuration,40,"Can we make it a job and/or batch level configuration? The user obviously can do whatever they like with their tokens. However, since most users don't need them, I prefer our default to be to not expose them. I think we just need a new method and attribute on `Job` and `Batch` that mirrors, say, `image` or `memory`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-767739020
https://github.com/hail-is/hail/pull/9907#issuecomment-767739020:196,Security,expose,expose,196,"Can we make it a job and/or batch level configuration? The user obviously can do whatever they like with their tokens. However, since most users don't need them, I prefer our default to be to not expose them. I think we just need a new method and attribute on `Job` and `Batch` that mirrors, say, `image` or `memory`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-767739020
https://github.com/hail-is/hail/pull/9907#issuecomment-767883386:32,Deployability,deploy,deployment,32,"Somewhat related to this is the deployment configuration. That's a little easier to handle on the user's side by including it in the job's image directly, but it would be pretty convenient if it could be mounted automatically as well (as `/deploy-config/deploy-config.json`, with `""location"": ""gce""` and the `domain` set accordingly). Should that be another method on `Job` / `Batch` or should all of this functionality be hidden behind something more abstract to enable nested batches (that's really the main use case, I suppose).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-767883386
https://github.com/hail-is/hail/pull/9907#issuecomment-767883386:43,Deployability,configurat,configuration,43,"Somewhat related to this is the deployment configuration. That's a little easier to handle on the user's side by including it in the job's image directly, but it would be pretty convenient if it could be mounted automatically as well (as `/deploy-config/deploy-config.json`, with `""location"": ""gce""` and the `domain` set accordingly). Should that be another method on `Job` / `Batch` or should all of this functionality be hidden behind something more abstract to enable nested batches (that's really the main use case, I suppose).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-767883386
https://github.com/hail-is/hail/pull/9907#issuecomment-767883386:240,Deployability,deploy,deploy-config,240,"Somewhat related to this is the deployment configuration. That's a little easier to handle on the user's side by including it in the job's image directly, but it would be pretty convenient if it could be mounted automatically as well (as `/deploy-config/deploy-config.json`, with `""location"": ""gce""` and the `domain` set accordingly). Should that be another method on `Job` / `Batch` or should all of this functionality be hidden behind something more abstract to enable nested batches (that's really the main use case, I suppose).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-767883386
https://github.com/hail-is/hail/pull/9907#issuecomment-767883386:254,Deployability,deploy,deploy-config,254,"Somewhat related to this is the deployment configuration. That's a little easier to handle on the user's side by including it in the job's image directly, but it would be pretty convenient if it could be mounted automatically as well (as `/deploy-config/deploy-config.json`, with `""location"": ""gce""` and the `domain` set accordingly). Should that be another method on `Job` / `Batch` or should all of this functionality be hidden behind something more abstract to enable nested batches (that's really the main use case, I suppose).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-767883386
https://github.com/hail-is/hail/pull/9907#issuecomment-767883386:43,Modifiability,config,configuration,43,"Somewhat related to this is the deployment configuration. That's a little easier to handle on the user's side by including it in the job's image directly, but it would be pretty convenient if it could be mounted automatically as well (as `/deploy-config/deploy-config.json`, with `""location"": ""gce""` and the `domain` set accordingly). Should that be another method on `Job` / `Batch` or should all of this functionality be hidden behind something more abstract to enable nested batches (that's really the main use case, I suppose).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-767883386
https://github.com/hail-is/hail/pull/9907#issuecomment-767883386:247,Modifiability,config,config,247,"Somewhat related to this is the deployment configuration. That's a little easier to handle on the user's side by including it in the job's image directly, but it would be pretty convenient if it could be mounted automatically as well (as `/deploy-config/deploy-config.json`, with `""location"": ""gce""` and the `domain` set accordingly). Should that be another method on `Job` / `Batch` or should all of this functionality be hidden behind something more abstract to enable nested batches (that's really the main use case, I suppose).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-767883386
https://github.com/hail-is/hail/pull/9907#issuecomment-767883386:261,Modifiability,config,config,261,"Somewhat related to this is the deployment configuration. That's a little easier to handle on the user's side by including it in the job's image directly, but it would be pretty convenient if it could be mounted automatically as well (as `/deploy-config/deploy-config.json`, with `""location"": ""gce""` and the `domain` set accordingly). Should that be another method on `Job` / `Batch` or should all of this functionality be hidden behind something more abstract to enable nested batches (that's really the main use case, I suppose).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-767883386
https://github.com/hail-is/hail/pull/9907#issuecomment-767891514:40,Deployability,deploy,deploy,40,"I think we should just always mount the deploy config. That might trigger some latent bugs where we don't do quite the right thing, but we can fix those.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-767891514
https://github.com/hail-is/hail/pull/9907#issuecomment-767891514:47,Modifiability,config,config,47,"I think we should just always mount the deploy config. That might trigger some latent bugs where we don't do quite the right thing, but we can fix those.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-767891514
https://github.com/hail-is/hail/pull/9907#issuecomment-768605979:21,Deployability,deploy,deploy,21,"If we always mount a deploy config (which sounds like a great idea), I think it would be nice to also always mount the user tokens too (similar to how the GSA key is always mounted). That way, nested batches ""just work"". But happy to make it a configurable option, if you prefer that.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-768605979
https://github.com/hail-is/hail/pull/9907#issuecomment-768605979:28,Modifiability,config,config,28,"If we always mount a deploy config (which sounds like a great idea), I think it would be nice to also always mount the user tokens too (similar to how the GSA key is always mounted). That way, nested batches ""just work"". But happy to make it a configurable option, if you prefer that.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-768605979
https://github.com/hail-is/hail/pull/9907#issuecomment-768605979:244,Modifiability,config,configurable,244,"If we always mount a deploy config (which sounds like a great idea), I think it would be nice to also always mount the user tokens too (similar to how the GSA key is always mounted). That way, nested batches ""just work"". But happy to make it a configurable option, if you prefer that.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-768605979
https://github.com/hail-is/hail/pull/9907#issuecomment-768637760:34,Availability,down,download,34,"OK, let's always mount it. People download and run software on their laptops which can read their gcloud and hail credentials awnyway!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-768637760
https://github.com/hail-is/hail/pull/9907#issuecomment-773006387:42,Deployability,deploy,deploy,42,"> I think we should just always mount the deploy config. That might trigger some latent bugs where we don't do quite the right thing, but we can fix those. @danking Just realized you already took care of that in https://github.com/hail-is/hail/pull/9848/files#diff-21972f0c9ab321a85ffb4de98353c86fdea4992a5eb0d48c3489b977513b1da0! Thanks!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-773006387
https://github.com/hail-is/hail/pull/9907#issuecomment-773006387:49,Modifiability,config,config,49,"> I think we should just always mount the deploy config. That might trigger some latent bugs where we don't do quite the right thing, but we can fix those. @danking Just realized you already took care of that in https://github.com/hail-is/hail/pull/9848/files#diff-21972f0c9ab321a85ffb4de98353c86fdea4992a5eb0d48c3489b977513b1da0! Thanks!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9907#issuecomment-773006387
https://github.com/hail-is/hail/pull/9917#issuecomment-767201392:12,Testability,test,test,12,"There was a test marked as should fail: `test_matrix_table.py::test_read_write_all_types`, but it now passes! woo!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9917#issuecomment-767201392
https://github.com/hail-is/hail/pull/9920#issuecomment-767221854:24,Performance,load,loaded,24,"The requiredness of the loaded code is the requiredness of the field type. However, if the struct itself is optional, the EmitCode needs to be optional too, regardless of the requiredness of the field.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9920#issuecomment-767221854
https://github.com/hail-is/hail/pull/9920#issuecomment-788203284:18,Testability,benchmark,benchmarks,18,Will approve when benchmarks finish,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9920#issuecomment-788203284
https://github.com/hail-is/hail/pull/9925#issuecomment-769219666:0,Testability,Test,Tests,0,"Tests are passing, but I'd like to see if I can go back to not having setup on EmitCode, now that we found the btree problem.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9925#issuecomment-769219666
https://github.com/hail-is/hail/pull/9925#issuecomment-769276725:134,Performance,load,load,134,"Nice, it works now! I flipped through uses of `EmitCode.setup`, looking for places that might cause problems when `m` was more than a load of a boolean. I only found a couple, and fixed them. Also note that `EmitCode.fromI` also makes an empty `setup`, with all the work done in `m`, so we were already assuming `m` can do work.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9925#issuecomment-769276725
https://github.com/hail-is/hail/pull/9926#issuecomment-767796221:109,Availability,failure,failures,109,"It's hard to go through every line to look for bugs, but the structure looks great. You've got a couple test failures (code cast errors)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9926#issuecomment-767796221
https://github.com/hail-is/hail/pull/9926#issuecomment-767796221:129,Availability,error,errors,129,"It's hard to go through every line to look for bugs, but the structure looks great. You've got a couple test failures (code cast errors)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9926#issuecomment-767796221
https://github.com/hail-is/hail/pull/9926#issuecomment-767796221:104,Testability,test,test,104,"It's hard to go through every line to look for bugs, but the structure looks great. You've got a couple test failures (code cast errors)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9926#issuecomment-767796221
https://github.com/hail-is/hail/pull/9926#issuecomment-769218315:0,Testability,Test,Tests,0,Tests are passing. Should be ready for review.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9926#issuecomment-769218315
https://github.com/hail-is/hail/pull/9931#issuecomment-768677633:760,Modifiability,refactor,refactoring,760,"Hi,. I'm just curious if you tried black on a code that uses Hail query. As far as I see, PEP8 conflicts with the code style adopted in the Hail docs, e.g. black would remove spaces in named function arguments:. ```; - mt = mt.annotate_entries(GT = lgt_to_gt(mt.LGT, mt.LA)); + mt = mt.annotate_entries(GT=lgt_to_gt(mt.LGT, mt.LA)); ```. On the other hand, query can be seen as a DSL on top of Python, so the same guidelines probably don't need to be applied to it. Wondering if you had thoughts about lining the query code? We will be writing a lot of that in the nearest future in the Centre for Population Genomics, and would love to set up some style checks, or even automate that with a tool like black. And on black - are you considering automating code refactoring with black as part of the CI? Or you wanted to just do checks, alongside with pylint?. Vlad",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9931#issuecomment-768677633
https://github.com/hail-is/hail/pull/9931#issuecomment-768677633:414,Usability,guid,guidelines,414,"Hi,. I'm just curious if you tried black on a code that uses Hail query. As far as I see, PEP8 conflicts with the code style adopted in the Hail docs, e.g. black would remove spaces in named function arguments:. ```; - mt = mt.annotate_entries(GT = lgt_to_gt(mt.LGT, mt.LA)); + mt = mt.annotate_entries(GT=lgt_to_gt(mt.LGT, mt.LA)); ```. On the other hand, query can be seen as a DSL on top of Python, so the same guidelines probably don't need to be applied to it. Wondering if you had thoughts about lining the query code? We will be writing a lot of that in the nearest future in the Centre for Population Genomics, and would love to set up some style checks, or even automate that with a tool like black. And on black - are you considering automating code refactoring with black as part of the CI? Or you wanted to just do checks, alongside with pylint?. Vlad",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9931#issuecomment-768677633
https://github.com/hail-is/hail/pull/9931#issuecomment-768742121:78,Usability,guid,guidelines,78,"> On the other hand, query can be seen as a DSL on top of Python, so the same guidelines probably don't need to be applied to it. You've hit exactly on the center of a longstanding discussion on the team with no definitive resolution 😄",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9931#issuecomment-768742121
https://github.com/hail-is/hail/pull/9931#issuecomment-769082082:291,Availability,error,errors,291,"Great question! I have not thought to run black on query and agree with your point about it maybe not being a good match. The intention here was just for formatting internal python services, not necessarily as part of the CI but for ease of development and not having to fix `pylint` format errors by hand. Even so I don't love quite how restrictive black is, but it does seem like the most popular formatter out there now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9931#issuecomment-769082082
https://github.com/hail-is/hail/pull/9931#issuecomment-769157671:138,Deployability,install,install,138,I'm going to change this branch to instead add `pre-commit` with `black` as one of its commit hooks. Developers can choose to `pre-commit install` which will set up useful hooks and on commit will run `black` over any modified files for directories that opt into it (which I'll start as just CI).,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9931#issuecomment-769157671
https://github.com/hail-is/hail/pull/9931#issuecomment-769209896:95,Integrability,depend,dependencies,95,"There's a `--check` flag, I added it to the existing ci `check`. Had to add `black` to the dev dependencies for that.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9931#issuecomment-769209896
https://github.com/hail-is/hail/pull/9934#issuecomment-776937414:31,Availability,ping,ping,31,Either is fine with me -- just ping me when you are ready.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9934#issuecomment-776937414
https://github.com/hail-is/hail/pull/9934#issuecomment-785209202:67,Usability,simpl,simplify,67,"OK, I think this is ready for review again. I rebased, was able to simplify the online bounded gather a bit, and parallelized the GCS rmtree more, so that cleanup can happen in parallel with the merge operations as much as possible.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9934#issuecomment-785209202
https://github.com/hail-is/hail/pull/9935#issuecomment-773428416:104,Availability,down,download-gcs-connector,104,"@catoverdrive I did a bad, pip.conf needs to come from `docker/hail-ubuntu/pip.conf`, you also need the download-gcs-connector.py file I added to that branch",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9935#issuecomment-773428416
https://github.com/hail-is/hail/issues/9939#issuecomment-786236682:145,Availability,error,error,145,"Are you sure that you installed all the necessary packages listed here: https://hail.is/docs/0.2/install/linux.html ? In particular this kind of error can happen if you did not install openblas. In the future, please use https://discuss.hail.is for support questions, we don't monitor GitHub issues.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9939#issuecomment-786236682
https://github.com/hail-is/hail/issues/9939#issuecomment-786236682:22,Deployability,install,installed,22,"Are you sure that you installed all the necessary packages listed here: https://hail.is/docs/0.2/install/linux.html ? In particular this kind of error can happen if you did not install openblas. In the future, please use https://discuss.hail.is for support questions, we don't monitor GitHub issues.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9939#issuecomment-786236682
https://github.com/hail-is/hail/issues/9939#issuecomment-786236682:97,Deployability,install,install,97,"Are you sure that you installed all the necessary packages listed here: https://hail.is/docs/0.2/install/linux.html ? In particular this kind of error can happen if you did not install openblas. In the future, please use https://discuss.hail.is for support questions, we don't monitor GitHub issues.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9939#issuecomment-786236682
https://github.com/hail-is/hail/issues/9939#issuecomment-786236682:177,Deployability,install,install,177,"Are you sure that you installed all the necessary packages listed here: https://hail.is/docs/0.2/install/linux.html ? In particular this kind of error can happen if you did not install openblas. In the future, please use https://discuss.hail.is for support questions, we don't monitor GitHub issues.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9939#issuecomment-786236682
https://github.com/hail-is/hail/issues/9939#issuecomment-786236682:277,Energy Efficiency,monitor,monitor,277,"Are you sure that you installed all the necessary packages listed here: https://hail.is/docs/0.2/install/linux.html ? In particular this kind of error can happen if you did not install openblas. In the future, please use https://discuss.hail.is for support questions, we don't monitor GitHub issues.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/9939#issuecomment-786236682
https://github.com/hail-is/hail/pull/9944#issuecomment-769078938:205,Availability,down,down,205,That definitely makes more sense. Thanks!. > This will hang if we have tasks that were not properly stopped. Do you see this as problematic? I figure a pod would get terminated if it took too long to shut down gracefully and it could more obviously reveal the underlying problem.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9944#issuecomment-769078938
https://github.com/hail-is/hail/pull/9944#issuecomment-769104764:399,Testability,test,tests,399,"I suppose I'm a bit confused about what happens if you await the completion of yourself. We should probably filter out the `asyncio.current_task()`. I agree with the spirit of your sentence. It is problematic because somewhere *else* we're not properly stopping an infinite loop. Ideally we'll get to a place where we try to kill a pod and if it doesn't terminate in, say, 5 seconds, we fail the CI tests.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9944#issuecomment-769104764
https://github.com/hail-is/hail/pull/9944#issuecomment-769239445:354,Availability,error,error,354,"Ah ok. I was seeing some `kill -9` that are now gone when excluding the `current_task`. > It is problematic because somewhere else we're not properly stopping an infinite loop. Ideally we'll get to a place where we try to kill a pod and if it doesn't terminate in, say, 5 seconds, we fail the CI tests. Ya it might not deliver great clarity on where the error is coming from but at least we can actively kill and log an error if it's unable to do the ""right"" thing within say 5 seconds. That and I'm unsure how else to solve this problem",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9944#issuecomment-769239445
https://github.com/hail-is/hail/pull/9944#issuecomment-769239445:420,Availability,error,error,420,"Ah ok. I was seeing some `kill -9` that are now gone when excluding the `current_task`. > It is problematic because somewhere else we're not properly stopping an infinite loop. Ideally we'll get to a place where we try to kill a pod and if it doesn't terminate in, say, 5 seconds, we fail the CI tests. Ya it might not deliver great clarity on where the error is coming from but at least we can actively kill and log an error if it's unable to do the ""right"" thing within say 5 seconds. That and I'm unsure how else to solve this problem",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9944#issuecomment-769239445
https://github.com/hail-is/hail/pull/9944#issuecomment-769239445:296,Testability,test,tests,296,"Ah ok. I was seeing some `kill -9` that are now gone when excluding the `current_task`. > It is problematic because somewhere else we're not properly stopping an infinite loop. Ideally we'll get to a place where we try to kill a pod and if it doesn't terminate in, say, 5 seconds, we fail the CI tests. Ya it might not deliver great clarity on where the error is coming from but at least we can actively kill and log an error if it's unable to do the ""right"" thing within say 5 seconds. That and I'm unsure how else to solve this problem",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9944#issuecomment-769239445
https://github.com/hail-is/hail/pull/9944#issuecomment-769239445:413,Testability,log,log,413,"Ah ok. I was seeing some `kill -9` that are now gone when excluding the `current_task`. > It is problematic because somewhere else we're not properly stopping an infinite loop. Ideally we'll get to a place where we try to kill a pod and if it doesn't terminate in, say, 5 seconds, we fail the CI tests. Ya it might not deliver great clarity on where the error is coming from but at least we can actively kill and log an error if it's unable to do the ""right"" thing within say 5 seconds. That and I'm unsure how else to solve this problem",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9944#issuecomment-769239445
https://github.com/hail-is/hail/pull/9954#issuecomment-770063101:38,Availability,error,error,38,"I can't figure out why I'm getting an error in one test. But I also am not sure what to do with the `/batches` endpoint. I want the UI default to only show you your batches with the default query string 'user:jigold`. However, what should the REST endpoint be? All batches in all billing projects you have access for?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9954#issuecomment-770063101
https://github.com/hail-is/hail/pull/9954#issuecomment-770063101:306,Security,access,access,306,"I can't figure out why I'm getting an error in one test. But I also am not sure what to do with the `/batches` endpoint. I want the UI default to only show you your batches with the default query string 'user:jigold`. However, what should the REST endpoint be? All batches in all billing projects you have access for?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9954#issuecomment-770063101
https://github.com/hail-is/hail/pull/9954#issuecomment-770063101:51,Testability,test,test,51,"I can't figure out why I'm getting an error in one test. But I also am not sure what to do with the `/batches` endpoint. I want the UI default to only show you your batches with the default query string 'user:jigold`. However, what should the REST endpoint be? All batches in all billing projects you have access for?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9954#issuecomment-770063101
https://github.com/hail-is/hail/pull/9955#issuecomment-771159438:27,Deployability,release,released,27,"@gtiao, great!. We haven't released yet, so we can still fix. It seems the right fix is to re-generate that file as a Table rather than a MatrixTable because it doesn't have any entry data. @pwc2 could you furnish a list of all the misnamings?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9955#issuecomment-771159438
https://github.com/hail-is/hail/pull/9955#issuecomment-791633393:69,Availability,avail,available,69,"Julia has regenerated the file with the correct extension, and it is available at `gs://gnomad-public/papers/2019-tx-annotation/pre_computed/all.possible.snvs.tx_annotated.021520.ht`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9955#issuecomment-791633393
https://github.com/hail-is/hail/pull/9960#issuecomment-771116898:139,Availability,failure,failures,139,"Addressed your initial problem and merge conflicts, but looks like there's more that's going wrong. Seems like it's mostly data comparison failures with reasonableish looking data, probably a striding issue.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9960#issuecomment-771116898
https://github.com/hail-is/hail/pull/9967#issuecomment-771112056:4,Availability,failure,failure,4,"The failure was a test_query one, I kicked it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9967#issuecomment-771112056
https://github.com/hail-is/hail/pull/9972#issuecomment-772045985:43,Availability,down,down,43,"This is ready to look at. i tried to track down the one failure in test_benchmark, but couldn't do so.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9972#issuecomment-772045985
https://github.com/hail-is/hail/pull/9972#issuecomment-772045985:56,Availability,failure,failure,56,"This is ready to look at. i tried to track down the one failure in test_benchmark, but couldn't do so.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9972#issuecomment-772045985
https://github.com/hail-is/hail/pull/9972#issuecomment-773536457:124,Usability,clear,clear,124,"For the multiple JPICs, I was thinking that some day there could be a JPIC per cloud. I can try and convert it back so it's clear there is one instance of the class if that is clearer for now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9972#issuecomment-773536457
https://github.com/hail-is/hail/pull/9972#issuecomment-773536457:176,Usability,clear,clearer,176,"For the multiple JPICs, I was thinking that some day there could be a JPIC per cloud. I can try and convert it back so it's clear there is one instance of the class if that is clearer for now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9972#issuecomment-773536457
https://github.com/hail-is/hail/pull/9972#issuecomment-773722261:13,Usability,clear,clearer,13,I think it's clearer with one instance of the JPIC,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9972#issuecomment-773722261
https://github.com/hail-is/hail/pull/9972#issuecomment-778235613:36,Deployability,deploy,deploy,36,Closing this while I debug with dev deploy.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9972#issuecomment-778235613
https://github.com/hail-is/hail/pull/9974#issuecomment-772052307:91,Testability,assert,assertions,91,It's a little concerning that this is necessary. Are there typecheck cases that don't make assertions about some of their children?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9974#issuecomment-772052307
https://github.com/hail-is/hail/pull/9974#issuecomment-772079087:201,Availability,down,down,201,"> It's a little concerning that this is necessary. Are there typecheck cases that don't make assertions about some of their children?. This check would have to go in a LOT of places otherwise. Reading down from the top: CastRename, NA, IsNA, Coalesce, AggLet, TailLoop, MakeArray, ...",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9974#issuecomment-772079087
https://github.com/hail-is/hail/pull/9974#issuecomment-772079087:93,Testability,assert,assertions,93,"> It's a little concerning that this is necessary. Are there typecheck cases that don't make assertions about some of their children?. This check would have to go in a LOT of places otherwise. Reading down from the top: CastRename, NA, IsNA, Coalesce, AggLet, TailLoop, MakeArray, ...",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9974#issuecomment-772079087
https://github.com/hail-is/hail/pull/9980#issuecomment-775247626:140,Availability,down,downgraded,140,"OK, I eliminated a bunch of `log.exception` that are either retried or re-raised. I completely eliminated some of them and in other cases I downgraded them to warning.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9980#issuecomment-775247626
https://github.com/hail-is/hail/pull/9980#issuecomment-775247626:29,Testability,log,log,29,"OK, I eliminated a bunch of `log.exception` that are either retried or re-raised. I completely eliminated some of them and in other cases I downgraded them to warning.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9980#issuecomment-775247626
https://github.com/hail-is/hail/pull/9981#issuecomment-772624116:6,Safety,safe,safer,6,"(also safer, it was totally possible to inadvertently segfault with the previous version, this one guards against that)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9981#issuecomment-772624116
https://github.com/hail-is/hail/pull/9982#issuecomment-774142818:8,Deployability,deploy,deploying,8,I'm dev deploying now to take a look!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9982#issuecomment-774142818
https://github.com/hail-is/hail/pull/9984#issuecomment-773360730:67,Deployability,update,updates,67,Can we get #9986 into this one as well? Qi asking for some version updates for Terra folks,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9984#issuecomment-773360730
https://github.com/hail-is/hail/pull/9984#issuecomment-773391418:83,Deployability,release,release,83,I want to get this out for Grace's team to run VEP. No reason we can't cut another release tomorrow.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9984#issuecomment-773391418
https://github.com/hail-is/hail/pull/9985#issuecomment-773392574:36,Availability,error,error,36,"bump for approval, I fixed the lint error",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9985#issuecomment-773392574
https://github.com/hail-is/hail/pull/9989#issuecomment-773452910:114,Performance,perform,performance,114,Should i run benchmarks before merging this? Changing the way things are copied around seems potentially prone to performance regression.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9989#issuecomment-773452910
https://github.com/hail-is/hail/pull/9989#issuecomment-773452910:13,Testability,benchmark,benchmarks,13,Should i run benchmarks before merging this? Changing the way things are copied around seems potentially prone to performance regression.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9989#issuecomment-773452910
https://github.com/hail-is/hail/pull/9989#issuecomment-773456445:47,Performance,perform,performance,47,"yeah, I have a very low prior on this changing performance. This doesn't change the staged code generation at all anyway, and most of what we care about is staged.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/9989#issuecomment-773456445
https://github.com/hail-is/hail/pull/10001#issuecomment-775281933:26,Testability,test,tests,26,"Right now this passes all tests, but there are some `???`s in there that just never get triggered. Going to try and write tests that hit them before coming up with an implementation.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10001#issuecomment-775281933
https://github.com/hail-is/hail/pull/10001#issuecomment-775281933:122,Testability,test,tests,122,"Right now this passes all tests, but there are some `???`s in there that just never get triggered. Going to try and write tests that hit them before coming up with an implementation.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10001#issuecomment-775281933
https://github.com/hail-is/hail/pull/10001#issuecomment-775541037:86,Integrability,interface,interface,86,"Basically done, I just have to go through and rewrite the LAPACK calls to use the new interface (so far I've only done so with NDArrayInverse). If you have any thoughts on the actual reference counting @tpoterba, that can be reviewed.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10001#issuecomment-775541037
https://github.com/hail-is/hail/pull/10001#issuecomment-775541037:46,Modifiability,rewrite,rewrite,46,"Basically done, I just have to go through and rewrite the LAPACK calls to use the new interface (so far I've only done so with NDArrayInverse). If you have any thoughts on the actual reference counting @tpoterba, that can be reviewed.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10001#issuecomment-775541037
https://github.com/hail-is/hail/pull/10001#issuecomment-780674239:0,Testability,Benchmark,Benchmarks,0,"Benchmarks on this are not good, still investigating.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10001#issuecomment-780674239
https://github.com/hail-is/hail/pull/10001#issuecomment-781709108:33,Energy Efficiency,allocate,allocate,33,"Fixing MakeNDArray to not double allocate cut my laptop benchmark time by more than 50%, it's only a bit slower than main now (~5-10%), so we should probably try and get it in. Feel free to review again when you get a chance.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10001#issuecomment-781709108
https://github.com/hail-is/hail/pull/10001#issuecomment-781709108:56,Testability,benchmark,benchmark,56,"Fixing MakeNDArray to not double allocate cut my laptop benchmark time by more than 50%, it's only a bit slower than main now (~5-10%), so we should probably try and get it in. Feel free to review again when you get a chance.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10001#issuecomment-781709108
https://github.com/hail-is/hail/pull/10017#issuecomment-775554336:8,Availability,failure,failure,8,example failure: https://ci.hail.is/batches/179008/jobs/30,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10017#issuecomment-775554336
https://github.com/hail-is/hail/pull/10019#issuecomment-776197644:439,Availability,down,down,439,"These changes include a performance regression - instead of allocating memory once and filling in each member of the nested value (srvb) we are using struct constructors that allocate e.g. the locus an extra time and copy it into the container. I do not think it's worth creating constructors right now that prevent this regression -- the region value construction is much slower than the java calls here, and the right solution is coming down teh pike -- constructing containers using SStackStruct emit codes will have exactly the semantics we want.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10019#issuecomment-776197644
https://github.com/hail-is/hail/pull/10019#issuecomment-776197644:175,Energy Efficiency,allocate,allocate,175,"These changes include a performance regression - instead of allocating memory once and filling in each member of the nested value (srvb) we are using struct constructors that allocate e.g. the locus an extra time and copy it into the container. I do not think it's worth creating constructors right now that prevent this regression -- the region value construction is much slower than the java calls here, and the right solution is coming down teh pike -- constructing containers using SStackStruct emit codes will have exactly the semantics we want.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10019#issuecomment-776197644
https://github.com/hail-is/hail/pull/10019#issuecomment-776197644:24,Performance,perform,performance,24,"These changes include a performance regression - instead of allocating memory once and filling in each member of the nested value (srvb) we are using struct constructors that allocate e.g. the locus an extra time and copy it into the container. I do not think it's worth creating constructors right now that prevent this regression -- the region value construction is much slower than the java calls here, and the right solution is coming down teh pike -- constructing containers using SStackStruct emit codes will have exactly the semantics we want.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10019#issuecomment-776197644
https://github.com/hail-is/hail/pull/10020#issuecomment-776811671:364,Usability,clear,clearer,364,"This is very nice! I didn't know some of things about the 0.1 days. I agree with John's comments, though I think it's worth making explicit whether a given Tour of Hail Query is for Scientists or Software Engineers. I think you're proposing the latter? Also, a stylistic nitpick but I find bullet-delimited sentences quite difficult to read, and think it might be clearer to drop the ands and commas at the end of the bullets.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10020#issuecomment-776811671
https://github.com/hail-is/hail/pull/10020#issuecomment-776868568:521,Integrability,message,messages,521,"I intend the Tour of Hail Query to assume no genetics knowledge. Indeed, it probably won't ever mention genetics. I removed the sentence-as-bulleted list. I like them, but I'm not the reader here 😉. I intend for each of these documents to be separate files, and people with git experience can skip the git doc. I agree that we use git in one of the typical ways. However, I've learned that Atom's GitHub support doesn't consider the possibility of PRs from one remote to another. We also have some conventions around git messages and stacked PRs that I think are worth getting in writing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10020#issuecomment-776868568
https://github.com/hail-is/hail/pull/10020#issuecomment-776868568:377,Usability,learn,learned,377,"I intend the Tour of Hail Query to assume no genetics knowledge. Indeed, it probably won't ever mention genetics. I removed the sentence-as-bulleted list. I like them, but I'm not the reader here 😉. I intend for each of these documents to be separate files, and people with git experience can skip the git doc. I agree that we use git in one of the typical ways. However, I've learned that Atom's GitHub support doesn't consider the possibility of PRs from one remote to another. We also have some conventions around git messages and stacked PRs that I think are worth getting in writing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10020#issuecomment-776868568
https://github.com/hail-is/hail/pull/10020#issuecomment-781457932:53,Deployability,update,updated,53,"@CDiaz96 @daniel-goldstein @tpoterba @johnc1231 I've updated the document in response to y'all's helpful critique. Please review and approve if you're individually OK with it! Once I have four OKs, I'll remove the WIP tag.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10020#issuecomment-781457932
https://github.com/hail-is/hail/pull/10023#issuecomment-776843634:61,Usability,feedback,feedback,61,"OK, I pushed some docs and clarifying comments based on your feedback, but not functional code changes. Ready for another look.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10023#issuecomment-776843634
https://github.com/hail-is/hail/pull/10023#issuecomment-776865190:21,Testability,test,tests,21,"I'm also running the tests in a loop on a VM to try to flush out any rare, sporadic bugs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10023#issuecomment-776865190
https://github.com/hail-is/hail/pull/10023#issuecomment-776868666:95,Availability,failure,failures,95,"I don't think so. The change is clearly fixes an issue and is an improvement. That said, write failures are rare and I just want to flush out any other rare errors so the tests are reliable.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10023#issuecomment-776868666
https://github.com/hail-is/hail/pull/10023#issuecomment-776868666:157,Availability,error,errors,157,"I don't think so. The change is clearly fixes an issue and is an improvement. That said, write failures are rare and I just want to flush out any other rare errors so the tests are reliable.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10023#issuecomment-776868666
https://github.com/hail-is/hail/pull/10023#issuecomment-776868666:181,Availability,reliab,reliable,181,"I don't think so. The change is clearly fixes an issue and is an improvement. That said, write failures are rare and I just want to flush out any other rare errors so the tests are reliable.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10023#issuecomment-776868666
https://github.com/hail-is/hail/pull/10023#issuecomment-776868666:171,Testability,test,tests,171,"I don't think so. The change is clearly fixes an issue and is an improvement. That said, write failures are rare and I just want to flush out any other rare errors so the tests are reliable.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10023#issuecomment-776868666
https://github.com/hail-is/hail/pull/10023#issuecomment-776868666:32,Usability,clear,clearly,32,"I don't think so. The change is clearly fixes an issue and is an improvement. That said, write failures are rare and I just want to flush out any other rare errors so the tests are reliable.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10023#issuecomment-776868666
https://github.com/hail-is/hail/pull/10028#issuecomment-776764611:8,Testability,test,tests,8,Failing tests,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10028#issuecomment-776764611
https://github.com/hail-is/hail/pull/10043#issuecomment-778364838:710,Integrability,interface,interface,710,"I have a implemented a highly concurrent Python asyncio filesystem that supports GCS and the local file system (and soon S3). It is my intention to ultimately replace the hadoop_* functions with this. The new thing feels pretty fast: copy benchmarks 2-5x faster than gsutil for example, esp. when working with lots of files. Some remarks:; - It is designed to do the minimal number of system calls/API calls per operation so there is serial loops like this anywhere in the code.; - Our short term goal is to use this for the input/output steps in Batch.; - It doesn't support Hadoop (and I'm not super exciting about maintaining that).; - Some things will be much faster because no round trip the JVM. ; - The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations.; - The list files operation doesn't support globbing yet.; - There are no docs yet.; - Compared to Hadoop/POSIX, the interface is slightly lower level but it was designed to map well onto the filesystems we want to support. There is no `stat`, for example, but is statfile (which requires the input to be a file) and listfiles (which requires it to be a directory), although we could build that.; - I'd say the code is beta and not quite completely solid but getting close. Here is the AsyncFS interface: https://github.com/hail-is/hail/blob/main/hail/python/hailtop/aiotools/fs.py#L70. Here is an example creating a router filesystem that supports GCS and the local file system: https://github.com/hail-is/hail/blob/main/hail/python/test/hailtop/test_aiogoogle.py#L17. I'd be happy to chat more about what would make this attractive for you guys to switch to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778364838
https://github.com/hail-is/hail/pull/10043#issuecomment-778364838:764,Integrability,wrap,wrappers,764,"I have a implemented a highly concurrent Python asyncio filesystem that supports GCS and the local file system (and soon S3). It is my intention to ultimately replace the hadoop_* functions with this. The new thing feels pretty fast: copy benchmarks 2-5x faster than gsutil for example, esp. when working with lots of files. Some remarks:; - It is designed to do the minimal number of system calls/API calls per operation so there is serial loops like this anywhere in the code.; - Our short term goal is to use this for the input/output steps in Batch.; - It doesn't support Hadoop (and I'm not super exciting about maintaining that).; - Some things will be much faster because no round trip the JVM. ; - The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations.; - The list files operation doesn't support globbing yet.; - There are no docs yet.; - Compared to Hadoop/POSIX, the interface is slightly lower level but it was designed to map well onto the filesystems we want to support. There is no `stat`, for example, but is statfile (which requires the input to be a file) and listfiles (which requires it to be a directory), although we could build that.; - I'd say the code is beta and not quite completely solid but getting close. Here is the AsyncFS interface: https://github.com/hail-is/hail/blob/main/hail/python/hailtop/aiotools/fs.py#L70. Here is an example creating a router filesystem that supports GCS and the local file system: https://github.com/hail-is/hail/blob/main/hail/python/test/hailtop/test_aiogoogle.py#L17. I'd be happy to chat more about what would make this attractive for you guys to switch to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778364838
https://github.com/hail-is/hail/pull/10043#issuecomment-778364838:799,Integrability,interface,interface,799,"I have a implemented a highly concurrent Python asyncio filesystem that supports GCS and the local file system (and soon S3). It is my intention to ultimately replace the hadoop_* functions with this. The new thing feels pretty fast: copy benchmarks 2-5x faster than gsutil for example, esp. when working with lots of files. Some remarks:; - It is designed to do the minimal number of system calls/API calls per operation so there is serial loops like this anywhere in the code.; - Our short term goal is to use this for the input/output steps in Batch.; - It doesn't support Hadoop (and I'm not super exciting about maintaining that).; - Some things will be much faster because no round trip the JVM. ; - The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations.; - The list files operation doesn't support globbing yet.; - There are no docs yet.; - Compared to Hadoop/POSIX, the interface is slightly lower level but it was designed to map well onto the filesystems we want to support. There is no `stat`, for example, but is statfile (which requires the input to be a file) and listfiles (which requires it to be a directory), although we could build that.; - I'd say the code is beta and not quite completely solid but getting close. Here is the AsyncFS interface: https://github.com/hail-is/hail/blob/main/hail/python/hailtop/aiotools/fs.py#L70. Here is an example creating a router filesystem that supports GCS and the local file system: https://github.com/hail-is/hail/blob/main/hail/python/test/hailtop/test_aiogoogle.py#L17. I'd be happy to chat more about what would make this attractive for you guys to switch to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778364838
https://github.com/hail-is/hail/pull/10043#issuecomment-778364838:820,Integrability,interface,interface,820,"I have a implemented a highly concurrent Python asyncio filesystem that supports GCS and the local file system (and soon S3). It is my intention to ultimately replace the hadoop_* functions with this. The new thing feels pretty fast: copy benchmarks 2-5x faster than gsutil for example, esp. when working with lots of files. Some remarks:; - It is designed to do the minimal number of system calls/API calls per operation so there is serial loops like this anywhere in the code.; - Our short term goal is to use this for the input/output steps in Batch.; - It doesn't support Hadoop (and I'm not super exciting about maintaining that).; - Some things will be much faster because no round trip the JVM. ; - The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations.; - The list files operation doesn't support globbing yet.; - There are no docs yet.; - Compared to Hadoop/POSIX, the interface is slightly lower level but it was designed to map well onto the filesystems we want to support. There is no `stat`, for example, but is statfile (which requires the input to be a file) and listfiles (which requires it to be a directory), although we could build that.; - I'd say the code is beta and not quite completely solid but getting close. Here is the AsyncFS interface: https://github.com/hail-is/hail/blob/main/hail/python/hailtop/aiotools/fs.py#L70. Here is an example creating a router filesystem that supports GCS and the local file system: https://github.com/hail-is/hail/blob/main/hail/python/test/hailtop/test_aiogoogle.py#L17. I'd be happy to chat more about what would make this attractive for you guys to switch to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778364838
https://github.com/hail-is/hail/pull/10043#issuecomment-778364838:898,Integrability,interface,interface,898,"I have a implemented a highly concurrent Python asyncio filesystem that supports GCS and the local file system (and soon S3). It is my intention to ultimately replace the hadoop_* functions with this. The new thing feels pretty fast: copy benchmarks 2-5x faster than gsutil for example, esp. when working with lots of files. Some remarks:; - It is designed to do the minimal number of system calls/API calls per operation so there is serial loops like this anywhere in the code.; - Our short term goal is to use this for the input/output steps in Batch.; - It doesn't support Hadoop (and I'm not super exciting about maintaining that).; - Some things will be much faster because no round trip the JVM. ; - The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations.; - The list files operation doesn't support globbing yet.; - There are no docs yet.; - Compared to Hadoop/POSIX, the interface is slightly lower level but it was designed to map well onto the filesystems we want to support. There is no `stat`, for example, but is statfile (which requires the input to be a file) and listfiles (which requires it to be a directory), although we could build that.; - I'd say the code is beta and not quite completely solid but getting close. Here is the AsyncFS interface: https://github.com/hail-is/hail/blob/main/hail/python/hailtop/aiotools/fs.py#L70. Here is an example creating a router filesystem that supports GCS and the local file system: https://github.com/hail-is/hail/blob/main/hail/python/test/hailtop/test_aiogoogle.py#L17. I'd be happy to chat more about what would make this attractive for you guys to switch to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778364838
https://github.com/hail-is/hail/pull/10043#issuecomment-778364838:1067,Integrability,interface,interface,1067,"I have a implemented a highly concurrent Python asyncio filesystem that supports GCS and the local file system (and soon S3). It is my intention to ultimately replace the hadoop_* functions with this. The new thing feels pretty fast: copy benchmarks 2-5x faster than gsutil for example, esp. when working with lots of files. Some remarks:; - It is designed to do the minimal number of system calls/API calls per operation so there is serial loops like this anywhere in the code.; - Our short term goal is to use this for the input/output steps in Batch.; - It doesn't support Hadoop (and I'm not super exciting about maintaining that).; - Some things will be much faster because no round trip the JVM. ; - The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations.; - The list files operation doesn't support globbing yet.; - There are no docs yet.; - Compared to Hadoop/POSIX, the interface is slightly lower level but it was designed to map well onto the filesystems we want to support. There is no `stat`, for example, but is statfile (which requires the input to be a file) and listfiles (which requires it to be a directory), although we could build that.; - I'd say the code is beta and not quite completely solid but getting close. Here is the AsyncFS interface: https://github.com/hail-is/hail/blob/main/hail/python/hailtop/aiotools/fs.py#L70. Here is an example creating a router filesystem that supports GCS and the local file system: https://github.com/hail-is/hail/blob/main/hail/python/test/hailtop/test_aiogoogle.py#L17. I'd be happy to chat more about what would make this attractive for you guys to switch to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778364838
https://github.com/hail-is/hail/pull/10043#issuecomment-778364838:1444,Integrability,interface,interface,1444,"I have a implemented a highly concurrent Python asyncio filesystem that supports GCS and the local file system (and soon S3). It is my intention to ultimately replace the hadoop_* functions with this. The new thing feels pretty fast: copy benchmarks 2-5x faster than gsutil for example, esp. when working with lots of files. Some remarks:; - It is designed to do the minimal number of system calls/API calls per operation so there is serial loops like this anywhere in the code.; - Our short term goal is to use this for the input/output steps in Batch.; - It doesn't support Hadoop (and I'm not super exciting about maintaining that).; - Some things will be much faster because no round trip the JVM. ; - The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations.; - The list files operation doesn't support globbing yet.; - There are no docs yet.; - Compared to Hadoop/POSIX, the interface is slightly lower level but it was designed to map well onto the filesystems we want to support. There is no `stat`, for example, but is statfile (which requires the input to be a file) and listfiles (which requires it to be a directory), although we could build that.; - I'd say the code is beta and not quite completely solid but getting close. Here is the AsyncFS interface: https://github.com/hail-is/hail/blob/main/hail/python/hailtop/aiotools/fs.py#L70. Here is an example creating a router filesystem that supports GCS and the local file system: https://github.com/hail-is/hail/blob/main/hail/python/test/hailtop/test_aiogoogle.py#L17. I'd be happy to chat more about what would make this attractive for you guys to switch to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778364838
https://github.com/hail-is/hail/pull/10043#issuecomment-778364838:1567,Integrability,rout,router,1567,"I have a implemented a highly concurrent Python asyncio filesystem that supports GCS and the local file system (and soon S3). It is my intention to ultimately replace the hadoop_* functions with this. The new thing feels pretty fast: copy benchmarks 2-5x faster than gsutil for example, esp. when working with lots of files. Some remarks:; - It is designed to do the minimal number of system calls/API calls per operation so there is serial loops like this anywhere in the code.; - Our short term goal is to use this for the input/output steps in Batch.; - It doesn't support Hadoop (and I'm not super exciting about maintaining that).; - Some things will be much faster because no round trip the JVM. ; - The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations.; - The list files operation doesn't support globbing yet.; - There are no docs yet.; - Compared to Hadoop/POSIX, the interface is slightly lower level but it was designed to map well onto the filesystems we want to support. There is no `stat`, for example, but is statfile (which requires the input to be a file) and listfiles (which requires it to be a directory), although we could build that.; - I'd say the code is beta and not quite completely solid but getting close. Here is the AsyncFS interface: https://github.com/hail-is/hail/blob/main/hail/python/hailtop/aiotools/fs.py#L70. Here is an example creating a router filesystem that supports GCS and the local file system: https://github.com/hail-is/hail/blob/main/hail/python/test/hailtop/test_aiogoogle.py#L17. I'd be happy to chat more about what would make this attractive for you guys to switch to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778364838
https://github.com/hail-is/hail/pull/10043#issuecomment-778364838:30,Performance,concurren,concurrent,30,"I have a implemented a highly concurrent Python asyncio filesystem that supports GCS and the local file system (and soon S3). It is my intention to ultimately replace the hadoop_* functions with this. The new thing feels pretty fast: copy benchmarks 2-5x faster than gsutil for example, esp. when working with lots of files. Some remarks:; - It is designed to do the minimal number of system calls/API calls per operation so there is serial loops like this anywhere in the code.; - Our short term goal is to use this for the input/output steps in Batch.; - It doesn't support Hadoop (and I'm not super exciting about maintaining that).; - Some things will be much faster because no round trip the JVM. ; - The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations.; - The list files operation doesn't support globbing yet.; - There are no docs yet.; - Compared to Hadoop/POSIX, the interface is slightly lower level but it was designed to map well onto the filesystems we want to support. There is no `stat`, for example, but is statfile (which requires the input to be a file) and listfiles (which requires it to be a directory), although we could build that.; - I'd say the code is beta and not quite completely solid but getting close. Here is the AsyncFS interface: https://github.com/hail-is/hail/blob/main/hail/python/hailtop/aiotools/fs.py#L70. Here is an example creating a router filesystem that supports GCS and the local file system: https://github.com/hail-is/hail/blob/main/hail/python/test/hailtop/test_aiogoogle.py#L17. I'd be happy to chat more about what would make this attractive for you guys to switch to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778364838
https://github.com/hail-is/hail/pull/10043#issuecomment-778364838:843,Performance,concurren,concurrency,843,"I have a implemented a highly concurrent Python asyncio filesystem that supports GCS and the local file system (and soon S3). It is my intention to ultimately replace the hadoop_* functions with this. The new thing feels pretty fast: copy benchmarks 2-5x faster than gsutil for example, esp. when working with lots of files. Some remarks:; - It is designed to do the minimal number of system calls/API calls per operation so there is serial loops like this anywhere in the code.; - Our short term goal is to use this for the input/output steps in Batch.; - It doesn't support Hadoop (and I'm not super exciting about maintaining that).; - Some things will be much faster because no round trip the JVM. ; - The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations.; - The list files operation doesn't support globbing yet.; - There are no docs yet.; - Compared to Hadoop/POSIX, the interface is slightly lower level but it was designed to map well onto the filesystems we want to support. There is no `stat`, for example, but is statfile (which requires the input to be a file) and listfiles (which requires it to be a directory), although we could build that.; - I'd say the code is beta and not quite completely solid but getting close. Here is the AsyncFS interface: https://github.com/hail-is/hail/blob/main/hail/python/hailtop/aiotools/fs.py#L70. Here is an example creating a router filesystem that supports GCS and the local file system: https://github.com/hail-is/hail/blob/main/hail/python/test/hailtop/test_aiogoogle.py#L17. I'd be happy to chat more about what would make this attractive for you guys to switch to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778364838
https://github.com/hail-is/hail/pull/10043#issuecomment-778364838:239,Testability,benchmark,benchmarks,239,"I have a implemented a highly concurrent Python asyncio filesystem that supports GCS and the local file system (and soon S3). It is my intention to ultimately replace the hadoop_* functions with this. The new thing feels pretty fast: copy benchmarks 2-5x faster than gsutil for example, esp. when working with lots of files. Some remarks:; - It is designed to do the minimal number of system calls/API calls per operation so there is serial loops like this anywhere in the code.; - Our short term goal is to use this for the input/output steps in Batch.; - It doesn't support Hadoop (and I'm not super exciting about maintaining that).; - Some things will be much faster because no round trip the JVM. ; - The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations.; - The list files operation doesn't support globbing yet.; - There are no docs yet.; - Compared to Hadoop/POSIX, the interface is slightly lower level but it was designed to map well onto the filesystems we want to support. There is no `stat`, for example, but is statfile (which requires the input to be a file) and listfiles (which requires it to be a directory), although we could build that.; - I'd say the code is beta and not quite completely solid but getting close. Here is the AsyncFS interface: https://github.com/hail-is/hail/blob/main/hail/python/hailtop/aiotools/fs.py#L70. Here is an example creating a router filesystem that supports GCS and the local file system: https://github.com/hail-is/hail/blob/main/hail/python/test/hailtop/test_aiogoogle.py#L17. I'd be happy to chat more about what would make this attractive for you guys to switch to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778364838
https://github.com/hail-is/hail/pull/10043#issuecomment-778364838:1684,Testability,test,test,1684,"I have a implemented a highly concurrent Python asyncio filesystem that supports GCS and the local file system (and soon S3). It is my intention to ultimately replace the hadoop_* functions with this. The new thing feels pretty fast: copy benchmarks 2-5x faster than gsutil for example, esp. when working with lots of files. Some remarks:; - It is designed to do the minimal number of system calls/API calls per operation so there is serial loops like this anywhere in the code.; - Our short term goal is to use this for the input/output steps in Batch.; - It doesn't support Hadoop (and I'm not super exciting about maintaining that).; - Some things will be much faster because no round trip the JVM. ; - The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations.; - The list files operation doesn't support globbing yet.; - There are no docs yet.; - Compared to Hadoop/POSIX, the interface is slightly lower level but it was designed to map well onto the filesystems we want to support. There is no `stat`, for example, but is statfile (which requires the input to be a file) and listfiles (which requires it to be a directory), although we could build that.; - I'd say the code is beta and not quite completely solid but getting close. Here is the AsyncFS interface: https://github.com/hail-is/hail/blob/main/hail/python/hailtop/aiotools/fs.py#L70. Here is an example creating a router filesystem that supports GCS and the local file system: https://github.com/hail-is/hail/blob/main/hail/python/test/hailtop/test_aiogoogle.py#L17. I'd be happy to chat more about what would make this attractive for you guys to switch to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778364838
https://github.com/hail-is/hail/pull/10043#issuecomment-778393144:6,Integrability,interface,interface,6,"> The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations. +1 for this. Synchronous wrappers would make replacing existing uses of `hl.hadoop_*` much easier.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778393144
https://github.com/hail-is/hail/pull/10043#issuecomment-778393144:60,Integrability,wrap,wrappers,60,"> The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations. +1 for this. Synchronous wrappers would make replacing existing uses of `hl.hadoop_*` much easier.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778393144
https://github.com/hail-is/hail/pull/10043#issuecomment-778393144:95,Integrability,interface,interface,95,"> The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations. +1 for this. Synchronous wrappers would make replacing existing uses of `hl.hadoop_*` much easier.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778393144
https://github.com/hail-is/hail/pull/10043#issuecomment-778393144:116,Integrability,interface,interface,116,"> The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations. +1 for this. Synchronous wrappers would make replacing existing uses of `hl.hadoop_*` much easier.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778393144
https://github.com/hail-is/hail/pull/10043#issuecomment-778393144:194,Integrability,interface,interface,194,"> The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations. +1 for this. Synchronous wrappers would make replacing existing uses of `hl.hadoop_*` much easier.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778393144
https://github.com/hail-is/hail/pull/10043#issuecomment-778393144:271,Integrability,wrap,wrappers,271,"> The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations. +1 for this. Synchronous wrappers would make replacing existing uses of `hl.hadoop_*` much easier.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778393144
https://github.com/hail-is/hail/pull/10043#issuecomment-778393144:139,Performance,concurren,concurrency,139,"> The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations. +1 for this. Synchronous wrappers would make replacing existing uses of `hl.hadoop_*` much easier.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778393144
https://github.com/hail-is/hail/pull/10043#issuecomment-778403277:75,Integrability,interface,interface,75,"OK, great. I'm working on this as we speak, so I'll prototype a draft sync interface and run it by you all.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778403277
https://github.com/hail-is/hail/pull/10045#issuecomment-780718696:33,Testability,test,tests,33,closing until I find time to add tests,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10045#issuecomment-780718696
https://github.com/hail-is/hail/pull/10054#issuecomment-788979439:4,Testability,test,test,4,"PCA test failing, this is because https://github.com/apache/spark/blob/v3.0.1/mllib/src/main/scala/org/apache/spark/mllib/linalg/distributed/RowMatrix.scala#L795 is wrong prior to 3.1.1. `MAX_RESULT_SIZE` of 0 is supposed to be interpreted as ""unlimited"".",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10054#issuecomment-788979439
https://github.com/hail-is/hail/pull/10054#issuecomment-788986746:137,Deployability,update,update,137,"Actually also fixed in 3.0.2, so will test with that for now. Trying to get all tests passing in anticipation of Google's dataproc image update and Spark 3.1.1 release.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10054#issuecomment-788986746
https://github.com/hail-is/hail/pull/10054#issuecomment-788986746:160,Deployability,release,release,160,"Actually also fixed in 3.0.2, so will test with that for now. Trying to get all tests passing in anticipation of Google's dataproc image update and Spark 3.1.1 release.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10054#issuecomment-788986746
https://github.com/hail-is/hail/pull/10054#issuecomment-788986746:38,Testability,test,test,38,"Actually also fixed in 3.0.2, so will test with that for now. Trying to get all tests passing in anticipation of Google's dataproc image update and Spark 3.1.1 release.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10054#issuecomment-788986746
https://github.com/hail-is/hail/pull/10054#issuecomment-788986746:80,Testability,test,tests,80,"Actually also fixed in 3.0.2, so will test with that for now. Trying to get all tests passing in anticipation of Google's dataproc image update and Spark 3.1.1 release.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10054#issuecomment-788986746
https://github.com/hail-is/hail/pull/10054#issuecomment-790702427:45,Deployability,update,updated,45,"Spark 3.1.1 is out, dataproc image should be updated from the release candidate dependency within a week or so I think. The only remaining issue I think is a weird one, a particular blockmatrix test is failing because json4s can't find a constructor for `BlockMatrixSparsity` objects. Looking into it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10054#issuecomment-790702427
https://github.com/hail-is/hail/pull/10054#issuecomment-790702427:62,Deployability,release,release,62,"Spark 3.1.1 is out, dataproc image should be updated from the release candidate dependency within a week or so I think. The only remaining issue I think is a weird one, a particular blockmatrix test is failing because json4s can't find a constructor for `BlockMatrixSparsity` objects. Looking into it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10054#issuecomment-790702427
https://github.com/hail-is/hail/pull/10054#issuecomment-790702427:80,Integrability,depend,dependency,80,"Spark 3.1.1 is out, dataproc image should be updated from the release candidate dependency within a week or so I think. The only remaining issue I think is a weird one, a particular blockmatrix test is failing because json4s can't find a constructor for `BlockMatrixSparsity` objects. Looking into it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10054#issuecomment-790702427
https://github.com/hail-is/hail/pull/10054#issuecomment-790702427:194,Testability,test,test,194,"Spark 3.1.1 is out, dataproc image should be updated from the release candidate dependency within a week or so I think. The only remaining issue I think is a weird one, a particular blockmatrix test is failing because json4s can't find a constructor for `BlockMatrixSparsity` objects. Looking into it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10054#issuecomment-790702427
https://github.com/hail-is/hail/pull/10054#issuecomment-793140564:31,Testability,test,testing,31,This is now just blocked on me testing that we have an elasticsearch export story.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10054#issuecomment-793140564
https://github.com/hail-is/hail/pull/10056#issuecomment-780248628:233,Integrability,Rout,Router,233,@cseed You can take this for a spin at https://internal.hail.is/dking/website/ . It's a bit sluggish. the end-to-end timing at gateway for `api.html` (the API reference) hovers around 125ms. About 35ms is website / jinja2 rendering. Router adds anywhere from 5ms to 20ms. It seems like hitting the router-resolver and whatever else `gateway` does makes up the rest. [Service logs here](https://console.cloud.google.com/logs/query;query=labels.%22k8s-pod%2Fapp%22%3D%22gateway%22%20OR%20labels.%22k8s-pod%2Fapp%22%3D%22router%22%20OR%20labels.%22k8s-pod%2Fapp%22%3D%22website%22%0AjsonPayload.message:%22%2Fdking%2Fwebsite%2Fdocs%2F0.2%2Fapi.html%22;summaryFields=labels%252F%2522k8s-pod%252Fapp%2522:false:32:beginning?project=hail-vdc&query=%0A). I think in production it will be fine because there's a fair bit less indirection.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10056#issuecomment-780248628
https://github.com/hail-is/hail/pull/10056#issuecomment-780248628:298,Integrability,rout,router-resolver,298,@cseed You can take this for a spin at https://internal.hail.is/dking/website/ . It's a bit sluggish. the end-to-end timing at gateway for `api.html` (the API reference) hovers around 125ms. About 35ms is website / jinja2 rendering. Router adds anywhere from 5ms to 20ms. It seems like hitting the router-resolver and whatever else `gateway` does makes up the rest. [Service logs here](https://console.cloud.google.com/logs/query;query=labels.%22k8s-pod%2Fapp%22%3D%22gateway%22%20OR%20labels.%22k8s-pod%2Fapp%22%3D%22router%22%20OR%20labels.%22k8s-pod%2Fapp%22%3D%22website%22%0AjsonPayload.message:%22%2Fdking%2Fwebsite%2Fdocs%2F0.2%2Fapi.html%22;summaryFields=labels%252F%2522k8s-pod%252Fapp%2522:false:32:beginning?project=hail-vdc&query=%0A). I think in production it will be fine because there's a fair bit less indirection.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10056#issuecomment-780248628
https://github.com/hail-is/hail/pull/10056#issuecomment-780248628:592,Integrability,message,message,592,@cseed You can take this for a spin at https://internal.hail.is/dking/website/ . It's a bit sluggish. the end-to-end timing at gateway for `api.html` (the API reference) hovers around 125ms. About 35ms is website / jinja2 rendering. Router adds anywhere from 5ms to 20ms. It seems like hitting the router-resolver and whatever else `gateway` does makes up the rest. [Service logs here](https://console.cloud.google.com/logs/query;query=labels.%22k8s-pod%2Fapp%22%3D%22gateway%22%20OR%20labels.%22k8s-pod%2Fapp%22%3D%22router%22%20OR%20labels.%22k8s-pod%2Fapp%22%3D%22website%22%0AjsonPayload.message:%22%2Fdking%2Fwebsite%2Fdocs%2F0.2%2Fapi.html%22;summaryFields=labels%252F%2522k8s-pod%252Fapp%2522:false:32:beginning?project=hail-vdc&query=%0A). I think in production it will be fine because there's a fair bit less indirection.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10056#issuecomment-780248628
https://github.com/hail-is/hail/pull/10056#issuecomment-780248628:375,Testability,log,logs,375,@cseed You can take this for a spin at https://internal.hail.is/dking/website/ . It's a bit sluggish. the end-to-end timing at gateway for `api.html` (the API reference) hovers around 125ms. About 35ms is website / jinja2 rendering. Router adds anywhere from 5ms to 20ms. It seems like hitting the router-resolver and whatever else `gateway` does makes up the rest. [Service logs here](https://console.cloud.google.com/logs/query;query=labels.%22k8s-pod%2Fapp%22%3D%22gateway%22%20OR%20labels.%22k8s-pod%2Fapp%22%3D%22router%22%20OR%20labels.%22k8s-pod%2Fapp%22%3D%22website%22%0AjsonPayload.message:%22%2Fdking%2Fwebsite%2Fdocs%2F0.2%2Fapi.html%22;summaryFields=labels%252F%2522k8s-pod%252Fapp%2522:false:32:beginning?project=hail-vdc&query=%0A). I think in production it will be fine because there's a fair bit less indirection.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10056#issuecomment-780248628
https://github.com/hail-is/hail/pull/10056#issuecomment-780248628:419,Testability,log,logs,419,@cseed You can take this for a spin at https://internal.hail.is/dking/website/ . It's a bit sluggish. the end-to-end timing at gateway for `api.html` (the API reference) hovers around 125ms. About 35ms is website / jinja2 rendering. Router adds anywhere from 5ms to 20ms. It seems like hitting the router-resolver and whatever else `gateway` does makes up the rest. [Service logs here](https://console.cloud.google.com/logs/query;query=labels.%22k8s-pod%2Fapp%22%3D%22gateway%22%20OR%20labels.%22k8s-pod%2Fapp%22%3D%22router%22%20OR%20labels.%22k8s-pod%2Fapp%22%3D%22website%22%0AjsonPayload.message:%22%2Fdking%2Fwebsite%2Fdocs%2F0.2%2Fapi.html%22;summaryFields=labels%252F%2522k8s-pod%252Fapp%2522:false:32:beginning?project=hail-vdc&query=%0A). I think in production it will be fine because there's a fair bit less indirection.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10056#issuecomment-780248628
https://github.com/hail-is/hail/pull/10058#issuecomment-781728668:39,Security,access,access,39,"`ci-test` is failing, and I don't have access to see why",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10058#issuecomment-781728668
https://github.com/hail-is/hail/pull/10058#issuecomment-781728668:4,Testability,test,test,4,"`ci-test` is failing, and I don't have access to see why",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10058#issuecomment-781728668
https://github.com/hail-is/hail/pull/10058#issuecomment-781729645:20,Availability,failure,failure,20,looks like a random failure in test_batch. I retried the build,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10058#issuecomment-781729645
https://github.com/hail-is/hail/pull/10060#issuecomment-786227812:0,Deployability,Deploy,Deploying,0,Deploying and taking a look!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10060#issuecomment-786227812
https://github.com/hail-is/hail/pull/10060#issuecomment-786356423:116,Modifiability,extend,extends,116,"I noticed something else, really long running jobs don't look great. That second blue line is a 6 minute job and it extends past the end of the page. Can we maybe put all of these divs into something that scrolls? Maybe a `div` with an `overflow: scroll`? I'm not sure exactly what should happen or how to do it, but I think we need a solution for this situation.; ![Screen Shot 2021-02-26 at 1 57 37 AM](https://user-images.githubusercontent.com/106194/109244152-17be8280-77d6-11eb-8f00-c124f9c2a5c7.png). I created this example with:; ```; import hailtop.batch as hb ; b = hb.Batch(backend=hb.ServiceBackend('test')) ; for i in range(1): ; b.new_job().command('sleep 360') ; b.run() ; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10060#issuecomment-786356423
https://github.com/hail-is/hail/pull/10060#issuecomment-786356423:611,Testability,test,test,611,"I noticed something else, really long running jobs don't look great. That second blue line is a 6 minute job and it extends past the end of the page. Can we maybe put all of these divs into something that scrolls? Maybe a `div` with an `overflow: scroll`? I'm not sure exactly what should happen or how to do it, but I think we need a solution for this situation.; ![Screen Shot 2021-02-26 at 1 57 37 AM](https://user-images.githubusercontent.com/106194/109244152-17be8280-77d6-11eb-8f00-c124f9c2a5c7.png). I created this example with:; ```; import hailtop.batch as hb ; b = hb.Batch(backend=hb.ServiceBackend('test')) ; for i in range(1): ; b.new_job().command('sleep 360') ; b.run() ; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10060#issuecomment-786356423
https://github.com/hail-is/hail/pull/10061#issuecomment-781365583:68,Testability,benchmark,benchmarks,68,"So this made a big difference across the board. This is why we need benchmarks nightly, would have caught this.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10061#issuecomment-781365583
https://github.com/hail-is/hail/pull/10066#issuecomment-783517593:89,Deployability,deploy,deploying,89,Holding on this until #10056 goes in because it removes the need for pypi credentials in deploying site.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10066#issuecomment-783517593
https://github.com/hail-is/hail/pull/10071#issuecomment-783583573:1366,Performance,optimiz,optimized,1366,"We run this query to get fair share values per user:. ```; SELECT user, CAST(COALESCE(SUM(n_cancelled_running_jobs), 0) AS SIGNED) AS n_cancelled_running_jobs; FROM user_inst_coll_resources; GROUP BY user; HAVING n_cancelled_running_jobs > 0;; ```. This query will return 0 even though there could be attempts still running. Plus these queries only look at running batches. ```; async for batch in self.db.select_and_fetchall(; '''; SELECT id; FROM batches; WHERE user = %s AND `state` = 'running' AND cancelled = 1;; ''',; (user,),; timer_description=f'in cancel_cancelled_running_jobs: get {user} cancelled batches'):; async for record in self.db.select_and_fetchall(; '''; SELECT jobs.job_id, attempts.attempt_id, attempts.instance_name; FROM jobs FORCE INDEX(jobs_batch_id_state_always_run_cancelled); STRAIGHT_JOIN attempts; ON attempts.batch_id = jobs.batch_id AND attempts.job_id = jobs.job_id; WHERE jobs.batch_id = %s AND state = 'Running' AND always_run = 0 AND cancelled = 0; LIMIT %s;; ''',; (batch['id'], remaining.value),; timer_description=f'in cancel_cancelled_running_jobs: get {user} batch {batch[""id""]} running cancelled jobs'):; record['batch_id'] = batch['id']; yield record; ``` . I'll think about whether I can combine these queries over the attempts. However, it seemed clearer to me to look for two different things as the other queries are optimized by looking at the batch and job state where the orphaned query doesn't care about fair share or the batch / job state..",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10071#issuecomment-783583573
https://github.com/hail-is/hail/pull/10071#issuecomment-783583573:1294,Usability,clear,clearer,1294,"We run this query to get fair share values per user:. ```; SELECT user, CAST(COALESCE(SUM(n_cancelled_running_jobs), 0) AS SIGNED) AS n_cancelled_running_jobs; FROM user_inst_coll_resources; GROUP BY user; HAVING n_cancelled_running_jobs > 0;; ```. This query will return 0 even though there could be attempts still running. Plus these queries only look at running batches. ```; async for batch in self.db.select_and_fetchall(; '''; SELECT id; FROM batches; WHERE user = %s AND `state` = 'running' AND cancelled = 1;; ''',; (user,),; timer_description=f'in cancel_cancelled_running_jobs: get {user} cancelled batches'):; async for record in self.db.select_and_fetchall(; '''; SELECT jobs.job_id, attempts.attempt_id, attempts.instance_name; FROM jobs FORCE INDEX(jobs_batch_id_state_always_run_cancelled); STRAIGHT_JOIN attempts; ON attempts.batch_id = jobs.batch_id AND attempts.job_id = jobs.job_id; WHERE jobs.batch_id = %s AND state = 'Running' AND always_run = 0 AND cancelled = 0; LIMIT %s;; ''',; (batch['id'], remaining.value),; timer_description=f'in cancel_cancelled_running_jobs: get {user} batch {batch[""id""]} running cancelled jobs'):; record['batch_id'] = batch['id']; yield record; ``` . I'll think about whether I can combine these queries over the attempts. However, it seemed clearer to me to look for two different things as the other queries are optimized by looking at the batch and job state where the orphaned query doesn't care about fair share or the batch / job state..",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10071#issuecomment-783583573
https://github.com/hail-is/hail/pull/10072#issuecomment-782556470:52,Deployability,update,update,52,"The SHA's are changing a bit quicker than I want to update them. I'll update when it stabilizes, but the titles are still correct.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10072#issuecomment-782556470
https://github.com/hail-is/hail/pull/10072#issuecomment-782556470:70,Deployability,update,update,70,"The SHA's are changing a bit quicker than I want to update them. I'll update when it stabilizes, but the titles are still correct.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10072#issuecomment-782556470
https://github.com/hail-is/hail/pull/10073#issuecomment-783584233:57,Testability,Test,Tested,57,Thankfully the same digest flags can be passed to `req`. Tested manually with `openssl x509 -noout -text` to see that the correct Signature Algorithm was chosen.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10073#issuecomment-783584233
https://github.com/hail-is/hail/pull/10075#issuecomment-784322347:90,Usability,simpl,simpler,90,"Meant to assign this, just forgot to. Curious if you see any other ways to make this code simpler/faster.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10075#issuecomment-784322347
https://github.com/hail-is/hail/pull/10075#issuecomment-786736301:24,Performance,perform,performance,24,@patrick-schultz slight performance improvement from doing the indexing without the intermediate struct like you suggested. Should be good to go.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10075#issuecomment-786736301
https://github.com/hail-is/hail/pull/10085#issuecomment-784542735:90,Availability,failure,failure,90,"Hi @danking, I see the initial CI result failed, but I'm unable to login and see what the failure is. I signed in to google with my popgen account, and get 504 Gateway Time-out on the `auth.hail.is/oauth2callback`, I imagine because I don't have an account there.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-784542735
https://github.com/hail-is/hail/pull/10085#issuecomment-784542735:67,Testability,log,login,67,"Hi @danking, I see the initial CI result failed, but I'm unable to login and see what the failure is. I signed in to google with my popgen account, and get 504 Gateway Time-out on the `auth.hail.is/oauth2callback`, I imagine because I don't have an account there.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-784542735
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:2528,Availability,error,errors,2528,"1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This also means all hailtop installs need a hail_version file. I only found two other places that use hailtop. One of them was a completely unused Dockerfile. I deleted that (`Dockerfile.hailtop`). The other was Dockerfile.ci-test, which I updated to copy the hail_version file just like service-base. https://github.com/hail-is/hail/compare/main...danking:add-version-endpoint. Do you want to cherry-pick that change onto your add-version-endpoint branch?. One more change request: can we remove the try-catch? I don't expect any errors in that call and I tend to avoid revealing anything about errors to our users. Aiohttp will log the error and the stack trace if you let it rise all the way. Sorry for all the complication! Our build system is the second service we built and is clearly showing its age.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:2593,Availability,error,errors,2593,"1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This also means all hailtop installs need a hail_version file. I only found two other places that use hailtop. One of them was a completely unused Dockerfile. I deleted that (`Dockerfile.hailtop`). The other was Dockerfile.ci-test, which I updated to copy the hail_version file just like service-base. https://github.com/hail-is/hail/compare/main...danking:add-version-endpoint. Do you want to cherry-pick that change onto your add-version-endpoint branch?. One more change request: can we remove the try-catch? I don't expect any errors in that call and I tend to avoid revealing anything about errors to our users. Aiohttp will log the error and the stack trace if you let it rise all the way. Sorry for all the complication! Our build system is the second service we built and is clearly showing its age.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:2635,Availability,error,error,2635,"1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This also means all hailtop installs need a hail_version file. I only found two other places that use hailtop. One of them was a completely unused Dockerfile. I deleted that (`Dockerfile.hailtop`). The other was Dockerfile.ci-test, which I updated to copy the hail_version file just like service-base. https://github.com/hail-is/hail/compare/main...danking:add-version-endpoint. Do you want to cherry-pick that change onto your add-version-endpoint branch?. One more change request: can we remove the try-catch? I don't expect any errors in that call and I tend to avoid revealing anything about errors to our users. Aiohttp will log the error and the stack trace if you let it rise all the way. Sorry for all the complication! Our build system is the second service we built and is clearly showing its age.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:1389,Deployability,update,update,1389,"om the `copy_files` build step. Because I wanted `service_base_image` to depend on `copy_files`, I had to move the whole step after `copy_files`. This is a limitation in build.yaml: a step must appear *after* steps on which it depends. I also had to move `check_services` for the same reason: it depends on `service_base_image`. File dependencies in build.yaml work like this:; 1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This also means all hailtop installs need a hail_version file. I only found two other places that use hailtop. One of them was a completely unused Dockerfile. I deleted that (`Dockerfile.hailtop`). The other was Dockerfile.ci-test, which I updated to copy the hail_version file just like service-base. https://github.com/hail-is/hail/compare/main...danking:add-version-endpoint. Do you want to cherry-pick that change onto your a",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:2025,Deployability,install,installs,2025,"1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This also means all hailtop installs need a hail_version file. I only found two other places that use hailtop. One of them was a completely unused Dockerfile. I deleted that (`Dockerfile.hailtop`). The other was Dockerfile.ci-test, which I updated to copy the hail_version file just like service-base. https://github.com/hail-is/hail/compare/main...danking:add-version-endpoint. Do you want to cherry-pick that change onto your add-version-endpoint branch?. One more change request: can we remove the try-catch? I don't expect any errors in that call and I tend to avoid revealing anything about errors to our users. Aiohttp will log the error and the stack trace if you let it rise all the way. Sorry for all the complication! Our build system is the second service we built and is clearly showing its age.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:2237,Deployability,update,updated,2237,"1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This also means all hailtop installs need a hail_version file. I only found two other places that use hailtop. One of them was a completely unused Dockerfile. I deleted that (`Dockerfile.hailtop`). The other was Dockerfile.ci-test, which I updated to copy the hail_version file just like service-base. https://github.com/hail-is/hail/compare/main...danking:add-version-endpoint. Do you want to cherry-pick that change onto your add-version-endpoint branch?. One more change request: can we remove the try-catch? I don't expect any errors in that call and I tend to avoid revealing anything about errors to our users. Aiohttp will log the error and the stack trace if you let it rise all the way. Sorry for all the complication! Our build system is the second service we built and is clearly showing its age.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:499,Integrability,depend,depend,499,"Hey @illusional ! Sorry for the massive latency. OK, so, big apologies are in order, I totally lead you astray by mentioning the makefile. The Makefile *is* the source of hail version truth, but invoking the makefile inside an image build step feels wrong to me. Each step creates a layer which inflates the image sizes. Hail's images are already too big!. I took your commits and added one of my own that snags the version from the `copy_files` build step. Because I wanted `service_base_image` to depend on `copy_files`, I had to move the whole step after `copy_files`. This is a limitation in build.yaml: a step must appear *after* steps on which it depends. I also had to move `check_services` for the same reason: it depends on `service_base_image`. File dependencies in build.yaml work like this:; 1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:653,Integrability,depend,depends,653,"Hey @illusional ! Sorry for the massive latency. OK, so, big apologies are in order, I totally lead you astray by mentioning the makefile. The Makefile *is* the source of hail version truth, but invoking the makefile inside an image build step feels wrong to me. Each step creates a layer which inflates the image sizes. Hail's images are already too big!. I took your commits and added one of my own that snags the version from the `copy_files` build step. Because I wanted `service_base_image` to depend on `copy_files`, I had to move the whole step after `copy_files`. This is a limitation in build.yaml: a step must appear *after* steps on which it depends. I also had to move `check_services` for the same reason: it depends on `service_base_image`. File dependencies in build.yaml work like this:; 1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:722,Integrability,depend,depends,722,"Hey @illusional ! Sorry for the massive latency. OK, so, big apologies are in order, I totally lead you astray by mentioning the makefile. The Makefile *is* the source of hail version truth, but invoking the makefile inside an image build step feels wrong to me. Each step creates a layer which inflates the image sizes. Hail's images are already too big!. I took your commits and added one of my own that snags the version from the `copy_files` build step. Because I wanted `service_base_image` to depend on `copy_files`, I had to move the whole step after `copy_files`. This is a limitation in build.yaml: a step must appear *after* steps on which it depends. I also had to move `check_services` for the same reason: it depends on `service_base_image`. File dependencies in build.yaml work like this:; 1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:760,Integrability,depend,dependencies,760,"Hey @illusional ! Sorry for the massive latency. OK, so, big apologies are in order, I totally lead you astray by mentioning the makefile. The Makefile *is* the source of hail version truth, but invoking the makefile inside an image build step feels wrong to me. Each step creates a layer which inflates the image sizes. Hail's images are already too big!. I took your commits and added one of my own that snags the version from the `copy_files` build step. Because I wanted `service_base_image` to depend on `copy_files`, I had to move the whole step after `copy_files`. This is a limitation in build.yaml: a step must appear *after* steps on which it depends. I also had to move `check_services` for the same reason: it depends on `service_base_image`. File dependencies in build.yaml work like this:; 1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:1100,Integrability,depend,dependsOn,1100,"gies are in order, I totally lead you astray by mentioning the makefile. The Makefile *is* the source of hail version truth, but invoking the makefile inside an image build step feels wrong to me. Each step creates a layer which inflates the image sizes. Hail's images are already too big!. I took your commits and added one of my own that snags the version from the `copy_files` build step. Because I wanted `service_base_image` to depend on `copy_files`, I had to move the whole step after `copy_files`. This is a limitation in build.yaml: a step must appear *after* steps on which it depends. I also had to move `check_services` for the same reason: it depends on `service_base_image`. File dependencies in build.yaml work like this:; 1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This also means all hailtop installs need a hail_version file. I only ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:1292,Integrability,depend,dependsOn,1292,"e an image build step feels wrong to me. Each step creates a layer which inflates the image sizes. Hail's images are already too big!. I took your commits and added one of my own that snags the version from the `copy_files` build step. Because I wanted `service_base_image` to depend on `copy_files`, I had to move the whole step after `copy_files`. This is a limitation in build.yaml: a step must appear *after* steps on which it depends. I also had to move `check_services` for the same reason: it depends on `service_base_image`. File dependencies in build.yaml work like this:; 1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This also means all hailtop installs need a hail_version file. I only found two other places that use hailtop. One of them was a completely unused Dockerfile. I deleted that (`Dockerfile.hailtop`). The other was Dockerfile.ci",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:40,Performance,latency,latency,40,"Hey @illusional ! Sorry for the massive latency. OK, so, big apologies are in order, I totally lead you astray by mentioning the makefile. The Makefile *is* the source of hail version truth, but invoking the makefile inside an image build step feels wrong to me. Each step creates a layer which inflates the image sizes. Hail's images are already too big!. I took your commits and added one of my own that snags the version from the `copy_files` build step. Because I wanted `service_base_image` to depend on `copy_files`, I had to move the whole step after `copy_files`. This is a limitation in build.yaml: a step must appear *after* steps on which it depends. I also had to move `check_services` for the same reason: it depends on `service_base_image`. File dependencies in build.yaml work like this:; 1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:1745,Performance,load,loading,1745," this:; 1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This also means all hailtop installs need a hail_version file. I only found two other places that use hailtop. One of them was a completely unused Dockerfile. I deleted that (`Dockerfile.hailtop`). The other was Dockerfile.ci-test, which I updated to copy the hail_version file just like service-base. https://github.com/hail-is/hail/compare/main...danking:add-version-endpoint. Do you want to cherry-pick that change onto your add-version-endpoint branch?. One more change request: can we remove the try-catch? I don't expect any errors in that call and I tend to avoid revealing anything about errors to our users. Aiohttp will log the error and the stack trace if you let it rise all the way. Sorry for all the complication! Our build system is the second service we built and is clearly showing i",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:1821,Performance,load,loaded,1821," this:; 1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This also means all hailtop installs need a hail_version file. I only found two other places that use hailtop. One of them was a completely unused Dockerfile. I deleted that (`Dockerfile.hailtop`). The other was Dockerfile.ci-test, which I updated to copy the hail_version file just like service-base. https://github.com/hail-is/hail/compare/main...danking:add-version-endpoint. Do you want to cherry-pick that change onto your add-version-endpoint branch?. One more change request: can we remove the try-catch? I don't expect any errors in that call and I tend to avoid revealing anything about errors to our users. Aiohttp will log the error and the stack trace if you let it rise all the way. Sorry for all the complication! Our build system is the second service we built and is clearly showing i",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:2562,Safety,avoid,avoid,2562,"1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This also means all hailtop installs need a hail_version file. I only found two other places that use hailtop. One of them was a completely unused Dockerfile. I deleted that (`Dockerfile.hailtop`). The other was Dockerfile.ci-test, which I updated to copy the hail_version file just like service-base. https://github.com/hail-is/hail/compare/main...danking:add-version-endpoint. Do you want to cherry-pick that change onto your add-version-endpoint branch?. One more change request: can we remove the try-catch? I don't expect any errors in that call and I tend to avoid revealing anything about errors to our users. Aiohttp will log the error and the stack trace if you let it rise all the way. Sorry for all the complication! Our build system is the second service we built and is clearly showing its age.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:1086,Security,access,access,1086,"gies are in order, I totally lead you astray by mentioning the makefile. The Makefile *is* the source of hail version truth, but invoking the makefile inside an image build step feels wrong to me. Each step creates a layer which inflates the image sizes. Hail's images are already too big!. I took your commits and added one of my own that snags the version from the `copy_files` build step. Because I wanted `service_base_image` to depend on `copy_files`, I had to move the whole step after `copy_files`. This is a limitation in build.yaml: a step must appear *after* steps on which it depends. I also had to move `check_services` for the same reason: it depends on `service_base_image`. File dependencies in build.yaml work like this:; 1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This also means all hailtop installs need a hail_version file. I only ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:2223,Testability,test,test,2223,"1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This also means all hailtop installs need a hail_version file. I only found two other places that use hailtop. One of them was a completely unused Dockerfile. I deleted that (`Dockerfile.hailtop`). The other was Dockerfile.ci-test, which I updated to copy the hail_version file just like service-base. https://github.com/hail-is/hail/compare/main...danking:add-version-endpoint. Do you want to cherry-pick that change onto your add-version-endpoint branch?. One more change request: can we remove the try-catch? I don't expect any errors in that call and I tend to avoid revealing anything about errors to our users. Aiohttp will log the error and the stack trace if you let it rise all the way. Sorry for all the complication! Our build system is the second service we built and is clearly showing its age.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:2627,Testability,log,log,2627,"1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This also means all hailtop installs need a hail_version file. I only found two other places that use hailtop. One of them was a completely unused Dockerfile. I deleted that (`Dockerfile.hailtop`). The other was Dockerfile.ci-test, which I updated to copy the hail_version file just like service-base. https://github.com/hail-is/hail/compare/main...danking:add-version-endpoint. Do you want to cherry-pick that change onto your add-version-endpoint branch?. One more change request: can we remove the try-catch? I don't expect any errors in that call and I tend to avoid revealing anything about errors to our users. Aiohttp will log the error and the stack trace if you let it rise all the way. Sorry for all the complication! Our build system is the second service we built and is clearly showing its age.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:1900,Usability,learn,learn,1900,"1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This also means all hailtop installs need a hail_version file. I only found two other places that use hailtop. One of them was a completely unused Dockerfile. I deleted that (`Dockerfile.hailtop`). The other was Dockerfile.ci-test, which I updated to copy the hail_version file just like service-base. https://github.com/hail-is/hail/compare/main...danking:add-version-endpoint. Do you want to cherry-pick that change onto your add-version-endpoint branch?. One more change request: can we remove the try-catch? I don't expect any errors in that call and I tend to avoid revealing anything about errors to our users. Aiohttp will log the error and the stack trace if you let it rise all the way. Sorry for all the complication! Our build system is the second service we built and is clearly showing its age.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:2780,Usability,clear,clearly,2780,"1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This also means all hailtop installs need a hail_version file. I only found two other places that use hailtop. One of them was a completely unused Dockerfile. I deleted that (`Dockerfile.hailtop`). The other was Dockerfile.ci-test, which I updated to copy the hail_version file just like service-base. https://github.com/hail-is/hail/compare/main...danking:add-version-endpoint. Do you want to cherry-pick that change onto your add-version-endpoint branch?. One more change request: can we remove the try-catch? I don't expect any errors in that call and I tend to avoid revealing anything about errors to our users. Aiohttp will log the error and the stack trace if you let it rise all the way. Sorry for all the complication! Our build system is the second service we built and is clearly showing its age.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401
https://github.com/hail-is/hail/pull/10085#issuecomment-791067814:184,Availability,error,error,184,"Hi @danking, sorry this took me a little to test. I think there's a problem with the latest changes, in my dev-deploy, it failed on the '`create_certs` and `create_accounts`, with the error:. ```; FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/lib/python3.7/dist-packages/hailtop/hail_version'; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-791067814
https://github.com/hail-is/hail/pull/10085#issuecomment-791067814:111,Deployability,deploy,deploy,111,"Hi @danking, sorry this took me a little to test. I think there's a problem with the latest changes, in my dev-deploy, it failed on the '`create_certs` and `create_accounts`, with the error:. ```; FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/lib/python3.7/dist-packages/hailtop/hail_version'; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-791067814
https://github.com/hail-is/hail/pull/10085#issuecomment-791067814:44,Testability,test,test,44,"Hi @danking, sorry this took me a little to test. I think there's a problem with the latest changes, in my dev-deploy, it failed on the '`create_certs` and `create_accounts`, with the error:. ```; FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/lib/python3.7/dist-packages/hailtop/hail_version'; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-791067814
https://github.com/hail-is/hail/pull/10085#issuecomment-793064791:277,Deployability,deploy,deploy,277,"Hmmmm. OK, I think we're getting tripped up by MANIFEST.in and/or setup.py. This bit in setup.py:. ```; package_data={; 'hail': ['hail_pip_version',; 'hail_version',; 'experimental/datasets.json'],; 'hail.backend': ['hail-all-spark.jar'],; 'hailtop.hailctl': ['hail_version', 'deploy.yaml']},; ```. Should be; ```; package_data={; 'hail': ['hail_pip_version',; 'hail_version',; 'experimental/datasets.json'],; 'hail.backend': ['hail-all-spark.jar'],; 'hailtop': ['hail_version'],; 'hailtop.hailctl': ['deploy.yaml']},; ```. A similar change needs to be made to `setup-hailtop.py`. And let's add a MANIFEST.in file in the same directory with this contents:; ```; include hail/hail_pip_version; include hail/hail_version; include hail/experimental/datasets.json; include hail/backend/hail-all-spark.jar; include hailtop/hail_version; include hailtop/hailctl/deploy.yaml; ```. And you'll need to copy that into Dockerfile.service-base:; ```; COPY hail/python/MANIFEST.in /hailtop/MANIFEST.in; ```. My bad on all this, I didn't fully check the Dockerfiles!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-793064791
https://github.com/hail-is/hail/pull/10085#issuecomment-793064791:502,Deployability,deploy,deploy,502,"Hmmmm. OK, I think we're getting tripped up by MANIFEST.in and/or setup.py. This bit in setup.py:. ```; package_data={; 'hail': ['hail_pip_version',; 'hail_version',; 'experimental/datasets.json'],; 'hail.backend': ['hail-all-spark.jar'],; 'hailtop.hailctl': ['hail_version', 'deploy.yaml']},; ```. Should be; ```; package_data={; 'hail': ['hail_pip_version',; 'hail_version',; 'experimental/datasets.json'],; 'hail.backend': ['hail-all-spark.jar'],; 'hailtop': ['hail_version'],; 'hailtop.hailctl': ['deploy.yaml']},; ```. A similar change needs to be made to `setup-hailtop.py`. And let's add a MANIFEST.in file in the same directory with this contents:; ```; include hail/hail_pip_version; include hail/hail_version; include hail/experimental/datasets.json; include hail/backend/hail-all-spark.jar; include hailtop/hail_version; include hailtop/hailctl/deploy.yaml; ```. And you'll need to copy that into Dockerfile.service-base:; ```; COPY hail/python/MANIFEST.in /hailtop/MANIFEST.in; ```. My bad on all this, I didn't fully check the Dockerfiles!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-793064791
https://github.com/hail-is/hail/pull/10085#issuecomment-793064791:856,Deployability,deploy,deploy,856,"Hmmmm. OK, I think we're getting tripped up by MANIFEST.in and/or setup.py. This bit in setup.py:. ```; package_data={; 'hail': ['hail_pip_version',; 'hail_version',; 'experimental/datasets.json'],; 'hail.backend': ['hail-all-spark.jar'],; 'hailtop.hailctl': ['hail_version', 'deploy.yaml']},; ```. Should be; ```; package_data={; 'hail': ['hail_pip_version',; 'hail_version',; 'experimental/datasets.json'],; 'hail.backend': ['hail-all-spark.jar'],; 'hailtop': ['hail_version'],; 'hailtop.hailctl': ['deploy.yaml']},; ```. A similar change needs to be made to `setup-hailtop.py`. And let's add a MANIFEST.in file in the same directory with this contents:; ```; include hail/hail_pip_version; include hail/hail_version; include hail/experimental/datasets.json; include hail/backend/hail-all-spark.jar; include hailtop/hail_version; include hailtop/hailctl/deploy.yaml; ```. And you'll need to copy that into Dockerfile.service-base:; ```; COPY hail/python/MANIFEST.in /hailtop/MANIFEST.in; ```. My bad on all this, I didn't fully check the Dockerfiles!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-793064791
https://github.com/hail-is/hail/pull/10085#issuecomment-797251759:71,Deployability,install,installed,71,"Hi @danking, this should be working now! I realises that hailtop isn't installed through `setup.py`, but `setup-hailtop.py`. The setup also requires `include_package_data=True`, so I've added that into both. I've added one more line into the `Dockerfile.service-base` to check whether the version was actually installed correctly, as other services use this, and better to fail early. This is working on my local dev-deploy (that uses CPG infrastructure though). Later edit: this file is re-installing hailtop and breaking this PR: https://github.com/hail-is/hail/blob/main/docker/Dockerfile.service-java-run-base",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-797251759
https://github.com/hail-is/hail/pull/10085#issuecomment-797251759:310,Deployability,install,installed,310,"Hi @danking, this should be working now! I realises that hailtop isn't installed through `setup.py`, but `setup-hailtop.py`. The setup also requires `include_package_data=True`, so I've added that into both. I've added one more line into the `Dockerfile.service-base` to check whether the version was actually installed correctly, as other services use this, and better to fail early. This is working on my local dev-deploy (that uses CPG infrastructure though). Later edit: this file is re-installing hailtop and breaking this PR: https://github.com/hail-is/hail/blob/main/docker/Dockerfile.service-java-run-base",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-797251759
https://github.com/hail-is/hail/pull/10085#issuecomment-797251759:417,Deployability,deploy,deploy,417,"Hi @danking, this should be working now! I realises that hailtop isn't installed through `setup.py`, but `setup-hailtop.py`. The setup also requires `include_package_data=True`, so I've added that into both. I've added one more line into the `Dockerfile.service-base` to check whether the version was actually installed correctly, as other services use this, and better to fail early. This is working on my local dev-deploy (that uses CPG infrastructure though). Later edit: this file is re-installing hailtop and breaking this PR: https://github.com/hail-is/hail/blob/main/docker/Dockerfile.service-java-run-base",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-797251759
https://github.com/hail-is/hail/pull/10085#issuecomment-797251759:491,Deployability,install,installing,491,"Hi @danking, this should be working now! I realises that hailtop isn't installed through `setup.py`, but `setup-hailtop.py`. The setup also requires `include_package_data=True`, so I've added that into both. I've added one more line into the `Dockerfile.service-base` to check whether the version was actually installed correctly, as other services use this, and better to fail early. This is working on my local dev-deploy (that uses CPG infrastructure though). Later edit: this file is re-installing hailtop and breaking this PR: https://github.com/hail-is/hail/blob/main/docker/Dockerfile.service-java-run-base",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-797251759
https://github.com/hail-is/hail/pull/10085#issuecomment-804418107:214,Deployability,a/b,a/build,214,"I think we need this fix:; ```; commit 4cb998d1c7cbc9954d66c6e39d7fd48b0e936f51 (HEAD -> add-version-endpoint); Author: Daniel King <dking@broadinstitute.org>; Date: Mon Mar 22 17:47:22 2021 -0400. fix. diff --git a/build.yaml b/build.yaml; index 7a100adec8..256ca99c91 100644; --- a/build.yaml; +++ b/build.yaml; @@ -86,7 +86,7 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; - make -C hail python/hail/hail_version python/hail/hail_pip_version; + make -C hail python-version-info; git rev-parse HEAD > git_version; outputs:; - from: /io/repo/auth/sql; diff --git a/ci/test/resources/build.yaml b/ci/test/resources/build.yaml; index 3b1df5214c..b994d2787c 100644; --- a/ci/test/resources/build.yaml; +++ b/ci/test/resources/build.yaml; @@ -27,10 +27,13 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; + make -C hail python-version-info; timeout: 300; outputs:; - from: /io/repo; to: /; + - from: /io/repo/hail/python/hail/hail_version; + to: /hail_version; dependsOn:; - inline_image; - kind: buildImage; @@ -52,6 +55,10 @@ steps:; publishAs: service-base; dependsOn:; - base_image; + - copy_files; + inputs:; + - from: /hail_version; + to: /hail_version; - kind: buildImage; name: hello_image; dockerFile: ci/test/resources/Dockerfile; ```; EDIT: updated with more changes",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-804418107
https://github.com/hail-is/hail/pull/10085#issuecomment-804418107:282,Deployability,a/b,a/build,282,"I think we need this fix:; ```; commit 4cb998d1c7cbc9954d66c6e39d7fd48b0e936f51 (HEAD -> add-version-endpoint); Author: Daniel King <dking@broadinstitute.org>; Date: Mon Mar 22 17:47:22 2021 -0400. fix. diff --git a/build.yaml b/build.yaml; index 7a100adec8..256ca99c91 100644; --- a/build.yaml; +++ b/build.yaml; @@ -86,7 +86,7 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; - make -C hail python/hail/hail_version python/hail/hail_pip_version; + make -C hail python-version-info; git rev-parse HEAD > git_version; outputs:; - from: /io/repo/auth/sql; diff --git a/ci/test/resources/build.yaml b/ci/test/resources/build.yaml; index 3b1df5214c..b994d2787c 100644; --- a/ci/test/resources/build.yaml; +++ b/ci/test/resources/build.yaml; @@ -27,10 +27,13 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; + make -C hail python-version-info; timeout: 300; outputs:; - from: /io/repo; to: /; + - from: /io/repo/hail/python/hail/hail_version; + to: /hail_version; dependsOn:; - inline_image; - kind: buildImage; @@ -52,6 +55,10 @@ steps:; publishAs: service-base; dependsOn:; - base_image; + - copy_files; + inputs:; + - from: /hail_version; + to: /hail_version; - kind: buildImage; name: hello_image; dockerFile: ci/test/resources/Dockerfile; ```; EDIT: updated with more changes",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-804418107
https://github.com/hail-is/hail/pull/10085#issuecomment-804418107:1273,Deployability,update,updated,1273,"I think we need this fix:; ```; commit 4cb998d1c7cbc9954d66c6e39d7fd48b0e936f51 (HEAD -> add-version-endpoint); Author: Daniel King <dking@broadinstitute.org>; Date: Mon Mar 22 17:47:22 2021 -0400. fix. diff --git a/build.yaml b/build.yaml; index 7a100adec8..256ca99c91 100644; --- a/build.yaml; +++ b/build.yaml; @@ -86,7 +86,7 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; - make -C hail python/hail/hail_version python/hail/hail_pip_version; + make -C hail python-version-info; git rev-parse HEAD > git_version; outputs:; - from: /io/repo/auth/sql; diff --git a/ci/test/resources/build.yaml b/ci/test/resources/build.yaml; index 3b1df5214c..b994d2787c 100644; --- a/ci/test/resources/build.yaml; +++ b/ci/test/resources/build.yaml; @@ -27,10 +27,13 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; + make -C hail python-version-info; timeout: 300; outputs:; - from: /io/repo; to: /; + - from: /io/repo/hail/python/hail/hail_version; + to: /hail_version; dependsOn:; - inline_image; - kind: buildImage; @@ -52,6 +55,10 @@ steps:; publishAs: service-base; dependsOn:; - base_image; + - copy_files; + inputs:; + - from: /hail_version; + to: /hail_version; - kind: buildImage; name: hello_image; dockerFile: ci/test/resources/Dockerfile; ```; EDIT: updated with more changes",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-804418107
https://github.com/hail-is/hail/pull/10085#issuecomment-804418107:982,Integrability,depend,dependsOn,982,"I think we need this fix:; ```; commit 4cb998d1c7cbc9954d66c6e39d7fd48b0e936f51 (HEAD -> add-version-endpoint); Author: Daniel King <dking@broadinstitute.org>; Date: Mon Mar 22 17:47:22 2021 -0400. fix. diff --git a/build.yaml b/build.yaml; index 7a100adec8..256ca99c91 100644; --- a/build.yaml; +++ b/build.yaml; @@ -86,7 +86,7 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; - make -C hail python/hail/hail_version python/hail/hail_pip_version; + make -C hail python-version-info; git rev-parse HEAD > git_version; outputs:; - from: /io/repo/auth/sql; diff --git a/ci/test/resources/build.yaml b/ci/test/resources/build.yaml; index 3b1df5214c..b994d2787c 100644; --- a/ci/test/resources/build.yaml; +++ b/ci/test/resources/build.yaml; @@ -27,10 +27,13 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; + make -C hail python-version-info; timeout: 300; outputs:; - from: /io/repo; to: /; + - from: /io/repo/hail/python/hail/hail_version; + to: /hail_version; dependsOn:; - inline_image; - kind: buildImage; @@ -52,6 +55,10 @@ steps:; publishAs: service-base; dependsOn:; - base_image; + - copy_files; + inputs:; + - from: /hail_version; + to: /hail_version; - kind: buildImage; name: hello_image; dockerFile: ci/test/resources/Dockerfile; ```; EDIT: updated with more changes",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-804418107
https://github.com/hail-is/hail/pull/10085#issuecomment-804418107:1082,Integrability,depend,dependsOn,1082,"I think we need this fix:; ```; commit 4cb998d1c7cbc9954d66c6e39d7fd48b0e936f51 (HEAD -> add-version-endpoint); Author: Daniel King <dking@broadinstitute.org>; Date: Mon Mar 22 17:47:22 2021 -0400. fix. diff --git a/build.yaml b/build.yaml; index 7a100adec8..256ca99c91 100644; --- a/build.yaml; +++ b/build.yaml; @@ -86,7 +86,7 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; - make -C hail python/hail/hail_version python/hail/hail_pip_version; + make -C hail python-version-info; git rev-parse HEAD > git_version; outputs:; - from: /io/repo/auth/sql; diff --git a/ci/test/resources/build.yaml b/ci/test/resources/build.yaml; index 3b1df5214c..b994d2787c 100644; --- a/ci/test/resources/build.yaml; +++ b/ci/test/resources/build.yaml; @@ -27,10 +27,13 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; + make -C hail python-version-info; timeout: 300; outputs:; - from: /io/repo; to: /; + - from: /io/repo/hail/python/hail/hail_version; + to: /hail_version; dependsOn:; - inline_image; - kind: buildImage; @@ -52,6 +55,10 @@ steps:; publishAs: service-base; dependsOn:; - base_image; + - copy_files; + inputs:; + - from: /hail_version; + to: /hail_version; - kind: buildImage; name: hello_image; dockerFile: ci/test/resources/Dockerfile; ```; EDIT: updated with more changes",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-804418107
https://github.com/hail-is/hail/pull/10085#issuecomment-804418107:862,Safety,timeout,timeout,862,"I think we need this fix:; ```; commit 4cb998d1c7cbc9954d66c6e39d7fd48b0e936f51 (HEAD -> add-version-endpoint); Author: Daniel King <dking@broadinstitute.org>; Date: Mon Mar 22 17:47:22 2021 -0400. fix. diff --git a/build.yaml b/build.yaml; index 7a100adec8..256ca99c91 100644; --- a/build.yaml; +++ b/build.yaml; @@ -86,7 +86,7 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; - make -C hail python/hail/hail_version python/hail/hail_pip_version; + make -C hail python-version-info; git rev-parse HEAD > git_version; outputs:; - from: /io/repo/auth/sql; diff --git a/ci/test/resources/build.yaml b/ci/test/resources/build.yaml; index 3b1df5214c..b994d2787c 100644; --- a/ci/test/resources/build.yaml; +++ b/ci/test/resources/build.yaml; @@ -27,10 +27,13 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; + make -C hail python-version-info; timeout: 300; outputs:; - from: /io/repo; to: /; + - from: /io/repo/hail/python/hail/hail_version; + to: /hail_version; dependsOn:; - inline_image; - kind: buildImage; @@ -52,6 +55,10 @@ steps:; publishAs: service-base; dependsOn:; - base_image; + - copy_files; + inputs:; + - from: /hail_version; + to: /hail_version; - kind: buildImage; name: hello_image; dockerFile: ci/test/resources/Dockerfile; ```; EDIT: updated with more changes",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-804418107
https://github.com/hail-is/hail/pull/10085#issuecomment-804418107:582,Testability,test,test,582,"I think we need this fix:; ```; commit 4cb998d1c7cbc9954d66c6e39d7fd48b0e936f51 (HEAD -> add-version-endpoint); Author: Daniel King <dking@broadinstitute.org>; Date: Mon Mar 22 17:47:22 2021 -0400. fix. diff --git a/build.yaml b/build.yaml; index 7a100adec8..256ca99c91 100644; --- a/build.yaml; +++ b/build.yaml; @@ -86,7 +86,7 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; - make -C hail python/hail/hail_version python/hail/hail_pip_version; + make -C hail python-version-info; git rev-parse HEAD > git_version; outputs:; - from: /io/repo/auth/sql; diff --git a/ci/test/resources/build.yaml b/ci/test/resources/build.yaml; index 3b1df5214c..b994d2787c 100644; --- a/ci/test/resources/build.yaml; +++ b/ci/test/resources/build.yaml; @@ -27,10 +27,13 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; + make -C hail python-version-info; timeout: 300; outputs:; - from: /io/repo; to: /; + - from: /io/repo/hail/python/hail/hail_version; + to: /hail_version; dependsOn:; - inline_image; - kind: buildImage; @@ -52,6 +55,10 @@ steps:; publishAs: service-base; dependsOn:; - base_image; + - copy_files; + inputs:; + - from: /hail_version; + to: /hail_version; - kind: buildImage; name: hello_image; dockerFile: ci/test/resources/Dockerfile; ```; EDIT: updated with more changes",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-804418107
https://github.com/hail-is/hail/pull/10085#issuecomment-804418107:613,Testability,test,test,613,"I think we need this fix:; ```; commit 4cb998d1c7cbc9954d66c6e39d7fd48b0e936f51 (HEAD -> add-version-endpoint); Author: Daniel King <dking@broadinstitute.org>; Date: Mon Mar 22 17:47:22 2021 -0400. fix. diff --git a/build.yaml b/build.yaml; index 7a100adec8..256ca99c91 100644; --- a/build.yaml; +++ b/build.yaml; @@ -86,7 +86,7 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; - make -C hail python/hail/hail_version python/hail/hail_pip_version; + make -C hail python-version-info; git rev-parse HEAD > git_version; outputs:; - from: /io/repo/auth/sql; diff --git a/ci/test/resources/build.yaml b/ci/test/resources/build.yaml; index 3b1df5214c..b994d2787c 100644; --- a/ci/test/resources/build.yaml; +++ b/ci/test/resources/build.yaml; @@ -27,10 +27,13 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; + make -C hail python-version-info; timeout: 300; outputs:; - from: /io/repo; to: /; + - from: /io/repo/hail/python/hail/hail_version; + to: /hail_version; dependsOn:; - inline_image; - kind: buildImage; @@ -52,6 +55,10 @@ steps:; publishAs: service-base; dependsOn:; - base_image; + - copy_files; + inputs:; + - from: /hail_version; + to: /hail_version; - kind: buildImage; name: hello_image; dockerFile: ci/test/resources/Dockerfile; ```; EDIT: updated with more changes",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-804418107
https://github.com/hail-is/hail/pull/10085#issuecomment-804418107:686,Testability,test,test,686,"I think we need this fix:; ```; commit 4cb998d1c7cbc9954d66c6e39d7fd48b0e936f51 (HEAD -> add-version-endpoint); Author: Daniel King <dking@broadinstitute.org>; Date: Mon Mar 22 17:47:22 2021 -0400. fix. diff --git a/build.yaml b/build.yaml; index 7a100adec8..256ca99c91 100644; --- a/build.yaml; +++ b/build.yaml; @@ -86,7 +86,7 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; - make -C hail python/hail/hail_version python/hail/hail_pip_version; + make -C hail python-version-info; git rev-parse HEAD > git_version; outputs:; - from: /io/repo/auth/sql; diff --git a/ci/test/resources/build.yaml b/ci/test/resources/build.yaml; index 3b1df5214c..b994d2787c 100644; --- a/ci/test/resources/build.yaml; +++ b/ci/test/resources/build.yaml; @@ -27,10 +27,13 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; + make -C hail python-version-info; timeout: 300; outputs:; - from: /io/repo; to: /; + - from: /io/repo/hail/python/hail/hail_version; + to: /hail_version; dependsOn:; - inline_image; - kind: buildImage; @@ -52,6 +55,10 @@ steps:; publishAs: service-base; dependsOn:; - base_image; + - copy_files; + inputs:; + - from: /hail_version; + to: /hail_version; - kind: buildImage; name: hello_image; dockerFile: ci/test/resources/Dockerfile; ```; EDIT: updated with more changes",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-804418107
https://github.com/hail-is/hail/pull/10085#issuecomment-804418107:722,Testability,test,test,722,"I think we need this fix:; ```; commit 4cb998d1c7cbc9954d66c6e39d7fd48b0e936f51 (HEAD -> add-version-endpoint); Author: Daniel King <dking@broadinstitute.org>; Date: Mon Mar 22 17:47:22 2021 -0400. fix. diff --git a/build.yaml b/build.yaml; index 7a100adec8..256ca99c91 100644; --- a/build.yaml; +++ b/build.yaml; @@ -86,7 +86,7 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; - make -C hail python/hail/hail_version python/hail/hail_pip_version; + make -C hail python-version-info; git rev-parse HEAD > git_version; outputs:; - from: /io/repo/auth/sql; diff --git a/ci/test/resources/build.yaml b/ci/test/resources/build.yaml; index 3b1df5214c..b994d2787c 100644; --- a/ci/test/resources/build.yaml; +++ b/ci/test/resources/build.yaml; @@ -27,10 +27,13 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; + make -C hail python-version-info; timeout: 300; outputs:; - from: /io/repo; to: /; + - from: /io/repo/hail/python/hail/hail_version; + to: /hail_version; dependsOn:; - inline_image; - kind: buildImage; @@ -52,6 +55,10 @@ steps:; publishAs: service-base; dependsOn:; - base_image; + - copy_files; + inputs:; + - from: /hail_version; + to: /hail_version; - kind: buildImage; name: hello_image; dockerFile: ci/test/resources/Dockerfile; ```; EDIT: updated with more changes",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-804418107
https://github.com/hail-is/hail/pull/10085#issuecomment-804418107:1235,Testability,test,test,1235,"I think we need this fix:; ```; commit 4cb998d1c7cbc9954d66c6e39d7fd48b0e936f51 (HEAD -> add-version-endpoint); Author: Daniel King <dking@broadinstitute.org>; Date: Mon Mar 22 17:47:22 2021 -0400. fix. diff --git a/build.yaml b/build.yaml; index 7a100adec8..256ca99c91 100644; --- a/build.yaml; +++ b/build.yaml; @@ -86,7 +86,7 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; - make -C hail python/hail/hail_version python/hail/hail_pip_version; + make -C hail python-version-info; git rev-parse HEAD > git_version; outputs:; - from: /io/repo/auth/sql; diff --git a/ci/test/resources/build.yaml b/ci/test/resources/build.yaml; index 3b1df5214c..b994d2787c 100644; --- a/ci/test/resources/build.yaml; +++ b/ci/test/resources/build.yaml; @@ -27,10 +27,13 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; + make -C hail python-version-info; timeout: 300; outputs:; - from: /io/repo; to: /; + - from: /io/repo/hail/python/hail/hail_version; + to: /hail_version; dependsOn:; - inline_image; - kind: buildImage; @@ -52,6 +55,10 @@ steps:; publishAs: service-base; dependsOn:; - base_image; + - copy_files; + inputs:; + - from: /hail_version; + to: /hail_version; - kind: buildImage; name: hello_image; dockerFile: ci/test/resources/Dockerfile; ```; EDIT: updated with more changes",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-804418107
https://github.com/hail-is/hail/pull/10085#issuecomment-806046631:4,Security,secur,security,4,"The security issues with sharing CI pages is a bit frustrating for external committers like yourself. I've picked up this PR here: https://github.com/hail-is/hail/pull/10220 and I'll get it to tests passing. We'll keep working towards making the CI pages open to the public. Once that PR is done, I'll have you push the commits to this branch and get it merged.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-806046631
https://github.com/hail-is/hail/pull/10085#issuecomment-806046631:193,Testability,test,tests,193,"The security issues with sharing CI pages is a bit frustrating for external committers like yourself. I've picked up this PR here: https://github.com/hail-is/hail/pull/10220 and I'll get it to tests passing. We'll keep working towards making the CI pages open to the public. Once that PR is done, I'll have you push the commits to this branch and get it merged.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-806046631
https://github.com/hail-is/hail/pull/10085#issuecomment-809670037:159,Testability,test,tests,159,"OK, if you merge https://github.com/danking/hail/tree/add-version-endpoint (`add-version-endpoint` in my repo, `github.com/danking/hail`) this should pass the tests and we can get it merged!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-809670037
https://github.com/hail-is/hail/issues/10087#issuecomment-783470432:50,Deployability,patch,patch,50,"yeah, definitely a bug. If you've already got the patch, can you create a pull request?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10087#issuecomment-783470432
https://github.com/hail-is/hail/issues/10087#issuecomment-783486496:58,Deployability,patch,patch,58,"Hi Tpoterba,. That would be a big help. I've attached the patch file I used. [HadoopFS.scala.patch.zip](https://github.com/hail-is/hail/files/6023321/HadoopFS.scala.patch.zip)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10087#issuecomment-783486496
https://github.com/hail-is/hail/issues/10087#issuecomment-783486496:93,Deployability,patch,patch,93,"Hi Tpoterba,. That would be a big help. I've attached the patch file I used. [HadoopFS.scala.patch.zip](https://github.com/hail-is/hail/files/6023321/HadoopFS.scala.patch.zip)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10087#issuecomment-783486496
https://github.com/hail-is/hail/issues/10087#issuecomment-783486496:165,Deployability,patch,patch,165,"Hi Tpoterba,. That would be a big help. I've attached the patch file I used. [HadoopFS.scala.patch.zip](https://github.com/hail-is/hail/files/6023321/HadoopFS.scala.patch.zip)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10087#issuecomment-783486496
https://github.com/hail-is/hail/pull/10090#issuecomment-796953328:46,Testability,test,tests,46,This is passing except for the service python tests,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10090#issuecomment-796953328
https://github.com/hail-is/hail/pull/10091#issuecomment-784737260:782,Usability,clear,clearly,782,"Sorry to drop another big one on you, Chris, but you have the context for this. . The big diff doesn't reflect the size of the conceptual change here. This PR does as follows:; * Breaks up and moves CodeOrdering to its own package under `ir`. ; * Changes all CodeOrdering factories to take STypes instead of PTypes; * Removes some factory methods, like `pType.codeOrdering`.; * There are now two places to construct orderings: `EmitClassBuilder.getOrderingFunction` (which takes stypes and an `Op`), and `CodeOrdering.makeOrdering`.; * I slightly changed the method layout to memoize within each ordering. We check the types on each method call.; * There are only a couple meaningful changes in the typed ordering generators. I changed CallOrdering and StringOrdering a bit to more clearly describe what they're doing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10091#issuecomment-784737260
https://github.com/hail-is/hail/pull/10094#issuecomment-784488352:6,Testability,test,tests,6,Scala tests pass. Gotta unbreak the python tests.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10094#issuecomment-784488352
https://github.com/hail-is/hail/pull/10094#issuecomment-784488352:43,Testability,test,tests,43,Scala tests pass. Gotta unbreak the python tests.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10094#issuecomment-784488352
https://github.com/hail-is/hail/pull/10094#issuecomment-786111977:18,Testability,benchmark,benchmarks,18,nice! can you run benchmarks?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10094#issuecomment-786111977
https://github.com/hail-is/hail/pull/10095#issuecomment-784448517:88,Availability,error,error,88,"Assigned to Patrick, but anyone should feel free to approve, small change to add better error messages on `MakeNDArray`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10095#issuecomment-784448517
https://github.com/hail-is/hail/pull/10095#issuecomment-784448517:94,Integrability,message,messages,94,"Assigned to Patrick, but anyone should feel free to approve, small change to add better error messages on `MakeNDArray`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10095#issuecomment-784448517
https://github.com/hail-is/hail/pull/10106#issuecomment-786920511:60,Deployability,update,updated,60,Sorry to step on your toes here a little bit @illusional! I updated aiohttp to 0.7.4 so you don't have to bump it here.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10106#issuecomment-786920511
https://github.com/hail-is/hail/pull/10106#issuecomment-793959393:15,Availability,ping,ping,15,Thanks for the ping!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10106#issuecomment-793959393
https://github.com/hail-is/hail/pull/10106#issuecomment-801560644:17,Availability,error,error,17,`check-services` error: `on-shutdown` needs a ` # pylint: disable=unused-argument`,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10106#issuecomment-801560644
https://github.com/hail-is/hail/pull/10107#issuecomment-797361165:18,Testability,test,tests,18,Can't see why the tests are failing :( Perhaps the CI app needs to be redeployed manually first.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10107#issuecomment-797361165
https://github.com/hail-is/hail/pull/10107#issuecomment-799714090:166,Deployability,update,update,166,"So the problem is probably that CI is running on master, and it creates the global config in the PR namespace and it won't have docker_root_image. We'll also need to update our production global-config since we're not applying Terraform updates to our cluster. You should be able to do this now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10107#issuecomment-799714090
https://github.com/hail-is/hail/pull/10107#issuecomment-799714090:237,Deployability,update,updates,237,"So the problem is probably that CI is running on master, and it creates the global config in the PR namespace and it won't have docker_root_image. We'll also need to update our production global-config since we're not applying Terraform updates to our cluster. You should be able to do this now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10107#issuecomment-799714090
https://github.com/hail-is/hail/pull/10107#issuecomment-799714090:83,Modifiability,config,config,83,"So the problem is probably that CI is running on master, and it creates the global config in the PR namespace and it won't have docker_root_image. We'll also need to update our production global-config since we're not applying Terraform updates to our cluster. You should be able to do this now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10107#issuecomment-799714090
https://github.com/hail-is/hail/pull/10107#issuecomment-799714090:195,Modifiability,config,config,195,"So the problem is probably that CI is running on master, and it creates the global config in the PR namespace and it won't have docker_root_image. We'll also need to update our production global-config since we're not applying Terraform updates to our cluster. You should be able to do this now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10107#issuecomment-799714090
https://github.com/hail-is/hail/pull/10107#issuecomment-805305318:62,Availability,Ping,Pinging,62,"Right, we had to manually re-deploy CI for our setup as well. Pinging @daniel-goldstein just in case :)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10107#issuecomment-805305318
https://github.com/hail-is/hail/pull/10107#issuecomment-805305318:29,Deployability,deploy,deploy,29,"Right, we had to manually re-deploy CI for our setup as well. Pinging @daniel-goldstein just in case :)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10107#issuecomment-805305318
https://github.com/hail-is/hail/pull/10107#issuecomment-824919037:127,Testability,test,tests,127,"A couple changes I made in my branch daniel-goldstein:artefact-registry-upstream need to be merged into this branch before the tests will pass. Notably [this](https://github.com/hail-is/hail/pull/10347/commits/68d7ba1cdf6ba0b49c9d4a4714217b1eeb8182c3) (I'm going to follow up about putting that in a devbin function). We can also just merge #10347 and close this PR instead, whichever you prefer.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10107#issuecomment-824919037
https://github.com/hail-is/hail/pull/10111#issuecomment-786693540:11,Testability,test,test,11,Is there a test that catches this?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10111#issuecomment-786693540
https://github.com/hail-is/hail/pull/10111#issuecomment-790698282:1221,Availability,Error,ErrorHandling,1221,"I was surprised to see this didn't fail by fixing some fails_local_backend tests. It turns out that we're writing out invalid files with the lowered matrix writer:; ```; def test_indexed_read(self):; mt = hl.utils.range_matrix_table(2000, 100, 10); f = new_temp_file(extension='mt'); mt.write(f); mt2 = hl.read_matrix_table(f, _intervals=[; hl.Interval(start=150, end=250, includes_start=True, includes_end=False),; hl.Interval(start=250, end=500, includes_start=True, includes_end=False),; ]); self.assertEqual(mt2.n_partitions(), 2); self.assertTrue(mt.filter_rows((mt.row_idx >= 150) & (mt.row_idx < 500))._same(mt2)). mt2 = hl.read_matrix_table(f, _intervals=[; hl.Interval(start=150, end=250, includes_start=True, includes_end=False),; hl.Interval(start=250, end=500, includes_start=True, includes_end=False),; ], _filter_intervals=True); self.assertEqual(mt2.n_partitions(), 3); self.assertTrue(mt.filter_rows((mt.row_idx >= 150) & (mt.row_idx < 500))._same(mt2)). E Java stack trace:; E is.hail.utils.HailException: `intervals` specified on an unindexed matrix table.; E This matrix table was written using an older version of hail; E rewrite the matrix in order to create an index to proceed; E 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:11); E 	at is.hail.utils.package$.fatal(package.scala:77); E 	at is.hail.expr.ir.MatrixNativeReader$.apply(MatrixIR.scala:166); E 	at is.hail.expr.ir.MatrixNativeReader$.fromJValue(MatrixIR.scala:184); ...; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10111#issuecomment-790698282
https://github.com/hail-is/hail/pull/10111#issuecomment-790698282:1247,Availability,Error,ErrorHandling,1247,"I was surprised to see this didn't fail by fixing some fails_local_backend tests. It turns out that we're writing out invalid files with the lowered matrix writer:; ```; def test_indexed_read(self):; mt = hl.utils.range_matrix_table(2000, 100, 10); f = new_temp_file(extension='mt'); mt.write(f); mt2 = hl.read_matrix_table(f, _intervals=[; hl.Interval(start=150, end=250, includes_start=True, includes_end=False),; hl.Interval(start=250, end=500, includes_start=True, includes_end=False),; ]); self.assertEqual(mt2.n_partitions(), 2); self.assertTrue(mt.filter_rows((mt.row_idx >= 150) & (mt.row_idx < 500))._same(mt2)). mt2 = hl.read_matrix_table(f, _intervals=[; hl.Interval(start=150, end=250, includes_start=True, includes_end=False),; hl.Interval(start=250, end=500, includes_start=True, includes_end=False),; ], _filter_intervals=True); self.assertEqual(mt2.n_partitions(), 3); self.assertTrue(mt.filter_rows((mt.row_idx >= 150) & (mt.row_idx < 500))._same(mt2)). E Java stack trace:; E is.hail.utils.HailException: `intervals` specified on an unindexed matrix table.; E This matrix table was written using an older version of hail; E rewrite the matrix in order to create an index to proceed; E 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:11); E 	at is.hail.utils.package$.fatal(package.scala:77); E 	at is.hail.expr.ir.MatrixNativeReader$.apply(MatrixIR.scala:166); E 	at is.hail.expr.ir.MatrixNativeReader$.fromJValue(MatrixIR.scala:184); ...; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10111#issuecomment-790698282
https://github.com/hail-is/hail/pull/10111#issuecomment-790698282:1142,Modifiability,rewrite,rewrite,1142,"I was surprised to see this didn't fail by fixing some fails_local_backend tests. It turns out that we're writing out invalid files with the lowered matrix writer:; ```; def test_indexed_read(self):; mt = hl.utils.range_matrix_table(2000, 100, 10); f = new_temp_file(extension='mt'); mt.write(f); mt2 = hl.read_matrix_table(f, _intervals=[; hl.Interval(start=150, end=250, includes_start=True, includes_end=False),; hl.Interval(start=250, end=500, includes_start=True, includes_end=False),; ]); self.assertEqual(mt2.n_partitions(), 2); self.assertTrue(mt.filter_rows((mt.row_idx >= 150) & (mt.row_idx < 500))._same(mt2)). mt2 = hl.read_matrix_table(f, _intervals=[; hl.Interval(start=150, end=250, includes_start=True, includes_end=False),; hl.Interval(start=250, end=500, includes_start=True, includes_end=False),; ], _filter_intervals=True); self.assertEqual(mt2.n_partitions(), 3); self.assertTrue(mt.filter_rows((mt.row_idx >= 150) & (mt.row_idx < 500))._same(mt2)). E Java stack trace:; E is.hail.utils.HailException: `intervals` specified on an unindexed matrix table.; E This matrix table was written using an older version of hail; E rewrite the matrix in order to create an index to proceed; E 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:11); E 	at is.hail.utils.package$.fatal(package.scala:77); E 	at is.hail.expr.ir.MatrixNativeReader$.apply(MatrixIR.scala:166); E 	at is.hail.expr.ir.MatrixNativeReader$.fromJValue(MatrixIR.scala:184); ...; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10111#issuecomment-790698282
https://github.com/hail-is/hail/pull/10111#issuecomment-790698282:75,Testability,test,tests,75,"I was surprised to see this didn't fail by fixing some fails_local_backend tests. It turns out that we're writing out invalid files with the lowered matrix writer:; ```; def test_indexed_read(self):; mt = hl.utils.range_matrix_table(2000, 100, 10); f = new_temp_file(extension='mt'); mt.write(f); mt2 = hl.read_matrix_table(f, _intervals=[; hl.Interval(start=150, end=250, includes_start=True, includes_end=False),; hl.Interval(start=250, end=500, includes_start=True, includes_end=False),; ]); self.assertEqual(mt2.n_partitions(), 2); self.assertTrue(mt.filter_rows((mt.row_idx >= 150) & (mt.row_idx < 500))._same(mt2)). mt2 = hl.read_matrix_table(f, _intervals=[; hl.Interval(start=150, end=250, includes_start=True, includes_end=False),; hl.Interval(start=250, end=500, includes_start=True, includes_end=False),; ], _filter_intervals=True); self.assertEqual(mt2.n_partitions(), 3); self.assertTrue(mt.filter_rows((mt.row_idx >= 150) & (mt.row_idx < 500))._same(mt2)). E Java stack trace:; E is.hail.utils.HailException: `intervals` specified on an unindexed matrix table.; E This matrix table was written using an older version of hail; E rewrite the matrix in order to create an index to proceed; E 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:11); E 	at is.hail.utils.package$.fatal(package.scala:77); E 	at is.hail.expr.ir.MatrixNativeReader$.apply(MatrixIR.scala:166); E 	at is.hail.expr.ir.MatrixNativeReader$.fromJValue(MatrixIR.scala:184); ...; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10111#issuecomment-790698282
https://github.com/hail-is/hail/pull/10111#issuecomment-790698282:500,Testability,assert,assertEqual,500,"I was surprised to see this didn't fail by fixing some fails_local_backend tests. It turns out that we're writing out invalid files with the lowered matrix writer:; ```; def test_indexed_read(self):; mt = hl.utils.range_matrix_table(2000, 100, 10); f = new_temp_file(extension='mt'); mt.write(f); mt2 = hl.read_matrix_table(f, _intervals=[; hl.Interval(start=150, end=250, includes_start=True, includes_end=False),; hl.Interval(start=250, end=500, includes_start=True, includes_end=False),; ]); self.assertEqual(mt2.n_partitions(), 2); self.assertTrue(mt.filter_rows((mt.row_idx >= 150) & (mt.row_idx < 500))._same(mt2)). mt2 = hl.read_matrix_table(f, _intervals=[; hl.Interval(start=150, end=250, includes_start=True, includes_end=False),; hl.Interval(start=250, end=500, includes_start=True, includes_end=False),; ], _filter_intervals=True); self.assertEqual(mt2.n_partitions(), 3); self.assertTrue(mt.filter_rows((mt.row_idx >= 150) & (mt.row_idx < 500))._same(mt2)). E Java stack trace:; E is.hail.utils.HailException: `intervals` specified on an unindexed matrix table.; E This matrix table was written using an older version of hail; E rewrite the matrix in order to create an index to proceed; E 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:11); E 	at is.hail.utils.package$.fatal(package.scala:77); E 	at is.hail.expr.ir.MatrixNativeReader$.apply(MatrixIR.scala:166); E 	at is.hail.expr.ir.MatrixNativeReader$.fromJValue(MatrixIR.scala:184); ...; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10111#issuecomment-790698282
https://github.com/hail-is/hail/pull/10111#issuecomment-790698282:541,Testability,assert,assertTrue,541,"I was surprised to see this didn't fail by fixing some fails_local_backend tests. It turns out that we're writing out invalid files with the lowered matrix writer:; ```; def test_indexed_read(self):; mt = hl.utils.range_matrix_table(2000, 100, 10); f = new_temp_file(extension='mt'); mt.write(f); mt2 = hl.read_matrix_table(f, _intervals=[; hl.Interval(start=150, end=250, includes_start=True, includes_end=False),; hl.Interval(start=250, end=500, includes_start=True, includes_end=False),; ]); self.assertEqual(mt2.n_partitions(), 2); self.assertTrue(mt.filter_rows((mt.row_idx >= 150) & (mt.row_idx < 500))._same(mt2)). mt2 = hl.read_matrix_table(f, _intervals=[; hl.Interval(start=150, end=250, includes_start=True, includes_end=False),; hl.Interval(start=250, end=500, includes_start=True, includes_end=False),; ], _filter_intervals=True); self.assertEqual(mt2.n_partitions(), 3); self.assertTrue(mt.filter_rows((mt.row_idx >= 150) & (mt.row_idx < 500))._same(mt2)). E Java stack trace:; E is.hail.utils.HailException: `intervals` specified on an unindexed matrix table.; E This matrix table was written using an older version of hail; E rewrite the matrix in order to create an index to proceed; E 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:11); E 	at is.hail.utils.package$.fatal(package.scala:77); E 	at is.hail.expr.ir.MatrixNativeReader$.apply(MatrixIR.scala:166); E 	at is.hail.expr.ir.MatrixNativeReader$.fromJValue(MatrixIR.scala:184); ...; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10111#issuecomment-790698282
https://github.com/hail-is/hail/pull/10111#issuecomment-790698282:849,Testability,assert,assertEqual,849,"I was surprised to see this didn't fail by fixing some fails_local_backend tests. It turns out that we're writing out invalid files with the lowered matrix writer:; ```; def test_indexed_read(self):; mt = hl.utils.range_matrix_table(2000, 100, 10); f = new_temp_file(extension='mt'); mt.write(f); mt2 = hl.read_matrix_table(f, _intervals=[; hl.Interval(start=150, end=250, includes_start=True, includes_end=False),; hl.Interval(start=250, end=500, includes_start=True, includes_end=False),; ]); self.assertEqual(mt2.n_partitions(), 2); self.assertTrue(mt.filter_rows((mt.row_idx >= 150) & (mt.row_idx < 500))._same(mt2)). mt2 = hl.read_matrix_table(f, _intervals=[; hl.Interval(start=150, end=250, includes_start=True, includes_end=False),; hl.Interval(start=250, end=500, includes_start=True, includes_end=False),; ], _filter_intervals=True); self.assertEqual(mt2.n_partitions(), 3); self.assertTrue(mt.filter_rows((mt.row_idx >= 150) & (mt.row_idx < 500))._same(mt2)). E Java stack trace:; E is.hail.utils.HailException: `intervals` specified on an unindexed matrix table.; E This matrix table was written using an older version of hail; E rewrite the matrix in order to create an index to proceed; E 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:11); E 	at is.hail.utils.package$.fatal(package.scala:77); E 	at is.hail.expr.ir.MatrixNativeReader$.apply(MatrixIR.scala:166); E 	at is.hail.expr.ir.MatrixNativeReader$.fromJValue(MatrixIR.scala:184); ...; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10111#issuecomment-790698282
https://github.com/hail-is/hail/pull/10111#issuecomment-790698282:890,Testability,assert,assertTrue,890,"I was surprised to see this didn't fail by fixing some fails_local_backend tests. It turns out that we're writing out invalid files with the lowered matrix writer:; ```; def test_indexed_read(self):; mt = hl.utils.range_matrix_table(2000, 100, 10); f = new_temp_file(extension='mt'); mt.write(f); mt2 = hl.read_matrix_table(f, _intervals=[; hl.Interval(start=150, end=250, includes_start=True, includes_end=False),; hl.Interval(start=250, end=500, includes_start=True, includes_end=False),; ]); self.assertEqual(mt2.n_partitions(), 2); self.assertTrue(mt.filter_rows((mt.row_idx >= 150) & (mt.row_idx < 500))._same(mt2)). mt2 = hl.read_matrix_table(f, _intervals=[; hl.Interval(start=150, end=250, includes_start=True, includes_end=False),; hl.Interval(start=250, end=500, includes_start=True, includes_end=False),; ], _filter_intervals=True); self.assertEqual(mt2.n_partitions(), 3); self.assertTrue(mt.filter_rows((mt.row_idx >= 150) & (mt.row_idx < 500))._same(mt2)). E Java stack trace:; E is.hail.utils.HailException: `intervals` specified on an unindexed matrix table.; E This matrix table was written using an older version of hail; E rewrite the matrix in order to create an index to proceed; E 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:11); E 	at is.hail.utils.package$.fatal(package.scala:77); E 	at is.hail.expr.ir.MatrixNativeReader$.apply(MatrixIR.scala:166); E 	at is.hail.expr.ir.MatrixNativeReader$.fromJValue(MatrixIR.scala:184); ...; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10111#issuecomment-790698282
https://github.com/hail-is/hail/pull/10111#issuecomment-790701123:58,Testability,test,testing,58,"I think we should just merge this, so we can do more read testing until the writes are fixed.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10111#issuecomment-790701123
https://github.com/hail-is/hail/pull/10114#issuecomment-786693004:9,Availability,Error,Erroring,9,@danking Erroring in CI,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10114#issuecomment-786693004
https://github.com/hail-is/hail/pull/10115#issuecomment-786797234:211,Availability,error,errors,211,"This is a little broken and might require some care. I'll look into it and potentially just submit my own PR, but I do want to bump the version if possible because it might help with some of our session cleanup errors.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10115#issuecomment-786797234
https://github.com/hail-is/hail/pull/10115#issuecomment-786824947:7,Integrability,depend,dependabot,7,"Thanks dependabot, but we got this #10120",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10115#issuecomment-786824947
https://github.com/hail-is/hail/pull/10115#issuecomment-786826734:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10115#issuecomment-786826734
https://github.com/hail-is/hail/pull/10115#issuecomment-786826734:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10115#issuecomment-786826734
https://github.com/hail-is/hail/pull/10115#issuecomment-786826734:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10115#issuecomment-786826734
https://github.com/hail-is/hail/pull/10115#issuecomment-786826734:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10115#issuecomment-786826734
https://github.com/hail-is/hail/pull/10115#issuecomment-786826734:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10115#issuecomment-786826734
https://github.com/hail-is/hail/pull/10119#issuecomment-786779371:43,Testability,test,tests,43,"I probably missed some, let's see what the tests find.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10119#issuecomment-786779371
https://github.com/hail-is/hail/pull/10119#issuecomment-786807963:60,Usability,clear,clear,60,Could we just change the Python to generate `ArrayRef`? Not clear to me why we use `indexArray` instead.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10119#issuecomment-786807963
https://github.com/hail-is/hail/pull/10119#issuecomment-786836520:27,Availability,error,error,27,I think what we want is an error code on apply nodes! There are lots of functions that can throw errors.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10119#issuecomment-786836520
https://github.com/hail-is/hail/pull/10119#issuecomment-786836520:97,Availability,error,errors,97,I think what we want is an error code on apply nodes! There are lots of functions that can throw errors.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10119#issuecomment-786836520
https://github.com/hail-is/hail/pull/10131#issuecomment-790044318:42,Deployability,deploy,deploy,42,This is going to be really challenging to deploy! Can you bump the instance version? The issue is the new CI build will probably get run on old batch workers that have the old copying mechanism.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10131#issuecomment-790044318
https://github.com/hail-is/hail/pull/10131#issuecomment-790877506:70,Deployability,update,updated,70,"I think it will actually just work out of the box. In particular, the updated file paths that specify the full destination also work with gsutil. The build.yaml changes are being run by the production batch, so we already know those are working with gsutil. I'm running some benchmarks vs gsutil now and will have numbers in a while. If that all looks good, I vote to merge this.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10131#issuecomment-790877506
https://github.com/hail-is/hail/pull/10131#issuecomment-790877506:275,Testability,benchmark,benchmarks,275,"I think it will actually just work out of the box. In particular, the updated file paths that specify the full destination also work with gsutil. The build.yaml changes are being run by the production batch, so we already know those are working with gsutil. I'm running some benchmarks vs gsutil now and will have numbers in a while. If that all looks good, I vote to merge this.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10131#issuecomment-790877506
https://github.com/hail-is/hail/pull/10132#issuecomment-788973494:41,Availability,error,error,41,"Maybe more damning is the scaling of the error with n:; ```; In [35]: t = hl.utils.range_table(10**4). In [36]: t = t.annotate(x = 10**7 + hl.rand_norm()). In [37]: t.aggregate(hl.agg.stats(t.x)); Out[37]: Struct(mean=10000000.012717757, stdev=1.043072384832424, min=9999996.160907382, max=10000003.396893706, n=10000, sum=100000000127.17758). In [38]: t = hl.utils.range_table(10**5). In [39]: t = t.annotate(x = 10**7 + hl.rand_norm()). In [40]: t.aggregate(hl.agg.stats(t.x)); Out[40]: Struct(mean=10000000.000944939, stdev=1.0017584539199058, min=9999994.870601522, max=10000004.903980266, n=100000, sum=1000000000094.4939). In [41]: t = hl.utils.range_table(10**6). In [42]: t = t.annotate(x = 10**7 + hl.rand_norm()). In [43]: t.aggregate(hl.agg.stats(t.x)); Out[43]: Struct(mean=10000000.000245763, stdev=0.9050966799187808, min=9999995.23730167, max=10000004.54308704, n=1000000, sum=10000000000245.764). In [44]: t = hl.utils.range_table(10**7). In [45]: t = t.annotate(x = 10**7 + hl.rand_norm()). In [46]: t.aggregate(hl.agg.stats(t.x)); Out[46]: Struct(mean=9999999.999657989, stdev=nan, min=9999994.645387085, max=10000005.969974454, n=10000000, sum=99999999996579.89). In [47]: t = hl.utils.range_table(10**7). In [48]: t = t.annotate(x = 10**7 + hl.rand_norm()). In [49]: t.aggregate(hl.agg.stats(t.x)); Out[49]: Struct(mean=9999999.999756364, stdev=1.5274428303540528, min=9999995.005864669, max=10000005.419492438, n=10000000, sum=99999999997563.64); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10132#issuecomment-788973494
https://github.com/hail-is/hail/pull/10150#issuecomment-791836974:22,Testability,test,tests,22,I will follow up with tests to make sure I test this case.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10150#issuecomment-791836974
https://github.com/hail-is/hail/pull/10150#issuecomment-791836974:43,Testability,test,test,43,I will follow up with tests to make sure I test this case.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10150#issuecomment-791836974
https://github.com/hail-is/hail/pull/10153#issuecomment-792776867:8,Availability,failure,failure,8,Example failure: https://ci.hail.is/batches/202357/jobs/104,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10153#issuecomment-792776867
https://github.com/hail-is/hail/pull/10169#issuecomment-795555847:128,Deployability,update,updated,128,I think the gnomAD group would probably prefer Hail point to the `gcp-public-data--gnomad` version of this dataset once that is updated. @gtiao,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10169#issuecomment-795555847
https://github.com/hail-is/hail/pull/10169#issuecomment-797031640:111,Availability,ping,pinging,111,"Yep, just waiting on final (unrelated) fixes to go through on the v3.1.1; nuclear variant release files before pinging them about copying over all; our changed files. On Wed, Mar 10, 2021 at 3:29 PM Dan King ***@***.***> wrote:. > I'll wait for Grace to chime in about the desired public location.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/hail-is/hail/pull/10169#issuecomment-796049879>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNSGHRVFLHDPK26N3MKTXLTC7CBTANCNFSM4Y42HNKA>; > .; >",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10169#issuecomment-797031640
https://github.com/hail-is/hail/pull/10169#issuecomment-797031640:90,Deployability,release,release,90,"Yep, just waiting on final (unrelated) fixes to go through on the v3.1.1; nuclear variant release files before pinging them about copying over all; our changed files. On Wed, Mar 10, 2021 at 3:29 PM Dan King ***@***.***> wrote:. > I'll wait for Grace to chime in about the desired public location.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/hail-is/hail/pull/10169#issuecomment-796049879>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNSGHRVFLHDPK26N3MKTXLTC7CBTANCNFSM4Y42HNKA>; > .; >",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10169#issuecomment-797031640
https://github.com/hail-is/hail/pull/10169#issuecomment-811255128:70,Deployability,update,updated,70,@gtiao I think the `gcp-public-data--gnomad` bucket still hasn't been updated. Do you have a tentative date for the update?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10169#issuecomment-811255128
https://github.com/hail-is/hail/pull/10169#issuecomment-811255128:116,Deployability,update,update,116,@gtiao I think the `gcp-public-data--gnomad` bucket still hasn't been updated. Do you have a tentative date for the update?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10169#issuecomment-811255128
https://github.com/hail-is/hail/pull/10169#issuecomment-820648738:134,Deployability,update,updated,134,It looks like `gs://gcp-public-data--gnomad/papers/2019-tx-annotation/pre_computed/all.possible.snvs.tx_annotated.021520.ht` has been updated now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10169#issuecomment-820648738
https://github.com/hail-is/hail/pull/10169#issuecomment-820650510:64,Deployability,update,update,64,"Awesome, thanks for the close attention, @nawatts ! @pwc2 let's update the path and get this merged!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10169#issuecomment-820650510
https://github.com/hail-is/hail/pull/10169#issuecomment-820680874:5,Deployability,update,updated,5,"Just updated the path, should be good now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10169#issuecomment-820680874
https://github.com/hail-is/hail/issues/10170#issuecomment-827847152:305,Availability,ping,ping,305,"Sorry, didn't see this earlier -- . this is intentional. We do this so that we don't require users to recompile the C libraries when the install the Python library. Our native library distribution story is definitely a work in progress and this will change (hopefully improve) in the future. Feel free to ping us if this answer isn't sufficient!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10170#issuecomment-827847152
https://github.com/hail-is/hail/issues/10170#issuecomment-827847152:137,Deployability,install,install,137,"Sorry, didn't see this earlier -- . this is intentional. We do this so that we don't require users to recompile the C libraries when the install the Python library. Our native library distribution story is definitely a work in progress and this will change (hopefully improve) in the future. Feel free to ping us if this answer isn't sufficient!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10170#issuecomment-827847152
https://github.com/hail-is/hail/pull/10173#issuecomment-796819618:79,Testability,test,tests,79,Force merging because we keep failing in service backend or in those damn copy tests.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10173#issuecomment-796819618
https://github.com/hail-is/hail/pull/10179#issuecomment-796851213:21,Deployability,deploy,deployed,21,"this is, uh, already deployed.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10179#issuecomment-796851213
https://github.com/hail-is/hail/pull/10186#issuecomment-804357789:49,Deployability,release,release,49,"@konradjk ah, I meant does Pan-UKB itself have a release version? I guess we should just call this v1?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10186#issuecomment-804357789
https://github.com/hail-is/hail/pull/10186#issuecomment-804358709:164,Deployability,release,released,164,"I went with version 0.2 based on the entry in the [changelog](https://pan.ukbb.broadinstitute.org/docs/changelog):. ```; Version 0.2. Added LD scores and matrices (released Oct 29, 2020).; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10186#issuecomment-804358709
https://github.com/hail-is/hail/pull/10186#issuecomment-804359604:98,Deployability,release,releases,98,"Ah, perfect. I'm a bit worried that the URLs aren't themselves versioned. Konrad, will subsequent releases use the same URL?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10186#issuecomment-804359604
https://github.com/hail-is/hail/pull/10188#issuecomment-802861885:398,Deployability,update,update-a-secret-on-kubernetes-when-it-is-generated-from-a-file,398,"Hi @vladsaveliev, sorry for the delay on this. I'm going to leave this for when @danking comes back next week because I think there's some nuance around our dev cert expiration that I'm not 100% on. In the meantime, I looked and saw you try to delete then try to create repeatedly. Could you instead use a dry-run then apply trick like [this](https://stackoverflow.com/questions/45879498/how-can-i-update-a-secret-on-kubernetes-when-it-is-generated-from-a-file)? We do this for some other keys in `build.yaml`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10188#issuecomment-802861885
https://github.com/hail-is/hail/pull/10188#issuecomment-804338199:339,Availability,error,errors,339,"Hmm. This means every dev deploy will generate a new root key. I'm worried about the derived keys and trust lists. After this runs, any service which was not dev deployed needs to know to reload the trust list and start using the new key. For example, if you dev deploy batch, then separately dev deploy query, the new query will get cert errors when talking to batch, I think. I will give some thought this week to the right long-term certificate strategy.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10188#issuecomment-804338199
https://github.com/hail-is/hail/pull/10188#issuecomment-804338199:26,Deployability,deploy,deploy,26,"Hmm. This means every dev deploy will generate a new root key. I'm worried about the derived keys and trust lists. After this runs, any service which was not dev deployed needs to know to reload the trust list and start using the new key. For example, if you dev deploy batch, then separately dev deploy query, the new query will get cert errors when talking to batch, I think. I will give some thought this week to the right long-term certificate strategy.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10188#issuecomment-804338199
https://github.com/hail-is/hail/pull/10188#issuecomment-804338199:162,Deployability,deploy,deployed,162,"Hmm. This means every dev deploy will generate a new root key. I'm worried about the derived keys and trust lists. After this runs, any service which was not dev deployed needs to know to reload the trust list and start using the new key. For example, if you dev deploy batch, then separately dev deploy query, the new query will get cert errors when talking to batch, I think. I will give some thought this week to the right long-term certificate strategy.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10188#issuecomment-804338199
https://github.com/hail-is/hail/pull/10188#issuecomment-804338199:263,Deployability,deploy,deploy,263,"Hmm. This means every dev deploy will generate a new root key. I'm worried about the derived keys and trust lists. After this runs, any service which was not dev deployed needs to know to reload the trust list and start using the new key. For example, if you dev deploy batch, then separately dev deploy query, the new query will get cert errors when talking to batch, I think. I will give some thought this week to the right long-term certificate strategy.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10188#issuecomment-804338199
https://github.com/hail-is/hail/pull/10188#issuecomment-804338199:297,Deployability,deploy,deploy,297,"Hmm. This means every dev deploy will generate a new root key. I'm worried about the derived keys and trust lists. After this runs, any service which was not dev deployed needs to know to reload the trust list and start using the new key. For example, if you dev deploy batch, then separately dev deploy query, the new query will get cert errors when talking to batch, I think. I will give some thought this week to the right long-term certificate strategy.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10188#issuecomment-804338199
https://github.com/hail-is/hail/pull/10188#issuecomment-804338199:436,Security,certificate,certificate,436,"Hmm. This means every dev deploy will generate a new root key. I'm worried about the derived keys and trust lists. After this runs, any service which was not dev deployed needs to know to reload the trust list and start using the new key. For example, if you dev deploy batch, then separately dev deploy query, the new query will get cert errors when talking to batch, I think. I will give some thought this week to the right long-term certificate strategy.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10188#issuecomment-804338199
https://github.com/hail-is/hail/pull/10188#issuecomment-1050025851:75,Security,certificate,certificates,75,"I'm going to close this PR because its so old. I've bumped the priority of certificates in my todo list. Sincere apologies @vladsaveliev , just too many things to do these days :|.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10188#issuecomment-1050025851
https://github.com/hail-is/hail/pull/10190#issuecomment-799425185:38,Deployability,deploy,deploy,38,Is it possible to check this with dev deploy?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10190#issuecomment-799425185
https://github.com/hail-is/hail/pull/10190#issuecomment-799456662:6,Deployability,deploy,deployed,6,I dev deployed it [here](https://internal.hail.is/dgoldste/website/docs/batch/tutorial.html). I clicked around a fair amount but didn't check all the links by hand. The only reason I can think of rendering at runtime is rewriting links but I grepped for '{{' and '{%' in the batch docs on a prod pod and found nothing. Also running jinja over post-sphinx rendered files concerns me in general.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10190#issuecomment-799456662
https://github.com/hail-is/hail/issues/10197#issuecomment-800647452:500,Modifiability,sandbox,sandbox,500,"Drat, it appears that pyspark doesn't work with Python 3.8. https://stackoverflow.com/a/58849063/342839. A simpler reproduction to demonstrate that this is a pyspark issues:. ```; snafu$ python -m pyspark.cloudpickle; Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 185, in _run_module_as_main; mod_name, mod_spec, code = _get_module_details(mod_name, _Error); File ""/usr/lib/python3.8/runpy.py"", line 111, in _get_module_details; __import__(pkg_name); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py"", line 51, in <module>; from pyspark.context import SparkContext; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py"", line 31, in <module>; from pyspark import accumulators; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/accumulators.py"", line 97, in <module>; from pyspark.serializers import read_int, PickleSerializer; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/serializers.py"", line 71, in <module>; from pyspark import cloudpickle; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 145, in <module>; _cell_set_template_code = _make_cell_set_template_code(); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 126, in _make_cell_set_template_code; return types.CodeType(; TypeError: an integer is required (got type bytes); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10197#issuecomment-800647452
https://github.com/hail-is/hail/issues/10197#issuecomment-800647452:654,Modifiability,sandbox,sandbox,654,"Drat, it appears that pyspark doesn't work with Python 3.8. https://stackoverflow.com/a/58849063/342839. A simpler reproduction to demonstrate that this is a pyspark issues:. ```; snafu$ python -m pyspark.cloudpickle; Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 185, in _run_module_as_main; mod_name, mod_spec, code = _get_module_details(mod_name, _Error); File ""/usr/lib/python3.8/runpy.py"", line 111, in _get_module_details; __import__(pkg_name); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py"", line 51, in <module>; from pyspark.context import SparkContext; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py"", line 31, in <module>; from pyspark import accumulators; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/accumulators.py"", line 97, in <module>; from pyspark.serializers import read_int, PickleSerializer; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/serializers.py"", line 71, in <module>; from pyspark import cloudpickle; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 145, in <module>; _cell_set_template_code = _make_cell_set_template_code(); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 126, in _make_cell_set_template_code; return types.CodeType(; TypeError: an integer is required (got type bytes); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10197#issuecomment-800647452
https://github.com/hail-is/hail/issues/10197#issuecomment-800647452:799,Modifiability,sandbox,sandbox,799,"Drat, it appears that pyspark doesn't work with Python 3.8. https://stackoverflow.com/a/58849063/342839. A simpler reproduction to demonstrate that this is a pyspark issues:. ```; snafu$ python -m pyspark.cloudpickle; Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 185, in _run_module_as_main; mod_name, mod_spec, code = _get_module_details(mod_name, _Error); File ""/usr/lib/python3.8/runpy.py"", line 111, in _get_module_details; __import__(pkg_name); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py"", line 51, in <module>; from pyspark.context import SparkContext; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py"", line 31, in <module>; from pyspark import accumulators; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/accumulators.py"", line 97, in <module>; from pyspark.serializers import read_int, PickleSerializer; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/serializers.py"", line 71, in <module>; from pyspark import cloudpickle; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 145, in <module>; _cell_set_template_code = _make_cell_set_template_code(); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 126, in _make_cell_set_template_code; return types.CodeType(; TypeError: an integer is required (got type bytes); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10197#issuecomment-800647452
https://github.com/hail-is/hail/issues/10197#issuecomment-800647452:975,Modifiability,sandbox,sandbox,975,"Drat, it appears that pyspark doesn't work with Python 3.8. https://stackoverflow.com/a/58849063/342839. A simpler reproduction to demonstrate that this is a pyspark issues:. ```; snafu$ python -m pyspark.cloudpickle; Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 185, in _run_module_as_main; mod_name, mod_spec, code = _get_module_details(mod_name, _Error); File ""/usr/lib/python3.8/runpy.py"", line 111, in _get_module_details; __import__(pkg_name); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py"", line 51, in <module>; from pyspark.context import SparkContext; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py"", line 31, in <module>; from pyspark import accumulators; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/accumulators.py"", line 97, in <module>; from pyspark.serializers import read_int, PickleSerializer; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/serializers.py"", line 71, in <module>; from pyspark import cloudpickle; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 145, in <module>; _cell_set_template_code = _make_cell_set_template_code(); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 126, in _make_cell_set_template_code; return types.CodeType(; TypeError: an integer is required (got type bytes); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10197#issuecomment-800647452
https://github.com/hail-is/hail/issues/10197#issuecomment-800647452:1123,Modifiability,sandbox,sandbox,1123,"Drat, it appears that pyspark doesn't work with Python 3.8. https://stackoverflow.com/a/58849063/342839. A simpler reproduction to demonstrate that this is a pyspark issues:. ```; snafu$ python -m pyspark.cloudpickle; Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 185, in _run_module_as_main; mod_name, mod_spec, code = _get_module_details(mod_name, _Error); File ""/usr/lib/python3.8/runpy.py"", line 111, in _get_module_details; __import__(pkg_name); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py"", line 51, in <module>; from pyspark.context import SparkContext; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py"", line 31, in <module>; from pyspark import accumulators; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/accumulators.py"", line 97, in <module>; from pyspark.serializers import read_int, PickleSerializer; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/serializers.py"", line 71, in <module>; from pyspark import cloudpickle; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 145, in <module>; _cell_set_template_code = _make_cell_set_template_code(); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 126, in _make_cell_set_template_code; return types.CodeType(; TypeError: an integer is required (got type bytes); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10197#issuecomment-800647452
https://github.com/hail-is/hail/issues/10197#issuecomment-800647452:1297,Modifiability,sandbox,sandbox,1297,"Drat, it appears that pyspark doesn't work with Python 3.8. https://stackoverflow.com/a/58849063/342839. A simpler reproduction to demonstrate that this is a pyspark issues:. ```; snafu$ python -m pyspark.cloudpickle; Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 185, in _run_module_as_main; mod_name, mod_spec, code = _get_module_details(mod_name, _Error); File ""/usr/lib/python3.8/runpy.py"", line 111, in _get_module_details; __import__(pkg_name); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py"", line 51, in <module>; from pyspark.context import SparkContext; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py"", line 31, in <module>; from pyspark import accumulators; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/accumulators.py"", line 97, in <module>; from pyspark.serializers import read_int, PickleSerializer; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/serializers.py"", line 71, in <module>; from pyspark import cloudpickle; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 145, in <module>; _cell_set_template_code = _make_cell_set_template_code(); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 126, in _make_cell_set_template_code; return types.CodeType(; TypeError: an integer is required (got type bytes); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10197#issuecomment-800647452
https://github.com/hail-is/hail/issues/10197#issuecomment-800647452:500,Testability,sandbox,sandbox,500,"Drat, it appears that pyspark doesn't work with Python 3.8. https://stackoverflow.com/a/58849063/342839. A simpler reproduction to demonstrate that this is a pyspark issues:. ```; snafu$ python -m pyspark.cloudpickle; Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 185, in _run_module_as_main; mod_name, mod_spec, code = _get_module_details(mod_name, _Error); File ""/usr/lib/python3.8/runpy.py"", line 111, in _get_module_details; __import__(pkg_name); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py"", line 51, in <module>; from pyspark.context import SparkContext; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py"", line 31, in <module>; from pyspark import accumulators; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/accumulators.py"", line 97, in <module>; from pyspark.serializers import read_int, PickleSerializer; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/serializers.py"", line 71, in <module>; from pyspark import cloudpickle; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 145, in <module>; _cell_set_template_code = _make_cell_set_template_code(); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 126, in _make_cell_set_template_code; return types.CodeType(; TypeError: an integer is required (got type bytes); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10197#issuecomment-800647452
https://github.com/hail-is/hail/issues/10197#issuecomment-800647452:654,Testability,sandbox,sandbox,654,"Drat, it appears that pyspark doesn't work with Python 3.8. https://stackoverflow.com/a/58849063/342839. A simpler reproduction to demonstrate that this is a pyspark issues:. ```; snafu$ python -m pyspark.cloudpickle; Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 185, in _run_module_as_main; mod_name, mod_spec, code = _get_module_details(mod_name, _Error); File ""/usr/lib/python3.8/runpy.py"", line 111, in _get_module_details; __import__(pkg_name); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py"", line 51, in <module>; from pyspark.context import SparkContext; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py"", line 31, in <module>; from pyspark import accumulators; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/accumulators.py"", line 97, in <module>; from pyspark.serializers import read_int, PickleSerializer; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/serializers.py"", line 71, in <module>; from pyspark import cloudpickle; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 145, in <module>; _cell_set_template_code = _make_cell_set_template_code(); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 126, in _make_cell_set_template_code; return types.CodeType(; TypeError: an integer is required (got type bytes); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10197#issuecomment-800647452
https://github.com/hail-is/hail/issues/10197#issuecomment-800647452:799,Testability,sandbox,sandbox,799,"Drat, it appears that pyspark doesn't work with Python 3.8. https://stackoverflow.com/a/58849063/342839. A simpler reproduction to demonstrate that this is a pyspark issues:. ```; snafu$ python -m pyspark.cloudpickle; Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 185, in _run_module_as_main; mod_name, mod_spec, code = _get_module_details(mod_name, _Error); File ""/usr/lib/python3.8/runpy.py"", line 111, in _get_module_details; __import__(pkg_name); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py"", line 51, in <module>; from pyspark.context import SparkContext; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py"", line 31, in <module>; from pyspark import accumulators; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/accumulators.py"", line 97, in <module>; from pyspark.serializers import read_int, PickleSerializer; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/serializers.py"", line 71, in <module>; from pyspark import cloudpickle; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 145, in <module>; _cell_set_template_code = _make_cell_set_template_code(); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 126, in _make_cell_set_template_code; return types.CodeType(; TypeError: an integer is required (got type bytes); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10197#issuecomment-800647452
https://github.com/hail-is/hail/issues/10197#issuecomment-800647452:975,Testability,sandbox,sandbox,975,"Drat, it appears that pyspark doesn't work with Python 3.8. https://stackoverflow.com/a/58849063/342839. A simpler reproduction to demonstrate that this is a pyspark issues:. ```; snafu$ python -m pyspark.cloudpickle; Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 185, in _run_module_as_main; mod_name, mod_spec, code = _get_module_details(mod_name, _Error); File ""/usr/lib/python3.8/runpy.py"", line 111, in _get_module_details; __import__(pkg_name); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py"", line 51, in <module>; from pyspark.context import SparkContext; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py"", line 31, in <module>; from pyspark import accumulators; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/accumulators.py"", line 97, in <module>; from pyspark.serializers import read_int, PickleSerializer; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/serializers.py"", line 71, in <module>; from pyspark import cloudpickle; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 145, in <module>; _cell_set_template_code = _make_cell_set_template_code(); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 126, in _make_cell_set_template_code; return types.CodeType(; TypeError: an integer is required (got type bytes); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10197#issuecomment-800647452
https://github.com/hail-is/hail/issues/10197#issuecomment-800647452:1123,Testability,sandbox,sandbox,1123,"Drat, it appears that pyspark doesn't work with Python 3.8. https://stackoverflow.com/a/58849063/342839. A simpler reproduction to demonstrate that this is a pyspark issues:. ```; snafu$ python -m pyspark.cloudpickle; Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 185, in _run_module_as_main; mod_name, mod_spec, code = _get_module_details(mod_name, _Error); File ""/usr/lib/python3.8/runpy.py"", line 111, in _get_module_details; __import__(pkg_name); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py"", line 51, in <module>; from pyspark.context import SparkContext; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py"", line 31, in <module>; from pyspark import accumulators; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/accumulators.py"", line 97, in <module>; from pyspark.serializers import read_int, PickleSerializer; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/serializers.py"", line 71, in <module>; from pyspark import cloudpickle; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 145, in <module>; _cell_set_template_code = _make_cell_set_template_code(); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 126, in _make_cell_set_template_code; return types.CodeType(; TypeError: an integer is required (got type bytes); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10197#issuecomment-800647452
https://github.com/hail-is/hail/issues/10197#issuecomment-800647452:1297,Testability,sandbox,sandbox,1297,"Drat, it appears that pyspark doesn't work with Python 3.8. https://stackoverflow.com/a/58849063/342839. A simpler reproduction to demonstrate that this is a pyspark issues:. ```; snafu$ python -m pyspark.cloudpickle; Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 185, in _run_module_as_main; mod_name, mod_spec, code = _get_module_details(mod_name, _Error); File ""/usr/lib/python3.8/runpy.py"", line 111, in _get_module_details; __import__(pkg_name); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py"", line 51, in <module>; from pyspark.context import SparkContext; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py"", line 31, in <module>; from pyspark import accumulators; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/accumulators.py"", line 97, in <module>; from pyspark.serializers import read_int, PickleSerializer; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/serializers.py"", line 71, in <module>; from pyspark import cloudpickle; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 145, in <module>; _cell_set_template_code = _make_cell_set_template_code(); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 126, in _make_cell_set_template_code; return types.CodeType(; TypeError: an integer is required (got type bytes); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10197#issuecomment-800647452
https://github.com/hail-is/hail/issues/10197#issuecomment-800647452:107,Usability,simpl,simpler,107,"Drat, it appears that pyspark doesn't work with Python 3.8. https://stackoverflow.com/a/58849063/342839. A simpler reproduction to demonstrate that this is a pyspark issues:. ```; snafu$ python -m pyspark.cloudpickle; Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 185, in _run_module_as_main; mod_name, mod_spec, code = _get_module_details(mod_name, _Error); File ""/usr/lib/python3.8/runpy.py"", line 111, in _get_module_details; __import__(pkg_name); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py"", line 51, in <module>; from pyspark.context import SparkContext; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py"", line 31, in <module>; from pyspark import accumulators; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/accumulators.py"", line 97, in <module>; from pyspark.serializers import read_int, PickleSerializer; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/serializers.py"", line 71, in <module>; from pyspark import cloudpickle; File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 145, in <module>; _cell_set_template_code = _make_cell_set_template_code(); File ""/home/reece/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/cloudpickle.py"", line 126, in _make_cell_set_template_code; return types.CodeType(; TypeError: an integer is required (got type bytes); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10197#issuecomment-800647452
https://github.com/hail-is/hail/issues/10197#issuecomment-800706947:215,Availability,error,error,215,"According to @johnc1231 in https://hail.zulipchat.com/#narrow/stream/123010-Hail-0.2E2.20support/topic/Troubles.20getting.20started.20(Python.203.2E8):. > It's intentionally limited to 3.7 because of precisely that error; >; > John Compitello: This is because of our dependence on spark 2. Spark 3 won't have that restriction, we are in the process of upgrading, hopefully should be fixed next week. I'll close this and wait for the release with Spark 3.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10197#issuecomment-800706947
https://github.com/hail-is/hail/issues/10197#issuecomment-800706947:433,Deployability,release,release,433,"According to @johnc1231 in https://hail.zulipchat.com/#narrow/stream/123010-Hail-0.2E2.20support/topic/Troubles.20getting.20started.20(Python.203.2E8):. > It's intentionally limited to 3.7 because of precisely that error; >; > John Compitello: This is because of our dependence on spark 2. Spark 3 won't have that restriction, we are in the process of upgrading, hopefully should be fixed next week. I'll close this and wait for the release with Spark 3.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10197#issuecomment-800706947
https://github.com/hail-is/hail/issues/10197#issuecomment-800706947:267,Integrability,depend,dependence,267,"According to @johnc1231 in https://hail.zulipchat.com/#narrow/stream/123010-Hail-0.2E2.20support/topic/Troubles.20getting.20started.20(Python.203.2E8):. > It's intentionally limited to 3.7 because of precisely that error; >; > John Compitello: This is because of our dependence on spark 2. Spark 3 won't have that restriction, we are in the process of upgrading, hopefully should be fixed next week. I'll close this and wait for the release with Spark 3.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10197#issuecomment-800706947
https://github.com/hail-is/hail/pull/10202#issuecomment-810242199:8,Testability,test,tests,8,Failing tests.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10202#issuecomment-810242199
https://github.com/hail-is/hail/pull/10204#issuecomment-806087347:248,Integrability,rout,router,248,"I think this is ready for another look but I put a WIP label on it because I don't want to merge it today while there's still workshop things happening. After it goes in I'll run another scale test. The nginx config is mostly just lifted over from router, with a couple small changes. I wasn't able to just proxy to localhost because notebook couldn't figure out which subdomain the request was going to and everything would 404. Adding a Host header fixed the 404, but messed with the requests to notebook pods so instead I added `workshop.local` and `notebook.local` to `/etc/hosts` on the pod, which I kind of like, which did the trick. I needed two ssl configs, one for nginx and one for aiohttp to use internally, and ended up changing the `ssl-config-notebook` secret to `nginx` and creating a second `ssl-config-notebook-python`, but let me know if this seems off.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10204#issuecomment-806087347
https://github.com/hail-is/hail/pull/10204#issuecomment-806087347:209,Modifiability,config,config,209,"I think this is ready for another look but I put a WIP label on it because I don't want to merge it today while there's still workshop things happening. After it goes in I'll run another scale test. The nginx config is mostly just lifted over from router, with a couple small changes. I wasn't able to just proxy to localhost because notebook couldn't figure out which subdomain the request was going to and everything would 404. Adding a Host header fixed the 404, but messed with the requests to notebook pods so instead I added `workshop.local` and `notebook.local` to `/etc/hosts` on the pod, which I kind of like, which did the trick. I needed two ssl configs, one for nginx and one for aiohttp to use internally, and ended up changing the `ssl-config-notebook` secret to `nginx` and creating a second `ssl-config-notebook-python`, but let me know if this seems off.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10204#issuecomment-806087347
https://github.com/hail-is/hail/pull/10204#issuecomment-806087347:657,Modifiability,config,configs,657,"I think this is ready for another look but I put a WIP label on it because I don't want to merge it today while there's still workshop things happening. After it goes in I'll run another scale test. The nginx config is mostly just lifted over from router, with a couple small changes. I wasn't able to just proxy to localhost because notebook couldn't figure out which subdomain the request was going to and everything would 404. Adding a Host header fixed the 404, but messed with the requests to notebook pods so instead I added `workshop.local` and `notebook.local` to `/etc/hosts` on the pod, which I kind of like, which did the trick. I needed two ssl configs, one for nginx and one for aiohttp to use internally, and ended up changing the `ssl-config-notebook` secret to `nginx` and creating a second `ssl-config-notebook-python`, but let me know if this seems off.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10204#issuecomment-806087347
https://github.com/hail-is/hail/pull/10204#issuecomment-806087347:750,Modifiability,config,config-notebook,750,"I think this is ready for another look but I put a WIP label on it because I don't want to merge it today while there's still workshop things happening. After it goes in I'll run another scale test. The nginx config is mostly just lifted over from router, with a couple small changes. I wasn't able to just proxy to localhost because notebook couldn't figure out which subdomain the request was going to and everything would 404. Adding a Host header fixed the 404, but messed with the requests to notebook pods so instead I added `workshop.local` and `notebook.local` to `/etc/hosts` on the pod, which I kind of like, which did the trick. I needed two ssl configs, one for nginx and one for aiohttp to use internally, and ended up changing the `ssl-config-notebook` secret to `nginx` and creating a second `ssl-config-notebook-python`, but let me know if this seems off.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10204#issuecomment-806087347
https://github.com/hail-is/hail/pull/10204#issuecomment-806087347:812,Modifiability,config,config-notebook-python,812,"I think this is ready for another look but I put a WIP label on it because I don't want to merge it today while there's still workshop things happening. After it goes in I'll run another scale test. The nginx config is mostly just lifted over from router, with a couple small changes. I wasn't able to just proxy to localhost because notebook couldn't figure out which subdomain the request was going to and everything would 404. Adding a Host header fixed the 404, but messed with the requests to notebook pods so instead I added `workshop.local` and `notebook.local` to `/etc/hosts` on the pod, which I kind of like, which did the trick. I needed two ssl configs, one for nginx and one for aiohttp to use internally, and ended up changing the `ssl-config-notebook` secret to `nginx` and creating a second `ssl-config-notebook-python`, but let me know if this seems off.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10204#issuecomment-806087347
https://github.com/hail-is/hail/pull/10204#issuecomment-806087347:193,Testability,test,test,193,"I think this is ready for another look but I put a WIP label on it because I don't want to merge it today while there's still workshop things happening. After it goes in I'll run another scale test. The nginx config is mostly just lifted over from router, with a couple small changes. I wasn't able to just proxy to localhost because notebook couldn't figure out which subdomain the request was going to and everything would 404. Adding a Host header fixed the 404, but messed with the requests to notebook pods so instead I added `workshop.local` and `notebook.local` to `/etc/hosts` on the pod, which I kind of like, which did the trick. I needed two ssl configs, one for nginx and one for aiohttp to use internally, and ended up changing the `ssl-config-notebook` secret to `nginx` and creating a second `ssl-config-notebook-python`, but let me know if this seems off.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10204#issuecomment-806087347
https://github.com/hail-is/hail/pull/10204#issuecomment-808520954:66,Modifiability,config,config,66,"Notebook still does auth on incoming requests, which uses the ssl config to talk to `auth`. Potentially a little confusing with a proxy in front of it too, but that felt out of scope for this PR.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10204#issuecomment-808520954
https://github.com/hail-is/hail/pull/10207#issuecomment-803130352:155,Integrability,rout,router-resolver,155,I've been letting this cook all day with no unforeseen problems so unless someone redeploys gateway it is the current working version. I've also left the `router-resolver` and `router` changes as two commits in case it might be better to deal with the two services independently.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10207#issuecomment-803130352
https://github.com/hail-is/hail/pull/10207#issuecomment-803130352:177,Integrability,rout,router,177,I've been letting this cook all day with no unforeseen problems so unless someone redeploys gateway it is the current working version. I've also left the `router-resolver` and `router` changes as two commits in case it might be better to deal with the two services independently.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10207#issuecomment-803130352
https://github.com/hail-is/hail/pull/10215#issuecomment-822958412:73,Availability,checkpoint,checkpoint,73,"As written here, this feature is incompatible with `overwrite=True`. The checkpoint file makes it possible to recover progress from a partially written file at `url`, so I'm not sure what overwriting would mean in this context. Is there a particular use case you have in mind? This was built for a specific application, and I am eager to hear others.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10215#issuecomment-822958412
https://github.com/hail-is/hail/pull/10215#issuecomment-822958412:110,Availability,recover,recover,110,"As written here, this feature is incompatible with `overwrite=True`. The checkpoint file makes it possible to recover progress from a partially written file at `url`, so I'm not sure what overwriting would mean in this context. Is there a particular use case you have in mind? This was built for a specific application, and I am eager to hear others.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10215#issuecomment-822958412
https://github.com/hail-is/hail/pull/10215#issuecomment-822958412:110,Safety,recover,recover,110,"As written here, this feature is incompatible with `overwrite=True`. The checkpoint file makes it possible to recover progress from a partially written file at `url`, so I'm not sure what overwriting would mean in this context. Is there a particular use case you have in mind? This was built for a specific application, and I am eager to hear others.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10215#issuecomment-822958412
https://github.com/hail-is/hail/pull/10215#issuecomment-822979485:338,Availability,recover,recovered,338,"Thank you for the quick response, @tpoterba . I understand, I think we are on the same page. I was mainly curious what would happen if overwrite was True. Whether it would start from scratch or ignore overwrite, or something else. That being said, a possible use case re overwrite could be to actually remove partial files re tasks being recovered. Re a single task, if it would fail, then it would be possible for there to exist a partial task file. Usually if a task fails, then Spark would retry it. And if the task's next attempt passes, then there would exist a full task file plus a partial task file. So, if Hail would recover the task, then I imagine there would also exist a full task file plus a partial task file. I have not seen partial task files affecting downstream processing yet, but I am generally wary of ""duplicate"" files. Just a thought",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10215#issuecomment-822979485
https://github.com/hail-is/hail/pull/10215#issuecomment-822979485:626,Availability,recover,recover,626,"Thank you for the quick response, @tpoterba . I understand, I think we are on the same page. I was mainly curious what would happen if overwrite was True. Whether it would start from scratch or ignore overwrite, or something else. That being said, a possible use case re overwrite could be to actually remove partial files re tasks being recovered. Re a single task, if it would fail, then it would be possible for there to exist a partial task file. Usually if a task fails, then Spark would retry it. And if the task's next attempt passes, then there would exist a full task file plus a partial task file. So, if Hail would recover the task, then I imagine there would also exist a full task file plus a partial task file. I have not seen partial task files affecting downstream processing yet, but I am generally wary of ""duplicate"" files. Just a thought",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10215#issuecomment-822979485
https://github.com/hail-is/hail/pull/10215#issuecomment-822979485:770,Availability,down,downstream,770,"Thank you for the quick response, @tpoterba . I understand, I think we are on the same page. I was mainly curious what would happen if overwrite was True. Whether it would start from scratch or ignore overwrite, or something else. That being said, a possible use case re overwrite could be to actually remove partial files re tasks being recovered. Re a single task, if it would fail, then it would be possible for there to exist a partial task file. Usually if a task fails, then Spark would retry it. And if the task's next attempt passes, then there would exist a full task file plus a partial task file. So, if Hail would recover the task, then I imagine there would also exist a full task file plus a partial task file. I have not seen partial task files affecting downstream processing yet, but I am generally wary of ""duplicate"" files. Just a thought",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10215#issuecomment-822979485
https://github.com/hail-is/hail/pull/10215#issuecomment-822979485:338,Safety,recover,recovered,338,"Thank you for the quick response, @tpoterba . I understand, I think we are on the same page. I was mainly curious what would happen if overwrite was True. Whether it would start from scratch or ignore overwrite, or something else. That being said, a possible use case re overwrite could be to actually remove partial files re tasks being recovered. Re a single task, if it would fail, then it would be possible for there to exist a partial task file. Usually if a task fails, then Spark would retry it. And if the task's next attempt passes, then there would exist a full task file plus a partial task file. So, if Hail would recover the task, then I imagine there would also exist a full task file plus a partial task file. I have not seen partial task files affecting downstream processing yet, but I am generally wary of ""duplicate"" files. Just a thought",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10215#issuecomment-822979485
https://github.com/hail-is/hail/pull/10215#issuecomment-822979485:626,Safety,recover,recover,626,"Thank you for the quick response, @tpoterba . I understand, I think we are on the same page. I was mainly curious what would happen if overwrite was True. Whether it would start from scratch or ignore overwrite, or something else. That being said, a possible use case re overwrite could be to actually remove partial files re tasks being recovered. Re a single task, if it would fail, then it would be possible for there to exist a partial task file. Usually if a task fails, then Spark would retry it. And if the task's next attempt passes, then there would exist a full task file plus a partial task file. So, if Hail would recover the task, then I imagine there would also exist a full task file plus a partial task file. I have not seen partial task files affecting downstream processing yet, but I am generally wary of ""duplicate"" files. Just a thought",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10215#issuecomment-822979485
https://github.com/hail-is/hail/pull/10217#issuecomment-808525352:296,Modifiability,config,config,296,"> @cseed, do you recall why you chose to delete and then use apply in ci/create_database.py?. I think no reason. I wasn't aware of the race condition and didn't have an alternative for applying changes at hand. This looks good to me. I ran a few examples but I couldn't actually tell how `--save-config` changes the output.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10217#issuecomment-808525352
https://github.com/hail-is/hail/pull/10217#issuecomment-808525352:135,Performance,race condition,race condition,135,"> @cseed, do you recall why you chose to delete and then use apply in ci/create_database.py?. I think no reason. I wasn't aware of the race condition and didn't have an alternative for applying changes at hand. This looks good to me. I ran a few examples but I couldn't actually tell how `--save-config` changes the output.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10217#issuecomment-808525352
https://github.com/hail-is/hail/pull/10217#issuecomment-809406141:25,Deployability,configurat,configuration,25,"It adds the last applied configuration annotation which is used to know if a subsequent configuration is different. ```; (base) # kubectl -n default create secret generic foo \ ; --save-config --dry-run=client -o yaml; apiVersion: v1; kind: Secret; metadata:; annotations:; kubectl.kubernetes.io/last-applied-configuration: |; {""kind"":""Secret"",""apiVersion"":""v1"",""metadata"":{""name"":""foo"",""creationTimestamp"":null}}; creationTimestamp: null; name: foo; namespace: default; (base) # kubectl -n default create secret generic foo \; --dry-run=client -o yaml ; apiVersion: v1; kind: Secret; metadata:; creationTimestamp: null; name: foo; namespace: default. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10217#issuecomment-809406141
https://github.com/hail-is/hail/pull/10217#issuecomment-809406141:88,Deployability,configurat,configuration,88,"It adds the last applied configuration annotation which is used to know if a subsequent configuration is different. ```; (base) # kubectl -n default create secret generic foo \ ; --save-config --dry-run=client -o yaml; apiVersion: v1; kind: Secret; metadata:; annotations:; kubectl.kubernetes.io/last-applied-configuration: |; {""kind"":""Secret"",""apiVersion"":""v1"",""metadata"":{""name"":""foo"",""creationTimestamp"":null}}; creationTimestamp: null; name: foo; namespace: default; (base) # kubectl -n default create secret generic foo \; --dry-run=client -o yaml ; apiVersion: v1; kind: Secret; metadata:; creationTimestamp: null; name: foo; namespace: default. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10217#issuecomment-809406141
https://github.com/hail-is/hail/pull/10217#issuecomment-809406141:309,Deployability,configurat,configuration,309,"It adds the last applied configuration annotation which is used to know if a subsequent configuration is different. ```; (base) # kubectl -n default create secret generic foo \ ; --save-config --dry-run=client -o yaml; apiVersion: v1; kind: Secret; metadata:; annotations:; kubectl.kubernetes.io/last-applied-configuration: |; {""kind"":""Secret"",""apiVersion"":""v1"",""metadata"":{""name"":""foo"",""creationTimestamp"":null}}; creationTimestamp: null; name: foo; namespace: default; (base) # kubectl -n default create secret generic foo \; --dry-run=client -o yaml ; apiVersion: v1; kind: Secret; metadata:; creationTimestamp: null; name: foo; namespace: default. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10217#issuecomment-809406141
https://github.com/hail-is/hail/pull/10217#issuecomment-809406141:25,Modifiability,config,configuration,25,"It adds the last applied configuration annotation which is used to know if a subsequent configuration is different. ```; (base) # kubectl -n default create secret generic foo \ ; --save-config --dry-run=client -o yaml; apiVersion: v1; kind: Secret; metadata:; annotations:; kubectl.kubernetes.io/last-applied-configuration: |; {""kind"":""Secret"",""apiVersion"":""v1"",""metadata"":{""name"":""foo"",""creationTimestamp"":null}}; creationTimestamp: null; name: foo; namespace: default; (base) # kubectl -n default create secret generic foo \; --dry-run=client -o yaml ; apiVersion: v1; kind: Secret; metadata:; creationTimestamp: null; name: foo; namespace: default. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10217#issuecomment-809406141
https://github.com/hail-is/hail/pull/10217#issuecomment-809406141:88,Modifiability,config,configuration,88,"It adds the last applied configuration annotation which is used to know if a subsequent configuration is different. ```; (base) # kubectl -n default create secret generic foo \ ; --save-config --dry-run=client -o yaml; apiVersion: v1; kind: Secret; metadata:; annotations:; kubectl.kubernetes.io/last-applied-configuration: |; {""kind"":""Secret"",""apiVersion"":""v1"",""metadata"":{""name"":""foo"",""creationTimestamp"":null}}; creationTimestamp: null; name: foo; namespace: default; (base) # kubectl -n default create secret generic foo \; --dry-run=client -o yaml ; apiVersion: v1; kind: Secret; metadata:; creationTimestamp: null; name: foo; namespace: default. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10217#issuecomment-809406141
https://github.com/hail-is/hail/pull/10217#issuecomment-809406141:186,Modifiability,config,config,186,"It adds the last applied configuration annotation which is used to know if a subsequent configuration is different. ```; (base) # kubectl -n default create secret generic foo \ ; --save-config --dry-run=client -o yaml; apiVersion: v1; kind: Secret; metadata:; annotations:; kubectl.kubernetes.io/last-applied-configuration: |; {""kind"":""Secret"",""apiVersion"":""v1"",""metadata"":{""name"":""foo"",""creationTimestamp"":null}}; creationTimestamp: null; name: foo; namespace: default; (base) # kubectl -n default create secret generic foo \; --dry-run=client -o yaml ; apiVersion: v1; kind: Secret; metadata:; creationTimestamp: null; name: foo; namespace: default. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10217#issuecomment-809406141
https://github.com/hail-is/hail/pull/10217#issuecomment-809406141:309,Modifiability,config,configuration,309,"It adds the last applied configuration annotation which is used to know if a subsequent configuration is different. ```; (base) # kubectl -n default create secret generic foo \ ; --save-config --dry-run=client -o yaml; apiVersion: v1; kind: Secret; metadata:; annotations:; kubectl.kubernetes.io/last-applied-configuration: |; {""kind"":""Secret"",""apiVersion"":""v1"",""metadata"":{""name"":""foo"",""creationTimestamp"":null}}; creationTimestamp: null; name: foo; namespace: default; (base) # kubectl -n default create secret generic foo \; --dry-run=client -o yaml ; apiVersion: v1; kind: Secret; metadata:; creationTimestamp: null; name: foo; namespace: default. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10217#issuecomment-809406141
https://github.com/hail-is/hail/pull/10218#issuecomment-807414189:20,Testability,test,tests,20,I don't think these tests will pass. I'll address the issues when I come back from vacation. Feel free to reopen if you want.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10218#issuecomment-807414189
https://github.com/hail-is/hail/pull/10218#issuecomment-813514852:586,Availability,error,error,586,"Do I need to do something on my end in order to test copying from my computer rather than through CI? I keep getting a 400 regardless of whether I use my bucket `hail-jigold` or the test bucket `hail-test-dmk9z`. The only information I can get is ""Bad Request"" which I think is from this:. > The request cannot be completed based on your current Cloud Storage settings. For example, you cannot lock a retention policy if the requested bucket doesn't have a retention policy, and you cannot set ACLs if the requested bucket has Bucket Policy Only enabled. I don't think this is the real error as we know copying works fine with the Hail test bucket.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10218#issuecomment-813514852
https://github.com/hail-is/hail/pull/10218#issuecomment-813514852:48,Testability,test,test,48,"Do I need to do something on my end in order to test copying from my computer rather than through CI? I keep getting a 400 regardless of whether I use my bucket `hail-jigold` or the test bucket `hail-test-dmk9z`. The only information I can get is ""Bad Request"" which I think is from this:. > The request cannot be completed based on your current Cloud Storage settings. For example, you cannot lock a retention policy if the requested bucket doesn't have a retention policy, and you cannot set ACLs if the requested bucket has Bucket Policy Only enabled. I don't think this is the real error as we know copying works fine with the Hail test bucket.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10218#issuecomment-813514852
https://github.com/hail-is/hail/pull/10218#issuecomment-813514852:182,Testability,test,test,182,"Do I need to do something on my end in order to test copying from my computer rather than through CI? I keep getting a 400 regardless of whether I use my bucket `hail-jigold` or the test bucket `hail-test-dmk9z`. The only information I can get is ""Bad Request"" which I think is from this:. > The request cannot be completed based on your current Cloud Storage settings. For example, you cannot lock a retention policy if the requested bucket doesn't have a retention policy, and you cannot set ACLs if the requested bucket has Bucket Policy Only enabled. I don't think this is the real error as we know copying works fine with the Hail test bucket.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10218#issuecomment-813514852
https://github.com/hail-is/hail/pull/10218#issuecomment-813514852:200,Testability,test,test-,200,"Do I need to do something on my end in order to test copying from my computer rather than through CI? I keep getting a 400 regardless of whether I use my bucket `hail-jigold` or the test bucket `hail-test-dmk9z`. The only information I can get is ""Bad Request"" which I think is from this:. > The request cannot be completed based on your current Cloud Storage settings. For example, you cannot lock a retention policy if the requested bucket doesn't have a retention policy, and you cannot set ACLs if the requested bucket has Bucket Policy Only enabled. I don't think this is the real error as we know copying works fine with the Hail test bucket.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10218#issuecomment-813514852
https://github.com/hail-is/hail/pull/10218#issuecomment-813514852:636,Testability,test,test,636,"Do I need to do something on my end in order to test copying from my computer rather than through CI? I keep getting a 400 regardless of whether I use my bucket `hail-jigold` or the test bucket `hail-test-dmk9z`. The only information I can get is ""Bad Request"" which I think is from this:. > The request cannot be completed based on your current Cloud Storage settings. For example, you cannot lock a retention policy if the requested bucket doesn't have a retention policy, and you cannot set ACLs if the requested bucket has Bucket Policy Only enabled. I don't think this is the real error as we know copying works fine with the Hail test bucket.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10218#issuecomment-813514852
https://github.com/hail-is/hail/pull/10222#issuecomment-807669744:44,Modifiability,config,config,44,"Ok there's another change in here now. `tls/config.yaml` now allows multiple domains listed for a single cert, which are added as alternate names. The first domain listed is used as the Common Name (CN), though that should hopefully not matter. So for any k8s service, the name of that service must be one of the domains listed in the corresponding cert.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10222#issuecomment-807669744
https://github.com/hail-is/hail/pull/10226#issuecomment-813523640:0,Testability,Test,Tests,0,Tests are passing now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10226#issuecomment-813523640
https://github.com/hail-is/hail/pull/10227#issuecomment-807289921:185,Energy Efficiency,allocate,allocate,185,"LAPACK/MKL documentation says `WORK` must be an array of length `max(1, LWORK)`. I think the ""official"" way to fix this is to leave `LWORK` as whatever the workspace query returns, and allocate the `WORK` arrray of size `max(1, LWORK)`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10227#issuecomment-807289921
https://github.com/hail-is/hail/pull/10229#issuecomment-814324282:0,Testability,Benchmark,Benchmarks,0,"Benchmarks: https://gist.github.com/tpoterba/7b41c0e8c48ea7b1dec03dee8bce1c72. It looks like this change made Hail slower, but I'm pretty sure this is noise. These:; ```; join_p1000_p10 130.8% 132.532 173.404; union_p1000_p10 129.7% 107.998 140.027; union_p10_p1000 128.6% 116.013 149.201; ``` . Don't have any stream IRs!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10229#issuecomment-814324282
https://github.com/hail-is/hail/pull/10229#issuecomment-814325646:284,Integrability,depend,dependent,284,"I also compared `variant_and_sample_qc_nested_with_filters_2` (33% worse on batch) between the two branches on my laptop, and could not detect a difference. I do think the make_ndarray range speedup is real -- there are a few benchmarks that indicate improvement that all are heavily dependent on the performance of the `StreamRange` implementation, which I think slightly improved.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10229#issuecomment-814325646
https://github.com/hail-is/hail/pull/10229#issuecomment-814325646:301,Performance,perform,performance,301,"I also compared `variant_and_sample_qc_nested_with_filters_2` (33% worse on batch) between the two branches on my laptop, and could not detect a difference. I do think the make_ndarray range speedup is real -- there are a few benchmarks that indicate improvement that all are heavily dependent on the performance of the `StreamRange` implementation, which I think slightly improved.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10229#issuecomment-814325646
https://github.com/hail-is/hail/pull/10229#issuecomment-814325646:136,Safety,detect,detect,136,"I also compared `variant_and_sample_qc_nested_with_filters_2` (33% worse on batch) between the two branches on my laptop, and could not detect a difference. I do think the make_ndarray range speedup is real -- there are a few benchmarks that indicate improvement that all are heavily dependent on the performance of the `StreamRange` implementation, which I think slightly improved.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10229#issuecomment-814325646
https://github.com/hail-is/hail/pull/10229#issuecomment-814325646:226,Testability,benchmark,benchmarks,226,"I also compared `variant_and_sample_qc_nested_with_filters_2` (33% worse on batch) between the two branches on my laptop, and could not detect a difference. I do think the make_ndarray range speedup is real -- there are a few benchmarks that indicate improvement that all are heavily dependent on the performance of the `StreamRange` implementation, which I think slightly improved.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10229#issuecomment-814325646
https://github.com/hail-is/hail/pull/10233#issuecomment-808504566:246,Availability,avail,available,246,"I'm curious how you would test this. I've manually tested and confirmed it works with the currently commented out test. That test is kind of slow and heavy though, and it's hard to write a good version if I don't know how much memory someone has available. Do you think it's worth adding a new CI job to run certain tests in constrained memory environment to verify they stay below a prescribed limit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10233#issuecomment-808504566
https://github.com/hail-is/hail/pull/10233#issuecomment-808504566:26,Testability,test,test,26,"I'm curious how you would test this. I've manually tested and confirmed it works with the currently commented out test. That test is kind of slow and heavy though, and it's hard to write a good version if I don't know how much memory someone has available. Do you think it's worth adding a new CI job to run certain tests in constrained memory environment to verify they stay below a prescribed limit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10233#issuecomment-808504566
https://github.com/hail-is/hail/pull/10233#issuecomment-808504566:51,Testability,test,tested,51,"I'm curious how you would test this. I've manually tested and confirmed it works with the currently commented out test. That test is kind of slow and heavy though, and it's hard to write a good version if I don't know how much memory someone has available. Do you think it's worth adding a new CI job to run certain tests in constrained memory environment to verify they stay below a prescribed limit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10233#issuecomment-808504566
https://github.com/hail-is/hail/pull/10233#issuecomment-808504566:114,Testability,test,test,114,"I'm curious how you would test this. I've manually tested and confirmed it works with the currently commented out test. That test is kind of slow and heavy though, and it's hard to write a good version if I don't know how much memory someone has available. Do you think it's worth adding a new CI job to run certain tests in constrained memory environment to verify they stay below a prescribed limit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10233#issuecomment-808504566
https://github.com/hail-is/hail/pull/10233#issuecomment-808504566:125,Testability,test,test,125,"I'm curious how you would test this. I've manually tested and confirmed it works with the currently commented out test. That test is kind of slow and heavy though, and it's hard to write a good version if I don't know how much memory someone has available. Do you think it's worth adding a new CI job to run certain tests in constrained memory environment to verify they stay below a prescribed limit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10233#issuecomment-808504566
https://github.com/hail-is/hail/pull/10233#issuecomment-808504566:316,Testability,test,tests,316,"I'm curious how you would test this. I've manually tested and confirmed it works with the currently commented out test. That test is kind of slow and heavy though, and it's hard to write a good version if I don't know how much memory someone has available. Do you think it's worth adding a new CI job to run certain tests in constrained memory environment to verify they stay below a prescribed limit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10233#issuecomment-808504566
https://github.com/hail-is/hail/pull/10233#issuecomment-811969275:16,Testability,test,test,16,"I added a Scala test like we discussed, but it's not as thorough as I want it to be. `totalAllocatedBytes` checking just checks that we cleaned up all the intermediate garbage before returning. It doesn't ensure that we never used more than a certain amount of memory.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10233#issuecomment-811969275
https://github.com/hail-is/hail/pull/10233#issuecomment-812071559:6,Security,expose,expose,6,Let's expose this. The peak memory usage on a region pool is between `allocationEchoThreshold / 2` and `allocationEchoThreshold`,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10233#issuecomment-812071559
https://github.com/hail-is/hail/pull/10235#issuecomment-812185045:43,Modifiability,config,config,43,"Ah, yes that's right, I'll add that to the config.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10235#issuecomment-812185045
https://github.com/hail-is/hail/pull/10238#issuecomment-809610358:21,Modifiability,config,config,21,"(nb: if `hailctl dev config show` lists `default: carolin`, then the URL on your laptop will be http://localhost:5000/carolin/website/docs/...)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10238#issuecomment-809610358
https://github.com/hail-is/hail/pull/10239#issuecomment-809615637:69,Availability,error,error,69,I accidentally introduced this in #10172 while removing a templating error that inadvertently masked this problem.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10239#issuecomment-809615637
https://github.com/hail-is/hail/pull/10239#issuecomment-809615637:94,Availability,mask,masked,94,I accidentally introduced this in #10172 while removing a templating error that inadvertently masked this problem.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10239#issuecomment-809615637
https://github.com/hail-is/hail/pull/10239#issuecomment-809637141:49,Deployability,deploy,deploy,49,"Excellent work! Looks much better to me in a dev deploy:. <img width=""885"" alt=""Screen Shot 2021-03-29 at 3 06 16 PM"" src=""https://user-images.githubusercontent.com/106194/112886867-7cece880-90a0-11eb-8b91-718bb1df4263.png"">; <img width=""885"" alt=""Screen Shot 2021-03-29 at 3 06 14 PM"" src=""https://user-images.githubusercontent.com/106194/112886869-7eb6ac00-90a0-11eb-8b4d-8fc79b6e7892.png"">",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10239#issuecomment-809637141
https://github.com/hail-is/hail/pull/10245#issuecomment-809703007:76,Performance,cache,cache,76,"The two versions appear indistinguishable on my laptop. With the filesystem cache warm, the old version took 2m, the new one 1m58s.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10245#issuecomment-809703007
https://github.com/hail-is/hail/pull/10247#issuecomment-810268452:117,Integrability,rout,router,117,"This is the current version of gateway in default since yesterday, and since then there haven't been any logs out of router.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10247#issuecomment-810268452
https://github.com/hail-is/hail/pull/10247#issuecomment-810268452:105,Testability,log,logs,105,"This is the current version of gateway in default since yesterday, and since then there haven't been any logs out of router.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10247#issuecomment-810268452
https://github.com/hail-is/hail/pull/10251#issuecomment-818810396:5,Security,validat,validated,5,"I've validated correctness for haploid calls manually, and confirmed that results for diploid calls don't change.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10251#issuecomment-818810396
https://github.com/hail-is/hail/pull/10264#issuecomment-812526892:414,Testability,test,test,414,"This PR broke `test_blanczos_against_hail`, but the difference between the two was only slightly above the threshold. This is because, for a fixed value of `q`, the new version effectively does half an iteration less than before. For example, for `q=2`, the old version computed a basis for `[AG, AA'AG, (AA')^2AG]`, while the new version computes a basis for `[G, A'AG, (A'A)^2G]`. Incrementing `q` by one in the test fixed it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10264#issuecomment-812526892
https://github.com/hail-is/hail/pull/10277#issuecomment-813532470:116,Deployability,release,releases,116,"Looking at fonts in the network panel of Chrome dev tools:. On https://hail.is/, I see https://ka-f.fontawesome.com/releases/v5.15.3/webfonts/free-fa-brands-400.woff2, which looks like it matches the font family specified by the `fab` class (""Font Awesome 5 Brands""). On https://hail.is/docs/0.2/index.html however, the only Font Awesome font I see is https://hail.is/docs/0.2/_static/fonts/fontawesome-webfont.woff2?v=4.7.0.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10277#issuecomment-813532470
https://github.com/hail-is/hail/pull/10277#issuecomment-813613209:63,Testability,test,test,63,Thanks for the report and fix @nawatts ! You should be able to test changes with `make -C website run` from the root of the repo. Let me take a closer look at the docs.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10277#issuecomment-813613209
https://github.com/hail-is/hail/pull/10277#issuecomment-813617813:176,Deployability,release,released,176,"Yeah, so, this is my bad. The dynamic-base is used at doc-generation-time. Changes to that are not reflected until the docs are regenerated (i.e. a new PyPI version of Hail is released). The short-term fix is to release Hail. The long-term fix is to not make changes to dynamic-base.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10277#issuecomment-813617813
https://github.com/hail-is/hail/pull/10277#issuecomment-813617813:212,Deployability,release,release,212,"Yeah, so, this is my bad. The dynamic-base is used at doc-generation-time. Changes to that are not reflected until the docs are regenerated (i.e. a new PyPI version of Hail is released). The short-term fix is to release Hail. The long-term fix is to not make changes to dynamic-base.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10277#issuecomment-813617813
https://github.com/hail-is/hail/pull/10278#issuecomment-813632797:83,Integrability,inject,injection,83,I'm a little confused. The snippet in the PR body gives impression that the sphinx injection happens after inserting the headers/footers. Should the raw blocks be the other way around?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10278#issuecomment-813632797
https://github.com/hail-is/hail/pull/10278#issuecomment-813632797:83,Security,inject,injection,83,I'm a little confused. The snippet in the PR body gives impression that the sphinx injection happens after inserting the headers/footers. Should the raw blocks be the other way around?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10278#issuecomment-813632797
https://github.com/hail-is/hail/pull/10278#issuecomment-813640189:104,Integrability,inject,injection,104,"It seems that it does happen after the header is inserted but the footers are inserted after the Sphinx injection for the main block. So, will we need to create a separate CSS file for when the website runs through a second time it is pulling the most up-to-date styling changes?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10278#issuecomment-813640189
https://github.com/hail-is/hail/pull/10278#issuecomment-813640189:104,Security,inject,injection,104,"It seems that it does happen after the header is inserted but the footers are inserted after the Sphinx injection for the main block. So, will we need to create a separate CSS file for when the website runs through a second time it is pulling the most up-to-date styling changes?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10278#issuecomment-813640189
https://github.com/hail-is/hail/pull/10278#issuecomment-814433087:2779,Deployability,toggle,toggler,2779,">; <h2>Returns</h2>; <a href=""https://python3.org/..../int"">int</a>; {% endraw %}; </div>; {% include ""nav-bottom.html"" %}; {% include ""base-foot.html"" %}; </body>; </html>. ```. The `website` service/k8s-pod/program ""serves the website"" wherein it *runs jinja2 again* and finally produces the HTML that you see on the website. That looks vaguely like this:. ```; <!DOCTYPE html>; <html lang=""en"">; <head>; <title>Hail | {% block title %}{% endblock %}</title>. <link rel=""stylesheet"" href=""/static/css/style.css?v=0.2.64-1ef70187dc78"">; <script src=""https://kit.fontawesome.com/7cdc07e2ca.js"" crossorigin=""anonymous""></script>; <!-- more Hail stuff -->. <link href=""_static/sphinx-style.css"">; <!-- more sphinx stuff here -->; </head>; <body>; <nav class=""navbar align-content-start justify-content-start sticky"" id=""hail-navbar"">; <div class=""container-fluid align-content-start justify-content-start d-flex"" id=""hail-container-fluid"">; <div class=""navbar-header"" id=""hail-navbar-header"">; <a class=""active"" id=""hail-navbar-brand"" href=""/"">; <img alt=""Hail"" height=""30"" id=""logo"" src=""/static/hail-logo-cropped-sm-opt.png"">; </a>; <button type=""button"" id=""navbar-toggler"" class=""navbar-toggler"" data-toggle=""collapse"" data-target=""#hail-navbar-collapse"" aria-expanded=""false"">; <span class=""icon-bar""></span>; <span class=""icon-bar""></span>; <span class=""icon-bar""></span>; </button>; </div>; <div class=""collapse navbar-collapse"" id=""hail-navbar-collapse"">; <span class=""algolia-autocomplete"" ...></span>; <ul class=""nav navbar-nav navbar-right"" id=""hail-menu"">; <li class=""nav-item""><a href=""/docs/0.2/index.html"">Docs</a></li>; <!-- more hail pages -->; </ul>; </div>; </div>; </nav>. <div id=""main'>; <h1><code>my_function</code></h1>; <p>Adds two numbers!</p>; <h2>Parameters</h2>; <ul><li>x : int First number to add.</li><li>y : int Second number to add.</li></ul>; <h2>Returns</h2>; <a href=""https://python3.org/..../int"">int</a>; </div>. <!-- Hail footer things -->; </body>; </html>. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10278#issuecomment-814433087
https://github.com/hail-is/hail/pull/10278#issuecomment-814433087:2802,Deployability,toggle,toggler,2802,">; <h2>Returns</h2>; <a href=""https://python3.org/..../int"">int</a>; {% endraw %}; </div>; {% include ""nav-bottom.html"" %}; {% include ""base-foot.html"" %}; </body>; </html>. ```. The `website` service/k8s-pod/program ""serves the website"" wherein it *runs jinja2 again* and finally produces the HTML that you see on the website. That looks vaguely like this:. ```; <!DOCTYPE html>; <html lang=""en"">; <head>; <title>Hail | {% block title %}{% endblock %}</title>. <link rel=""stylesheet"" href=""/static/css/style.css?v=0.2.64-1ef70187dc78"">; <script src=""https://kit.fontawesome.com/7cdc07e2ca.js"" crossorigin=""anonymous""></script>; <!-- more Hail stuff -->. <link href=""_static/sphinx-style.css"">; <!-- more sphinx stuff here -->; </head>; <body>; <nav class=""navbar align-content-start justify-content-start sticky"" id=""hail-navbar"">; <div class=""container-fluid align-content-start justify-content-start d-flex"" id=""hail-container-fluid"">; <div class=""navbar-header"" id=""hail-navbar-header"">; <a class=""active"" id=""hail-navbar-brand"" href=""/"">; <img alt=""Hail"" height=""30"" id=""logo"" src=""/static/hail-logo-cropped-sm-opt.png"">; </a>; <button type=""button"" id=""navbar-toggler"" class=""navbar-toggler"" data-toggle=""collapse"" data-target=""#hail-navbar-collapse"" aria-expanded=""false"">; <span class=""icon-bar""></span>; <span class=""icon-bar""></span>; <span class=""icon-bar""></span>; </button>; </div>; <div class=""collapse navbar-collapse"" id=""hail-navbar-collapse"">; <span class=""algolia-autocomplete"" ...></span>; <ul class=""nav navbar-nav navbar-right"" id=""hail-menu"">; <li class=""nav-item""><a href=""/docs/0.2/index.html"">Docs</a></li>; <!-- more hail pages -->; </ul>; </div>; </div>; </nav>. <div id=""main'>; <h1><code>my_function</code></h1>; <p>Adds two numbers!</p>; <h2>Parameters</h2>; <ul><li>x : int First number to add.</li><li>y : int Second number to add.</li></ul>; <h2>Returns</h2>; <a href=""https://python3.org/..../int"">int</a>; </div>. <!-- Hail footer things -->; </body>; </html>. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10278#issuecomment-814433087
https://github.com/hail-is/hail/pull/10278#issuecomment-814433087:2816,Deployability,toggle,toggle,2816,">; <h2>Returns</h2>; <a href=""https://python3.org/..../int"">int</a>; {% endraw %}; </div>; {% include ""nav-bottom.html"" %}; {% include ""base-foot.html"" %}; </body>; </html>. ```. The `website` service/k8s-pod/program ""serves the website"" wherein it *runs jinja2 again* and finally produces the HTML that you see on the website. That looks vaguely like this:. ```; <!DOCTYPE html>; <html lang=""en"">; <head>; <title>Hail | {% block title %}{% endblock %}</title>. <link rel=""stylesheet"" href=""/static/css/style.css?v=0.2.64-1ef70187dc78"">; <script src=""https://kit.fontawesome.com/7cdc07e2ca.js"" crossorigin=""anonymous""></script>; <!-- more Hail stuff -->. <link href=""_static/sphinx-style.css"">; <!-- more sphinx stuff here -->; </head>; <body>; <nav class=""navbar align-content-start justify-content-start sticky"" id=""hail-navbar"">; <div class=""container-fluid align-content-start justify-content-start d-flex"" id=""hail-container-fluid"">; <div class=""navbar-header"" id=""hail-navbar-header"">; <a class=""active"" id=""hail-navbar-brand"" href=""/"">; <img alt=""Hail"" height=""30"" id=""logo"" src=""/static/hail-logo-cropped-sm-opt.png"">; </a>; <button type=""button"" id=""navbar-toggler"" class=""navbar-toggler"" data-toggle=""collapse"" data-target=""#hail-navbar-collapse"" aria-expanded=""false"">; <span class=""icon-bar""></span>; <span class=""icon-bar""></span>; <span class=""icon-bar""></span>; </button>; </div>; <div class=""collapse navbar-collapse"" id=""hail-navbar-collapse"">; <span class=""algolia-autocomplete"" ...></span>; <ul class=""nav navbar-nav navbar-right"" id=""hail-menu"">; <li class=""nav-item""><a href=""/docs/0.2/index.html"">Docs</a></li>; <!-- more hail pages -->; </ul>; </div>; </div>; </nav>. <div id=""main'>; <h1><code>my_function</code></h1>; <p>Adds two numbers!</p>; <h2>Parameters</h2>; <ul><li>x : int First number to add.</li><li>y : int Second number to add.</li></ul>; <h2>Returns</h2>; <a href=""https://python3.org/..../int"">int</a>; </div>. <!-- Hail footer things -->; </body>; </html>. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10278#issuecomment-814433087
https://github.com/hail-is/hail/pull/10278#issuecomment-814433087:2689,Testability,log,logo,2689,"meters</h2>; <ul><li>x : int First number to add.</li><li>y : int Second number to add.</li></ul>; <h2>Returns</h2>; <a href=""https://python3.org/..../int"">int</a>; {% endraw %}; </div>; {% include ""nav-bottom.html"" %}; {% include ""base-foot.html"" %}; </body>; </html>. ```. The `website` service/k8s-pod/program ""serves the website"" wherein it *runs jinja2 again* and finally produces the HTML that you see on the website. That looks vaguely like this:. ```; <!DOCTYPE html>; <html lang=""en"">; <head>; <title>Hail | {% block title %}{% endblock %}</title>. <link rel=""stylesheet"" href=""/static/css/style.css?v=0.2.64-1ef70187dc78"">; <script src=""https://kit.fontawesome.com/7cdc07e2ca.js"" crossorigin=""anonymous""></script>; <!-- more Hail stuff -->. <link href=""_static/sphinx-style.css"">; <!-- more sphinx stuff here -->; </head>; <body>; <nav class=""navbar align-content-start justify-content-start sticky"" id=""hail-navbar"">; <div class=""container-fluid align-content-start justify-content-start d-flex"" id=""hail-container-fluid"">; <div class=""navbar-header"" id=""hail-navbar-header"">; <a class=""active"" id=""hail-navbar-brand"" href=""/"">; <img alt=""Hail"" height=""30"" id=""logo"" src=""/static/hail-logo-cropped-sm-opt.png"">; </a>; <button type=""button"" id=""navbar-toggler"" class=""navbar-toggler"" data-toggle=""collapse"" data-target=""#hail-navbar-collapse"" aria-expanded=""false"">; <span class=""icon-bar""></span>; <span class=""icon-bar""></span>; <span class=""icon-bar""></span>; </button>; </div>; <div class=""collapse navbar-collapse"" id=""hail-navbar-collapse"">; <span class=""algolia-autocomplete"" ...></span>; <ul class=""nav navbar-nav navbar-right"" id=""hail-menu"">; <li class=""nav-item""><a href=""/docs/0.2/index.html"">Docs</a></li>; <!-- more hail pages -->; </ul>; </div>; </div>; </nav>. <div id=""main'>; <h1><code>my_function</code></h1>; <p>Adds two numbers!</p>; <h2>Parameters</h2>; <ul><li>x : int First number to add.</li><li>y : int Second number to add.</li></ul>; <h2>Returns</h2>; <a href=""h",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10278#issuecomment-814433087
https://github.com/hail-is/hail/pull/10278#issuecomment-814433087:2713,Testability,log,logo-cropped-sm-opt,2713,"meters</h2>; <ul><li>x : int First number to add.</li><li>y : int Second number to add.</li></ul>; <h2>Returns</h2>; <a href=""https://python3.org/..../int"">int</a>; {% endraw %}; </div>; {% include ""nav-bottom.html"" %}; {% include ""base-foot.html"" %}; </body>; </html>. ```. The `website` service/k8s-pod/program ""serves the website"" wherein it *runs jinja2 again* and finally produces the HTML that you see on the website. That looks vaguely like this:. ```; <!DOCTYPE html>; <html lang=""en"">; <head>; <title>Hail | {% block title %}{% endblock %}</title>. <link rel=""stylesheet"" href=""/static/css/style.css?v=0.2.64-1ef70187dc78"">; <script src=""https://kit.fontawesome.com/7cdc07e2ca.js"" crossorigin=""anonymous""></script>; <!-- more Hail stuff -->. <link href=""_static/sphinx-style.css"">; <!-- more sphinx stuff here -->; </head>; <body>; <nav class=""navbar align-content-start justify-content-start sticky"" id=""hail-navbar"">; <div class=""container-fluid align-content-start justify-content-start d-flex"" id=""hail-container-fluid"">; <div class=""navbar-header"" id=""hail-navbar-header"">; <a class=""active"" id=""hail-navbar-brand"" href=""/"">; <img alt=""Hail"" height=""30"" id=""logo"" src=""/static/hail-logo-cropped-sm-opt.png"">; </a>; <button type=""button"" id=""navbar-toggler"" class=""navbar-toggler"" data-toggle=""collapse"" data-target=""#hail-navbar-collapse"" aria-expanded=""false"">; <span class=""icon-bar""></span>; <span class=""icon-bar""></span>; <span class=""icon-bar""></span>; </button>; </div>; <div class=""collapse navbar-collapse"" id=""hail-navbar-collapse"">; <span class=""algolia-autocomplete"" ...></span>; <ul class=""nav navbar-nav navbar-right"" id=""hail-menu"">; <li class=""nav-item""><a href=""/docs/0.2/index.html"">Docs</a></li>; <!-- more hail pages -->; </ul>; </div>; </div>; </nav>. <div id=""main'>; <h1><code>my_function</code></h1>; <p>Adds two numbers!</p>; <h2>Parameters</h2>; <ul><li>x : int First number to add.</li><li>y : int Second number to add.</li></ul>; <h2>Returns</h2>; <a href=""h",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10278#issuecomment-814433087
https://github.com/hail-is/hail/pull/10278#issuecomment-824386759:38,Deployability,release,release,38,"bump, I want to get this in before we release again",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10278#issuecomment-824386759
https://github.com/hail-is/hail/pull/10282#issuecomment-818271521:60,Integrability,depend,dependency,60,This appears to have triggered a new version of some Python dependency which is breaking Sphinx's generation of the docs. I'm going to try updating all our Sphinx versions to the latest version of Sphinx. Hoping for the best.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10282#issuecomment-818271521
https://github.com/hail-is/hail/pull/10283#issuecomment-841410983:543,Integrability,interface,interface,543,"I think this code needed to be more complicated than you desired because you're not handling the case where someone can request something like this:. ```python3; j = b.new_job(); j.memory('standard'); j.cpu(1); j.preemptible(False); ```. Your solution would require that any non preemptible job would have to be like this:. ```python3; j = b.new_job(); j.machine_type('n1-standard-1', preemptible=False); ```. I was trying to make things easier for the user, especially once we live in a world where we have amazon, azure, etc. But maybe your interface is fine and we drop the preemptible method and put it on machine_type only. In our design discussions, we had decided that we'd support the former interface and select the correct / cheapest machine type for the user automatically. I think we should have another interface discussion, especially since we might be supporting other clouds, before we finalize this PR.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10283#issuecomment-841410983
https://github.com/hail-is/hail/pull/10283#issuecomment-841410983:700,Integrability,interface,interface,700,"I think this code needed to be more complicated than you desired because you're not handling the case where someone can request something like this:. ```python3; j = b.new_job(); j.memory('standard'); j.cpu(1); j.preemptible(False); ```. Your solution would require that any non preemptible job would have to be like this:. ```python3; j = b.new_job(); j.machine_type('n1-standard-1', preemptible=False); ```. I was trying to make things easier for the user, especially once we live in a world where we have amazon, azure, etc. But maybe your interface is fine and we drop the preemptible method and put it on machine_type only. In our design discussions, we had decided that we'd support the former interface and select the correct / cheapest machine type for the user automatically. I think we should have another interface discussion, especially since we might be supporting other clouds, before we finalize this PR.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10283#issuecomment-841410983
https://github.com/hail-is/hail/pull/10283#issuecomment-841410983:816,Integrability,interface,interface,816,"I think this code needed to be more complicated than you desired because you're not handling the case where someone can request something like this:. ```python3; j = b.new_job(); j.memory('standard'); j.cpu(1); j.preemptible(False); ```. Your solution would require that any non preemptible job would have to be like this:. ```python3; j = b.new_job(); j.machine_type('n1-standard-1', preemptible=False); ```. I was trying to make things easier for the user, especially once we live in a world where we have amazon, azure, etc. But maybe your interface is fine and we drop the preemptible method and put it on machine_type only. In our design discussions, we had decided that we'd support the former interface and select the correct / cheapest machine type for the user automatically. I think we should have another interface discussion, especially since we might be supporting other clouds, before we finalize this PR.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10283#issuecomment-841410983
https://github.com/hail-is/hail/pull/10304#issuecomment-818697173:223,Safety,Unsafe,UnsafeRow,223,"Oh yes duh, thanks. Will fix. On Tue, Apr 13, 2021, 8:29 AM Tim Poterba ***@***.***> wrote:. > ***@***.**** commented on this pull request.; > ------------------------------; >; > In hail/src/main/scala/is/hail/annotations/UnsafeRow.scala; > <https://github.com/hail-is/hail/pull/10304#discussion_r612399889>:; >; > >; > case r: Row =>; > r.toSeq.forall(isSafe); > case a: IndexedSeq[_] =>; > a.forall(isSafe); > case i: Interval =>; > isSafe(i.start) && isSafe(i.end); > + case nd: NDArray =>; > + isSafe(nd.getRowMajorElements().forall(isSafe)); >; > oh! I see.; >; > Should be; >; > nd.getRowMajorElements().forall(isSafe)); >; > though, right? (still probably works as written, but does an extra isSafe; > on the Boolean returned by forall); >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/hail-is/hail/pull/10304#discussion_r612399889>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADJCWEQ7FSKURD6DFT3KGPDTIQ2JBANCNFSM422IOPNA>; > .; >",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10304#issuecomment-818697173
https://github.com/hail-is/hail/pull/10309#issuecomment-821250865:149,Performance,cache,cache,149,"I think that's right, though we serialize other potentially private information. I think we ought to have a per-organization (Hail billing project?) cache, but also not very high priority. I'd be pretty chuffed to learn we're running important enough stuff that people are attempting timing attacks on our cache to learn what queries other people are executing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10309#issuecomment-821250865
https://github.com/hail-is/hail/pull/10309#issuecomment-821250865:306,Performance,cache,cache,306,"I think that's right, though we serialize other potentially private information. I think we ought to have a per-organization (Hail billing project?) cache, but also not very high priority. I'd be pretty chuffed to learn we're running important enough stuff that people are attempting timing attacks on our cache to learn what queries other people are executing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10309#issuecomment-821250865
https://github.com/hail-is/hail/pull/10309#issuecomment-821250865:291,Security,attack,attacks,291,"I think that's right, though we serialize other potentially private information. I think we ought to have a per-organization (Hail billing project?) cache, but also not very high priority. I'd be pretty chuffed to learn we're running important enough stuff that people are attempting timing attacks on our cache to learn what queries other people are executing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10309#issuecomment-821250865
https://github.com/hail-is/hail/pull/10309#issuecomment-821250865:214,Usability,learn,learn,214,"I think that's right, though we serialize other potentially private information. I think we ought to have a per-organization (Hail billing project?) cache, but also not very high priority. I'd be pretty chuffed to learn we're running important enough stuff that people are attempting timing attacks on our cache to learn what queries other people are executing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10309#issuecomment-821250865
https://github.com/hail-is/hail/pull/10309#issuecomment-821250865:315,Usability,learn,learn,315,"I think that's right, though we serialize other potentially private information. I think we ought to have a per-organization (Hail billing project?) cache, but also not very high priority. I'd be pretty chuffed to learn we're running important enough stuff that people are attempting timing attacks on our cache to learn what queries other people are executing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10309#issuecomment-821250865
https://github.com/hail-is/hail/pull/10314#issuecomment-819561603:19,Testability,test,tests,19,I want to add some tests first.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10314#issuecomment-819561603
https://github.com/hail-is/hail/pull/10325#issuecomment-819729595:67,Availability,error,error,67,"It should never not be in the database. That's why it should be an error if we get an event for an instance we've never created before. The reason we keep getting these events is because when we run this query:. ```; filter = f'''; logName=""projects/{PROJECT}/logs/cloudaudit.googleapis.com%2Factivity"" AND; resource.type=gce_instance AND; protoPayload.resourceName:""{self.machine_name_prefix}"" AND; timestamp >= ""{mark}""; '''; ```. We have `timestamp >= {mark}`. This means if `mark` doesn't change each time the event polling loop reruns, then we'll always keep getting the same event as the last one processed. We need that `>=` though because different events can have the same timestamp. So the driver could have been shut down in the middle of processing multiple events with the same timestamp. So we do the conservative thing and try to reprocess the event again until the mark changes to a different timestamp. Does that make sense?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10325#issuecomment-819729595
https://github.com/hail-is/hail/pull/10325#issuecomment-819729595:728,Availability,down,down,728,"It should never not be in the database. That's why it should be an error if we get an event for an instance we've never created before. The reason we keep getting these events is because when we run this query:. ```; filter = f'''; logName=""projects/{PROJECT}/logs/cloudaudit.googleapis.com%2Factivity"" AND; resource.type=gce_instance AND; protoPayload.resourceName:""{self.machine_name_prefix}"" AND; timestamp >= ""{mark}""; '''; ```. We have `timestamp >= {mark}`. This means if `mark` doesn't change each time the event polling loop reruns, then we'll always keep getting the same event as the last one processed. We need that `>=` though because different events can have the same timestamp. So the driver could have been shut down in the middle of processing multiple events with the same timestamp. So we do the conservative thing and try to reprocess the event again until the mark changes to a different timestamp. Does that make sense?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10325#issuecomment-819729595
https://github.com/hail-is/hail/pull/10325#issuecomment-819729595:232,Testability,log,logName,232,"It should never not be in the database. That's why it should be an error if we get an event for an instance we've never created before. The reason we keep getting these events is because when we run this query:. ```; filter = f'''; logName=""projects/{PROJECT}/logs/cloudaudit.googleapis.com%2Factivity"" AND; resource.type=gce_instance AND; protoPayload.resourceName:""{self.machine_name_prefix}"" AND; timestamp >= ""{mark}""; '''; ```. We have `timestamp >= {mark}`. This means if `mark` doesn't change each time the event polling loop reruns, then we'll always keep getting the same event as the last one processed. We need that `>=` though because different events can have the same timestamp. So the driver could have been shut down in the middle of processing multiple events with the same timestamp. So we do the conservative thing and try to reprocess the event again until the mark changes to a different timestamp. Does that make sense?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10325#issuecomment-819729595
https://github.com/hail-is/hail/pull/10325#issuecomment-819729595:260,Testability,log,logs,260,"It should never not be in the database. That's why it should be an error if we get an event for an instance we've never created before. The reason we keep getting these events is because when we run this query:. ```; filter = f'''; logName=""projects/{PROJECT}/logs/cloudaudit.googleapis.com%2Factivity"" AND; resource.type=gce_instance AND; protoPayload.resourceName:""{self.machine_name_prefix}"" AND; timestamp >= ""{mark}""; '''; ```. We have `timestamp >= {mark}`. This means if `mark` doesn't change each time the event polling loop reruns, then we'll always keep getting the same event as the last one processed. We need that `>=` though because different events can have the same timestamp. So the driver could have been shut down in the middle of processing multiple events with the same timestamp. So we do the conservative thing and try to reprocess the event again until the mark changes to a different timestamp. Does that make sense?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10325#issuecomment-819729595
https://github.com/hail-is/hail/pull/10330#issuecomment-820557463:15,Testability,test,test,15,can we add the test in here?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-820557463
https://github.com/hail-is/hail/pull/10330#issuecomment-820620715:183,Availability,error,error,183,"Ah, I was hoping the pca tests would start passing on the local backend with this change, but there are of course pruner issues. I'll have to try and craft a test that runs into this error.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-820620715
https://github.com/hail-is/hail/pull/10330#issuecomment-820620715:25,Testability,test,tests,25,"Ah, I was hoping the pca tests would start passing on the local backend with this change, but there are of course pruner issues. I'll have to try and craft a test that runs into this error.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-820620715
https://github.com/hail-is/hail/pull/10330#issuecomment-820620715:158,Testability,test,test,158,"Ah, I was hoping the pca tests would start passing on the local backend with this change, but there are of course pruner issues. I'll have to try and craft a test that runs into this error.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-820620715
https://github.com/hail-is/hail/pull/10330#issuecomment-821205840:11,Testability,Test,Test,11,"```scala; @Test def testStreamLenUnconsumedInnerStream(): Unit = {; assertEvalsTo(StreamLen(; mapIR(StreamGrouped(filterIR(rangeIR(10))(x => x.cne(0)), 3))( group => ToArray(group)); ), 3); }. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-821205840
https://github.com/hail-is/hail/pull/10330#issuecomment-821205840:20,Testability,test,testStreamLenUnconsumedInnerStream,20,"```scala; @Test def testStreamLenUnconsumedInnerStream(): Unit = {; assertEvalsTo(StreamLen(; mapIR(StreamGrouped(filterIR(rangeIR(10))(x => x.cne(0)), 3))( group => ToArray(group)); ), 3); }. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-821205840
https://github.com/hail-is/hail/pull/10330#issuecomment-821205840:68,Testability,assert,assertEvalsTo,68,"```scala; @Test def testStreamLenUnconsumedInnerStream(): Unit = {; assertEvalsTo(StreamLen(; mapIR(StreamGrouped(filterIR(rangeIR(10))(x => x.cne(0)), 3))( group => ToArray(group)); ), 3); }. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-821205840
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:160,Availability,ERROR,ERROR,160,"@tpoterba That test doesn't pass, even with this fix:. ```; 2021-04-26 15:57:13 Hail: INFO: Running Hail version 0.2.65-77eb6e1a1cf4; 2021-04-26 15:57:14 Hail: ERROR: error from strategy JvmCompile. java.lang.RuntimeException: unrealizable value unused asymmetrically: eos=false, ped=true. 	at is.hail.expr.ir.streams.StreamProducer$.defineUnusedLabels(EmitStream.scala:29); 	at is.hail.expr.ir.Emit.$anonfun$emitI$68(Emit.scala:1080); 	at is.hail.expr.ir.IEmitCodeGen.map(Emit.scala:304); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:1065); 	at is.hail.expr.ir.Emit.emitInNewBuilder$1(Emit.scala:674); 	at is.hail.expr.ir.Emit.$anonfun$emitI$26(Emit.scala:816); 	at is.hail.expr.ir.EmitCode$.fromI(Emit.scala:391); 	at is.hail.expr.ir.Emit.$anonfun$emitI$25(Emit.scala:816); 	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:286); 	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62); 	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55); 	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49); 	at scala.collection.TraversableLike.map(TraversableLike.scala:286); 	at scala.collection.TraversableLike.map$(TraversableLike.scala:279); 	at scala.collection.AbstractTraversable.map(Traversable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:167,Availability,error,error,167,"@tpoterba That test doesn't pass, even with this fix:. ```; 2021-04-26 15:57:13 Hail: INFO: Running Hail version 0.2.65-77eb6e1a1cf4; 2021-04-26 15:57:14 Hail: ERROR: error from strategy JvmCompile. java.lang.RuntimeException: unrealizable value unused asymmetrically: eos=false, ped=true. 	at is.hail.expr.ir.streams.StreamProducer$.defineUnusedLabels(EmitStream.scala:29); 	at is.hail.expr.ir.Emit.$anonfun$emitI$68(Emit.scala:1080); 	at is.hail.expr.ir.IEmitCodeGen.map(Emit.scala:304); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:1065); 	at is.hail.expr.ir.Emit.emitInNewBuilder$1(Emit.scala:674); 	at is.hail.expr.ir.Emit.$anonfun$emitI$26(Emit.scala:816); 	at is.hail.expr.ir.EmitCode$.fromI(Emit.scala:391); 	at is.hail.expr.ir.Emit.$anonfun$emitI$25(Emit.scala:816); 	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:286); 	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62); 	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55); 	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49); 	at scala.collection.TraversableLike.map(TraversableLike.scala:286); 	at scala.collection.TraversableLike.map$(TraversableLike.scala:279); 	at scala.collection.AbstractTraversable.map(Traversable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:2300,Energy Efficiency,adapt,adapted,2300,.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:1647,Integrability,Wrap,WrappedEmitMethodBuilder,1647, 	at is.hail.expr.ir.EmitCode$.fromI(Emit.scala:391); 	at is.hail.expr.ir.Emit.$anonfun$emitI$25(Emit.scala:816); 	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:286); 	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62); 	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55); 	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49); 	at scala.collection.TraversableLike.map(TraversableLike.scala:286); 	at scala.collection.TraversableLike.map$(TraversableLike.scala:279); 	at scala.collection.AbstractTraversable.map(Traversable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13);,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:1738,Integrability,Wrap,WrappedEmitMethodBuilder,1738,tI$25(Emit.scala:816); 	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:286); 	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62); 	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55); 	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49); 	at scala.collection.TraversableLike.map(TraversableLike.scala:286); 	at scala.collection.TraversableLike.map$(TraversableLike.scala:279); 	at scala.collection.AbstractTraversable.map(Traversable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.s,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:2300,Modifiability,adapt,adapted,2300,.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:15,Testability,test,test,15,"@tpoterba That test doesn't pass, even with this fix:. ```; 2021-04-26 15:57:13 Hail: INFO: Running Hail version 0.2.65-77eb6e1a1cf4; 2021-04-26 15:57:14 Hail: ERROR: error from strategy JvmCompile. java.lang.RuntimeException: unrealizable value unused asymmetrically: eos=false, ped=true. 	at is.hail.expr.ir.streams.StreamProducer$.defineUnusedLabels(EmitStream.scala:29); 	at is.hail.expr.ir.Emit.$anonfun$emitI$68(Emit.scala:1080); 	at is.hail.expr.ir.IEmitCodeGen.map(Emit.scala:304); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:1065); 	at is.hail.expr.ir.Emit.emitInNewBuilder$1(Emit.scala:674); 	at is.hail.expr.ir.Emit.$anonfun$emitI$26(Emit.scala:816); 	at is.hail.expr.ir.EmitCode$.fromI(Emit.scala:391); 	at is.hail.expr.ir.Emit.$anonfun$emitI$25(Emit.scala:816); 	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:286); 	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62); 	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55); 	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49); 	at scala.collection.TraversableLike.map(TraversableLike.scala:286); 	at scala.collection.TraversableLike.map$(TraversableLike.scala:279); 	at scala.collection.AbstractTraversable.map(Traversable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:2010,Testability,Test,TestUtils,2010,cala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49); 	at scala.collection.TraversableLike.map(TraversableLike.scala:286); 	at scala.collection.TraversableLike.map$(TraversableLike.scala:279); 	at scala.collection.AbstractTraversable.map(Traversable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:2026,Testability,Test,TestUtils,2026,on.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49); 	at scala.collection.TraversableLike.map(TraversableLike.scala:286); 	at scala.collection.TraversableLike.map$(TraversableLike.scala:279); 	at scala.collection.AbstractTraversable.map(Traversable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	a,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:2060,Testability,Test,TestUtils,2060,uffer.scala:49); 	at scala.collection.TraversableLike.map(TraversableLike.scala:286); 	at scala.collection.TraversableLike.map$(TraversableLike.scala:279); 	at scala.collection.AbstractTraversable.map(Traversable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(Te,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:2080,Testability,assert,assertEvalsTo,2080,ala.collection.TraversableLike.map(TraversableLike.scala:286); 	at scala.collection.TraversableLike.map$(TraversableLike.scala:279); 	at scala.collection.AbstractTraversable.map(Traversable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:2096,Testability,Test,TestUtils,2096,ala.collection.TraversableLike.map(TraversableLike.scala:286); 	at scala.collection.TraversableLike.map$(TraversableLike.scala:279); 	at scala.collection.AbstractTraversable.map(Traversable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:2194,Testability,Test,TestUtils,2194,sableLike.scala:279); 	at scala.collection.AbstractTraversable.map(Traversable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInne,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:2214,Testability,assert,assertEvalsTo,2214,at scala.collection.AbstractTraversable.map(Traversable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:2230,Testability,Test,TestUtils,2230,at scala.collection.AbstractTraversable.map(Traversable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:2264,Testability,Test,TestUtils,2264,versable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:2284,Testability,assert,assertEvalsTo,2284,.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:2308,Testability,Test,TestUtils,2308,.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3039,Testability,Test,TestUtils,3039,6); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.t,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3050,Testability,assert,assertEvalsTo,3050,stUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3064,Testability,Test,TestUtils,3064,stUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3098,Testability,Test,TestUtils,3098,ls.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.S,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3109,Testability,assert,assertEvalsTo,3109, scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3123,Testability,Test,TestUtils,3123, scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3173,Testability,test,testStreamLenUnconsumedInnerStream,3173,TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteR,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3530,Testability,test,testng,3530,cala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.t,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3623,Testability,test,testng,3623,Pool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057);,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3687,Testability,test,testng,3687,ntext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestN,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3755,Testability,test,testng,3755,arkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(Remo,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3825,Testability,test,testng,3825,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3841,Testability,Test,TestMethodWorker,3841,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3876,Testability,Test,TestMethodWorker,3876,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3912,Testability,test,testng,3912,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3928,Testability,Test,TestMethodWorker,3928,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3949,Testability,Test,TestMethodWorker,3949,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3985,Testability,test,testng,3985,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3992,Testability,Test,TestRunner,3992,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4014,Testability,Test,TestRunner,4014,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4044,Testability,test,testng,4044,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4051,Testability,Test,TestRunner,4051,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4066,Testability,Test,TestRunner,4066,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4096,Testability,test,testng,4096,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4154,Testability,test,testng,4154,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4220,Testability,test,testng,4220,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4281,Testability,test,testng,4281,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4335,Testability,test,testng,4335,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4405,Testability,test,testng,4405,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4470,Testability,test,testng,4470,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4477,Testability,Test,TestNG,4477,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4506,Testability,Test,TestNG,4506,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4533,Testability,test,testng,4533,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4540,Testability,Test,TestNG,4540,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4564,Testability,Test,TestNG,4564,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4591,Testability,test,testng,4591,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4598,Testability,Test,TestNG,4598,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4609,Testability,Test,TestNG,4609,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4648,Testability,test,testng,4648,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:4723,Testability,test,testng,4723,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604
https://github.com/hail-is/hail/pull/10331#issuecomment-820662160:86,Modifiability,rewrite,rewrite,86,I left in google_storage.py in for now because Benchmark uses it and I didn't want to rewrite that right now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10331#issuecomment-820662160
https://github.com/hail-is/hail/pull/10331#issuecomment-820662160:47,Testability,Benchmark,Benchmark,47,I left in google_storage.py in for now because Benchmark uses it and I didn't want to rewrite that right now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10331#issuecomment-820662160
https://github.com/hail-is/hail/pull/10331#issuecomment-837285025:47,Testability,test,tests,47,I'm having a lot of trouble getting the memory tests to pass...,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10331#issuecomment-837285025
https://github.com/hail-is/hail/pull/10331#issuecomment-842574828:130,Integrability,interface,interface,130,"We'd need a synchronous version of the file system. I thought this was something Cotton wanted to do himself. With regards to the interface changes, I'm not sure if Cotton had something else in mind.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10331#issuecomment-842574828
https://github.com/hail-is/hail/pull/10347#issuecomment-824439697:400,Availability,avail,available,400,"Thanks so much Daniel!! This is awesome. I can't seem to be able to merge though, probably due to permissions?; <img width=""516"" alt=""Screen Shot 2021-04-22 at 9 58 00 am"" src=""https://user-images.githubusercontent.com/1575412/115636406-3ada5e00-a351-11eb-887d-3882271f6369.png"">. There are also conflicts, but I'm resolving them right now :). UPD: Ah, learned from Leo that the merge button will be available after the tests pass :)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10347#issuecomment-824439697
https://github.com/hail-is/hail/pull/10347#issuecomment-824439697:420,Testability,test,tests,420,"Thanks so much Daniel!! This is awesome. I can't seem to be able to merge though, probably due to permissions?; <img width=""516"" alt=""Screen Shot 2021-04-22 at 9 58 00 am"" src=""https://user-images.githubusercontent.com/1575412/115636406-3ada5e00-a351-11eb-887d-3882271f6369.png"">. There are also conflicts, but I'm resolving them right now :). UPD: Ah, learned from Leo that the merge button will be available after the tests pass :)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10347#issuecomment-824439697
https://github.com/hail-is/hail/pull/10347#issuecomment-824439697:353,Usability,learn,learned,353,"Thanks so much Daniel!! This is awesome. I can't seem to be able to merge though, probably due to permissions?; <img width=""516"" alt=""Screen Shot 2021-04-22 at 9 58 00 am"" src=""https://user-images.githubusercontent.com/1575412/115636406-3ada5e00-a351-11eb-887d-3882271f6369.png"">. There are also conflicts, but I'm resolving them right now :). UPD: Ah, learned from Leo that the merge button will be available after the tests pass :)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10347#issuecomment-824439697
https://github.com/hail-is/hail/pull/10347#issuecomment-824489394:71,Testability,test,tests,71,No worries @vladsaveliev! I put this PR up just to work through the CI tests. I meant once you merge my changes into your branch and your PR goes in I will close this one.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10347#issuecomment-824489394
https://github.com/hail-is/hail/pull/10347#issuecomment-826181213:44,Safety,avoid,avoid,44,"Hm ok, I'm going to push this PR through to avoid more merge conflict setbacks and think about how to improve this workflow for the future. Sorry for all the hassle!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10347#issuecomment-826181213
https://github.com/hail-is/hail/pull/10349#issuecomment-824032425:29,Modifiability,flexible,flexible,29,"For `hail` we’ve tried to be flexible, but We can move the lower bound or add an upper bound if necessary. I’d this is services stuff that’s just a mistake, definitely pin if you’d like.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10349#issuecomment-824032425
https://github.com/hail-is/hail/pull/10349#issuecomment-824092733:4,Availability,failure,failure,4,"The failure doesn't appear to be related to my changes. Installing the docker requirements, which has `setuptools>=38.6.0`, is trying to upgrade to the latest setuptools (56.0.0). Another dependency might be forcing the upgrade. However, setuptools was installed via apt, not pip, and that is causing this:. ```; Attempting uninstall: setuptools; Found existing installation: setuptools 45.2.0; Not uninstalling setuptools at /usr/lib/python3/dist-packages, outside environment /usr; Can't uninstall 'setuptools'. No files were found to uninstall.; ```. So there's two things I don't understand. I'll keep investigating. I glad I PRed this separately!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10349#issuecomment-824092733
https://github.com/hail-is/hail/pull/10349#issuecomment-824092733:56,Deployability,Install,Installing,56,"The failure doesn't appear to be related to my changes. Installing the docker requirements, which has `setuptools>=38.6.0`, is trying to upgrade to the latest setuptools (56.0.0). Another dependency might be forcing the upgrade. However, setuptools was installed via apt, not pip, and that is causing this:. ```; Attempting uninstall: setuptools; Found existing installation: setuptools 45.2.0; Not uninstalling setuptools at /usr/lib/python3/dist-packages, outside environment /usr; Can't uninstall 'setuptools'. No files were found to uninstall.; ```. So there's two things I don't understand. I'll keep investigating. I glad I PRed this separately!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10349#issuecomment-824092733
https://github.com/hail-is/hail/pull/10349#issuecomment-824092733:137,Deployability,upgrade,upgrade,137,"The failure doesn't appear to be related to my changes. Installing the docker requirements, which has `setuptools>=38.6.0`, is trying to upgrade to the latest setuptools (56.0.0). Another dependency might be forcing the upgrade. However, setuptools was installed via apt, not pip, and that is causing this:. ```; Attempting uninstall: setuptools; Found existing installation: setuptools 45.2.0; Not uninstalling setuptools at /usr/lib/python3/dist-packages, outside environment /usr; Can't uninstall 'setuptools'. No files were found to uninstall.; ```. So there's two things I don't understand. I'll keep investigating. I glad I PRed this separately!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10349#issuecomment-824092733
https://github.com/hail-is/hail/pull/10349#issuecomment-824092733:220,Deployability,upgrade,upgrade,220,"The failure doesn't appear to be related to my changes. Installing the docker requirements, which has `setuptools>=38.6.0`, is trying to upgrade to the latest setuptools (56.0.0). Another dependency might be forcing the upgrade. However, setuptools was installed via apt, not pip, and that is causing this:. ```; Attempting uninstall: setuptools; Found existing installation: setuptools 45.2.0; Not uninstalling setuptools at /usr/lib/python3/dist-packages, outside environment /usr; Can't uninstall 'setuptools'. No files were found to uninstall.; ```. So there's two things I don't understand. I'll keep investigating. I glad I PRed this separately!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10349#issuecomment-824092733
https://github.com/hail-is/hail/pull/10349#issuecomment-824092733:253,Deployability,install,installed,253,"The failure doesn't appear to be related to my changes. Installing the docker requirements, which has `setuptools>=38.6.0`, is trying to upgrade to the latest setuptools (56.0.0). Another dependency might be forcing the upgrade. However, setuptools was installed via apt, not pip, and that is causing this:. ```; Attempting uninstall: setuptools; Found existing installation: setuptools 45.2.0; Not uninstalling setuptools at /usr/lib/python3/dist-packages, outside environment /usr; Can't uninstall 'setuptools'. No files were found to uninstall.; ```. So there's two things I don't understand. I'll keep investigating. I glad I PRed this separately!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10349#issuecomment-824092733
https://github.com/hail-is/hail/pull/10349#issuecomment-824092733:362,Deployability,install,installation,362,"The failure doesn't appear to be related to my changes. Installing the docker requirements, which has `setuptools>=38.6.0`, is trying to upgrade to the latest setuptools (56.0.0). Another dependency might be forcing the upgrade. However, setuptools was installed via apt, not pip, and that is causing this:. ```; Attempting uninstall: setuptools; Found existing installation: setuptools 45.2.0; Not uninstalling setuptools at /usr/lib/python3/dist-packages, outside environment /usr; Can't uninstall 'setuptools'. No files were found to uninstall.; ```. So there's two things I don't understand. I'll keep investigating. I glad I PRed this separately!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10349#issuecomment-824092733
https://github.com/hail-is/hail/pull/10349#issuecomment-824092733:188,Integrability,depend,dependency,188,"The failure doesn't appear to be related to my changes. Installing the docker requirements, which has `setuptools>=38.6.0`, is trying to upgrade to the latest setuptools (56.0.0). Another dependency might be forcing the upgrade. However, setuptools was installed via apt, not pip, and that is causing this:. ```; Attempting uninstall: setuptools; Found existing installation: setuptools 45.2.0; Not uninstalling setuptools at /usr/lib/python3/dist-packages, outside environment /usr; Can't uninstall 'setuptools'. No files were found to uninstall.; ```. So there's two things I don't understand. I'll keep investigating. I glad I PRed this separately!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10349#issuecomment-824092733
https://github.com/hail-is/hail/pull/10349#issuecomment-843240422:54,Availability,error,error,54,"The setuptools thing was actually a red herring, that error isn't fatal, and there was a version conflict elsewhere. I upgraded urllib3 and requests to resolve.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10349#issuecomment-843240422
https://github.com/hail-is/hail/pull/10349#issuecomment-843240422:119,Deployability,upgrade,upgraded,119,"The setuptools thing was actually a red herring, that error isn't fatal, and there was a version conflict elsewhere. I upgraded urllib3 and requests to resolve.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10349#issuecomment-843240422
https://github.com/hail-is/hail/issues/10351#issuecomment-827844732:3,Deployability,update,update,3,"We update our docs with every release. Spark3 support went in between 0.2.64 and 0.2.65, which was released at the end of last week. Now says: ; > Hail should work with any Spark 3.1.1 cluster built with Scala 2.12. It's possible to compile Hail against other versions of Spark/Scala, but this is what we test against.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10351#issuecomment-827844732
https://github.com/hail-is/hail/issues/10351#issuecomment-827844732:30,Deployability,release,release,30,"We update our docs with every release. Spark3 support went in between 0.2.64 and 0.2.65, which was released at the end of last week. Now says: ; > Hail should work with any Spark 3.1.1 cluster built with Scala 2.12. It's possible to compile Hail against other versions of Spark/Scala, but this is what we test against.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10351#issuecomment-827844732
https://github.com/hail-is/hail/issues/10351#issuecomment-827844732:99,Deployability,release,released,99,"We update our docs with every release. Spark3 support went in between 0.2.64 and 0.2.65, which was released at the end of last week. Now says: ; > Hail should work with any Spark 3.1.1 cluster built with Scala 2.12. It's possible to compile Hail against other versions of Spark/Scala, but this is what we test against.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10351#issuecomment-827844732
https://github.com/hail-is/hail/issues/10351#issuecomment-827844732:305,Testability,test,test,305,"We update our docs with every release. Spark3 support went in between 0.2.64 and 0.2.65, which was released at the end of last week. Now says: ; > Hail should work with any Spark 3.1.1 cluster built with Scala 2.12. It's possible to compile Hail against other versions of Spark/Scala, but this is what we test against.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10351#issuecomment-827844732
https://github.com/hail-is/hail/issues/10352#issuecomment-826316427:180,Availability,down,downgrade,180,"Yes, I receive the same bug today, when I follow the instruction: https://hail.is/docs/0.2/install/other-cluster.html ; I believe this is a bug caused by pip or setuptools. If you downgrade the pip to 8.1.1, you will get another bug. . > cd build/deploy; python3 setup.py -q sdist bdist_wheel; sed '/^pyspark/d' python/requirements.txt | xargs python3 -m pip install -U; Exception:; Traceback (most recent call last):; File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/basecommand.py"", line 209, in main; status = self.run(options, args); File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/commands/install.py"", line 287, in run; wheel_cache; File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/basecommand.py"", line 270, in populate_requirement_set; wheel_cache=wheel_cache; File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/req/req_install.py"", line 230, in from_line; wheel_cache=wheel_cache, constraint=constraint); File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/req/req_install.py"", line 77, in __init__; req = pkg_resources.Requirement.parse(req); File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/_vendor/pkg_resources/__init__.py"", line 3036, in parse; req, = parse_requirements(s); ValueError: not enough values to unpack (expected 1, got 0)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10352#issuecomment-826316427
https://github.com/hail-is/hail/issues/10352#issuecomment-826316427:91,Deployability,install,install,91,"Yes, I receive the same bug today, when I follow the instruction: https://hail.is/docs/0.2/install/other-cluster.html ; I believe this is a bug caused by pip or setuptools. If you downgrade the pip to 8.1.1, you will get another bug. . > cd build/deploy; python3 setup.py -q sdist bdist_wheel; sed '/^pyspark/d' python/requirements.txt | xargs python3 -m pip install -U; Exception:; Traceback (most recent call last):; File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/basecommand.py"", line 209, in main; status = self.run(options, args); File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/commands/install.py"", line 287, in run; wheel_cache; File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/basecommand.py"", line 270, in populate_requirement_set; wheel_cache=wheel_cache; File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/req/req_install.py"", line 230, in from_line; wheel_cache=wheel_cache, constraint=constraint); File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/req/req_install.py"", line 77, in __init__; req = pkg_resources.Requirement.parse(req); File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/_vendor/pkg_resources/__init__.py"", line 3036, in parse; req, = parse_requirements(s); ValueError: not enough values to unpack (expected 1, got 0)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10352#issuecomment-826316427
https://github.com/hail-is/hail/issues/10352#issuecomment-826316427:247,Deployability,deploy,deploy,247,"Yes, I receive the same bug today, when I follow the instruction: https://hail.is/docs/0.2/install/other-cluster.html ; I believe this is a bug caused by pip or setuptools. If you downgrade the pip to 8.1.1, you will get another bug. . > cd build/deploy; python3 setup.py -q sdist bdist_wheel; sed '/^pyspark/d' python/requirements.txt | xargs python3 -m pip install -U; Exception:; Traceback (most recent call last):; File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/basecommand.py"", line 209, in main; status = self.run(options, args); File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/commands/install.py"", line 287, in run; wheel_cache; File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/basecommand.py"", line 270, in populate_requirement_set; wheel_cache=wheel_cache; File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/req/req_install.py"", line 230, in from_line; wheel_cache=wheel_cache, constraint=constraint); File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/req/req_install.py"", line 77, in __init__; req = pkg_resources.Requirement.parse(req); File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/_vendor/pkg_resources/__init__.py"", line 3036, in parse; req, = parse_requirements(s); ValueError: not enough values to unpack (expected 1, got 0)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10352#issuecomment-826316427
https://github.com/hail-is/hail/issues/10352#issuecomment-826316427:359,Deployability,install,install,359,"Yes, I receive the same bug today, when I follow the instruction: https://hail.is/docs/0.2/install/other-cluster.html ; I believe this is a bug caused by pip or setuptools. If you downgrade the pip to 8.1.1, you will get another bug. . > cd build/deploy; python3 setup.py -q sdist bdist_wheel; sed '/^pyspark/d' python/requirements.txt | xargs python3 -m pip install -U; Exception:; Traceback (most recent call last):; File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/basecommand.py"", line 209, in main; status = self.run(options, args); File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/commands/install.py"", line 287, in run; wheel_cache; File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/basecommand.py"", line 270, in populate_requirement_set; wheel_cache=wheel_cache; File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/req/req_install.py"", line 230, in from_line; wheel_cache=wheel_cache, constraint=constraint); File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/req/req_install.py"", line 77, in __init__; req = pkg_resources.Requirement.parse(req); File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/_vendor/pkg_resources/__init__.py"", line 3036, in parse; req, = parse_requirements(s); ValueError: not enough values to unpack (expected 1, got 0)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10352#issuecomment-826316427
https://github.com/hail-is/hail/issues/10352#issuecomment-826316427:614,Deployability,install,install,614,"Yes, I receive the same bug today, when I follow the instruction: https://hail.is/docs/0.2/install/other-cluster.html ; I believe this is a bug caused by pip or setuptools. If you downgrade the pip to 8.1.1, you will get another bug. . > cd build/deploy; python3 setup.py -q sdist bdist_wheel; sed '/^pyspark/d' python/requirements.txt | xargs python3 -m pip install -U; Exception:; Traceback (most recent call last):; File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/basecommand.py"", line 209, in main; status = self.run(options, args); File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/commands/install.py"", line 287, in run; wheel_cache; File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/basecommand.py"", line 270, in populate_requirement_set; wheel_cache=wheel_cache; File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/req/req_install.py"", line 230, in from_line; wheel_cache=wheel_cache, constraint=constraint); File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/req/req_install.py"", line 77, in __init__; req = pkg_resources.Requirement.parse(req); File ""/home/ubuntu/.local/lib/python3.6/site-packages/pip/_vendor/pkg_resources/__init__.py"", line 3036, in parse; req, = parse_requirements(s); ValueError: not enough values to unpack (expected 1, got 0)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10352#issuecomment-826316427
https://github.com/hail-is/hail/issues/10352#issuecomment-826851749:190,Deployability,install,install,190,"I don't think this is actually a bug -- I think this line doesn't support valid requirements.txt files with comments:; ```; sed '/^pyspark/d' python/requirements.txt \| xargs python3 -m pip install -U; ```. Instead, let's try:. ```; cat python/requirements.txt | sed '/^pyspark/d' | grep -v ""^#""; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10352#issuecomment-826851749
https://github.com/hail-is/hail/issues/10352#issuecomment-829188311:39,Deployability,release,release,39,The fix landed after the tagged 0.2.65 release. Can you share the git commit hash that's failing?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10352#issuecomment-829188311
https://github.com/hail-is/hail/issues/10352#issuecomment-829188311:77,Security,hash,hash,77,The fix landed after the tagged 0.2.65 release. Can you share the git commit hash that's failing?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10352#issuecomment-829188311
https://github.com/hail-is/hail/pull/10354#issuecomment-824304334:123,Integrability,depend,depend,123,"Ah right, the dockerfile isn't actually used until after the inputs are brought in, and the Dockerfile _rendering_ doesn't depend on the inputs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10354#issuecomment-824304334
https://github.com/hail-is/hail/pull/10360#issuecomment-825010405:22,Availability,error,error,22,"Was getting assertion error when initializing a DB instance in cases where datasets are on only one cloud platform. Specifically with the panUKB Hail tables that are only on AWS and not on GCP, running `db = hl.experimental.DB(region='us', cloud='gcp')` would fail at the assertion to check cloud in `DatasetVersion.from_json()`. To fix, I just made `DatasetVersion.from_json()` return `None` when a version is not available on the specified cloud platform so that it can be filtered out in `Dataset.from_name_and_json()`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10360#issuecomment-825010405
https://github.com/hail-is/hail/pull/10360#issuecomment-825010405:415,Availability,avail,available,415,"Was getting assertion error when initializing a DB instance in cases where datasets are on only one cloud platform. Specifically with the panUKB Hail tables that are only on AWS and not on GCP, running `db = hl.experimental.DB(region='us', cloud='gcp')` would fail at the assertion to check cloud in `DatasetVersion.from_json()`. To fix, I just made `DatasetVersion.from_json()` return `None` when a version is not available on the specified cloud platform so that it can be filtered out in `Dataset.from_name_and_json()`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10360#issuecomment-825010405
https://github.com/hail-is/hail/pull/10360#issuecomment-825010405:12,Testability,assert,assertion,12,"Was getting assertion error when initializing a DB instance in cases where datasets are on only one cloud platform. Specifically with the panUKB Hail tables that are only on AWS and not on GCP, running `db = hl.experimental.DB(region='us', cloud='gcp')` would fail at the assertion to check cloud in `DatasetVersion.from_json()`. To fix, I just made `DatasetVersion.from_json()` return `None` when a version is not available on the specified cloud platform so that it can be filtered out in `Dataset.from_name_and_json()`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10360#issuecomment-825010405
https://github.com/hail-is/hail/pull/10360#issuecomment-825010405:272,Testability,assert,assertion,272,"Was getting assertion error when initializing a DB instance in cases where datasets are on only one cloud platform. Specifically with the panUKB Hail tables that are only on AWS and not on GCP, running `db = hl.experimental.DB(region='us', cloud='gcp')` would fail at the assertion to check cloud in `DatasetVersion.from_json()`. To fix, I just made `DatasetVersion.from_json()` return `None` when a version is not available on the specified cloud platform so that it can be filtered out in `Dataset.from_name_and_json()`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10360#issuecomment-825010405
https://github.com/hail-is/hail/pull/10366#issuecomment-825911342:20,Integrability,depend,dependency,20,It's already a hail dependency.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10366#issuecomment-825911342
https://github.com/hail-is/hail/pull/10376#issuecomment-857271742:1104,Safety,timeout,timeouts,1104,"I think that should cover everything, however I am still failing one test. I think the current docker approach has a convenient quirk of retrying the docker daemon, which allows container deletion to stop a container while it's running, which in turn allows the loop that checks the running container to `raise` and exit. In the subprocess structure that I lifted from `JVMJob`, I'm unconvinced that this is happening correctly. What I thought would happen is that the `delete_container` coroutine would `kill` the container process while the coroutine running the container is still on `await self.process.wait()`. I would hope that means `self.process.wait` would soon raise but I'm now consistently seeing `test_cancel_left_after_tail` time out, indicating that it wasn't able to successfully cancel the sleeping job. EDIT: Jackie and I investigated and think that `kill` causes the `stdout/stderr` streams not to send EOF but rather set an exception, which means that the `run` coroutine can hang on gathering the output of the container. Going to run this test repeatedly to see if the intermittent timeouts stop and that this is actually the cause of the problem. EDIT2: ugh didn't seem to fix the problem. There's something still wrong in cancel/deleting containers where we intermittently wait until the job timeout regardless.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10376#issuecomment-857271742
https://github.com/hail-is/hail/pull/10376#issuecomment-857271742:1316,Safety,timeout,timeout,1316,"I think that should cover everything, however I am still failing one test. I think the current docker approach has a convenient quirk of retrying the docker daemon, which allows container deletion to stop a container while it's running, which in turn allows the loop that checks the running container to `raise` and exit. In the subprocess structure that I lifted from `JVMJob`, I'm unconvinced that this is happening correctly. What I thought would happen is that the `delete_container` coroutine would `kill` the container process while the coroutine running the container is still on `await self.process.wait()`. I would hope that means `self.process.wait` would soon raise but I'm now consistently seeing `test_cancel_left_after_tail` time out, indicating that it wasn't able to successfully cancel the sleeping job. EDIT: Jackie and I investigated and think that `kill` causes the `stdout/stderr` streams not to send EOF but rather set an exception, which means that the `run` coroutine can hang on gathering the output of the container. Going to run this test repeatedly to see if the intermittent timeouts stop and that this is actually the cause of the problem. EDIT2: ugh didn't seem to fix the problem. There's something still wrong in cancel/deleting containers where we intermittently wait until the job timeout regardless.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10376#issuecomment-857271742
https://github.com/hail-is/hail/pull/10376#issuecomment-857271742:69,Testability,test,test,69,"I think that should cover everything, however I am still failing one test. I think the current docker approach has a convenient quirk of retrying the docker daemon, which allows container deletion to stop a container while it's running, which in turn allows the loop that checks the running container to `raise` and exit. In the subprocess structure that I lifted from `JVMJob`, I'm unconvinced that this is happening correctly. What I thought would happen is that the `delete_container` coroutine would `kill` the container process while the coroutine running the container is still on `await self.process.wait()`. I would hope that means `self.process.wait` would soon raise but I'm now consistently seeing `test_cancel_left_after_tail` time out, indicating that it wasn't able to successfully cancel the sleeping job. EDIT: Jackie and I investigated and think that `kill` causes the `stdout/stderr` streams not to send EOF but rather set an exception, which means that the `run` coroutine can hang on gathering the output of the container. Going to run this test repeatedly to see if the intermittent timeouts stop and that this is actually the cause of the problem. EDIT2: ugh didn't seem to fix the problem. There's something still wrong in cancel/deleting containers where we intermittently wait until the job timeout regardless.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10376#issuecomment-857271742
https://github.com/hail-is/hail/pull/10376#issuecomment-857271742:1061,Testability,test,test,1061,"I think that should cover everything, however I am still failing one test. I think the current docker approach has a convenient quirk of retrying the docker daemon, which allows container deletion to stop a container while it's running, which in turn allows the loop that checks the running container to `raise` and exit. In the subprocess structure that I lifted from `JVMJob`, I'm unconvinced that this is happening correctly. What I thought would happen is that the `delete_container` coroutine would `kill` the container process while the coroutine running the container is still on `await self.process.wait()`. I would hope that means `self.process.wait` would soon raise but I'm now consistently seeing `test_cancel_left_after_tail` time out, indicating that it wasn't able to successfully cancel the sleeping job. EDIT: Jackie and I investigated and think that `kill` causes the `stdout/stderr` streams not to send EOF but rather set an exception, which means that the `run` coroutine can hang on gathering the output of the container. Going to run this test repeatedly to see if the intermittent timeouts stop and that this is actually the cause of the problem. EDIT2: ugh didn't seem to fix the problem. There's something still wrong in cancel/deleting containers where we intermittently wait until the job timeout regardless.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10376#issuecomment-857271742
https://github.com/hail-is/hail/pull/10379#issuecomment-829606450:14,Availability,failure,failures,14,I think those failures are due to legacy tables not being keyed. See the workaround in the interpreted path here:; https://github.com/hail-is/hail/blob/bb7f847d9b3af888d4a59376fdd70900265bdeda/hail/src/main/scala/is/hail/expr/ir/TableIR.scala#L877-L881,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10379#issuecomment-829606450
https://github.com/hail-is/hail/pull/10382#issuecomment-827842202:515,Performance,cache,cache,515,"> 1. publish-public-images.sh should publish to ${DOCKER_PREFIX}/hailgenetics/$name:$hail_pip_version. Yeah. My bad on that, I broke this by changing the other code to insert `hailgenetics` without changing `publish-public-images.sh`. > 2. ... This seems great to me. ---. I don't want to users to write `gcr.io/hail-vdc/hailgenetics/python-dill` because I think of GCR as an implementation detail of Hail Batch. Instead, I want them to believe they're pulling from `docker.io/hailgenetics/python-dill`, but with a cache in between docker hub and us.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10382#issuecomment-827842202
https://github.com/hail-is/hail/pull/10382#issuecomment-828117089:1126,Deployability,update,updated,1126,"> For an example, let's take DOCKER_PREFIX=gcr.io/hail-vdc. > If a user submits a job using `hailgenetics/python-dill`, what do we do? We see that `image_ref.name()` in `HAIL_GENETICS_IMAGES`, so the current implementation adds the domain gcr.io and image_ref.path becomes `hail-vdc/gcr.io/hailgenetics/python-dill`. Clearly that is incorrect. The proposed change would make the path `hail-vdc/hailgenetics/python-dill`. This does in fact exist! However, this doesn't feel like the intended path based on this part of `publish-public-images.sh`, which suggests it should be `hail-vdc/python-dill`:. Hmm, the proposed implementation actually prints 'hail-vdc/python-dill' for `image_ref.path`:. ```; image_ref = parse_docker_image_reference('hailgenetics/python-dill'); # image_ref.path == 'python-dill'. if image_ref.name() in HAIL_GENETICS_IMAGES:; image_ref.domain = DOCKER_PREFIX.split('/', maxsplit=1)[0] # 'gcr.io'; image_ref.path = '/'.join(DOCKER_PREFIX.split('/')[1:] + [image_ref.path]) . # image_ref.path == 'hail-vdc/python-dill'; ```. Though it should probably be `hail-vdc/hailgenetics/python-dill`? (I also just updated `publish-public-images.sh` to push to `$docker_prefix/hailgenetics/$name`).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10382#issuecomment-828117089
https://github.com/hail-is/hail/pull/10382#issuecomment-828117089:317,Usability,Clear,Clearly,317,"> For an example, let's take DOCKER_PREFIX=gcr.io/hail-vdc. > If a user submits a job using `hailgenetics/python-dill`, what do we do? We see that `image_ref.name()` in `HAIL_GENETICS_IMAGES`, so the current implementation adds the domain gcr.io and image_ref.path becomes `hail-vdc/gcr.io/hailgenetics/python-dill`. Clearly that is incorrect. The proposed change would make the path `hail-vdc/hailgenetics/python-dill`. This does in fact exist! However, this doesn't feel like the intended path based on this part of `publish-public-images.sh`, which suggests it should be `hail-vdc/python-dill`:. Hmm, the proposed implementation actually prints 'hail-vdc/python-dill' for `image_ref.path`:. ```; image_ref = parse_docker_image_reference('hailgenetics/python-dill'); # image_ref.path == 'python-dill'. if image_ref.name() in HAIL_GENETICS_IMAGES:; image_ref.domain = DOCKER_PREFIX.split('/', maxsplit=1)[0] # 'gcr.io'; image_ref.path = '/'.join(DOCKER_PREFIX.split('/')[1:] + [image_ref.path]) . # image_ref.path == 'hail-vdc/python-dill'; ```. Though it should probably be `hail-vdc/hailgenetics/python-dill`? (I also just updated `publish-public-images.sh` to push to `$docker_prefix/hailgenetics/$name`).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10382#issuecomment-828117089
https://github.com/hail-is/hail/pull/10382#issuecomment-828493098:262,Modifiability,rewrite,rewrite,262,"Thanks for pointing that out. The spec is ambiguous, though in this case I think we can hack around it if we just set ; ```python; image_ref.path = path_prefix + [image_ref.name()]); ```; **before** resetting the domain, and maybe leave a comment explaining the rewrite.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10382#issuecomment-828493098
https://github.com/hail-is/hail/pull/10382#issuecomment-831338774:27,Security,authoriz,authorize,27,"Thanks @vladsaveliev, I'll authorize this so we can run it through CI and try to get it through.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10382#issuecomment-831338774
https://github.com/hail-is/hail/pull/10383#issuecomment-827607930:75,Testability,test,test,75,"Also deleted `test_blanczos_against_hail`, no reason to compare them, that test can never work on the service, and we want to delete the Spark one soon.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10383#issuecomment-827607930
https://github.com/hail-is/hail/pull/10390#issuecomment-832198390:35,Availability,error,error,35,"rebased, and yet another transient error added (EAI_EAGAIN, temporary failure in name resolution).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10390#issuecomment-832198390
https://github.com/hail-is/hail/pull/10390#issuecomment-832198390:70,Availability,failure,failure,70,"rebased, and yet another transient error added (EAI_EAGAIN, temporary failure in name resolution).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10390#issuecomment-832198390
https://github.com/hail-is/hail/pull/10398#issuecomment-828788858:4,Testability,test,tests,4,The tests are going to fail the local backend for now because they use methods like `from_numpy` which aren't lowered yet.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10398#issuecomment-828788858
https://github.com/hail-is/hail/pull/10421#issuecomment-831299029:91,Availability,failure,failure,91,"I'm good with this, but I want my service PR to merge first so that we can adjust the test failure annotations accordingly.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10421#issuecomment-831299029
https://github.com/hail-is/hail/pull/10421#issuecomment-831299029:86,Testability,test,test,86,"I'm good with this, but I want my service PR to merge first so that we can adjust the test failure annotations accordingly.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10421#issuecomment-831299029
https://github.com/hail-is/hail/pull/10432#issuecomment-832973603:39,Availability,error,error,39,"Also, the quota documentation says the error should be this:. If you exceeded a quota with an HTTP/REST request, Google Cloud returns an HTTP 429 TOO MANY REQUESTS status code.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-832973603
https://github.com/hail-is/hail/pull/10432#issuecomment-833010496:131,Security,audit,audit,131,I think the docs you're referencing aren't the Compute Engine API docs: https://cloud.google.com/compute/docs/api-rate-limits. The audit logs also show 403s: https://console.cloud.google.com/logs/query;query=%22403%22%0A%22Rate%20Limit%20Exceeded%22;timeRange=2021-05-04T00:05:00.000Z%2F2021-05-04T01:06:00.000Z;pinnedLogId=2021-05-04T00:40:25.985091Z%2F-1xc71ve6z9k6;cursorTimestamp=2021-05-04T00:40:31.308803Z?project=hail-vdc&query=%0A,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-833010496
https://github.com/hail-is/hail/pull/10432#issuecomment-833010496:137,Testability,log,logs,137,I think the docs you're referencing aren't the Compute Engine API docs: https://cloud.google.com/compute/docs/api-rate-limits. The audit logs also show 403s: https://console.cloud.google.com/logs/query;query=%22403%22%0A%22Rate%20Limit%20Exceeded%22;timeRange=2021-05-04T00:05:00.000Z%2F2021-05-04T01:06:00.000Z;pinnedLogId=2021-05-04T00:40:25.985091Z%2F-1xc71ve6z9k6;cursorTimestamp=2021-05-04T00:40:31.308803Z?project=hail-vdc&query=%0A,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-833010496
https://github.com/hail-is/hail/pull/10432#issuecomment-833010496:191,Testability,log,logs,191,I think the docs you're referencing aren't the Compute Engine API docs: https://cloud.google.com/compute/docs/api-rate-limits. The audit logs also show 403s: https://console.cloud.google.com/logs/query;query=%22403%22%0A%22Rate%20Limit%20Exceeded%22;timeRange=2021-05-04T00:05:00.000Z%2F2021-05-04T01:06:00.000Z;pinnedLogId=2021-05-04T00:40:25.985091Z%2F-1xc71ve6z9k6;cursorTimestamp=2021-05-04T00:40:31.308803Z?project=hail-vdc&query=%0A,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-833010496
https://github.com/hail-is/hail/pull/10432#issuecomment-833643845:167,Integrability,message,message,167,"The problem is the exception we actually get tells us no information about the problem other than it is Forbidden. aiohttp.client_exceptions.ClientResponseError: 403, message='Forbidden', url=URL('https://compute.googleapis.com/compute/v1/projects/hail-vdc/zones/us-central1-a/instances/batch-worker-default-highmem-40e6w/detachDisk?deviceName=batch-disk-be5253d5361d45118350&requestId=130727e3-f96c-4f3a-ac86-1df585bc4e1c'",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-833643845
https://github.com/hail-is/hail/pull/10432#issuecomment-833644335:37,Security,audit,audit,37,The logs you're seeing are the cloud audit logs.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-833644335
https://github.com/hail-is/hail/pull/10432#issuecomment-833644335:4,Testability,log,logs,4,The logs you're seeing are the cloud audit logs.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-833644335
https://github.com/hail-is/hail/pull/10432#issuecomment-833644335:43,Testability,log,logs,43,The logs you're seeing are the cloud audit logs.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-833644335
https://github.com/hail-is/hail/pull/10432#issuecomment-837286361:44,Availability,error,error,44,bump... can we come to an agreement on what error we're catching?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-837286361
https://github.com/hail-is/hail/pull/10432#issuecomment-840641717:51,Integrability,message,message,51,"Sorry for the delay! Every HTTP Status Code has a ""message"" associated with it. That message doesn't vary by request, for 403 its ""Forbidden"". There's a [full list at the MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status). You have to read the body of the request to get rate limit exceeded. I'm sorry, I was playing fast and loose with words, when I said ""message,"" I was referring to the body of the HTTP request, not the `message` field of the aiohttp ClientResponseError. The message, the code and all that come from the HTTP Header, before the body is parsed:; ```; (base) # curl -v https://google.com/123 >/dev/null ; ...; > GET /123 HTTP/1.1; > Host: google.com; > User-Agent: curl/7.69.1; > Accept: */*; > ; ...; < HTTP/1.1 404 Not Found; < Content-Type: text/html; charset=UTF-8; < Referrer-Policy: no-referrer; < Content-Length: 1564; < Date: Thu, 13 May 2021 15:31:43 GMT; < Alt-Svc: h3-29="":443""; ma=2592000,h3-T051="":443""; ma=2592000,h3-Q050="":443""; ma=2592000,h3-Q046="":443""; ma=2592000,h3-Q043="":443""; ma=2592000,quic="":443""; ma=2592000; v=""46,43""; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-840641717
https://github.com/hail-is/hail/pull/10432#issuecomment-840641717:85,Integrability,message,message,85,"Sorry for the delay! Every HTTP Status Code has a ""message"" associated with it. That message doesn't vary by request, for 403 its ""Forbidden"". There's a [full list at the MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status). You have to read the body of the request to get rate limit exceeded. I'm sorry, I was playing fast and loose with words, when I said ""message,"" I was referring to the body of the HTTP request, not the `message` field of the aiohttp ClientResponseError. The message, the code and all that come from the HTTP Header, before the body is parsed:; ```; (base) # curl -v https://google.com/123 >/dev/null ; ...; > GET /123 HTTP/1.1; > Host: google.com; > User-Agent: curl/7.69.1; > Accept: */*; > ; ...; < HTTP/1.1 404 Not Found; < Content-Type: text/html; charset=UTF-8; < Referrer-Policy: no-referrer; < Content-Length: 1564; < Date: Thu, 13 May 2021 15:31:43 GMT; < Alt-Svc: h3-29="":443""; ma=2592000,h3-T051="":443""; ma=2592000,h3-Q050="":443""; ma=2592000,h3-Q046="":443""; ma=2592000,h3-Q043="":443""; ma=2592000,quic="":443""; ma=2592000; v=""46,43""; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-840641717
https://github.com/hail-is/hail/pull/10432#issuecomment-840641717:369,Integrability,message,message,369,"Sorry for the delay! Every HTTP Status Code has a ""message"" associated with it. That message doesn't vary by request, for 403 its ""Forbidden"". There's a [full list at the MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status). You have to read the body of the request to get rate limit exceeded. I'm sorry, I was playing fast and loose with words, when I said ""message,"" I was referring to the body of the HTTP request, not the `message` field of the aiohttp ClientResponseError. The message, the code and all that come from the HTTP Header, before the body is parsed:; ```; (base) # curl -v https://google.com/123 >/dev/null ; ...; > GET /123 HTTP/1.1; > Host: google.com; > User-Agent: curl/7.69.1; > Accept: */*; > ; ...; < HTTP/1.1 404 Not Found; < Content-Type: text/html; charset=UTF-8; < Referrer-Policy: no-referrer; < Content-Length: 1564; < Date: Thu, 13 May 2021 15:31:43 GMT; < Alt-Svc: h3-29="":443""; ma=2592000,h3-T051="":443""; ma=2592000,h3-Q050="":443""; ma=2592000,h3-Q046="":443""; ma=2592000,h3-Q043="":443""; ma=2592000,quic="":443""; ma=2592000; v=""46,43""; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-840641717
https://github.com/hail-is/hail/pull/10432#issuecomment-840641717:437,Integrability,message,message,437,"Sorry for the delay! Every HTTP Status Code has a ""message"" associated with it. That message doesn't vary by request, for 403 its ""Forbidden"". There's a [full list at the MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status). You have to read the body of the request to get rate limit exceeded. I'm sorry, I was playing fast and loose with words, when I said ""message,"" I was referring to the body of the HTTP request, not the `message` field of the aiohttp ClientResponseError. The message, the code and all that come from the HTTP Header, before the body is parsed:; ```; (base) # curl -v https://google.com/123 >/dev/null ; ...; > GET /123 HTTP/1.1; > Host: google.com; > User-Agent: curl/7.69.1; > Accept: */*; > ; ...; < HTTP/1.1 404 Not Found; < Content-Type: text/html; charset=UTF-8; < Referrer-Policy: no-referrer; < Content-Length: 1564; < Date: Thu, 13 May 2021 15:31:43 GMT; < Alt-Svc: h3-29="":443""; ma=2592000,h3-T051="":443""; ma=2592000,h3-Q050="":443""; ma=2592000,h3-Q046="":443""; ma=2592000,h3-Q043="":443""; ma=2592000,quic="":443""; ma=2592000; v=""46,43""; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-840641717
https://github.com/hail-is/hail/pull/10432#issuecomment-840641717:492,Integrability,message,message,492,"Sorry for the delay! Every HTTP Status Code has a ""message"" associated with it. That message doesn't vary by request, for 403 its ""Forbidden"". There's a [full list at the MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status). You have to read the body of the request to get rate limit exceeded. I'm sorry, I was playing fast and loose with words, when I said ""message,"" I was referring to the body of the HTTP request, not the `message` field of the aiohttp ClientResponseError. The message, the code and all that come from the HTTP Header, before the body is parsed:; ```; (base) # curl -v https://google.com/123 >/dev/null ; ...; > GET /123 HTTP/1.1; > Host: google.com; > User-Agent: curl/7.69.1; > Accept: */*; > ; ...; < HTTP/1.1 404 Not Found; < Content-Type: text/html; charset=UTF-8; < Referrer-Policy: no-referrer; < Content-Length: 1564; < Date: Thu, 13 May 2021 15:31:43 GMT; < Alt-Svc: h3-29="":443""; ma=2592000,h3-T051="":443""; ma=2592000,h3-Q050="":443""; ma=2592000,h3-Q046="":443""; ma=2592000,h3-Q043="":443""; ma=2592000,quic="":443""; ma=2592000; v=""46,43""; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-840641717
https://github.com/hail-is/hail/pull/10432#issuecomment-840652602:341,Availability,down,down,341,"AFAIK, the ClientResponseError only contains information from the original request or the headers. The RequestInfo contains information from our request to Google, like the URL. You're right, incorporating this into is_transient_error is a bit complex. We need to somehow communicate the body, if any, to is_transient_error. I started to go down this route with httpx.py. I wanted to wrap ClientSession with a new HailClientSession whose `get`, `post` etc. methods would check for non-successful statuses themselves, read the body, and raise HailHTTPException which included the status code *and the body*. Then in is_transient_error we can look for HailHTTPException and use the body to determine if we should retry. For now, we can just fix the compute client.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-840652602
https://github.com/hail-is/hail/pull/10432#issuecomment-840652602:351,Integrability,rout,route,351,"AFAIK, the ClientResponseError only contains information from the original request or the headers. The RequestInfo contains information from our request to Google, like the URL. You're right, incorporating this into is_transient_error is a bit complex. We need to somehow communicate the body, if any, to is_transient_error. I started to go down this route with httpx.py. I wanted to wrap ClientSession with a new HailClientSession whose `get`, `post` etc. methods would check for non-successful statuses themselves, read the body, and raise HailHTTPException which included the status code *and the body*. Then in is_transient_error we can look for HailHTTPException and use the body to determine if we should retry. For now, we can just fix the compute client.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-840652602
https://github.com/hail-is/hail/pull/10432#issuecomment-840652602:384,Integrability,wrap,wrap,384,"AFAIK, the ClientResponseError only contains information from the original request or the headers. The RequestInfo contains information from our request to Google, like the URL. You're right, incorporating this into is_transient_error is a bit complex. We need to somehow communicate the body, if any, to is_transient_error. I started to go down this route with httpx.py. I wanted to wrap ClientSession with a new HailClientSession whose `get`, `post` etc. methods would check for non-successful statuses themselves, read the body, and raise HailHTTPException which included the status code *and the body*. Then in is_transient_error we can look for HailHTTPException and use the body to determine if we should retry. For now, we can just fix the compute client.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-840652602
https://github.com/hail-is/hail/pull/10432#issuecomment-841481516:112,Deployability,release,released,112,"So this is the same problem you discovered last year. It's supposed to get fixed in 4.0.0, but that hasn't been released yet. https://github.com/hail-is/hail/commit/337383674697f51dd6e04a3be3acedf4ed7a59a9",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-841481516
https://github.com/hail-is/hail/pull/10432#issuecomment-852213289:434,Availability,error,error,434,"Sorry! I didn't see this because of the review. The root problem is that `raise_for_status` ignores the response body. This is a [known issue in aiohttp](https://github.com/aio-libs/aiohttp/issues/4600). It will be fixed in 4.0.0, but development on that seems slow. There's a variety of solutions to this problem. Every solution avoids aiohttp's raise_for_status and replaces it with something that includes the response body in the error message. A thorough fix to this is to finish the work I started in `httpx.py`. Instead of returning an `aiohttp.ClientSession` we could return a shim class that wraps `aiohttp.ClientSession` and checks the status code itself and raises an error *with the response body*. A smaller fix that only addresses aiogoogle would be to modify `aiogoogle.auth.Session` to:; 1. Not pass `raise_for_status` on to `aiohttp.ClientSession`.; 2. Store raise_for_status as a field on `aiogoogle.auth.Session`.; 2. In `aiogoogle.auth.Session.request`, if `self.raise_for_status` is true and the response status is greater than or equal to 400, retrieve the response body and raise an exception (maybe `HailHTTPError`) that includes the body.; 3. Ensure `is_transient_error` properly handles whatever exception we raise.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-852213289
https://github.com/hail-is/hail/pull/10432#issuecomment-852213289:679,Availability,error,error,679,"Sorry! I didn't see this because of the review. The root problem is that `raise_for_status` ignores the response body. This is a [known issue in aiohttp](https://github.com/aio-libs/aiohttp/issues/4600). It will be fixed in 4.0.0, but development on that seems slow. There's a variety of solutions to this problem. Every solution avoids aiohttp's raise_for_status and replaces it with something that includes the response body in the error message. A thorough fix to this is to finish the work I started in `httpx.py`. Instead of returning an `aiohttp.ClientSession` we could return a shim class that wraps `aiohttp.ClientSession` and checks the status code itself and raises an error *with the response body*. A smaller fix that only addresses aiogoogle would be to modify `aiogoogle.auth.Session` to:; 1. Not pass `raise_for_status` on to `aiohttp.ClientSession`.; 2. Store raise_for_status as a field on `aiogoogle.auth.Session`.; 2. In `aiogoogle.auth.Session.request`, if `self.raise_for_status` is true and the response status is greater than or equal to 400, retrieve the response body and raise an exception (maybe `HailHTTPError`) that includes the body.; 3. Ensure `is_transient_error` properly handles whatever exception we raise.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-852213289
https://github.com/hail-is/hail/pull/10432#issuecomment-852213289:440,Integrability,message,message,440,"Sorry! I didn't see this because of the review. The root problem is that `raise_for_status` ignores the response body. This is a [known issue in aiohttp](https://github.com/aio-libs/aiohttp/issues/4600). It will be fixed in 4.0.0, but development on that seems slow. There's a variety of solutions to this problem. Every solution avoids aiohttp's raise_for_status and replaces it with something that includes the response body in the error message. A thorough fix to this is to finish the work I started in `httpx.py`. Instead of returning an `aiohttp.ClientSession` we could return a shim class that wraps `aiohttp.ClientSession` and checks the status code itself and raises an error *with the response body*. A smaller fix that only addresses aiogoogle would be to modify `aiogoogle.auth.Session` to:; 1. Not pass `raise_for_status` on to `aiohttp.ClientSession`.; 2. Store raise_for_status as a field on `aiogoogle.auth.Session`.; 2. In `aiogoogle.auth.Session.request`, if `self.raise_for_status` is true and the response status is greater than or equal to 400, retrieve the response body and raise an exception (maybe `HailHTTPError`) that includes the body.; 3. Ensure `is_transient_error` properly handles whatever exception we raise.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-852213289
https://github.com/hail-is/hail/pull/10432#issuecomment-852213289:601,Integrability,wrap,wraps,601,"Sorry! I didn't see this because of the review. The root problem is that `raise_for_status` ignores the response body. This is a [known issue in aiohttp](https://github.com/aio-libs/aiohttp/issues/4600). It will be fixed in 4.0.0, but development on that seems slow. There's a variety of solutions to this problem. Every solution avoids aiohttp's raise_for_status and replaces it with something that includes the response body in the error message. A thorough fix to this is to finish the work I started in `httpx.py`. Instead of returning an `aiohttp.ClientSession` we could return a shim class that wraps `aiohttp.ClientSession` and checks the status code itself and raises an error *with the response body*. A smaller fix that only addresses aiogoogle would be to modify `aiogoogle.auth.Session` to:; 1. Not pass `raise_for_status` on to `aiohttp.ClientSession`.; 2. Store raise_for_status as a field on `aiogoogle.auth.Session`.; 2. In `aiogoogle.auth.Session.request`, if `self.raise_for_status` is true and the response status is greater than or equal to 400, retrieve the response body and raise an exception (maybe `HailHTTPError`) that includes the body.; 3. Ensure `is_transient_error` properly handles whatever exception we raise.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-852213289
https://github.com/hail-is/hail/pull/10432#issuecomment-852213289:330,Safety,avoid,avoids,330,"Sorry! I didn't see this because of the review. The root problem is that `raise_for_status` ignores the response body. This is a [known issue in aiohttp](https://github.com/aio-libs/aiohttp/issues/4600). It will be fixed in 4.0.0, but development on that seems slow. There's a variety of solutions to this problem. Every solution avoids aiohttp's raise_for_status and replaces it with something that includes the response body in the error message. A thorough fix to this is to finish the work I started in `httpx.py`. Instead of returning an `aiohttp.ClientSession` we could return a shim class that wraps `aiohttp.ClientSession` and checks the status code itself and raises an error *with the response body*. A smaller fix that only addresses aiogoogle would be to modify `aiogoogle.auth.Session` to:; 1. Not pass `raise_for_status` on to `aiohttp.ClientSession`.; 2. Store raise_for_status as a field on `aiogoogle.auth.Session`.; 2. In `aiogoogle.auth.Session.request`, if `self.raise_for_status` is true and the response status is greater than or equal to 400, retrieve the response body and raise an exception (maybe `HailHTTPError`) that includes the body.; 3. Ensure `is_transient_error` properly handles whatever exception we raise.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-852213289
https://github.com/hail-is/hail/pull/10465#issuecomment-834383154:30,Testability,benchmark,benchmark,30,Closing since it makes linreg benchmark much slower and I don't understand why yet.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10465#issuecomment-834383154
https://github.com/hail-is/hail/pull/10467#issuecomment-834771396:405,Availability,echo,echo,405,"Good idea, I'll check. I feel like I initially found this in deep in a redhat tutorial, but ultimately found it again at the bottom of the [man page](https://man7.org/linux/man-pages/man8/xfs_quota.8.html). I was following this example:; ```; Enabling project quota on an XFS filesystem (restrict files in; log file directories to only using 1 gigabyte of space). # mount -o prjquota /dev/xvm/var /var; # echo 42:/var/log >> /etc/projects; # echo logfiles:42 >> /etc/projid; # xfs_quota -x -c 'project -s logfiles' /var; # xfs_quota -x -c 'limit -p bhard=1g logfiles' /var. Same as above without a need for configuration files. # rm -f /etc/projects /etc/projid; # mount -o prjquota /dev/xvm/var /var; # xfs_quota -x -c 'project -s -p /var/log 42' /var; # xfs_quota -x -c 'limit -p bhard=1g 42' /var; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10467#issuecomment-834771396
https://github.com/hail-is/hail/pull/10467#issuecomment-834771396:442,Availability,echo,echo,442,"Good idea, I'll check. I feel like I initially found this in deep in a redhat tutorial, but ultimately found it again at the bottom of the [man page](https://man7.org/linux/man-pages/man8/xfs_quota.8.html). I was following this example:; ```; Enabling project quota on an XFS filesystem (restrict files in; log file directories to only using 1 gigabyte of space). # mount -o prjquota /dev/xvm/var /var; # echo 42:/var/log >> /etc/projects; # echo logfiles:42 >> /etc/projid; # xfs_quota -x -c 'project -s logfiles' /var; # xfs_quota -x -c 'limit -p bhard=1g logfiles' /var. Same as above without a need for configuration files. # rm -f /etc/projects /etc/projid; # mount -o prjquota /dev/xvm/var /var; # xfs_quota -x -c 'project -s -p /var/log 42' /var; # xfs_quota -x -c 'limit -p bhard=1g 42' /var; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10467#issuecomment-834771396
https://github.com/hail-is/hail/pull/10467#issuecomment-834771396:607,Deployability,configurat,configuration,607,"Good idea, I'll check. I feel like I initially found this in deep in a redhat tutorial, but ultimately found it again at the bottom of the [man page](https://man7.org/linux/man-pages/man8/xfs_quota.8.html). I was following this example:; ```; Enabling project quota on an XFS filesystem (restrict files in; log file directories to only using 1 gigabyte of space). # mount -o prjquota /dev/xvm/var /var; # echo 42:/var/log >> /etc/projects; # echo logfiles:42 >> /etc/projid; # xfs_quota -x -c 'project -s logfiles' /var; # xfs_quota -x -c 'limit -p bhard=1g logfiles' /var. Same as above without a need for configuration files. # rm -f /etc/projects /etc/projid; # mount -o prjquota /dev/xvm/var /var; # xfs_quota -x -c 'project -s -p /var/log 42' /var; # xfs_quota -x -c 'limit -p bhard=1g 42' /var; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10467#issuecomment-834771396
https://github.com/hail-is/hail/pull/10467#issuecomment-834771396:607,Modifiability,config,configuration,607,"Good idea, I'll check. I feel like I initially found this in deep in a redhat tutorial, but ultimately found it again at the bottom of the [man page](https://man7.org/linux/man-pages/man8/xfs_quota.8.html). I was following this example:; ```; Enabling project quota on an XFS filesystem (restrict files in; log file directories to only using 1 gigabyte of space). # mount -o prjquota /dev/xvm/var /var; # echo 42:/var/log >> /etc/projects; # echo logfiles:42 >> /etc/projid; # xfs_quota -x -c 'project -s logfiles' /var; # xfs_quota -x -c 'limit -p bhard=1g logfiles' /var. Same as above without a need for configuration files. # rm -f /etc/projects /etc/projid; # mount -o prjquota /dev/xvm/var /var; # xfs_quota -x -c 'project -s -p /var/log 42' /var; # xfs_quota -x -c 'limit -p bhard=1g 42' /var; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10467#issuecomment-834771396
https://github.com/hail-is/hail/pull/10467#issuecomment-834771396:307,Testability,log,log,307,"Good idea, I'll check. I feel like I initially found this in deep in a redhat tutorial, but ultimately found it again at the bottom of the [man page](https://man7.org/linux/man-pages/man8/xfs_quota.8.html). I was following this example:; ```; Enabling project quota on an XFS filesystem (restrict files in; log file directories to only using 1 gigabyte of space). # mount -o prjquota /dev/xvm/var /var; # echo 42:/var/log >> /etc/projects; # echo logfiles:42 >> /etc/projid; # xfs_quota -x -c 'project -s logfiles' /var; # xfs_quota -x -c 'limit -p bhard=1g logfiles' /var. Same as above without a need for configuration files. # rm -f /etc/projects /etc/projid; # mount -o prjquota /dev/xvm/var /var; # xfs_quota -x -c 'project -s -p /var/log 42' /var; # xfs_quota -x -c 'limit -p bhard=1g 42' /var; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10467#issuecomment-834771396
https://github.com/hail-is/hail/pull/10467#issuecomment-834771396:418,Testability,log,log,418,"Good idea, I'll check. I feel like I initially found this in deep in a redhat tutorial, but ultimately found it again at the bottom of the [man page](https://man7.org/linux/man-pages/man8/xfs_quota.8.html). I was following this example:; ```; Enabling project quota on an XFS filesystem (restrict files in; log file directories to only using 1 gigabyte of space). # mount -o prjquota /dev/xvm/var /var; # echo 42:/var/log >> /etc/projects; # echo logfiles:42 >> /etc/projid; # xfs_quota -x -c 'project -s logfiles' /var; # xfs_quota -x -c 'limit -p bhard=1g logfiles' /var. Same as above without a need for configuration files. # rm -f /etc/projects /etc/projid; # mount -o prjquota /dev/xvm/var /var; # xfs_quota -x -c 'project -s -p /var/log 42' /var; # xfs_quota -x -c 'limit -p bhard=1g 42' /var; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10467#issuecomment-834771396
https://github.com/hail-is/hail/pull/10467#issuecomment-834771396:447,Testability,log,logfiles,447,"Good idea, I'll check. I feel like I initially found this in deep in a redhat tutorial, but ultimately found it again at the bottom of the [man page](https://man7.org/linux/man-pages/man8/xfs_quota.8.html). I was following this example:; ```; Enabling project quota on an XFS filesystem (restrict files in; log file directories to only using 1 gigabyte of space). # mount -o prjquota /dev/xvm/var /var; # echo 42:/var/log >> /etc/projects; # echo logfiles:42 >> /etc/projid; # xfs_quota -x -c 'project -s logfiles' /var; # xfs_quota -x -c 'limit -p bhard=1g logfiles' /var. Same as above without a need for configuration files. # rm -f /etc/projects /etc/projid; # mount -o prjquota /dev/xvm/var /var; # xfs_quota -x -c 'project -s -p /var/log 42' /var; # xfs_quota -x -c 'limit -p bhard=1g 42' /var; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10467#issuecomment-834771396
https://github.com/hail-is/hail/pull/10467#issuecomment-834771396:505,Testability,log,logfiles,505,"Good idea, I'll check. I feel like I initially found this in deep in a redhat tutorial, but ultimately found it again at the bottom of the [man page](https://man7.org/linux/man-pages/man8/xfs_quota.8.html). I was following this example:; ```; Enabling project quota on an XFS filesystem (restrict files in; log file directories to only using 1 gigabyte of space). # mount -o prjquota /dev/xvm/var /var; # echo 42:/var/log >> /etc/projects; # echo logfiles:42 >> /etc/projid; # xfs_quota -x -c 'project -s logfiles' /var; # xfs_quota -x -c 'limit -p bhard=1g logfiles' /var. Same as above without a need for configuration files. # rm -f /etc/projects /etc/projid; # mount -o prjquota /dev/xvm/var /var; # xfs_quota -x -c 'project -s -p /var/log 42' /var; # xfs_quota -x -c 'limit -p bhard=1g 42' /var; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10467#issuecomment-834771396
https://github.com/hail-is/hail/pull/10467#issuecomment-834771396:558,Testability,log,logfiles,558,"Good idea, I'll check. I feel like I initially found this in deep in a redhat tutorial, but ultimately found it again at the bottom of the [man page](https://man7.org/linux/man-pages/man8/xfs_quota.8.html). I was following this example:; ```; Enabling project quota on an XFS filesystem (restrict files in; log file directories to only using 1 gigabyte of space). # mount -o prjquota /dev/xvm/var /var; # echo 42:/var/log >> /etc/projects; # echo logfiles:42 >> /etc/projid; # xfs_quota -x -c 'project -s logfiles' /var; # xfs_quota -x -c 'limit -p bhard=1g logfiles' /var. Same as above without a need for configuration files. # rm -f /etc/projects /etc/projid; # mount -o prjquota /dev/xvm/var /var; # xfs_quota -x -c 'project -s -p /var/log 42' /var; # xfs_quota -x -c 'limit -p bhard=1g 42' /var; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10467#issuecomment-834771396
https://github.com/hail-is/hail/pull/10467#issuecomment-834771396:740,Testability,log,log,740,"Good idea, I'll check. I feel like I initially found this in deep in a redhat tutorial, but ultimately found it again at the bottom of the [man page](https://man7.org/linux/man-pages/man8/xfs_quota.8.html). I was following this example:; ```; Enabling project quota on an XFS filesystem (restrict files in; log file directories to only using 1 gigabyte of space). # mount -o prjquota /dev/xvm/var /var; # echo 42:/var/log >> /etc/projects; # echo logfiles:42 >> /etc/projid; # xfs_quota -x -c 'project -s logfiles' /var; # xfs_quota -x -c 'limit -p bhard=1g logfiles' /var. Same as above without a need for configuration files. # rm -f /etc/projects /etc/projid; # mount -o prjquota /dev/xvm/var /var; # xfs_quota -x -c 'project -s -p /var/log 42' /var; # xfs_quota -x -c 'limit -p bhard=1g 42' /var; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10467#issuecomment-834771396
https://github.com/hail-is/hail/pull/10467#issuecomment-834787593:295,Availability,ERROR,ERRORs,295,"I checked the [logs for this PR](https://console.cloud.google.com/logs/query;query=logName:%22worker%22%0Alabels.namespace:%22pr-10467%22;timeRange=PT6H;cursorTimestamp=2021-05-07T19:35:43.101282634Z?project=hail-vdc&folder=true&organizationId=548622027621&query=%0A), both normal logs and just ERRORs and didn't see anything abnormal. If there's a particular stress test you'd like me to try out I'm happy to test it",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10467#issuecomment-834787593
https://github.com/hail-is/hail/pull/10467#issuecomment-834787593:15,Testability,log,logs,15,"I checked the [logs for this PR](https://console.cloud.google.com/logs/query;query=logName:%22worker%22%0Alabels.namespace:%22pr-10467%22;timeRange=PT6H;cursorTimestamp=2021-05-07T19:35:43.101282634Z?project=hail-vdc&folder=true&organizationId=548622027621&query=%0A), both normal logs and just ERRORs and didn't see anything abnormal. If there's a particular stress test you'd like me to try out I'm happy to test it",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10467#issuecomment-834787593
https://github.com/hail-is/hail/pull/10467#issuecomment-834787593:66,Testability,log,logs,66,"I checked the [logs for this PR](https://console.cloud.google.com/logs/query;query=logName:%22worker%22%0Alabels.namespace:%22pr-10467%22;timeRange=PT6H;cursorTimestamp=2021-05-07T19:35:43.101282634Z?project=hail-vdc&folder=true&organizationId=548622027621&query=%0A), both normal logs and just ERRORs and didn't see anything abnormal. If there's a particular stress test you'd like me to try out I'm happy to test it",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10467#issuecomment-834787593
https://github.com/hail-is/hail/pull/10467#issuecomment-834787593:83,Testability,log,logName,83,"I checked the [logs for this PR](https://console.cloud.google.com/logs/query;query=logName:%22worker%22%0Alabels.namespace:%22pr-10467%22;timeRange=PT6H;cursorTimestamp=2021-05-07T19:35:43.101282634Z?project=hail-vdc&folder=true&organizationId=548622027621&query=%0A), both normal logs and just ERRORs and didn't see anything abnormal. If there's a particular stress test you'd like me to try out I'm happy to test it",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10467#issuecomment-834787593
https://github.com/hail-is/hail/pull/10467#issuecomment-834787593:281,Testability,log,logs,281,"I checked the [logs for this PR](https://console.cloud.google.com/logs/query;query=logName:%22worker%22%0Alabels.namespace:%22pr-10467%22;timeRange=PT6H;cursorTimestamp=2021-05-07T19:35:43.101282634Z?project=hail-vdc&folder=true&organizationId=548622027621&query=%0A), both normal logs and just ERRORs and didn't see anything abnormal. If there's a particular stress test you'd like me to try out I'm happy to test it",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10467#issuecomment-834787593
https://github.com/hail-is/hail/pull/10467#issuecomment-834787593:367,Testability,test,test,367,"I checked the [logs for this PR](https://console.cloud.google.com/logs/query;query=logName:%22worker%22%0Alabels.namespace:%22pr-10467%22;timeRange=PT6H;cursorTimestamp=2021-05-07T19:35:43.101282634Z?project=hail-vdc&folder=true&organizationId=548622027621&query=%0A), both normal logs and just ERRORs and didn't see anything abnormal. If there's a particular stress test you'd like me to try out I'm happy to test it",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10467#issuecomment-834787593
https://github.com/hail-is/hail/pull/10467#issuecomment-834787593:410,Testability,test,test,410,"I checked the [logs for this PR](https://console.cloud.google.com/logs/query;query=logName:%22worker%22%0Alabels.namespace:%22pr-10467%22;timeRange=PT6H;cursorTimestamp=2021-05-07T19:35:43.101282634Z?project=hail-vdc&folder=true&organizationId=548622027621&query=%0A), both normal logs and just ERRORs and didn't see anything abnormal. If there's a particular stress test you'd like me to try out I'm happy to test it",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10467#issuecomment-834787593
https://github.com/hail-is/hail/pull/10477#issuecomment-840938150:16,Testability,benchmark,benchmarks,16,"no red flags in benchmarks: https://gist.github.com/tpoterba/f30db3931faf2448badd3860d772f2b1. (I don't believe this branch is >5% faster though, no reason to trust that)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10477#issuecomment-840938150
https://github.com/hail-is/hail/pull/10482#issuecomment-902179489:0,Testability,Benchmark,Benchmarks,0,Benchmarks:; https://gist.github.com/tpoterba/f74d9428a58b3ab705ded53be35e207d,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10482#issuecomment-902179489
https://github.com/hail-is/hail/pull/10484#issuecomment-845443102:9,Performance,optimiz,optimization,9,Possible optimization is to only run the long query that figures out the ready jobs if the n_commits > 0.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10484#issuecomment-845443102
https://github.com/hail-is/hail/pull/10488#issuecomment-844405222:32,Performance,load,loadFrom,32,What do we use instead of Stype.loadFrom?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10488#issuecomment-844405222
https://github.com/hail-is/hail/pull/10488#issuecomment-844407350:28,Performance,load,loadCheapPCode,28,coerceOrCopy for one. ptype.loadCheapPCode sometimes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10488#issuecomment-844407350
https://github.com/hail-is/hail/pull/10490#issuecomment-846021565:41,Performance,perform,performance,41,"Benchmarks show that this doesn't change performance, with the exception of making linear_regression_rows_nd about 4x slower. the unreliability of ndarray performance is being solved separately.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10490#issuecomment-846021565
https://github.com/hail-is/hail/pull/10490#issuecomment-846021565:155,Performance,perform,performance,155,"Benchmarks show that this doesn't change performance, with the exception of making linear_regression_rows_nd about 4x slower. the unreliability of ndarray performance is being solved separately.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10490#issuecomment-846021565
https://github.com/hail-is/hail/pull/10490#issuecomment-846021565:0,Testability,Benchmark,Benchmarks,0,"Benchmarks show that this doesn't change performance, with the exception of making linear_regression_rows_nd about 4x slower. the unreliability of ndarray performance is being solved separately.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10490#issuecomment-846021565
https://github.com/hail-is/hail/pull/10497#issuecomment-844462253:23,Availability,Failure,Failures,23,The tests are passing. Failures are from building images.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10497#issuecomment-844462253
https://github.com/hail-is/hail/pull/10497#issuecomment-844462253:4,Testability,test,tests,4,The tests are passing. Failures are from building images.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10497#issuecomment-844462253
https://github.com/hail-is/hail/pull/10502#issuecomment-845459536:71,Deployability,integrat,integrated,71,"I couldn't get rid of gcloud, sadly. `kubectl` is still to pervasively integrated into what build.yaml does. Although removing it would save us 100s of MB of unnecessary transfer and extraction, using the ci_utils_image for this purpose delays deployment of most services by an unacceptable amount of time.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10502#issuecomment-845459536
https://github.com/hail-is/hail/pull/10502#issuecomment-845459536:244,Deployability,deploy,deployment,244,"I couldn't get rid of gcloud, sadly. `kubectl` is still to pervasively integrated into what build.yaml does. Although removing it would save us 100s of MB of unnecessary transfer and extraction, using the ci_utils_image for this purpose delays deployment of most services by an unacceptable amount of time.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10502#issuecomment-845459536
https://github.com/hail-is/hail/pull/10502#issuecomment-845459536:71,Integrability,integrat,integrated,71,"I couldn't get rid of gcloud, sadly. `kubectl` is still to pervasively integrated into what build.yaml does. Although removing it would save us 100s of MB of unnecessary transfer and extraction, using the ci_utils_image for this purpose delays deployment of most services by an unacceptable amount of time.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10502#issuecomment-845459536
https://github.com/hail-is/hail/pull/10510#issuecomment-867194564:23,Integrability,wrap,wrapping,23,Can you add the method wrapping and run benchmarks?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10510#issuecomment-867194564
https://github.com/hail-is/hail/pull/10510#issuecomment-867194564:40,Testability,benchmark,benchmarks,40,Can you add the method wrapping and run benchmarks?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10510#issuecomment-867194564
https://github.com/hail-is/hail/pull/10512#issuecomment-852084745:380,Performance,perform,performance,380,"Yes, definitely! I'll assign you as a reviewer, though I'd like to also do a quick design review with Cotton to make sure I'm not doing anything crazy. I don't think there are any major redesigns I have in mind, barring feedback from review. I think I'll make it possible to control the default split size using a flag / env var, but other than that it works and seems to improve performance.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10512#issuecomment-852084745
https://github.com/hail-is/hail/pull/10512#issuecomment-852084745:220,Usability,feedback,feedback,220,"Yes, definitely! I'll assign you as a reviewer, though I'd like to also do a quick design review with Cotton to make sure I'm not doing anything crazy. I don't think there are any major redesigns I have in mind, barring feedback from review. I think I'll make it possible to control the default split size using a flag / env var, but other than that it works and seems to improve performance.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10512#issuecomment-852084745
https://github.com/hail-is/hail/pull/10520#issuecomment-847464819:102,Deployability,deploy,deploys,102,"This catches the problem -- you can try the diff you sent me Friday. Once this is merged, new version deploys will be blocked until a fix is in.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10520#issuecomment-847464819
https://github.com/hail-is/hail/pull/10523#issuecomment-871799587:310,Integrability,synchroniz,synchronizes,310,"To summarize from our discussion today:. 1. We want to make the FASTAReaderConfig and Liftover map transient; 2. We'll keep enough information around (like map from name to chain file path, sequence path) such that with a filesystem, the FASTA reader and LiftOvers can be regenerated.; 3. Create a method that synchronizes FASTAReaderConfig and LiftOver state, working name `heal`, that takes a filesystem and sets everything up.; 4. We'll call this method in the resultWithIndex closure.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10523#issuecomment-871799587
https://github.com/hail-is/hail/pull/10523#issuecomment-879609434:40,Testability,test,tests,40,Ok. Seems to work. Going to try cluster tests tomorrow to make sure things are ok in a distributed setting.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10523#issuecomment-879609434
https://github.com/hail-is/hail/pull/10523#issuecomment-880104667:0,Testability,test,test-dataproc,0,test-dataproc passes after latest change,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10523#issuecomment-880104667
https://github.com/hail-is/hail/issues/10524#issuecomment-848330358:644,Performance,Scalab,Scalable,644,"```; ❯ java -version. java version ""16.0.1"" 2021-04-20; Java(TM) SE Runtime Environment (build 16.0.1+9-24); Java HotSpot(TM) 64-Bit Server VM (build 16.0.1+9-24, mixed mode, sharing). ❯ python3 -m pip show pyspark. Name: pyspark; Version: 3.1.1; Summary: Apache Spark Python API; Home-page: https://github.com/apache/spark/tree/master/python; Author: Spark Developers; Author-email: dev@spark.apache.org; License: http://www.apache.org/licenses/LICENSE-2.0; Location: /Users/toby.manders/miniconda3/envs/hail-env/lib/python3.9/site-packages; Requires: py4j; Required-by: hail. ❯ python3 -m pip show hail. Name: hail; Version: 0.2.67; Summary: Scalable library for exploring and analyzing genomic data.; Home-page: https://hail.is; Author: Hail Team; Author-email: hail@broadinstitute.org; License: UNKNOWN; Location: /Users/toby.manders/miniconda3/envs/hail-env/lib/python3.9/site-packages; Requires: requests, pandas, hurry.filesize, nest-asyncio, gcsfs, scipy, fsspec, tabulate, bokeh, PyJWT, Deprecated, decorator, dill, numpy, aiohttp-session, pyspark, tqdm, google-cloud-storage, aiohttp, asyncinit, humanize, python-json-logger, parsimonious; Required-by:; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10524#issuecomment-848330358
https://github.com/hail-is/hail/issues/10524#issuecomment-848330358:1128,Testability,log,logger,1128,"```; ❯ java -version. java version ""16.0.1"" 2021-04-20; Java(TM) SE Runtime Environment (build 16.0.1+9-24); Java HotSpot(TM) 64-Bit Server VM (build 16.0.1+9-24, mixed mode, sharing). ❯ python3 -m pip show pyspark. Name: pyspark; Version: 3.1.1; Summary: Apache Spark Python API; Home-page: https://github.com/apache/spark/tree/master/python; Author: Spark Developers; Author-email: dev@spark.apache.org; License: http://www.apache.org/licenses/LICENSE-2.0; Location: /Users/toby.manders/miniconda3/envs/hail-env/lib/python3.9/site-packages; Requires: py4j; Required-by: hail. ❯ python3 -m pip show hail. Name: hail; Version: 0.2.67; Summary: Scalable library for exploring and analyzing genomic data.; Home-page: https://hail.is; Author: Hail Team; Author-email: hail@broadinstitute.org; License: UNKNOWN; Location: /Users/toby.manders/miniconda3/envs/hail-env/lib/python3.9/site-packages; Requires: requests, pandas, hurry.filesize, nest-asyncio, gcsfs, scipy, fsspec, tabulate, bokeh, PyJWT, Deprecated, decorator, dill, numpy, aiohttp-session, pyspark, tqdm, google-cloud-storage, aiohttp, asyncinit, humanize, python-json-logger, parsimonious; Required-by:; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10524#issuecomment-848330358
https://github.com/hail-is/hail/issues/10524#issuecomment-849024403:105,Availability,down,downgrade-java-from-,105,"Thanks, that fixed it. I followed instructions here: https://stackoverflow.com/questions/46513639/how-to-downgrade-java-from-9-to-8-on-a-macos-eclipse-is-not-running-with-java-9",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10524#issuecomment-849024403
https://github.com/hail-is/hail/pull/10529#issuecomment-858697221:37,Testability,test,tests,37,Neither bucket nor remote_tmpdir had tests so I added tests for both.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10529#issuecomment-858697221
https://github.com/hail-is/hail/pull/10529#issuecomment-858697221:54,Testability,test,tests,54,Neither bucket nor remote_tmpdir had tests so I added tests for both.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10529#issuecomment-858697221
https://github.com/hail-is/hail/pull/10534#issuecomment-853098749:49,Availability,error,error,49,"We needed to await cancelled tasks to handle the error that was raised inside the task. Otherwise, I think what would happen is the unhandled cancelled error would cause an exception to be thrown when the main thread finally returned (file finished downloading) because errors in the cancelled tasks weren't ignored. For reference, the original error was this:. ```; Unclosed client session; client_session: <aiohttp.client.ClientSession object at 0x7fe17e8c4bd0>; Traceback (most recent call last):; File ""/usr/local/lib/python3.7/runpy.py"", line 193, in _run_module_as_main; ""__main__"", mod_spec); File ""/usr/local/lib/python3.7/runpy.py"", line 85, in _run_code; exec(code, run_globals); File ""/usr/local/lib/python3.7/site-packages/batch/copy/__main__.py"", line 34, in <module>; asyncio.run(main()); File ""/usr/local/lib/python3.7/asyncio/runners.py"", line 43, in run; return loop.run_until_complete(main); File ""/usr/local/lib/python3.7/asyncio/base_events.py"", line 587, in run_until_complete; return future.result(); concurrent.futures._base.CancelledError; sys:1: RuntimeWarning: coroutine 'retry_transient_errors' was never awaited; RuntimeWarning: Enable tracemalloc to get the object allocation traceback; ```. https://stackoverflow.com/questions/57089430/asyncio-task-cancel-is-is-synchronous. It's possible I'm wrong and this code doesn't do anything. If that's the case, then I need additional help.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10534#issuecomment-853098749
https://github.com/hail-is/hail/pull/10534#issuecomment-853098749:152,Availability,error,error,152,"We needed to await cancelled tasks to handle the error that was raised inside the task. Otherwise, I think what would happen is the unhandled cancelled error would cause an exception to be thrown when the main thread finally returned (file finished downloading) because errors in the cancelled tasks weren't ignored. For reference, the original error was this:. ```; Unclosed client session; client_session: <aiohttp.client.ClientSession object at 0x7fe17e8c4bd0>; Traceback (most recent call last):; File ""/usr/local/lib/python3.7/runpy.py"", line 193, in _run_module_as_main; ""__main__"", mod_spec); File ""/usr/local/lib/python3.7/runpy.py"", line 85, in _run_code; exec(code, run_globals); File ""/usr/local/lib/python3.7/site-packages/batch/copy/__main__.py"", line 34, in <module>; asyncio.run(main()); File ""/usr/local/lib/python3.7/asyncio/runners.py"", line 43, in run; return loop.run_until_complete(main); File ""/usr/local/lib/python3.7/asyncio/base_events.py"", line 587, in run_until_complete; return future.result(); concurrent.futures._base.CancelledError; sys:1: RuntimeWarning: coroutine 'retry_transient_errors' was never awaited; RuntimeWarning: Enable tracemalloc to get the object allocation traceback; ```. https://stackoverflow.com/questions/57089430/asyncio-task-cancel-is-is-synchronous. It's possible I'm wrong and this code doesn't do anything. If that's the case, then I need additional help.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10534#issuecomment-853098749
https://github.com/hail-is/hail/pull/10534#issuecomment-853098749:249,Availability,down,downloading,249,"We needed to await cancelled tasks to handle the error that was raised inside the task. Otherwise, I think what would happen is the unhandled cancelled error would cause an exception to be thrown when the main thread finally returned (file finished downloading) because errors in the cancelled tasks weren't ignored. For reference, the original error was this:. ```; Unclosed client session; client_session: <aiohttp.client.ClientSession object at 0x7fe17e8c4bd0>; Traceback (most recent call last):; File ""/usr/local/lib/python3.7/runpy.py"", line 193, in _run_module_as_main; ""__main__"", mod_spec); File ""/usr/local/lib/python3.7/runpy.py"", line 85, in _run_code; exec(code, run_globals); File ""/usr/local/lib/python3.7/site-packages/batch/copy/__main__.py"", line 34, in <module>; asyncio.run(main()); File ""/usr/local/lib/python3.7/asyncio/runners.py"", line 43, in run; return loop.run_until_complete(main); File ""/usr/local/lib/python3.7/asyncio/base_events.py"", line 587, in run_until_complete; return future.result(); concurrent.futures._base.CancelledError; sys:1: RuntimeWarning: coroutine 'retry_transient_errors' was never awaited; RuntimeWarning: Enable tracemalloc to get the object allocation traceback; ```. https://stackoverflow.com/questions/57089430/asyncio-task-cancel-is-is-synchronous. It's possible I'm wrong and this code doesn't do anything. If that's the case, then I need additional help.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10534#issuecomment-853098749
https://github.com/hail-is/hail/pull/10534#issuecomment-853098749:270,Availability,error,errors,270,"We needed to await cancelled tasks to handle the error that was raised inside the task. Otherwise, I think what would happen is the unhandled cancelled error would cause an exception to be thrown when the main thread finally returned (file finished downloading) because errors in the cancelled tasks weren't ignored. For reference, the original error was this:. ```; Unclosed client session; client_session: <aiohttp.client.ClientSession object at 0x7fe17e8c4bd0>; Traceback (most recent call last):; File ""/usr/local/lib/python3.7/runpy.py"", line 193, in _run_module_as_main; ""__main__"", mod_spec); File ""/usr/local/lib/python3.7/runpy.py"", line 85, in _run_code; exec(code, run_globals); File ""/usr/local/lib/python3.7/site-packages/batch/copy/__main__.py"", line 34, in <module>; asyncio.run(main()); File ""/usr/local/lib/python3.7/asyncio/runners.py"", line 43, in run; return loop.run_until_complete(main); File ""/usr/local/lib/python3.7/asyncio/base_events.py"", line 587, in run_until_complete; return future.result(); concurrent.futures._base.CancelledError; sys:1: RuntimeWarning: coroutine 'retry_transient_errors' was never awaited; RuntimeWarning: Enable tracemalloc to get the object allocation traceback; ```. https://stackoverflow.com/questions/57089430/asyncio-task-cancel-is-is-synchronous. It's possible I'm wrong and this code doesn't do anything. If that's the case, then I need additional help.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10534#issuecomment-853098749
https://github.com/hail-is/hail/pull/10534#issuecomment-853098749:345,Availability,error,error,345,"We needed to await cancelled tasks to handle the error that was raised inside the task. Otherwise, I think what would happen is the unhandled cancelled error would cause an exception to be thrown when the main thread finally returned (file finished downloading) because errors in the cancelled tasks weren't ignored. For reference, the original error was this:. ```; Unclosed client session; client_session: <aiohttp.client.ClientSession object at 0x7fe17e8c4bd0>; Traceback (most recent call last):; File ""/usr/local/lib/python3.7/runpy.py"", line 193, in _run_module_as_main; ""__main__"", mod_spec); File ""/usr/local/lib/python3.7/runpy.py"", line 85, in _run_code; exec(code, run_globals); File ""/usr/local/lib/python3.7/site-packages/batch/copy/__main__.py"", line 34, in <module>; asyncio.run(main()); File ""/usr/local/lib/python3.7/asyncio/runners.py"", line 43, in run; return loop.run_until_complete(main); File ""/usr/local/lib/python3.7/asyncio/base_events.py"", line 587, in run_until_complete; return future.result(); concurrent.futures._base.CancelledError; sys:1: RuntimeWarning: coroutine 'retry_transient_errors' was never awaited; RuntimeWarning: Enable tracemalloc to get the object allocation traceback; ```. https://stackoverflow.com/questions/57089430/asyncio-task-cancel-is-is-synchronous. It's possible I'm wrong and this code doesn't do anything. If that's the case, then I need additional help.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10534#issuecomment-853098749
https://github.com/hail-is/hail/pull/10534#issuecomment-853098749:1023,Performance,concurren,concurrent,1023,"We needed to await cancelled tasks to handle the error that was raised inside the task. Otherwise, I think what would happen is the unhandled cancelled error would cause an exception to be thrown when the main thread finally returned (file finished downloading) because errors in the cancelled tasks weren't ignored. For reference, the original error was this:. ```; Unclosed client session; client_session: <aiohttp.client.ClientSession object at 0x7fe17e8c4bd0>; Traceback (most recent call last):; File ""/usr/local/lib/python3.7/runpy.py"", line 193, in _run_module_as_main; ""__main__"", mod_spec); File ""/usr/local/lib/python3.7/runpy.py"", line 85, in _run_code; exec(code, run_globals); File ""/usr/local/lib/python3.7/site-packages/batch/copy/__main__.py"", line 34, in <module>; asyncio.run(main()); File ""/usr/local/lib/python3.7/asyncio/runners.py"", line 43, in run; return loop.run_until_complete(main); File ""/usr/local/lib/python3.7/asyncio/base_events.py"", line 587, in run_until_complete; return future.result(); concurrent.futures._base.CancelledError; sys:1: RuntimeWarning: coroutine 'retry_transient_errors' was never awaited; RuntimeWarning: Enable tracemalloc to get the object allocation traceback; ```. https://stackoverflow.com/questions/57089430/asyncio-task-cancel-is-is-synchronous. It's possible I'm wrong and this code doesn't do anything. If that's the case, then I need additional help.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10534#issuecomment-853098749
https://github.com/hail-is/hail/pull/10534#issuecomment-853101143:46,Availability,error,error,46,"Actually, maybe this code just suppresses the error. I was hoping there would be a missing error to retry in `retry_transient_errors`, but all the downloads succeeded.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10534#issuecomment-853101143
https://github.com/hail-is/hail/pull/10534#issuecomment-853101143:91,Availability,error,error,91,"Actually, maybe this code just suppresses the error. I was hoping there would be a missing error to retry in `retry_transient_errors`, but all the downloads succeeded.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10534#issuecomment-853101143
https://github.com/hail-is/hail/pull/10534#issuecomment-853101143:147,Availability,down,downloads,147,"Actually, maybe this code just suppresses the error. I was hoping there would be a missing error to retry in `retry_transient_errors`, but all the downloads succeeded.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10534#issuecomment-853101143
https://github.com/hail-is/hail/pull/10534#issuecomment-853115655:41,Availability,down,downloads,41,"I find it compelling that this fixed the downloads. But I'd also like to understand why this changed worked. I will approve it to see if it unblocks Lindo while we keep discussing. > We needed to await cancelled tasks to handle the error that was raised inside the task. Right. We want to cancel the task and wait for it to finish, but we don't want any exceptions to be raised out. Your code appears to do that, but so does the previous code. Nothing in the documentation for `asyncio.wait` indicates it will raise exceptions: https://docs.python.org/3/library/asyncio-task.html#asyncio.wait. I also tested a short example:. ```; import asyncio; import sys. async def foo():; try:; print('A'); await asyncio.sleep(5); print('B'); return 5; finally:; print(sys.exc_info()). async def async_main():; print('creating task...'); t = asyncio.ensure_future(foo()); # wait for foo to sleep; await asyncio.sleep(1). # cancel foo in sleep; print('cancelling task...'); t.cancel(). print('waiting for task...'); await asyncio.wait([t]). print('done.'). asyncio.run(async_main()); ```. which prints:. ```; $ python3 foo.py; creating task...; A; cancelling task...; waiting for task...; (<class 'concurrent.futures._base.CancelledError'>, CancelledError(), <traceback object at 0x7f8cdef65e10>); done.; ```. The task is cancelled, and CancelledError is raised, but not propagated out. > 75% of his jobs would fail with this error. I'm actually confused where the cancellation error is coming from in the first place. If the code you're changing is the issue (and I think it is, too) then we only cancel if some other exception was raised, either by a task or in `__aexit__`. What's that exception? Can we print it out (enable more logging) in your test setup?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10534#issuecomment-853115655
https://github.com/hail-is/hail/pull/10534#issuecomment-853115655:232,Availability,error,error,232,"I find it compelling that this fixed the downloads. But I'd also like to understand why this changed worked. I will approve it to see if it unblocks Lindo while we keep discussing. > We needed to await cancelled tasks to handle the error that was raised inside the task. Right. We want to cancel the task and wait for it to finish, but we don't want any exceptions to be raised out. Your code appears to do that, but so does the previous code. Nothing in the documentation for `asyncio.wait` indicates it will raise exceptions: https://docs.python.org/3/library/asyncio-task.html#asyncio.wait. I also tested a short example:. ```; import asyncio; import sys. async def foo():; try:; print('A'); await asyncio.sleep(5); print('B'); return 5; finally:; print(sys.exc_info()). async def async_main():; print('creating task...'); t = asyncio.ensure_future(foo()); # wait for foo to sleep; await asyncio.sleep(1). # cancel foo in sleep; print('cancelling task...'); t.cancel(). print('waiting for task...'); await asyncio.wait([t]). print('done.'). asyncio.run(async_main()); ```. which prints:. ```; $ python3 foo.py; creating task...; A; cancelling task...; waiting for task...; (<class 'concurrent.futures._base.CancelledError'>, CancelledError(), <traceback object at 0x7f8cdef65e10>); done.; ```. The task is cancelled, and CancelledError is raised, but not propagated out. > 75% of his jobs would fail with this error. I'm actually confused where the cancellation error is coming from in the first place. If the code you're changing is the issue (and I think it is, too) then we only cancel if some other exception was raised, either by a task or in `__aexit__`. What's that exception? Can we print it out (enable more logging) in your test setup?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10534#issuecomment-853115655
https://github.com/hail-is/hail/pull/10534#issuecomment-853115655:1413,Availability,error,error,1413,"I find it compelling that this fixed the downloads. But I'd also like to understand why this changed worked. I will approve it to see if it unblocks Lindo while we keep discussing. > We needed to await cancelled tasks to handle the error that was raised inside the task. Right. We want to cancel the task and wait for it to finish, but we don't want any exceptions to be raised out. Your code appears to do that, but so does the previous code. Nothing in the documentation for `asyncio.wait` indicates it will raise exceptions: https://docs.python.org/3/library/asyncio-task.html#asyncio.wait. I also tested a short example:. ```; import asyncio; import sys. async def foo():; try:; print('A'); await asyncio.sleep(5); print('B'); return 5; finally:; print(sys.exc_info()). async def async_main():; print('creating task...'); t = asyncio.ensure_future(foo()); # wait for foo to sleep; await asyncio.sleep(1). # cancel foo in sleep; print('cancelling task...'); t.cancel(). print('waiting for task...'); await asyncio.wait([t]). print('done.'). asyncio.run(async_main()); ```. which prints:. ```; $ python3 foo.py; creating task...; A; cancelling task...; waiting for task...; (<class 'concurrent.futures._base.CancelledError'>, CancelledError(), <traceback object at 0x7f8cdef65e10>); done.; ```. The task is cancelled, and CancelledError is raised, but not propagated out. > 75% of his jobs would fail with this error. I'm actually confused where the cancellation error is coming from in the first place. If the code you're changing is the issue (and I think it is, too) then we only cancel if some other exception was raised, either by a task or in `__aexit__`. What's that exception? Can we print it out (enable more logging) in your test setup?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10534#issuecomment-853115655
https://github.com/hail-is/hail/pull/10534#issuecomment-853115655:1465,Availability,error,error,1465,"I find it compelling that this fixed the downloads. But I'd also like to understand why this changed worked. I will approve it to see if it unblocks Lindo while we keep discussing. > We needed to await cancelled tasks to handle the error that was raised inside the task. Right. We want to cancel the task and wait for it to finish, but we don't want any exceptions to be raised out. Your code appears to do that, but so does the previous code. Nothing in the documentation for `asyncio.wait` indicates it will raise exceptions: https://docs.python.org/3/library/asyncio-task.html#asyncio.wait. I also tested a short example:. ```; import asyncio; import sys. async def foo():; try:; print('A'); await asyncio.sleep(5); print('B'); return 5; finally:; print(sys.exc_info()). async def async_main():; print('creating task...'); t = asyncio.ensure_future(foo()); # wait for foo to sleep; await asyncio.sleep(1). # cancel foo in sleep; print('cancelling task...'); t.cancel(). print('waiting for task...'); await asyncio.wait([t]). print('done.'). asyncio.run(async_main()); ```. which prints:. ```; $ python3 foo.py; creating task...; A; cancelling task...; waiting for task...; (<class 'concurrent.futures._base.CancelledError'>, CancelledError(), <traceback object at 0x7f8cdef65e10>); done.; ```. The task is cancelled, and CancelledError is raised, but not propagated out. > 75% of his jobs would fail with this error. I'm actually confused where the cancellation error is coming from in the first place. If the code you're changing is the issue (and I think it is, too) then we only cancel if some other exception was raised, either by a task or in `__aexit__`. What's that exception? Can we print it out (enable more logging) in your test setup?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10534#issuecomment-853115655
https://github.com/hail-is/hail/pull/10534#issuecomment-853115655:1185,Performance,concurren,concurrent,1185,"I find it compelling that this fixed the downloads. But I'd also like to understand why this changed worked. I will approve it to see if it unblocks Lindo while we keep discussing. > We needed to await cancelled tasks to handle the error that was raised inside the task. Right. We want to cancel the task and wait for it to finish, but we don't want any exceptions to be raised out. Your code appears to do that, but so does the previous code. Nothing in the documentation for `asyncio.wait` indicates it will raise exceptions: https://docs.python.org/3/library/asyncio-task.html#asyncio.wait. I also tested a short example:. ```; import asyncio; import sys. async def foo():; try:; print('A'); await asyncio.sleep(5); print('B'); return 5; finally:; print(sys.exc_info()). async def async_main():; print('creating task...'); t = asyncio.ensure_future(foo()); # wait for foo to sleep; await asyncio.sleep(1). # cancel foo in sleep; print('cancelling task...'); t.cancel(). print('waiting for task...'); await asyncio.wait([t]). print('done.'). asyncio.run(async_main()); ```. which prints:. ```; $ python3 foo.py; creating task...; A; cancelling task...; waiting for task...; (<class 'concurrent.futures._base.CancelledError'>, CancelledError(), <traceback object at 0x7f8cdef65e10>); done.; ```. The task is cancelled, and CancelledError is raised, but not propagated out. > 75% of his jobs would fail with this error. I'm actually confused where the cancellation error is coming from in the first place. If the code you're changing is the issue (and I think it is, too) then we only cancel if some other exception was raised, either by a task or in `__aexit__`. What's that exception? Can we print it out (enable more logging) in your test setup?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10534#issuecomment-853115655
https://github.com/hail-is/hail/pull/10534#issuecomment-853115655:601,Testability,test,tested,601,"I find it compelling that this fixed the downloads. But I'd also like to understand why this changed worked. I will approve it to see if it unblocks Lindo while we keep discussing. > We needed to await cancelled tasks to handle the error that was raised inside the task. Right. We want to cancel the task and wait for it to finish, but we don't want any exceptions to be raised out. Your code appears to do that, but so does the previous code. Nothing in the documentation for `asyncio.wait` indicates it will raise exceptions: https://docs.python.org/3/library/asyncio-task.html#asyncio.wait. I also tested a short example:. ```; import asyncio; import sys. async def foo():; try:; print('A'); await asyncio.sleep(5); print('B'); return 5; finally:; print(sys.exc_info()). async def async_main():; print('creating task...'); t = asyncio.ensure_future(foo()); # wait for foo to sleep; await asyncio.sleep(1). # cancel foo in sleep; print('cancelling task...'); t.cancel(). print('waiting for task...'); await asyncio.wait([t]). print('done.'). asyncio.run(async_main()); ```. which prints:. ```; $ python3 foo.py; creating task...; A; cancelling task...; waiting for task...; (<class 'concurrent.futures._base.CancelledError'>, CancelledError(), <traceback object at 0x7f8cdef65e10>); done.; ```. The task is cancelled, and CancelledError is raised, but not propagated out. > 75% of his jobs would fail with this error. I'm actually confused where the cancellation error is coming from in the first place. If the code you're changing is the issue (and I think it is, too) then we only cancel if some other exception was raised, either by a task or in `__aexit__`. What's that exception? Can we print it out (enable more logging) in your test setup?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10534#issuecomment-853115655
https://github.com/hail-is/hail/pull/10534#issuecomment-853115655:1720,Testability,log,logging,1720,"I find it compelling that this fixed the downloads. But I'd also like to understand why this changed worked. I will approve it to see if it unblocks Lindo while we keep discussing. > We needed to await cancelled tasks to handle the error that was raised inside the task. Right. We want to cancel the task and wait for it to finish, but we don't want any exceptions to be raised out. Your code appears to do that, but so does the previous code. Nothing in the documentation for `asyncio.wait` indicates it will raise exceptions: https://docs.python.org/3/library/asyncio-task.html#asyncio.wait. I also tested a short example:. ```; import asyncio; import sys. async def foo():; try:; print('A'); await asyncio.sleep(5); print('B'); return 5; finally:; print(sys.exc_info()). async def async_main():; print('creating task...'); t = asyncio.ensure_future(foo()); # wait for foo to sleep; await asyncio.sleep(1). # cancel foo in sleep; print('cancelling task...'); t.cancel(). print('waiting for task...'); await asyncio.wait([t]). print('done.'). asyncio.run(async_main()); ```. which prints:. ```; $ python3 foo.py; creating task...; A; cancelling task...; waiting for task...; (<class 'concurrent.futures._base.CancelledError'>, CancelledError(), <traceback object at 0x7f8cdef65e10>); done.; ```. The task is cancelled, and CancelledError is raised, but not propagated out. > 75% of his jobs would fail with this error. I'm actually confused where the cancellation error is coming from in the first place. If the code you're changing is the issue (and I think it is, too) then we only cancel if some other exception was raised, either by a task or in `__aexit__`. What's that exception? Can we print it out (enable more logging) in your test setup?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10534#issuecomment-853115655
https://github.com/hail-is/hail/pull/10534#issuecomment-853115655:1737,Testability,test,test,1737,"I find it compelling that this fixed the downloads. But I'd also like to understand why this changed worked. I will approve it to see if it unblocks Lindo while we keep discussing. > We needed to await cancelled tasks to handle the error that was raised inside the task. Right. We want to cancel the task and wait for it to finish, but we don't want any exceptions to be raised out. Your code appears to do that, but so does the previous code. Nothing in the documentation for `asyncio.wait` indicates it will raise exceptions: https://docs.python.org/3/library/asyncio-task.html#asyncio.wait. I also tested a short example:. ```; import asyncio; import sys. async def foo():; try:; print('A'); await asyncio.sleep(5); print('B'); return 5; finally:; print(sys.exc_info()). async def async_main():; print('creating task...'); t = asyncio.ensure_future(foo()); # wait for foo to sleep; await asyncio.sleep(1). # cancel foo in sleep; print('cancelling task...'); t.cancel(). print('waiting for task...'); await asyncio.wait([t]). print('done.'). asyncio.run(async_main()); ```. which prints:. ```; $ python3 foo.py; creating task...; A; cancelling task...; waiting for task...; (<class 'concurrent.futures._base.CancelledError'>, CancelledError(), <traceback object at 0x7f8cdef65e10>); done.; ```. The task is cancelled, and CancelledError is raised, but not propagated out. > 75% of his jobs would fail with this error. I'm actually confused where the cancellation error is coming from in the first place. If the code you're changing is the issue (and I think it is, too) then we only cancel if some other exception was raised, either by a task or in `__aexit__`. What's that exception? Can we print it out (enable more logging) in your test setup?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10534#issuecomment-853115655
https://github.com/hail-is/hail/pull/10539#issuecomment-869629782:14,Availability,down,down,14,still chasing down ndarray regressions...; ```; linear_regression_rows_nd 246.9% 50.654 125.085 100.0% 8 8; ndarray_matmul_float64_benchmark 165.8% 4.999 8.290 100.0% 1 1; hwe_normalized_pca_blanczos_small_data_10_iterations 128.7% 54.708 70.395 100.0% 8 8; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10539#issuecomment-869629782
https://github.com/hail-is/hail/pull/10539#issuecomment-869920597:0,Testability,Benchmark,Benchmarks,0,Benchmarks look good now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10539#issuecomment-869920597
https://github.com/hail-is/hail/pull/10539#issuecomment-870772732:628,Safety,safe,safely,628,"> One conceptual comment: you described SUnreachable as a type representing a value that will never be constructed at runtime, i.e. a bottom type. But I think what you've actually built is something different, that may have other uses. Each virtual type has a designated ""default value"", and the corresponding SUnreachable type is a subtype which can only have that default value, with a compact (usually 0 bytes) runtime representation. I do think the usages right now do fit this description - any usage of a SUnreachableCode will never be on a live path at runtime. I think any of the methods on SUnreachableCode/Value could safely be replaced with thrown exceptions. That's not to say there might be other applications this helps streamline! Do you have any specific ideas?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10539#issuecomment-870772732
https://github.com/hail-is/hail/pull/10539#issuecomment-870779483:289,Usability,simpl,simpler,289,"I don't have any specific ideas, no. Just noticing that this seems to implement a stronger abstraction: a type for default values. I don't know of any cases where we use default values, other than unreachable values, but if there were, it looks like this could be used. Mostly, that seems simpler conceptually than ""unreachable values"", since it doesn't involve control flow.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10539#issuecomment-870779483
https://github.com/hail-is/hail/pull/10545#issuecomment-853153867:12,Availability,error,error,12,"I added the error for each container to the logs output. I think that's fine, but maybe we need separate section for errors?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10545#issuecomment-853153867
https://github.com/hail-is/hail/pull/10545#issuecomment-853153867:117,Availability,error,errors,117,"I added the error for each container to the logs output. I think that's fine, but maybe we need separate section for errors?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10545#issuecomment-853153867
https://github.com/hail-is/hail/pull/10545#issuecomment-853153867:44,Testability,log,logs,44,"I added the error for each container to the logs output. I think that's fine, but maybe we need separate section for errors?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10545#issuecomment-853153867
https://github.com/hail-is/hail/pull/10555#issuecomment-856148043:1353,Modifiability,config,configured,1353,"Sorry, I should have explained the rationale for returning true for empty strings. I was thinking that you should be able to do something like this:; ```python; from urllib.parse import urlparse. url = ""whatever:///path/to/file""; if hl.hadoop_supports_scheme(urlparse(url).scheme):; with hl.hadoop_open(url) as f:; ...; ```. For paths without a scheme, the ParseResult's scheme is """".; ```python; from urllib.parse import urlparse. urlparse(""/path/to/file.txt"").scheme; ''; ```. > All file systems should support file:// scheme. HadoopFS is the only one that will actually work correctly if passed a `file://` URL. For example, both LocalFS and GoogleCloudStorageFS use `os.path.exists` to implement `exists`. On macOS at least, `os.path.exists(""file:///test.txt"")` looks for `test.txt` in a directory named `file:` in the current working directory, not the root directory. > I'm not sure if it makes sense for this function to return true for empty string (which I read as meaning no specified scheme, and therefore read file from local disk). I think those should maybe just be 'file'? I could be convinced it should support empty string and 'file' as inputs if you want it to work on empty string. For LocalFS and GoogleCloudStorageFS, an empty scheme will correspond to a path to a local file. For HadoopFS, an empty scheme causes Hadoop to use its configured default file system. When running Hail locally, this would be the local file system. On a Dataproc cluster, this would be HDFS. Returning true for the empty string in `HadoopFS.supports_scheme` is based on an assumption that there would always be a working default file system.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10555#issuecomment-856148043
https://github.com/hail-is/hail/pull/10555#issuecomment-856148043:754,Testability,test,test,754,"Sorry, I should have explained the rationale for returning true for empty strings. I was thinking that you should be able to do something like this:; ```python; from urllib.parse import urlparse. url = ""whatever:///path/to/file""; if hl.hadoop_supports_scheme(urlparse(url).scheme):; with hl.hadoop_open(url) as f:; ...; ```. For paths without a scheme, the ParseResult's scheme is """".; ```python; from urllib.parse import urlparse. urlparse(""/path/to/file.txt"").scheme; ''; ```. > All file systems should support file:// scheme. HadoopFS is the only one that will actually work correctly if passed a `file://` URL. For example, both LocalFS and GoogleCloudStorageFS use `os.path.exists` to implement `exists`. On macOS at least, `os.path.exists(""file:///test.txt"")` looks for `test.txt` in a directory named `file:` in the current working directory, not the root directory. > I'm not sure if it makes sense for this function to return true for empty string (which I read as meaning no specified scheme, and therefore read file from local disk). I think those should maybe just be 'file'? I could be convinced it should support empty string and 'file' as inputs if you want it to work on empty string. For LocalFS and GoogleCloudStorageFS, an empty scheme will correspond to a path to a local file. For HadoopFS, an empty scheme causes Hadoop to use its configured default file system. When running Hail locally, this would be the local file system. On a Dataproc cluster, this would be HDFS. Returning true for the empty string in `HadoopFS.supports_scheme` is based on an assumption that there would always be a working default file system.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10555#issuecomment-856148043
https://github.com/hail-is/hail/pull/10555#issuecomment-856148043:777,Testability,test,test,777,"Sorry, I should have explained the rationale for returning true for empty strings. I was thinking that you should be able to do something like this:; ```python; from urllib.parse import urlparse. url = ""whatever:///path/to/file""; if hl.hadoop_supports_scheme(urlparse(url).scheme):; with hl.hadoop_open(url) as f:; ...; ```. For paths without a scheme, the ParseResult's scheme is """".; ```python; from urllib.parse import urlparse. urlparse(""/path/to/file.txt"").scheme; ''; ```. > All file systems should support file:// scheme. HadoopFS is the only one that will actually work correctly if passed a `file://` URL. For example, both LocalFS and GoogleCloudStorageFS use `os.path.exists` to implement `exists`. On macOS at least, `os.path.exists(""file:///test.txt"")` looks for `test.txt` in a directory named `file:` in the current working directory, not the root directory. > I'm not sure if it makes sense for this function to return true for empty string (which I read as meaning no specified scheme, and therefore read file from local disk). I think those should maybe just be 'file'? I could be convinced it should support empty string and 'file' as inputs if you want it to work on empty string. For LocalFS and GoogleCloudStorageFS, an empty scheme will correspond to a path to a local file. For HadoopFS, an empty scheme causes Hadoop to use its configured default file system. When running Hail locally, this would be the local file system. On a Dataproc cluster, this would be HDFS. Returning true for the empty string in `HadoopFS.supports_scheme` is based on an assumption that there would always be a working default file system.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10555#issuecomment-856148043
https://github.com/hail-is/hail/pull/10566#issuecomment-856828775:13,Testability,benchmark,benchmark,13,Did you do a benchmark on this one vs main? Might be interesting after the first splitting caused general improvements.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10566#issuecomment-856828775
https://github.com/hail-is/hail/pull/10579#issuecomment-859253106:119,Deployability,update,update,119,"Compared to the baseAddress stuff, a more exotic change would be to change the layout of a PCanonicalArray, as well as update the notion of a 'pointer' to a PCanonicalArray. The result would be something like [sds](https://github.com/antirez/sds) which is a dynamic string library, where the public api works on char pointers, and all the metadata is kept in a prefix to that pointer.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10579#issuecomment-859253106
https://github.com/hail-is/hail/pull/10581#issuecomment-860802893:13,Testability,benchmark,benchmark,13,"Okay, we can benchmark now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10581#issuecomment-860802893
https://github.com/hail-is/hail/pull/10581#issuecomment-860829964:11,Testability,benchmark,benchmarks,11,submitting benchmarks now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10581#issuecomment-860829964
https://github.com/hail-is/hail/pull/10583#issuecomment-859758726:33,Testability,test,tests,33,Very cool! You're failing memory tests though since the tests run with the debug allocator,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10583#issuecomment-859758726
https://github.com/hail-is/hail/pull/10583#issuecomment-859758726:56,Testability,test,tests,56,Very cool! You're failing memory tests though since the tests run with the debug allocator,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10583#issuecomment-859758726
https://github.com/hail-is/hail/pull/10583#issuecomment-859774905:8,Testability,test,tests,8,Do java tests run with the debug allocator? I'm just getting a segfault.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10583#issuecomment-859774905
https://github.com/hail-is/hail/pull/10583#issuecomment-859777792:40,Testability,test,tests,40,I think they're supposed to? The python tests definitely do.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10583#issuecomment-859777792
https://github.com/hail-is/hail/pull/10583#issuecomment-860835649:0,Testability,Test,Tests,0,Tests are passing now,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10583#issuecomment-860835649
https://github.com/hail-is/hail/pull/10588#issuecomment-868865354:4,Deployability,update,update,4,"OK, update from Google: they suggest we check if the preemptible quota is non-zero and assume that if it is non-zero preemptible is in use and if it is zero normal quota is in use. In very rare cases, people can increase and then reduce their preemptible quota and Hail will not work properly. Google wasn't interested in providing an API to detect this case. I'll change this PR accordingly sometime next week.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10588#issuecomment-868865354
https://github.com/hail-is/hail/pull/10588#issuecomment-868865354:230,Energy Efficiency,reduce,reduce,230,"OK, update from Google: they suggest we check if the preemptible quota is non-zero and assume that if it is non-zero preemptible is in use and if it is zero normal quota is in use. In very rare cases, people can increase and then reduce their preemptible quota and Hail will not work properly. Google wasn't interested in providing an API to detect this case. I'll change this PR accordingly sometime next week.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10588#issuecomment-868865354
https://github.com/hail-is/hail/pull/10588#issuecomment-868865354:342,Safety,detect,detect,342,"OK, update from Google: they suggest we check if the preemptible quota is non-zero and assume that if it is non-zero preemptible is in use and if it is zero normal quota is in use. In very rare cases, people can increase and then reduce their preemptible quota and Hail will not work properly. Google wasn't interested in providing an API to detect this case. I'll change this PR accordingly sometime next week.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10588#issuecomment-868865354
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:99,Availability,error,error,99,"We are trying to setup hail `0.2.72` on spark `3.1.2` version. However, we are also facing similar error. * java version: `OpenJDK 64-Bit Server VM, 1.8.0_242`; * scala version: `2.12.10`; * py4j: `0.10.9`; * Python: `3.7.10`. <details>; <summary>Stacktrace</summary>. ```; Py4JJavaError: An error occurred while calling o126.exists.; : java.lang.NoClassDefFoundError: com/amazonaws/AmazonClientException; 	at java.lang.Class.forName0(Native Method); 	at java.lang.Class.forName(Class.java:348); 	at org.apache.hadoop.conf.Configuration.getClassByNameOrNull(Configuration.java:2532); 	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2497); 	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2593); 	at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:3269); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3301); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:124); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:3352); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:3320); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:479); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:361); 	at is.hail.io.fs.HadoopFS.fileStatus(HadoopFS.scala:164); 	at is.hail.io.fs.FS.exists(FS.scala:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.Ca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:292,Availability,error,error,292,"We are trying to setup hail `0.2.72` on spark `3.1.2` version. However, we are also facing similar error. * java version: `OpenJDK 64-Bit Server VM, 1.8.0_242`; * scala version: `2.12.10`; * py4j: `0.10.9`; * Python: `3.7.10`. <details>; <summary>Stacktrace</summary>. ```; Py4JJavaError: An error occurred while calling o126.exists.; : java.lang.NoClassDefFoundError: com/amazonaws/AmazonClientException; 	at java.lang.Class.forName0(Native Method); 	at java.lang.Class.forName(Class.java:348); 	at org.apache.hadoop.conf.Configuration.getClassByNameOrNull(Configuration.java:2532); 	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2497); 	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2593); 	at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:3269); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3301); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:124); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:3352); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:3320); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:479); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:361); 	at is.hail.io.fs.HadoopFS.fileStatus(HadoopFS.scala:164); 	at is.hail.io.fs.FS.exists(FS.scala:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.Ca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:3000,Availability,error,error,3000,"t py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:238); 	at java.lang.Thread.run(Thread.java:748); Caused by: java.lang.ClassNotFoundException: com.amazonaws.AmazonClientException; 	at java.net.URLClassLoader.findClass(URLClassLoader.java:382); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:419); 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:352); 	... 27 more. During handling of the above exception, another exception occurred:. Py4JJavaError Traceback (most recent call last); /bmrn/apps/hail/0.2.72-spark-3.1.2/python/hail-0.2.72-py3-none-any.egg/hail/backend/py4j_backend.py in deco(*args, **kwargs); 15 try:; ---> 16 return f(*args, **kwargs); 17 except py4j.protocol.Py4JJavaError as e:. /bmrn/apps/python/miniconda/64/3.7/envs/piranha_0.2.0_20210812/lib/python3.7/site-packages/py4j/protocol.py in get_return_value(answer, gateway_client, target_id, name); 327 ""An error occurred while calling {0}{1}{2}.\n"".; --> 328 format(target_id, ""."", name), value); 329 else:. Py4JJavaError: An error occurred while calling z:is.hail.backend.spark.SparkBackend.apply.; : java.lang.IllegalArgumentException: requirement failed; 	at scala.Predef$.require(Predef.scala:268); 	at is.hail.backend.spark.SparkBackend$.apply(SparkBackend.scala:218); 	at is.hail.backend.spark.SparkBackend.apply(SparkBackend.scala); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:3120,Availability,error,error,3120,"hread.java:748); Caused by: java.lang.ClassNotFoundException: com.amazonaws.AmazonClientException; 	at java.net.URLClassLoader.findClass(URLClassLoader.java:382); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:419); 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:352); 	... 27 more. During handling of the above exception, another exception occurred:. Py4JJavaError Traceback (most recent call last); /bmrn/apps/hail/0.2.72-spark-3.1.2/python/hail-0.2.72-py3-none-any.egg/hail/backend/py4j_backend.py in deco(*args, **kwargs); 15 try:; ---> 16 return f(*args, **kwargs); 17 except py4j.protocol.Py4JJavaError as e:. /bmrn/apps/python/miniconda/64/3.7/envs/piranha_0.2.0_20210812/lib/python3.7/site-packages/py4j/protocol.py in get_return_value(answer, gateway_client, target_id, name); 327 ""An error occurred while calling {0}{1}{2}.\n"".; --> 328 format(target_id, ""."", name), value); 329 else:. Py4JJavaError: An error occurred while calling z:is.hail.backend.spark.SparkBackend.apply.; : java.lang.IllegalArgumentException: requirement failed; 	at scala.Predef$.require(Predef.scala:268); 	at is.hail.backend.spark.SparkBackend$.apply(SparkBackend.scala:218); 	at is.hail.backend.spark.SparkBackend.apply(SparkBackend.scala); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:238); 	at java.lang.Thread.run(T",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:4656,Availability,error,error,4656,"atingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:238); 	at java.lang.Thread.run(Thread.java:748). During handling of the above exception, another exception occurred:. Py4JJavaError Traceback (most recent call last); /bmrn/apps/hail/0.2.72-spark-3.1.2/python/hail-0.2.72-py3-none-any.egg/hail/backend/py4j_backend.py in deco(*args, **kwargs); 15 try:; ---> 16 return f(*args, **kwargs); 17 except py4j.protocol.Py4JJavaError as e:. /bmrn/apps/python/miniconda/64/3.7/envs/piranha_0.2.0_20210812/lib/python3.7/site-packages/py4j/protocol.py in get_return_value(answer, gateway_client, target_id, name); 327 ""An error occurred while calling {0}{1}{2}.\n"".; --> 328 format(target_id, ""."", name), value); 329 else:. Py4JJavaError: An error occurred while calling z:is.hail.backend.spark.SparkBackend.apply.; : java.lang.IllegalArgumentException: requirement failed; 	at scala.Predef$.require(Predef.scala:268); 	at is.hail.backend.spark.SparkBackend$.apply(SparkBackend.scala:218); 	at is.hail.backend.spark.SparkBackend.apply(SparkBackend.scala); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:4776,Availability,error,error,4776,"ava:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:238); 	at java.lang.Thread.run(Thread.java:748). During handling of the above exception, another exception occurred:. Py4JJavaError Traceback (most recent call last); /bmrn/apps/hail/0.2.72-spark-3.1.2/python/hail-0.2.72-py3-none-any.egg/hail/backend/py4j_backend.py in deco(*args, **kwargs); 15 try:; ---> 16 return f(*args, **kwargs); 17 except py4j.protocol.Py4JJavaError as e:. /bmrn/apps/python/miniconda/64/3.7/envs/piranha_0.2.0_20210812/lib/python3.7/site-packages/py4j/protocol.py in get_return_value(answer, gateway_client, target_id, name); 327 ""An error occurred while calling {0}{1}{2}.\n"".; --> 328 format(target_id, ""."", name), value); 329 else:. Py4JJavaError: An error occurred while calling z:is.hail.backend.spark.SparkBackend.apply.; : java.lang.IllegalArgumentException: requirement failed; 	at scala.Predef$.require(Predef.scala:268); 	at is.hail.backend.spark.SparkBackend$.apply(SparkBackend.scala:218); 	at is.hail.backend.spark.SparkBackend.apply(SparkBackend.scala); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:238); 	at java.lang.Thread.run(T",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:523,Deployability,Configurat,Configuration,523,"We are trying to setup hail `0.2.72` on spark `3.1.2` version. However, we are also facing similar error. * java version: `OpenJDK 64-Bit Server VM, 1.8.0_242`; * scala version: `2.12.10`; * py4j: `0.10.9`; * Python: `3.7.10`. <details>; <summary>Stacktrace</summary>. ```; Py4JJavaError: An error occurred while calling o126.exists.; : java.lang.NoClassDefFoundError: com/amazonaws/AmazonClientException; 	at java.lang.Class.forName0(Native Method); 	at java.lang.Class.forName(Class.java:348); 	at org.apache.hadoop.conf.Configuration.getClassByNameOrNull(Configuration.java:2532); 	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2497); 	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2593); 	at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:3269); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3301); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:124); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:3352); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:3320); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:479); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:361); 	at is.hail.io.fs.HadoopFS.fileStatus(HadoopFS.scala:164); 	at is.hail.io.fs.FS.exists(FS.scala:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.Ca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:558,Deployability,Configurat,Configuration,558,"We are trying to setup hail `0.2.72` on spark `3.1.2` version. However, we are also facing similar error. * java version: `OpenJDK 64-Bit Server VM, 1.8.0_242`; * scala version: `2.12.10`; * py4j: `0.10.9`; * Python: `3.7.10`. <details>; <summary>Stacktrace</summary>. ```; Py4JJavaError: An error occurred while calling o126.exists.; : java.lang.NoClassDefFoundError: com/amazonaws/AmazonClientException; 	at java.lang.Class.forName0(Native Method); 	at java.lang.Class.forName(Class.java:348); 	at org.apache.hadoop.conf.Configuration.getClassByNameOrNull(Configuration.java:2532); 	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2497); 	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2593); 	at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:3269); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3301); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:124); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:3352); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:3320); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:479); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:361); 	at is.hail.io.fs.HadoopFS.fileStatus(HadoopFS.scala:164); 	at is.hail.io.fs.FS.exists(FS.scala:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.Ca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:611,Deployability,Configurat,Configuration,611,"We are trying to setup hail `0.2.72` on spark `3.1.2` version. However, we are also facing similar error. * java version: `OpenJDK 64-Bit Server VM, 1.8.0_242`; * scala version: `2.12.10`; * py4j: `0.10.9`; * Python: `3.7.10`. <details>; <summary>Stacktrace</summary>. ```; Py4JJavaError: An error occurred while calling o126.exists.; : java.lang.NoClassDefFoundError: com/amazonaws/AmazonClientException; 	at java.lang.Class.forName0(Native Method); 	at java.lang.Class.forName(Class.java:348); 	at org.apache.hadoop.conf.Configuration.getClassByNameOrNull(Configuration.java:2532); 	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2497); 	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2593); 	at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:3269); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3301); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:124); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:3352); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:3320); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:479); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:361); 	at is.hail.io.fs.HadoopFS.fileStatus(HadoopFS.scala:164); 	at is.hail.io.fs.FS.exists(FS.scala:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.Ca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:640,Deployability,Configurat,Configuration,640,"We are trying to setup hail `0.2.72` on spark `3.1.2` version. However, we are also facing similar error. * java version: `OpenJDK 64-Bit Server VM, 1.8.0_242`; * scala version: `2.12.10`; * py4j: `0.10.9`; * Python: `3.7.10`. <details>; <summary>Stacktrace</summary>. ```; Py4JJavaError: An error occurred while calling o126.exists.; : java.lang.NoClassDefFoundError: com/amazonaws/AmazonClientException; 	at java.lang.Class.forName0(Native Method); 	at java.lang.Class.forName(Class.java:348); 	at org.apache.hadoop.conf.Configuration.getClassByNameOrNull(Configuration.java:2532); 	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2497); 	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2593); 	at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:3269); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3301); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:124); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:3352); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:3320); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:479); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:361); 	at is.hail.io.fs.HadoopFS.fileStatus(HadoopFS.scala:164); 	at is.hail.io.fs.FS.exists(FS.scala:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.Ca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:693,Deployability,Configurat,Configuration,693,"We are trying to setup hail `0.2.72` on spark `3.1.2` version. However, we are also facing similar error. * java version: `OpenJDK 64-Bit Server VM, 1.8.0_242`; * scala version: `2.12.10`; * py4j: `0.10.9`; * Python: `3.7.10`. <details>; <summary>Stacktrace</summary>. ```; Py4JJavaError: An error occurred while calling o126.exists.; : java.lang.NoClassDefFoundError: com/amazonaws/AmazonClientException; 	at java.lang.Class.forName0(Native Method); 	at java.lang.Class.forName(Class.java:348); 	at org.apache.hadoop.conf.Configuration.getClassByNameOrNull(Configuration.java:2532); 	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2497); 	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2593); 	at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:3269); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3301); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:124); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:3352); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:3320); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:479); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:361); 	at is.hail.io.fs.HadoopFS.fileStatus(HadoopFS.scala:164); 	at is.hail.io.fs.FS.exists(FS.scala:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.Ca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:716,Deployability,Configurat,Configuration,716,"We are trying to setup hail `0.2.72` on spark `3.1.2` version. However, we are also facing similar error. * java version: `OpenJDK 64-Bit Server VM, 1.8.0_242`; * scala version: `2.12.10`; * py4j: `0.10.9`; * Python: `3.7.10`. <details>; <summary>Stacktrace</summary>. ```; Py4JJavaError: An error occurred while calling o126.exists.; : java.lang.NoClassDefFoundError: com/amazonaws/AmazonClientException; 	at java.lang.Class.forName0(Native Method); 	at java.lang.Class.forName(Class.java:348); 	at org.apache.hadoop.conf.Configuration.getClassByNameOrNull(Configuration.java:2532); 	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2497); 	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2593); 	at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:3269); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3301); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:124); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:3352); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:3320); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:479); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:361); 	at is.hail.io.fs.HadoopFS.fileStatus(HadoopFS.scala:164); 	at is.hail.io.fs.FS.exists(FS.scala:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.Ca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:2792,Integrability,protocol,protocol,2792,"py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:238); 	at java.lang.Thread.run(Thread.java:748); Caused by: java.lang.ClassNotFoundException: com.amazonaws.AmazonClientException; 	at java.net.URLClassLoader.findClass(URLClassLoader.java:382); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:419); 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:352); 	... 27 more. During handling of the above exception, another exception occurred:. Py4JJavaError Traceback (most recent call last); /bmrn/apps/hail/0.2.72-spark-3.1.2/python/hail-0.2.72-py3-none-any.egg/hail/backend/py4j_backend.py in deco(*args, **kwargs); 15 try:; ---> 16 return f(*args, **kwargs); 17 except py4j.protocol.Py4JJavaError as e:. /bmrn/apps/python/miniconda/64/3.7/envs/piranha_0.2.0_20210812/lib/python3.7/site-packages/py4j/protocol.py in get_return_value(answer, gateway_client, target_id, name); 327 ""An error occurred while calling {0}{1}{2}.\n"".; --> 328 format(target_id, ""."", name), value); 329 else:. Py4JJavaError: An error occurred while calling z:is.hail.backend.spark.SparkBackend.apply.; : java.lang.IllegalArgumentException: requirement failed; 	at scala.Predef$.require(Predef.scala:268); 	at is.hail.backend.spark.SparkBackend$.apply(SparkBackend.scala:218); 	at is.hail.backend.spark.SparkBackend.apply(SparkBackend.scala); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:2918,Integrability,protocol,protocol,2918,"y4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:238); 	at java.lang.Thread.run(Thread.java:748); Caused by: java.lang.ClassNotFoundException: com.amazonaws.AmazonClientException; 	at java.net.URLClassLoader.findClass(URLClassLoader.java:382); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:419); 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:352); 	... 27 more. During handling of the above exception, another exception occurred:. Py4JJavaError Traceback (most recent call last); /bmrn/apps/hail/0.2.72-spark-3.1.2/python/hail-0.2.72-py3-none-any.egg/hail/backend/py4j_backend.py in deco(*args, **kwargs); 15 try:; ---> 16 return f(*args, **kwargs); 17 except py4j.protocol.Py4JJavaError as e:. /bmrn/apps/python/miniconda/64/3.7/envs/piranha_0.2.0_20210812/lib/python3.7/site-packages/py4j/protocol.py in get_return_value(answer, gateway_client, target_id, name); 327 ""An error occurred while calling {0}{1}{2}.\n"".; --> 328 format(target_id, ""."", name), value); 329 else:. Py4JJavaError: An error occurred while calling z:is.hail.backend.spark.SparkBackend.apply.; : java.lang.IllegalArgumentException: requirement failed; 	at scala.Predef$.require(Predef.scala:268); 	at is.hail.backend.spark.SparkBackend$.apply(SparkBackend.scala:218); 	at is.hail.backend.spark.SparkBackend.apply(SparkBackend.scala); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:4448,Integrability,protocol,protocol,4448,"tiveMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:238); 	at java.lang.Thread.run(Thread.java:748). During handling of the above exception, another exception occurred:. Py4JJavaError Traceback (most recent call last); /bmrn/apps/hail/0.2.72-spark-3.1.2/python/hail-0.2.72-py3-none-any.egg/hail/backend/py4j_backend.py in deco(*args, **kwargs); 15 try:; ---> 16 return f(*args, **kwargs); 17 except py4j.protocol.Py4JJavaError as e:. /bmrn/apps/python/miniconda/64/3.7/envs/piranha_0.2.0_20210812/lib/python3.7/site-packages/py4j/protocol.py in get_return_value(answer, gateway_client, target_id, name); 327 ""An error occurred while calling {0}{1}{2}.\n"".; --> 328 format(target_id, ""."", name), value); 329 else:. Py4JJavaError: An error occurred while calling z:is.hail.backend.spark.SparkBackend.apply.; : java.lang.IllegalArgumentException: requirement failed; 	at scala.Predef$.require(Predef.scala:268); 	at is.hail.backend.spark.SparkBackend$.apply(SparkBackend.scala:218); 	at is.hail.backend.spark.SparkBackend.apply(SparkBackend.scala); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:4574,Integrability,protocol,protocol,4574,"mpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:238); 	at java.lang.Thread.run(Thread.java:748). During handling of the above exception, another exception occurred:. Py4JJavaError Traceback (most recent call last); /bmrn/apps/hail/0.2.72-spark-3.1.2/python/hail-0.2.72-py3-none-any.egg/hail/backend/py4j_backend.py in deco(*args, **kwargs); 15 try:; ---> 16 return f(*args, **kwargs); 17 except py4j.protocol.Py4JJavaError as e:. /bmrn/apps/python/miniconda/64/3.7/envs/piranha_0.2.0_20210812/lib/python3.7/site-packages/py4j/protocol.py in get_return_value(answer, gateway_client, target_id, name); 327 ""An error occurred while calling {0}{1}{2}.\n"".; --> 328 format(target_id, ""."", name), value); 329 else:. Py4JJavaError: An error occurred while calling z:is.hail.backend.spark.SparkBackend.apply.; : java.lang.IllegalArgumentException: requirement failed; 	at scala.Predef$.require(Predef.scala:268); 	at is.hail.backend.spark.SparkBackend$.apply(SparkBackend.scala:218); 	at is.hail.backend.spark.SparkBackend.apply(SparkBackend.scala); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:523,Modifiability,Config,Configuration,523,"We are trying to setup hail `0.2.72` on spark `3.1.2` version. However, we are also facing similar error. * java version: `OpenJDK 64-Bit Server VM, 1.8.0_242`; * scala version: `2.12.10`; * py4j: `0.10.9`; * Python: `3.7.10`. <details>; <summary>Stacktrace</summary>. ```; Py4JJavaError: An error occurred while calling o126.exists.; : java.lang.NoClassDefFoundError: com/amazonaws/AmazonClientException; 	at java.lang.Class.forName0(Native Method); 	at java.lang.Class.forName(Class.java:348); 	at org.apache.hadoop.conf.Configuration.getClassByNameOrNull(Configuration.java:2532); 	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2497); 	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2593); 	at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:3269); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3301); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:124); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:3352); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:3320); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:479); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:361); 	at is.hail.io.fs.HadoopFS.fileStatus(HadoopFS.scala:164); 	at is.hail.io.fs.FS.exists(FS.scala:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.Ca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:558,Modifiability,Config,Configuration,558,"We are trying to setup hail `0.2.72` on spark `3.1.2` version. However, we are also facing similar error. * java version: `OpenJDK 64-Bit Server VM, 1.8.0_242`; * scala version: `2.12.10`; * py4j: `0.10.9`; * Python: `3.7.10`. <details>; <summary>Stacktrace</summary>. ```; Py4JJavaError: An error occurred while calling o126.exists.; : java.lang.NoClassDefFoundError: com/amazonaws/AmazonClientException; 	at java.lang.Class.forName0(Native Method); 	at java.lang.Class.forName(Class.java:348); 	at org.apache.hadoop.conf.Configuration.getClassByNameOrNull(Configuration.java:2532); 	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2497); 	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2593); 	at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:3269); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3301); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:124); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:3352); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:3320); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:479); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:361); 	at is.hail.io.fs.HadoopFS.fileStatus(HadoopFS.scala:164); 	at is.hail.io.fs.FS.exists(FS.scala:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.Ca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:611,Modifiability,Config,Configuration,611,"We are trying to setup hail `0.2.72` on spark `3.1.2` version. However, we are also facing similar error. * java version: `OpenJDK 64-Bit Server VM, 1.8.0_242`; * scala version: `2.12.10`; * py4j: `0.10.9`; * Python: `3.7.10`. <details>; <summary>Stacktrace</summary>. ```; Py4JJavaError: An error occurred while calling o126.exists.; : java.lang.NoClassDefFoundError: com/amazonaws/AmazonClientException; 	at java.lang.Class.forName0(Native Method); 	at java.lang.Class.forName(Class.java:348); 	at org.apache.hadoop.conf.Configuration.getClassByNameOrNull(Configuration.java:2532); 	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2497); 	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2593); 	at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:3269); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3301); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:124); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:3352); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:3320); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:479); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:361); 	at is.hail.io.fs.HadoopFS.fileStatus(HadoopFS.scala:164); 	at is.hail.io.fs.FS.exists(FS.scala:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.Ca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:640,Modifiability,Config,Configuration,640,"We are trying to setup hail `0.2.72` on spark `3.1.2` version. However, we are also facing similar error. * java version: `OpenJDK 64-Bit Server VM, 1.8.0_242`; * scala version: `2.12.10`; * py4j: `0.10.9`; * Python: `3.7.10`. <details>; <summary>Stacktrace</summary>. ```; Py4JJavaError: An error occurred while calling o126.exists.; : java.lang.NoClassDefFoundError: com/amazonaws/AmazonClientException; 	at java.lang.Class.forName0(Native Method); 	at java.lang.Class.forName(Class.java:348); 	at org.apache.hadoop.conf.Configuration.getClassByNameOrNull(Configuration.java:2532); 	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2497); 	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2593); 	at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:3269); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3301); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:124); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:3352); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:3320); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:479); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:361); 	at is.hail.io.fs.HadoopFS.fileStatus(HadoopFS.scala:164); 	at is.hail.io.fs.FS.exists(FS.scala:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.Ca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:693,Modifiability,Config,Configuration,693,"We are trying to setup hail `0.2.72` on spark `3.1.2` version. However, we are also facing similar error. * java version: `OpenJDK 64-Bit Server VM, 1.8.0_242`; * scala version: `2.12.10`; * py4j: `0.10.9`; * Python: `3.7.10`. <details>; <summary>Stacktrace</summary>. ```; Py4JJavaError: An error occurred while calling o126.exists.; : java.lang.NoClassDefFoundError: com/amazonaws/AmazonClientException; 	at java.lang.Class.forName0(Native Method); 	at java.lang.Class.forName(Class.java:348); 	at org.apache.hadoop.conf.Configuration.getClassByNameOrNull(Configuration.java:2532); 	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2497); 	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2593); 	at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:3269); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3301); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:124); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:3352); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:3320); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:479); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:361); 	at is.hail.io.fs.HadoopFS.fileStatus(HadoopFS.scala:164); 	at is.hail.io.fs.FS.exists(FS.scala:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.Ca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:716,Modifiability,Config,Configuration,716,"We are trying to setup hail `0.2.72` on spark `3.1.2` version. However, we are also facing similar error. * java version: `OpenJDK 64-Bit Server VM, 1.8.0_242`; * scala version: `2.12.10`; * py4j: `0.10.9`; * Python: `3.7.10`. <details>; <summary>Stacktrace</summary>. ```; Py4JJavaError: An error occurred while calling o126.exists.; : java.lang.NoClassDefFoundError: com/amazonaws/AmazonClientException; 	at java.lang.Class.forName0(Native Method); 	at java.lang.Class.forName(Class.java:348); 	at org.apache.hadoop.conf.Configuration.getClassByNameOrNull(Configuration.java:2532); 	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2497); 	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2593); 	at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:3269); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3301); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:124); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:3352); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:3320); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:479); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:361); 	at is.hail.io.fs.HadoopFS.fileStatus(HadoopFS.scala:164); 	at is.hail.io.fs.FS.exists(FS.scala:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.Ca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:1001,Performance,Cache,Cache,1001,"We are trying to setup hail `0.2.72` on spark `3.1.2` version. However, we are also facing similar error. * java version: `OpenJDK 64-Bit Server VM, 1.8.0_242`; * scala version: `2.12.10`; * py4j: `0.10.9`; * Python: `3.7.10`. <details>; <summary>Stacktrace</summary>. ```; Py4JJavaError: An error occurred while calling o126.exists.; : java.lang.NoClassDefFoundError: com/amazonaws/AmazonClientException; 	at java.lang.Class.forName0(Native Method); 	at java.lang.Class.forName(Class.java:348); 	at org.apache.hadoop.conf.Configuration.getClassByNameOrNull(Configuration.java:2532); 	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2497); 	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2593); 	at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:3269); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3301); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:124); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:3352); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:3320); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:479); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:361); 	at is.hail.io.fs.HadoopFS.fileStatus(HadoopFS.scala:164); 	at is.hail.io.fs.FS.exists(FS.scala:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.Ca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:1078,Performance,Cache,Cache,1078,"are also facing similar error. * java version: `OpenJDK 64-Bit Server VM, 1.8.0_242`; * scala version: `2.12.10`; * py4j: `0.10.9`; * Python: `3.7.10`. <details>; <summary>Stacktrace</summary>. ```; Py4JJavaError: An error occurred while calling o126.exists.; : java.lang.NoClassDefFoundError: com/amazonaws/AmazonClientException; 	at java.lang.Class.forName0(Native Method); 	at java.lang.Class.forName(Class.java:348); 	at org.apache.hadoop.conf.Configuration.getClassByNameOrNull(Configuration.java:2532); 	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2497); 	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2593); 	at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:3269); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3301); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:124); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:3352); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:3320); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:479); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:361); 	at is.hail.io.fs.HadoopFS.fileStatus(HadoopFS.scala:164); 	at is.hail.io.fs.FS.exists(FS.scala:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(Gate",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:2316,Performance,load,loadClass,2316,"a:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:238); 	at java.lang.Thread.run(Thread.java:748); Caused by: java.lang.ClassNotFoundException: com.amazonaws.AmazonClientException; 	at java.net.URLClassLoader.findClass(URLClassLoader.java:382); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:419); 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:352); 	... 27 more. During handling of the above exception, another exception occurred:. Py4JJavaError Traceback (most recent call last); /bmrn/apps/hail/0.2.72-spark-3.1.2/python/hail-0.2.72-py3-none-any.egg/hail/backend/py4j_backend.py in deco(*args, **kwargs); 15 try:; ---> 16 return f(*args, **kwargs); 17 except py4j.protocol.Py4JJavaError as e:. /bmrn/apps/python/miniconda/64/3.7/envs/piranha_0.2.0_20210812/lib/python3.7/site-packages/py4j/protocol.py in get_return_value(answer, gateway_client, target_id, name); 327 ""An error occurred while calling {0}{1}{2}.\n"".; --> 328 format(target_id, ""."", name), value); 329 else:. Py4JJavaError: An error occurred while calling z:is.hail.backend.spark.SparkBackend.apply.; : java.lang.IllegalArgumentException: requirement failed; 	at scala.Predef$.require(Predef.scala:268); 	at is.hail.backend.spark.Spar",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:2386,Performance,load,loadClass,2386,"s.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:238); 	at java.lang.Thread.run(Thread.java:748); Caused by: java.lang.ClassNotFoundException: com.amazonaws.AmazonClientException; 	at java.net.URLClassLoader.findClass(URLClassLoader.java:382); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:419); 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:352); 	... 27 more. During handling of the above exception, another exception occurred:. Py4JJavaError Traceback (most recent call last); /bmrn/apps/hail/0.2.72-spark-3.1.2/python/hail-0.2.72-py3-none-any.egg/hail/backend/py4j_backend.py in deco(*args, **kwargs); 15 try:; ---> 16 return f(*args, **kwargs); 17 except py4j.protocol.Py4JJavaError as e:. /bmrn/apps/python/miniconda/64/3.7/envs/piranha_0.2.0_20210812/lib/python3.7/site-packages/py4j/protocol.py in get_return_value(answer, gateway_client, target_id, name); 327 ""An error occurred while calling {0}{1}{2}.\n"".; --> 328 format(target_id, ""."", name), value); 329 else:. Py4JJavaError: An error occurred while calling z:is.hail.backend.spark.SparkBackend.apply.; : java.lang.IllegalArgumentException: requirement failed; 	at scala.Predef$.require(Predef.scala:268); 	at is.hail.backend.spark.SparkBackend$.apply(SparkBackend.scala:218); 	at is.hail.backend.spark.Sp",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:2442,Performance,load,loadClass,2442,"veMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:238); 	at java.lang.Thread.run(Thread.java:748); Caused by: java.lang.ClassNotFoundException: com.amazonaws.AmazonClientException; 	at java.net.URLClassLoader.findClass(URLClassLoader.java:382); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:419); 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:352); 	... 27 more. During handling of the above exception, another exception occurred:. Py4JJavaError Traceback (most recent call last); /bmrn/apps/hail/0.2.72-spark-3.1.2/python/hail-0.2.72-py3-none-any.egg/hail/backend/py4j_backend.py in deco(*args, **kwargs); 15 try:; ---> 16 return f(*args, **kwargs); 17 except py4j.protocol.Py4JJavaError as e:. /bmrn/apps/python/miniconda/64/3.7/envs/piranha_0.2.0_20210812/lib/python3.7/site-packages/py4j/protocol.py in get_return_value(answer, gateway_client, target_id, name); 327 ""An error occurred while calling {0}{1}{2}.\n"".; --> 328 format(target_id, ""."", name), value); 329 else:. Py4JJavaError: An error occurred while calling z:is.hail.backend.spark.SparkBackend.apply.; : java.lang.IllegalArgumentException: requirement failed; 	at scala.Predef$.require(Predef.scala:268); 	at is.hail.backend.spark.SparkBackend$.apply(SparkBackend.scala:218); 	at is.hail.backend.spark.SparkBackend.apply(SparkBackend.scala); 	at sun.reflect.Nat",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/issues/10590#issuecomment-899322610:932,Security,access,access,932,"We are trying to setup hail `0.2.72` on spark `3.1.2` version. However, we are also facing similar error. * java version: `OpenJDK 64-Bit Server VM, 1.8.0_242`; * scala version: `2.12.10`; * py4j: `0.10.9`; * Python: `3.7.10`. <details>; <summary>Stacktrace</summary>. ```; Py4JJavaError: An error occurred while calling o126.exists.; : java.lang.NoClassDefFoundError: com/amazonaws/AmazonClientException; 	at java.lang.Class.forName0(Native Method); 	at java.lang.Class.forName(Class.java:348); 	at org.apache.hadoop.conf.Configuration.getClassByNameOrNull(Configuration.java:2532); 	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2497); 	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2593); 	at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:3269); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3301); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:124); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:3352); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:3320); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:479); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:361); 	at is.hail.io.fs.HadoopFS.fileStatus(HadoopFS.scala:164); 	at is.hail.io.fs.FS.exists(FS.scala:183); 	at is.hail.io.fs.FS.exists$(FS.scala:181); 	at is.hail.io.fs.HadoopFS.exists(HadoopFS.scala:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.Ca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10590#issuecomment-899322610
https://github.com/hail-is/hail/pull/10593#issuecomment-861515524:30,Testability,log,log,30,Pushed more changes to change log.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10593#issuecomment-861515524
https://github.com/hail-is/hail/pull/10601#issuecomment-887719167:17,Testability,benchmark,benchmark,17,fold constanst's benchmark: https://gist.github.com/ammekk/02b187d6be0df0f43e5dc3200b87f247,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10601#issuecomment-887719167
https://github.com/hail-is/hail/pull/10606#issuecomment-866034244:701,Integrability,wrap,wrapping,701,"Oof, good catch! The thing we're trying to avoid is `e^x` overflowing for large positive `x`. In double precision, the smallest `x` that overflows is 710. So to test that we handle overflow correctly, you can check `sigmoid(710) == 1.0` and `sigmoid(-710) == 0.0` (using approximate equality). Actually, after playing with this, if you just use the simple definition `sigmoid(x) = 1 / (1 + np.exp(-x))`, then `sigmoid(-710)` does overflow, but it returns the right answer since `np.exp(710)` returns `inf`, and `1 / inf == 0.0`. But `math.exp(710)` throws an exception. `hl.exp` seems to have the numpy behavior, so I think the simple version actually works. But we should add the above test. I think wrapping this in an exposed function is a good idea. I agree it should be called `expit`, both for consistency with scipy, and because as you say, `sigmoid` really just means an S shaped function. And if we do expose `expit`, we should probably expose its inverse `logit` too.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10606#issuecomment-866034244
https://github.com/hail-is/hail/pull/10606#issuecomment-866034244:43,Safety,avoid,avoid,43,"Oof, good catch! The thing we're trying to avoid is `e^x` overflowing for large positive `x`. In double precision, the smallest `x` that overflows is 710. So to test that we handle overflow correctly, you can check `sigmoid(710) == 1.0` and `sigmoid(-710) == 0.0` (using approximate equality). Actually, after playing with this, if you just use the simple definition `sigmoid(x) = 1 / (1 + np.exp(-x))`, then `sigmoid(-710)` does overflow, but it returns the right answer since `np.exp(710)` returns `inf`, and `1 / inf == 0.0`. But `math.exp(710)` throws an exception. `hl.exp` seems to have the numpy behavior, so I think the simple version actually works. But we should add the above test. I think wrapping this in an exposed function is a good idea. I agree it should be called `expit`, both for consistency with scipy, and because as you say, `sigmoid` really just means an S shaped function. And if we do expose `expit`, we should probably expose its inverse `logit` too.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10606#issuecomment-866034244
https://github.com/hail-is/hail/pull/10606#issuecomment-866034244:721,Security,expose,exposed,721,"Oof, good catch! The thing we're trying to avoid is `e^x` overflowing for large positive `x`. In double precision, the smallest `x` that overflows is 710. So to test that we handle overflow correctly, you can check `sigmoid(710) == 1.0` and `sigmoid(-710) == 0.0` (using approximate equality). Actually, after playing with this, if you just use the simple definition `sigmoid(x) = 1 / (1 + np.exp(-x))`, then `sigmoid(-710)` does overflow, but it returns the right answer since `np.exp(710)` returns `inf`, and `1 / inf == 0.0`. But `math.exp(710)` throws an exception. `hl.exp` seems to have the numpy behavior, so I think the simple version actually works. But we should add the above test. I think wrapping this in an exposed function is a good idea. I agree it should be called `expit`, both for consistency with scipy, and because as you say, `sigmoid` really just means an S shaped function. And if we do expose `expit`, we should probably expose its inverse `logit` too.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10606#issuecomment-866034244
https://github.com/hail-is/hail/pull/10606#issuecomment-866034244:911,Security,expose,expose,911,"Oof, good catch! The thing we're trying to avoid is `e^x` overflowing for large positive `x`. In double precision, the smallest `x` that overflows is 710. So to test that we handle overflow correctly, you can check `sigmoid(710) == 1.0` and `sigmoid(-710) == 0.0` (using approximate equality). Actually, after playing with this, if you just use the simple definition `sigmoid(x) = 1 / (1 + np.exp(-x))`, then `sigmoid(-710)` does overflow, but it returns the right answer since `np.exp(710)` returns `inf`, and `1 / inf == 0.0`. But `math.exp(710)` throws an exception. `hl.exp` seems to have the numpy behavior, so I think the simple version actually works. But we should add the above test. I think wrapping this in an exposed function is a good idea. I agree it should be called `expit`, both for consistency with scipy, and because as you say, `sigmoid` really just means an S shaped function. And if we do expose `expit`, we should probably expose its inverse `logit` too.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10606#issuecomment-866034244
https://github.com/hail-is/hail/pull/10606#issuecomment-866034244:946,Security,expose,expose,946,"Oof, good catch! The thing we're trying to avoid is `e^x` overflowing for large positive `x`. In double precision, the smallest `x` that overflows is 710. So to test that we handle overflow correctly, you can check `sigmoid(710) == 1.0` and `sigmoid(-710) == 0.0` (using approximate equality). Actually, after playing with this, if you just use the simple definition `sigmoid(x) = 1 / (1 + np.exp(-x))`, then `sigmoid(-710)` does overflow, but it returns the right answer since `np.exp(710)` returns `inf`, and `1 / inf == 0.0`. But `math.exp(710)` throws an exception. `hl.exp` seems to have the numpy behavior, so I think the simple version actually works. But we should add the above test. I think wrapping this in an exposed function is a good idea. I agree it should be called `expit`, both for consistency with scipy, and because as you say, `sigmoid` really just means an S shaped function. And if we do expose `expit`, we should probably expose its inverse `logit` too.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10606#issuecomment-866034244
https://github.com/hail-is/hail/pull/10606#issuecomment-866034244:161,Testability,test,test,161,"Oof, good catch! The thing we're trying to avoid is `e^x` overflowing for large positive `x`. In double precision, the smallest `x` that overflows is 710. So to test that we handle overflow correctly, you can check `sigmoid(710) == 1.0` and `sigmoid(-710) == 0.0` (using approximate equality). Actually, after playing with this, if you just use the simple definition `sigmoid(x) = 1 / (1 + np.exp(-x))`, then `sigmoid(-710)` does overflow, but it returns the right answer since `np.exp(710)` returns `inf`, and `1 / inf == 0.0`. But `math.exp(710)` throws an exception. `hl.exp` seems to have the numpy behavior, so I think the simple version actually works. But we should add the above test. I think wrapping this in an exposed function is a good idea. I agree it should be called `expit`, both for consistency with scipy, and because as you say, `sigmoid` really just means an S shaped function. And if we do expose `expit`, we should probably expose its inverse `logit` too.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10606#issuecomment-866034244
https://github.com/hail-is/hail/pull/10606#issuecomment-866034244:687,Testability,test,test,687,"Oof, good catch! The thing we're trying to avoid is `e^x` overflowing for large positive `x`. In double precision, the smallest `x` that overflows is 710. So to test that we handle overflow correctly, you can check `sigmoid(710) == 1.0` and `sigmoid(-710) == 0.0` (using approximate equality). Actually, after playing with this, if you just use the simple definition `sigmoid(x) = 1 / (1 + np.exp(-x))`, then `sigmoid(-710)` does overflow, but it returns the right answer since `np.exp(710)` returns `inf`, and `1 / inf == 0.0`. But `math.exp(710)` throws an exception. `hl.exp` seems to have the numpy behavior, so I think the simple version actually works. But we should add the above test. I think wrapping this in an exposed function is a good idea. I agree it should be called `expit`, both for consistency with scipy, and because as you say, `sigmoid` really just means an S shaped function. And if we do expose `expit`, we should probably expose its inverse `logit` too.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10606#issuecomment-866034244
https://github.com/hail-is/hail/pull/10606#issuecomment-866034244:966,Testability,log,logit,966,"Oof, good catch! The thing we're trying to avoid is `e^x` overflowing for large positive `x`. In double precision, the smallest `x` that overflows is 710. So to test that we handle overflow correctly, you can check `sigmoid(710) == 1.0` and `sigmoid(-710) == 0.0` (using approximate equality). Actually, after playing with this, if you just use the simple definition `sigmoid(x) = 1 / (1 + np.exp(-x))`, then `sigmoid(-710)` does overflow, but it returns the right answer since `np.exp(710)` returns `inf`, and `1 / inf == 0.0`. But `math.exp(710)` throws an exception. `hl.exp` seems to have the numpy behavior, so I think the simple version actually works. But we should add the above test. I think wrapping this in an exposed function is a good idea. I agree it should be called `expit`, both for consistency with scipy, and because as you say, `sigmoid` really just means an S shaped function. And if we do expose `expit`, we should probably expose its inverse `logit` too.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10606#issuecomment-866034244
https://github.com/hail-is/hail/pull/10606#issuecomment-866034244:349,Usability,simpl,simple,349,"Oof, good catch! The thing we're trying to avoid is `e^x` overflowing for large positive `x`. In double precision, the smallest `x` that overflows is 710. So to test that we handle overflow correctly, you can check `sigmoid(710) == 1.0` and `sigmoid(-710) == 0.0` (using approximate equality). Actually, after playing with this, if you just use the simple definition `sigmoid(x) = 1 / (1 + np.exp(-x))`, then `sigmoid(-710)` does overflow, but it returns the right answer since `np.exp(710)` returns `inf`, and `1 / inf == 0.0`. But `math.exp(710)` throws an exception. `hl.exp` seems to have the numpy behavior, so I think the simple version actually works. But we should add the above test. I think wrapping this in an exposed function is a good idea. I agree it should be called `expit`, both for consistency with scipy, and because as you say, `sigmoid` really just means an S shaped function. And if we do expose `expit`, we should probably expose its inverse `logit` too.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10606#issuecomment-866034244
https://github.com/hail-is/hail/pull/10606#issuecomment-866034244:628,Usability,simpl,simple,628,"Oof, good catch! The thing we're trying to avoid is `e^x` overflowing for large positive `x`. In double precision, the smallest `x` that overflows is 710. So to test that we handle overflow correctly, you can check `sigmoid(710) == 1.0` and `sigmoid(-710) == 0.0` (using approximate equality). Actually, after playing with this, if you just use the simple definition `sigmoid(x) = 1 / (1 + np.exp(-x))`, then `sigmoid(-710)` does overflow, but it returns the right answer since `np.exp(710)` returns `inf`, and `1 / inf == 0.0`. But `math.exp(710)` throws an exception. `hl.exp` seems to have the numpy behavior, so I think the simple version actually works. But we should add the above test. I think wrapping this in an exposed function is a good idea. I agree it should be called `expit`, both for consistency with scipy, and because as you say, `sigmoid` really just means an S shaped function. And if we do expose `expit`, we should probably expose its inverse `logit` too.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10606#issuecomment-866034244
https://github.com/hail-is/hail/pull/10614#issuecomment-867764533:221,Safety,safe,safe,221,"I'm a little worried that the LAPACK calls we do currently for QR, SVD, etc. might be incompatible with slices. Not a hard fix, but all of the stride arguments to those mostly just inspect the shape, which is no longer a safe thing to do.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10614#issuecomment-867764533
https://github.com/hail-is/hail/pull/10614#issuecomment-867766626:38,Integrability,wrap,wrappers,38,Good point. In my branch I've written wrappers for the LAPACK methods that take SNDArrays and determine the leading dimension arguments. I can pull those into this PR and replace all the LAPACK calls with the wrappers.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10614#issuecomment-867766626
https://github.com/hail-is/hail/pull/10614#issuecomment-867766626:209,Integrability,wrap,wrappers,209,Good point. In my branch I've written wrappers for the LAPACK methods that take SNDArrays and determine the leading dimension arguments. I can pull those into this PR and replace all the LAPACK calls with the wrappers.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10614#issuecomment-867766626
https://github.com/hail-is/hail/pull/10614#issuecomment-871402875:190,Modifiability,variab,variables,190,"> I want to also have a discussion about how a slice is actually different from a ""canonical"" ndarray, especially after #10619.; > ; > I think of `SNDArrayPointer` as a pointer to data, and variables for shape/strides. Isn't that exactly what a slice is, too? Where are the important differences? I'd think copy semantics are one, but are there others?. I think the main difference is that `SNDArrayPointer` points to the location in memory that stores shape/strides as well as the data, while `SNDArraySlice` points directly to the first element, with shape/strides living only on the stack. #10619 doesn't look like it changes that, though perhaps after that change there's no need for `SNDArrayPointer` any more, and we can only use `SNDArraySlice`. IIRC, MLIR uses basically that design.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10614#issuecomment-871402875
https://github.com/hail-is/hail/pull/10614#issuecomment-895411901:101,Performance,load,loadFrom,101,"Thanks Tim. The from/toCodes were completely wrong, should be good now. Do you think I should leave `loadFrom` unimplemented until there's a corresponding pType?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10614#issuecomment-895411901
https://github.com/hail-is/hail/pull/10617#issuecomment-869729427:4,Testability,test,testing,4,I'm testing the JPI real quick to make sure that is fine as well.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10617#issuecomment-869729427
https://github.com/hail-is/hail/pull/10628#issuecomment-880902195:17,Usability,clear,clear,17,"Should be pretty clear what I'm doing, but let me know if you want me to walk through the design process here.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10628#issuecomment-880902195
https://github.com/hail-is/hail/pull/10630#issuecomment-871705329:193,Availability,error,errors,193,"I tested this by submitting 64 true, 10 Gi 0.25 core jobs on one node with a local SSD. It took 7 minutes for the whole batch to finish. This is a bit disappointing, but at least there were no errors. We can potentially revisit using get instead of wait for the polling loop, but the default sleep backoff method we have quickly blew our quota.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10630#issuecomment-871705329
https://github.com/hail-is/hail/pull/10630#issuecomment-871705329:2,Testability,test,tested,2,"I tested this by submitting 64 true, 10 Gi 0.25 core jobs on one node with a local SSD. It took 7 minutes for the whole batch to finish. This is a bit disappointing, but at least there were no errors. We can potentially revisit using get instead of wait for the polling loop, but the default sleep backoff method we have quickly blew our quota.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10630#issuecomment-871705329
https://github.com/hail-is/hail/pull/10630#issuecomment-872355294:53,Deployability,deploy,deploy,53,I'm putting a wip tag on this so we make sure we dev deploy and test the behavior one last time before merging.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10630#issuecomment-872355294
https://github.com/hail-is/hail/pull/10630#issuecomment-872355294:64,Testability,test,test,64,I'm putting a wip tag on this so we make sure we dev deploy and test the behavior one last time before merging.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10630#issuecomment-872355294
https://github.com/hail-is/hail/pull/10630#issuecomment-872539838:111,Availability,error,errors,111,I dev deployed this and it still is working fine. It's still pretty slow and I was getting rate limit exceeded errors still trying to attch/detach 64 disks. Average operation time was still 15 seconds. I think part of the problem might be the delay starts at 0.1 for retry_transient_errors. We can consider making this a parameter and setting it to a higher number for this use case.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10630#issuecomment-872539838
https://github.com/hail-is/hail/pull/10630#issuecomment-872539838:6,Deployability,deploy,deployed,6,I dev deployed this and it still is working fine. It's still pretty slow and I was getting rate limit exceeded errors still trying to attch/detach 64 disks. Average operation time was still 15 seconds. I think part of the problem might be the delay starts at 0.1 for retry_transient_errors. We can consider making this a parameter and setting it to a higher number for this use case.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10630#issuecomment-872539838
https://github.com/hail-is/hail/pull/10630#issuecomment-872569078:106,Availability,failure,failures,106,"I like the idea that, in a future PR, we investigate a slightly higher initial back off for disk creation failures.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10630#issuecomment-872569078
https://github.com/hail-is/hail/pull/10632#issuecomment-875583903:55,Performance,perform,performance,55,"Great, thanks. Should be ready to be reviewed now, the performance is now where I want it to be. (18x faster than aggregators for Caitlin's use case)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10632#issuecomment-875583903
https://github.com/hail-is/hail/pull/10640#issuecomment-874953507:136,Availability,down,down,136,Ah I didn't notice that the two loops were in different scripts (startup vs. run). If the run-script exits cleanly will the worker shut down?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10640#issuecomment-874953507
https://github.com/hail-is/hail/pull/10645#issuecomment-875824135:30,Availability,error,error,30,Ben confirmed this was a user error.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10645#issuecomment-875824135
https://github.com/hail-is/hail/pull/10646#issuecomment-879389079:80,Performance,load,load,80,Ben's disks still took over 10 minutes to be attached when the system was under load.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10646#issuecomment-879389079
https://github.com/hail-is/hail/pull/10647#issuecomment-876152547:31,Testability,test,test,31,Hi @danking! Do you know which test is failing?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10647#issuecomment-876152547
https://github.com/hail-is/hail/pull/10647#issuecomment-876439207:40,Availability,failure,failure,40,"Dan's OOO this week. It's a Python lint failure:; ```; + cd /io/repo; + make check-hail; make -C hail/python check; make[1]: Entering directory '/io/repo/hail/python'; python3 -m flake8 --config ../../setup.cfg hail; python3 -m flake8 --config ../../setup.cfg hailtop; hailtop/aiogoogle/auth/credentials.py:43:1: W293 blank line contains whitespace; hailtop/aiogoogle/auth/credentials.py:47:5: E303 too many blank lines (2); hailtop/aiogoogle/auth/credentials.py:105:1: E302 expected 2 blank lines, found 1; make[1]: Leaving directory '/io/repo/hail/python'; make[1]: *** [Makefile:12: check] Error 1; make: *** [Makefile:13: check-hail] Error 2; Status; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10647#issuecomment-876439207
https://github.com/hail-is/hail/pull/10647#issuecomment-876439207:593,Availability,Error,Error,593,"Dan's OOO this week. It's a Python lint failure:; ```; + cd /io/repo; + make check-hail; make -C hail/python check; make[1]: Entering directory '/io/repo/hail/python'; python3 -m flake8 --config ../../setup.cfg hail; python3 -m flake8 --config ../../setup.cfg hailtop; hailtop/aiogoogle/auth/credentials.py:43:1: W293 blank line contains whitespace; hailtop/aiogoogle/auth/credentials.py:47:5: E303 too many blank lines (2); hailtop/aiogoogle/auth/credentials.py:105:1: E302 expected 2 blank lines, found 1; make[1]: Leaving directory '/io/repo/hail/python'; make[1]: *** [Makefile:12: check] Error 1; make: *** [Makefile:13: check-hail] Error 2; Status; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10647#issuecomment-876439207
https://github.com/hail-is/hail/pull/10647#issuecomment-876439207:638,Availability,Error,Error,638,"Dan's OOO this week. It's a Python lint failure:; ```; + cd /io/repo; + make check-hail; make -C hail/python check; make[1]: Entering directory '/io/repo/hail/python'; python3 -m flake8 --config ../../setup.cfg hail; python3 -m flake8 --config ../../setup.cfg hailtop; hailtop/aiogoogle/auth/credentials.py:43:1: W293 blank line contains whitespace; hailtop/aiogoogle/auth/credentials.py:47:5: E303 too many blank lines (2); hailtop/aiogoogle/auth/credentials.py:105:1: E302 expected 2 blank lines, found 1; make[1]: Leaving directory '/io/repo/hail/python'; make[1]: *** [Makefile:12: check] Error 1; make: *** [Makefile:13: check-hail] Error 2; Status; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10647#issuecomment-876439207
https://github.com/hail-is/hail/pull/10647#issuecomment-876439207:188,Modifiability,config,config,188,"Dan's OOO this week. It's a Python lint failure:; ```; + cd /io/repo; + make check-hail; make -C hail/python check; make[1]: Entering directory '/io/repo/hail/python'; python3 -m flake8 --config ../../setup.cfg hail; python3 -m flake8 --config ../../setup.cfg hailtop; hailtop/aiogoogle/auth/credentials.py:43:1: W293 blank line contains whitespace; hailtop/aiogoogle/auth/credentials.py:47:5: E303 too many blank lines (2); hailtop/aiogoogle/auth/credentials.py:105:1: E302 expected 2 blank lines, found 1; make[1]: Leaving directory '/io/repo/hail/python'; make[1]: *** [Makefile:12: check] Error 1; make: *** [Makefile:13: check-hail] Error 2; Status; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10647#issuecomment-876439207
https://github.com/hail-is/hail/pull/10647#issuecomment-876439207:237,Modifiability,config,config,237,"Dan's OOO this week. It's a Python lint failure:; ```; + cd /io/repo; + make check-hail; make -C hail/python check; make[1]: Entering directory '/io/repo/hail/python'; python3 -m flake8 --config ../../setup.cfg hail; python3 -m flake8 --config ../../setup.cfg hailtop; hailtop/aiogoogle/auth/credentials.py:43:1: W293 blank line contains whitespace; hailtop/aiogoogle/auth/credentials.py:47:5: E303 too many blank lines (2); hailtop/aiogoogle/auth/credentials.py:105:1: E302 expected 2 blank lines, found 1; make[1]: Leaving directory '/io/repo/hail/python'; make[1]: *** [Makefile:12: check] Error 1; make: *** [Makefile:13: check-hail] Error 2; Status; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10647#issuecomment-876439207
https://github.com/hail-is/hail/pull/10647#issuecomment-876805713:42,Availability,failure,failure,42,"> Dan's OOO this week. It's a Python lint failure:. Thanks very much, @tpoterba! Should hopefully be better now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10647#issuecomment-876805713
https://github.com/hail-is/hail/pull/10648#issuecomment-879409551:87,Deployability,upgrade,upgrade,87,Don't let me forget to announce this on Zulip! We need to both announce we're doing an upgrade and that we are enforcing quotas for the root file system.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10648#issuecomment-879409551
https://github.com/hail-is/hail/pull/10648#issuecomment-879462826:348,Performance,cache,cache,348,"Action items for getting this in:; - Delete Docker's copy of an image when deleting an expanded root filesystem; - Try docker save instead of docker export so docker doesn't create a container. If this doesn't work, delete the container before deleting the image; - Pull every time a job is run for authentication purposes; - Up the reserved image cache size to 30",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10648#issuecomment-879462826
https://github.com/hail-is/hail/pull/10648#issuecomment-879462826:299,Security,authenticat,authentication,299,"Action items for getting this in:; - Delete Docker's copy of an image when deleting an expanded root filesystem; - Try docker save instead of docker export so docker doesn't create a container. If this doesn't work, delete the container before deleting the image; - Pull every time a job is run for authentication purposes; - Up the reserved image cache size to 30",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10648#issuecomment-879462826
https://github.com/hail-is/hail/pull/10656#issuecomment-885229140:16,Testability,test,test,16,Closing while I test out changes.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10656#issuecomment-885229140
https://github.com/hail-is/hail/pull/10668#issuecomment-880963568:30,Testability,test,tests,30,Force merging this. All other tests besides callback tests are passing.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10668#issuecomment-880963568
https://github.com/hail-is/hail/pull/10668#issuecomment-880963568:53,Testability,test,tests,53,Force merging this. All other tests besides callback tests are passing.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10668#issuecomment-880963568
https://github.com/hail-is/hail/pull/10671#issuecomment-881473556:9,Availability,failure,failure,9,"The test failure here is spurious, happening because batch is going through a transition / upgrade and things are a little broken right now. Will make sure this merges when that's resolved.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10671#issuecomment-881473556
https://github.com/hail-is/hail/pull/10671#issuecomment-881473556:91,Deployability,upgrade,upgrade,91,"The test failure here is spurious, happening because batch is going through a transition / upgrade and things are a little broken right now. Will make sure this merges when that's resolved.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10671#issuecomment-881473556
https://github.com/hail-is/hail/pull/10671#issuecomment-881473556:4,Testability,test,test,4,"The test failure here is spurious, happening because batch is going through a transition / upgrade and things are a little broken right now. Will make sure this merges when that's resolved.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10671#issuecomment-881473556
https://github.com/hail-is/hail/pull/10672#issuecomment-881705887:99,Deployability,pipeline,pipeline,99,"Ha, couldn't have come at a better time -- this is the profile trace from a split/densify/sampleqc pipeline:. ![image](https://user-images.githubusercontent.com/10562794/126006170-ed653c9c-ec36-4d29-95b9-732be6313cca.png)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10672#issuecomment-881705887
https://github.com/hail-is/hail/issues/10676#issuecomment-899588096:30,Deployability,update,update,30,"Fixed by #10781, website will update when we release hail 0.2.75",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10676#issuecomment-899588096
https://github.com/hail-is/hail/issues/10676#issuecomment-899588096:45,Deployability,release,release,45,"Fixed by #10781, website will update when we release hail 0.2.75",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10676#issuecomment-899588096
https://github.com/hail-is/hail/pull/10677#issuecomment-882662210:63,Deployability,release,release,63,#10612 Is the only user-visible change to batch since the last release.; > CHANGELOG: Made failed Python Jobs have non-zero exit codes.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10677#issuecomment-882662210
https://github.com/hail-is/hail/issues/10682#issuecomment-883350719:24,Availability,error,error,24,"Thanks for the detailed error report! This is a known problem, fix is in PR: #10523",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10682#issuecomment-883350719
https://github.com/hail-is/hail/issues/10682#issuecomment-885125644:20,Deployability,release,released,20,"@DSuveges , we just released a new version of hail, 0.2.73, which contains this fix.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10682#issuecomment-885125644
https://github.com/hail-is/hail/pull/10695#issuecomment-885859375:27,Testability,test,test,27,"Trying to cook up a python test that wouldn't pass without this, surprisingly annoying.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10695#issuecomment-885859375
https://github.com/hail-is/hail/pull/10695#issuecomment-886215032:103,Modifiability,extend,extend,103,"I think:. ```; return hl.experimental.loop(; lambda f, array, idx: hl.if_else(idx > 10, array, f(array.extend(hl.str(idx)), idx + 1),; hl.tarray(hl.tstr), ['foo'], 1). ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10695#issuecomment-886215032
https://github.com/hail-is/hail/pull/10695#issuecomment-886215090:22,Testability,test,test,22,Could also do a scala test that asserts about memory usage.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10695#issuecomment-886215090
https://github.com/hail-is/hail/pull/10695#issuecomment-886215090:32,Testability,assert,asserts,32,Could also do a scala test that asserts about memory usage.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10695#issuecomment-886215090
https://github.com/hail-is/hail/pull/10695#issuecomment-886712569:17,Testability,test,test,17,"Added the python test, it returns bogus results in `main` so it's a good one.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10695#issuecomment-886712569
https://github.com/hail-is/hail/pull/10696#issuecomment-887830765:44,Availability,error,errors,44,Can you take another look? I'm getting test errors in other PRs that I hope this PR fixes.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10696#issuecomment-887830765
https://github.com/hail-is/hail/pull/10696#issuecomment-887830765:39,Testability,test,test,39,Can you take another look? I'm getting test errors in other PRs that I hope this PR fixes.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10696#issuecomment-887830765
https://github.com/hail-is/hail/pull/10697#issuecomment-885855540:24,Testability,test,tests,24,I think this might fail tests with an xpass on local backend.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10697#issuecomment-885855540
https://github.com/hail-is/hail/pull/10697#issuecomment-885863026:78,Testability,test,test,78,`test_read_partitions` fails on the local (I copied the annotations from that test),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10697#issuecomment-885863026
https://github.com/hail-is/hail/pull/10703#issuecomment-887575834:187,Security,expose,exposed,187,"> Read through and looks good. Just checking: this is just intended to be an internal registered function, not something for users to call, right?. Users may sometimes use this -- it was exposed through `hl.experimental` previously as part of the vcf combiner utilities, I just moved it to `hl.vds` (though it still exists at the old location for compatibility)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10703#issuecomment-887575834
https://github.com/hail-is/hail/pull/10705#issuecomment-888513583:29,Availability,error,error,29,@daniel-goldstein I found an error in async_cancel that was exposed by the new version of nest_asyncio. I'm 99% sure the change is correct. Feel free to ask Dan to double check it. The issue was that `fetch_coro` is a Task and not a Future. Cancelling a task just adds the cancellation event to the event loop. You have to actually wait for it to finish before the state of the task will be cancelled. Dan wrote a bunch of tests that asserted `cancel` results in `cancelled == True`.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10705#issuecomment-888513583
https://github.com/hail-is/hail/pull/10705#issuecomment-888513583:60,Security,expose,exposed,60,@daniel-goldstein I found an error in async_cancel that was exposed by the new version of nest_asyncio. I'm 99% sure the change is correct. Feel free to ask Dan to double check it. The issue was that `fetch_coro` is a Task and not a Future. Cancelling a task just adds the cancellation event to the event loop. You have to actually wait for it to finish before the state of the task will be cancelled. Dan wrote a bunch of tests that asserted `cancel` results in `cancelled == True`.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10705#issuecomment-888513583
https://github.com/hail-is/hail/pull/10705#issuecomment-888513583:423,Testability,test,tests,423,@daniel-goldstein I found an error in async_cancel that was exposed by the new version of nest_asyncio. I'm 99% sure the change is correct. Feel free to ask Dan to double check it. The issue was that `fetch_coro` is a Task and not a Future. Cancelling a task just adds the cancellation event to the event loop. You have to actually wait for it to finish before the state of the task will be cancelled. Dan wrote a bunch of tests that asserted `cancel` results in `cancelled == True`.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10705#issuecomment-888513583
https://github.com/hail-is/hail/pull/10705#issuecomment-888513583:434,Testability,assert,asserted,434,@daniel-goldstein I found an error in async_cancel that was exposed by the new version of nest_asyncio. I'm 99% sure the change is correct. Feel free to ask Dan to double check it. The issue was that `fetch_coro` is a Task and not a Future. Cancelling a task just adds the cancellation event to the event loop. You have to actually wait for it to finish before the state of the task will be cancelled. Dan wrote a bunch of tests that asserted `cancel` results in `cancelled == True`.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10705#issuecomment-888513583
https://github.com/hail-is/hail/pull/10707#issuecomment-887127406:5,Testability,test,tests,5,Some tests failing. But there are also two good tests that are passing now:. ```; test_aggregator_info_score; test_logistic_regression_wald_dosage; ```. You have to remove the `fails_local_backend` and `fails_service_backend` annotations from those tests since they pass now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10707#issuecomment-887127406
https://github.com/hail-is/hail/pull/10707#issuecomment-887127406:48,Testability,test,tests,48,Some tests failing. But there are also two good tests that are passing now:. ```; test_aggregator_info_score; test_logistic_regression_wald_dosage; ```. You have to remove the `fails_local_backend` and `fails_service_backend` annotations from those tests since they pass now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10707#issuecomment-887127406
https://github.com/hail-is/hail/pull/10707#issuecomment-887127406:249,Testability,test,tests,249,Some tests failing. But there are also two good tests that are passing now:. ```; test_aggregator_info_score; test_logistic_regression_wald_dosage; ```. You have to remove the `fails_local_backend` and `fails_service_backend` annotations from those tests since they pass now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10707#issuecomment-887127406
https://github.com/hail-is/hail/pull/10713#issuecomment-891277817:23,Availability,down,down,23,Good work hunting this down; these messages are always a pain to find.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10713#issuecomment-891277817
https://github.com/hail-is/hail/pull/10713#issuecomment-891277817:35,Integrability,message,messages,35,Good work hunting this down; these messages are always a pain to find.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10713#issuecomment-891277817
https://github.com/hail-is/hail/pull/10716#issuecomment-888459694:120,Availability,error,error,120,"So there's a double regex substitution now in this version. I couldn't figure out how to avoid this without having nice error checking at the exact line there's a problem. For example, `j.command(f'{b}')` right now immediately errors with a nice error message. But if the error checking doesn't come until the massive parallel `_compile` in `Backend.run`, then it will be harder to tell where the error is. I thought about having a `debug_mode` which is on by default that does the double check while the `debug_mode` being off is more efficient.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10716#issuecomment-888459694
https://github.com/hail-is/hail/pull/10716#issuecomment-888459694:227,Availability,error,errors,227,"So there's a double regex substitution now in this version. I couldn't figure out how to avoid this without having nice error checking at the exact line there's a problem. For example, `j.command(f'{b}')` right now immediately errors with a nice error message. But if the error checking doesn't come until the massive parallel `_compile` in `Backend.run`, then it will be harder to tell where the error is. I thought about having a `debug_mode` which is on by default that does the double check while the `debug_mode` being off is more efficient.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10716#issuecomment-888459694
https://github.com/hail-is/hail/pull/10716#issuecomment-888459694:246,Availability,error,error,246,"So there's a double regex substitution now in this version. I couldn't figure out how to avoid this without having nice error checking at the exact line there's a problem. For example, `j.command(f'{b}')` right now immediately errors with a nice error message. But if the error checking doesn't come until the massive parallel `_compile` in `Backend.run`, then it will be harder to tell where the error is. I thought about having a `debug_mode` which is on by default that does the double check while the `debug_mode` being off is more efficient.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10716#issuecomment-888459694
https://github.com/hail-is/hail/pull/10716#issuecomment-888459694:272,Availability,error,error,272,"So there's a double regex substitution now in this version. I couldn't figure out how to avoid this without having nice error checking at the exact line there's a problem. For example, `j.command(f'{b}')` right now immediately errors with a nice error message. But if the error checking doesn't come until the massive parallel `_compile` in `Backend.run`, then it will be harder to tell where the error is. I thought about having a `debug_mode` which is on by default that does the double check while the `debug_mode` being off is more efficient.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10716#issuecomment-888459694
https://github.com/hail-is/hail/pull/10716#issuecomment-888459694:397,Availability,error,error,397,"So there's a double regex substitution now in this version. I couldn't figure out how to avoid this without having nice error checking at the exact line there's a problem. For example, `j.command(f'{b}')` right now immediately errors with a nice error message. But if the error checking doesn't come until the massive parallel `_compile` in `Backend.run`, then it will be harder to tell where the error is. I thought about having a `debug_mode` which is on by default that does the double check while the `debug_mode` being off is more efficient.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10716#issuecomment-888459694
https://github.com/hail-is/hail/pull/10716#issuecomment-888459694:536,Energy Efficiency,efficient,efficient,536,"So there's a double regex substitution now in this version. I couldn't figure out how to avoid this without having nice error checking at the exact line there's a problem. For example, `j.command(f'{b}')` right now immediately errors with a nice error message. But if the error checking doesn't come until the massive parallel `_compile` in `Backend.run`, then it will be harder to tell where the error is. I thought about having a `debug_mode` which is on by default that does the double check while the `debug_mode` being off is more efficient.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10716#issuecomment-888459694
https://github.com/hail-is/hail/pull/10716#issuecomment-888459694:252,Integrability,message,message,252,"So there's a double regex substitution now in this version. I couldn't figure out how to avoid this without having nice error checking at the exact line there's a problem. For example, `j.command(f'{b}')` right now immediately errors with a nice error message. But if the error checking doesn't come until the massive parallel `_compile` in `Backend.run`, then it will be harder to tell where the error is. I thought about having a `debug_mode` which is on by default that does the double check while the `debug_mode` being off is more efficient.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10716#issuecomment-888459694
https://github.com/hail-is/hail/pull/10716#issuecomment-888459694:89,Safety,avoid,avoid,89,"So there's a double regex substitution now in this version. I couldn't figure out how to avoid this without having nice error checking at the exact line there's a problem. For example, `j.command(f'{b}')` right now immediately errors with a nice error message. But if the error checking doesn't come until the massive parallel `_compile` in `Backend.run`, then it will be harder to tell where the error is. I thought about having a `debug_mode` which is on by default that does the double check while the `debug_mode` being off is more efficient.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10716#issuecomment-888459694
https://github.com/hail-is/hail/pull/10716#issuecomment-895316665:181,Modifiability,variab,variable,181,I fixed the code so that there's one interpolation step. What I did was use the job name plus a random token as the job directory name and the batch tmp directory is an environment variable. I'm happy with this setup. Then it will be easier for users to tell where files came from if they give jobs unique names.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10716#issuecomment-895316665
https://github.com/hail-is/hail/issues/10722#issuecomment-903834761:44,Deployability,update,update,44,I'm intending to debug/fix this today. I'll update this evening about progress.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10722#issuecomment-903834761
https://github.com/hail-is/hail/pull/10723#issuecomment-893571812:122,Deployability,update,updated,122,"oh, nice! Is this the issue we talked about that one time a few months ago?. I would love to be able to sort by ""recently updated"" accurately again!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10723#issuecomment-893571812
https://github.com/hail-is/hail/pull/10723#issuecomment-893589750:80,Deployability,update,updated,80,"Yup! I got a better understanding why PRs stuck on merge conflicts keep getting updated all of the time in my own tinkering, but I want to be sure of the general case before following up and this will be a useful metric.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10723#issuecomment-893589750
https://github.com/hail-is/hail/pull/10732#issuecomment-891315108:29,Testability,test,test,29,I'm not sure how to actually test these changes.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10732#issuecomment-891315108
https://github.com/hail-is/hail/pull/10732#issuecomment-892827072:36,Deployability,deploy,deploy,36,"I think it could be enough to `make deploy` prometheus in your own namespace, kick off a couple PR builds if there aren't any, and check that your prometheus doesn't contain any of those entries. You can run queries through the prometheus UI.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10732#issuecomment-892827072
https://github.com/hail-is/hail/pull/10732#issuecomment-895582030:2,Testability,test,tested,2,I tested this in my namespace and it should be good to go.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10732#issuecomment-895582030
https://github.com/hail-is/hail/pull/10736#issuecomment-891282462:69,Deployability,deploy,deployments,69,"nginx should need the services (i.e. domain names) to exist, not the deployments.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10736#issuecomment-891282462
https://github.com/hail-is/hail/pull/10736#issuecomment-891312778:71,Deployability,deploy,deployments,71,"> nginx should need the services (i.e. domain names) to exist, not the deployments. Ah, that makes sense. I suppose that's why the service definition of `router` used to exist along with gateway's k8s config.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10736#issuecomment-891312778
https://github.com/hail-is/hail/pull/10736#issuecomment-891312778:154,Integrability,rout,router,154,"> nginx should need the services (i.e. domain names) to exist, not the deployments. Ah, that makes sense. I suppose that's why the service definition of `router` used to exist along with gateway's k8s config.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10736#issuecomment-891312778
https://github.com/hail-is/hail/pull/10736#issuecomment-891312778:201,Modifiability,config,config,201,"> nginx should need the services (i.e. domain names) to exist, not the deployments. Ah, that makes sense. I suppose that's why the service definition of `router` used to exist along with gateway's k8s config.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10736#issuecomment-891312778
https://github.com/hail-is/hail/issues/10747#issuecomment-892875634:321,Deployability,install,installed,321,"We do still require it, seems like an oversight that it's no longer listed as required. This discuss post: https://discuss.hail.is/t/native-compilation-lz4-issue-on-centos-7-8-2003/2076. suggests that maybe once you've failed to build because you didn't have lz4, you might have to `make clean` and then try again having installed lz4. Maybe try that?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10747#issuecomment-892875634
https://github.com/hail-is/hail/issues/10747#issuecomment-893876601:75,Performance,perform,performed,75,"Can we fix the docs to correctly list the `lz4` libraries as required? . I performed `make clean` and that resolved the `make[1]: *** No rule to make target lz4.h', needed by build/Decoder.o'. Stop.` issue. . Note that the build not only requires `liblz4-1` and `liblz4-dev` (Ubuntu) / `lz4` and `lz4-devel` (CentOS), it also requires `rsync` and `python-setuptools` libraries. . Can we fix the docs to include these?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10747#issuecomment-893876601
https://github.com/hail-is/hail/issues/10747#issuecomment-893937331:149,Deployability,install,installing,149,"Yes, will fix. I'll do a build tomorrow from scratch on a VM and make sure docs are up to date. Did you then ultimately get your build to work after installing those things?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10747#issuecomment-893937331
https://github.com/hail-is/hail/issues/10747#issuecomment-894259075:74,Integrability,depend,dependencies,74,"Yes, thank you - all resolved with a clean build + inclusion of the above dependencies.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10747#issuecomment-894259075
https://github.com/hail-is/hail/pull/10748#issuecomment-893816262:126,Availability,failure,failure,126,Double check that the test is what you want. I made the bounds pretty wide to make sure we never had an unlucky sporadic test failure.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10748#issuecomment-893816262
https://github.com/hail-is/hail/pull/10748#issuecomment-893816262:22,Testability,test,test,22,Double check that the test is what you want. I made the bounds pretty wide to make sure we never had an unlucky sporadic test failure.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10748#issuecomment-893816262
https://github.com/hail-is/hail/pull/10748#issuecomment-893816262:121,Testability,test,test,121,Double check that the test is what you want. I made the bounds pretty wide to make sure we never had an unlucky sporadic test failure.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10748#issuecomment-893816262
https://github.com/hail-is/hail/pull/10752#issuecomment-894603668:79,Testability,test,tests,79,"timings for `cseed/fs-baseline` (`hail-is/main` plus some bug fixes to get the tests to run): https://gist.github.com/cseed/80a3f1bca7a91a1b0f1240cd3663184c. timings for this branch, `cseed/s3-opt`: https://gist.github.com/cseed/6d6a541784d6bb3dc7610ae9a99c70b4. `hail-is/main` actually does pretty well, which surprised me, when I was testing earlier (but similar?) versions copying data from GCS to S3, I saw much slower speeds and I'm not totally sure why. Note, I didn't do cloud-to-cloud tests here, so you should do that.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-894603668
https://github.com/hail-is/hail/pull/10752#issuecomment-894603668:336,Testability,test,testing,336,"timings for `cseed/fs-baseline` (`hail-is/main` plus some bug fixes to get the tests to run): https://gist.github.com/cseed/80a3f1bca7a91a1b0f1240cd3663184c. timings for this branch, `cseed/s3-opt`: https://gist.github.com/cseed/6d6a541784d6bb3dc7610ae9a99c70b4. `hail-is/main` actually does pretty well, which surprised me, when I was testing earlier (but similar?) versions copying data from GCS to S3, I saw much slower speeds and I'm not totally sure why. Note, I didn't do cloud-to-cloud tests here, so you should do that.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-894603668
https://github.com/hail-is/hail/pull/10752#issuecomment-894603668:493,Testability,test,tests,493,"timings for `cseed/fs-baseline` (`hail-is/main` plus some bug fixes to get the tests to run): https://gist.github.com/cseed/80a3f1bca7a91a1b0f1240cd3663184c. timings for this branch, `cseed/s3-opt`: https://gist.github.com/cseed/6d6a541784d6bb3dc7610ae9a99c70b4. `hail-is/main` actually does pretty well, which surprised me, when I was testing earlier (but similar?) versions copying data from GCS to S3, I saw much slower speeds and I'm not totally sure why. Note, I didn't do cloud-to-cloud tests here, so you should do that.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-894603668
https://github.com/hail-is/hail/pull/10752#issuecomment-896959032:245,Deployability,release,release,245,"I'm going to benchmark this today and if nothing has changed since Cotton's benchmarks, I think we're good for a merge. I had hoped to begin working with Grace's team to use this tool on Thursday. I can build a wheel, since I don't anticipate a release happening so fast.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-896959032
https://github.com/hail-is/hail/pull/10752#issuecomment-896959032:13,Testability,benchmark,benchmark,13,"I'm going to benchmark this today and if nothing has changed since Cotton's benchmarks, I think we're good for a merge. I had hoped to begin working with Grace's team to use this tool on Thursday. I can build a wheel, since I don't anticipate a release happening so fast.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-896959032
https://github.com/hail-is/hail/pull/10752#issuecomment-896959032:76,Testability,benchmark,benchmarks,76,"I'm going to benchmark this today and if nothing has changed since Cotton's benchmarks, I think we're good for a merge. I had hoped to begin working with Grace's team to use this tool on Thursday. I can build a wheel, since I don't anticipate a release happening so fast.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-896959032
https://github.com/hail-is/hail/pull/10752#issuecomment-897018931:280,Availability,error,error,280,This is failing with this message:. ```; + python3 -m pylint --rcfile pylintrc hailtop; ************* Module hailtop.aiotools.weighted_semaphore; /usr/local/lib/python3.7/dist-packages/hailtop/aiotools/weighted_semaphore.py:2:0: E0401: Unable to import 'sortedcontainers' (import-error); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897018931
https://github.com/hail-is/hail/pull/10752#issuecomment-897018931:26,Integrability,message,message,26,This is failing with this message:. ```; + python3 -m pylint --rcfile pylintrc hailtop; ************* Module hailtop.aiotools.weighted_semaphore; /usr/local/lib/python3.7/dist-packages/hailtop/aiotools/weighted_semaphore.py:2:0: E0401: Unable to import 'sortedcontainers' (import-error); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897018931
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:927,Modifiability,config,config,927,"The results follow. We seem to get better bandwidth from GCP VMs and/or out of S3. In either case, we aggregate bandwidth substantially decreases at 40k files of size ~100kB. Theoretical egress from the GCP VM I used is 2 GB/s. Ingress is ~3 GB/s. S3 claims as much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 't",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1085,Modifiability,config,config,1085,"ase, we aggregate bandwidth substantially decreases at 40k files of size ~100kB. Theoretical egress from the GCP VM I used is 2 GB/s. Ingress is ~3 GB/s. S3 claims as much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config':",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1247,Modifiability,config,config,1247,"ms as much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}].",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1410,Modifiability,config,config,1410," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1573,Modifiability,config,config,1573," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1741,Modifiability,config,config,1741," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1913,Modifiability,config,config,1913," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:2086,Modifiability,config,config,2086," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:968,Testability,test,test-copy,968,"The results follow. We seem to get better bandwidth from GCP VMs and/or out of S3. In either case, we aggregate bandwidth substantially decreases at 40k files of size ~100kB. Theoretical egress from the GCP VM I used is 2 GB/s. Ingress is ~3 GB/s. S3 claims as much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 't",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:984,Testability,benchmark,benchmark,984,"The results follow. We seem to get better bandwidth from GCP VMs and/or out of S3. In either case, we aggregate bandwidth substantially decreases at 40k files of size ~100kB. Theoretical egress from the GCP VM I used is 2 GB/s. Ingress is ~3 GB/s. S3 claims as much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 't",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1037,Testability,test,test-,1037,"ase, we aggregate bandwidth substantially decreases at 40k files of size ~100kB. Theoretical egress from the GCP VM I used is 2 GB/s. Ingress is ~3 GB/s. S3 claims as much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config':",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1065,Testability,benchmark,benchmark,1065,"ase, we aggregate bandwidth substantially decreases at 40k files of size ~100kB. Theoretical egress from the GCP VM I used is 2 GB/s. Ingress is ~3 GB/s. S3 claims as much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config':",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1127,Testability,test,test-copy,1127,"ase, we aggregate bandwidth substantially decreases at 40k files of size ~100kB. Theoretical egress from the GCP VM I used is 2 GB/s. Ingress is ~3 GB/s. S3 claims as much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config':",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1143,Testability,benchmark,benchmark,1143,"ase, we aggregate bandwidth substantially decreases at 40k files of size ~100kB. Theoretical egress from the GCP VM I used is 2 GB/s. Ingress is ~3 GB/s. S3 claims as much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config':",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1198,Testability,test,test-,1198,"ms as much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}].",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1226,Testability,benchmark,benchmark,1226,"ms as much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}].",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1289,Testability,test,test-copy,1289,"ms as much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}].",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1305,Testability,benchmark,benchmark,1305,"ms as much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}].",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1361,Testability,test,test-,1361," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1389,Testability,benchmark,benchmark,1389," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1452,Testability,test,test-copy,1452," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1468,Testability,benchmark,benchmark,1468," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1524,Testability,test,test-,1524," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1552,Testability,benchmark,benchmark,1552," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1609,Testability,test,test-,1609," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1624,Testability,test,test-copy,1624," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1640,Testability,benchmark,benchmark,1640," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1698,Testability,test,test-copy,1698," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1721,Testability,benchmark,benchmark,1721," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1778,Testability,test,test-,1778," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1793,Testability,test,test-copy,1793," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1809,Testability,benchmark,benchmark,1809," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1869,Testability,test,test-copy,1869," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1892,Testability,benchmark,benchmark,1892," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1950,Testability,test,test-,1950," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1965,Testability,test,test-copy,1965," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1981,Testability,benchmark,benchmark,1981," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:2042,Testability,test,test-copy,2042," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:2065,Testability,benchmark,benchmark,2065," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:2123,Testability,test,test-,2123," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:2138,Testability,test,test-copy,2138," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:2154,Testability,benchmark,benchmark,2154," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:2215,Testability,test,test-copy,2215," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:2238,Testability,benchmark,benchmark,2238," much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}]. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697
https://github.com/hail-is/hail/pull/10761#issuecomment-894501440:87,Availability,failure,failure,87,Why would we want the behavior to be that a user has to explicitly cancel batches on a failure? This code already does that:. ```python3; async def async_result_or_cancel_all(future):; try:; return await future.async_result(timeout=timeout); except Exception as err:; for fut in futures:; fut.cancel(); raise err; if chunksize > 1:; return (val; for future in futures; for val in await async_result_or_cancel_all(future)); return (await async_result_or_cancel_all(future); for future in futures); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10761#issuecomment-894501440
https://github.com/hail-is/hail/pull/10761#issuecomment-894501440:224,Safety,timeout,timeout,224,Why would we want the behavior to be that a user has to explicitly cancel batches on a failure? This code already does that:. ```python3; async def async_result_or_cancel_all(future):; try:; return await future.async_result(timeout=timeout); except Exception as err:; for fut in futures:; fut.cancel(); raise err; if chunksize > 1:; return (val; for future in futures; for val in await async_result_or_cancel_all(future)); return (await async_result_or_cancel_all(future); for future in futures); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10761#issuecomment-894501440
https://github.com/hail-is/hail/pull/10761#issuecomment-894501440:232,Safety,timeout,timeout,232,Why would we want the behavior to be that a user has to explicitly cancel batches on a failure? This code already does that:. ```python3; async def async_result_or_cancel_all(future):; try:; return await future.async_result(timeout=timeout); except Exception as err:; for fut in futures:; fut.cancel(); raise err; if chunksize > 1:; return (val; for future in futures; for val in await async_result_or_cancel_all(future)); return (await async_result_or_cancel_all(future); for future in futures); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10761#issuecomment-894501440
https://github.com/hail-is/hail/pull/10763#issuecomment-895262768:24,Availability,failure,failures,24,Requiredness suite test failures,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10763#issuecomment-895262768
https://github.com/hail-is/hail/pull/10763#issuecomment-895262768:19,Testability,test,test,19,Requiredness suite test failures,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10763#issuecomment-895262768
https://github.com/hail-is/hail/pull/10766#issuecomment-895516349:52,Performance,perform,performance,52,"Woah, so fast! . I think this is going to have poor performance until you implement the batched readers writers that look like. ```java; public void write(byte b[], int off, int len) throws IOException; public int read(byte b[], int off, int len) throws IOException. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10766#issuecomment-895516349
https://github.com/hail-is/hail/pull/10766#issuecomment-896016575:62,Testability,benchmark,benchmarks,62,"This is really baffling. Maybe this code isn't really used in benchmarks in local mode? I would expect that *every* write/read from these buffers for SerializableRegionValue would go through the array/buffer read calls, because we use StreamBlockBuffer for the buffer spec:. ```scala; val wireSpec: BufferSpec = LEB128BufferSpec(; BlockingBufferSpec(32 * 1024,; LZ4SizeBasedBlockBufferSpec(""fast"", 32 * 1024,; 256,; new StreamBlockBufferSpec))); ```. We won't call write/read on the output/input buffers except to write/read blocks.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10766#issuecomment-896016575
https://github.com/hail-is/hail/pull/10766#issuecomment-896337273:231,Performance,perform,performance,231,"> Maybe it's because OutputStream.write has a default implementation in Java?. Yeah, that default implementation should be WAY slower than an implementation that uses System.arrayCopy though. That's why I'm surprised you don't see performance regressions.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10766#issuecomment-896337273
https://github.com/hail-is/hail/pull/10766#issuecomment-912782196:43,Testability,benchmark,benchmarks,43,"Ok, wrote the multi byte versions, running benchmarks.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10766#issuecomment-912782196
https://github.com/hail-is/hail/pull/10766#issuecomment-929489998:22,Testability,benchmark,benchmark,22,"Addressed, want me to benchmark again?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10766#issuecomment-929489998
https://github.com/hail-is/hail/pull/10770#issuecomment-897005443:72,Usability,clear,clearly,72,My hacky attempt to allow setting a path to an alternate lapack library clearly doesn't work on the cluster: it's trying to look up a flag on the HailContext on workers. Open to suggestions on the right design here.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10770#issuecomment-897005443
https://github.com/hail-is/hail/pull/10770#issuecomment-897020574:62,Modifiability,variab,variable,62,"Hmmm... I guess we could just have it look for an environment variable, instead of asking for a flag on `HailContext`. Easy enough to set the environment variable in the `hailctl` init scripts. . You should maybe name it `HAIL_MKL_PATH` instead of `MKL_PATH`, so people know what this variable is for / doesn't conflict with other tools variables.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10770#issuecomment-897020574
https://github.com/hail-is/hail/pull/10770#issuecomment-897020574:154,Modifiability,variab,variable,154,"Hmmm... I guess we could just have it look for an environment variable, instead of asking for a flag on `HailContext`. Easy enough to set the environment variable in the `hailctl` init scripts. . You should maybe name it `HAIL_MKL_PATH` instead of `MKL_PATH`, so people know what this variable is for / doesn't conflict with other tools variables.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10770#issuecomment-897020574
https://github.com/hail-is/hail/pull/10770#issuecomment-897020574:285,Modifiability,variab,variable,285,"Hmmm... I guess we could just have it look for an environment variable, instead of asking for a flag on `HailContext`. Easy enough to set the environment variable in the `hailctl` init scripts. . You should maybe name it `HAIL_MKL_PATH` instead of `MKL_PATH`, so people know what this variable is for / doesn't conflict with other tools variables.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10770#issuecomment-897020574
https://github.com/hail-is/hail/pull/10770#issuecomment-897020574:337,Modifiability,variab,variables,337,"Hmmm... I guess we could just have it look for an environment variable, instead of asking for a flag on `HailContext`. Easy enough to set the environment variable in the `hailctl` init scripts. . You should maybe name it `HAIL_MKL_PATH` instead of `MKL_PATH`, so people know what this variable is for / doesn't conflict with other tools variables.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10770#issuecomment-897020574
https://github.com/hail-is/hail/pull/10770#issuecomment-897042440:57,Deployability,update,updated,57,Changed to use the environment variable directly. I also updated the PR description with details on how to install mkl and make Hail load it.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10770#issuecomment-897042440
https://github.com/hail-is/hail/pull/10770#issuecomment-897042440:107,Deployability,install,install,107,Changed to use the environment variable directly. I also updated the PR description with details on how to install mkl and make Hail load it.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10770#issuecomment-897042440
https://github.com/hail-is/hail/pull/10770#issuecomment-897042440:31,Modifiability,variab,variable,31,Changed to use the environment variable directly. I also updated the PR description with details on how to install mkl and make Hail load it.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10770#issuecomment-897042440
https://github.com/hail-is/hail/pull/10770#issuecomment-897042440:133,Performance,load,load,133,Changed to use the environment variable directly. I also updated the PR description with details on how to install mkl and make Hail load it.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10770#issuecomment-897042440
https://github.com/hail-is/hail/pull/10771#issuecomment-904091995:27,Security,hash,hash,27,Would be great if we could hash this out. This PR / fix is blocking getting the PR in that uses the AsyncFS everywhere.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10771#issuecomment-904091995
https://github.com/hail-is/hail/pull/10771#issuecomment-904688934:704,Availability,avail,available,704,"`read()` with no argument is `read(-1)`. Python's [`read`](https://docs.python.org/3/library/io.html#io.RawIOBase.read) and aiohttp's [`read`](https://docs.aiohttp.org/en/stable/streams.html#aiohttp.StreamReader.read) will return all bytes until EOF if their argument is `-1`. Python:; > Read up to size bytes from the object and return them. As a convenience, if size is unspecified or -1, all bytes until EOF are returned. Otherwise, only one system call is ever made. Fewer than size bytes may be returned if the operating system call returns fewer than size bytes.; > ; > If 0 bytes are returned, and size was not 0, this indicates end of file. If the object is in non-blocking mode and no bytes are available, None is returned.; >; > The default implementation defers to readall() and readinto(). Aiohttp:; > Read up to n bytes. If n is not provided, or set to -1, read until EOF and return all read bytes.; >; > If the EOF was received and the internal buffer is empty, return an empty bytes object. We should document that our `read` follows these same rules in `hailtop.aiotools.stream.ReadableStream.read`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10771#issuecomment-904688934
https://github.com/hail-is/hail/pull/10772#issuecomment-901466830:157,Modifiability,config,config-file,157,It also looks like we might be able to set datasource as [editable](https://grafana.com/docs/grafana/latest/administration/provisioning/#example-data-source-config-file) in case we need to make any immediate fixes after this merges.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10772#issuecomment-901466830
https://github.com/hail-is/hail/pull/10772#issuecomment-905873596:25,Energy Efficiency,Monitor,Monitoring,25,"I added the Google Cloud Monitoring datasource, which I think is the only thing missing out of this PR. If you're ok with this we should merge this PR and close mine.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10772#issuecomment-905873596
https://github.com/hail-is/hail/pull/10772#issuecomment-905883214:144,Availability,recover,recover,144,"Can we make a ""backup"" of what the data source settings are that are working now before we redeploy this in default? I want to make sure we can recover if these changes put us in a bad state.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10772#issuecomment-905883214
https://github.com/hail-is/hail/pull/10772#issuecomment-905883214:144,Safety,recover,recover,144,"Can we make a ""backup"" of what the data source settings are that are working now before we redeploy this in default? I want to make sure we can recover if these changes put us in a bad state.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10772#issuecomment-905883214
https://github.com/hail-is/hail/pull/10772#issuecomment-906539923:9,Availability,down,downloaded,9,"Ok, I've downloaded JSON for the batch, default, and CI dashboards (I don't think any of the other ones are really used?), and recorded the configurations for the GCP and prometheus datasources, so I think I should be able to quickly reconfigure grafana if everything is lost.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10772#issuecomment-906539923
https://github.com/hail-is/hail/pull/10772#issuecomment-906539923:140,Deployability,configurat,configurations,140,"Ok, I've downloaded JSON for the batch, default, and CI dashboards (I don't think any of the other ones are really used?), and recorded the configurations for the GCP and prometheus datasources, so I think I should be able to quickly reconfigure grafana if everything is lost.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10772#issuecomment-906539923
https://github.com/hail-is/hail/pull/10772#issuecomment-906539923:140,Modifiability,config,configurations,140,"Ok, I've downloaded JSON for the batch, default, and CI dashboards (I don't think any of the other ones are really used?), and recorded the configurations for the GCP and prometheus datasources, so I think I should be able to quickly reconfigure grafana if everything is lost.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10772#issuecomment-906539923
https://github.com/hail-is/hail/pull/10773#issuecomment-900335924:100,Testability,test,tests,100,I backed out the iota optimzations to make this PR less controversial -- it now only introduces and tests StreamTakeWhile and StreamDropWhile. The other functionality will be a stacked PR.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10773#issuecomment-900335924
https://github.com/hail-is/hail/pull/10777#issuecomment-921329857:0,Integrability,Depend,Depending,0,"Depending on desired PL behavior, there's one last mismatch between the new combiner and the old one. The new combiner doesn't compute `RGQ` at all for reference alleles, I think this is fine.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10777#issuecomment-921329857
https://github.com/hail-is/hail/pull/10777#issuecomment-921767047:2,Integrability,Depend,Depending,2,"> Depending on desired PL behavior, there's one last mismatch between the new combiner and the old one. > The new combiner doesn't compute RGQ at all for reference alleles, I think this is fine. I think this is OK. Ship it!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10777#issuecomment-921767047
https://github.com/hail-is/hail/pull/10778#issuecomment-897970304:30,Testability,test,tests,30,"This looks fine to me, but ci tests are failing in a bunch of places.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10778#issuecomment-897970304
https://github.com/hail-is/hail/pull/10785#issuecomment-900398381:174,Modifiability,variab,variables,174,"Good questions:. > How does Terraform know to import the module gsa_k8s_secret? I assume it just scans the directory. In short, yes. Every module is defined by a `main.tf`, `variables.tf`, and `outputs.tf`, and it finds it through the `source` path in the module blocks. When you run `terraform init` in the `infra` directory, it scans `main.tf`, sees that there are module references to the local filesystem, and sets up a watch on that directory (you can still make changes to `gsa_k8s_secret` without re-running `init`). > What does ${module.ci_gsa_secret....} do? Does module refer to that terraform file?. The way references work in terraform is a little bizarre. There are basically three classes of value that we use right now in terraform: resources, modules and variables. You declare instances of them like so (note that I'm using class and instance colloquially):. ```; resource <resource_class_name> <resource_instance_name> {; …; }. # I like to think of modules as being essentially unnamed collections of resources; module <module_instance_name> {; source = '/path/to/module'; …; }. variable <variable_name> {; …; }; ```. and then reference them like so:. ```; <resource_class_name>.<resource_instance_name>; module.<module_instance_name>; var.<variable_name>; ```. So module.ci_gsa_secret.... is how you would access `output`s of the module instance called `ci_gsa_secret`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10785#issuecomment-900398381
https://github.com/hail-is/hail/pull/10785#issuecomment-900398381:771,Modifiability,variab,variables,771,"Good questions:. > How does Terraform know to import the module gsa_k8s_secret? I assume it just scans the directory. In short, yes. Every module is defined by a `main.tf`, `variables.tf`, and `outputs.tf`, and it finds it through the `source` path in the module blocks. When you run `terraform init` in the `infra` directory, it scans `main.tf`, sees that there are module references to the local filesystem, and sets up a watch on that directory (you can still make changes to `gsa_k8s_secret` without re-running `init`). > What does ${module.ci_gsa_secret....} do? Does module refer to that terraform file?. The way references work in terraform is a little bizarre. There are basically three classes of value that we use right now in terraform: resources, modules and variables. You declare instances of them like so (note that I'm using class and instance colloquially):. ```; resource <resource_class_name> <resource_instance_name> {; …; }. # I like to think of modules as being essentially unnamed collections of resources; module <module_instance_name> {; source = '/path/to/module'; …; }. variable <variable_name> {; …; }; ```. and then reference them like so:. ```; <resource_class_name>.<resource_instance_name>; module.<module_instance_name>; var.<variable_name>; ```. So module.ci_gsa_secret.... is how you would access `output`s of the module instance called `ci_gsa_secret`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10785#issuecomment-900398381
https://github.com/hail-is/hail/pull/10785#issuecomment-900398381:1097,Modifiability,variab,variable,1097,"Good questions:. > How does Terraform know to import the module gsa_k8s_secret? I assume it just scans the directory. In short, yes. Every module is defined by a `main.tf`, `variables.tf`, and `outputs.tf`, and it finds it through the `source` path in the module blocks. When you run `terraform init` in the `infra` directory, it scans `main.tf`, sees that there are module references to the local filesystem, and sets up a watch on that directory (you can still make changes to `gsa_k8s_secret` without re-running `init`). > What does ${module.ci_gsa_secret....} do? Does module refer to that terraform file?. The way references work in terraform is a little bizarre. There are basically three classes of value that we use right now in terraform: resources, modules and variables. You declare instances of them like so (note that I'm using class and instance colloquially):. ```; resource <resource_class_name> <resource_instance_name> {; …; }. # I like to think of modules as being essentially unnamed collections of resources; module <module_instance_name> {; source = '/path/to/module'; …; }. variable <variable_name> {; …; }; ```. and then reference them like so:. ```; <resource_class_name>.<resource_instance_name>; module.<module_instance_name>; var.<variable_name>; ```. So module.ci_gsa_secret.... is how you would access `output`s of the module instance called `ci_gsa_secret`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10785#issuecomment-900398381
https://github.com/hail-is/hail/pull/10785#issuecomment-900398381:1325,Security,access,access,1325,"Good questions:. > How does Terraform know to import the module gsa_k8s_secret? I assume it just scans the directory. In short, yes. Every module is defined by a `main.tf`, `variables.tf`, and `outputs.tf`, and it finds it through the `source` path in the module blocks. When you run `terraform init` in the `infra` directory, it scans `main.tf`, sees that there are module references to the local filesystem, and sets up a watch on that directory (you can still make changes to `gsa_k8s_secret` without re-running `init`). > What does ${module.ci_gsa_secret....} do? Does module refer to that terraform file?. The way references work in terraform is a little bizarre. There are basically three classes of value that we use right now in terraform: resources, modules and variables. You declare instances of them like so (note that I'm using class and instance colloquially):. ```; resource <resource_class_name> <resource_instance_name> {; …; }. # I like to think of modules as being essentially unnamed collections of resources; module <module_instance_name> {; source = '/path/to/module'; …; }. variable <variable_name> {; …; }; ```. and then reference them like so:. ```; <resource_class_name>.<resource_instance_name>; module.<module_instance_name>; var.<variable_name>; ```. So module.ci_gsa_secret.... is how you would access `output`s of the module instance called `ci_gsa_secret`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10785#issuecomment-900398381
https://github.com/hail-is/hail/pull/10791#issuecomment-901427655:74,Availability,failure,failures,74,"Looks great, aside from Value.fromLIR stuff which I think is causing test failures.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10791#issuecomment-901427655
https://github.com/hail-is/hail/pull/10791#issuecomment-901427655:69,Testability,test,test,69,"Looks great, aside from Value.fromLIR stuff which I think is causing test failures.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10791#issuecomment-901427655
https://github.com/hail-is/hail/pull/10792#issuecomment-1075927168:27,Availability,failure,failures,27,Also those service backend failures are :100: because we need #11624 to merge. Feel free to @fails them and I'll deal with the conflict.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10792#issuecomment-1075927168
https://github.com/hail-is/hail/pull/10793#issuecomment-902307018:70,Integrability,depend,dependency,70,"I'm not sure what the class loading issues are, there's probably some dependency conflict that's been introduced by pulling in avro. Need to investigate, and possibly relocate avro.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10793#issuecomment-902307018
https://github.com/hail-is/hail/pull/10793#issuecomment-902307018:28,Performance,load,loading,28,"I'm not sure what the class loading issues are, there's probably some dependency conflict that's been introduced by pulling in avro. Need to investigate, and possibly relocate avro.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10793#issuecomment-902307018
https://github.com/hail-is/hail/pull/10793#issuecomment-902894763:96,Integrability,depend,dependencies,96,"okay, this passes locally, is there anything I need to do with the build images if I change the dependencies?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10793#issuecomment-902894763
https://github.com/hail-is/hail/pull/10793#issuecomment-902911748:44,Testability,test,test,44,"This is complete, but I need to know how to test it, I can't find explicit partition reader unit tests anywhere",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10793#issuecomment-902911748
https://github.com/hail-is/hail/pull/10793#issuecomment-902911748:97,Testability,test,tests,97,"This is complete, but I need to know how to test it, I can't find explicit partition reader unit tests anywhere",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10793#issuecomment-902911748
https://github.com/hail-is/hail/pull/10793#issuecomment-902972143:8,Testability,test,test,8,"You can test partition readers using the ReadPartition node, that's probably the easiest way. Make an IR that's ToArray(ReadPartition) and assert it matches.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10793#issuecomment-902972143
https://github.com/hail-is/hail/pull/10793#issuecomment-902972143:139,Testability,assert,assert,139,"You can test partition readers using the ReadPartition node, that's probably the easiest way. Make an IR that's ToArray(ReadPartition) and assert it matches.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10793#issuecomment-902972143
https://github.com/hail-is/hail/pull/10796#issuecomment-905768874:16,Testability,test,test,16,"Also, needs the test for hanging when trying to contact another ""worker""",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10796#issuecomment-905768874
https://github.com/hail-is/hail/pull/10796#issuecomment-905875522:74,Modifiability,config,config,74,"ugh, I'm going to have to rethink this or add `internal_ip` to the global config in `build.py`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10796#issuecomment-905875522
https://github.com/hail-is/hail/pull/10797#issuecomment-908587926:252,Performance,load,loadCheapSCodeField,252,"@chrisvittal Would you mind reviewing at least the changes since @tpoterba's approval, since he's out this week? Summary of the original changes is at the top. The main changes since that, which I made while debugging failing tests, are:; * Add `PType.loadCheapSCodeField`. Both this and `loadCheapSCode` now return an `SValue`, with the former using fields instead of locals.; * `SingleCodeSCode.loadToSValue` uses fields",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10797#issuecomment-908587926
https://github.com/hail-is/hail/pull/10797#issuecomment-908587926:289,Performance,load,loadCheapSCode,289,"@chrisvittal Would you mind reviewing at least the changes since @tpoterba's approval, since he's out this week? Summary of the original changes is at the top. The main changes since that, which I made while debugging failing tests, are:; * Add `PType.loadCheapSCodeField`. Both this and `loadCheapSCode` now return an `SValue`, with the former using fields instead of locals.; * `SingleCodeSCode.loadToSValue` uses fields",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10797#issuecomment-908587926
https://github.com/hail-is/hail/pull/10797#issuecomment-908587926:397,Performance,load,loadToSValue,397,"@chrisvittal Would you mind reviewing at least the changes since @tpoterba's approval, since he's out this week? Summary of the original changes is at the top. The main changes since that, which I made while debugging failing tests, are:; * Add `PType.loadCheapSCodeField`. Both this and `loadCheapSCode` now return an `SValue`, with the former using fields instead of locals.; * `SingleCodeSCode.loadToSValue` uses fields",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10797#issuecomment-908587926
https://github.com/hail-is/hail/pull/10797#issuecomment-908587926:226,Testability,test,tests,226,"@chrisvittal Would you mind reviewing at least the changes since @tpoterba's approval, since he's out this week? Summary of the original changes is at the top. The main changes since that, which I made while debugging failing tests, are:; * Add `PType.loadCheapSCodeField`. Both this and `loadCheapSCode` now return an `SValue`, with the former using fields instead of locals.; * `SingleCodeSCode.loadToSValue` uses fields",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10797#issuecomment-908587926
https://github.com/hail-is/hail/pull/10797#issuecomment-908847093:28,Testability,benchmark,benchmarks,28,It's probably worth running benchmarks to make sure this didn't cause anything important to get deoptimized,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10797#issuecomment-908847093
https://github.com/hail-is/hail/pull/10797#issuecomment-909140072:9,Testability,benchmark,benchmarks,9,"I'll run benchmarks this morning. Do we have benchmarks from an earlier commit saved somewhere, or do I need to run two?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10797#issuecomment-909140072
https://github.com/hail-is/hail/pull/10797#issuecomment-909140072:45,Testability,benchmark,benchmarks,45,"I'll run benchmarks this morning. Do we have benchmarks from an earlier commit saved somewhere, or do I need to run two?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10797#issuecomment-909140072
https://github.com/hail-is/hail/pull/10798#issuecomment-903821822:127,Deployability,update,update,127,"One last thing, we now have a file called `CanLowerEfficiently.scala` (rebase if you don't have it). In that file, you have to update the `TableTail` case to match `TableHead`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10798#issuecomment-903821822
https://github.com/hail-is/hail/pull/10800#issuecomment-902867954:44,Availability,error,errors,44,Can you fix the following pylint formatting errors?. ```; batch/front_end/front_end.py:1455:1: W293 blank line contains whitespace; batch/front_end/front_end.py:1462:1: W293 blank line contains whitespace; batch/front_end/front_end.py:1463:13: W291 trailing whitespace; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10800#issuecomment-902867954
https://github.com/hail-is/hail/pull/10804#issuecomment-914546008:50,Testability,benchmark,benchmark,50,"I'm waiting until the full stack is done so I can benchmark and make sure there aren't regressions. I have one more commit to go, I think.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10804#issuecomment-914546008
https://github.com/hail-is/hail/pull/10807#issuecomment-904859879:59,Testability,test,tests,59,There's something wrong with the environment of one of the tests.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10807#issuecomment-904859879
https://github.com/hail-is/hail/pull/10807#issuecomment-905458230:104,Modifiability,variab,variable,104,I forgot the Java tests were split in the same way as the batch tests and had forgot to add the new env variable in each split.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10807#issuecomment-905458230
https://github.com/hail-is/hail/pull/10807#issuecomment-905458230:18,Testability,test,tests,18,I forgot the Java tests were split in the same way as the batch tests and had forgot to add the new env variable in each split.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10807#issuecomment-905458230
https://github.com/hail-is/hail/pull/10807#issuecomment-905458230:64,Testability,test,tests,64,I forgot the Java tests were split in the same way as the batch tests and had forgot to add the new env variable in each split.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10807#issuecomment-905458230
https://github.com/hail-is/hail/pull/10807#issuecomment-905864074:80,Deployability,deploy,deployment,80,"Sorry one more place I remembered this needs to be changed in benchmark-service/deployment.yaml. ```; {% if deploy %}; - name: HAIL_BENCHMARK_BUCKET_NAME; value: hail-test; - name: START_POINT; value: ""2020-11-01T00:00:00Z""; - name: INSTANCE_ID; value: ""WetqnMQMoqq2""; {% else %}; - name: HAIL_BENCHMARK_BUCKET_NAME; value: hail-test-dmk9z; {% endif %}; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10807#issuecomment-905864074
https://github.com/hail-is/hail/pull/10807#issuecomment-905864074:108,Deployability,deploy,deploy,108,"Sorry one more place I remembered this needs to be changed in benchmark-service/deployment.yaml. ```; {% if deploy %}; - name: HAIL_BENCHMARK_BUCKET_NAME; value: hail-test; - name: START_POINT; value: ""2020-11-01T00:00:00Z""; - name: INSTANCE_ID; value: ""WetqnMQMoqq2""; {% else %}; - name: HAIL_BENCHMARK_BUCKET_NAME; value: hail-test-dmk9z; {% endif %}; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10807#issuecomment-905864074
https://github.com/hail-is/hail/pull/10807#issuecomment-905864074:62,Testability,benchmark,benchmark-service,62,"Sorry one more place I remembered this needs to be changed in benchmark-service/deployment.yaml. ```; {% if deploy %}; - name: HAIL_BENCHMARK_BUCKET_NAME; value: hail-test; - name: START_POINT; value: ""2020-11-01T00:00:00Z""; - name: INSTANCE_ID; value: ""WetqnMQMoqq2""; {% else %}; - name: HAIL_BENCHMARK_BUCKET_NAME; value: hail-test-dmk9z; {% endif %}; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10807#issuecomment-905864074
https://github.com/hail-is/hail/pull/10807#issuecomment-905864074:167,Testability,test,test,167,"Sorry one more place I remembered this needs to be changed in benchmark-service/deployment.yaml. ```; {% if deploy %}; - name: HAIL_BENCHMARK_BUCKET_NAME; value: hail-test; - name: START_POINT; value: ""2020-11-01T00:00:00Z""; - name: INSTANCE_ID; value: ""WetqnMQMoqq2""; {% else %}; - name: HAIL_BENCHMARK_BUCKET_NAME; value: hail-test-dmk9z; {% endif %}; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10807#issuecomment-905864074
https://github.com/hail-is/hail/pull/10807#issuecomment-905864074:329,Testability,test,test-,329,"Sorry one more place I remembered this needs to be changed in benchmark-service/deployment.yaml. ```; {% if deploy %}; - name: HAIL_BENCHMARK_BUCKET_NAME; value: hail-test; - name: START_POINT; value: ""2020-11-01T00:00:00Z""; - name: INSTANCE_ID; value: ""WetqnMQMoqq2""; {% else %}; - name: HAIL_BENCHMARK_BUCKET_NAME; value: hail-test-dmk9z; {% endif %}; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10807#issuecomment-905864074
https://github.com/hail-is/hail/pull/10807#issuecomment-905867503:78,Modifiability,config,config,78,Here's the output of grepping for `dmk9z` in the root of the hail repo:; ```; config.mk:HAIL_TEST_GCS_BUCKET := hail-test-dmk9z. ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10807#issuecomment-905867503
https://github.com/hail-is/hail/pull/10807#issuecomment-905867503:117,Testability,test,test-,117,Here's the output of grepping for `dmk9z` in the root of the hail repo:; ```; config.mk:HAIL_TEST_GCS_BUCKET := hail-test-dmk9z. ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10807#issuecomment-905867503
https://github.com/hail-is/hail/pull/10816#issuecomment-906667906:46,Usability,simpl,simpler,46,"That would work, though I think it's probably simpler to have min and max be the first and last elements of the pivots array (which should be required to be sorted).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10816#issuecomment-906667906
https://github.com/hail-is/hail/pull/10819#issuecomment-906833242:44,Availability,error,error,44,I commented on Zulip about how to make this error the same for every backend. I think it should be a simple change to use `parallelizeAndComputeWithIndex`,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10819#issuecomment-906833242
https://github.com/hail-is/hail/pull/10819#issuecomment-906833242:101,Usability,simpl,simple,101,I commented on Zulip about how to make this error the same for every backend. I think it should be a simple change to use `parallelizeAndComputeWithIndex`,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10819#issuecomment-906833242
https://github.com/hail-is/hail/pull/10820#issuecomment-1074478128:12,Availability,down,down,12,"Putting you down John, but feel free to reassign.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10820#issuecomment-1074478128
https://github.com/hail-is/hail/pull/10829#issuecomment-911708835:31,Safety,safe,safe,31,"Starting with an underscore is safe, isn't it?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10829#issuecomment-911708835
https://github.com/hail-is/hail/issues/10831#issuecomment-914325862:239,Availability,error,error,239,"I think this just isn't something you should do. You should use a newer version of hail than 0.2.60. We admittedly had a slightly rough transition into supporting multiple spark versions. It does seem like that message is a warning not an error, so you may be able to remove ` ""-Xfatal-warnings"", ` option from build.gradle and get things to build.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10831#issuecomment-914325862
https://github.com/hail-is/hail/issues/10831#issuecomment-914325862:211,Integrability,message,message,211,"I think this just isn't something you should do. You should use a newer version of hail than 0.2.60. We admittedly had a slightly rough transition into supporting multiple spark versions. It does seem like that message is a warning not an error, so you may be able to remove ` ""-Xfatal-warnings"", ` option from build.gradle and get things to build.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10831#issuecomment-914325862
https://github.com/hail-is/hail/issues/10831#issuecomment-918748397:151,Availability,error,error,151,"Noted. I understand, I will switch to a newer version of Hail.; I had some other trouble with Hail 0.2.74, but that is for another ticket. There is an error as you can see in the last line ; ```; one error found; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10831#issuecomment-918748397
https://github.com/hail-is/hail/issues/10831#issuecomment-918748397:200,Availability,error,error,200,"Noted. I understand, I will switch to a newer version of Hail.; I had some other trouble with Hail 0.2.74, but that is for another ticket. There is an error as you can see in the last line ; ```; one error found; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10831#issuecomment-918748397
https://github.com/hail-is/hail/issues/10832#issuecomment-914321577:18,Testability,log,log,18,Any info from the log file? Spark is usually pretty noisy about what it's up to,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10832#issuecomment-914321577
https://github.com/hail-is/hail/pull/10836#issuecomment-914241609:47,Security,hash,hash,47,"The Google docs aren't clear about whether the hash needs to be a suffix or prefix: . > add the hash of the sequence number as part of the object name to make it non-sequential. I'm somewhat hesitant to make this change since it means our part outputs are no longer sorted lexicographically, and this property has been very useful in the past.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10836#issuecomment-914241609
https://github.com/hail-is/hail/pull/10836#issuecomment-914241609:96,Security,hash,hash,96,"The Google docs aren't clear about whether the hash needs to be a suffix or prefix: . > add the hash of the sequence number as part of the object name to make it non-sequential. I'm somewhat hesitant to make this change since it means our part outputs are no longer sorted lexicographically, and this property has been very useful in the past.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10836#issuecomment-914241609
https://github.com/hail-is/hail/pull/10836#issuecomment-914241609:23,Usability,clear,clear,23,"The Google docs aren't clear about whether the hash needs to be a suffix or prefix: . > add the hash of the sequence number as part of the object name to make it non-sequential. I'm somewhat hesitant to make this change since it means our part outputs are no longer sorted lexicographically, and this property has been very useful in the past.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10836#issuecomment-914241609
https://github.com/hail-is/hail/pull/10836#issuecomment-914242680:96,Performance,load,load,96,"I see, here's the bit that does suggest the prefix:. > Use a naming convention that distributes load evenly across key ranges; > Auto-scaling of an index range can be slowed when using sequential names, such as object keys based on a sequence of numbers or timestamp. This occurs because requests are constantly shifting to a new index range, making redistributing the load harder and less effective. > In order to maintain a high request rate, avoid using sequential names. Using completely random object names gives you the best load distribution. If you want to use sequential numbers or timestamps as part of your object names, introduce randomness to the object names by adding a hash value before the sequence number or timestamp.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10836#issuecomment-914242680
https://github.com/hail-is/hail/pull/10836#issuecomment-914242680:369,Performance,load,load,369,"I see, here's the bit that does suggest the prefix:. > Use a naming convention that distributes load evenly across key ranges; > Auto-scaling of an index range can be slowed when using sequential names, such as object keys based on a sequence of numbers or timestamp. This occurs because requests are constantly shifting to a new index range, making redistributing the load harder and less effective. > In order to maintain a high request rate, avoid using sequential names. Using completely random object names gives you the best load distribution. If you want to use sequential numbers or timestamps as part of your object names, introduce randomness to the object names by adding a hash value before the sequence number or timestamp.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10836#issuecomment-914242680
https://github.com/hail-is/hail/pull/10836#issuecomment-914242680:531,Performance,load,load,531,"I see, here's the bit that does suggest the prefix:. > Use a naming convention that distributes load evenly across key ranges; > Auto-scaling of an index range can be slowed when using sequential names, such as object keys based on a sequence of numbers or timestamp. This occurs because requests are constantly shifting to a new index range, making redistributing the load harder and less effective. > In order to maintain a high request rate, avoid using sequential names. Using completely random object names gives you the best load distribution. If you want to use sequential numbers or timestamps as part of your object names, introduce randomness to the object names by adding a hash value before the sequence number or timestamp.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10836#issuecomment-914242680
https://github.com/hail-is/hail/pull/10836#issuecomment-914242680:445,Safety,avoid,avoid,445,"I see, here's the bit that does suggest the prefix:. > Use a naming convention that distributes load evenly across key ranges; > Auto-scaling of an index range can be slowed when using sequential names, such as object keys based on a sequence of numbers or timestamp. This occurs because requests are constantly shifting to a new index range, making redistributing the load harder and less effective. > In order to maintain a high request rate, avoid using sequential names. Using completely random object names gives you the best load distribution. If you want to use sequential numbers or timestamps as part of your object names, introduce randomness to the object names by adding a hash value before the sequence number or timestamp.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10836#issuecomment-914242680
https://github.com/hail-is/hail/pull/10836#issuecomment-914242680:685,Security,hash,hash,685,"I see, here's the bit that does suggest the prefix:. > Use a naming convention that distributes load evenly across key ranges; > Auto-scaling of an index range can be slowed when using sequential names, such as object keys based on a sequence of numbers or timestamp. This occurs because requests are constantly shifting to a new index range, making redistributing the load harder and less effective. > In order to maintain a high request rate, avoid using sequential names. Using completely random object names gives you the best load distribution. If you want to use sequential numbers or timestamps as part of your object names, introduce randomness to the object names by adding a hash value before the sequence number or timestamp.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10836#issuecomment-914242680
https://github.com/hail-is/hail/pull/10836#issuecomment-914666716:110,Performance,perform,performance,110,"I'll take this change, yeah. I also think it's worth running some experiments to see if this actually makes a performance difference...",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10836#issuecomment-914666716
https://github.com/hail-is/hail/pull/10836#issuecomment-914676654:335,Performance,concurren,concurrent,335,"Agreed, we should understand the practical effects. I suspect this isn't relevant to Hail Query read or write at almost all scales. You'd need to issue more than 1000 write requests in a second or 5000 read requests in a second. How often are folks running clusters with 1000 cores?. I bet the limit is more apparent when doing highly concurrent operations like copying (there's essentially no compute, so I'm issuing requests as fast as I possibly can).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10836#issuecomment-914676654
https://github.com/hail-is/hail/issues/10844#issuecomment-914353777:66,Deployability,install,install-on-cluster,66,"Hail is no longer distributed as a zip file. You should use `make install-on-cluster` (described further [here](https://hail.is/docs/0.2/install/other-cluster.html)) to install Hail on a cluster. I do not recommend creating a wheel or zip file because the native binaries included in that wheel or zip file might be incompatible with the computer on which you install that file. If you are absolutely certain that the build machine *and the executing machine* can share native binaries, then you can do this:; ```; make wheel HAIL_COMPILE_NATIVES=1; ```; This produces a wheel file at `build/deploy/dist/hail-0.2.XX-py3-none-any.whl` where XX is the current patch version of Hail.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10844#issuecomment-914353777
https://github.com/hail-is/hail/issues/10844#issuecomment-914353777:137,Deployability,install,install,137,"Hail is no longer distributed as a zip file. You should use `make install-on-cluster` (described further [here](https://hail.is/docs/0.2/install/other-cluster.html)) to install Hail on a cluster. I do not recommend creating a wheel or zip file because the native binaries included in that wheel or zip file might be incompatible with the computer on which you install that file. If you are absolutely certain that the build machine *and the executing machine* can share native binaries, then you can do this:; ```; make wheel HAIL_COMPILE_NATIVES=1; ```; This produces a wheel file at `build/deploy/dist/hail-0.2.XX-py3-none-any.whl` where XX is the current patch version of Hail.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10844#issuecomment-914353777
https://github.com/hail-is/hail/issues/10844#issuecomment-914353777:169,Deployability,install,install,169,"Hail is no longer distributed as a zip file. You should use `make install-on-cluster` (described further [here](https://hail.is/docs/0.2/install/other-cluster.html)) to install Hail on a cluster. I do not recommend creating a wheel or zip file because the native binaries included in that wheel or zip file might be incompatible with the computer on which you install that file. If you are absolutely certain that the build machine *and the executing machine* can share native binaries, then you can do this:; ```; make wheel HAIL_COMPILE_NATIVES=1; ```; This produces a wheel file at `build/deploy/dist/hail-0.2.XX-py3-none-any.whl` where XX is the current patch version of Hail.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10844#issuecomment-914353777
https://github.com/hail-is/hail/issues/10844#issuecomment-914353777:360,Deployability,install,install,360,"Hail is no longer distributed as a zip file. You should use `make install-on-cluster` (described further [here](https://hail.is/docs/0.2/install/other-cluster.html)) to install Hail on a cluster. I do not recommend creating a wheel or zip file because the native binaries included in that wheel or zip file might be incompatible with the computer on which you install that file. If you are absolutely certain that the build machine *and the executing machine* can share native binaries, then you can do this:; ```; make wheel HAIL_COMPILE_NATIVES=1; ```; This produces a wheel file at `build/deploy/dist/hail-0.2.XX-py3-none-any.whl` where XX is the current patch version of Hail.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10844#issuecomment-914353777
https://github.com/hail-is/hail/issues/10844#issuecomment-914353777:592,Deployability,deploy,deploy,592,"Hail is no longer distributed as a zip file. You should use `make install-on-cluster` (described further [here](https://hail.is/docs/0.2/install/other-cluster.html)) to install Hail on a cluster. I do not recommend creating a wheel or zip file because the native binaries included in that wheel or zip file might be incompatible with the computer on which you install that file. If you are absolutely certain that the build machine *and the executing machine* can share native binaries, then you can do this:; ```; make wheel HAIL_COMPILE_NATIVES=1; ```; This produces a wheel file at `build/deploy/dist/hail-0.2.XX-py3-none-any.whl` where XX is the current patch version of Hail.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10844#issuecomment-914353777
https://github.com/hail-is/hail/issues/10844#issuecomment-914353777:658,Deployability,patch,patch,658,"Hail is no longer distributed as a zip file. You should use `make install-on-cluster` (described further [here](https://hail.is/docs/0.2/install/other-cluster.html)) to install Hail on a cluster. I do not recommend creating a wheel or zip file because the native binaries included in that wheel or zip file might be incompatible with the computer on which you install that file. If you are absolutely certain that the build machine *and the executing machine* can share native binaries, then you can do this:; ```; make wheel HAIL_COMPILE_NATIVES=1; ```; This produces a wheel file at `build/deploy/dist/hail-0.2.XX-py3-none-any.whl` where XX is the current patch version of Hail.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10844#issuecomment-914353777
https://github.com/hail-is/hail/issues/10844#issuecomment-914469181:537,Availability,echo,echo,537,"Thank you for getting back to me. I was using the solution provided by aws (https://github.com/awslabs/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/blob/master/source/GenomicsAnalysisCode/buildhail_buildspec.yml) also the main page for reference (https://docs.aws.amazon.com/solutions/latest/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/welcome.html). In order to use the latest Hail (because we have vcf format 4.3 which is not supported in Hail 0.1), we changed it to ; ```. echo 'Installing pre-reqs'; yum install -y g++ cmake git; yum install -y lz4; yum install -y lz4-devel; git clone $HAIL_REPO; cd hail/hail && git fetch && git checkout main; ./gradlew clean; make install HAIL_COMPILE_NATIVES=1; make install HAIL_COMPILE_NATIVES=1 SCALA_VERSION=2.12.13 SPARK_VERSION=3.1.1; cd build; pip download decorator==4.2.1; aws s3 cp decorator-4.2.1-py2.py3-none-any.whl s3://${RESOURCES_BUCKET}/artifacts/decorator.zip; aws s3 cp distributions/hail-python.zip s3://${RESOURCES_BUCKET}/artifacts/; aws s3 cp libs/hail-all-spark.jar s3://${RESOURCES_BUCKET}/artifacts/; ``` . What else I should change in order to deploy this solution successfully? . Thank you for the help!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10844#issuecomment-914469181
https://github.com/hail-is/hail/issues/10844#issuecomment-914469181:858,Availability,down,download,858,"Thank you for getting back to me. I was using the solution provided by aws (https://github.com/awslabs/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/blob/master/source/GenomicsAnalysisCode/buildhail_buildspec.yml) also the main page for reference (https://docs.aws.amazon.com/solutions/latest/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/welcome.html). In order to use the latest Hail (because we have vcf format 4.3 which is not supported in Hail 0.1), we changed it to ; ```. echo 'Installing pre-reqs'; yum install -y g++ cmake git; yum install -y lz4; yum install -y lz4-devel; git clone $HAIL_REPO; cd hail/hail && git fetch && git checkout main; ./gradlew clean; make install HAIL_COMPILE_NATIVES=1; make install HAIL_COMPILE_NATIVES=1 SCALA_VERSION=2.12.13 SPARK_VERSION=3.1.1; cd build; pip download decorator==4.2.1; aws s3 cp decorator-4.2.1-py2.py3-none-any.whl s3://${RESOURCES_BUCKET}/artifacts/decorator.zip; aws s3 cp distributions/hail-python.zip s3://${RESOURCES_BUCKET}/artifacts/; aws s3 cp libs/hail-all-spark.jar s3://${RESOURCES_BUCKET}/artifacts/; ``` . What else I should change in order to deploy this solution successfully? . Thank you for the help!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10844#issuecomment-914469181
https://github.com/hail-is/hail/issues/10844#issuecomment-914469181:543,Deployability,Install,Installing,543,"Thank you for getting back to me. I was using the solution provided by aws (https://github.com/awslabs/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/blob/master/source/GenomicsAnalysisCode/buildhail_buildspec.yml) also the main page for reference (https://docs.aws.amazon.com/solutions/latest/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/welcome.html). In order to use the latest Hail (because we have vcf format 4.3 which is not supported in Hail 0.1), we changed it to ; ```. echo 'Installing pre-reqs'; yum install -y g++ cmake git; yum install -y lz4; yum install -y lz4-devel; git clone $HAIL_REPO; cd hail/hail && git fetch && git checkout main; ./gradlew clean; make install HAIL_COMPILE_NATIVES=1; make install HAIL_COMPILE_NATIVES=1 SCALA_VERSION=2.12.13 SPARK_VERSION=3.1.1; cd build; pip download decorator==4.2.1; aws s3 cp decorator-4.2.1-py2.py3-none-any.whl s3://${RESOURCES_BUCKET}/artifacts/decorator.zip; aws s3 cp distributions/hail-python.zip s3://${RESOURCES_BUCKET}/artifacts/; aws s3 cp libs/hail-all-spark.jar s3://${RESOURCES_BUCKET}/artifacts/; ``` . What else I should change in order to deploy this solution successfully? . Thank you for the help!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10844#issuecomment-914469181
https://github.com/hail-is/hail/issues/10844#issuecomment-914469181:569,Deployability,install,install,569,"Thank you for getting back to me. I was using the solution provided by aws (https://github.com/awslabs/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/blob/master/source/GenomicsAnalysisCode/buildhail_buildspec.yml) also the main page for reference (https://docs.aws.amazon.com/solutions/latest/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/welcome.html). In order to use the latest Hail (because we have vcf format 4.3 which is not supported in Hail 0.1), we changed it to ; ```. echo 'Installing pre-reqs'; yum install -y g++ cmake git; yum install -y lz4; yum install -y lz4-devel; git clone $HAIL_REPO; cd hail/hail && git fetch && git checkout main; ./gradlew clean; make install HAIL_COMPILE_NATIVES=1; make install HAIL_COMPILE_NATIVES=1 SCALA_VERSION=2.12.13 SPARK_VERSION=3.1.1; cd build; pip download decorator==4.2.1; aws s3 cp decorator-4.2.1-py2.py3-none-any.whl s3://${RESOURCES_BUCKET}/artifacts/decorator.zip; aws s3 cp distributions/hail-python.zip s3://${RESOURCES_BUCKET}/artifacts/; aws s3 cp libs/hail-all-spark.jar s3://${RESOURCES_BUCKET}/artifacts/; ``` . What else I should change in order to deploy this solution successfully? . Thank you for the help!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10844#issuecomment-914469181
https://github.com/hail-is/hail/issues/10844#issuecomment-914469181:599,Deployability,install,install,599,"Thank you for getting back to me. I was using the solution provided by aws (https://github.com/awslabs/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/blob/master/source/GenomicsAnalysisCode/buildhail_buildspec.yml) also the main page for reference (https://docs.aws.amazon.com/solutions/latest/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/welcome.html). In order to use the latest Hail (because we have vcf format 4.3 which is not supported in Hail 0.1), we changed it to ; ```. echo 'Installing pre-reqs'; yum install -y g++ cmake git; yum install -y lz4; yum install -y lz4-devel; git clone $HAIL_REPO; cd hail/hail && git fetch && git checkout main; ./gradlew clean; make install HAIL_COMPILE_NATIVES=1; make install HAIL_COMPILE_NATIVES=1 SCALA_VERSION=2.12.13 SPARK_VERSION=3.1.1; cd build; pip download decorator==4.2.1; aws s3 cp decorator-4.2.1-py2.py3-none-any.whl s3://${RESOURCES_BUCKET}/artifacts/decorator.zip; aws s3 cp distributions/hail-python.zip s3://${RESOURCES_BUCKET}/artifacts/; aws s3 cp libs/hail-all-spark.jar s3://${RESOURCES_BUCKET}/artifacts/; ``` . What else I should change in order to deploy this solution successfully? . Thank you for the help!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10844#issuecomment-914469181
https://github.com/hail-is/hail/issues/10844#issuecomment-914469181:619,Deployability,install,install,619,"Thank you for getting back to me. I was using the solution provided by aws (https://github.com/awslabs/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/blob/master/source/GenomicsAnalysisCode/buildhail_buildspec.yml) also the main page for reference (https://docs.aws.amazon.com/solutions/latest/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/welcome.html). In order to use the latest Hail (because we have vcf format 4.3 which is not supported in Hail 0.1), we changed it to ; ```. echo 'Installing pre-reqs'; yum install -y g++ cmake git; yum install -y lz4; yum install -y lz4-devel; git clone $HAIL_REPO; cd hail/hail && git fetch && git checkout main; ./gradlew clean; make install HAIL_COMPILE_NATIVES=1; make install HAIL_COMPILE_NATIVES=1 SCALA_VERSION=2.12.13 SPARK_VERSION=3.1.1; cd build; pip download decorator==4.2.1; aws s3 cp decorator-4.2.1-py2.py3-none-any.whl s3://${RESOURCES_BUCKET}/artifacts/decorator.zip; aws s3 cp distributions/hail-python.zip s3://${RESOURCES_BUCKET}/artifacts/; aws s3 cp libs/hail-all-spark.jar s3://${RESOURCES_BUCKET}/artifacts/; ``` . What else I should change in order to deploy this solution successfully? . Thank you for the help!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10844#issuecomment-914469181
https://github.com/hail-is/hail/issues/10844#issuecomment-914469181:733,Deployability,install,install,733,"Thank you for getting back to me. I was using the solution provided by aws (https://github.com/awslabs/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/blob/master/source/GenomicsAnalysisCode/buildhail_buildspec.yml) also the main page for reference (https://docs.aws.amazon.com/solutions/latest/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/welcome.html). In order to use the latest Hail (because we have vcf format 4.3 which is not supported in Hail 0.1), we changed it to ; ```. echo 'Installing pre-reqs'; yum install -y g++ cmake git; yum install -y lz4; yum install -y lz4-devel; git clone $HAIL_REPO; cd hail/hail && git fetch && git checkout main; ./gradlew clean; make install HAIL_COMPILE_NATIVES=1; make install HAIL_COMPILE_NATIVES=1 SCALA_VERSION=2.12.13 SPARK_VERSION=3.1.1; cd build; pip download decorator==4.2.1; aws s3 cp decorator-4.2.1-py2.py3-none-any.whl s3://${RESOURCES_BUCKET}/artifacts/decorator.zip; aws s3 cp distributions/hail-python.zip s3://${RESOURCES_BUCKET}/artifacts/; aws s3 cp libs/hail-all-spark.jar s3://${RESOURCES_BUCKET}/artifacts/; ``` . What else I should change in order to deploy this solution successfully? . Thank you for the help!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10844#issuecomment-914469181
https://github.com/hail-is/hail/issues/10844#issuecomment-914469181:770,Deployability,install,install,770,"Thank you for getting back to me. I was using the solution provided by aws (https://github.com/awslabs/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/blob/master/source/GenomicsAnalysisCode/buildhail_buildspec.yml) also the main page for reference (https://docs.aws.amazon.com/solutions/latest/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/welcome.html). In order to use the latest Hail (because we have vcf format 4.3 which is not supported in Hail 0.1), we changed it to ; ```. echo 'Installing pre-reqs'; yum install -y g++ cmake git; yum install -y lz4; yum install -y lz4-devel; git clone $HAIL_REPO; cd hail/hail && git fetch && git checkout main; ./gradlew clean; make install HAIL_COMPILE_NATIVES=1; make install HAIL_COMPILE_NATIVES=1 SCALA_VERSION=2.12.13 SPARK_VERSION=3.1.1; cd build; pip download decorator==4.2.1; aws s3 cp decorator-4.2.1-py2.py3-none-any.whl s3://${RESOURCES_BUCKET}/artifacts/decorator.zip; aws s3 cp distributions/hail-python.zip s3://${RESOURCES_BUCKET}/artifacts/; aws s3 cp libs/hail-all-spark.jar s3://${RESOURCES_BUCKET}/artifacts/; ``` . What else I should change in order to deploy this solution successfully? . Thank you for the help!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10844#issuecomment-914469181
https://github.com/hail-is/hail/issues/10844#issuecomment-914469181:1174,Deployability,deploy,deploy,1174,"Thank you for getting back to me. I was using the solution provided by aws (https://github.com/awslabs/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/blob/master/source/GenomicsAnalysisCode/buildhail_buildspec.yml) also the main page for reference (https://docs.aws.amazon.com/solutions/latest/genomics-tertiary-analysis-and-data-lakes-using-aws-glue-and-amazon-athena/welcome.html). In order to use the latest Hail (because we have vcf format 4.3 which is not supported in Hail 0.1), we changed it to ; ```. echo 'Installing pre-reqs'; yum install -y g++ cmake git; yum install -y lz4; yum install -y lz4-devel; git clone $HAIL_REPO; cd hail/hail && git fetch && git checkout main; ./gradlew clean; make install HAIL_COMPILE_NATIVES=1; make install HAIL_COMPILE_NATIVES=1 SCALA_VERSION=2.12.13 SPARK_VERSION=3.1.1; cd build; pip download decorator==4.2.1; aws s3 cp decorator-4.2.1-py2.py3-none-any.whl s3://${RESOURCES_BUCKET}/artifacts/decorator.zip; aws s3 cp distributions/hail-python.zip s3://${RESOURCES_BUCKET}/artifacts/; aws s3 cp libs/hail-all-spark.jar s3://${RESOURCES_BUCKET}/artifacts/; ``` . What else I should change in order to deploy this solution successfully? . Thank you for the help!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10844#issuecomment-914469181
https://github.com/hail-is/hail/issues/10844#issuecomment-914493872:357,Deployability,Install,Installing,357,"Hi @yc000000, unfortunately, I don't know how Amazon Glue works. I don't know the purpose of copying the Hail jar into S3. You might try uploading the wheel file instead of the zip file. . You might also try instead using the HMS DBMI scripts for starting a [Hail Cluster on AWS Spot instances](https://github.com/hms-dbmi/hail-on-AWS-spot-instances). ---. Installing Hail on a cluster should only require a couple steps. Once you have a Spark cluster, you just need to:. 1. ssh to the master node of the Spark Cluster.; 2. clone the hail repository.; 3. run `make -C hail/hail install HAIL_COMPILE_NATIVES=1`. After that you should be able to submit Python files using Hail to the cluster.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10844#issuecomment-914493872
https://github.com/hail-is/hail/issues/10844#issuecomment-914493872:578,Deployability,install,install,578,"Hi @yc000000, unfortunately, I don't know how Amazon Glue works. I don't know the purpose of copying the Hail jar into S3. You might try uploading the wheel file instead of the zip file. . You might also try instead using the HMS DBMI scripts for starting a [Hail Cluster on AWS Spot instances](https://github.com/hms-dbmi/hail-on-AWS-spot-instances). ---. Installing Hail on a cluster should only require a couple steps. Once you have a Spark cluster, you just need to:. 1. ssh to the master node of the Spark Cluster.; 2. clone the hail repository.; 3. run `make -C hail/hail install HAIL_COMPILE_NATIVES=1`. After that you should be able to submit Python files using Hail to the cluster.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10844#issuecomment-914493872
https://github.com/hail-is/hail/pull/10848#issuecomment-914526677:30,Availability,failure,failures,30,@patrick-schultz Lots of test failures,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10848#issuecomment-914526677
https://github.com/hail-is/hail/pull/10848#issuecomment-914526677:25,Testability,test,test,25,@patrick-schultz Lots of test failures,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10848#issuecomment-914526677
https://github.com/hail-is/hail/pull/10848#issuecomment-914601076:12,Availability,failure,failures,12,"Most of the failures were coming from `SUnreachableValue`s inheriting from both `SValue` and `SCode`, which has caused me problems before too. Since `SCode` will be going away, I just gave in and duplicated them all for now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10848#issuecomment-914601076
https://github.com/hail-is/hail/pull/10848#issuecomment-914601076:59,Modifiability,inherit,inheriting,59,"Most of the failures were coming from `SUnreachableValue`s inheriting from both `SValue` and `SCode`, which has caused me problems before too. Since `SCode` will be going away, I just gave in and duplicated them all for now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10848#issuecomment-914601076
https://github.com/hail-is/hail/pull/10855#issuecomment-942624612:292,Performance,race condition,race condition,292,"Not sure this is better, but basically my logic is to kill the `crun run` process first. Wait for it to be killed. Set the process = None. Then check if a container exists. If the container exists, then do a deep kill of all child subprocesses. I'm not sure I completely understand where the race condition could occur here.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10855#issuecomment-942624612
https://github.com/hail-is/hail/pull/10855#issuecomment-942624612:42,Testability,log,logic,42,"Not sure this is better, but basically my logic is to kill the `crun run` process first. Wait for it to be killed. Set the process = None. Then check if a container exists. If the container exists, then do a deep kill of all child subprocesses. I'm not sure I completely understand where the race condition could occur here.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10855#issuecomment-942624612
https://github.com/hail-is/hail/pull/10856#issuecomment-916193815:17,Testability,test,tests,17,@danking Failing tests,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10856#issuecomment-916193815
https://github.com/hail-is/hail/pull/10859#issuecomment-918288924:0,Testability,Test,Tests,0,Tests are passing,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10859#issuecomment-918288924
https://github.com/hail-is/hail/pull/10863#issuecomment-941145164:44,Availability,failure,failure,44,"Ah, the reason this never went in is a lint failure. . ```; /usr/local/lib/python3.7/dist-packages/hailtop/hailctl/dataproc/submit.py:27:59: E713 test for membership should be 'not in'; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10863#issuecomment-941145164
https://github.com/hail-is/hail/pull/10863#issuecomment-941145164:146,Testability,test,test,146,"Ah, the reason this never went in is a lint failure. . ```; /usr/local/lib/python3.7/dist-packages/hailtop/hailctl/dataproc/submit.py:27:59: E713 test for membership should be 'not in'; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10863#issuecomment-941145164
https://github.com/hail-is/hail/pull/10863#issuecomment-941145413:30,Testability,test,tests,30,If you fix that @vladsaveliev tests will pass and we'll be good to go.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10863#issuecomment-941145413
https://github.com/hail-is/hail/pull/10866#issuecomment-918331563:61,Modifiability,config,config,61,I'm going to need to do a bit of manual work with our global config and submit a prequel PR but most of the context is here.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10866#issuecomment-918331563
https://github.com/hail-is/hail/pull/10867#issuecomment-920949276:14,Testability,benchmark,benchmarks,14,Could you run benchmarks?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10867#issuecomment-920949276
https://github.com/hail-is/hail/pull/10867#issuecomment-920960768:23,Testability,benchmark,benchmarks,23,"Yeah, I'm about to run benchmarks on the current top of the stack of SCode->SValue changes. Will post results here.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10867#issuecomment-920960768
https://github.com/hail-is/hail/pull/10873#issuecomment-1146259813:217,Availability,toler,tolerance,217,"Sorry for taking so long with this. There are some changes I think will be needed for this to be production ready, but at this point it's probably best to get it merged and iterate from there. @pwc2 It looks like the tolerance might need to be relaxed in test_pc_relate. And there are some python linter errors. Once those are fixed, I'm ready to approve. Thanks again for doing the work on this, and thanks for your patience!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10873#issuecomment-1146259813
https://github.com/hail-is/hail/pull/10873#issuecomment-1146259813:304,Availability,error,errors,304,"Sorry for taking so long with this. There are some changes I think will be needed for this to be production ready, but at this point it's probably best to get it merged and iterate from there. @pwc2 It looks like the tolerance might need to be relaxed in test_pc_relate. And there are some python linter errors. Once those are fixed, I'm ready to approve. Thanks again for doing the work on this, and thanks for your patience!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10873#issuecomment-1146259813
https://github.com/hail-is/hail/pull/10874#issuecomment-1050054480:110,Integrability,wrap,wrapped,110,"@pwc2 , I'm gonna close this because PR has trouble with old PRs. Can we revisit this when the PCA project is wrapped up?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10874#issuecomment-1050054480
https://github.com/hail-is/hail/pull/10874#issuecomment-1050064333:112,Integrability,wrap,wrapped,112,"> @pwc2 , I'm gonna close this because PR has trouble with old PRs. Can we revisit this when the PCA project is wrapped up?. Yeah, sounds good",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10874#issuecomment-1050064333
https://github.com/hail-is/hail/issues/10882#issuecomment-930101834:47,Integrability,interface,interface,47,"This is somewhat intentional, because the only interface to create a Spark dataframe from a Hail table is `Table.to_spark()`, which calls `Table.expand_types()` first to convert Hail-specific data types to their generic forms. See here:; https://github.com/hail-is/hail/blob/b570bb100dca65c9e79f4297514eba1e178cd018/hail/python/hail/table.py#L2596-L2622",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10882#issuecomment-930101834
https://github.com/hail-is/hail/issues/10882#issuecomment-930122866:187,Integrability,interface,interface,187,"@tpoterba Thanks for the clue! Does the code that you linked to have a Scala counterpart (that I could execute from R via Spark)? It would be awesome to have a fully-functional Scala/JVM interface to Hail... :-). EDIT: I mean, I understand what you said :-) My point is, is there an alternative way to achieve the same without using the Python interface.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10882#issuecomment-930122866
https://github.com/hail-is/hail/issues/10882#issuecomment-930122866:344,Integrability,interface,interface,344,"@tpoterba Thanks for the clue! Does the code that you linked to have a Scala counterpart (that I could execute from R via Spark)? It would be awesome to have a fully-functional Scala/JVM interface to Hail... :-). EDIT: I mean, I understand what you said :-) My point is, is there an alternative way to achieve the same without using the Python interface.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10882#issuecomment-930122866
https://github.com/hail-is/hail/issues/10882#issuecomment-1145240358:96,Integrability,interface,interface,96,"Hey @cosi1!. We are actively moving away from Scala and the JVM. We don't plan to support a JVM interface to Hail. As a result, I think. the answer to this issue is that this is a known limitation.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/10882#issuecomment-1145240358
https://github.com/hail-is/hail/pull/10888#issuecomment-924123558:325,Deployability,release,release,325,"Tested using modified code from Lindsay Liang on zulip:. ```python; import hail as hl; hl.init(log='hail.log'); rg37 = hl.get_reference('GRCh37'). rg38 = hl.get_reference('GRCh38'); rg37.add_liftover('gs://hail-common/references/grch37_to_grch38.over.chain.gz', rg38); gnomad_ht = hl.read_table('gs://gcp-public-data--gnomad/release/2.1.1/ht/exomes/gnomad.exomes.r2.1.1.sites.ht'). gnomad_ht = gnomad_ht.annotate(new_locus=hl.liftover(gnomad_ht.locus, 'GRCh38')); gnomad_ht = gnomad_ht.key_by(locus=gnomad_ht.new_locus, alleles=gnomad_ht.alleles); mt = hl.balding_nichols_model(3, 100, 10_000, reference_genome='GRCh38'); mt = mt.annotate_entries(AD=hl.zeros(hl.len(mt.alleles))); mt = mt.annotate_rows(gnomad_non_neuro_AF =; gnomad_ht.index(mt.row_key).freq[hl.eval(gnomad_ht.freq_index_dict[""non_neuro""])].AF); mt = mt.annotate_entries(pAB = hl.or_missing(mt.GT.is_het(),; hl.binom_test(mt.AD[1], hl.sum(mt.AD), 0.5, 'two-sided'))); mt._force_count_rows(); ```. This faithfully replicated the issue and went from pretty much every task failing at least once as they read bad state to no tasks failing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10888#issuecomment-924123558
https://github.com/hail-is/hail/pull/10888#issuecomment-924123558:0,Testability,Test,Tested,0,"Tested using modified code from Lindsay Liang on zulip:. ```python; import hail as hl; hl.init(log='hail.log'); rg37 = hl.get_reference('GRCh37'). rg38 = hl.get_reference('GRCh38'); rg37.add_liftover('gs://hail-common/references/grch37_to_grch38.over.chain.gz', rg38); gnomad_ht = hl.read_table('gs://gcp-public-data--gnomad/release/2.1.1/ht/exomes/gnomad.exomes.r2.1.1.sites.ht'). gnomad_ht = gnomad_ht.annotate(new_locus=hl.liftover(gnomad_ht.locus, 'GRCh38')); gnomad_ht = gnomad_ht.key_by(locus=gnomad_ht.new_locus, alleles=gnomad_ht.alleles); mt = hl.balding_nichols_model(3, 100, 10_000, reference_genome='GRCh38'); mt = mt.annotate_entries(AD=hl.zeros(hl.len(mt.alleles))); mt = mt.annotate_rows(gnomad_non_neuro_AF =; gnomad_ht.index(mt.row_key).freq[hl.eval(gnomad_ht.freq_index_dict[""non_neuro""])].AF); mt = mt.annotate_entries(pAB = hl.or_missing(mt.GT.is_het(),; hl.binom_test(mt.AD[1], hl.sum(mt.AD), 0.5, 'two-sided'))); mt._force_count_rows(); ```. This faithfully replicated the issue and went from pretty much every task failing at least once as they read bad state to no tasks failing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10888#issuecomment-924123558
https://github.com/hail-is/hail/pull/10888#issuecomment-924123558:95,Testability,log,log,95,"Tested using modified code from Lindsay Liang on zulip:. ```python; import hail as hl; hl.init(log='hail.log'); rg37 = hl.get_reference('GRCh37'). rg38 = hl.get_reference('GRCh38'); rg37.add_liftover('gs://hail-common/references/grch37_to_grch38.over.chain.gz', rg38); gnomad_ht = hl.read_table('gs://gcp-public-data--gnomad/release/2.1.1/ht/exomes/gnomad.exomes.r2.1.1.sites.ht'). gnomad_ht = gnomad_ht.annotate(new_locus=hl.liftover(gnomad_ht.locus, 'GRCh38')); gnomad_ht = gnomad_ht.key_by(locus=gnomad_ht.new_locus, alleles=gnomad_ht.alleles); mt = hl.balding_nichols_model(3, 100, 10_000, reference_genome='GRCh38'); mt = mt.annotate_entries(AD=hl.zeros(hl.len(mt.alleles))); mt = mt.annotate_rows(gnomad_non_neuro_AF =; gnomad_ht.index(mt.row_key).freq[hl.eval(gnomad_ht.freq_index_dict[""non_neuro""])].AF); mt = mt.annotate_entries(pAB = hl.or_missing(mt.GT.is_het(),; hl.binom_test(mt.AD[1], hl.sum(mt.AD), 0.5, 'two-sided'))); mt._force_count_rows(); ```. This faithfully replicated the issue and went from pretty much every task failing at least once as they read bad state to no tasks failing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10888#issuecomment-924123558
https://github.com/hail-is/hail/pull/10888#issuecomment-924123558:105,Testability,log,log,105,"Tested using modified code from Lindsay Liang on zulip:. ```python; import hail as hl; hl.init(log='hail.log'); rg37 = hl.get_reference('GRCh37'). rg38 = hl.get_reference('GRCh38'); rg37.add_liftover('gs://hail-common/references/grch37_to_grch38.over.chain.gz', rg38); gnomad_ht = hl.read_table('gs://gcp-public-data--gnomad/release/2.1.1/ht/exomes/gnomad.exomes.r2.1.1.sites.ht'). gnomad_ht = gnomad_ht.annotate(new_locus=hl.liftover(gnomad_ht.locus, 'GRCh38')); gnomad_ht = gnomad_ht.key_by(locus=gnomad_ht.new_locus, alleles=gnomad_ht.alleles); mt = hl.balding_nichols_model(3, 100, 10_000, reference_genome='GRCh38'); mt = mt.annotate_entries(AD=hl.zeros(hl.len(mt.alleles))); mt = mt.annotate_rows(gnomad_non_neuro_AF =; gnomad_ht.index(mt.row_key).freq[hl.eval(gnomad_ht.freq_index_dict[""non_neuro""])].AF); mt = mt.annotate_entries(pAB = hl.or_missing(mt.GT.is_het(),; hl.binom_test(mt.AD[1], hl.sum(mt.AD), 0.5, 'two-sided'))); mt._force_count_rows(); ```. This faithfully replicated the issue and went from pretty much every task failing at least once as they read bad state to no tasks failing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10888#issuecomment-924123558
https://github.com/hail-is/hail/pull/10898#issuecomment-928209199:87,Usability,feedback,feedback,87,"FYI @danking. If you don't like how this is structured, then please give me high level feedback on what you would do differently.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10898#issuecomment-928209199
https://github.com/hail-is/hail/pull/10900#issuecomment-978174752:258,Deployability,pipeline,pipeline,258,Completely missed this . > This is failing style checks. There need to be two blank lines before the main function and only one blank line after the added if statement. sorry completely missed this rev. comment. Just noticed when colleague tried to launch a pipeline with this feature assumed in the submitter. Fixed style issues now,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10900#issuecomment-978174752
https://github.com/hail-is/hail/pull/10900#issuecomment-978194003:8,Testability,test,tests,8,running tests now!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10900#issuecomment-978194003
https://github.com/hail-is/hail/pull/10905#issuecomment-937106437:516,Performance,optimiz,optimizations,516,"I did a little more digging into this today. I tried printing the size of the largest method in a class before splitting, before emitting bytecode. In the failing `test_can_process_wide_tables` test, the comparison of before/after this pr was consistent across all table widths in the test: some methods stay the same size, some increase by 7.4%. Only the largest table width triggers a ClassTooLarge exception. It's looking like this just created a small constant increase in code size, which we could make up with optimizations like constant folding, or longer term just fix the root problem by splitting up these giant classes. @tpoterba What are your thoughts on just disabling the largest wide-table test, vs spending more time understanding exactly how this is generating larger classes?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10905#issuecomment-937106437
https://github.com/hail-is/hail/pull/10905#issuecomment-937106437:194,Testability,test,test,194,"I did a little more digging into this today. I tried printing the size of the largest method in a class before splitting, before emitting bytecode. In the failing `test_can_process_wide_tables` test, the comparison of before/after this pr was consistent across all table widths in the test: some methods stay the same size, some increase by 7.4%. Only the largest table width triggers a ClassTooLarge exception. It's looking like this just created a small constant increase in code size, which we could make up with optimizations like constant folding, or longer term just fix the root problem by splitting up these giant classes. @tpoterba What are your thoughts on just disabling the largest wide-table test, vs spending more time understanding exactly how this is generating larger classes?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10905#issuecomment-937106437
https://github.com/hail-is/hail/pull/10905#issuecomment-937106437:285,Testability,test,test,285,"I did a little more digging into this today. I tried printing the size of the largest method in a class before splitting, before emitting bytecode. In the failing `test_can_process_wide_tables` test, the comparison of before/after this pr was consistent across all table widths in the test: some methods stay the same size, some increase by 7.4%. Only the largest table width triggers a ClassTooLarge exception. It's looking like this just created a small constant increase in code size, which we could make up with optimizations like constant folding, or longer term just fix the root problem by splitting up these giant classes. @tpoterba What are your thoughts on just disabling the largest wide-table test, vs spending more time understanding exactly how this is generating larger classes?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10905#issuecomment-937106437
https://github.com/hail-is/hail/pull/10905#issuecomment-937106437:705,Testability,test,test,705,"I did a little more digging into this today. I tried printing the size of the largest method in a class before splitting, before emitting bytecode. In the failing `test_can_process_wide_tables` test, the comparison of before/after this pr was consistent across all table widths in the test: some methods stay the same size, some increase by 7.4%. Only the largest table width triggers a ClassTooLarge exception. It's looking like this just created a small constant increase in code size, which we could make up with optimizations like constant folding, or longer term just fix the root problem by splitting up these giant classes. @tpoterba What are your thoughts on just disabling the largest wide-table test, vs spending more time understanding exactly how this is generating larger classes?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10905#issuecomment-937106437
https://github.com/hail-is/hail/pull/10905#issuecomment-941238170:12,Testability,benchmark,benchmarks,12,Can you run benchmarks to make sure the code size doesn't cause any corresponding slowdown?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10905#issuecomment-941238170
https://github.com/hail-is/hail/pull/10905#issuecomment-945947919:4,Testability,benchmark,benchmarks,4,"Ran benchmarks this morning: [results](https://gist.github.com/patrick-schultz/0ad0f431b384d266e098d51b74fb6c16). Time 2 is this PR, Time 1 is main.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10905#issuecomment-945947919
https://github.com/hail-is/hail/pull/10905#issuecomment-946827333:10,Testability,benchmark,benchmarks,10,Reran bad benchmarks with 5 iterations and 20 replicas. Looks like it was just noise. ```; Benchmark Name Ratio Time 1 Time 2 Mem Ratio Mem 1 (MB) Mem 2 (MB); -------------- ----- ------ ------ --------- ---------- ----------; hwe_normalized_pca_blanczos_small_data_0_iterations 104.3% 20.510 21.402 100.0% 9 9; hwe_normalized_pca 102.9% 35.982 37.009 100.0% 1 1; table_import_ints 102.4% 101.279 103.670 100.0% 1 1; hwe_normalized_pca_blanczos_small_data_10_iterations 94.8% 54.515 51.684 100.0% 10 10; ----------------------; Harmonic mean: 101.0%; Geometric mean: 101.0%; Arithmetic mean: 101.1%; Median: 102.6%; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10905#issuecomment-946827333
https://github.com/hail-is/hail/pull/10905#issuecomment-946827333:91,Testability,Benchmark,Benchmark,91,Reran bad benchmarks with 5 iterations and 20 replicas. Looks like it was just noise. ```; Benchmark Name Ratio Time 1 Time 2 Mem Ratio Mem 1 (MB) Mem 2 (MB); -------------- ----- ------ ------ --------- ---------- ----------; hwe_normalized_pca_blanczos_small_data_0_iterations 104.3% 20.510 21.402 100.0% 9 9; hwe_normalized_pca 102.9% 35.982 37.009 100.0% 1 1; table_import_ints 102.4% 101.279 103.670 100.0% 1 1; hwe_normalized_pca_blanczos_small_data_10_iterations 94.8% 54.515 51.684 100.0% 10 10; ----------------------; Harmonic mean: 101.0%; Geometric mean: 101.0%; Arithmetic mean: 101.1%; Median: 102.6%; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10905#issuecomment-946827333
https://github.com/hail-is/hail/pull/10907#issuecomment-961973892:95,Performance,load,load,95,"> Maybe lazy fields should not subclass Value, and to access a lazy field requires an explicit load(cb: CodeBuilder): Value[T]. I think this is probably the right model.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10907#issuecomment-961973892
https://github.com/hail-is/hail/pull/10907#issuecomment-961973892:54,Security,access,access,54,"> Maybe lazy fields should not subclass Value, and to access a lazy field requires an explicit load(cb: CodeBuilder): Value[T]. I think this is probably the right model.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10907#issuecomment-961973892
https://github.com/hail-is/hail/pull/10915#issuecomment-931609566:88,Availability,error,error,88,The user on the forum tried a wheel I made for them and they encountered the exact same error.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10915#issuecomment-931609566
https://github.com/hail-is/hail/pull/10920#issuecomment-934758488:109,Usability,feedback,feedback,109,"I didn't quite everything done in worker.py or managing the different secrets. However, I'd still appreciate feedback on the structure before I work on this more.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-934758488
https://github.com/hail-is/hail/pull/10920#issuecomment-942374466:181,Availability,error,errors,181,"I tested this with a hard-hitting batch that used a bunch of storage, looked through the UI and didn't get any 500s, and checked the logs on both the k8s pods and the instances for errors. I also commented out each part of the garbage collection loops and made sure everything got cleaned up. For example, commenting out the activity logs loop or the monitor instances loop with the deactivate API point not doing anything.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-942374466
https://github.com/hail-is/hail/pull/10920#issuecomment-942374466:351,Energy Efficiency,monitor,monitor,351,"I tested this with a hard-hitting batch that used a bunch of storage, looked through the UI and didn't get any 500s, and checked the logs on both the k8s pods and the instances for errors. I also commented out each part of the garbage collection loops and made sure everything got cleaned up. For example, commenting out the activity logs loop or the monitor instances loop with the deactivate API point not doing anything.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-942374466
https://github.com/hail-is/hail/pull/10920#issuecomment-942374466:2,Testability,test,tested,2,"I tested this with a hard-hitting batch that used a bunch of storage, looked through the UI and didn't get any 500s, and checked the logs on both the k8s pods and the instances for errors. I also commented out each part of the garbage collection loops and made sure everything got cleaned up. For example, commenting out the activity logs loop or the monitor instances loop with the deactivate API point not doing anything.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-942374466
https://github.com/hail-is/hail/pull/10920#issuecomment-942374466:133,Testability,log,logs,133,"I tested this with a hard-hitting batch that used a bunch of storage, looked through the UI and didn't get any 500s, and checked the logs on both the k8s pods and the instances for errors. I also commented out each part of the garbage collection loops and made sure everything got cleaned up. For example, commenting out the activity logs loop or the monitor instances loop with the deactivate API point not doing anything.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-942374466
https://github.com/hail-is/hail/pull/10920#issuecomment-942374466:334,Testability,log,logs,334,"I tested this with a hard-hitting batch that used a bunch of storage, looked through the UI and didn't get any 500s, and checked the logs on both the k8s pods and the instances for errors. I also commented out each part of the garbage collection loops and made sure everything got cleaned up. For example, commenting out the activity logs loop or the monitor instances loop with the deactivate API point not doing anything.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-942374466
https://github.com/hail-is/hail/pull/10920#issuecomment-949956416:127,Availability,error,errors,127,"Can you take a look at the new structure and see if it's better? If so, then I'll test everything again making sure there's no errors in the logs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-949956416
https://github.com/hail-is/hail/pull/10920#issuecomment-949956416:82,Testability,test,test,82,"Can you take a look at the new structure and see if it's better? If so, then I'll test everything again making sure there's no errors in the logs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-949956416
https://github.com/hail-is/hail/pull/10920#issuecomment-949956416:141,Testability,log,logs,141,"Can you take a look at the new structure and see if it's better? If so, then I'll test everything again making sure there's no errors in the logs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-949956416
https://github.com/hail-is/hail/pull/10920#issuecomment-951271454:84,Modifiability,refactor,refactoring,84,I'm getting circular import problems in later branches. I'm going to try some major refactoring and might put the rest of the changes in this PR.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-951271454
https://github.com/hail-is/hail/pull/10920#issuecomment-951332977:480,Integrability,interface,interfaces,480,"I figured out the cyclic import. I have the code two ways now. Take your pick:. ```; batch/; gcp/; cloud.py # contains constructor functions for CloudDriver, CloudDisk etc.; utils.py. # has general utils plus the InstanceConfig constructor functions (this is what caused the cyclic import when they were in the same file as the CloudDriver constructor); ```. OR. ```; batch/; cloud/; gcp/; cloud.py. # contains constructor functions for CloudDriver etc.; instance_config.py # has interfaces for constructing InstanceConfig (this can't be in the same file as the CloudDriver constructor function due to cyclic import.; utils.py. # old utils functions; ```. If you're going to carefully go through the code, do you want the other two sets of changes in this PR? Then all of Batch will be completely cloud-agnostic and not just the driver. Up to you how you want me to structure this.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-951332977
https://github.com/hail-is/hail/pull/10920#issuecomment-955880381:285,Modifiability,config,config,285,"OK, I have a version of this branch that's nearly ready and addresses the add_instance issue as well as some other issues I hit along the way to fixing that. Unfortunately, it's not compatible with hail-is/main? What happened to batch_configuration.py? It seems to be using the global config even though the main branch batch_configuration does not.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-955880381
https://github.com/hail-is/hail/pull/10920#issuecomment-956168436:131,Modifiability,config,config,131,This is what I was trying to tell you last week. Daniel had a PR that changed the storage URI that didn't add them from the global config yet and there were going to be merge conflicts based on who merged first. Sorry :(. #11014,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956168436
https://github.com/hail-is/hail/pull/10920#issuecomment-956500279:188,Availability,down,down,188,"OK, so the big insight is that ""InstanceConfig"" is really just ""ResourcesForAParticularInstance"" (well, and, sometimes, ""ResourcesOfARepresentativeInstance""). I trimmed the InstanceConfig down *significantly* removing the ""vm_config"". Now the InstanceConfig is cheap and easy to create and there's no circularity between vm_config and instance config. I pushed that through everywhere and then abstracted the common create_instance logic for pool and job-private into InstanceCollection. With both of those changes, I was able to modify the ResourceManager's API to expose methods for constructing instance configs. However, the instance config isn't critical to the operation of the ResourceManager. It's just an interface for communicating an instance's resources to the rest of the code base.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956500279
https://github.com/hail-is/hail/pull/10920#issuecomment-956500279:714,Integrability,interface,interface,714,"OK, so the big insight is that ""InstanceConfig"" is really just ""ResourcesForAParticularInstance"" (well, and, sometimes, ""ResourcesOfARepresentativeInstance""). I trimmed the InstanceConfig down *significantly* removing the ""vm_config"". Now the InstanceConfig is cheap and easy to create and there's no circularity between vm_config and instance config. I pushed that through everywhere and then abstracted the common create_instance logic for pool and job-private into InstanceCollection. With both of those changes, I was able to modify the ResourceManager's API to expose methods for constructing instance configs. However, the instance config isn't critical to the operation of the ResourceManager. It's just an interface for communicating an instance's resources to the rest of the code base.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956500279
https://github.com/hail-is/hail/pull/10920#issuecomment-956500279:344,Modifiability,config,config,344,"OK, so the big insight is that ""InstanceConfig"" is really just ""ResourcesForAParticularInstance"" (well, and, sometimes, ""ResourcesOfARepresentativeInstance""). I trimmed the InstanceConfig down *significantly* removing the ""vm_config"". Now the InstanceConfig is cheap and easy to create and there's no circularity between vm_config and instance config. I pushed that through everywhere and then abstracted the common create_instance logic for pool and job-private into InstanceCollection. With both of those changes, I was able to modify the ResourceManager's API to expose methods for constructing instance configs. However, the instance config isn't critical to the operation of the ResourceManager. It's just an interface for communicating an instance's resources to the rest of the code base.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956500279
https://github.com/hail-is/hail/pull/10920#issuecomment-956500279:607,Modifiability,config,configs,607,"OK, so the big insight is that ""InstanceConfig"" is really just ""ResourcesForAParticularInstance"" (well, and, sometimes, ""ResourcesOfARepresentativeInstance""). I trimmed the InstanceConfig down *significantly* removing the ""vm_config"". Now the InstanceConfig is cheap and easy to create and there's no circularity between vm_config and instance config. I pushed that through everywhere and then abstracted the common create_instance logic for pool and job-private into InstanceCollection. With both of those changes, I was able to modify the ResourceManager's API to expose methods for constructing instance configs. However, the instance config isn't critical to the operation of the ResourceManager. It's just an interface for communicating an instance's resources to the rest of the code base.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956500279
https://github.com/hail-is/hail/pull/10920#issuecomment-956500279:638,Modifiability,config,config,638,"OK, so the big insight is that ""InstanceConfig"" is really just ""ResourcesForAParticularInstance"" (well, and, sometimes, ""ResourcesOfARepresentativeInstance""). I trimmed the InstanceConfig down *significantly* removing the ""vm_config"". Now the InstanceConfig is cheap and easy to create and there's no circularity between vm_config and instance config. I pushed that through everywhere and then abstracted the common create_instance logic for pool and job-private into InstanceCollection. With both of those changes, I was able to modify the ResourceManager's API to expose methods for constructing instance configs. However, the instance config isn't critical to the operation of the ResourceManager. It's just an interface for communicating an instance's resources to the rest of the code base.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956500279
https://github.com/hail-is/hail/pull/10920#issuecomment-956500279:566,Security,expose,expose,566,"OK, so the big insight is that ""InstanceConfig"" is really just ""ResourcesForAParticularInstance"" (well, and, sometimes, ""ResourcesOfARepresentativeInstance""). I trimmed the InstanceConfig down *significantly* removing the ""vm_config"". Now the InstanceConfig is cheap and easy to create and there's no circularity between vm_config and instance config. I pushed that through everywhere and then abstracted the common create_instance logic for pool and job-private into InstanceCollection. With both of those changes, I was able to modify the ResourceManager's API to expose methods for constructing instance configs. However, the instance config isn't critical to the operation of the ResourceManager. It's just an interface for communicating an instance's resources to the rest of the code base.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956500279
https://github.com/hail-is/hail/pull/10920#issuecomment-956500279:432,Testability,log,logic,432,"OK, so the big insight is that ""InstanceConfig"" is really just ""ResourcesForAParticularInstance"" (well, and, sometimes, ""ResourcesOfARepresentativeInstance""). I trimmed the InstanceConfig down *significantly* removing the ""vm_config"". Now the InstanceConfig is cheap and easy to create and there's no circularity between vm_config and instance config. I pushed that through everywhere and then abstracted the common create_instance logic for pool and job-private into InstanceCollection. With both of those changes, I was able to modify the ResourceManager's API to expose methods for constructing instance configs. However, the instance config isn't critical to the operation of the ResourceManager. It's just an interface for communicating an instance's resources to the rest of the code base.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956500279
https://github.com/hail-is/hail/pull/10920#issuecomment-956501512:38,Testability,test,test,38,"I also converted stress into a proper test which we can start running on every PR. I'll PR that separately. I'm currently running that test on my changes. You can see all the changes here: https://github.com/hail-is/hail/pull/11029/commits/8d4c7a22a19ae0a79527eae790d537cf020c1cca. The diff is bad because I merged in main. I removed all the global_config things and tried to keep the minimal diff from main. We can make those changes, if desired, at a later date.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956501512
https://github.com/hail-is/hail/pull/10920#issuecomment-956501512:135,Testability,test,test,135,"I also converted stress into a proper test which we can start running on every PR. I'll PR that separately. I'm currently running that test on my changes. You can see all the changes here: https://github.com/hail-is/hail/pull/11029/commits/8d4c7a22a19ae0a79527eae790d537cf020c1cca. The diff is bad because I merged in main. I removed all the global_config things and tried to keep the minimal diff from main. We can make those changes, if desired, at a later date.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956501512
https://github.com/hail-is/hail/pull/10920#issuecomment-956506343:127,Modifiability,rewrite,rewrite-all,127,"Erm, sorry, the right place to look for a diff is: https://github.com/hail-is/hail/compare/main...danking:batch-cloud-agnostic-rewrite-all",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956506343
https://github.com/hail-is/hail/pull/10920#issuecomment-956513606:71,Energy Efficiency,monitor,monitoring,71,The reason for the circularity is because I added this code to get the monitoring in Grafana/Prometheus of instance costs. https://github.com/hail-is/hail/commit/8d4c7a22a19ae0a79527eae790d537cf020c1cca#diff-0eb2a9c198baaf288c71080bf314f821303f734f13b9b15bb9767cad8ba9bbe7R1012-R1022,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956513606
https://github.com/hail-is/hail/pull/10920#issuecomment-956513975:59,Availability,error,errors,59,"If you look at the driver logs, there should be a bunch of errors.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956513975
https://github.com/hail-is/hail/pull/10920#issuecomment-956513975:26,Testability,log,logs,26,"If you look at the driver logs, there should be a bunch of errors.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956513975
https://github.com/hail-is/hail/pull/10920#issuecomment-956517576:115,Modifiability,config,config,115,"I'll keep an eye out for that, but I nix'ed the circularity by taking the vm_config off of the instance & instance config. Every instance still has an instance_config which I made non-optional. It basically has exactly one function now: tell me how much this instance costs per hour.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956517576
https://github.com/hail-is/hail/pull/10920#issuecomment-956522959:231,Availability,ERROR,ERROR,231,"Ok. This exact scenario is what I was worried about when we merge PRs without checking the logs by hand in a full testing scenario. I want a way to check the PR driver, front-end, and worker logs automatically that they don't have ERROR messages. Like test_invariants. For example, I'm still looking at your change for time_since_last_state_change. When I had the code you wanted, there were errors because time_since_last_state_change was None. The current tests would not have caught that. I think we need either a white list of acceptable front-end/driver errors or some kind of threshold for error types. I'll think about it some more once the batch porting is done.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956522959
https://github.com/hail-is/hail/pull/10920#issuecomment-956522959:392,Availability,error,errors,392,"Ok. This exact scenario is what I was worried about when we merge PRs without checking the logs by hand in a full testing scenario. I want a way to check the PR driver, front-end, and worker logs automatically that they don't have ERROR messages. Like test_invariants. For example, I'm still looking at your change for time_since_last_state_change. When I had the code you wanted, there were errors because time_since_last_state_change was None. The current tests would not have caught that. I think we need either a white list of acceptable front-end/driver errors or some kind of threshold for error types. I'll think about it some more once the batch porting is done.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956522959
https://github.com/hail-is/hail/pull/10920#issuecomment-956522959:559,Availability,error,errors,559,"Ok. This exact scenario is what I was worried about when we merge PRs without checking the logs by hand in a full testing scenario. I want a way to check the PR driver, front-end, and worker logs automatically that they don't have ERROR messages. Like test_invariants. For example, I'm still looking at your change for time_since_last_state_change. When I had the code you wanted, there were errors because time_since_last_state_change was None. The current tests would not have caught that. I think we need either a white list of acceptable front-end/driver errors or some kind of threshold for error types. I'll think about it some more once the batch porting is done.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956522959
https://github.com/hail-is/hail/pull/10920#issuecomment-956522959:596,Availability,error,error,596,"Ok. This exact scenario is what I was worried about when we merge PRs without checking the logs by hand in a full testing scenario. I want a way to check the PR driver, front-end, and worker logs automatically that they don't have ERROR messages. Like test_invariants. For example, I'm still looking at your change for time_since_last_state_change. When I had the code you wanted, there were errors because time_since_last_state_change was None. The current tests would not have caught that. I think we need either a white list of acceptable front-end/driver errors or some kind of threshold for error types. I'll think about it some more once the batch porting is done.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956522959
https://github.com/hail-is/hail/pull/10920#issuecomment-956522959:237,Integrability,message,messages,237,"Ok. This exact scenario is what I was worried about when we merge PRs without checking the logs by hand in a full testing scenario. I want a way to check the PR driver, front-end, and worker logs automatically that they don't have ERROR messages. Like test_invariants. For example, I'm still looking at your change for time_since_last_state_change. When I had the code you wanted, there were errors because time_since_last_state_change was None. The current tests would not have caught that. I think we need either a white list of acceptable front-end/driver errors or some kind of threshold for error types. I'll think about it some more once the batch porting is done.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956522959
https://github.com/hail-is/hail/pull/10920#issuecomment-956522959:91,Testability,log,logs,91,"Ok. This exact scenario is what I was worried about when we merge PRs without checking the logs by hand in a full testing scenario. I want a way to check the PR driver, front-end, and worker logs automatically that they don't have ERROR messages. Like test_invariants. For example, I'm still looking at your change for time_since_last_state_change. When I had the code you wanted, there were errors because time_since_last_state_change was None. The current tests would not have caught that. I think we need either a white list of acceptable front-end/driver errors or some kind of threshold for error types. I'll think about it some more once the batch porting is done.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956522959
https://github.com/hail-is/hail/pull/10920#issuecomment-956522959:114,Testability,test,testing,114,"Ok. This exact scenario is what I was worried about when we merge PRs without checking the logs by hand in a full testing scenario. I want a way to check the PR driver, front-end, and worker logs automatically that they don't have ERROR messages. Like test_invariants. For example, I'm still looking at your change for time_since_last_state_change. When I had the code you wanted, there were errors because time_since_last_state_change was None. The current tests would not have caught that. I think we need either a white list of acceptable front-end/driver errors or some kind of threshold for error types. I'll think about it some more once the batch porting is done.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956522959
https://github.com/hail-is/hail/pull/10920#issuecomment-956522959:191,Testability,log,logs,191,"Ok. This exact scenario is what I was worried about when we merge PRs without checking the logs by hand in a full testing scenario. I want a way to check the PR driver, front-end, and worker logs automatically that they don't have ERROR messages. Like test_invariants. For example, I'm still looking at your change for time_since_last_state_change. When I had the code you wanted, there were errors because time_since_last_state_change was None. The current tests would not have caught that. I think we need either a white list of acceptable front-end/driver errors or some kind of threshold for error types. I'll think about it some more once the batch porting is done.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956522959
https://github.com/hail-is/hail/pull/10920#issuecomment-956522959:458,Testability,test,tests,458,"Ok. This exact scenario is what I was worried about when we merge PRs without checking the logs by hand in a full testing scenario. I want a way to check the PR driver, front-end, and worker logs automatically that they don't have ERROR messages. Like test_invariants. For example, I'm still looking at your change for time_since_last_state_change. When I had the code you wanted, there were errors because time_since_last_state_change was None. The current tests would not have caught that. I think we need either a white list of acceptable front-end/driver errors or some kind of threshold for error types. I'll think about it some more once the batch porting is done.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956522959
https://github.com/hail-is/hail/pull/10920#issuecomment-956533915:36,Availability,error,errors,36,Yes! I definitely want to assert no errors in the logs. I think we're very close to being able to assert that.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956533915
https://github.com/hail-is/hail/pull/10920#issuecomment-956533915:26,Testability,assert,assert,26,Yes! I definitely want to assert no errors in the logs. I think we're very close to being able to assert that.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956533915
https://github.com/hail-is/hail/pull/10920#issuecomment-956533915:50,Testability,log,logs,50,Yes! I definitely want to assert no errors in the logs. I think we're very close to being able to assert that.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956533915
https://github.com/hail-is/hail/pull/10920#issuecomment-956533915:98,Testability,assert,assert,98,Yes! I definitely want to assert no errors in the logs. I think we're very close to being able to assert that.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956533915
https://github.com/hail-is/hail/pull/10920#issuecomment-956662015:45,Availability,error,error,45,"OK, I tested my branch twice with stress. No error logs. Many warnings due to known deadlock errors. Otherwise it looks clean. I've pushed those changes onto this branch. Let's merge tomorrow first thing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956662015
https://github.com/hail-is/hail/pull/10920#issuecomment-956662015:93,Availability,error,errors,93,"OK, I tested my branch twice with stress. No error logs. Many warnings due to known deadlock errors. Otherwise it looks clean. I've pushed those changes onto this branch. Let's merge tomorrow first thing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956662015
https://github.com/hail-is/hail/pull/10920#issuecomment-956662015:6,Testability,test,tested,6,"OK, I tested my branch twice with stress. No error logs. Many warnings due to known deadlock errors. Otherwise it looks clean. I've pushed those changes onto this branch. Let's merge tomorrow first thing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956662015
https://github.com/hail-is/hail/pull/10920#issuecomment-956662015:51,Testability,log,logs,51,"OK, I tested my branch twice with stress. No error logs. Many warnings due to known deadlock errors. Otherwise it looks clean. I've pushed those changes onto this branch. Let's merge tomorrow first thing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956662015
https://github.com/hail-is/hail/pull/10920#issuecomment-957973573:105,Modifiability,config,config,105,It's fine except for the `max_idle_time_msecs` in JPIM and the backwards compatibility with the instance config in the database.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-957973573
https://github.com/hail-is/hail/pull/10934#issuecomment-935176776:18,Testability,test,test,18,"oh, this fixes my test. got it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10934#issuecomment-935176776
https://github.com/hail-is/hail/pull/10943#issuecomment-943508821:23,Testability,test,tests,23,"This is failing python tests in a strange way (""Could not find log file"")",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10943#issuecomment-943508821
https://github.com/hail-is/hail/pull/10943#issuecomment-943508821:63,Testability,log,log,63,"This is failing python tests in a strange way (""Could not find log file"")",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10943#issuecomment-943508821
https://github.com/hail-is/hail/pull/10951#issuecomment-936649070:78,Modifiability,variab,variable,78,"eck, the busybox shell is annoying under featured. Can you add an environment variable instead, maybe KSSH_SHELL?. ```; kubectl -n ${2:-default} exec -it ""$(kfind1 ""$1"" ""$2"")"" ${3:+--container=""$3""} -- ${KSSH_SHELL:-/bin/sh}; ```; That way I can override it by default to give me a good shell.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10951#issuecomment-936649070
https://github.com/hail-is/hail/pull/10953#issuecomment-939112813:65,Availability,recover,recovered,65,"Ah, I was accidentally modifying an installed version of Hail. I recovered the files and brought them in. I deleted that other debug_info. It doesn't include the batch information. Now every batch test in batch/ and in hail/ should be consistently using `Batch.debug_info`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10953#issuecomment-939112813
https://github.com/hail-is/hail/pull/10953#issuecomment-939112813:36,Deployability,install,installed,36,"Ah, I was accidentally modifying an installed version of Hail. I recovered the files and brought them in. I deleted that other debug_info. It doesn't include the batch information. Now every batch test in batch/ and in hail/ should be consistently using `Batch.debug_info`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10953#issuecomment-939112813
https://github.com/hail-is/hail/pull/10953#issuecomment-939112813:65,Safety,recover,recovered,65,"Ah, I was accidentally modifying an installed version of Hail. I recovered the files and brought them in. I deleted that other debug_info. It doesn't include the batch information. Now every batch test in batch/ and in hail/ should be consistently using `Batch.debug_info`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10953#issuecomment-939112813
https://github.com/hail-is/hail/pull/10953#issuecomment-939112813:197,Testability,test,test,197,"Ah, I was accidentally modifying an installed version of Hail. I recovered the files and brought them in. I deleted that other debug_info. It doesn't include the batch information. Now every batch test in batch/ and in hail/ should be consistently using `Batch.debug_info`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10953#issuecomment-939112813
https://github.com/hail-is/hail/pull/10960#issuecomment-942622228:38,Modifiability,config,config,38,This is currently blocked by `hailctl config set batch/bucket` not accepting a full GCS uri and only accepts the bucket,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10960#issuecomment-942622228
https://github.com/hail-is/hail/pull/10969#issuecomment-942292720:50,Performance,cache,cache,50,"OK, crap, this is pretty broken. I think the code cache is holding onto broadcast pointers.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10969#issuecomment-942292720
https://github.com/hail-is/hail/pull/10969#issuecomment-1032801893:76,Performance,cache,cache,76,closed until I can take another look at how broadcasts are used in the code cache.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10969#issuecomment-1032801893
https://github.com/hail-is/hail/pull/10983#issuecomment-947197768:84,Integrability,depend,dependency,84,I put the WIP tag on so you can merge this at your leisure in case there's a hidden dependency somewhere.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10983#issuecomment-947197768
https://github.com/hail-is/hail/pull/10985#issuecomment-949085569:15,Availability,error,errors,15,"Bump, deadlock errors are absolutely hammering the cluster today.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10985#issuecomment-949085569
https://github.com/hail-is/hail/pull/10985#issuecomment-951320966:223,Performance,perform,performance,223,"OK, I will run the stress test later this week. It sounds like the stress test is really important to convincing us that batch is correct. I want to migrate that from a manual process into a normal test. I'm going to add a performance test that requires a 10,000 or 1,000 job /bin/true batch to finish in ~8 or 0.8 minutes. Let's see if we can add correctness checks to that that satisfy the needs of stress.py",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10985#issuecomment-951320966
https://github.com/hail-is/hail/pull/10985#issuecomment-951320966:26,Testability,test,test,26,"OK, I will run the stress test later this week. It sounds like the stress test is really important to convincing us that batch is correct. I want to migrate that from a manual process into a normal test. I'm going to add a performance test that requires a 10,000 or 1,000 job /bin/true batch to finish in ~8 or 0.8 minutes. Let's see if we can add correctness checks to that that satisfy the needs of stress.py",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10985#issuecomment-951320966
https://github.com/hail-is/hail/pull/10985#issuecomment-951320966:74,Testability,test,test,74,"OK, I will run the stress test later this week. It sounds like the stress test is really important to convincing us that batch is correct. I want to migrate that from a manual process into a normal test. I'm going to add a performance test that requires a 10,000 or 1,000 job /bin/true batch to finish in ~8 or 0.8 minutes. Let's see if we can add correctness checks to that that satisfy the needs of stress.py",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10985#issuecomment-951320966
https://github.com/hail-is/hail/pull/10985#issuecomment-951320966:198,Testability,test,test,198,"OK, I will run the stress test later this week. It sounds like the stress test is really important to convincing us that batch is correct. I want to migrate that from a manual process into a normal test. I'm going to add a performance test that requires a 10,000 or 1,000 job /bin/true batch to finish in ~8 or 0.8 minutes. Let's see if we can add correctness checks to that that satisfy the needs of stress.py",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10985#issuecomment-951320966
https://github.com/hail-is/hail/pull/10985#issuecomment-951320966:235,Testability,test,test,235,"OK, I will run the stress test later this week. It sounds like the stress test is really important to convincing us that batch is correct. I want to migrate that from a manual process into a normal test. I'm going to add a performance test that requires a 10,000 or 1,000 job /bin/true batch to finish in ~8 or 0.8 minutes. Let's see if we can add correctness checks to that that satisfy the needs of stress.py",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10985#issuecomment-951320966
https://github.com/hail-is/hail/pull/10985#issuecomment-954864994:17,Testability,test,test,17,"I ran the stress test. It finished in 8 minutes which makes for a paltry 2 jobs per second. That was largely driven by three jobs that took 5 minutes (!!!) to upload their logs to GCS. No idea what's going on there, but clearly unrelated to these DB changes. If you ignore those jobs and the private jobs, which required VM spin up, it only took 3 minutes, which is still an unfortunate 6 jobs per second, but I have more speed coming.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10985#issuecomment-954864994
https://github.com/hail-is/hail/pull/10985#issuecomment-954864994:172,Testability,log,logs,172,"I ran the stress test. It finished in 8 minutes which makes for a paltry 2 jobs per second. That was largely driven by three jobs that took 5 minutes (!!!) to upload their logs to GCS. No idea what's going on there, but clearly unrelated to these DB changes. If you ignore those jobs and the private jobs, which required VM spin up, it only took 3 minutes, which is still an unfortunate 6 jobs per second, but I have more speed coming.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10985#issuecomment-954864994
https://github.com/hail-is/hail/pull/10985#issuecomment-954864994:220,Usability,clear,clearly,220,"I ran the stress test. It finished in 8 minutes which makes for a paltry 2 jobs per second. That was largely driven by three jobs that took 5 minutes (!!!) to upload their logs to GCS. No idea what's going on there, but clearly unrelated to these DB changes. If you ignore those jobs and the private jobs, which required VM spin up, it only took 3 minutes, which is still an unfortunate 6 jobs per second, but I have more speed coming.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10985#issuecomment-954864994
https://github.com/hail-is/hail/pull/10985#issuecomment-954865403:29,Integrability,Depend,Dependencies,29,"Oh, and, yes, nothing broke. Dependencies of failed jobs were cancelled, always run jobs always ran, etc.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10985#issuecomment-954865403
https://github.com/hail-is/hail/pull/10985#issuecomment-1011304877:81,Availability,down,down,81,all builds are failing because the repository the hosts the shadow jar plugin is down,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10985#issuecomment-1011304877
https://github.com/hail-is/hail/pull/10985#issuecomment-1011304877:71,Modifiability,plugin,plugin,71,all builds are failing because the repository the hosts the shadow jar plugin is down,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10985#issuecomment-1011304877
https://github.com/hail-is/hail/pull/10986#issuecomment-947023708:15,Usability,feedback,feedback,15,"I'd appreciate feedback, but I realize there's more ways to abstract the code and make it more reusable.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10986#issuecomment-947023708
https://github.com/hail-is/hail/pull/10986#issuecomment-947944813:435,Integrability,depend,depends,435,This is ready for a second look. I basically tried to do the minimum to change nomenclature for services that aren't auth. I had to put in some backwards compatibility in `batch/job.py` because there could be batches with the old format for userdata in the database with `gsa_key_secret_name` instead of `hail_credentials_secret_name`. I also kept the old field in `hail/python/hailtop/hailctl/auth/user.py`. I'm not sure exactly what depends on that.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10986#issuecomment-947944813
https://github.com/hail-is/hail/pull/10986#issuecomment-948995865:40,Testability,test,test,40,"If you want to wait for Daniel and I to test it in Azure later, that's fine in case something else shows up.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/10986#issuecomment-948995865
https://github.com/hail-is/hail/pull/11003#issuecomment-1476992958:129,Availability,error,error,129,@patrick-schultz I resolved the conflict by keeping main which seems to have encompassed your change but with a more descriptive error message.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11003#issuecomment-1476992958
https://github.com/hail-is/hail/pull/11003#issuecomment-1476992958:135,Integrability,message,message,135,@patrick-schultz I resolved the conflict by keeping main which seems to have encompassed your change but with a more descriptive error message.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11003#issuecomment-1476992958
https://github.com/hail-is/hail/pull/11005#issuecomment-949802668:72,Deployability,deploy,deploy,72,What were the other config changes you had to make to Auth to get it to deploy? I didn't see any here.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11005#issuecomment-949802668
https://github.com/hail-is/hail/pull/11005#issuecomment-949802668:20,Modifiability,config,config,20,What were the other config changes you had to make to Auth to get it to deploy? I didn't see any here.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11005#issuecomment-949802668
https://github.com/hail-is/hail/pull/11016#issuecomment-964540617:212,Availability,error,error,212,"OK, this is working and ready for review. I tested manually that on a variety of node types, we both (1) get the expected number of containers (all the cores in the cluster are used) and (2) we get the right OOM error instead of container crashing. Your comment is addressed -- we always call increment before actually allocating, so we won't exceed the threshold.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11016#issuecomment-964540617
https://github.com/hail-is/hail/pull/11016#issuecomment-964540617:44,Testability,test,tested,44,"OK, this is working and ready for review. I tested manually that on a variety of node types, we both (1) get the expected number of containers (all the cores in the cluster are used) and (2) we get the right OOM error instead of container crashing. Your comment is addressed -- we always call increment before actually allocating, so we won't exceed the threshold.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11016#issuecomment-964540617
https://github.com/hail-is/hail/pull/11023#issuecomment-956312369:22,Testability,test,test,22,@tpoterba failing the test you wrote,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11023#issuecomment-956312369
https://github.com/hail-is/hail/pull/11023#issuecomment-958005579:25,Testability,test,test,25,"Commented out the phased test -- this was meant to fail, and I didn't intend to fix that in this PR (it's hard, we need to change the Call representation...)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11023#issuecomment-958005579
https://github.com/hail-is/hail/pull/11029#issuecomment-956427427:60,Modifiability,rewrite,rewrite-all,60,https://github.com/jigold/hail/compare/batch-cloud-agnostic-rewrite-all...danking:batch-cloud-agnostic-rewrite-all,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11029#issuecomment-956427427
https://github.com/hail-is/hail/pull/11029#issuecomment-956427427:103,Modifiability,rewrite,rewrite-all,103,https://github.com/jigold/hail/compare/batch-cloud-agnostic-rewrite-all...danking:batch-cloud-agnostic-rewrite-all,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11029#issuecomment-956427427
https://github.com/hail-is/hail/pull/11040#issuecomment-965507019:48,Testability,test,tests,48,@daniel-goldstein I anticipate it will pass the tests now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11040#issuecomment-965507019
https://github.com/hail-is/hail/pull/11044#issuecomment-961837291:27,Testability,test,tests,27,I'll look at this when the tests are passing.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11044#issuecomment-961837291
https://github.com/hail-is/hail/pull/11046#issuecomment-965346335:40,Deployability,update,update,40,"Worth noting that this is also going to update JDK from 8 -> 11. That should be fine, as far as I can tell hail query works with both now, but we don't run hail tests with JDK 11, we do so with JDK 8. . Probably we should take some time to drop support for Spark 2, Python 3.6, and Java 8.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11046#issuecomment-965346335
https://github.com/hail-is/hail/pull/11046#issuecomment-965346335:161,Testability,test,tests,161,"Worth noting that this is also going to update JDK from 8 -> 11. That should be fine, as far as I can tell hail query works with both now, but we don't run hail tests with JDK 11, we do so with JDK 8. . Probably we should take some time to drop support for Spark 2, Python 3.6, and Java 8.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11046#issuecomment-965346335
https://github.com/hail-is/hail/pull/11046#issuecomment-965471326:24,Testability,test,test,24,Could we add a specific test for compatibilty on JDK 8 and move the default forward? We're on a crash course of incompatibility with the current python3.6 / ubuntu:18.04 / Java 8 restrictions. From Oracle's pages it feels like Java 8 will simply never die...,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11046#issuecomment-965471326
https://github.com/hail-is/hail/pull/11046#issuecomment-965471326:239,Usability,simpl,simply,239,Could we add a specific test for compatibilty on JDK 8 and move the default forward? We're on a crash course of incompatibility with the current python3.6 / ubuntu:18.04 / Java 8 restrictions. From Oracle's pages it feels like Java 8 will simply never die...,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11046#issuecomment-965471326
https://github.com/hail-is/hail/pull/11046#issuecomment-965578805:251,Deployability,install,installs,251,"Upgrading is a good instinct to have. I appreciate this PR. The story here is long, complex, and mundane. I've tried to include everything below. Python 3.6, (should) only appear in the linting image for python 3.6. The `hail-ubuntu` image explicitly installs Python 3.7. I'm happy to drop linting for Python 3.6 from build.yaml if compilers team is OK with that (ask Tim). We are already using Ubuntu 20.04 for our services and tests. See below for details, but `hail-ubuntu` is based on 20.04. We explicitly install JDK 8 in the `base` image. ---. This PR doesn't change the hail-ubuntu image which is the basis for nearly all our images. `DOCKER_ROOT_IMAGE` seems to have been introduced [here](https://github.com/hail-is/hail/pull/9660). That's my bad for not flagging in the review that this isn't actually a ""root image"". `DOCKER_ROOT_IMAGE` is just some Linux image with the standard utils. It was introduced as a distinct global concept when Docker Hub began enforcing rate limits (so we needed all our test images to live in GCR). If you look at the occurrences of `DOCKER_ROOT_IMAGE` or `docker_root_image` you'll find it's almost exclusively used in the tests except for one occurrence in `build-batch-worker-image-startup-gcp.sh`. We could just remove that line. That line is an attempt to keep a relatively recent version of the ubuntu image cached on the worker VM so that we can save some time when pulling the worker Docker image. In practice, the ubuntu image is extraordinarily tiny and quickly becomes out of date (because we rarely rebuild the VM). hail-ubuntu uses a timestamped ubuntu 20.04 tag: `ubuntu:focal-20201106`. I did this because we kept getting screwed by new ubuntu images getting released which were incompatible with us. We would only find out later when we changed the hail-ubuntu Dockerfile and triggered a refetch of the latest image at the `ubuntu:18.04` tag which included the breaking changes. You're correct that this is technical debt of ours. DOCKER_ROOT_I",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11046#issuecomment-965578805
https://github.com/hail-is/hail/pull/11046#issuecomment-965578805:510,Deployability,install,install,510,"Upgrading is a good instinct to have. I appreciate this PR. The story here is long, complex, and mundane. I've tried to include everything below. Python 3.6, (should) only appear in the linting image for python 3.6. The `hail-ubuntu` image explicitly installs Python 3.7. I'm happy to drop linting for Python 3.6 from build.yaml if compilers team is OK with that (ask Tim). We are already using Ubuntu 20.04 for our services and tests. See below for details, but `hail-ubuntu` is based on 20.04. We explicitly install JDK 8 in the `base` image. ---. This PR doesn't change the hail-ubuntu image which is the basis for nearly all our images. `DOCKER_ROOT_IMAGE` seems to have been introduced [here](https://github.com/hail-is/hail/pull/9660). That's my bad for not flagging in the review that this isn't actually a ""root image"". `DOCKER_ROOT_IMAGE` is just some Linux image with the standard utils. It was introduced as a distinct global concept when Docker Hub began enforcing rate limits (so we needed all our test images to live in GCR). If you look at the occurrences of `DOCKER_ROOT_IMAGE` or `docker_root_image` you'll find it's almost exclusively used in the tests except for one occurrence in `build-batch-worker-image-startup-gcp.sh`. We could just remove that line. That line is an attempt to keep a relatively recent version of the ubuntu image cached on the worker VM so that we can save some time when pulling the worker Docker image. In practice, the ubuntu image is extraordinarily tiny and quickly becomes out of date (because we rarely rebuild the VM). hail-ubuntu uses a timestamped ubuntu 20.04 tag: `ubuntu:focal-20201106`. I did this because we kept getting screwed by new ubuntu images getting released which were incompatible with us. We would only find out later when we changed the hail-ubuntu Dockerfile and triggered a refetch of the latest image at the `ubuntu:18.04` tag which included the breaking changes. You're correct that this is technical debt of ours. DOCKER_ROOT_I",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11046#issuecomment-965578805
https://github.com/hail-is/hail/pull/11046#issuecomment-965578805:1715,Deployability,release,released,1715," 3.6. The `hail-ubuntu` image explicitly installs Python 3.7. I'm happy to drop linting for Python 3.6 from build.yaml if compilers team is OK with that (ask Tim). We are already using Ubuntu 20.04 for our services and tests. See below for details, but `hail-ubuntu` is based on 20.04. We explicitly install JDK 8 in the `base` image. ---. This PR doesn't change the hail-ubuntu image which is the basis for nearly all our images. `DOCKER_ROOT_IMAGE` seems to have been introduced [here](https://github.com/hail-is/hail/pull/9660). That's my bad for not flagging in the review that this isn't actually a ""root image"". `DOCKER_ROOT_IMAGE` is just some Linux image with the standard utils. It was introduced as a distinct global concept when Docker Hub began enforcing rate limits (so we needed all our test images to live in GCR). If you look at the occurrences of `DOCKER_ROOT_IMAGE` or `docker_root_image` you'll find it's almost exclusively used in the tests except for one occurrence in `build-batch-worker-image-startup-gcp.sh`. We could just remove that line. That line is an attempt to keep a relatively recent version of the ubuntu image cached on the worker VM so that we can save some time when pulling the worker Docker image. In practice, the ubuntu image is extraordinarily tiny and quickly becomes out of date (because we rarely rebuild the VM). hail-ubuntu uses a timestamped ubuntu 20.04 tag: `ubuntu:focal-20201106`. I did this because we kept getting screwed by new ubuntu images getting released which were incompatible with us. We would only find out later when we changed the hail-ubuntu Dockerfile and triggered a refetch of the latest image at the `ubuntu:18.04` tag which included the breaking changes. You're correct that this is technical debt of ours. DOCKER_ROOT_IMAGE should really be SOME_LINUX_IMAGE and we shouldn't bother trying to fetch it in the worker image startup script. You're fighting the good fight, but, man, keeping a growing software project clean is hard.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11046#issuecomment-965578805
https://github.com/hail-is/hail/pull/11046#issuecomment-965578805:1355,Performance,cache,cached,1355," 3.6. The `hail-ubuntu` image explicitly installs Python 3.7. I'm happy to drop linting for Python 3.6 from build.yaml if compilers team is OK with that (ask Tim). We are already using Ubuntu 20.04 for our services and tests. See below for details, but `hail-ubuntu` is based on 20.04. We explicitly install JDK 8 in the `base` image. ---. This PR doesn't change the hail-ubuntu image which is the basis for nearly all our images. `DOCKER_ROOT_IMAGE` seems to have been introduced [here](https://github.com/hail-is/hail/pull/9660). That's my bad for not flagging in the review that this isn't actually a ""root image"". `DOCKER_ROOT_IMAGE` is just some Linux image with the standard utils. It was introduced as a distinct global concept when Docker Hub began enforcing rate limits (so we needed all our test images to live in GCR). If you look at the occurrences of `DOCKER_ROOT_IMAGE` or `docker_root_image` you'll find it's almost exclusively used in the tests except for one occurrence in `build-batch-worker-image-startup-gcp.sh`. We could just remove that line. That line is an attempt to keep a relatively recent version of the ubuntu image cached on the worker VM so that we can save some time when pulling the worker Docker image. In practice, the ubuntu image is extraordinarily tiny and quickly becomes out of date (because we rarely rebuild the VM). hail-ubuntu uses a timestamped ubuntu 20.04 tag: `ubuntu:focal-20201106`. I did this because we kept getting screwed by new ubuntu images getting released which were incompatible with us. We would only find out later when we changed the hail-ubuntu Dockerfile and triggered a refetch of the latest image at the `ubuntu:18.04` tag which included the breaking changes. You're correct that this is technical debt of ours. DOCKER_ROOT_IMAGE should really be SOME_LINUX_IMAGE and we shouldn't bother trying to fetch it in the worker image startup script. You're fighting the good fight, but, man, keeping a growing software project clean is hard.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11046#issuecomment-965578805
https://github.com/hail-is/hail/pull/11046#issuecomment-965578805:429,Testability,test,tests,429,"Upgrading is a good instinct to have. I appreciate this PR. The story here is long, complex, and mundane. I've tried to include everything below. Python 3.6, (should) only appear in the linting image for python 3.6. The `hail-ubuntu` image explicitly installs Python 3.7. I'm happy to drop linting for Python 3.6 from build.yaml if compilers team is OK with that (ask Tim). We are already using Ubuntu 20.04 for our services and tests. See below for details, but `hail-ubuntu` is based on 20.04. We explicitly install JDK 8 in the `base` image. ---. This PR doesn't change the hail-ubuntu image which is the basis for nearly all our images. `DOCKER_ROOT_IMAGE` seems to have been introduced [here](https://github.com/hail-is/hail/pull/9660). That's my bad for not flagging in the review that this isn't actually a ""root image"". `DOCKER_ROOT_IMAGE` is just some Linux image with the standard utils. It was introduced as a distinct global concept when Docker Hub began enforcing rate limits (so we needed all our test images to live in GCR). If you look at the occurrences of `DOCKER_ROOT_IMAGE` or `docker_root_image` you'll find it's almost exclusively used in the tests except for one occurrence in `build-batch-worker-image-startup-gcp.sh`. We could just remove that line. That line is an attempt to keep a relatively recent version of the ubuntu image cached on the worker VM so that we can save some time when pulling the worker Docker image. In practice, the ubuntu image is extraordinarily tiny and quickly becomes out of date (because we rarely rebuild the VM). hail-ubuntu uses a timestamped ubuntu 20.04 tag: `ubuntu:focal-20201106`. I did this because we kept getting screwed by new ubuntu images getting released which were incompatible with us. We would only find out later when we changed the hail-ubuntu Dockerfile and triggered a refetch of the latest image at the `ubuntu:18.04` tag which included the breaking changes. You're correct that this is technical debt of ours. DOCKER_ROOT_I",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11046#issuecomment-965578805
https://github.com/hail-is/hail/pull/11046#issuecomment-965578805:1011,Testability,test,test,1011,"Upgrading is a good instinct to have. I appreciate this PR. The story here is long, complex, and mundane. I've tried to include everything below. Python 3.6, (should) only appear in the linting image for python 3.6. The `hail-ubuntu` image explicitly installs Python 3.7. I'm happy to drop linting for Python 3.6 from build.yaml if compilers team is OK with that (ask Tim). We are already using Ubuntu 20.04 for our services and tests. See below for details, but `hail-ubuntu` is based on 20.04. We explicitly install JDK 8 in the `base` image. ---. This PR doesn't change the hail-ubuntu image which is the basis for nearly all our images. `DOCKER_ROOT_IMAGE` seems to have been introduced [here](https://github.com/hail-is/hail/pull/9660). That's my bad for not flagging in the review that this isn't actually a ""root image"". `DOCKER_ROOT_IMAGE` is just some Linux image with the standard utils. It was introduced as a distinct global concept when Docker Hub began enforcing rate limits (so we needed all our test images to live in GCR). If you look at the occurrences of `DOCKER_ROOT_IMAGE` or `docker_root_image` you'll find it's almost exclusively used in the tests except for one occurrence in `build-batch-worker-image-startup-gcp.sh`. We could just remove that line. That line is an attempt to keep a relatively recent version of the ubuntu image cached on the worker VM so that we can save some time when pulling the worker Docker image. In practice, the ubuntu image is extraordinarily tiny and quickly becomes out of date (because we rarely rebuild the VM). hail-ubuntu uses a timestamped ubuntu 20.04 tag: `ubuntu:focal-20201106`. I did this because we kept getting screwed by new ubuntu images getting released which were incompatible with us. We would only find out later when we changed the hail-ubuntu Dockerfile and triggered a refetch of the latest image at the `ubuntu:18.04` tag which included the breaking changes. You're correct that this is technical debt of ours. DOCKER_ROOT_I",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11046#issuecomment-965578805
https://github.com/hail-is/hail/pull/11046#issuecomment-965578805:1165,Testability,test,tests,1165," below. Python 3.6, (should) only appear in the linting image for python 3.6. The `hail-ubuntu` image explicitly installs Python 3.7. I'm happy to drop linting for Python 3.6 from build.yaml if compilers team is OK with that (ask Tim). We are already using Ubuntu 20.04 for our services and tests. See below for details, but `hail-ubuntu` is based on 20.04. We explicitly install JDK 8 in the `base` image. ---. This PR doesn't change the hail-ubuntu image which is the basis for nearly all our images. `DOCKER_ROOT_IMAGE` seems to have been introduced [here](https://github.com/hail-is/hail/pull/9660). That's my bad for not flagging in the review that this isn't actually a ""root image"". `DOCKER_ROOT_IMAGE` is just some Linux image with the standard utils. It was introduced as a distinct global concept when Docker Hub began enforcing rate limits (so we needed all our test images to live in GCR). If you look at the occurrences of `DOCKER_ROOT_IMAGE` or `docker_root_image` you'll find it's almost exclusively used in the tests except for one occurrence in `build-batch-worker-image-startup-gcp.sh`. We could just remove that line. That line is an attempt to keep a relatively recent version of the ubuntu image cached on the worker VM so that we can save some time when pulling the worker Docker image. In practice, the ubuntu image is extraordinarily tiny and quickly becomes out of date (because we rarely rebuild the VM). hail-ubuntu uses a timestamped ubuntu 20.04 tag: `ubuntu:focal-20201106`. I did this because we kept getting screwed by new ubuntu images getting released which were incompatible with us. We would only find out later when we changed the hail-ubuntu Dockerfile and triggered a refetch of the latest image at the `ubuntu:18.04` tag which included the breaking changes. You're correct that this is technical debt of ours. DOCKER_ROOT_IMAGE should really be SOME_LINUX_IMAGE and we shouldn't bother trying to fetch it in the worker image startup script. You're fighting the ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11046#issuecomment-965578805
https://github.com/hail-is/hail/pull/11050#issuecomment-982724577:58,Testability,test,tests,58,"Taking the WIP off of this. It's reviewable, and has some tests. It will certainly need to be iterated on before production use (mostly I think we need to get the right partition sizes for output).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11050#issuecomment-982724577
https://github.com/hail-is/hail/pull/11050#issuecomment-992692981:91,Usability,clear,clearer,91,"@patrick-schultz I addressed your comments, would be happy to take more steps to make code clearer if you see some. Otherwise I'd like if you could check that you're now happy with how `oversamplingNum` is being used.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11050#issuecomment-992692981
https://github.com/hail-is/hail/pull/11051#issuecomment-965671928:284,Availability,avail,available,284,"We can [reserve specific IP addresses](https://cloud.google.com/compute/docs/ip-addresses/reserve-static-internal-ip-address) for use later (like we do with internal gateway), but as far as I can tell the model is you assign a network or subnet an IP address range and that should be available to any resources created in it. I guess the proper way to ensure this would be to then use a range for job IPs that is outside the internal IP address range given to our default network.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11051#issuecomment-965671928
https://github.com/hail-is/hail/pull/11053#issuecomment-964437539:472,Availability,error,errors,472,"I'm currently running this branch of CI on a pull request of itself on my own fork of hail, and it nearly passes all tests except for hailtop_batch_* because of requester pays permissions issues and monitoring, because I don't have a service account in my project with all the permissions for broad-ctsa. So unfortunately haven't fully validated that it will _not_ merge a passing PR, but this seemed good enough that we can push it through for azure (since both of these errors are gcp-dependent). If this goes through I can put in a follow-up PR that mirrors the infra resources that CI needs in azure (blob storage, acr permissions, etc.)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11053#issuecomment-964437539
https://github.com/hail-is/hail/pull/11053#issuecomment-964437539:199,Energy Efficiency,monitor,monitoring,199,"I'm currently running this branch of CI on a pull request of itself on my own fork of hail, and it nearly passes all tests except for hailtop_batch_* because of requester pays permissions issues and monitoring, because I don't have a service account in my project with all the permissions for broad-ctsa. So unfortunately haven't fully validated that it will _not_ merge a passing PR, but this seemed good enough that we can push it through for azure (since both of these errors are gcp-dependent). If this goes through I can put in a follow-up PR that mirrors the infra resources that CI needs in azure (blob storage, acr permissions, etc.)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11053#issuecomment-964437539
https://github.com/hail-is/hail/pull/11053#issuecomment-964437539:487,Integrability,depend,dependent,487,"I'm currently running this branch of CI on a pull request of itself on my own fork of hail, and it nearly passes all tests except for hailtop_batch_* because of requester pays permissions issues and monitoring, because I don't have a service account in my project with all the permissions for broad-ctsa. So unfortunately haven't fully validated that it will _not_ merge a passing PR, but this seemed good enough that we can push it through for azure (since both of these errors are gcp-dependent). If this goes through I can put in a follow-up PR that mirrors the infra resources that CI needs in azure (blob storage, acr permissions, etc.)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11053#issuecomment-964437539
https://github.com/hail-is/hail/pull/11053#issuecomment-964437539:336,Security,validat,validated,336,"I'm currently running this branch of CI on a pull request of itself on my own fork of hail, and it nearly passes all tests except for hailtop_batch_* because of requester pays permissions issues and monitoring, because I don't have a service account in my project with all the permissions for broad-ctsa. So unfortunately haven't fully validated that it will _not_ merge a passing PR, but this seemed good enough that we can push it through for azure (since both of these errors are gcp-dependent). If this goes through I can put in a follow-up PR that mirrors the infra resources that CI needs in azure (blob storage, acr permissions, etc.)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11053#issuecomment-964437539
https://github.com/hail-is/hail/pull/11053#issuecomment-964437539:117,Testability,test,tests,117,"I'm currently running this branch of CI on a pull request of itself on my own fork of hail, and it nearly passes all tests except for hailtop_batch_* because of requester pays permissions issues and monitoring, because I don't have a service account in my project with all the permissions for broad-ctsa. So unfortunately haven't fully validated that it will _not_ merge a passing PR, but this seemed good enough that we can push it through for azure (since both of these errors are gcp-dependent). If this goes through I can put in a follow-up PR that mirrors the infra resources that CI needs in azure (blob storage, acr permissions, etc.)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11053#issuecomment-964437539
https://github.com/hail-is/hail/pull/11053#issuecomment-964628523:81,Energy Efficiency,monitor,monitoring,81,"It would need BigQuery access to broad-ctsa, since that's where the data for the monitoring service lives. You can also look at the billing-monitor service account. I'm not sure much beyond that because I don't seem to be able to see broad-ctsa anymore in the console? And I only have IAM permissions in hail-vdc.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11053#issuecomment-964628523
https://github.com/hail-is/hail/pull/11053#issuecomment-964628523:140,Energy Efficiency,monitor,monitor,140,"It would need BigQuery access to broad-ctsa, since that's where the data for the monitoring service lives. You can also look at the billing-monitor service account. I'm not sure much beyond that because I don't seem to be able to see broad-ctsa anymore in the console? And I only have IAM permissions in hail-vdc.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11053#issuecomment-964628523
https://github.com/hail-is/hail/pull/11053#issuecomment-964628523:23,Security,access,access,23,"It would need BigQuery access to broad-ctsa, since that's where the data for the monitoring service lives. You can also look at the billing-monitor service account. I'm not sure much beyond that because I don't seem to be able to see broad-ctsa anymore in the console? And I only have IAM permissions in hail-vdc.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11053#issuecomment-964628523
https://github.com/hail-is/hail/pull/11053#issuecomment-964686794:57,Availability,down,down,57,Huh. I added you back to broad-ctsa. I'm curious to nail down the requester pays issues. Mmm. The billing monitoring is a bit of a mess. The BQ table should really be in hail-vdc and terraform should be able to create the necessary billing sinks to dump billing data into BQ. I'm not exactly sure what the equivalent tools are in Azure to get billing information.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11053#issuecomment-964686794
https://github.com/hail-is/hail/pull/11053#issuecomment-964686794:106,Energy Efficiency,monitor,monitoring,106,Huh. I added you back to broad-ctsa. I'm curious to nail down the requester pays issues. Mmm. The billing monitoring is a bit of a mess. The BQ table should really be in hail-vdc and terraform should be able to create the necessary billing sinks to dump billing data into BQ. I'm not exactly sure what the equivalent tools are in Azure to get billing information.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11053#issuecomment-964686794
https://github.com/hail-is/hail/pull/11053#issuecomment-965093937:87,Energy Efficiency,monitor,monitoring,87,"I'm going to add a clouds scope for RunImage steps today. Maybe that will help for the monitoring situation for now? Won't work for GCP but would be good for Azure. When we have what we want done for Thanksgiving, I can revisit this.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11053#issuecomment-965093937
https://github.com/hail-is/hail/pull/11055#issuecomment-965091556:18,Testability,test,tests,18,It looks like the tests are close to passing!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11055#issuecomment-965091556
https://github.com/hail-is/hail/pull/11060#issuecomment-967201497:8,Testability,benchmark,benchmark,8,Can you benchmark?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11060#issuecomment-967201497
https://github.com/hail-is/hail/pull/11060#issuecomment-971550658:8,Testability,benchmark,benchmarks,8,Are the benchmarks you posted on #11061 for this branch?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11060#issuecomment-971550658
https://github.com/hail-is/hail/pull/11060#issuecomment-971687705:122,Testability,Benchmark,Benchmark,122,"yes oops maybe shouldn't post them at 3am. Left is old, right is new, indexed reads got faster, combiner got faster. ```; Benchmark Name Ratio Time 1 Time 2 Mem Ratio Mem 1 (MB) Mem 2 (MB); -------------- ----- ------ ------ --------- ---------- ----------; table_read_force_count_ints 120.7% 6.734 8.127 100.0% 1 1; ndarray_matmul_float64_benchmark 113.3% 2.968 3.363 100.0% 1 1; matrix_table_scan_count_rows_2 112.5% 84.908 95.516 100.0% 1 1; read_force_count_p1000 112.3% 3.286 3.692 100.0% 1 1; union_p1000_p1000 109.8% 6.860 7.531 100.0% 1 1; sentinel_read_gunzip_2 109.4% 16.148 17.659 100.0% 1 1; union_p10_p1000 109.3% 73.727 80.584 100.0% 1 1; write_range_matrix_table_p100 109.2% 5.292 5.777 100.0% 1 1; table_aggregate_counter 109.1% 20.077 21.911 100.0% 3 3; python_only_10k_transform 108.9% 34.839 37.950 100.0% 1 1; sentinel_read_gunzip_3 108.8% 16.276 17.712 100.0% 1 1; split_multi 108.1% 13.139 14.209 100.0% 1 1; sentinel_read_gunzip_1 107.6% 16.038 17.263 100.0% 1 1; join_p10_p100 107.4% 11.960 12.848 100.0% 1 1; table_aggregate_array_sum 107.2% 8.820 9.453 100.0% 1 1; table_foreign_key_join_same_cardinality 107.1% 11.470 12.281 100.0% 3 3; import_and_transform_gvcf 106.9% 88.277 94.371 100.0% 1 1; import_bgen_filter_count 106.8% 156.189 166.814 100.0% 7 7; table_annotate_many_nested_dependence_constants 106.8% 6.125 6.539 100.0% 1 1; king 106.3% 425.661 452.628 100.0% 4 4; union_p1000_p10 105.8% 75.901 80.305 100.0% 1 1; shuffle_order_by_10m_int 105.6% 54.898 57.987 100.0% 2 2; shuffle_key_by_aggregate_good_locality 105.3% 9.548 10.051 100.0% 24 24; table_big_aggregate_compilation 105.1% 69.388 72.944 100.0% 1 1; matrix_multi_write_nothing 104.9% 220.009 230.853 100.0% 1 1; blockmatrix_write_from_entry_expr_range_mt 104.9% 73.578 77.182 100.0% 1 1; write_range_table_p1000 104.7% 26.990 28.267 100.0% 1 1; sentinel_cpu_hash_1 104.7% 26.863 28.127 100.0% 1 1; sample_qc 104.4% 20.570 21.477 100.0% 2 2; import_gvcf_force_count 104.3% 74.809 78.025 100.0% 1 1; table_",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11060#issuecomment-971687705
https://github.com/hail-is/hail/pull/11070#issuecomment-972117676:84,Testability,benchmark,benchmarking,84,"Thanks, definitely easier to read. Will thoroughly check tomorrow. Think it's worth benchmarking?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11070#issuecomment-972117676
https://github.com/hail-is/hail/pull/11070#issuecomment-972121769:95,Performance,perform,performance,95,"Yeah, I guess I should benchmark, since you've observed some strange brittleness in the linreg performance before.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11070#issuecomment-972121769
https://github.com/hail-is/hail/pull/11070#issuecomment-972121769:23,Testability,benchmark,benchmark,23,"Yeah, I guess I should benchmark, since you've observed some strange brittleness in the linreg performance before.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11070#issuecomment-972121769
https://github.com/hail-is/hail/pull/11070#issuecomment-972127901:299,Performance,perform,performance,299,"I think that brittleness is gone now, and was fixed by us doing method; splitting in compiler. But double checking would be great. On Wed, Nov 17, 2021, 5:04 PM Patrick Schultz ***@***.***>; wrote:. > Yeah, I guess I should benchmark, since you've observed some strange; > brittleness in the linreg performance before.; >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub; > <https://github.com/hail-is/hail/pull/11070#issuecomment-972121769>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADJCWES5I5IHLD7O6ECMZIDUMQRFBANCNFSM5IICVNFQ>; > .; >",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11070#issuecomment-972127901
https://github.com/hail-is/hail/pull/11070#issuecomment-972127901:224,Testability,benchmark,benchmark,224,"I think that brittleness is gone now, and was fixed by us doing method; splitting in compiler. But double checking would be great. On Wed, Nov 17, 2021, 5:04 PM Patrick Schultz ***@***.***>; wrote:. > Yeah, I guess I should benchmark, since you've observed some strange; > brittleness in the linreg performance before.; >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub; > <https://github.com/hail-is/hail/pull/11070#issuecomment-972121769>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADJCWES5I5IHLD7O6ECMZIDUMQRFBANCNFSM5IICVNFQ>; > .; >",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11070#issuecomment-972127901
https://github.com/hail-is/hail/pull/11070#issuecomment-973005657:9,Testability,benchmark,benchmarks,9,"Just ran benchmarks locally, and it looks fine. Think there's any need to run on the cloud as well?. I also tried benchmarking without the binds, and that didn't appear to make any difference, so I'm going to get rid of those.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11070#issuecomment-973005657
https://github.com/hail-is/hail/pull/11070#issuecomment-973005657:114,Testability,benchmark,benchmarking,114,"Just ran benchmarks locally, and it looks fine. Think there's any need to run on the cloud as well?. I also tried benchmarking without the binds, and that didn't appear to make any difference, so I'm going to get rid of those.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11070#issuecomment-973005657
https://github.com/hail-is/hail/pull/11070#issuecomment-973300626:167,Performance,perform,performant,167,"I'm closing for now. After more careful benchmarking, this is a slight regression. I think this is the right approach, but we don't have enough facilities for writing performant linear algebra in python/hail yet.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11070#issuecomment-973300626
https://github.com/hail-is/hail/pull/11070#issuecomment-973300626:40,Testability,benchmark,benchmarking,40,"I'm closing for now. After more careful benchmarking, this is a slight regression. I think this is the right approach, but we don't have enough facilities for writing performant linear algebra in python/hail yet.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11070#issuecomment-973300626
https://github.com/hail-is/hail/pull/11071#issuecomment-973003982:273,Deployability,deploy,deployment,273,"Prior to this we add an entry to /etc/hosts so that jobs can contact the batch front end to submit batches. This entry in default is `batch.hail`, and in a dev/pr namespace is `internal.hail`. The batch tests are jobs that run in default but submit test batches to the dev deployment and therefore need an entry for `internal.hail`. This essentially changes it to ""everything knows about internal but only default knows about default. We haven't seen this before because cloud dns in google provides these entries as a fallback, but I never set up in azure because it didn't seem necessary. If this succeeds, we can delete cloud dns in google",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11071#issuecomment-973003982
https://github.com/hail-is/hail/pull/11071#issuecomment-973003982:203,Testability,test,tests,203,"Prior to this we add an entry to /etc/hosts so that jobs can contact the batch front end to submit batches. This entry in default is `batch.hail`, and in a dev/pr namespace is `internal.hail`. The batch tests are jobs that run in default but submit test batches to the dev deployment and therefore need an entry for `internal.hail`. This essentially changes it to ""everything knows about internal but only default knows about default. We haven't seen this before because cloud dns in google provides these entries as a fallback, but I never set up in azure because it didn't seem necessary. If this succeeds, we can delete cloud dns in google",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11071#issuecomment-973003982
https://github.com/hail-is/hail/pull/11071#issuecomment-973003982:249,Testability,test,test,249,"Prior to this we add an entry to /etc/hosts so that jobs can contact the batch front end to submit batches. This entry in default is `batch.hail`, and in a dev/pr namespace is `internal.hail`. The batch tests are jobs that run in default but submit test batches to the dev deployment and therefore need an entry for `internal.hail`. This essentially changes it to ""everything knows about internal but only default knows about default. We haven't seen this before because cloud dns in google provides these entries as a fallback, but I never set up in azure because it didn't seem necessary. If this succeeds, we can delete cloud dns in google",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11071#issuecomment-973003982
https://github.com/hail-is/hail/pull/11072#issuecomment-972380804:141,Availability,avail,available,141,I have a subsequent PR that uses it in build.yaml. Using it in batch is going to take a bit more thinking because we need an image with Hail available.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11072#issuecomment-972380804
https://github.com/hail-is/hail/pull/11072#issuecomment-972974896:32,Integrability,Rout,Router,32,I'll look at this once the Lazy Router goes in (#11063),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11072#issuecomment-972974896
https://github.com/hail-is/hail/pull/11072#issuecomment-975908963:29,Testability,assert,assertion,29,"Great suggestion, I added an assertion and some code to the rmtree test to verify that deleting a subdirectory does not affect the sibling or avuncular directories.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11072#issuecomment-975908963
https://github.com/hail-is/hail/pull/11072#issuecomment-975908963:67,Testability,test,test,67,"Great suggestion, I added an assertion and some code to the rmtree test to verify that deleting a subdirectory does not affect the sibling or avuncular directories.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11072#issuecomment-975908963
https://github.com/hail-is/hail/pull/11078#issuecomment-975610252:161,Availability,error,error,161,"Maybe? We have an assertion in `TextMatrixReader.parseOptionalValue` that the missing values are not empty strings. I didn't trace through why, I just moved the error up.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11078#issuecomment-975610252
https://github.com/hail-is/hail/pull/11078#issuecomment-975610252:18,Testability,assert,assertion,18,"Maybe? We have an assertion in `TextMatrixReader.parseOptionalValue` that the missing values are not empty strings. I didn't trace through why, I just moved the error up.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11078#issuecomment-975610252
https://github.com/hail-is/hail/pull/11078#issuecomment-975612089:21,Testability,test,test,21,"Looks like we have a test where we pass `missing=""""` that used to work, so I'm doing something wrong here or misunderstanding something. Will investigate and get back to you.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11078#issuecomment-975612089
https://github.com/hail-is/hail/pull/11087#issuecomment-982038302:82,Testability,test,tests,82,Just move delete_all_test_billing_projects into some file that isn't also full of tests.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11087#issuecomment-982038302
https://github.com/hail-is/hail/pull/11094#issuecomment-984813805:72,Integrability,message,messages,72,"I'm not sure, but it's the only difference I could find between session messages that worked on the front end and the messages not showing up from the driver. I want to test this explicitly, but my namespace is currently messed up in Azure with previous database changes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11094#issuecomment-984813805
https://github.com/hail-is/hail/pull/11094#issuecomment-984813805:118,Integrability,message,messages,118,"I'm not sure, but it's the only difference I could find between session messages that worked on the front end and the messages not showing up from the driver. I want to test this explicitly, but my namespace is currently messed up in Azure with previous database changes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11094#issuecomment-984813805
https://github.com/hail-is/hail/pull/11094#issuecomment-984813805:169,Testability,test,test,169,"I'm not sure, but it's the only difference I could find between session messages that worked on the front end and the messages not showing up from the driver. I want to test this explicitly, but my namespace is currently messed up in Azure with previous database changes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11094#issuecomment-984813805
https://github.com/hail-is/hail/pull/11098#issuecomment-983797608:26,Availability,error,errors,26,"Man, you got some *weird* errors in this PR. Why is asyncio giving us a `None` for a loop?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11098#issuecomment-983797608
https://github.com/hail-is/hail/pull/11108#issuecomment-984122659:26,Deployability,deploy,deployment,26,Resolves:. > The provided deployment name 'batch-worker-pr-11104-default-fqwcdahrz1nj-highmem-k29sk-deployment' has a length of '67' which exceeds the maximum length of '64'. Please see https://aka.ms/arm-deploy for usage details.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11108#issuecomment-984122659
https://github.com/hail-is/hail/pull/11108#issuecomment-984122659:100,Deployability,deploy,deployment,100,Resolves:. > The provided deployment name 'batch-worker-pr-11104-default-fqwcdahrz1nj-highmem-k29sk-deployment' has a length of '67' which exceeds the maximum length of '64'. Please see https://aka.ms/arm-deploy for usage details.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11108#issuecomment-984122659
https://github.com/hail-is/hail/pull/11108#issuecomment-984122659:205,Deployability,deploy,deploy,205,Resolves:. > The provided deployment name 'batch-worker-pr-11104-default-fqwcdahrz1nj-highmem-k29sk-deployment' has a length of '67' which exceeds the maximum length of '64'. Please see https://aka.ms/arm-deploy for usage details.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11108#issuecomment-984122659
https://github.com/hail-is/hail/pull/11122#issuecomment-985723595:49,Deployability,deploy,deploying,49,"OK, yeah, I need a coherent strategy for someone deploying a fresh Hail install. If folks are not continuously deploying every commit, they might miss a tagged commit. @daniel-goldstein , thoughts on how we might support things that should be run on a tagged commit for users who are not deploying every commit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985723595
https://github.com/hail-is/hail/pull/11122#issuecomment-985723595:72,Deployability,install,install,72,"OK, yeah, I need a coherent strategy for someone deploying a fresh Hail install. If folks are not continuously deploying every commit, they might miss a tagged commit. @daniel-goldstein , thoughts on how we might support things that should be run on a tagged commit for users who are not deploying every commit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985723595
https://github.com/hail-is/hail/pull/11122#issuecomment-985723595:98,Deployability,continuous,continuously,98,"OK, yeah, I need a coherent strategy for someone deploying a fresh Hail install. If folks are not continuously deploying every commit, they might miss a tagged commit. @daniel-goldstein , thoughts on how we might support things that should be run on a tagged commit for users who are not deploying every commit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985723595
https://github.com/hail-is/hail/pull/11122#issuecomment-985723595:111,Deployability,deploy,deploying,111,"OK, yeah, I need a coherent strategy for someone deploying a fresh Hail install. If folks are not continuously deploying every commit, they might miss a tagged commit. @daniel-goldstein , thoughts on how we might support things that should be run on a tagged commit for users who are not deploying every commit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985723595
https://github.com/hail-is/hail/pull/11122#issuecomment-985723595:288,Deployability,deploy,deploying,288,"OK, yeah, I need a coherent strategy for someone deploying a fresh Hail install. If folks are not continuously deploying every commit, they might miss a tagged commit. @daniel-goldstein , thoughts on how we might support things that should be run on a tagged commit for users who are not deploying every commit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985723595
https://github.com/hail-is/hail/pull/11122#issuecomment-985731820:19,Deployability,continuous,continuously,19,"> If folks are not continuously deploying every commit, they might miss a tagged commit. @daniel-goldstein , thoughts on how we might support things that should be run on a tagged commit for users who are not deploying every commit?. I don't have a good plan for this at the moment and have not spent much time thinking about it. I will say though that I expect not deploying on every commit while running CI to be painful given our current build process. Sometimes we make ""backwards compatible"" changes (to CI or build.yaml) through multiple PRs that would not be backward compatible if those commits were squashed. We should definitely have a discussion about it, probably with AUS folks since they might be able to offer insight as to what they're planning with deploys. One thing I don't know is, would another hail install only publish some artifacts when *we* tag a commit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985731820
https://github.com/hail-is/hail/pull/11122#issuecomment-985731820:32,Deployability,deploy,deploying,32,"> If folks are not continuously deploying every commit, they might miss a tagged commit. @daniel-goldstein , thoughts on how we might support things that should be run on a tagged commit for users who are not deploying every commit?. I don't have a good plan for this at the moment and have not spent much time thinking about it. I will say though that I expect not deploying on every commit while running CI to be painful given our current build process. Sometimes we make ""backwards compatible"" changes (to CI or build.yaml) through multiple PRs that would not be backward compatible if those commits were squashed. We should definitely have a discussion about it, probably with AUS folks since they might be able to offer insight as to what they're planning with deploys. One thing I don't know is, would another hail install only publish some artifacts when *we* tag a commit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985731820
https://github.com/hail-is/hail/pull/11122#issuecomment-985731820:209,Deployability,deploy,deploying,209,"> If folks are not continuously deploying every commit, they might miss a tagged commit. @daniel-goldstein , thoughts on how we might support things that should be run on a tagged commit for users who are not deploying every commit?. I don't have a good plan for this at the moment and have not spent much time thinking about it. I will say though that I expect not deploying on every commit while running CI to be painful given our current build process. Sometimes we make ""backwards compatible"" changes (to CI or build.yaml) through multiple PRs that would not be backward compatible if those commits were squashed. We should definitely have a discussion about it, probably with AUS folks since they might be able to offer insight as to what they're planning with deploys. One thing I don't know is, would another hail install only publish some artifacts when *we* tag a commit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985731820
https://github.com/hail-is/hail/pull/11122#issuecomment-985731820:366,Deployability,deploy,deploying,366,"> If folks are not continuously deploying every commit, they might miss a tagged commit. @daniel-goldstein , thoughts on how we might support things that should be run on a tagged commit for users who are not deploying every commit?. I don't have a good plan for this at the moment and have not spent much time thinking about it. I will say though that I expect not deploying on every commit while running CI to be painful given our current build process. Sometimes we make ""backwards compatible"" changes (to CI or build.yaml) through multiple PRs that would not be backward compatible if those commits were squashed. We should definitely have a discussion about it, probably with AUS folks since they might be able to offer insight as to what they're planning with deploys. One thing I don't know is, would another hail install only publish some artifacts when *we* tag a commit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985731820
https://github.com/hail-is/hail/pull/11122#issuecomment-985731820:766,Deployability,deploy,deploys,766,"> If folks are not continuously deploying every commit, they might miss a tagged commit. @daniel-goldstein , thoughts on how we might support things that should be run on a tagged commit for users who are not deploying every commit?. I don't have a good plan for this at the moment and have not spent much time thinking about it. I will say though that I expect not deploying on every commit while running CI to be painful given our current build process. Sometimes we make ""backwards compatible"" changes (to CI or build.yaml) through multiple PRs that would not be backward compatible if those commits were squashed. We should definitely have a discussion about it, probably with AUS folks since they might be able to offer insight as to what they're planning with deploys. One thing I don't know is, would another hail install only publish some artifacts when *we* tag a commit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985731820
https://github.com/hail-is/hail/pull/11122#issuecomment-985731820:821,Deployability,install,install,821,"> If folks are not continuously deploying every commit, they might miss a tagged commit. @daniel-goldstein , thoughts on how we might support things that should be run on a tagged commit for users who are not deploying every commit?. I don't have a good plan for this at the moment and have not spent much time thinking about it. I will say though that I expect not deploying on every commit while running CI to be painful given our current build process. Sometimes we make ""backwards compatible"" changes (to CI or build.yaml) through multiple PRs that would not be backward compatible if those commits were squashed. We should definitely have a discussion about it, probably with AUS folks since they might be able to offer insight as to what they're planning with deploys. One thing I don't know is, would another hail install only publish some artifacts when *we* tag a commit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985731820
https://github.com/hail-is/hail/pull/11122#issuecomment-985734117:19,Deployability,continuous,continuously,19,"> If folks are not continuously deploying every commit, they might miss a tagged commit. Do you mean someone watching `hail-is/hail:main` but only deploying occasionally? I feel like we need to separate out publish steps entirely from our CD steps, track our most recently published tag/sha, and spin off publish batches when the tag is no longer the most recent on GitHub (this could be checked as frequently as they deploy).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985734117
https://github.com/hail-is/hail/pull/11122#issuecomment-985734117:32,Deployability,deploy,deploying,32,"> If folks are not continuously deploying every commit, they might miss a tagged commit. Do you mean someone watching `hail-is/hail:main` but only deploying occasionally? I feel like we need to separate out publish steps entirely from our CD steps, track our most recently published tag/sha, and spin off publish batches when the tag is no longer the most recent on GitHub (this could be checked as frequently as they deploy).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985734117
https://github.com/hail-is/hail/pull/11122#issuecomment-985734117:147,Deployability,deploy,deploying,147,"> If folks are not continuously deploying every commit, they might miss a tagged commit. Do you mean someone watching `hail-is/hail:main` but only deploying occasionally? I feel like we need to separate out publish steps entirely from our CD steps, track our most recently published tag/sha, and spin off publish batches when the tag is no longer the most recent on GitHub (this could be checked as frequently as they deploy).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985734117
https://github.com/hail-is/hail/pull/11122#issuecomment-985734117:418,Deployability,deploy,deploy,418,"> If folks are not continuously deploying every commit, they might miss a tagged commit. Do you mean someone watching `hail-is/hail:main` but only deploying occasionally? I feel like we need to separate out publish steps entirely from our CD steps, track our most recently published tag/sha, and spin off publish batches when the tag is no longer the most recent on GitHub (this could be checked as frequently as they deploy).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985734117
https://github.com/hail-is/hail/pull/11122#issuecomment-985734503:79,Deployability,DEPLOY,DEPLOY,79,This all would be a lot easier to reason about if at the top of CI it showed a DEPLOY batch and a PUBLISH batch. This could all be tracked fairly easily in the CI database/bucket.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985734503
https://github.com/hail-is/hail/pull/11122#issuecomment-985736047:60,Deployability,deploy,deploying,60,"> Do you mean someone watching `hail-is/hail:main` but only deploying occasionally? I feel like we need to separate out publish steps entirely from our CD steps, track our most recently published tag/sha, and spin off publish batches when the tag is no longer the most recent on GitHub. Yeah this is what I had in mind. Agreed, a separate publish vs deploy flow could help. Though, it doesn't address the backwards compatibility issue you mentioned. Ideally we could get all of this right rather than just fixing part of the problem.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985736047
https://github.com/hail-is/hail/pull/11122#issuecomment-985736047:350,Deployability,deploy,deploy,350,"> Do you mean someone watching `hail-is/hail:main` but only deploying occasionally? I feel like we need to separate out publish steps entirely from our CD steps, track our most recently published tag/sha, and spin off publish batches when the tag is no longer the most recent on GitHub. Yeah this is what I had in mind. Agreed, a separate publish vs deploy flow could help. Though, it doesn't address the backwards compatibility issue you mentioned. Ideally we could get all of this right rather than just fixing part of the problem.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985736047
https://github.com/hail-is/hail/pull/11122#issuecomment-985759470:140,Deployability,deploy,deploys,140,"I'll think about this more, but making the CI version explicit rather than implicit would at least provide a clear progression of necessary deploys. We'd want to tag the CI versions in git so that folks know which commits are necessary to achieve the step-wise transition. Let's find some time to chat next next week.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985759470
https://github.com/hail-is/hail/pull/11122#issuecomment-985759470:109,Usability,clear,clear,109,"I'll think about this more, but making the CI version explicit rather than implicit would at least provide a clear progression of necessary deploys. We'd want to tag the CI versions in git so that folks know which commits are necessary to achieve the step-wise transition. Let's find some time to chat next next week.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11122#issuecomment-985759470
https://github.com/hail-is/hail/pull/11123#issuecomment-990100370:91,Energy Efficiency,charge,charges,91,Bump. This needs to go into production before we do massive scale tests since Standard_SSD charges per IO operation.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11123#issuecomment-990100370
https://github.com/hail-is/hail/pull/11123#issuecomment-990100370:66,Testability,test,tests,66,Bump. This needs to go into production before we do massive scale tests since Standard_SSD charges per IO operation.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11123#issuecomment-990100370
https://github.com/hail-is/hail/pull/11123#issuecomment-994254165:28,Testability,test,tests,28,"See question, but otherwise tests are passing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11123#issuecomment-994254165
https://github.com/hail-is/hail/pull/11142#issuecomment-989995524:29,Testability,test,tests,29,This PR causes all the batch tests to pass!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11142#issuecomment-989995524
https://github.com/hail-is/hail/pull/11144#issuecomment-990016240:36,Testability,test,tests,36,I'll verify in a namespace once the tests verify that this isn't completely insane.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990016240
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:581,Availability,avail,availabilitySet,581,"Actually I just went ahead and looked at this PR to make sure highcpus were indeed highcpus. They are!; <img width=""1476"" alt=""Screen Shot 2021-12-09 at 11 56 56 AM"" src=""https://user-images.githubusercontent.com/106194/145441305-fec38573-9c66-4a95-9fb7-0e6dc3a7c2e9.png"">. I also grabbed all the VM details and all the things that should be different (vm name, Nic name, etc.) are different. The userData is myseriously null, but its null for every VM in Azure currently (other PRs, namespaces, and default). ```; {; ""additionalCapabilities"": null,; ""applicationProfile"": null,; ""availabilitySet"": null,; ""billingProfile"": {; ""maxPrice"": -1.0; },; ""capacityReservation"": null,; ""diagnosticsProfile"": null,; ""evictionPolicy"": ""Delete"",; ""extendedLocation"": null,; ""extensionsTimeBudget"": null,; ""hardwareProfile"": {; ""vmSize"": ""Standard_F16s_v2"",; ""vmSizeProperties"": null; },; ""host"": null,; ""hostGroup"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/virtualMachines/batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5"",; ""identity"": {; ""principalId"": null,; ""tenantId"": null,; ""type"": ""UserAssigned"",; ""userAssignedIdentities"": {; ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.ManagedIdentity/userAssignedIdentities/batch-worker"": {; ""clientId"": ""890af904-42f1-4136-810a-c52f4e132c6b"",; ""principalId"": ""b952a3bb-1091-4f11-803b-9d5199219a27""; }; }; },; ""instanceView"": null,; ""licenseType"": null,; ""location"": ""eastus"",; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5"",; ""networkProfile"": {; ""networkApiVersion"": null,; ""networkInterfaceConfigurations"": null,; ""networkInterfaces"": [; {; ""deleteOption"": ""Delete"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Network/networkInterfaces/batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5-nic"",; ""primary"": null,; ""resourceGroup"": ""dgoldste""",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:5577,Availability,avail,availabilitySet,5577,"""offer"": null,; ""publisher"": null,; ""resourceGroup"": ""dgoldste"",; ""sharedGalleryImageId"": null,; ""sku"": null,; ""version"": null; },; ""osDisk"": {; ""caching"": ""ReadOnly"",; ""createOption"": ""FromImage"",; ""deleteOption"": ""Delete"",; ""diffDiskSettings"": null,; ""diskSizeGb"": 30,; ""encryptionSettings"": null,; ""image"": null,; ""managedDisk"": {; ""diskEncryptionSet"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/disks/batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5-os"",; ""resourceGroup"": ""dgoldste"",; ""storageAccountType"": ""Standard_LRS""; },; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5-os"",; ""osType"": ""Linux"",; ""vhd"": null,; ""writeAcceleratorEnabled"": null; }; },; ""tags"": {; ""batch-worker"": ""1"",; ""namespace"": ""pr-11144-default-nbthv8fduvd6""; },; ""type"": ""Microsoft.Compute/virtualMachines"",; ""userData"": null,; ""virtualMachineScaleSet"": null,; ""vmId"": ""4eaaa3a5-69ce-4eb0-ba8c-266bd66c821e"",; ""zones"": null; },; {; ""additionalCapabilities"": null,; ""applicationProfile"": null,; ""availabilitySet"": null,; ""billingProfile"": {; ""maxPrice"": -1.0; },; ""capacityReservation"": null,; ""diagnosticsProfile"": null,; ""evictionPolicy"": ""Delete"",; ""extendedLocation"": null,; ""extensionsTimeBudget"": null,; ""hardwareProfile"": {; ""vmSize"": ""Standard_E4d_v4"",; ""vmSizeProperties"": null; },; ""host"": null,; ""hostGroup"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/virtualMachines/batch-worker-pr-11144-default-nbthv8fduvd6-highmem-13t6m"",; ""identity"": {; ""principalId"": null,; ""tenantId"": null,; ""type"": ""UserAssigned"",; ""userAssignedIdentities"": {; ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.ManagedIdentity/userAssignedIdentities/batch-worker"": {; ""clientId"": ""890af904-42f1-4136-810a-c52f4e132c6b"",; ""principalId"": ""b952a3bb-1091-4f11-803b-9d5199219a27""; }; }; },; ""instanceView"": null,; """,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:9920,Availability,avail,availabilitySet,9920,"""offer"": null,; ""publisher"": null,; ""resourceGroup"": ""dgoldste"",; ""sharedGalleryImageId"": null,; ""sku"": null,; ""version"": null; },; ""osDisk"": {; ""caching"": ""ReadOnly"",; ""createOption"": ""FromImage"",; ""deleteOption"": ""Delete"",; ""diffDiskSettings"": null,; ""diskSizeGb"": 30,; ""encryptionSettings"": null,; ""image"": null,; ""managedDisk"": {; ""diskEncryptionSet"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/disks/batch-worker-pr-11144-default-nbthv8fduvd6-highmem-13t6m-os"",; ""resourceGroup"": ""dgoldste"",; ""storageAccountType"": ""Standard_LRS""; },; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highmem-13t6m-os"",; ""osType"": ""Linux"",; ""vhd"": null,; ""writeAcceleratorEnabled"": null; }; },; ""tags"": {; ""batch-worker"": ""1"",; ""namespace"": ""pr-11144-default-nbthv8fduvd6""; },; ""type"": ""Microsoft.Compute/virtualMachines"",; ""userData"": null,; ""virtualMachineScaleSet"": null,; ""vmId"": ""2612958c-ef4e-4678-8482-29726290ae20"",; ""zones"": null; },; {; ""additionalCapabilities"": null,; ""applicationProfile"": null,; ""availabilitySet"": null,; ""billingProfile"": {; ""maxPrice"": -1.0; },; ""capacityReservation"": null,; ""diagnosticsProfile"": null,; ""evictionPolicy"": ""Delete"",; ""extendedLocation"": null,; ""extensionsTimeBudget"": null,; ""hardwareProfile"": {; ""vmSize"": ""Standard_D16d_v4"",; ""vmSizeProperties"": null; },; ""host"": null,; ""hostGroup"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/virtualMachines/batch-worker-pr-11144-default-nbthv8fduvd6-standard-i4sun"",; ""identity"": {; ""principalId"": null,; ""tenantId"": null,; ""type"": ""UserAssigned"",; ""userAssignedIdentities"": {; ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.ManagedIdentity/userAssignedIdentities/batch-worker"": {; ""clientId"": ""890af904-42f1-4136-810a-c52f4e132c6b"",; ""principalId"": ""b952a3bb-1091-4f11-803b-9d5199219a27""; }; }; },; ""instanceView"": null,;",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:2286,Deployability,patch,patchSettings,2286,"tus"",; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5"",; ""networkProfile"": {; ""networkApiVersion"": null,; ""networkInterfaceConfigurations"": null,; ""networkInterfaces"": [; {; ""deleteOption"": ""Delete"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Network/networkInterfaces/batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5-nic"",; ""primary"": null,; ""resourceGroup"": ""dgoldste""; }; ]; },; ""osProfile"": {; ""adminPassword"": null,; ""adminUsername"": ""batch-worker"",; ""allowExtensionOperations"": true,; ""computerName"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5"",; ""customData"": null,; ""linuxConfiguration"": {; ""disablePasswordAuthentication"": true,; ""patchSettings"": {; ""assessmentMode"": ""ImageDefault"",; ""patchMode"": ""ImageDefault""; },; ""provisionVmAgent"": true,; ""ssh"": {; ""publicKeys"": [; {; ""keyData"": ""ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDKC9kZBCsWb78yJ1zcdhmrYEmjNEOaJN5RGuMBuoszUXGGOCJMFi6jMTgSVjTql90NchA0tWXAuooVLV++f8WIOwpP7TY1YzN1XCREyk8jKOMrIdCc22ueJlNvxmFfJhdDKBCy0eThWN2qFxQJ4p9SvzGlMd2r3nBy95v9f8WgkN8M/HTDwTsFafNT0arvHnmUY6rFHxQE9TgTRlH1/sZ7mMxzmVZ8NKI/wIXTkv53TbylBYbvkEXyVFl3OBj1MUvo17v99LGdQNFcAiWR/pRsDvXY415FzootwShgQpmvuPLP7buTqVcrRnwRr2hZcpaydOyEaErYsuEPiot0RPrvsIXSkSI4NlIbqO2i4gjfF8FwpDzyY0WtAvUbsY8dKxWXzcIWtQzUyYeqJq1R0Yh8p3ijmLgrkpAJTI/Lz8WT2foUFg7gYQwc9xbFN6aQzQwUQ0Y8s0DDvQqnbby12IXXHI+rjuh1TH8lIRPw/UsFInJn3WS1MBp4FRiXwRs9EwVhfeb+b8Z5rnaQ3RrmM8SY0kjg0i05rkMkygEnPuSec6qKYREHW8n4wbYQNhJvDW9RhUIGnzn3IQRJB57bOZ8xwPkZ97PM0WGsCMWwupSOuEk/NsFe69cZwbElYZJeqeA/bKKsmRsJ/tjzyYMLUlj4L++4GQIwPHgtjmQ9kUEeaw== dgoldste@wmce3-cb7\n"",; ""path"": ""/home/batch-worker/.ssh/authorized_keys""; }; ]; }; },; ""requireGuestProvisionSignal"": true,; ""secrets"": [],; ""windowsConfiguration"": null; },; ""plan"": null,; ""platformFaultDomain"": null,; ""priority"": ""Spot"",; ""provisioningState"": ""Succeeded"",; ""proximityPlacementGroup"": null,; ""resourceGroup"": ""dgoldste"",; ""resources"": null,; ""scheduledEvent",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:2341,Deployability,patch,patchMode,2341,"tus"",; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5"",; ""networkProfile"": {; ""networkApiVersion"": null,; ""networkInterfaceConfigurations"": null,; ""networkInterfaces"": [; {; ""deleteOption"": ""Delete"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Network/networkInterfaces/batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5-nic"",; ""primary"": null,; ""resourceGroup"": ""dgoldste""; }; ]; },; ""osProfile"": {; ""adminPassword"": null,; ""adminUsername"": ""batch-worker"",; ""allowExtensionOperations"": true,; ""computerName"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5"",; ""customData"": null,; ""linuxConfiguration"": {; ""disablePasswordAuthentication"": true,; ""patchSettings"": {; ""assessmentMode"": ""ImageDefault"",; ""patchMode"": ""ImageDefault""; },; ""provisionVmAgent"": true,; ""ssh"": {; ""publicKeys"": [; {; ""keyData"": ""ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDKC9kZBCsWb78yJ1zcdhmrYEmjNEOaJN5RGuMBuoszUXGGOCJMFi6jMTgSVjTql90NchA0tWXAuooVLV++f8WIOwpP7TY1YzN1XCREyk8jKOMrIdCc22ueJlNvxmFfJhdDKBCy0eThWN2qFxQJ4p9SvzGlMd2r3nBy95v9f8WgkN8M/HTDwTsFafNT0arvHnmUY6rFHxQE9TgTRlH1/sZ7mMxzmVZ8NKI/wIXTkv53TbylBYbvkEXyVFl3OBj1MUvo17v99LGdQNFcAiWR/pRsDvXY415FzootwShgQpmvuPLP7buTqVcrRnwRr2hZcpaydOyEaErYsuEPiot0RPrvsIXSkSI4NlIbqO2i4gjfF8FwpDzyY0WtAvUbsY8dKxWXzcIWtQzUyYeqJq1R0Yh8p3ijmLgrkpAJTI/Lz8WT2foUFg7gYQwc9xbFN6aQzQwUQ0Y8s0DDvQqnbby12IXXHI+rjuh1TH8lIRPw/UsFInJn3WS1MBp4FRiXwRs9EwVhfeb+b8Z5rnaQ3RrmM8SY0kjg0i05rkMkygEnPuSec6qKYREHW8n4wbYQNhJvDW9RhUIGnzn3IQRJB57bOZ8xwPkZ97PM0WGsCMWwupSOuEk/NsFe69cZwbElYZJeqeA/bKKsmRsJ/tjzyYMLUlj4L++4GQIwPHgtjmQ9kUEeaw== dgoldste@wmce3-cb7\n"",; ""path"": ""/home/batch-worker/.ssh/authorized_keys""; }; ]; }; },; ""requireGuestProvisionSignal"": true,; ""secrets"": [],; ""windowsConfiguration"": null; },; ""plan"": null,; ""platformFaultDomain"": null,; ""priority"": ""Spot"",; ""provisioningState"": ""Succeeded"",; ""proximityPlacementGroup"": null,; ""resourceGroup"": ""dgoldste"",; ""resources"": null,; ""scheduledEvent",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:7281,Deployability,patch,patchSettings,7281,"tus"",; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highmem-13t6m"",; ""networkProfile"": {; ""networkApiVersion"": null,; ""networkInterfaceConfigurations"": null,; ""networkInterfaces"": [; {; ""deleteOption"": ""Delete"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Network/networkInterfaces/batch-worker-pr-11144-default-nbthv8fduvd6-highmem-13t6m-nic"",; ""primary"": null,; ""resourceGroup"": ""dgoldste""; }; ]; },; ""osProfile"": {; ""adminPassword"": null,; ""adminUsername"": ""batch-worker"",; ""allowExtensionOperations"": true,; ""computerName"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highmem-13t6m"",; ""customData"": null,; ""linuxConfiguration"": {; ""disablePasswordAuthentication"": true,; ""patchSettings"": {; ""assessmentMode"": ""ImageDefault"",; ""patchMode"": ""ImageDefault""; },; ""provisionVmAgent"": true,; ""ssh"": {; ""publicKeys"": [; {; ""keyData"": ""ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDKC9kZBCsWb78yJ1zcdhmrYEmjNEOaJN5RGuMBuoszUXGGOCJMFi6jMTgSVjTql90NchA0tWXAuooVLV++f8WIOwpP7TY1YzN1XCREyk8jKOMrIdCc22ueJlNvxmFfJhdDKBCy0eThWN2qFxQJ4p9SvzGlMd2r3nBy95v9f8WgkN8M/HTDwTsFafNT0arvHnmUY6rFHxQE9TgTRlH1/sZ7mMxzmVZ8NKI/wIXTkv53TbylBYbvkEXyVFl3OBj1MUvo17v99LGdQNFcAiWR/pRsDvXY415FzootwShgQpmvuPLP7buTqVcrRnwRr2hZcpaydOyEaErYsuEPiot0RPrvsIXSkSI4NlIbqO2i4gjfF8FwpDzyY0WtAvUbsY8dKxWXzcIWtQzUyYeqJq1R0Yh8p3ijmLgrkpAJTI/Lz8WT2foUFg7gYQwc9xbFN6aQzQwUQ0Y8s0DDvQqnbby12IXXHI+rjuh1TH8lIRPw/UsFInJn3WS1MBp4FRiXwRs9EwVhfeb+b8Z5rnaQ3RrmM8SY0kjg0i05rkMkygEnPuSec6qKYREHW8n4wbYQNhJvDW9RhUIGnzn3IQRJB57bOZ8xwPkZ97PM0WGsCMWwupSOuEk/NsFe69cZwbElYZJeqeA/bKKsmRsJ/tjzyYMLUlj4L++4GQIwPHgtjmQ9kUEeaw== dgoldste@wmce3-cb7\n"",; ""path"": ""/home/batch-worker/.ssh/authorized_keys""; }; ]; }; },; ""requireGuestProvisionSignal"": true,; ""secrets"": [],; ""windowsConfiguration"": null; },; ""plan"": null,; ""platformFaultDomain"": null,; ""priority"": ""Spot"",; ""provisioningState"": ""Succeeded"",; ""proximityPlacementGroup"": null,; ""resourceGroup"": ""dgoldste"",; ""resources"": null,; ""scheduledEvent",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:7336,Deployability,patch,patchMode,7336,"tus"",; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highmem-13t6m"",; ""networkProfile"": {; ""networkApiVersion"": null,; ""networkInterfaceConfigurations"": null,; ""networkInterfaces"": [; {; ""deleteOption"": ""Delete"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Network/networkInterfaces/batch-worker-pr-11144-default-nbthv8fduvd6-highmem-13t6m-nic"",; ""primary"": null,; ""resourceGroup"": ""dgoldste""; }; ]; },; ""osProfile"": {; ""adminPassword"": null,; ""adminUsername"": ""batch-worker"",; ""allowExtensionOperations"": true,; ""computerName"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highmem-13t6m"",; ""customData"": null,; ""linuxConfiguration"": {; ""disablePasswordAuthentication"": true,; ""patchSettings"": {; ""assessmentMode"": ""ImageDefault"",; ""patchMode"": ""ImageDefault""; },; ""provisionVmAgent"": true,; ""ssh"": {; ""publicKeys"": [; {; ""keyData"": ""ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDKC9kZBCsWb78yJ1zcdhmrYEmjNEOaJN5RGuMBuoszUXGGOCJMFi6jMTgSVjTql90NchA0tWXAuooVLV++f8WIOwpP7TY1YzN1XCREyk8jKOMrIdCc22ueJlNvxmFfJhdDKBCy0eThWN2qFxQJ4p9SvzGlMd2r3nBy95v9f8WgkN8M/HTDwTsFafNT0arvHnmUY6rFHxQE9TgTRlH1/sZ7mMxzmVZ8NKI/wIXTkv53TbylBYbvkEXyVFl3OBj1MUvo17v99LGdQNFcAiWR/pRsDvXY415FzootwShgQpmvuPLP7buTqVcrRnwRr2hZcpaydOyEaErYsuEPiot0RPrvsIXSkSI4NlIbqO2i4gjfF8FwpDzyY0WtAvUbsY8dKxWXzcIWtQzUyYeqJq1R0Yh8p3ijmLgrkpAJTI/Lz8WT2foUFg7gYQwc9xbFN6aQzQwUQ0Y8s0DDvQqnbby12IXXHI+rjuh1TH8lIRPw/UsFInJn3WS1MBp4FRiXwRs9EwVhfeb+b8Z5rnaQ3RrmM8SY0kjg0i05rkMkygEnPuSec6qKYREHW8n4wbYQNhJvDW9RhUIGnzn3IQRJB57bOZ8xwPkZ97PM0WGsCMWwupSOuEk/NsFe69cZwbElYZJeqeA/bKKsmRsJ/tjzyYMLUlj4L++4GQIwPHgtjmQ9kUEeaw== dgoldste@wmce3-cb7\n"",; ""path"": ""/home/batch-worker/.ssh/authorized_keys""; }; ]; }; },; ""requireGuestProvisionSignal"": true,; ""secrets"": [],; ""windowsConfiguration"": null; },; ""plan"": null,; ""platformFaultDomain"": null,; ""priority"": ""Spot"",; ""provisioningState"": ""Succeeded"",; ""proximityPlacementGroup"": null,; ""resourceGroup"": ""dgoldste"",; ""resources"": null,; ""scheduledEvent",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:11629,Deployability,patch,patchSettings,11629,"s"",; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-standard-i4sun"",; ""networkProfile"": {; ""networkApiVersion"": null,; ""networkInterfaceConfigurations"": null,; ""networkInterfaces"": [; {; ""deleteOption"": ""Delete"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Network/networkInterfaces/batch-worker-pr-11144-default-nbthv8fduvd6-standard-i4sun-nic"",; ""primary"": null,; ""resourceGroup"": ""dgoldste""; }; ]; },; ""osProfile"": {; ""adminPassword"": null,; ""adminUsername"": ""batch-worker"",; ""allowExtensionOperations"": true,; ""computerName"": ""batch-worker-pr-11144-default-nbthv8fduvd6-standard-i4sun"",; ""customData"": null,; ""linuxConfiguration"": {; ""disablePasswordAuthentication"": true,; ""patchSettings"": {; ""assessmentMode"": ""ImageDefault"",; ""patchMode"": ""ImageDefault""; },; ""provisionVmAgent"": true,; ""ssh"": {; ""publicKeys"": [; {; ""keyData"": ""ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDKC9kZBCsWb78yJ1zcdhmrYEmjNEOaJN5RGuMBuoszUXGGOCJMFi6jMTgSVjTql90NchA0tWXAuooVLV++f8WIOwpP7TY1YzN1XCREyk8jKOMrIdCc22ueJlNvxmFfJhdDKBCy0eThWN2qFxQJ4p9SvzGlMd2r3nBy95v9f8WgkN8M/HTDwTsFafNT0arvHnmUY6rFHxQE9TgTRlH1/sZ7mMxzmVZ8NKI/wIXTkv53TbylBYbvkEXyVFl3OBj1MUvo17v99LGdQNFcAiWR/pRsDvXY415FzootwShgQpmvuPLP7buTqVcrRnwRr2hZcpaydOyEaErYsuEPiot0RPrvsIXSkSI4NlIbqO2i4gjfF8FwpDzyY0WtAvUbsY8dKxWXzcIWtQzUyYeqJq1R0Yh8p3ijmLgrkpAJTI/Lz8WT2foUFg7gYQwc9xbFN6aQzQwUQ0Y8s0DDvQqnbby12IXXHI+rjuh1TH8lIRPw/UsFInJn3WS1MBp4FRiXwRs9EwVhfeb+b8Z5rnaQ3RrmM8SY0kjg0i05rkMkygEnPuSec6qKYREHW8n4wbYQNhJvDW9RhUIGnzn3IQRJB57bOZ8xwPkZ97PM0WGsCMWwupSOuEk/NsFe69cZwbElYZJeqeA/bKKsmRsJ/tjzyYMLUlj4L++4GQIwPHgtjmQ9kUEeaw== dgoldste@wmce3-cb7\n"",; ""path"": ""/home/batch-worker/.ssh/authorized_keys""; }; ]; }; },; ""requireGuestProvisionSignal"": true,; ""secrets"": [],; ""windowsConfiguration"": null; },; ""plan"": null,; ""platformFaultDomain"": null,; ""priority"": ""Spot"",; ""provisioningState"": ""Succeeded"",; ""proximityPlacementGroup"": null,; ""resourceGroup"": ""dgoldste"",; ""resources"": null,; ""scheduledEven",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:11684,Deployability,patch,patchMode,11684,"s"",; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-standard-i4sun"",; ""networkProfile"": {; ""networkApiVersion"": null,; ""networkInterfaceConfigurations"": null,; ""networkInterfaces"": [; {; ""deleteOption"": ""Delete"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Network/networkInterfaces/batch-worker-pr-11144-default-nbthv8fduvd6-standard-i4sun-nic"",; ""primary"": null,; ""resourceGroup"": ""dgoldste""; }; ]; },; ""osProfile"": {; ""adminPassword"": null,; ""adminUsername"": ""batch-worker"",; ""allowExtensionOperations"": true,; ""computerName"": ""batch-worker-pr-11144-default-nbthv8fduvd6-standard-i4sun"",; ""customData"": null,; ""linuxConfiguration"": {; ""disablePasswordAuthentication"": true,; ""patchSettings"": {; ""assessmentMode"": ""ImageDefault"",; ""patchMode"": ""ImageDefault""; },; ""provisionVmAgent"": true,; ""ssh"": {; ""publicKeys"": [; {; ""keyData"": ""ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDKC9kZBCsWb78yJ1zcdhmrYEmjNEOaJN5RGuMBuoszUXGGOCJMFi6jMTgSVjTql90NchA0tWXAuooVLV++f8WIOwpP7TY1YzN1XCREyk8jKOMrIdCc22ueJlNvxmFfJhdDKBCy0eThWN2qFxQJ4p9SvzGlMd2r3nBy95v9f8WgkN8M/HTDwTsFafNT0arvHnmUY6rFHxQE9TgTRlH1/sZ7mMxzmVZ8NKI/wIXTkv53TbylBYbvkEXyVFl3OBj1MUvo17v99LGdQNFcAiWR/pRsDvXY415FzootwShgQpmvuPLP7buTqVcrRnwRr2hZcpaydOyEaErYsuEPiot0RPrvsIXSkSI4NlIbqO2i4gjfF8FwpDzyY0WtAvUbsY8dKxWXzcIWtQzUyYeqJq1R0Yh8p3ijmLgrkpAJTI/Lz8WT2foUFg7gYQwc9xbFN6aQzQwUQ0Y8s0DDvQqnbby12IXXHI+rjuh1TH8lIRPw/UsFInJn3WS1MBp4FRiXwRs9EwVhfeb+b8Z5rnaQ3RrmM8SY0kjg0i05rkMkygEnPuSec6qKYREHW8n4wbYQNhJvDW9RhUIGnzn3IQRJB57bOZ8xwPkZ97PM0WGsCMWwupSOuEk/NsFe69cZwbElYZJeqeA/bKKsmRsJ/tjzyYMLUlj4L++4GQIwPHgtjmQ9kUEeaw== dgoldste@wmce3-cb7\n"",; ""path"": ""/home/batch-worker/.ssh/authorized_keys""; }; ]; }; },; ""requireGuestProvisionSignal"": true,; ""secrets"": [],; ""windowsConfiguration"": null; },; ""plan"": null,; ""platformFaultDomain"": null,; ""priority"": ""Spot"",; ""provisioningState"": ""Succeeded"",; ""proximityPlacementGroup"": null,; ""resourceGroup"": ""dgoldste"",; ""resources"": null,; ""scheduledEven",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:3529,Energy Efficiency,schedul,scheduledEventsProfile,3529,"eJlNvxmFfJhdDKBCy0eThWN2qFxQJ4p9SvzGlMd2r3nBy95v9f8WgkN8M/HTDwTsFafNT0arvHnmUY6rFHxQE9TgTRlH1/sZ7mMxzmVZ8NKI/wIXTkv53TbylBYbvkEXyVFl3OBj1MUvo17v99LGdQNFcAiWR/pRsDvXY415FzootwShgQpmvuPLP7buTqVcrRnwRr2hZcpaydOyEaErYsuEPiot0RPrvsIXSkSI4NlIbqO2i4gjfF8FwpDzyY0WtAvUbsY8dKxWXzcIWtQzUyYeqJq1R0Yh8p3ijmLgrkpAJTI/Lz8WT2foUFg7gYQwc9xbFN6aQzQwUQ0Y8s0DDvQqnbby12IXXHI+rjuh1TH8lIRPw/UsFInJn3WS1MBp4FRiXwRs9EwVhfeb+b8Z5rnaQ3RrmM8SY0kjg0i05rkMkygEnPuSec6qKYREHW8n4wbYQNhJvDW9RhUIGnzn3IQRJB57bOZ8xwPkZ97PM0WGsCMWwupSOuEk/NsFe69cZwbElYZJeqeA/bKKsmRsJ/tjzyYMLUlj4L++4GQIwPHgtjmQ9kUEeaw== dgoldste@wmce3-cb7\n"",; ""path"": ""/home/batch-worker/.ssh/authorized_keys""; }; ]; }; },; ""requireGuestProvisionSignal"": true,; ""secrets"": [],; ""windowsConfiguration"": null; },; ""plan"": null,; ""platformFaultDomain"": null,; ""priority"": ""Spot"",; ""provisioningState"": ""Succeeded"",; ""proximityPlacementGroup"": null,; ""resourceGroup"": ""dgoldste"",; ""resources"": null,; ""scheduledEventsProfile"": null,; ""securityProfile"": null,; ""storageProfile"": {; ""dataDisks"": [; {; ""caching"": ""None"",; ""createOption"": ""Empty"",; ""deleteOption"": ""Delete"",; ""detachOption"": null,; ""diskIopsReadWrite"": null,; ""diskMBpsReadWrite"": null,; ""diskSizeGb"": 375,; ""image"": null,; ""lun"": 2,; ""managedDisk"": {; ""diskEncryptionSet"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/disks/batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5-data"",; ""resourceGroup"": ""dgoldste"",; ""storageAccountType"": ""Standard_LRS""; },; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5-data"",; ""toBeDetached"": false,; ""vhd"": null,; ""writeAcceleratorEnabled"": null; }; ],; ""imageReference"": {; ""exactVersion"": ""0.0.12"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/galleries/dgoldste_batch/images/batch-worker/versions/0.0.12"",; ""offer"": null,; ""publisher"": null,; ""resourceGroup"": ""dgoldste"",; ""sharedGalleryImageId"": null,; ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:8524,Energy Efficiency,schedul,scheduledEventsProfile,8524,"sh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDKC9kZBCsWb78yJ1zcdhmrYEmjNEOaJN5RGuMBuoszUXGGOCJMFi6jMTgSVjTql90NchA0tWXAuooVLV++f8WIOwpP7TY1YzN1XCREyk8jKOMrIdCc22ueJlNvxmFfJhdDKBCy0eThWN2qFxQJ4p9SvzGlMd2r3nBy95v9f8WgkN8M/HTDwTsFafNT0arvHnmUY6rFHxQE9TgTRlH1/sZ7mMxzmVZ8NKI/wIXTkv53TbylBYbvkEXyVFl3OBj1MUvo17v99LGdQNFcAiWR/pRsDvXY415FzootwShgQpmvuPLP7buTqVcrRnwRr2hZcpaydOyEaErYsuEPiot0RPrvsIXSkSI4NlIbqO2i4gjfF8FwpDzyY0WtAvUbsY8dKxWXzcIWtQzUyYeqJq1R0Yh8p3ijmLgrkpAJTI/Lz8WT2foUFg7gYQwc9xbFN6aQzQwUQ0Y8s0DDvQqnbby12IXXHI+rjuh1TH8lIRPw/UsFInJn3WS1MBp4FRiXwRs9EwVhfeb+b8Z5rnaQ3RrmM8SY0kjg0i05rkMkygEnPuSec6qKYREHW8n4wbYQNhJvDW9RhUIGnzn3IQRJB57bOZ8xwPkZ97PM0WGsCMWwupSOuEk/NsFe69cZwbElYZJeqeA/bKKsmRsJ/tjzyYMLUlj4L++4GQIwPHgtjmQ9kUEeaw== dgoldste@wmce3-cb7\n"",; ""path"": ""/home/batch-worker/.ssh/authorized_keys""; }; ]; }; },; ""requireGuestProvisionSignal"": true,; ""secrets"": [],; ""windowsConfiguration"": null; },; ""plan"": null,; ""platformFaultDomain"": null,; ""priority"": ""Spot"",; ""provisioningState"": ""Succeeded"",; ""proximityPlacementGroup"": null,; ""resourceGroup"": ""dgoldste"",; ""resources"": null,; ""scheduledEventsProfile"": null,; ""securityProfile"": null,; ""storageProfile"": {; ""dataDisks"": [],; ""imageReference"": {; ""exactVersion"": ""0.0.12"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/galleries/dgoldste_batch/images/batch-worker/versions/0.0.12"",; ""offer"": null,; ""publisher"": null,; ""resourceGroup"": ""dgoldste"",; ""sharedGalleryImageId"": null,; ""sku"": null,; ""version"": null; },; ""osDisk"": {; ""caching"": ""ReadOnly"",; ""createOption"": ""FromImage"",; ""deleteOption"": ""Delete"",; ""diffDiskSettings"": null,; ""diskSizeGb"": 30,; ""encryptionSettings"": null,; ""image"": null,; ""managedDisk"": {; ""diskEncryptionSet"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/disks/batch-worker-pr-11144-default-nbthv8fduvd6-highmem-13t6m-os"",; ""resourceGroup"": ""dgoldste"",; ""storageAccountType"":",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:12872,Energy Efficiency,schedul,scheduledEventsProfile,12872,"sh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDKC9kZBCsWb78yJ1zcdhmrYEmjNEOaJN5RGuMBuoszUXGGOCJMFi6jMTgSVjTql90NchA0tWXAuooVLV++f8WIOwpP7TY1YzN1XCREyk8jKOMrIdCc22ueJlNvxmFfJhdDKBCy0eThWN2qFxQJ4p9SvzGlMd2r3nBy95v9f8WgkN8M/HTDwTsFafNT0arvHnmUY6rFHxQE9TgTRlH1/sZ7mMxzmVZ8NKI/wIXTkv53TbylBYbvkEXyVFl3OBj1MUvo17v99LGdQNFcAiWR/pRsDvXY415FzootwShgQpmvuPLP7buTqVcrRnwRr2hZcpaydOyEaErYsuEPiot0RPrvsIXSkSI4NlIbqO2i4gjfF8FwpDzyY0WtAvUbsY8dKxWXzcIWtQzUyYeqJq1R0Yh8p3ijmLgrkpAJTI/Lz8WT2foUFg7gYQwc9xbFN6aQzQwUQ0Y8s0DDvQqnbby12IXXHI+rjuh1TH8lIRPw/UsFInJn3WS1MBp4FRiXwRs9EwVhfeb+b8Z5rnaQ3RrmM8SY0kjg0i05rkMkygEnPuSec6qKYREHW8n4wbYQNhJvDW9RhUIGnzn3IQRJB57bOZ8xwPkZ97PM0WGsCMWwupSOuEk/NsFe69cZwbElYZJeqeA/bKKsmRsJ/tjzyYMLUlj4L++4GQIwPHgtjmQ9kUEeaw== dgoldste@wmce3-cb7\n"",; ""path"": ""/home/batch-worker/.ssh/authorized_keys""; }; ]; }; },; ""requireGuestProvisionSignal"": true,; ""secrets"": [],; ""windowsConfiguration"": null; },; ""plan"": null,; ""platformFaultDomain"": null,; ""priority"": ""Spot"",; ""provisioningState"": ""Succeeded"",; ""proximityPlacementGroup"": null,; ""resourceGroup"": ""dgoldste"",; ""resources"": null,; ""scheduledEventsProfile"": null,; ""securityProfile"": null,; ""storageProfile"": {; ""dataDisks"": [],; ""imageReference"": {; ""exactVersion"": ""0.0.12"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/galleries/dgoldste_batch/images/batch-worker/versions/0.0.12"",; ""offer"": null,; ""publisher"": null,; ""resourceGroup"": ""dgoldste"",; ""sharedGalleryImageId"": null,; ""sku"": null,; ""version"": null; },; ""osDisk"": {; ""caching"": ""ReadOnly"",; ""createOption"": ""FromImage"",; ""deleteOption"": ""Delete"",; ""diffDiskSettings"": null,; ""diskSizeGb"": 30,; ""encryptionSettings"": null,; ""image"": null,; ""managedDisk"": {; ""diskEncryptionSet"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/disks/batch-worker-pr-11144-default-nbthv8fduvd6-standard-i4sun-os"",; ""resourceGroup"": ""dgoldste"",; ""storageAccountType""",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:738,Modifiability,extend,extendedLocation,738,"Actually I just went ahead and looked at this PR to make sure highcpus were indeed highcpus. They are!; <img width=""1476"" alt=""Screen Shot 2021-12-09 at 11 56 56 AM"" src=""https://user-images.githubusercontent.com/106194/145441305-fec38573-9c66-4a95-9fb7-0e6dc3a7c2e9.png"">. I also grabbed all the VM details and all the things that should be different (vm name, Nic name, etc.) are different. The userData is myseriously null, but its null for every VM in Azure currently (other PRs, namespaces, and default). ```; {; ""additionalCapabilities"": null,; ""applicationProfile"": null,; ""availabilitySet"": null,; ""billingProfile"": {; ""maxPrice"": -1.0; },; ""capacityReservation"": null,; ""diagnosticsProfile"": null,; ""evictionPolicy"": ""Delete"",; ""extendedLocation"": null,; ""extensionsTimeBudget"": null,; ""hardwareProfile"": {; ""vmSize"": ""Standard_F16s_v2"",; ""vmSizeProperties"": null; },; ""host"": null,; ""hostGroup"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/virtualMachines/batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5"",; ""identity"": {; ""principalId"": null,; ""tenantId"": null,; ""type"": ""UserAssigned"",; ""userAssignedIdentities"": {; ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.ManagedIdentity/userAssignedIdentities/batch-worker"": {; ""clientId"": ""890af904-42f1-4136-810a-c52f4e132c6b"",; ""principalId"": ""b952a3bb-1091-4f11-803b-9d5199219a27""; }; }; },; ""instanceView"": null,; ""licenseType"": null,; ""location"": ""eastus"",; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5"",; ""networkProfile"": {; ""networkApiVersion"": null,; ""networkInterfaceConfigurations"": null,; ""networkInterfaces"": [; {; ""deleteOption"": ""Delete"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Network/networkInterfaces/batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5-nic"",; ""primary"": null,; ""resourceGroup"": ""dgoldste""",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:5734,Modifiability,extend,extendedLocation,5734,"edDisk"": {; ""diskEncryptionSet"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/disks/batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5-os"",; ""resourceGroup"": ""dgoldste"",; ""storageAccountType"": ""Standard_LRS""; },; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5-os"",; ""osType"": ""Linux"",; ""vhd"": null,; ""writeAcceleratorEnabled"": null; }; },; ""tags"": {; ""batch-worker"": ""1"",; ""namespace"": ""pr-11144-default-nbthv8fduvd6""; },; ""type"": ""Microsoft.Compute/virtualMachines"",; ""userData"": null,; ""virtualMachineScaleSet"": null,; ""vmId"": ""4eaaa3a5-69ce-4eb0-ba8c-266bd66c821e"",; ""zones"": null; },; {; ""additionalCapabilities"": null,; ""applicationProfile"": null,; ""availabilitySet"": null,; ""billingProfile"": {; ""maxPrice"": -1.0; },; ""capacityReservation"": null,; ""diagnosticsProfile"": null,; ""evictionPolicy"": ""Delete"",; ""extendedLocation"": null,; ""extensionsTimeBudget"": null,; ""hardwareProfile"": {; ""vmSize"": ""Standard_E4d_v4"",; ""vmSizeProperties"": null; },; ""host"": null,; ""hostGroup"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/virtualMachines/batch-worker-pr-11144-default-nbthv8fduvd6-highmem-13t6m"",; ""identity"": {; ""principalId"": null,; ""tenantId"": null,; ""type"": ""UserAssigned"",; ""userAssignedIdentities"": {; ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.ManagedIdentity/userAssignedIdentities/batch-worker"": {; ""clientId"": ""890af904-42f1-4136-810a-c52f4e132c6b"",; ""principalId"": ""b952a3bb-1091-4f11-803b-9d5199219a27""; }; }; },; ""instanceView"": null,; ""licenseType"": null,; ""location"": ""eastus"",; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highmem-13t6m"",; ""networkProfile"": {; ""networkApiVersion"": null,; ""networkInterfaceConfigurations"": null,; ""networkInterfaces"": [; {; ""deleteOption"": ""Delete"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resource",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:10077,Modifiability,extend,extendedLocation,10077,"dDisk"": {; ""diskEncryptionSet"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/disks/batch-worker-pr-11144-default-nbthv8fduvd6-highmem-13t6m-os"",; ""resourceGroup"": ""dgoldste"",; ""storageAccountType"": ""Standard_LRS""; },; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highmem-13t6m-os"",; ""osType"": ""Linux"",; ""vhd"": null,; ""writeAcceleratorEnabled"": null; }; },; ""tags"": {; ""batch-worker"": ""1"",; ""namespace"": ""pr-11144-default-nbthv8fduvd6""; },; ""type"": ""Microsoft.Compute/virtualMachines"",; ""userData"": null,; ""virtualMachineScaleSet"": null,; ""vmId"": ""2612958c-ef4e-4678-8482-29726290ae20"",; ""zones"": null; },; {; ""additionalCapabilities"": null,; ""applicationProfile"": null,; ""availabilitySet"": null,; ""billingProfile"": {; ""maxPrice"": -1.0; },; ""capacityReservation"": null,; ""diagnosticsProfile"": null,; ""evictionPolicy"": ""Delete"",; ""extendedLocation"": null,; ""extensionsTimeBudget"": null,; ""hardwareProfile"": {; ""vmSize"": ""Standard_D16d_v4"",; ""vmSizeProperties"": null; },; ""host"": null,; ""hostGroup"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/virtualMachines/batch-worker-pr-11144-default-nbthv8fduvd6-standard-i4sun"",; ""identity"": {; ""principalId"": null,; ""tenantId"": null,; ""type"": ""UserAssigned"",; ""userAssignedIdentities"": {; ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.ManagedIdentity/userAssignedIdentities/batch-worker"": {; ""clientId"": ""890af904-42f1-4136-810a-c52f4e132c6b"",; ""principalId"": ""b952a3bb-1091-4f11-803b-9d5199219a27""; }; }; },; ""instanceView"": null,; ""licenseType"": null,; ""location"": ""eastus"",; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-standard-i4sun"",; ""networkProfile"": {; ""networkApiVersion"": null,; ""networkInterfaceConfigurations"": null,; ""networkInterfaces"": [; {; ""deleteOption"": ""Delete"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resou",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:3562,Security,secur,securityProfile,3562,"eJlNvxmFfJhdDKBCy0eThWN2qFxQJ4p9SvzGlMd2r3nBy95v9f8WgkN8M/HTDwTsFafNT0arvHnmUY6rFHxQE9TgTRlH1/sZ7mMxzmVZ8NKI/wIXTkv53TbylBYbvkEXyVFl3OBj1MUvo17v99LGdQNFcAiWR/pRsDvXY415FzootwShgQpmvuPLP7buTqVcrRnwRr2hZcpaydOyEaErYsuEPiot0RPrvsIXSkSI4NlIbqO2i4gjfF8FwpDzyY0WtAvUbsY8dKxWXzcIWtQzUyYeqJq1R0Yh8p3ijmLgrkpAJTI/Lz8WT2foUFg7gYQwc9xbFN6aQzQwUQ0Y8s0DDvQqnbby12IXXHI+rjuh1TH8lIRPw/UsFInJn3WS1MBp4FRiXwRs9EwVhfeb+b8Z5rnaQ3RrmM8SY0kjg0i05rkMkygEnPuSec6qKYREHW8n4wbYQNhJvDW9RhUIGnzn3IQRJB57bOZ8xwPkZ97PM0WGsCMWwupSOuEk/NsFe69cZwbElYZJeqeA/bKKsmRsJ/tjzyYMLUlj4L++4GQIwPHgtjmQ9kUEeaw== dgoldste@wmce3-cb7\n"",; ""path"": ""/home/batch-worker/.ssh/authorized_keys""; }; ]; }; },; ""requireGuestProvisionSignal"": true,; ""secrets"": [],; ""windowsConfiguration"": null; },; ""plan"": null,; ""platformFaultDomain"": null,; ""priority"": ""Spot"",; ""provisioningState"": ""Succeeded"",; ""proximityPlacementGroup"": null,; ""resourceGroup"": ""dgoldste"",; ""resources"": null,; ""scheduledEventsProfile"": null,; ""securityProfile"": null,; ""storageProfile"": {; ""dataDisks"": [; {; ""caching"": ""None"",; ""createOption"": ""Empty"",; ""deleteOption"": ""Delete"",; ""detachOption"": null,; ""diskIopsReadWrite"": null,; ""diskMBpsReadWrite"": null,; ""diskSizeGb"": 375,; ""image"": null,; ""lun"": 2,; ""managedDisk"": {; ""diskEncryptionSet"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/disks/batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5-data"",; ""resourceGroup"": ""dgoldste"",; ""storageAccountType"": ""Standard_LRS""; },; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5-data"",; ""toBeDetached"": false,; ""vhd"": null,; ""writeAcceleratorEnabled"": null; }; ],; ""imageReference"": {; ""exactVersion"": ""0.0.12"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/galleries/dgoldste_batch/images/batch-worker/versions/0.0.12"",; ""offer"": null,; ""publisher"": null,; ""resourceGroup"": ""dgoldste"",; ""sharedGalleryImageId"": null,; ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:4774,Security,encrypt,encryptionSettings,4774,"sReadWrite"": null,; ""diskMBpsReadWrite"": null,; ""diskSizeGb"": 375,; ""image"": null,; ""lun"": 2,; ""managedDisk"": {; ""diskEncryptionSet"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/disks/batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5-data"",; ""resourceGroup"": ""dgoldste"",; ""storageAccountType"": ""Standard_LRS""; },; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5-data"",; ""toBeDetached"": false,; ""vhd"": null,; ""writeAcceleratorEnabled"": null; }; ],; ""imageReference"": {; ""exactVersion"": ""0.0.12"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/galleries/dgoldste_batch/images/batch-worker/versions/0.0.12"",; ""offer"": null,; ""publisher"": null,; ""resourceGroup"": ""dgoldste"",; ""sharedGalleryImageId"": null,; ""sku"": null,; ""version"": null; },; ""osDisk"": {; ""caching"": ""ReadOnly"",; ""createOption"": ""FromImage"",; ""deleteOption"": ""Delete"",; ""diffDiskSettings"": null,; ""diskSizeGb"": 30,; ""encryptionSettings"": null,; ""image"": null,; ""managedDisk"": {; ""diskEncryptionSet"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/disks/batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5-os"",; ""resourceGroup"": ""dgoldste"",; ""storageAccountType"": ""Standard_LRS""; },; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highcpu-robv5-os"",; ""osType"": ""Linux"",; ""vhd"": null,; ""writeAcceleratorEnabled"": null; }; },; ""tags"": {; ""batch-worker"": ""1"",; ""namespace"": ""pr-11144-default-nbthv8fduvd6""; },; ""type"": ""Microsoft.Compute/virtualMachines"",; ""userData"": null,; ""virtualMachineScaleSet"": null,; ""vmId"": ""4eaaa3a5-69ce-4eb0-ba8c-266bd66c821e"",; ""zones"": null; },; {; ""additionalCapabilities"": null,; ""applicationProfile"": null,; ""availabilitySet"": null,; ""billingProfile"": {; ""maxPrice"": -1.0; },; ""capacityReservation"": null,; ""diagnosticsProfile"": null,; ""evictionPolicy"": ""Delete"",",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:8557,Security,secur,securityProfile,8557,"sh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDKC9kZBCsWb78yJ1zcdhmrYEmjNEOaJN5RGuMBuoszUXGGOCJMFi6jMTgSVjTql90NchA0tWXAuooVLV++f8WIOwpP7TY1YzN1XCREyk8jKOMrIdCc22ueJlNvxmFfJhdDKBCy0eThWN2qFxQJ4p9SvzGlMd2r3nBy95v9f8WgkN8M/HTDwTsFafNT0arvHnmUY6rFHxQE9TgTRlH1/sZ7mMxzmVZ8NKI/wIXTkv53TbylBYbvkEXyVFl3OBj1MUvo17v99LGdQNFcAiWR/pRsDvXY415FzootwShgQpmvuPLP7buTqVcrRnwRr2hZcpaydOyEaErYsuEPiot0RPrvsIXSkSI4NlIbqO2i4gjfF8FwpDzyY0WtAvUbsY8dKxWXzcIWtQzUyYeqJq1R0Yh8p3ijmLgrkpAJTI/Lz8WT2foUFg7gYQwc9xbFN6aQzQwUQ0Y8s0DDvQqnbby12IXXHI+rjuh1TH8lIRPw/UsFInJn3WS1MBp4FRiXwRs9EwVhfeb+b8Z5rnaQ3RrmM8SY0kjg0i05rkMkygEnPuSec6qKYREHW8n4wbYQNhJvDW9RhUIGnzn3IQRJB57bOZ8xwPkZ97PM0WGsCMWwupSOuEk/NsFe69cZwbElYZJeqeA/bKKsmRsJ/tjzyYMLUlj4L++4GQIwPHgtjmQ9kUEeaw== dgoldste@wmce3-cb7\n"",; ""path"": ""/home/batch-worker/.ssh/authorized_keys""; }; ]; }; },; ""requireGuestProvisionSignal"": true,; ""secrets"": [],; ""windowsConfiguration"": null; },; ""plan"": null,; ""platformFaultDomain"": null,; ""priority"": ""Spot"",; ""provisioningState"": ""Succeeded"",; ""proximityPlacementGroup"": null,; ""resourceGroup"": ""dgoldste"",; ""resources"": null,; ""scheduledEventsProfile"": null,; ""securityProfile"": null,; ""storageProfile"": {; ""dataDisks"": [],; ""imageReference"": {; ""exactVersion"": ""0.0.12"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/galleries/dgoldste_batch/images/batch-worker/versions/0.0.12"",; ""offer"": null,; ""publisher"": null,; ""resourceGroup"": ""dgoldste"",; ""sharedGalleryImageId"": null,; ""sku"": null,; ""version"": null; },; ""osDisk"": {; ""caching"": ""ReadOnly"",; ""createOption"": ""FromImage"",; ""deleteOption"": ""Delete"",; ""diffDiskSettings"": null,; ""diskSizeGb"": 30,; ""encryptionSettings"": null,; ""image"": null,; ""managedDisk"": {; ""diskEncryptionSet"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/disks/batch-worker-pr-11144-default-nbthv8fduvd6-highmem-13t6m-os"",; ""resourceGroup"": ""dgoldste"",; ""storageAccountType"":",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:9117,Security,encrypt,encryptionSettings,9117,"PkZ97PM0WGsCMWwupSOuEk/NsFe69cZwbElYZJeqeA/bKKsmRsJ/tjzyYMLUlj4L++4GQIwPHgtjmQ9kUEeaw== dgoldste@wmce3-cb7\n"",; ""path"": ""/home/batch-worker/.ssh/authorized_keys""; }; ]; }; },; ""requireGuestProvisionSignal"": true,; ""secrets"": [],; ""windowsConfiguration"": null; },; ""plan"": null,; ""platformFaultDomain"": null,; ""priority"": ""Spot"",; ""provisioningState"": ""Succeeded"",; ""proximityPlacementGroup"": null,; ""resourceGroup"": ""dgoldste"",; ""resources"": null,; ""scheduledEventsProfile"": null,; ""securityProfile"": null,; ""storageProfile"": {; ""dataDisks"": [],; ""imageReference"": {; ""exactVersion"": ""0.0.12"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/galleries/dgoldste_batch/images/batch-worker/versions/0.0.12"",; ""offer"": null,; ""publisher"": null,; ""resourceGroup"": ""dgoldste"",; ""sharedGalleryImageId"": null,; ""sku"": null,; ""version"": null; },; ""osDisk"": {; ""caching"": ""ReadOnly"",; ""createOption"": ""FromImage"",; ""deleteOption"": ""Delete"",; ""diffDiskSettings"": null,; ""diskSizeGb"": 30,; ""encryptionSettings"": null,; ""image"": null,; ""managedDisk"": {; ""diskEncryptionSet"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/disks/batch-worker-pr-11144-default-nbthv8fduvd6-highmem-13t6m-os"",; ""resourceGroup"": ""dgoldste"",; ""storageAccountType"": ""Standard_LRS""; },; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-highmem-13t6m-os"",; ""osType"": ""Linux"",; ""vhd"": null,; ""writeAcceleratorEnabled"": null; }; },; ""tags"": {; ""batch-worker"": ""1"",; ""namespace"": ""pr-11144-default-nbthv8fduvd6""; },; ""type"": ""Microsoft.Compute/virtualMachines"",; ""userData"": null,; ""virtualMachineScaleSet"": null,; ""vmId"": ""2612958c-ef4e-4678-8482-29726290ae20"",; ""zones"": null; },; {; ""additionalCapabilities"": null,; ""applicationProfile"": null,; ""availabilitySet"": null,; ""billingProfile"": {; ""maxPrice"": -1.0; },; ""capacityReservation"": null,; ""diagnosticsProfile"": null,; ""evictionPolicy"": ""Delete"",",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:12905,Security,secur,securityProfile,12905,"sh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDKC9kZBCsWb78yJ1zcdhmrYEmjNEOaJN5RGuMBuoszUXGGOCJMFi6jMTgSVjTql90NchA0tWXAuooVLV++f8WIOwpP7TY1YzN1XCREyk8jKOMrIdCc22ueJlNvxmFfJhdDKBCy0eThWN2qFxQJ4p9SvzGlMd2r3nBy95v9f8WgkN8M/HTDwTsFafNT0arvHnmUY6rFHxQE9TgTRlH1/sZ7mMxzmVZ8NKI/wIXTkv53TbylBYbvkEXyVFl3OBj1MUvo17v99LGdQNFcAiWR/pRsDvXY415FzootwShgQpmvuPLP7buTqVcrRnwRr2hZcpaydOyEaErYsuEPiot0RPrvsIXSkSI4NlIbqO2i4gjfF8FwpDzyY0WtAvUbsY8dKxWXzcIWtQzUyYeqJq1R0Yh8p3ijmLgrkpAJTI/Lz8WT2foUFg7gYQwc9xbFN6aQzQwUQ0Y8s0DDvQqnbby12IXXHI+rjuh1TH8lIRPw/UsFInJn3WS1MBp4FRiXwRs9EwVhfeb+b8Z5rnaQ3RrmM8SY0kjg0i05rkMkygEnPuSec6qKYREHW8n4wbYQNhJvDW9RhUIGnzn3IQRJB57bOZ8xwPkZ97PM0WGsCMWwupSOuEk/NsFe69cZwbElYZJeqeA/bKKsmRsJ/tjzyYMLUlj4L++4GQIwPHgtjmQ9kUEeaw== dgoldste@wmce3-cb7\n"",; ""path"": ""/home/batch-worker/.ssh/authorized_keys""; }; ]; }; },; ""requireGuestProvisionSignal"": true,; ""secrets"": [],; ""windowsConfiguration"": null; },; ""plan"": null,; ""platformFaultDomain"": null,; ""priority"": ""Spot"",; ""provisioningState"": ""Succeeded"",; ""proximityPlacementGroup"": null,; ""resourceGroup"": ""dgoldste"",; ""resources"": null,; ""scheduledEventsProfile"": null,; ""securityProfile"": null,; ""storageProfile"": {; ""dataDisks"": [],; ""imageReference"": {; ""exactVersion"": ""0.0.12"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/galleries/dgoldste_batch/images/batch-worker/versions/0.0.12"",; ""offer"": null,; ""publisher"": null,; ""resourceGroup"": ""dgoldste"",; ""sharedGalleryImageId"": null,; ""sku"": null,; ""version"": null; },; ""osDisk"": {; ""caching"": ""ReadOnly"",; ""createOption"": ""FromImage"",; ""deleteOption"": ""Delete"",; ""diffDiskSettings"": null,; ""diskSizeGb"": 30,; ""encryptionSettings"": null,; ""image"": null,; ""managedDisk"": {; ""diskEncryptionSet"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/disks/batch-worker-pr-11144-default-nbthv8fduvd6-standard-i4sun-os"",; ""resourceGroup"": ""dgoldste"",; ""storageAccountType""",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-990039686:13465,Security,encrypt,encryptionSettings,13465,"xWXzcIWtQzUyYeqJq1R0Yh8p3ijmLgrkpAJTI/Lz8WT2foUFg7gYQwc9xbFN6aQzQwUQ0Y8s0DDvQqnbby12IXXHI+rjuh1TH8lIRPw/UsFInJn3WS1MBp4FRiXwRs9EwVhfeb+b8Z5rnaQ3RrmM8SY0kjg0i05rkMkygEnPuSec6qKYREHW8n4wbYQNhJvDW9RhUIGnzn3IQRJB57bOZ8xwPkZ97PM0WGsCMWwupSOuEk/NsFe69cZwbElYZJeqeA/bKKsmRsJ/tjzyYMLUlj4L++4GQIwPHgtjmQ9kUEeaw== dgoldste@wmce3-cb7\n"",; ""path"": ""/home/batch-worker/.ssh/authorized_keys""; }; ]; }; },; ""requireGuestProvisionSignal"": true,; ""secrets"": [],; ""windowsConfiguration"": null; },; ""plan"": null,; ""platformFaultDomain"": null,; ""priority"": ""Spot"",; ""provisioningState"": ""Succeeded"",; ""proximityPlacementGroup"": null,; ""resourceGroup"": ""dgoldste"",; ""resources"": null,; ""scheduledEventsProfile"": null,; ""securityProfile"": null,; ""storageProfile"": {; ""dataDisks"": [],; ""imageReference"": {; ""exactVersion"": ""0.0.12"",; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/galleries/dgoldste_batch/images/batch-worker/versions/0.0.12"",; ""offer"": null,; ""publisher"": null,; ""resourceGroup"": ""dgoldste"",; ""sharedGalleryImageId"": null,; ""sku"": null,; ""version"": null; },; ""osDisk"": {; ""caching"": ""ReadOnly"",; ""createOption"": ""FromImage"",; ""deleteOption"": ""Delete"",; ""diffDiskSettings"": null,; ""diskSizeGb"": 30,; ""encryptionSettings"": null,; ""image"": null,; ""managedDisk"": {; ""diskEncryptionSet"": null,; ""id"": ""/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/dgoldste/providers/Microsoft.Compute/disks/batch-worker-pr-11144-default-nbthv8fduvd6-standard-i4sun-os"",; ""resourceGroup"": ""dgoldste"",; ""storageAccountType"": ""Standard_LRS""; },; ""name"": ""batch-worker-pr-11144-default-nbthv8fduvd6-standard-i4sun-os"",; ""osType"": ""Linux"",; ""vhd"": null,; ""writeAcceleratorEnabled"": null; }; },; ""tags"": {; ""batch-worker"": ""1"",; ""namespace"": ""pr-11144-default-nbthv8fduvd6""; },; ""type"": ""Microsoft.Compute/virtualMachines"",; ""userData"": null,; ""virtualMachineScaleSet"": null,; ""vmId"": ""13ddde82-50c6-4b61-af8b-c651eba9a674"",; ""zones"": null; }; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-990039686
https://github.com/hail-is/hail/pull/11144#issuecomment-995049663:87,Testability,test,tests,87,"This still seems absolutely crazy to me, but let's put it in production and see if the tests fail.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11144#issuecomment-995049663
https://github.com/hail-is/hail/pull/11147#issuecomment-992708508:44,Modifiability,config,config,44,I added `organization_domain` to the global-config in hail-vdc,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11147#issuecomment-992708508
https://github.com/hail-is/hail/pull/11147#issuecomment-994998700:39,Integrability,protocol,protocols,39,"https://developers.google.com/identity/protocols/oauth2/web-server#exchange-authorization-code. So the google oauth flow example shows this when getting the token:. ```python3; flow.redirect_uri = flask.url_for('oauth2callback', _external=True); ```. Let me see if I can incorporate this behavior instead of what I did.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11147#issuecomment-994998700
https://github.com/hail-is/hail/pull/11147#issuecomment-994998700:76,Security,authoriz,authorization-code,76,"https://developers.google.com/identity/protocols/oauth2/web-server#exchange-authorization-code. So the google oauth flow example shows this when getting the token:. ```python3; flow.redirect_uri = flask.url_for('oauth2callback', _external=True); ```. Let me see if I can incorporate this behavior instead of what I did.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11147#issuecomment-994998700
https://github.com/hail-is/hail/pull/11151#issuecomment-1015626695:613,Availability,down,down,613,"Ok, I've addressed your comment, corrected requiredness inference for `PartitionNativeWriter` and `SplitPartitionWriter` and revamped things so that the key is not determined based on whether or not there is an index. I've also bumped file version and regenerated files. . I'd be interested to see what you think about testing / whether there's more testing you would do. This is harmless change right now if all the normal tests pass since it's just adding a new metadata field that's unused save for a few tests, but we don't want to start marking files ""distinctlyKeyed"" that aren't and then run into problems down the road when we implement the new join behavior.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11151#issuecomment-1015626695
https://github.com/hail-is/hail/pull/11151#issuecomment-1015626695:319,Testability,test,testing,319,"Ok, I've addressed your comment, corrected requiredness inference for `PartitionNativeWriter` and `SplitPartitionWriter` and revamped things so that the key is not determined based on whether or not there is an index. I've also bumped file version and regenerated files. . I'd be interested to see what you think about testing / whether there's more testing you would do. This is harmless change right now if all the normal tests pass since it's just adding a new metadata field that's unused save for a few tests, but we don't want to start marking files ""distinctlyKeyed"" that aren't and then run into problems down the road when we implement the new join behavior.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11151#issuecomment-1015626695
https://github.com/hail-is/hail/pull/11151#issuecomment-1015626695:350,Testability,test,testing,350,"Ok, I've addressed your comment, corrected requiredness inference for `PartitionNativeWriter` and `SplitPartitionWriter` and revamped things so that the key is not determined based on whether or not there is an index. I've also bumped file version and regenerated files. . I'd be interested to see what you think about testing / whether there's more testing you would do. This is harmless change right now if all the normal tests pass since it's just adding a new metadata field that's unused save for a few tests, but we don't want to start marking files ""distinctlyKeyed"" that aren't and then run into problems down the road when we implement the new join behavior.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11151#issuecomment-1015626695
https://github.com/hail-is/hail/pull/11151#issuecomment-1015626695:424,Testability,test,tests,424,"Ok, I've addressed your comment, corrected requiredness inference for `PartitionNativeWriter` and `SplitPartitionWriter` and revamped things so that the key is not determined based on whether or not there is an index. I've also bumped file version and regenerated files. . I'd be interested to see what you think about testing / whether there's more testing you would do. This is harmless change right now if all the normal tests pass since it's just adding a new metadata field that's unused save for a few tests, but we don't want to start marking files ""distinctlyKeyed"" that aren't and then run into problems down the road when we implement the new join behavior.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11151#issuecomment-1015626695
https://github.com/hail-is/hail/pull/11151#issuecomment-1015626695:508,Testability,test,tests,508,"Ok, I've addressed your comment, corrected requiredness inference for `PartitionNativeWriter` and `SplitPartitionWriter` and revamped things so that the key is not determined based on whether or not there is an index. I've also bumped file version and regenerated files. . I'd be interested to see what you think about testing / whether there's more testing you would do. This is harmless change right now if all the normal tests pass since it's just adding a new metadata field that's unused save for a few tests, but we don't want to start marking files ""distinctlyKeyed"" that aren't and then run into problems down the road when we implement the new join behavior.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11151#issuecomment-1015626695
https://github.com/hail-is/hail/pull/11151#issuecomment-1018000957:60,Testability,test,tested,60,Addressed comments. My question about it being sufficiently tested still stands.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11151#issuecomment-1018000957
https://github.com/hail-is/hail/pull/11151#issuecomment-1018609478:26,Testability,test,tests,26,I think the current Scala tests I've written roughly do that,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11151#issuecomment-1018609478
https://github.com/hail-is/hail/pull/11153#issuecomment-993057032:11,Deployability,release,release,11,"We need to release after this. I suspect release will be rocky due to some deploy changes I made recently, so make sure I'm online when we do it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11153#issuecomment-993057032
https://github.com/hail-is/hail/pull/11153#issuecomment-993057032:41,Deployability,release,release,41,"We need to release after this. I suspect release will be rocky due to some deploy changes I made recently, so make sure I'm online when we do it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11153#issuecomment-993057032
https://github.com/hail-is/hail/pull/11153#issuecomment-993057032:75,Deployability,deploy,deploy,75,"We need to release after this. I suspect release will be rocky due to some deploy changes I made recently, so make sure I'm online when we do it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11153#issuecomment-993057032
https://github.com/hail-is/hail/pull/11155#issuecomment-994941723:29,Testability,test,test,29,@tpoterba You have a failing test when trying to TypeCheck an IR.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11155#issuecomment-994941723
https://github.com/hail-is/hail/pull/11168#issuecomment-996141311:103,Availability,error,error,103,Should we not just crash when someone does this? It feels like this ought to be a python enforced type error?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11168#issuecomment-996141311
https://github.com/hail-is/hail/pull/11187#issuecomment-1004205518:131,Availability,down,downloaded,131,"If there's no requester pays, is it just impossible to have ""public"" data in Azure storage safely? Like anything in there could be downloaded infinity times to drive up a bill?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11187#issuecomment-1004205518
https://github.com/hail-is/hail/pull/11187#issuecomment-1004205518:91,Safety,safe,safely,91,"If there's no requester pays, is it just impossible to have ""public"" data in Azure storage safely? Like anything in there could be downloaded infinity times to drive up a bill?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11187#issuecomment-1004205518
https://github.com/hail-is/hail/pull/11187#issuecomment-1004244889:133,Availability,down,downloaded,133,"> If there's no requester pays, is it just impossible to have ""public"" data in Azure storage safely? Like anything in there could be downloaded infinity times to drive up a bill?. That's correct.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11187#issuecomment-1004244889
https://github.com/hail-is/hail/pull/11187#issuecomment-1004244889:93,Safety,safe,safely,93,"> If there's no requester pays, is it just impossible to have ""public"" data in Azure storage safely? Like anything in there could be downloaded infinity times to drive up a bill?. That's correct.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11187#issuecomment-1004244889
https://github.com/hail-is/hail/pull/11187#issuecomment-1006773562:71,Deployability,install,installing,71,I'm good with this if @tpoterba and @johnc1231 are especially with the installing Hail script.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11187#issuecomment-1006773562
https://github.com/hail-is/hail/pull/11194#issuecomment-1015479543:71,Testability,test,tests,71,I have a follow-up PR that ~halves the run-time of the service backend tests: https://github.com/hail-is/hail/pull/11212,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1015479543
https://github.com/hail-is/hail/pull/11194#issuecomment-1033173934:393,Deployability,integrat,integrates,393,"Thank you all for another round of detailed critique!. OK, I think the only remaining critical fix is to hard-code a mainclass. This is a wee bit complicated because I need to multiplex the ServiceBackendSocketAPI2 and the Worker. I hope to do this tomorrow AM. I'll then dismiss reviews. I also have a list of todos generated by this process which will feedback into some master QoB doc that integrates the two teams necessary todos.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1033173934
https://github.com/hail-is/hail/pull/11194#issuecomment-1033173934:393,Integrability,integrat,integrates,393,"Thank you all for another round of detailed critique!. OK, I think the only remaining critical fix is to hard-code a mainclass. This is a wee bit complicated because I need to multiplex the ServiceBackendSocketAPI2 and the Worker. I hope to do this tomorrow AM. I'll then dismiss reviews. I also have a list of todos generated by this process which will feedback into some master QoB doc that integrates the two teams necessary todos.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1033173934
https://github.com/hail-is/hail/pull/11194#issuecomment-1033173934:354,Usability,feedback,feedback,354,"Thank you all for another round of detailed critique!. OK, I think the only remaining critical fix is to hard-code a mainclass. This is a wee bit complicated because I need to multiplex the ServiceBackendSocketAPI2 and the Worker. I hope to do this tomorrow AM. I'll then dismiss reviews. I also have a list of todos generated by this process which will feedback into some master QoB doc that integrates the two teams necessary todos.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1033173934
https://github.com/hail-is/hail/pull/11194#issuecomment-1034272076:95,Availability,down,down,95,"OK, this PR basically works except we're encountering OOMs somewhat often. I'm trying to track down which tests are triggering the OOMs, but its a bit tricky because the OOMKiller doesn't necessarily kill the test which is using a ton of memory.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1034272076
https://github.com/hail-is/hail/pull/11194#issuecomment-1034272076:106,Testability,test,tests,106,"OK, this PR basically works except we're encountering OOMs somewhat often. I'm trying to track down which tests are triggering the OOMs, but its a bit tricky because the OOMKiller doesn't necessarily kill the test which is using a ton of memory.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1034272076
https://github.com/hail-is/hail/pull/11194#issuecomment-1034272076:209,Testability,test,test,209,"OK, this PR basically works except we're encountering OOMs somewhat often. I'm trying to track down which tests are triggering the OOMs, but its a bit tricky because the OOMKiller doesn't necessarily kill the test which is using a ton of memory.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1034272076
https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369:20,Availability,reliab,reliably,20,"Huh! I seem to have reliably broken unicode ordering and/or en/de-coding. I've marked as fails for now. Hopefully all the remaining tests will now pass.; ```; _________________________ Tests.test_unicode_ordering __________________________; [gw1] linux -- Python 3.7.12 /usr/bin/python3. self = <test.hail.table.test_table.Tests testMethod=test_unicode_ordering>. def test_unicode_ordering(self):; a = hl.literal([""é"", ""e""]); ht = hl.utils.range_table(1, 1); ht = ht.annotate(fd=hl.sorted(a)); > assert ht.fd.collect()[0] == [""e"", ""é""]; E AssertionError: assert ['?', 'e'] == ['e', 'é']; E At index 0 diff: '?' != 'e'; E Full diff:; E - ['e', 'é']; E + ['?', 'e']. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369
https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369:132,Testability,test,tests,132,"Huh! I seem to have reliably broken unicode ordering and/or en/de-coding. I've marked as fails for now. Hopefully all the remaining tests will now pass.; ```; _________________________ Tests.test_unicode_ordering __________________________; [gw1] linux -- Python 3.7.12 /usr/bin/python3. self = <test.hail.table.test_table.Tests testMethod=test_unicode_ordering>. def test_unicode_ordering(self):; a = hl.literal([""é"", ""e""]); ht = hl.utils.range_table(1, 1); ht = ht.annotate(fd=hl.sorted(a)); > assert ht.fd.collect()[0] == [""e"", ""é""]; E AssertionError: assert ['?', 'e'] == ['e', 'é']; E At index 0 diff: '?' != 'e'; E Full diff:; E - ['e', 'é']; E + ['?', 'e']. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369
https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369:185,Testability,Test,Tests,185,"Huh! I seem to have reliably broken unicode ordering and/or en/de-coding. I've marked as fails for now. Hopefully all the remaining tests will now pass.; ```; _________________________ Tests.test_unicode_ordering __________________________; [gw1] linux -- Python 3.7.12 /usr/bin/python3. self = <test.hail.table.test_table.Tests testMethod=test_unicode_ordering>. def test_unicode_ordering(self):; a = hl.literal([""é"", ""e""]); ht = hl.utils.range_table(1, 1); ht = ht.annotate(fd=hl.sorted(a)); > assert ht.fd.collect()[0] == [""e"", ""é""]; E AssertionError: assert ['?', 'e'] == ['e', 'é']; E At index 0 diff: '?' != 'e'; E Full diff:; E - ['e', 'é']; E + ['?', 'e']. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369
https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369:296,Testability,test,test,296,"Huh! I seem to have reliably broken unicode ordering and/or en/de-coding. I've marked as fails for now. Hopefully all the remaining tests will now pass.; ```; _________________________ Tests.test_unicode_ordering __________________________; [gw1] linux -- Python 3.7.12 /usr/bin/python3. self = <test.hail.table.test_table.Tests testMethod=test_unicode_ordering>. def test_unicode_ordering(self):; a = hl.literal([""é"", ""e""]); ht = hl.utils.range_table(1, 1); ht = ht.annotate(fd=hl.sorted(a)); > assert ht.fd.collect()[0] == [""e"", ""é""]; E AssertionError: assert ['?', 'e'] == ['e', 'é']; E At index 0 diff: '?' != 'e'; E Full diff:; E - ['e', 'é']; E + ['?', 'e']. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369
https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369:323,Testability,Test,Tests,323,"Huh! I seem to have reliably broken unicode ordering and/or en/de-coding. I've marked as fails for now. Hopefully all the remaining tests will now pass.; ```; _________________________ Tests.test_unicode_ordering __________________________; [gw1] linux -- Python 3.7.12 /usr/bin/python3. self = <test.hail.table.test_table.Tests testMethod=test_unicode_ordering>. def test_unicode_ordering(self):; a = hl.literal([""é"", ""e""]); ht = hl.utils.range_table(1, 1); ht = ht.annotate(fd=hl.sorted(a)); > assert ht.fd.collect()[0] == [""e"", ""é""]; E AssertionError: assert ['?', 'e'] == ['e', 'é']; E At index 0 diff: '?' != 'e'; E Full diff:; E - ['e', 'é']; E + ['?', 'e']. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369
https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369:329,Testability,test,testMethod,329,"Huh! I seem to have reliably broken unicode ordering and/or en/de-coding. I've marked as fails for now. Hopefully all the remaining tests will now pass.; ```; _________________________ Tests.test_unicode_ordering __________________________; [gw1] linux -- Python 3.7.12 /usr/bin/python3. self = <test.hail.table.test_table.Tests testMethod=test_unicode_ordering>. def test_unicode_ordering(self):; a = hl.literal([""é"", ""e""]); ht = hl.utils.range_table(1, 1); ht = ht.annotate(fd=hl.sorted(a)); > assert ht.fd.collect()[0] == [""e"", ""é""]; E AssertionError: assert ['?', 'e'] == ['e', 'é']; E At index 0 diff: '?' != 'e'; E Full diff:; E - ['e', 'é']; E + ['?', 'e']. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369
https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369:496,Testability,assert,assert,496,"Huh! I seem to have reliably broken unicode ordering and/or en/de-coding. I've marked as fails for now. Hopefully all the remaining tests will now pass.; ```; _________________________ Tests.test_unicode_ordering __________________________; [gw1] linux -- Python 3.7.12 /usr/bin/python3. self = <test.hail.table.test_table.Tests testMethod=test_unicode_ordering>. def test_unicode_ordering(self):; a = hl.literal([""é"", ""e""]); ht = hl.utils.range_table(1, 1); ht = ht.annotate(fd=hl.sorted(a)); > assert ht.fd.collect()[0] == [""e"", ""é""]; E AssertionError: assert ['?', 'e'] == ['e', 'é']; E At index 0 diff: '?' != 'e'; E Full diff:; E - ['e', 'é']; E + ['?', 'e']. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369
https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369:539,Testability,Assert,AssertionError,539,"Huh! I seem to have reliably broken unicode ordering and/or en/de-coding. I've marked as fails for now. Hopefully all the remaining tests will now pass.; ```; _________________________ Tests.test_unicode_ordering __________________________; [gw1] linux -- Python 3.7.12 /usr/bin/python3. self = <test.hail.table.test_table.Tests testMethod=test_unicode_ordering>. def test_unicode_ordering(self):; a = hl.literal([""é"", ""e""]); ht = hl.utils.range_table(1, 1); ht = ht.annotate(fd=hl.sorted(a)); > assert ht.fd.collect()[0] == [""e"", ""é""]; E AssertionError: assert ['?', 'e'] == ['e', 'é']; E At index 0 diff: '?' != 'e'; E Full diff:; E - ['e', 'é']; E + ['?', 'e']. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369
https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369:555,Testability,assert,assert,555,"Huh! I seem to have reliably broken unicode ordering and/or en/de-coding. I've marked as fails for now. Hopefully all the remaining tests will now pass.; ```; _________________________ Tests.test_unicode_ordering __________________________; [gw1] linux -- Python 3.7.12 /usr/bin/python3. self = <test.hail.table.test_table.Tests testMethod=test_unicode_ordering>. def test_unicode_ordering(self):; a = hl.literal([""é"", ""e""]); ht = hl.utils.range_table(1, 1); ht = ht.annotate(fd=hl.sorted(a)); > assert ht.fd.collect()[0] == [""e"", ""é""]; E AssertionError: assert ['?', 'e'] == ['e', 'é']; E At index 0 diff: '?' != 'e'; E Full diff:; E - ['e', 'é']; E + ['?', 'e']. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1034968369
https://github.com/hail-is/hail/pull/11194#issuecomment-1035106987:8,Testability,test,test,8,"Hrm. ci-test is ""Pending"" but it should actually say ""Success"" (click through to the status page). Who would like to grant the final approval to the glorious future of Hail?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1035106987
https://github.com/hail-is/hail/pull/11202#issuecomment-1006964286:38,Usability,simpl,simplify,38,cc: @jigold some changes to memory to simplify it and address some weird behavior. sent over to Daniel since I feel like I've been hitting you with a bunch of PRs lately 😉 !,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11202#issuecomment-1006964286
https://github.com/hail-is/hail/pull/11203#issuecomment-1006756945:105,Availability,error,error,105,I see. It's a bug in that the debug information if the test had failed would have been wrong / thrown an error. But the actual test right now was testing the right thing. Is this correct?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11203#issuecomment-1006756945
https://github.com/hail-is/hail/pull/11203#issuecomment-1006756945:55,Testability,test,test,55,I see. It's a bug in that the debug information if the test had failed would have been wrong / thrown an error. But the actual test right now was testing the right thing. Is this correct?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11203#issuecomment-1006756945
https://github.com/hail-is/hail/pull/11203#issuecomment-1006756945:127,Testability,test,test,127,I see. It's a bug in that the debug information if the test had failed would have been wrong / thrown an error. But the actual test right now was testing the right thing. Is this correct?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11203#issuecomment-1006756945
https://github.com/hail-is/hail/pull/11203#issuecomment-1006756945:146,Testability,test,testing,146,I see. It's a bug in that the debug information if the test had failed would have been wrong / thrown an error. But the actual test right now was testing the right thing. Is this correct?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11203#issuecomment-1006756945
https://github.com/hail-is/hail/pull/11203#issuecomment-1006815541:38,Availability,failure,failure,38,That's correct. I saw an intermittent failure in Azure on one of my PRs. That's how I found out the debug info was wrong.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11203#issuecomment-1006815541
https://github.com/hail-is/hail/pull/11207#issuecomment-1007489641:16,Testability,test,test,16,"AFAIK, we don't test credential discovery. A little tricky because you want to modify the file system, which isn't kosher on a developer's laptop. Also not clear what to do about, e.g., the metadata server. You could mock it, but I've always felt pretty negative about the value of mocking. You might try adding some build.yaml steps that use docker to replicate some common environments?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11207#issuecomment-1007489641
https://github.com/hail-is/hail/pull/11207#issuecomment-1007489641:217,Testability,mock,mock,217,"AFAIK, we don't test credential discovery. A little tricky because you want to modify the file system, which isn't kosher on a developer's laptop. Also not clear what to do about, e.g., the metadata server. You could mock it, but I've always felt pretty negative about the value of mocking. You might try adding some build.yaml steps that use docker to replicate some common environments?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11207#issuecomment-1007489641
https://github.com/hail-is/hail/pull/11207#issuecomment-1007489641:282,Testability,mock,mocking,282,"AFAIK, we don't test credential discovery. A little tricky because you want to modify the file system, which isn't kosher on a developer's laptop. Also not clear what to do about, e.g., the metadata server. You could mock it, but I've always felt pretty negative about the value of mocking. You might try adding some build.yaml steps that use docker to replicate some common environments?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11207#issuecomment-1007489641
https://github.com/hail-is/hail/pull/11207#issuecomment-1007489641:156,Usability,clear,clear,156,"AFAIK, we don't test credential discovery. A little tricky because you want to modify the file system, which isn't kosher on a developer's laptop. Also not clear what to do about, e.g., the metadata server. You could mock it, but I've always felt pretty negative about the value of mocking. You might try adding some build.yaml steps that use docker to replicate some common environments?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11207#issuecomment-1007489641
https://github.com/hail-is/hail/pull/11207#issuecomment-1007491902:50,Testability,test,test,50,"Ah, I forgot this is potentially a laptop-running test and not in a batch job! Definitely would require some more thought.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11207#issuecomment-1007491902
https://github.com/hail-is/hail/pull/11211#issuecomment-1010359404:38,Availability,error,error,38,This should be ready for review. Only error was black formatting which hopefully I fixed now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11211#issuecomment-1010359404
https://github.com/hail-is/hail/pull/11212#issuecomment-1039418045:386,Testability,test,test,386,"@daniel-goldstein , I tagged you because the QoB java code (everything in `is.hail.backend.service`) should really be owned by services team. @johnc1231 , I tagged you because this is a pervasive change to Query. You may want to confer with Chris and Patrick S before approving in light of Tim's absence. I'll apply WIP. Whoever approves second, please remove the WIP tag. I expect the test time to roughly halve with this change.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11212#issuecomment-1039418045
https://github.com/hail-is/hail/pull/11212#issuecomment-1039677943:73,Availability,down,down,73,This only yielded a ~20% reduction. Test times are around 16 minutes now down from around 20 minutes.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11212#issuecomment-1039677943
https://github.com/hail-is/hail/pull/11212#issuecomment-1039677943:36,Testability,Test,Test,36,This only yielded a ~20% reduction. Test times are around 16 minutes now down from around 20 minutes.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11212#issuecomment-1039677943
https://github.com/hail-is/hail/pull/11213#issuecomment-1021566609:110,Testability,test,tests,110,@ammekk You have to fix documentation for this method. The documentation contains an example which is failing tests,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11213#issuecomment-1021566609
https://github.com/hail-is/hail/pull/11219#issuecomment-1011381290:1605,Deployability,update,update,1605,"hail/python/setup.py: python_requires="">=3.6"",; hail/python/hail/backend/spark_backend.py: raise EnvironmentError('Hail with spark {} requires Python 3.6 or 3.7, found {}.{}'.format(; hail/python/requirements.txt:orjson==3.6.4; hail/python/hailtop/batch/batch.py: 3.6, 3.7, or 3.8.; hail/python/hailtop/batch/docker.py: f'Python versions other than 3.6, 3.7, or 3.8 (you are using {major_version}.{minor_version}) are not supported'); hail/python/hailtop/batch/batch_pool_executor.py: include Python 3.6 or later and must have the ``dill`` Python package; hail/python/hailtop/batch/batch_pool_executor.py: f'You must specify an image if you are using a Python version other than 3.6, 3.7, or 3.8 (you are using {version})'); hail/python/hailtop/batch/docs/cookbook/random_forest.rst:choose a suitable image for you if your Python version is 3.6, 3.7, or 3.8.; hail/python/hailtop/batch/docs/docker_resources.rst:exists to base your image on. An image that has Python preinstalled is `python:3.6-slim-stretch` and; hail/python/hailtop/batch/docs/tutorial.rst:f-strings were added to Python in version 3.6 and are denoted by the 'f' character; hail/python/hailtop/batch/backend.py: f""You must specify 'image' for Python jobs if you are using a Python version other than 3.6, 3.7, or 3.8 (you are using {version})""); docker/python-dill/push.sh:for version in 3.6 3.6-slim 3.7 3.7-slim 3.8 3.8-slim; docker/third-party/images.txt:python:3.6; docker/third-party/images.txt:python:3.6-slim; benchmark/python/setup.py: python_requires="">=3.6"",. Found a few more invocations of 3.6. I'm not sure when you want to update the `python_requires` and makes sense to leave the 3.6 docker images around for a little while, but the other places in the batch documentation and warnings seem a good thing to update now too.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11219#issuecomment-1011381290
https://github.com/hail-is/hail/pull/11219#issuecomment-1011381290:1790,Deployability,update,update,1790,"hail/python/setup.py: python_requires="">=3.6"",; hail/python/hail/backend/spark_backend.py: raise EnvironmentError('Hail with spark {} requires Python 3.6 or 3.7, found {}.{}'.format(; hail/python/requirements.txt:orjson==3.6.4; hail/python/hailtop/batch/batch.py: 3.6, 3.7, or 3.8.; hail/python/hailtop/batch/docker.py: f'Python versions other than 3.6, 3.7, or 3.8 (you are using {major_version}.{minor_version}) are not supported'); hail/python/hailtop/batch/batch_pool_executor.py: include Python 3.6 or later and must have the ``dill`` Python package; hail/python/hailtop/batch/batch_pool_executor.py: f'You must specify an image if you are using a Python version other than 3.6, 3.7, or 3.8 (you are using {version})'); hail/python/hailtop/batch/docs/cookbook/random_forest.rst:choose a suitable image for you if your Python version is 3.6, 3.7, or 3.8.; hail/python/hailtop/batch/docs/docker_resources.rst:exists to base your image on. An image that has Python preinstalled is `python:3.6-slim-stretch` and; hail/python/hailtop/batch/docs/tutorial.rst:f-strings were added to Python in version 3.6 and are denoted by the 'f' character; hail/python/hailtop/batch/backend.py: f""You must specify 'image' for Python jobs if you are using a Python version other than 3.6, 3.7, or 3.8 (you are using {version})""); docker/python-dill/push.sh:for version in 3.6 3.6-slim 3.7 3.7-slim 3.8 3.8-slim; docker/third-party/images.txt:python:3.6; docker/third-party/images.txt:python:3.6-slim; benchmark/python/setup.py: python_requires="">=3.6"",. Found a few more invocations of 3.6. I'm not sure when you want to update the `python_requires` and makes sense to leave the 3.6 docker images around for a little while, but the other places in the batch documentation and warnings seem a good thing to update now too.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11219#issuecomment-1011381290
https://github.com/hail-is/hail/pull/11219#issuecomment-1011381290:1485,Testability,benchmark,benchmark,1485,"hail/python/setup.py: python_requires="">=3.6"",; hail/python/hail/backend/spark_backend.py: raise EnvironmentError('Hail with spark {} requires Python 3.6 or 3.7, found {}.{}'.format(; hail/python/requirements.txt:orjson==3.6.4; hail/python/hailtop/batch/batch.py: 3.6, 3.7, or 3.8.; hail/python/hailtop/batch/docker.py: f'Python versions other than 3.6, 3.7, or 3.8 (you are using {major_version}.{minor_version}) are not supported'); hail/python/hailtop/batch/batch_pool_executor.py: include Python 3.6 or later and must have the ``dill`` Python package; hail/python/hailtop/batch/batch_pool_executor.py: f'You must specify an image if you are using a Python version other than 3.6, 3.7, or 3.8 (you are using {version})'); hail/python/hailtop/batch/docs/cookbook/random_forest.rst:choose a suitable image for you if your Python version is 3.6, 3.7, or 3.8.; hail/python/hailtop/batch/docs/docker_resources.rst:exists to base your image on. An image that has Python preinstalled is `python:3.6-slim-stretch` and; hail/python/hailtop/batch/docs/tutorial.rst:f-strings were added to Python in version 3.6 and are denoted by the 'f' character; hail/python/hailtop/batch/backend.py: f""You must specify 'image' for Python jobs if you are using a Python version other than 3.6, 3.7, or 3.8 (you are using {version})""); docker/python-dill/push.sh:for version in 3.6 3.6-slim 3.7 3.7-slim 3.8 3.8-slim; docker/third-party/images.txt:python:3.6; docker/third-party/images.txt:python:3.6-slim; benchmark/python/setup.py: python_requires="">=3.6"",. Found a few more invocations of 3.6. I'm not sure when you want to update the `python_requires` and makes sense to leave the 3.6 docker images around for a little while, but the other places in the batch documentation and warnings seem a good thing to update now too.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11219#issuecomment-1011381290
https://github.com/hail-is/hail/pull/11219#issuecomment-1011493435:34,Deployability,update,updated,34,"I think this covers most spots. I updated the python_requires, left the docker images, tried to update batch docs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11219#issuecomment-1011493435
https://github.com/hail-is/hail/pull/11219#issuecomment-1011493435:96,Deployability,update,update,96,"I think this covers most spots. I updated the python_requires, left the docker images, tried to update batch docs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11219#issuecomment-1011493435
https://github.com/hail-is/hail/pull/11227#issuecomment-1013357056:57,Testability,log,logs,57,Don't forget to remind me that we need to look at the CI logs and make sure the test suite actually got ran.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11227#issuecomment-1013357056
https://github.com/hail-is/hail/pull/11227#issuecomment-1013357056:80,Testability,test,test,80,Don't forget to remind me that we need to look at the CI logs and make sure the test suite actually got ran.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11227#issuecomment-1013357056
https://github.com/hail-is/hail/pull/11227#issuecomment-1013474804:18,Testability,test,test,18,"I checked CI, the test is run in test_hail_python.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11227#issuecomment-1013474804
https://github.com/hail-is/hail/pull/11227#issuecomment-1015700143:38,Testability,test,test,38,@danking I'm not sure I like this new test. We're only testing it works locally. I'm not sure this `NotADirectoryError` is actually raised in the cloud. This is a bit worrisome to me and I think we should move the tests to the test_copy suite where we can test against all clouds once Carolin has finished what you asked for.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11227#issuecomment-1015700143
https://github.com/hail-is/hail/pull/11227#issuecomment-1015700143:55,Testability,test,testing,55,@danking I'm not sure I like this new test. We're only testing it works locally. I'm not sure this `NotADirectoryError` is actually raised in the cloud. This is a bit worrisome to me and I think we should move the tests to the test_copy suite where we can test against all clouds once Carolin has finished what you asked for.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11227#issuecomment-1015700143
https://github.com/hail-is/hail/pull/11227#issuecomment-1015700143:214,Testability,test,tests,214,@danking I'm not sure I like this new test. We're only testing it works locally. I'm not sure this `NotADirectoryError` is actually raised in the cloud. This is a bit worrisome to me and I think we should move the tests to the test_copy suite where we can test against all clouds once Carolin has finished what you asked for.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11227#issuecomment-1015700143
https://github.com/hail-is/hail/pull/11227#issuecomment-1015700143:256,Testability,test,test,256,@danking I'm not sure I like this new test. We're only testing it works locally. I'm not sure this `NotADirectoryError` is actually raised in the cloud. This is a bit worrisome to me and I think we should move the tests to the test_copy suite where we can test against all clouds once Carolin has finished what you asked for.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11227#issuecomment-1015700143
https://github.com/hail-is/hail/pull/11227#issuecomment-1015881708:109,Modifiability,parameteriz,parameterized,109,Fair point. I think asserting this behavior works on a local FS is good. I think a follow up to this PR that parameterized the other tests by filesystem is also great. That follow up PR can just leave the local-only test unchanged.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11227#issuecomment-1015881708
https://github.com/hail-is/hail/pull/11227#issuecomment-1015881708:20,Testability,assert,asserting,20,Fair point. I think asserting this behavior works on a local FS is good. I think a follow up to this PR that parameterized the other tests by filesystem is also great. That follow up PR can just leave the local-only test unchanged.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11227#issuecomment-1015881708
https://github.com/hail-is/hail/pull/11227#issuecomment-1015881708:133,Testability,test,tests,133,Fair point. I think asserting this behavior works on a local FS is good. I think a follow up to this PR that parameterized the other tests by filesystem is also great. That follow up PR can just leave the local-only test unchanged.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11227#issuecomment-1015881708
https://github.com/hail-is/hail/pull/11227#issuecomment-1015881708:216,Testability,test,test,216,Fair point. I think asserting this behavior works on a local FS is good. I think a follow up to this PR that parameterized the other tests by filesystem is also great. That follow up PR can just leave the local-only test unchanged.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11227#issuecomment-1015881708
https://github.com/hail-is/hail/pull/11231#issuecomment-1016834010:25,Availability,robust,robustly,25,I need to make this more robustly ignore migration files,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11231#issuecomment-1016834010
https://github.com/hail-is/hail/pull/11231#issuecomment-1050062744:104,Safety,avoid,avoids,104,"@daniel-goldstein , I love this change, can we just make isort run on `batch/batch`, `ci/ci`, etc. that avoids all the sql migrations.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11231#issuecomment-1050062744
https://github.com/hail-is/hail/pull/11244#issuecomment-1017965355:19,Energy Efficiency,power,power,19,This is barely for power users. I hate it. And it should die as soon as it can.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11244#issuecomment-1017965355
https://github.com/hail-is/hail/pull/11246#issuecomment-1020333007:43,Deployability,release,released,43,This is an ok thing to do since we haven't released since those 1.6 files were created in #11151,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11246#issuecomment-1020333007
https://github.com/hail-is/hail/pull/11247#issuecomment-1020493898:127,Deployability,release,release,127,"Addressed @danking's comments, though I'm not going to attempt to add type information in this PR, given intended timeline for release and other commitments.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11247#issuecomment-1020493898
https://github.com/hail-is/hail/pull/11249#issuecomment-1020325698:35,Usability,feedback,feedback,35,"@illusional @lgruen Thanks for the feedback. I think the new changes address your comments, but let me know if you see something else.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11249#issuecomment-1020325698
https://github.com/hail-is/hail/pull/11249#issuecomment-1021604713:51,Testability,test,testing,51,@danking Can you take one more look before I start testing again?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11249#issuecomment-1021604713
https://github.com/hail-is/hail/pull/11250#issuecomment-1021554196:56,Availability,echo,echos,56,"Can we follow up with a test that creates one job which echos its IP and port and then listens, then the test will try to curl the public IP and port?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11250#issuecomment-1021554196
https://github.com/hail-is/hail/pull/11250#issuecomment-1021554196:24,Testability,test,test,24,"Can we follow up with a test that creates one job which echos its IP and port and then listens, then the test will try to curl the public IP and port?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11250#issuecomment-1021554196
https://github.com/hail-is/hail/pull/11250#issuecomment-1021554196:105,Testability,test,test,105,"Can we follow up with a test that creates one job which echos its IP and port and then listens, then the test will try to curl the public IP and port?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11250#issuecomment-1021554196
https://github.com/hail-is/hail/pull/11265#issuecomment-1027174857:29,Availability,failure,failures,29,I think no. The frequency of failures is a bit lower than it was.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11265#issuecomment-1027174857
https://github.com/hail-is/hail/pull/11265#issuecomment-1027179803:48,Availability,failure,failures,48,"I'm fine with this, though I think frequency of failures is still relatively high. I have been hitting retry on PRs when i notice.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11265#issuecomment-1027179803
https://github.com/hail-is/hail/pull/11268#issuecomment-1022511402:84,Testability,log,log,84,"@patrick-schultz , shift = -1 can lead to some pretty ugly graphs when the range of log transformed y values is small (i.e. between 0 and 1); <img width=""1093"" alt=""Screen Shot 2022-01-26 at 2 12 03 PM"" src=""https://user-images.githubusercontent.com/13773586/151230782-3e930e56-f3c7-44f0-807c-6048bea0e1ee.png"">",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11268#issuecomment-1022511402
https://github.com/hail-is/hail/pull/11268#issuecomment-1022543883:117,Testability,log,log,117,"The negative 1 doesn't seem right, but we should probably give a warning or something when a user does this. I could log a warning telling user how many points were 0 and so weren't plotted?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11268#issuecomment-1022543883
https://github.com/hail-is/hail/pull/11268#issuecomment-1022547229:90,Testability,test,test,90,That seems good. Perhaps we could also suggest using `hl.plot.pdf` instead. Just about to test that out.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11268#issuecomment-1022547229
https://github.com/hail-is/hail/pull/11271#issuecomment-1022379980:169,Testability,test,tests,169,"Probably we should run the Grch37 and Grch38 parts of this in parallel, but reducing wall clock time by giving some more resources is also a good idea, as some of these tests have 10k partitions.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11271#issuecomment-1022379980
https://github.com/hail-is/hail/pull/11273#issuecomment-1022499548:60,Deployability,deploy,deploy,60,"Since this doesn't get tested by CI normally, running a dev deploy here: https://ci.hail.is/batches/403111. If it succeeds, we should feel good I think.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11273#issuecomment-1022499548
https://github.com/hail-is/hail/pull/11273#issuecomment-1022499548:23,Testability,test,tested,23,"Since this doesn't get tested by CI normally, running a dev deploy here: https://ci.hail.is/batches/403111. If it succeeds, we should feel good I think.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11273#issuecomment-1022499548
https://github.com/hail-is/hail/pull/11278#issuecomment-1023511163:40,Deployability,update,update,40,"I have to go, but what happens when you update the rows to 0. Does the trigger run? I presume the n_cancelled_creating_jobs stay at 0 because now the additions / subtractions are in sync?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11278#issuecomment-1023511163
https://github.com/hail-is/hail/pull/11293#issuecomment-1027295448:428,Integrability,depend,depend,428,"When python loads a file it runs everything at the top level. That means running statements like `import aiohttp`, `MY_CONSTANT = 5`, and `def foo: …`. So importing files can define functions, so they can be used later, but those functions are not run (how could they be?). By putting the imports inside the functions themselves, we defer the import of aiohttp from when the deploy_config is imported to when the functions that depend on `aiohttp` are actually used. If they are never used, `aiohttp` will never be imported! This is why it made `hailctl dev config list` much faster, since it doesn't need to use those functions.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11293#issuecomment-1027295448
https://github.com/hail-is/hail/pull/11293#issuecomment-1027295448:558,Modifiability,config,config,558,"When python loads a file it runs everything at the top level. That means running statements like `import aiohttp`, `MY_CONSTANT = 5`, and `def foo: …`. So importing files can define functions, so they can be used later, but those functions are not run (how could they be?). By putting the imports inside the functions themselves, we defer the import of aiohttp from when the deploy_config is imported to when the functions that depend on `aiohttp` are actually used. If they are never used, `aiohttp` will never be imported! This is why it made `hailctl dev config list` much faster, since it doesn't need to use those functions.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11293#issuecomment-1027295448
https://github.com/hail-is/hail/pull/11293#issuecomment-1027295448:12,Performance,load,loads,12,"When python loads a file it runs everything at the top level. That means running statements like `import aiohttp`, `MY_CONSTANT = 5`, and `def foo: …`. So importing files can define functions, so they can be used later, but those functions are not run (how could they be?). By putting the imports inside the functions themselves, we defer the import of aiohttp from when the deploy_config is imported to when the functions that depend on `aiohttp` are actually used. If they are never used, `aiohttp` will never be imported! This is why it made `hailctl dev config list` much faster, since it doesn't need to use those functions.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11293#issuecomment-1027295448
https://github.com/hail-is/hail/pull/11294#issuecomment-1024606310:66,Deployability,deploy,deploy,66,"I decided to try to do this in two passes since making changes to deploy logic always finnicky on its own. I think this does the right thing though. . Does build.yaml support a way to say ""depend on this step x if we are doing x at all""? Redeploying the website will have to happen after the `deploy` step runs in the future and publishes the latest version of the docs to hail-common.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11294#issuecomment-1024606310
https://github.com/hail-is/hail/pull/11294#issuecomment-1024606310:293,Deployability,deploy,deploy,293,"I decided to try to do this in two passes since making changes to deploy logic always finnicky on its own. I think this does the right thing though. . Does build.yaml support a way to say ""depend on this step x if we are doing x at all""? Redeploying the website will have to happen after the `deploy` step runs in the future and publishes the latest version of the docs to hail-common.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11294#issuecomment-1024606310
https://github.com/hail-is/hail/pull/11294#issuecomment-1024606310:189,Integrability,depend,depend,189,"I decided to try to do this in two passes since making changes to deploy logic always finnicky on its own. I think this does the right thing though. . Does build.yaml support a way to say ""depend on this step x if we are doing x at all""? Redeploying the website will have to happen after the `deploy` step runs in the future and publishes the latest version of the docs to hail-common.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11294#issuecomment-1024606310
https://github.com/hail-is/hail/pull/11294#issuecomment-1024606310:73,Testability,log,logic,73,"I decided to try to do this in two passes since making changes to deploy logic always finnicky on its own. I think this does the right thing though. . Does build.yaml support a way to say ""depend on this step x if we are doing x at all""? Redeploying the website will have to happen after the `deploy` step runs in the future and publishes the latest version of the docs to hail-common.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11294#issuecomment-1024606310
https://github.com/hail-is/hail/pull/11302#issuecomment-1026259006:7,Testability,test,tests,7,Do our tests pass with the flag on?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11302#issuecomment-1026259006
https://github.com/hail-is/hail/pull/11305#issuecomment-1028150772:0,Deployability,Deploy,Deploys,0,Deploys tend to be a live debugging experience when there are new changes anyway 😉,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11305#issuecomment-1028150772
https://github.com/hail-is/hail/pull/11306#issuecomment-1034147074:17,Availability,error,errors,17,Still some build errors coming from tests,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11306#issuecomment-1034147074
https://github.com/hail-is/hail/pull/11306#issuecomment-1034147074:36,Testability,test,tests,36,Still some build errors coming from tests,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11306#issuecomment-1034147074
https://github.com/hail-is/hail/pull/11306#issuecomment-1049052019:0,Testability,Benchmark,Benchmarks,0,Benchmarks:; https://gist.github.com/johnc1231/7f59fe3a1684f2dc6321eff2a3ec2841,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11306#issuecomment-1049052019
https://github.com/hail-is/hail/pull/11307#issuecomment-1050104675:394,Availability,error,error,394,"> Whoops, sorry this got dropped!. No problem. This wasn't important, just a potential ""nice to have"". > how changes like this could unintentionally affect things. This shouldn't change anything unless a user intentionally opts into using it to encode JSON. It was intended as a convenience: it's easy enough for a user to implement this themselves, but it might take a few rounds of trial and error to catch all the classes that need to be handled.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11307#issuecomment-1050104675
https://github.com/hail-is/hail/pull/11312#issuecomment-1029148692:49,Testability,Benchmark,Benchmark,49,```; $ hail-bench compare head.json branch.json; Benchmark Name Ratio Time 1 Time 2 Mem Ratio Mem 1 (MB) Mem 2 (MB); -------------- ----- ------ ------ --------- ---------- ----------; mt_group_by_memory_usage 97.3% 6.788 6.605 0.6% 135 1; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11312#issuecomment-1029148692
https://github.com/hail-is/hail/pull/11317#issuecomment-1030102740:66,Modifiability,refactor,refactoring,66,"I'm still figuring out what the abstractions should be here. This refactoring has resulted in the `apply_to_figure` method of most geoms looking very similar, but still with little differences. Reluctant to commit to a very stringent class hierarchy yet and didn't want to further complicate this PR, but other than `hline` and `vline`, feels close to a world where each geom just overrides `plot_one_group` and the general looping over groups is handled by the parent class.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11317#issuecomment-1030102740
https://github.com/hail-is/hail/pull/11321#issuecomment-1031552946:22,Availability,error,error,22,"I haven't tested this error message, as I'm not sure how to replicate the bug scenario, but I think it should work.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11321#issuecomment-1031552946
https://github.com/hail-is/hail/pull/11321#issuecomment-1031552946:28,Integrability,message,message,28,"I haven't tested this error message, as I'm not sure how to replicate the bug scenario, but I think it should work.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11321#issuecomment-1031552946
https://github.com/hail-is/hail/pull/11321#issuecomment-1031552946:10,Testability,test,tested,10,"I haven't tested this error message, as I'm not sure how to replicate the bug scenario, but I think it should work.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11321#issuecomment-1031552946
https://github.com/hail-is/hail/pull/11323#issuecomment-1041946188:10,Energy Efficiency,green,green,10,tests are green now,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11323#issuecomment-1041946188
https://github.com/hail-is/hail/pull/11323#issuecomment-1041946188:0,Testability,test,tests,0,tests are green now,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11323#issuecomment-1041946188
https://github.com/hail-is/hail/pull/11325#issuecomment-1033961699:88,Availability,redundant,redundant,88,The previous PR has merged. Could you remove the Stacked PR label and rebase / drop any redundant commits? I thought GitHub wouldn't show the extra diff at this point but *shrug*,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11325#issuecomment-1033961699
https://github.com/hail-is/hail/pull/11325#issuecomment-1033961699:88,Safety,redund,redundant,88,The previous PR has merged. Could you remove the Stacked PR label and rebase / drop any redundant commits? I thought GitHub wouldn't show the extra diff at this point but *shrug*,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11325#issuecomment-1033961699
https://github.com/hail-is/hail/pull/11328#issuecomment-1032604404:32,Availability,error,error,32,"Re testing, I think the primary error here isn't that the TypeInfo of i2b disagreed with the jvm, it's that `CodeInt.toB` returns a `Code[Byte]`, using an lir instruction with (wrong) TypeInfo Boolean. That should be much easier to catch with some basic typechecking. (Though agreed the fix should go in first.)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11328#issuecomment-1032604404
https://github.com/hail-is/hail/pull/11328#issuecomment-1032604404:3,Testability,test,testing,3,"Re testing, I think the primary error here isn't that the TypeInfo of i2b disagreed with the jvm, it's that `CodeInt.toB` returns a `Code[Byte]`, using an lir instruction with (wrong) TypeInfo Boolean. That should be much easier to catch with some basic typechecking. (Though agreed the fix should go in first.)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11328#issuecomment-1032604404
https://github.com/hail-is/hail/pull/11329#issuecomment-1032033650:81,Modifiability,variab,variables,81,"My changes [are in `main`](https://github.com/hail-is/hail/blob/main/infra/azure/variables.tf#L16), so I think as long as you don't have acr_sku specifically set it should be fine. I anticipate that you'll hit the same issues I hit where it wants to recreate everything though. It seemed to be OK when I did that. We really gotta get the remote state tracking working.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11329#issuecomment-1032033650
https://github.com/hail-is/hail/pull/11329#issuecomment-1032033995:14,Availability,error,error,14,What does the error look like in Python? Can we add that to transient_errors?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11329#issuecomment-1032033995
https://github.com/hail-is/hail/pull/11345#issuecomment-1057654251:267,Availability,error,errors,267,There's something fishy happening in the service backend. It keeps timing out the same three test jobs. We'll need to do a little grep+diff to figure which tests are getting started but not terminating. I suspect we'll need to either skip something or ensure that it errors early.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11345#issuecomment-1057654251
https://github.com/hail-is/hail/pull/11345#issuecomment-1057654251:93,Testability,test,test,93,There's something fishy happening in the service backend. It keeps timing out the same three test jobs. We'll need to do a little grep+diff to figure which tests are getting started but not terminating. I suspect we'll need to either skip something or ensure that it errors early.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11345#issuecomment-1057654251
https://github.com/hail-is/hail/pull/11345#issuecomment-1057654251:156,Testability,test,tests,156,There's something fishy happening in the service backend. It keeps timing out the same three test jobs. We'll need to do a little grep+diff to figure which tests are getting started but not terminating. I suspect we'll need to either skip something or ensure that it errors early.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11345#issuecomment-1057654251
https://github.com/hail-is/hail/pull/11345#issuecomment-1057656473:126,Testability,log,logic,126,I'm also seeing this in my PR that removes most spark-only annotations (in favor of fails_service). I think we must have some logic that spins forever.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11345#issuecomment-1057656473
https://github.com/hail-is/hail/pull/11345#issuecomment-1057659976:120,Testability,test,test,120,"Dismissed the review so that CI would focus on other PRs, but feel free to re-enable. We can chat tomorrow about how to test the query service with a custom JAR",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11345#issuecomment-1057659976
https://github.com/hail-is/hail/pull/11345#issuecomment-1059604289:110,Availability,ping,ping,110,"@chrisvittal, these tests actually pass the local backend. I changed the tests to reflect this, but wanted to ping you to make sure that seems reasonable.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11345#issuecomment-1059604289
https://github.com/hail-is/hail/pull/11345#issuecomment-1059604289:20,Testability,test,tests,20,"@chrisvittal, these tests actually pass the local backend. I changed the tests to reflect this, but wanted to ping you to make sure that seems reasonable.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11345#issuecomment-1059604289
https://github.com/hail-is/hail/pull/11345#issuecomment-1059604289:73,Testability,test,tests,73,"@chrisvittal, these tests actually pass the local backend. I changed the tests to reflect this, but wanted to ping you to make sure that seems reasonable.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11345#issuecomment-1059604289
https://github.com/hail-is/hail/pull/11345#issuecomment-1059678104:22,Deployability,release,release,22,"Chris, could you do a release next week to get this fix out? Thank you much!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11345#issuecomment-1059678104
https://github.com/hail-is/hail/pull/11346#issuecomment-1036284520:271,Availability,down,down,271,"Now that we have the SQL query monitoring, I would love to also see just the simple comparison of the total number of queries we perform over a 1-minute period under high load. We have the tools now to see just what chunk of overall database communication we are cutting down on, which is an achievement in itself. Just need to run the test!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11346#issuecomment-1036284520
https://github.com/hail-is/hail/pull/11346#issuecomment-1036284520:31,Energy Efficiency,monitor,monitoring,31,"Now that we have the SQL query monitoring, I would love to also see just the simple comparison of the total number of queries we perform over a 1-minute period under high load. We have the tools now to see just what chunk of overall database communication we are cutting down on, which is an achievement in itself. Just need to run the test!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11346#issuecomment-1036284520
https://github.com/hail-is/hail/pull/11346#issuecomment-1036284520:129,Performance,perform,perform,129,"Now that we have the SQL query monitoring, I would love to also see just the simple comparison of the total number of queries we perform over a 1-minute period under high load. We have the tools now to see just what chunk of overall database communication we are cutting down on, which is an achievement in itself. Just need to run the test!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11346#issuecomment-1036284520
https://github.com/hail-is/hail/pull/11346#issuecomment-1036284520:171,Performance,load,load,171,"Now that we have the SQL query monitoring, I would love to also see just the simple comparison of the total number of queries we perform over a 1-minute period under high load. We have the tools now to see just what chunk of overall database communication we are cutting down on, which is an achievement in itself. Just need to run the test!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11346#issuecomment-1036284520
https://github.com/hail-is/hail/pull/11346#issuecomment-1036284520:336,Testability,test,test,336,"Now that we have the SQL query monitoring, I would love to also see just the simple comparison of the total number of queries we perform over a 1-minute period under high load. We have the tools now to see just what chunk of overall database communication we are cutting down on, which is an achievement in itself. Just need to run the test!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11346#issuecomment-1036284520
https://github.com/hail-is/hail/pull/11346#issuecomment-1036284520:77,Usability,simpl,simple,77,"Now that we have the SQL query monitoring, I would love to also see just the simple comparison of the total number of queries we perform over a 1-minute period under high load. We have the tools now to see just what chunk of overall database communication we are cutting down on, which is an achievement in itself. Just need to run the test!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11346#issuecomment-1036284520
https://github.com/hail-is/hail/pull/11352#issuecomment-1035565057:79,Performance,load,load,79,"This is also my first migration PR so please take a very critical eye! I ran a load test on my namespace and noticed that while previously it looked like we only get deadlocks in MJC, the deadlock that this uncovered might be between MJC and MJS/SJ. Happy to provide details about the following deadlock to decide whether it's something we'd want to lump in here or tackle all at once.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1035565057
https://github.com/hail-is/hail/pull/11352#issuecomment-1035565057:84,Testability,test,test,84,"This is also my first migration PR so please take a very critical eye! I ran a load test on my namespace and noticed that while previously it looked like we only get deadlocks in MJC, the deadlock that this uncovered might be between MJC and MJS/SJ. Happy to provide details about the following deadlock to decide whether it's something we'd want to lump in here or tackle all at once.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1035565057
https://github.com/hail-is/hail/pull/11352#issuecomment-1035571407:185,Energy Efficiency,monitor,monitoring,185,"<img width=""1841"" alt=""Screen Shot 2022-02-10 at 4 59 10 PM"" src=""https://user-images.githubusercontent.com/24440116/153503683-a94528e0-769b-4dd9-bdb9-26867de5c445.png"">; The SQL query monitoring that @vrautela added makes this really stark: the MJC and MJS SQL procedures are having to retry multiple times due to deadlocks, while the deactivate instance procedure is just slow for some reason. (the left side is the average duration of the HTTP endpoint on the driver and the right is the average runtime of the corresponding SQL query happening within the endpoint)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1035571407
https://github.com/hail-is/hail/pull/11352#issuecomment-1036214712:506,Availability,error,error,506,"I still haven't looked at the code carefully, but one thing I'd say with database migrations is to make sure that your incremental change won't make the next change you want to make in the future more difficult or impossible. I don't think that's the case here, but keep in mind that this migration is O(n_batches). Anything that is O(n_jobs) right now is not great on hail-vdc as it could take hours to complete. How big of a lift is it to the next change you wanted to try out? Where is the new deadlock error coming from?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1036214712
https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116:609,Deployability,update,updated,609,"Here's the deadlock that I'm observing now on this branch. I don't have a great understanding of what's happening. I believe Transaction 1 to be [here](https://github.com/hail-is/hail/blob/40d8882470af71f2d08dd1aa6b723357ca8a1245/batch/sql/estimated-current.sql#L1186-L1188) in MJC, and Transaction 2 to be [here](https://github.com/hail-is/hail/blob/40d8882470af71f2d08dd1aa6b723357ca8a1245/batch/sql/estimated-current.sql#L449-L453) in the jobs_after_update trigger. Looking at the second transaction in context now, it looks like that is probably another MJC transaction toward the end of its run after it updated the jobs table. I think it would make sense then that T2 would still hold the lock for `instances_free_cores_mcpu` but I'm not sure where the contention for `batch_inst_coll_cancellable_resources` is coming from, as I don't see how T1 could be holding any form of lock on it. Either way it seems like how we use these tables is similarly a mess. ```; *** (1) TRANSACTION:; TRANSACTION 644409381, ACTIVE 0 sec starting index read; mysql tables in use 1, locked 1; LOCK WAIT 39 lock struct(s), heap size 3520, 50 row lock(s), undo log entries 28; MySQL thread id 1941960, OS thread handle 140297909716736, query id 1869168359 10.32.3.8 dgoldste updating; UPDATE instances_free_cores_mcpu; SET free_cores_mcpu = free_cores_mcpu + cur_cores_mcpu; WHERE instances_free_cores_mcpu.name = in_instance_name; *** (1) WAITING FOR THIS LOCK TO BE GRANTED:; RECORD LOCKS space id 1263041 page no 3 n bits 264 index PRIMARY of table `dgoldste`.`instances_free_cores_mcpu` trx i; d 644409381 lock_mode X locks rec but not gap waiting; Record lock, heap no 192 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (tot; al 36 bytes);; 1: len 6; hex 00002668e81a; asc &h ;;; 2: len 7; hex 710000071136b3; asc q 6 ;;; 3: len 4; hex 800029fe; asc ) ;;. *** (2) TRANSACTION:; TRANSACTI",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116
https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116:1270,Deployability,UPDATE,UPDATE,1270,"//github.com/hail-is/hail/blob/40d8882470af71f2d08dd1aa6b723357ca8a1245/batch/sql/estimated-current.sql#L449-L453) in the jobs_after_update trigger. Looking at the second transaction in context now, it looks like that is probably another MJC transaction toward the end of its run after it updated the jobs table. I think it would make sense then that T2 would still hold the lock for `instances_free_cores_mcpu` but I'm not sure where the contention for `batch_inst_coll_cancellable_resources` is coming from, as I don't see how T1 could be holding any form of lock on it. Either way it seems like how we use these tables is similarly a mess. ```; *** (1) TRANSACTION:; TRANSACTION 644409381, ACTIVE 0 sec starting index read; mysql tables in use 1, locked 1; LOCK WAIT 39 lock struct(s), heap size 3520, 50 row lock(s), undo log entries 28; MySQL thread id 1941960, OS thread handle 140297909716736, query id 1869168359 10.32.3.8 dgoldste updating; UPDATE instances_free_cores_mcpu; SET free_cores_mcpu = free_cores_mcpu + cur_cores_mcpu; WHERE instances_free_cores_mcpu.name = in_instance_name; *** (1) WAITING FOR THIS LOCK TO BE GRANTED:; RECORD LOCKS space id 1263041 page no 3 n bits 264 index PRIMARY of table `dgoldste`.`instances_free_cores_mcpu` trx i; d 644409381 lock_mode X locks rec but not gap waiting; Record lock, heap no 192 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (tot; al 36 bytes);; 1: len 6; hex 00002668e81a; asc &h ;;; 2: len 7; hex 710000071136b3; asc q 6 ;;; 3: len 4; hex 800029fe; asc ) ;;. *** (2) TRANSACTION:; TRANSACTION 644409370, ACTIVE 0 sec inserting; mysql tables in use 6, locked 6; 39 lock struct(s), heap size 3520, 51 row lock(s), undo log entries 30; MySQL thread id 1941930, OS thread handle 140298159240960, query id 1869168731 10.32.3.8 dgoldste update; INSERT INTO batch_inst_coll_cancellable_resources (batch_id, inst_coll,",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116
https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116:2242,Deployability,update,update,2242,"s_mcpu = free_cores_mcpu + cur_cores_mcpu; WHERE instances_free_cores_mcpu.name = in_instance_name; *** (1) WAITING FOR THIS LOCK TO BE GRANTED:; RECORD LOCKS space id 1263041 page no 3 n bits 264 index PRIMARY of table `dgoldste`.`instances_free_cores_mcpu` trx i; d 644409381 lock_mode X locks rec but not gap waiting; Record lock, heap no 192 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (tot; al 36 bytes);; 1: len 6; hex 00002668e81a; asc &h ;;; 2: len 7; hex 710000071136b3; asc q 6 ;;; 3: len 4; hex 800029fe; asc ) ;;. *** (2) TRANSACTION:; TRANSACTION 644409370, ACTIVE 0 sec inserting; mysql tables in use 6, locked 6; 39 lock struct(s), heap size 3520, 51 row lock(s), undo log entries 30; MySQL thread id 1941930, OS thread handle 140298159240960, query id 1869168731 10.32.3.8 dgoldste update; INSERT INTO batch_inst_coll_cancellable_resources (batch_id, inst_coll, token, n_running_cancellable_jobs, running_can; cellable_cores_mcpu); VALUES (OLD.batch_id, OLD.inst_coll, rand_token, -1, -OLD.cores_mcpu); ON DUPLICATE KEY UPDATE; n_running_cancellable_jobs = n_running_cancellable_jobs - 1,; running_cancellable_cores_mcpu = running_cancellable_cores_mcpu - OLD.cores_mcpu; *** (2) HOLDS THE LOCK(S):; RECORD LOCKS space id 1263041 page no 3 n bits 264 index PRIMARY of table `dgoldste`.`instances_free_cores_mcpu` trx i; d 644409370 lock_mode X locks rec but not gap; Record lock, heap no 192 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (tot; al 36 bytes);; 1: len 6; hex 00002668e81a; asc &h ;;; 2: len 7; hex 710000071136b3; asc q 6 ;;; 3: len 4; hex 800029fe; asc ) ;;. *** (2) WAITING FOR THIS LOCK TO BE GRANTED:; RECORD LOCKS space id 1263027 page no 15 n bits 232 index PRIMARY of table `dgoldste`.`batch_inst_coll_cancellabl",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116
https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116:2480,Deployability,UPDATE,UPDATE,2480,"e `dgoldste`.`instances_free_cores_mcpu` trx i; d 644409381 lock_mode X locks rec but not gap waiting; Record lock, heap no 192 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (tot; al 36 bytes);; 1: len 6; hex 00002668e81a; asc &h ;;; 2: len 7; hex 710000071136b3; asc q 6 ;;; 3: len 4; hex 800029fe; asc ) ;;. *** (2) TRANSACTION:; TRANSACTION 644409370, ACTIVE 0 sec inserting; mysql tables in use 6, locked 6; 39 lock struct(s), heap size 3520, 51 row lock(s), undo log entries 30; MySQL thread id 1941930, OS thread handle 140298159240960, query id 1869168731 10.32.3.8 dgoldste update; INSERT INTO batch_inst_coll_cancellable_resources (batch_id, inst_coll, token, n_running_cancellable_jobs, running_can; cellable_cores_mcpu); VALUES (OLD.batch_id, OLD.inst_coll, rand_token, -1, -OLD.cores_mcpu); ON DUPLICATE KEY UPDATE; n_running_cancellable_jobs = n_running_cancellable_jobs - 1,; running_cancellable_cores_mcpu = running_cancellable_cores_mcpu - OLD.cores_mcpu; *** (2) HOLDS THE LOCK(S):; RECORD LOCKS space id 1263041 page no 3 n bits 264 index PRIMARY of table `dgoldste`.`instances_free_cores_mcpu` trx i; d 644409370 lock_mode X locks rec but not gap; Record lock, heap no 192 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (tot; al 36 bytes);; 1: len 6; hex 00002668e81a; asc &h ;;; 2: len 7; hex 710000071136b3; asc q 6 ;;; 3: len 4; hex 800029fe; asc ) ;;. *** (2) WAITING FOR THIS LOCK TO BE GRANTED:; RECORD LOCKS space id 1263027 page no 15 n bits 232 index PRIMARY of table `dgoldste`.`batch_inst_coll_cancellable_res; ources` trx id 644409370 lock_mode X locks rec but not gap waiting; Record lock, heap no 23 PHYSICAL RECORD: n_fields 10; compact format; info bits 0; 0: len 8; hex 8000000000000007; asc ;;; 1: len 8; hex 73746",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116
https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116:1146,Testability,log,log,1146," happening. I believe Transaction 1 to be [here](https://github.com/hail-is/hail/blob/40d8882470af71f2d08dd1aa6b723357ca8a1245/batch/sql/estimated-current.sql#L1186-L1188) in MJC, and Transaction 2 to be [here](https://github.com/hail-is/hail/blob/40d8882470af71f2d08dd1aa6b723357ca8a1245/batch/sql/estimated-current.sql#L449-L453) in the jobs_after_update trigger. Looking at the second transaction in context now, it looks like that is probably another MJC transaction toward the end of its run after it updated the jobs table. I think it would make sense then that T2 would still hold the lock for `instances_free_cores_mcpu` but I'm not sure where the contention for `batch_inst_coll_cancellable_resources` is coming from, as I don't see how T1 could be holding any form of lock on it. Either way it seems like how we use these tables is similarly a mess. ```; *** (1) TRANSACTION:; TRANSACTION 644409381, ACTIVE 0 sec starting index read; mysql tables in use 1, locked 1; LOCK WAIT 39 lock struct(s), heap size 3520, 50 row lock(s), undo log entries 28; MySQL thread id 1941960, OS thread handle 140297909716736, query id 1869168359 10.32.3.8 dgoldste updating; UPDATE instances_free_cores_mcpu; SET free_cores_mcpu = free_cores_mcpu + cur_cores_mcpu; WHERE instances_free_cores_mcpu.name = in_instance_name; *** (1) WAITING FOR THIS LOCK TO BE GRANTED:; RECORD LOCKS space id 1263041 page no 3 n bits 264 index PRIMARY of table `dgoldste`.`instances_free_cores_mcpu` trx i; d 644409381 lock_mode X locks rec but not gap waiting; Record lock, heap no 192 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (tot; al 36 bytes);; 1: len 6; hex 00002668e81a; asc &h ;;; 2: len 7; hex 710000071136b3; asc q 6 ;;; 3: len 4; hex 800029fe; asc ) ;;. *** (2) TRANSACTION:; TRANSACTION 644409370, ACTIVE 0 sec inserting; mysql tables in use 6, locked 6; 39 lock struct(s), heap size 35",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116
https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116:2128,Testability,log,log,2128," struct(s), heap size 3520, 50 row lock(s), undo log entries 28; MySQL thread id 1941960, OS thread handle 140297909716736, query id 1869168359 10.32.3.8 dgoldste updating; UPDATE instances_free_cores_mcpu; SET free_cores_mcpu = free_cores_mcpu + cur_cores_mcpu; WHERE instances_free_cores_mcpu.name = in_instance_name; *** (1) WAITING FOR THIS LOCK TO BE GRANTED:; RECORD LOCKS space id 1263041 page no 3 n bits 264 index PRIMARY of table `dgoldste`.`instances_free_cores_mcpu` trx i; d 644409381 lock_mode X locks rec but not gap waiting; Record lock, heap no 192 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (tot; al 36 bytes);; 1: len 6; hex 00002668e81a; asc &h ;;; 2: len 7; hex 710000071136b3; asc q 6 ;;; 3: len 4; hex 800029fe; asc ) ;;. *** (2) TRANSACTION:; TRANSACTION 644409370, ACTIVE 0 sec inserting; mysql tables in use 6, locked 6; 39 lock struct(s), heap size 3520, 51 row lock(s), undo log entries 30; MySQL thread id 1941930, OS thread handle 140298159240960, query id 1869168731 10.32.3.8 dgoldste update; INSERT INTO batch_inst_coll_cancellable_resources (batch_id, inst_coll, token, n_running_cancellable_jobs, running_can; cellable_cores_mcpu); VALUES (OLD.batch_id, OLD.inst_coll, rand_token, -1, -OLD.cores_mcpu); ON DUPLICATE KEY UPDATE; n_running_cancellable_jobs = n_running_cancellable_jobs - 1,; running_cancellable_cores_mcpu = running_cancellable_cores_mcpu - OLD.cores_mcpu; *** (2) HOLDS THE LOCK(S):; RECORD LOCKS space id 1263041 page no 3 n bits 264 index PRIMARY of table `dgoldste`.`instances_free_cores_mcpu` trx i; d 644409370 lock_mode X locks rec but not gap; Record lock, heap no 192 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (tot; al 36 bytes);; 1: len 6; hex 00002668e81a; asc &h ;;; 2: len 7; hex 7",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116
https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116:1141,Usability,undo,undo,1141," happening. I believe Transaction 1 to be [here](https://github.com/hail-is/hail/blob/40d8882470af71f2d08dd1aa6b723357ca8a1245/batch/sql/estimated-current.sql#L1186-L1188) in MJC, and Transaction 2 to be [here](https://github.com/hail-is/hail/blob/40d8882470af71f2d08dd1aa6b723357ca8a1245/batch/sql/estimated-current.sql#L449-L453) in the jobs_after_update trigger. Looking at the second transaction in context now, it looks like that is probably another MJC transaction toward the end of its run after it updated the jobs table. I think it would make sense then that T2 would still hold the lock for `instances_free_cores_mcpu` but I'm not sure where the contention for `batch_inst_coll_cancellable_resources` is coming from, as I don't see how T1 could be holding any form of lock on it. Either way it seems like how we use these tables is similarly a mess. ```; *** (1) TRANSACTION:; TRANSACTION 644409381, ACTIVE 0 sec starting index read; mysql tables in use 1, locked 1; LOCK WAIT 39 lock struct(s), heap size 3520, 50 row lock(s), undo log entries 28; MySQL thread id 1941960, OS thread handle 140297909716736, query id 1869168359 10.32.3.8 dgoldste updating; UPDATE instances_free_cores_mcpu; SET free_cores_mcpu = free_cores_mcpu + cur_cores_mcpu; WHERE instances_free_cores_mcpu.name = in_instance_name; *** (1) WAITING FOR THIS LOCK TO BE GRANTED:; RECORD LOCKS space id 1263041 page no 3 n bits 264 index PRIMARY of table `dgoldste`.`instances_free_cores_mcpu` trx i; d 644409381 lock_mode X locks rec but not gap waiting; Record lock, heap no 192 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (tot; al 36 bytes);; 1: len 6; hex 00002668e81a; asc &h ;;; 2: len 7; hex 710000071136b3; asc q 6 ;;; 3: len 4; hex 800029fe; asc ) ;;. *** (2) TRANSACTION:; TRANSACTION 644409370, ACTIVE 0 sec inserting; mysql tables in use 6, locked 6; 39 lock struct(s), heap size 35",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116
https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116:2123,Usability,undo,undo,2123," struct(s), heap size 3520, 50 row lock(s), undo log entries 28; MySQL thread id 1941960, OS thread handle 140297909716736, query id 1869168359 10.32.3.8 dgoldste updating; UPDATE instances_free_cores_mcpu; SET free_cores_mcpu = free_cores_mcpu + cur_cores_mcpu; WHERE instances_free_cores_mcpu.name = in_instance_name; *** (1) WAITING FOR THIS LOCK TO BE GRANTED:; RECORD LOCKS space id 1263041 page no 3 n bits 264 index PRIMARY of table `dgoldste`.`instances_free_cores_mcpu` trx i; d 644409381 lock_mode X locks rec but not gap waiting; Record lock, heap no 192 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (tot; al 36 bytes);; 1: len 6; hex 00002668e81a; asc &h ;;; 2: len 7; hex 710000071136b3; asc q 6 ;;; 3: len 4; hex 800029fe; asc ) ;;. *** (2) TRANSACTION:; TRANSACTION 644409370, ACTIVE 0 sec inserting; mysql tables in use 6, locked 6; 39 lock struct(s), heap size 3520, 51 row lock(s), undo log entries 30; MySQL thread id 1941930, OS thread handle 140298159240960, query id 1869168731 10.32.3.8 dgoldste update; INSERT INTO batch_inst_coll_cancellable_resources (batch_id, inst_coll, token, n_running_cancellable_jobs, running_can; cellable_cores_mcpu); VALUES (OLD.batch_id, OLD.inst_coll, rand_token, -1, -OLD.cores_mcpu); ON DUPLICATE KEY UPDATE; n_running_cancellable_jobs = n_running_cancellable_jobs - 1,; running_cancellable_cores_mcpu = running_cancellable_cores_mcpu - OLD.cores_mcpu; *** (2) HOLDS THE LOCK(S):; RECORD LOCKS space id 1263041 page no 3 n bits 264 index PRIMARY of table `dgoldste`.`instances_free_cores_mcpu` trx i; d 644409370 lock_mode X locks rec but not gap; Record lock, heap no 192 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (tot; al 36 bytes);; 1: len 6; hex 00002668e81a; asc &h ;;; 2: len 7; hex 7",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116
https://github.com/hail-is/hail/pull/11352#issuecomment-1039618265:132,Availability,error,errors,132,"OK, this is now higher priority for me. The Query-on-Batch tests are absolutely hammering the database with huge spikes in deadlock errors during working hours (when deploys trigger tests).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1039618265
https://github.com/hail-is/hail/pull/11352#issuecomment-1039618265:166,Deployability,deploy,deploys,166,"OK, this is now higher priority for me. The Query-on-Batch tests are absolutely hammering the database with huge spikes in deadlock errors during working hours (when deploys trigger tests).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1039618265
https://github.com/hail-is/hail/pull/11352#issuecomment-1039618265:59,Testability,test,tests,59,"OK, this is now higher priority for me. The Query-on-Batch tests are absolutely hammering the database with huge spikes in deadlock errors during working hours (when deploys trigger tests).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1039618265
https://github.com/hail-is/hail/pull/11352#issuecomment-1039618265:182,Testability,test,tests,182,"OK, this is now higher priority for me. The Query-on-Batch tests are absolutely hammering the database with huge spikes in deadlock errors during working hours (when deploys trigger tests).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1039618265
https://github.com/hail-is/hail/pull/11352#issuecomment-1039620995:37,Availability,error,errors,37,"I don't know how to fix the deadlock errors. But for context, the next change Daniel had in mind is to have a table with the n_jobs counts (n_pending, n_failed, etc.) as well as time_completed and then use aggregation queries when the batch state is needed in the Python services. The time the batch is completed is just taken as the latest timestamp from the tokenized table.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1039620995
https://github.com/hail-is/hail/pull/11352#issuecomment-1039624594:7,Availability,down,down,7,I went down that route once before and the main issue is how to trigger the change in batch state to completed. I couldn't figure out how to do that correctly and efficiently.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1039624594
https://github.com/hail-is/hail/pull/11352#issuecomment-1039624594:163,Energy Efficiency,efficient,efficiently,163,I went down that route once before and the main issue is how to trigger the change in batch state to completed. I couldn't figure out how to do that correctly and efficiently.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1039624594
https://github.com/hail-is/hail/pull/11352#issuecomment-1039624594:17,Integrability,rout,route,17,I went down that route once before and the main issue is how to trigger the change in batch state to completed. I couldn't figure out how to do that correctly and efficiently.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1039624594
https://github.com/hail-is/hail/pull/11352#issuecomment-1039642916:200,Availability,down,down,200,"In particular, isn't it possible that you have the n-1th and nth job racing to complete. Everyone else is already done. Call the n-1th job's transaction T1 and the nth job's transaction T2. Both race down to this statement in MJC:; ```; UPDATE batches; SET time_completed = new_timestamp,; `state` = 'complete'; WHERE id = in_batch_id AND n_completed = batches.n_jobs;; ```. That will now need to have a sum(n_completed) over all tokens. The isolation level is repeatable read. Assume T1 and T2 generate non equal tokens. T1 and T2 may both snapshot the state of the database before either T1 or T2 executes. T1 and T2 will necessarily see the changes they've made (which affect distinct rows because they have distinct tokens), but neither is required to see the changes the other has made. I think the only way to guarantee that at least one of T1 or T2 sees the database with sum(n_completed) == n_jobs is for both of them to LOCK IN SHARE MODE when doing the sum(n_completed). That will cause lock contention. Maybe that's OK? In the worst case you could have this happen:. 1. Job 1 executes all the way to just before the sum(n_completed).; 2. Job 2 executes all the way to modifying the volatile state.; 3. Job 1 blocks waiting for Job 2 to modify the volatile state.; 4. Job 3 executes all the way to modifying the volatile state.; 5. Job 1 and 2 now wait for Job 3 to modifying the volatile state.; 6. ...; 7. Job 1, 2, 3, n-1 now all wait for Job n to modify the volatile state.; 8. Job 1...n finally execute the sum, all in parallel. I guess that's not terrible, it just means that the latency of Job 1 is extended as long as other jobs can race in before it grabs a shared lock on all the rows.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1039642916
https://github.com/hail-is/hail/pull/11352#issuecomment-1039642916:237,Deployability,UPDATE,UPDATE,237,"In particular, isn't it possible that you have the n-1th and nth job racing to complete. Everyone else is already done. Call the n-1th job's transaction T1 and the nth job's transaction T2. Both race down to this statement in MJC:; ```; UPDATE batches; SET time_completed = new_timestamp,; `state` = 'complete'; WHERE id = in_batch_id AND n_completed = batches.n_jobs;; ```. That will now need to have a sum(n_completed) over all tokens. The isolation level is repeatable read. Assume T1 and T2 generate non equal tokens. T1 and T2 may both snapshot the state of the database before either T1 or T2 executes. T1 and T2 will necessarily see the changes they've made (which affect distinct rows because they have distinct tokens), but neither is required to see the changes the other has made. I think the only way to guarantee that at least one of T1 or T2 sees the database with sum(n_completed) == n_jobs is for both of them to LOCK IN SHARE MODE when doing the sum(n_completed). That will cause lock contention. Maybe that's OK? In the worst case you could have this happen:. 1. Job 1 executes all the way to just before the sum(n_completed).; 2. Job 2 executes all the way to modifying the volatile state.; 3. Job 1 blocks waiting for Job 2 to modify the volatile state.; 4. Job 3 executes all the way to modifying the volatile state.; 5. Job 1 and 2 now wait for Job 3 to modifying the volatile state.; 6. ...; 7. Job 1, 2, 3, n-1 now all wait for Job n to modify the volatile state.; 8. Job 1...n finally execute the sum, all in parallel. I guess that's not terrible, it just means that the latency of Job 1 is extended as long as other jobs can race in before it grabs a shared lock on all the rows.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1039642916
https://github.com/hail-is/hail/pull/11352#issuecomment-1039642916:1616,Modifiability,extend,extended,1616,"In particular, isn't it possible that you have the n-1th and nth job racing to complete. Everyone else is already done. Call the n-1th job's transaction T1 and the nth job's transaction T2. Both race down to this statement in MJC:; ```; UPDATE batches; SET time_completed = new_timestamp,; `state` = 'complete'; WHERE id = in_batch_id AND n_completed = batches.n_jobs;; ```. That will now need to have a sum(n_completed) over all tokens. The isolation level is repeatable read. Assume T1 and T2 generate non equal tokens. T1 and T2 may both snapshot the state of the database before either T1 or T2 executes. T1 and T2 will necessarily see the changes they've made (which affect distinct rows because they have distinct tokens), but neither is required to see the changes the other has made. I think the only way to guarantee that at least one of T1 or T2 sees the database with sum(n_completed) == n_jobs is for both of them to LOCK IN SHARE MODE when doing the sum(n_completed). That will cause lock contention. Maybe that's OK? In the worst case you could have this happen:. 1. Job 1 executes all the way to just before the sum(n_completed).; 2. Job 2 executes all the way to modifying the volatile state.; 3. Job 1 blocks waiting for Job 2 to modify the volatile state.; 4. Job 3 executes all the way to modifying the volatile state.; 5. Job 1 and 2 now wait for Job 3 to modifying the volatile state.; 6. ...; 7. Job 1, 2, 3, n-1 now all wait for Job n to modify the volatile state.; 8. Job 1...n finally execute the sum, all in parallel. I guess that's not terrible, it just means that the latency of Job 1 is extended as long as other jobs can race in before it grabs a shared lock on all the rows.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1039642916
https://github.com/hail-is/hail/pull/11352#issuecomment-1039642916:1596,Performance,latency,latency,1596,"In particular, isn't it possible that you have the n-1th and nth job racing to complete. Everyone else is already done. Call the n-1th job's transaction T1 and the nth job's transaction T2. Both race down to this statement in MJC:; ```; UPDATE batches; SET time_completed = new_timestamp,; `state` = 'complete'; WHERE id = in_batch_id AND n_completed = batches.n_jobs;; ```. That will now need to have a sum(n_completed) over all tokens. The isolation level is repeatable read. Assume T1 and T2 generate non equal tokens. T1 and T2 may both snapshot the state of the database before either T1 or T2 executes. T1 and T2 will necessarily see the changes they've made (which affect distinct rows because they have distinct tokens), but neither is required to see the changes the other has made. I think the only way to guarantee that at least one of T1 or T2 sees the database with sum(n_completed) == n_jobs is for both of them to LOCK IN SHARE MODE when doing the sum(n_completed). That will cause lock contention. Maybe that's OK? In the worst case you could have this happen:. 1. Job 1 executes all the way to just before the sum(n_completed).; 2. Job 2 executes all the way to modifying the volatile state.; 3. Job 1 blocks waiting for Job 2 to modify the volatile state.; 4. Job 3 executes all the way to modifying the volatile state.; 5. Job 1 and 2 now wait for Job 3 to modifying the volatile state.; 6. ...; 7. Job 1, 2, 3, n-1 now all wait for Job n to modify the volatile state.; 8. Job 1...n finally execute the sum, all in parallel. I guess that's not terrible, it just means that the latency of Job 1 is extended as long as other jobs can race in before it grabs a shared lock on all the rows.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1039642916
https://github.com/hail-is/hail/pull/11352#issuecomment-1039648911:40,Deployability,update,update,40,"I was thinking we would get rid of that update completely in MJC. If you want to know the state or the time completed, then you query the tokenized table. We won't store these values explicitly.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1039648911
https://github.com/hail-is/hail/pull/11352#issuecomment-1039672959:371,Availability,down,down,371,"Oh, interesting idea Jackie. It has always bothered me that the batches state is duplicated as both the state column and the four job state count columns. @daniel-goldstein , responding specifically to your point about the new deadlock. I agree, that seems strange. I'd bump up the number of tokens and hope that contention for batch_inst_coll_cancellable_resources goes down.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1039672959
https://github.com/hail-is/hail/pull/11352#issuecomment-1040809121:139,Deployability,update,updated,139,"It is mighty fishy that both azure and google failed the callback test. What are we missing? If MJC returns, then the database was clearly updated. Subsequent DB queries should see those changes. total_jobs_in_batch won't change during the lifetime of the batch, so that should be correct (though we should probably LOCK IN SHARE MODE anyway). Assuming I'm reading the [reference manual](https://dev.mysql.com/doc/refman/5.7/en/innodb-consistent-read.html) correctly, that select should see the result of the UPDATE *or a later state*. The updates to a single row are serial. So there must exist a transaction that takes it from n_jobs-1 to n_jobs. That transaction thus must see n_jobs for new_n_completed. That transaction thus ought to update batches. Once that transaction is committed the subsequent query for notification should see the changes...",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1040809121
https://github.com/hail-is/hail/pull/11352#issuecomment-1040809121:509,Deployability,UPDATE,UPDATE,509,"It is mighty fishy that both azure and google failed the callback test. What are we missing? If MJC returns, then the database was clearly updated. Subsequent DB queries should see those changes. total_jobs_in_batch won't change during the lifetime of the batch, so that should be correct (though we should probably LOCK IN SHARE MODE anyway). Assuming I'm reading the [reference manual](https://dev.mysql.com/doc/refman/5.7/en/innodb-consistent-read.html) correctly, that select should see the result of the UPDATE *or a later state*. The updates to a single row are serial. So there must exist a transaction that takes it from n_jobs-1 to n_jobs. That transaction thus must see n_jobs for new_n_completed. That transaction thus ought to update batches. Once that transaction is committed the subsequent query for notification should see the changes...",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1040809121
https://github.com/hail-is/hail/pull/11352#issuecomment-1040809121:540,Deployability,update,updates,540,"It is mighty fishy that both azure and google failed the callback test. What are we missing? If MJC returns, then the database was clearly updated. Subsequent DB queries should see those changes. total_jobs_in_batch won't change during the lifetime of the batch, so that should be correct (though we should probably LOCK IN SHARE MODE anyway). Assuming I'm reading the [reference manual](https://dev.mysql.com/doc/refman/5.7/en/innodb-consistent-read.html) correctly, that select should see the result of the UPDATE *or a later state*. The updates to a single row are serial. So there must exist a transaction that takes it from n_jobs-1 to n_jobs. That transaction thus must see n_jobs for new_n_completed. That transaction thus ought to update batches. Once that transaction is committed the subsequent query for notification should see the changes...",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1040809121
https://github.com/hail-is/hail/pull/11352#issuecomment-1040809121:739,Deployability,update,update,739,"It is mighty fishy that both azure and google failed the callback test. What are we missing? If MJC returns, then the database was clearly updated. Subsequent DB queries should see those changes. total_jobs_in_batch won't change during the lifetime of the batch, so that should be correct (though we should probably LOCK IN SHARE MODE anyway). Assuming I'm reading the [reference manual](https://dev.mysql.com/doc/refman/5.7/en/innodb-consistent-read.html) correctly, that select should see the result of the UPDATE *or a later state*. The updates to a single row are serial. So there must exist a transaction that takes it from n_jobs-1 to n_jobs. That transaction thus must see n_jobs for new_n_completed. That transaction thus ought to update batches. Once that transaction is committed the subsequent query for notification should see the changes...",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1040809121
https://github.com/hail-is/hail/pull/11352#issuecomment-1040809121:66,Testability,test,test,66,"It is mighty fishy that both azure and google failed the callback test. What are we missing? If MJC returns, then the database was clearly updated. Subsequent DB queries should see those changes. total_jobs_in_batch won't change during the lifetime of the batch, so that should be correct (though we should probably LOCK IN SHARE MODE anyway). Assuming I'm reading the [reference manual](https://dev.mysql.com/doc/refman/5.7/en/innodb-consistent-read.html) correctly, that select should see the result of the UPDATE *or a later state*. The updates to a single row are serial. So there must exist a transaction that takes it from n_jobs-1 to n_jobs. That transaction thus must see n_jobs for new_n_completed. That transaction thus ought to update batches. Once that transaction is committed the subsequent query for notification should see the changes...",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1040809121
https://github.com/hail-is/hail/pull/11352#issuecomment-1040809121:131,Usability,clear,clearly,131,"It is mighty fishy that both azure and google failed the callback test. What are we missing? If MJC returns, then the database was clearly updated. Subsequent DB queries should see those changes. total_jobs_in_batch won't change during the lifetime of the batch, so that should be correct (though we should probably LOCK IN SHARE MODE anyway). Assuming I'm reading the [reference manual](https://dev.mysql.com/doc/refman/5.7/en/innodb-consistent-read.html) correctly, that select should see the result of the UPDATE *or a later state*. The updates to a single row are serial. So there must exist a transaction that takes it from n_jobs-1 to n_jobs. That transaction thus must see n_jobs for new_n_completed. That transaction thus ought to update batches. Once that transaction is committed the subsequent query for notification should see the changes...",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1040809121
https://github.com/hail-is/hail/pull/11352#issuecomment-1049107348:699,Availability,ERROR,ERROR,699,"@daniel-goldstein The logs show this:. ```; insertId: ""88db8ey9nom69366""; jsonPayload: {; asctime: ""2022-02-16 23:07:40,794""; exc_info: ""Traceback (most recent call last):; File ""/usr/local/lib/python3.7/dist-packages/batch/driver/job.py"", line 65, in notify_batch_job_complete; await request(session); File ""/usr/local/lib/python3.7/dist-packages/batch/driver/job.py"", line 56, in request; await session.post(callback, json=batch_record_to_dict(record)); File ""/usr/local/lib/python3.7/dist-packages/batch/batch.py"", line 18, in batch_record_to_dict; elif record['n_failed'] > 0:; KeyError: 'n_failed'""; filename: ""job.py""; funcNameAndLine: ""notify_batch_job_complete:69""; hail_log: 1; levelname: ""ERROR""; message: ""callback for batch 1731 failed, will not retry.""; ```. `notify_batch_job_complete` just needs to join against the volatile table.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1049107348
https://github.com/hail-is/hail/pull/11352#issuecomment-1049107348:707,Integrability,message,message,707,"@daniel-goldstein The logs show this:. ```; insertId: ""88db8ey9nom69366""; jsonPayload: {; asctime: ""2022-02-16 23:07:40,794""; exc_info: ""Traceback (most recent call last):; File ""/usr/local/lib/python3.7/dist-packages/batch/driver/job.py"", line 65, in notify_batch_job_complete; await request(session); File ""/usr/local/lib/python3.7/dist-packages/batch/driver/job.py"", line 56, in request; await session.post(callback, json=batch_record_to_dict(record)); File ""/usr/local/lib/python3.7/dist-packages/batch/batch.py"", line 18, in batch_record_to_dict; elif record['n_failed'] > 0:; KeyError: 'n_failed'""; filename: ""job.py""; funcNameAndLine: ""notify_batch_job_complete:69""; hail_log: 1; levelname: ""ERROR""; message: ""callback for batch 1731 failed, will not retry.""; ```. `notify_batch_job_complete` just needs to join against the volatile table.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1049107348
https://github.com/hail-is/hail/pull/11352#issuecomment-1049107348:22,Testability,log,logs,22,"@daniel-goldstein The logs show this:. ```; insertId: ""88db8ey9nom69366""; jsonPayload: {; asctime: ""2022-02-16 23:07:40,794""; exc_info: ""Traceback (most recent call last):; File ""/usr/local/lib/python3.7/dist-packages/batch/driver/job.py"", line 65, in notify_batch_job_complete; await request(session); File ""/usr/local/lib/python3.7/dist-packages/batch/driver/job.py"", line 56, in request; await session.post(callback, json=batch_record_to_dict(record)); File ""/usr/local/lib/python3.7/dist-packages/batch/batch.py"", line 18, in batch_record_to_dict; elif record['n_failed'] > 0:; KeyError: 'n_failed'""; filename: ""job.py""; funcNameAndLine: ""notify_batch_job_complete:69""; hail_log: 1; levelname: ""ERROR""; message: ""callback for batch 1731 failed, will not retry.""; ```. `notify_batch_job_complete` just needs to join against the volatile table.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1049107348
https://github.com/hail-is/hail/pull/11352#issuecomment-1049107749:85,Testability,log,logs,85,"FWIW, I often grab the PR name from the `default_ns` job and search like this in the logs viewer:; ```; resource.labels.namespace_name=""PR_NAME""; labels.""k8s-pod/app"":""batch""; ```. EDIT: Maybe the default_ns should just include a URL that links directly to logs viewer with that search?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1049107749
https://github.com/hail-is/hail/pull/11352#issuecomment-1049107749:257,Testability,log,logs,257,"FWIW, I often grab the PR name from the `default_ns` job and search like this in the logs viewer:; ```; resource.labels.namespace_name=""PR_NAME""; labels.""k8s-pod/app"":""batch""; ```. EDIT: Maybe the default_ns should just include a URL that links directly to logs viewer with that search?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1049107749
https://github.com/hail-is/hail/pull/11352#issuecomment-1049187048:62,Availability,error,error,62,"Ah, duh, thanks! And ya I do want to make it easier to get to error logs from the PR namespace.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1049187048
https://github.com/hail-is/hail/pull/11352#issuecomment-1049187048:68,Testability,log,logs,68,"Ah, duh, thanks! And ya I do want to make it easier to get to error logs from the PR namespace.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1049187048
https://github.com/hail-is/hail/pull/11357#issuecomment-1039240058:372,Energy Efficiency,efficient,efficient,372,"This is absolutely Jackie's domain and I trust her instinct. A couple thoughts:; - In general, we should transition away from logs for observability. Logs should be for diagnosing bugs.; - Relatedly, the UI should surface the insights we need to understand the cluster.; - If information critical for observability is time-consuming to compute, then we should engineer an efficient way to track it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11357#issuecomment-1039240058
https://github.com/hail-is/hail/pull/11357#issuecomment-1039240058:126,Testability,log,logs,126,"This is absolutely Jackie's domain and I trust her instinct. A couple thoughts:; - In general, we should transition away from logs for observability. Logs should be for diagnosing bugs.; - Relatedly, the UI should surface the insights we need to understand the cluster.; - If information critical for observability is time-consuming to compute, then we should engineer an efficient way to track it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11357#issuecomment-1039240058
https://github.com/hail-is/hail/pull/11357#issuecomment-1039240058:150,Testability,Log,Logs,150,"This is absolutely Jackie's domain and I trust her instinct. A couple thoughts:; - In general, we should transition away from logs for observability. Logs should be for diagnosing bugs.; - Relatedly, the UI should surface the insights we need to understand the cluster.; - If information critical for observability is time-consuming to compute, then we should engineer an efficient way to track it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11357#issuecomment-1039240058
https://github.com/hail-is/hail/pull/11368#issuecomment-1057541994:83,Performance,load,load,83,I'm having a pretty hard time with the binary format. It's also incredibly slow to load the data in the UI when the data is being recorded properly. My approach must not be right. Can you double check this is what you had in mind?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11368#issuecomment-1057541994
https://github.com/hail-is/hail/pull/11368#issuecomment-1057594484:81,Availability,down,down,81,"If with my changes it is still slower, then let's abandon. My bad for heading us down this route. Seems natural to use binary, but given that pandas probably has native code for parsing TSVs, maybe we're fighting a losing battle.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11368#issuecomment-1057594484
https://github.com/hail-is/hail/pull/11368#issuecomment-1057594484:91,Integrability,rout,route,91,"If with my changes it is still slower, then let's abandon. My bad for heading us down this route. Seems natural to use binary, but given that pandas probably has native code for parsing TSVs, maybe we're fighting a losing battle.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11368#issuecomment-1057594484
https://github.com/hail-is/hail/pull/11368#issuecomment-1058213280:168,Usability,simpl,simpler,168,The other issue is I'm getting a small negative value for the first time point on CPU. Not sure how to fix that. Maybe we just ignore it for now? Or revert back to the simpler code where we omit the first timepoint? Although I don't know how to represent NaN in binary data if we keep the first memory timepoint.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11368#issuecomment-1058213280
https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055:317,Deployability,deploy,deployed,317,"Hi Vlad, thanks for the PR! I'm afraid there are some internal migrations we're making that are probably not clear from just looking at the codebase. Are you up to date on our `main`? We've found working with `config.mk` cumbersome because it can be stale if you switch between different instances of Batch (e.g. one deployed in azure and the other in GCP). > DOCKER_ROOT_IMAGE used to build batch workers and benchmark. I've recently updated the scripts for building the batch worker VM image to query kubernetes directly and we should probably do the same for benchmark. > HAIL_TEST_GCS_BUCKET used to build query; KUBERNETES_SERVER_URL used to build amundsen. These services are both currently deleted in our `main`. > PROJECT, ZONE, REGION are probably not need, but might make sense to add for consistency. These will fail in an Azure deployment, and while we want to move away from `config.mk` entirely, we would at least want it to contain configurations that are valid across clouds.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055
https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055:435,Deployability,update,updated,435,"Hi Vlad, thanks for the PR! I'm afraid there are some internal migrations we're making that are probably not clear from just looking at the codebase. Are you up to date on our `main`? We've found working with `config.mk` cumbersome because it can be stale if you switch between different instances of Batch (e.g. one deployed in azure and the other in GCP). > DOCKER_ROOT_IMAGE used to build batch workers and benchmark. I've recently updated the scripts for building the batch worker VM image to query kubernetes directly and we should probably do the same for benchmark. > HAIL_TEST_GCS_BUCKET used to build query; KUBERNETES_SERVER_URL used to build amundsen. These services are both currently deleted in our `main`. > PROJECT, ZONE, REGION are probably not need, but might make sense to add for consistency. These will fail in an Azure deployment, and while we want to move away from `config.mk` entirely, we would at least want it to contain configurations that are valid across clouds.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055
https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055:840,Deployability,deploy,deployment,840,"Hi Vlad, thanks for the PR! I'm afraid there are some internal migrations we're making that are probably not clear from just looking at the codebase. Are you up to date on our `main`? We've found working with `config.mk` cumbersome because it can be stale if you switch between different instances of Batch (e.g. one deployed in azure and the other in GCP). > DOCKER_ROOT_IMAGE used to build batch workers and benchmark. I've recently updated the scripts for building the batch worker VM image to query kubernetes directly and we should probably do the same for benchmark. > HAIL_TEST_GCS_BUCKET used to build query; KUBERNETES_SERVER_URL used to build amundsen. These services are both currently deleted in our `main`. > PROJECT, ZONE, REGION are probably not need, but might make sense to add for consistency. These will fail in an Azure deployment, and while we want to move away from `config.mk` entirely, we would at least want it to contain configurations that are valid across clouds.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055
https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055:947,Deployability,configurat,configurations,947,"Hi Vlad, thanks for the PR! I'm afraid there are some internal migrations we're making that are probably not clear from just looking at the codebase. Are you up to date on our `main`? We've found working with `config.mk` cumbersome because it can be stale if you switch between different instances of Batch (e.g. one deployed in azure and the other in GCP). > DOCKER_ROOT_IMAGE used to build batch workers and benchmark. I've recently updated the scripts for building the batch worker VM image to query kubernetes directly and we should probably do the same for benchmark. > HAIL_TEST_GCS_BUCKET used to build query; KUBERNETES_SERVER_URL used to build amundsen. These services are both currently deleted in our `main`. > PROJECT, ZONE, REGION are probably not need, but might make sense to add for consistency. These will fail in an Azure deployment, and while we want to move away from `config.mk` entirely, we would at least want it to contain configurations that are valid across clouds.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055
https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055:210,Modifiability,config,config,210,"Hi Vlad, thanks for the PR! I'm afraid there are some internal migrations we're making that are probably not clear from just looking at the codebase. Are you up to date on our `main`? We've found working with `config.mk` cumbersome because it can be stale if you switch between different instances of Batch (e.g. one deployed in azure and the other in GCP). > DOCKER_ROOT_IMAGE used to build batch workers and benchmark. I've recently updated the scripts for building the batch worker VM image to query kubernetes directly and we should probably do the same for benchmark. > HAIL_TEST_GCS_BUCKET used to build query; KUBERNETES_SERVER_URL used to build amundsen. These services are both currently deleted in our `main`. > PROJECT, ZONE, REGION are probably not need, but might make sense to add for consistency. These will fail in an Azure deployment, and while we want to move away from `config.mk` entirely, we would at least want it to contain configurations that are valid across clouds.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055
https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055:889,Modifiability,config,config,889,"Hi Vlad, thanks for the PR! I'm afraid there are some internal migrations we're making that are probably not clear from just looking at the codebase. Are you up to date on our `main`? We've found working with `config.mk` cumbersome because it can be stale if you switch between different instances of Batch (e.g. one deployed in azure and the other in GCP). > DOCKER_ROOT_IMAGE used to build batch workers and benchmark. I've recently updated the scripts for building the batch worker VM image to query kubernetes directly and we should probably do the same for benchmark. > HAIL_TEST_GCS_BUCKET used to build query; KUBERNETES_SERVER_URL used to build amundsen. These services are both currently deleted in our `main`. > PROJECT, ZONE, REGION are probably not need, but might make sense to add for consistency. These will fail in an Azure deployment, and while we want to move away from `config.mk` entirely, we would at least want it to contain configurations that are valid across clouds.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055
https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055:947,Modifiability,config,configurations,947,"Hi Vlad, thanks for the PR! I'm afraid there are some internal migrations we're making that are probably not clear from just looking at the codebase. Are you up to date on our `main`? We've found working with `config.mk` cumbersome because it can be stale if you switch between different instances of Batch (e.g. one deployed in azure and the other in GCP). > DOCKER_ROOT_IMAGE used to build batch workers and benchmark. I've recently updated the scripts for building the batch worker VM image to query kubernetes directly and we should probably do the same for benchmark. > HAIL_TEST_GCS_BUCKET used to build query; KUBERNETES_SERVER_URL used to build amundsen. These services are both currently deleted in our `main`. > PROJECT, ZONE, REGION are probably not need, but might make sense to add for consistency. These will fail in an Azure deployment, and while we want to move away from `config.mk` entirely, we would at least want it to contain configurations that are valid across clouds.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055
https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055:410,Testability,benchmark,benchmark,410,"Hi Vlad, thanks for the PR! I'm afraid there are some internal migrations we're making that are probably not clear from just looking at the codebase. Are you up to date on our `main`? We've found working with `config.mk` cumbersome because it can be stale if you switch between different instances of Batch (e.g. one deployed in azure and the other in GCP). > DOCKER_ROOT_IMAGE used to build batch workers and benchmark. I've recently updated the scripts for building the batch worker VM image to query kubernetes directly and we should probably do the same for benchmark. > HAIL_TEST_GCS_BUCKET used to build query; KUBERNETES_SERVER_URL used to build amundsen. These services are both currently deleted in our `main`. > PROJECT, ZONE, REGION are probably not need, but might make sense to add for consistency. These will fail in an Azure deployment, and while we want to move away from `config.mk` entirely, we would at least want it to contain configurations that are valid across clouds.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055
https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055:562,Testability,benchmark,benchmark,562,"Hi Vlad, thanks for the PR! I'm afraid there are some internal migrations we're making that are probably not clear from just looking at the codebase. Are you up to date on our `main`? We've found working with `config.mk` cumbersome because it can be stale if you switch between different instances of Batch (e.g. one deployed in azure and the other in GCP). > DOCKER_ROOT_IMAGE used to build batch workers and benchmark. I've recently updated the scripts for building the batch worker VM image to query kubernetes directly and we should probably do the same for benchmark. > HAIL_TEST_GCS_BUCKET used to build query; KUBERNETES_SERVER_URL used to build amundsen. These services are both currently deleted in our `main`. > PROJECT, ZONE, REGION are probably not need, but might make sense to add for consistency. These will fail in an Azure deployment, and while we want to move away from `config.mk` entirely, we would at least want it to contain configurations that are valid across clouds.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055
https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055:109,Usability,clear,clear,109,"Hi Vlad, thanks for the PR! I'm afraid there are some internal migrations we're making that are probably not clear from just looking at the codebase. Are you up to date on our `main`? We've found working with `config.mk` cumbersome because it can be stale if you switch between different instances of Batch (e.g. one deployed in azure and the other in GCP). > DOCKER_ROOT_IMAGE used to build batch workers and benchmark. I've recently updated the scripts for building the batch worker VM image to query kubernetes directly and we should probably do the same for benchmark. > HAIL_TEST_GCS_BUCKET used to build query; KUBERNETES_SERVER_URL used to build amundsen. These services are both currently deleted in our `main`. > PROJECT, ZONE, REGION are probably not need, but might make sense to add for consistency. These will fail in an Azure deployment, and while we want to move away from `config.mk` entirely, we would at least want it to contain configurations that are valid across clouds.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11371#issuecomment-1041941055
https://github.com/hail-is/hail/pull/11371#issuecomment-1045522380:149,Integrability,depend,depend,149,I had problems with calling the Make rules that create batch worker images; but I see that you already remove them and created a script that doesn't depend on config.mk: https://github.com/hail-is/hail/blob/main/batch/gcp-create-worker-image.sh. Thanks for a response! I guess I don't have to worry about config.mk :),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11371#issuecomment-1045522380
https://github.com/hail-is/hail/pull/11371#issuecomment-1045522380:159,Modifiability,config,config,159,I had problems with calling the Make rules that create batch worker images; but I see that you already remove them and created a script that doesn't depend on config.mk: https://github.com/hail-is/hail/blob/main/batch/gcp-create-worker-image.sh. Thanks for a response! I guess I don't have to worry about config.mk :),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11371#issuecomment-1045522380
https://github.com/hail-is/hail/pull/11371#issuecomment-1045522380:305,Modifiability,config,config,305,I had problems with calling the Make rules that create batch worker images; but I see that you already remove them and created a script that doesn't depend on config.mk: https://github.com/hail-is/hail/blob/main/batch/gcp-create-worker-image.sh. Thanks for a response! I guess I don't have to worry about config.mk :),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11371#issuecomment-1045522380
https://github.com/hail-is/hail/pull/11380#issuecomment-1045069860:23,Testability,test,tests,23,I also added some more tests since I accidentally broke things while developing this and would like that to happen less in the future.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11380#issuecomment-1045069860
https://github.com/hail-is/hail/pull/11381#issuecomment-1054617159:219,Testability,log,logic,219,"Chris, the main thing that needs reviewing is the implementation of `sizeToStoreInBytes`. The `EmitStreamDistribute` stuff is just adding `sizeInBytes` to every write out, and the `LowerDistributedSort` stuff is mostly logic to track sizes and make sure that if a single row is bigger than our size cutoff, we don't get stuck in an infinite loop",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11381#issuecomment-1054617159
https://github.com/hail-is/hail/pull/11381#issuecomment-1067233262:8,Testability,test,tests,8,"Failing tests are resolved, should be good to review again.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11381#issuecomment-1067233262
https://github.com/hail-is/hail/pull/11383#issuecomment-1049165930:76,Testability,log,log,76,@daniel-goldstein this is a one-line change that will alleviate some of our log alerts.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11383#issuecomment-1049165930
https://github.com/hail-is/hail/pull/11384#issuecomment-1050087560:36,Safety,avoid,avoid,36,Reducing pro because other PRs will avoid triggering this and are more important.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11384#issuecomment-1050087560
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:50,Availability,error,error,50,"Working backwards, we need to not return a 500 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_s",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:86,Availability,error,error,86,"Working backwards, we need to not return a 500 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_s",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:252,Availability,error,error,252,"Working backwards, we need to not return a 500 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_s",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:868,Availability,error,error,868,"Working backwards, we need to not return a 500 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_s",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:978,Availability,error,error,978,"Working backwards, we need to not return a 500 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_s",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:1491,Availability,down,down,1491,"00 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_statuses': {k: None for k in tasks},; }. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:1601,Availability,error,error,1601,"00 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_statuses': {k: None for k in tasks},; }. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:1946,Availability,error,error,1946,"00 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_statuses': {k: None for k in tasks},; }. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:1956,Availability,error,error,1956,"00 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_statuses': {k: None for k in tasks},; }. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:1450,Energy Efficiency,schedul,scheduled,1450,"00 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_statuses': {k: None for k in tasks},; }. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:106,Integrability,message,message,106,"Working backwards, we need to not return a 500 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_s",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:258,Integrability,message,message,258,"Working backwards, we need to not return a 500 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_s",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:984,Integrability,message,message,984,"Working backwards, we need to not return a 500 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_s",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:1768,Modifiability,config,config,1768,"00 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_statuses': {k: None for k in tasks},; }. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:1156,Safety,timeout,timeout,1156,"00 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_statuses': {k: None for k in tasks},; }. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:1387,Safety,abort,aborting,1387,"00 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_statuses': {k: None for k in tasks},; }. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:1497,Safety,abort,aborting,1497,"00 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_statuses': {k: None for k in tasks},; }. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:1325,Testability,log,log,1325,"00 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_statuses': {k: None for k in tasks},; }. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:1420,Testability,log,log,1420,"00 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_statuses': {k: None for k in tasks},; }. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:1736,Testability,log,log,1736,"00 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_statuses': {k: None for k in tasks},; }. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:721,Usability,clear,clearer,721,"Working backwards, we need to not return a 500 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_s",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078
https://github.com/hail-is/hail/pull/11394#issuecomment-1049169544:822,Availability,Error,Error,822,"The [`flake8` check job](https://ci.hail.is/batches/536128/jobs/11) is also complaining about whitespace in struct.py on a few lines:; ```; make -C hail/python check; make[1]: Entering directory '/io/repo/hail/python'; python3 -m flake8 --config ../../setup.cfg hail; hail/utils/struct.py:120:1: W293 blank line contains whitespace; hail/utils/struct.py:122:1: W293 blank line contains whitespace; hail/utils/struct.py:124:1: W293 blank line contains whitespace; hail/utils/struct.py:126:1: W293 blank line contains whitespace; hail/utils/struct.py:129:1: W293 blank line contains whitespace; hail/utils/struct.py:131:1: W293 blank line contains whitespace; hail/utils/struct.py:134:1: W293 blank line contains whitespace; hail/utils/struct.py:136:1: W293 blank line contains whitespace; make[1]: *** [Makefile:11: check] Error 1; make[1]: Leaving directory '/io/repo/hail/python'; make: *** [Makefile:13: check-hail] Error 2; ```. I recommend enabling ""show whitespace"" in your editor. That ensure you see these issues before you make a commit. For PyCharm you can [try this](https://intellij-support.jetbrains.com/hc/en-us/community/posts/206349049-How-to-make-show-whitespace-turn-on-as-default-).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11394#issuecomment-1049169544
https://github.com/hail-is/hail/pull/11394#issuecomment-1049169544:918,Availability,Error,Error,918,"The [`flake8` check job](https://ci.hail.is/batches/536128/jobs/11) is also complaining about whitespace in struct.py on a few lines:; ```; make -C hail/python check; make[1]: Entering directory '/io/repo/hail/python'; python3 -m flake8 --config ../../setup.cfg hail; hail/utils/struct.py:120:1: W293 blank line contains whitespace; hail/utils/struct.py:122:1: W293 blank line contains whitespace; hail/utils/struct.py:124:1: W293 blank line contains whitespace; hail/utils/struct.py:126:1: W293 blank line contains whitespace; hail/utils/struct.py:129:1: W293 blank line contains whitespace; hail/utils/struct.py:131:1: W293 blank line contains whitespace; hail/utils/struct.py:134:1: W293 blank line contains whitespace; hail/utils/struct.py:136:1: W293 blank line contains whitespace; make[1]: *** [Makefile:11: check] Error 1; make[1]: Leaving directory '/io/repo/hail/python'; make: *** [Makefile:13: check-hail] Error 2; ```. I recommend enabling ""show whitespace"" in your editor. That ensure you see these issues before you make a commit. For PyCharm you can [try this](https://intellij-support.jetbrains.com/hc/en-us/community/posts/206349049-How-to-make-show-whitespace-turn-on-as-default-).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11394#issuecomment-1049169544
https://github.com/hail-is/hail/pull/11394#issuecomment-1049169544:239,Modifiability,config,config,239,"The [`flake8` check job](https://ci.hail.is/batches/536128/jobs/11) is also complaining about whitespace in struct.py on a few lines:; ```; make -C hail/python check; make[1]: Entering directory '/io/repo/hail/python'; python3 -m flake8 --config ../../setup.cfg hail; hail/utils/struct.py:120:1: W293 blank line contains whitespace; hail/utils/struct.py:122:1: W293 blank line contains whitespace; hail/utils/struct.py:124:1: W293 blank line contains whitespace; hail/utils/struct.py:126:1: W293 blank line contains whitespace; hail/utils/struct.py:129:1: W293 blank line contains whitespace; hail/utils/struct.py:131:1: W293 blank line contains whitespace; hail/utils/struct.py:134:1: W293 blank line contains whitespace; hail/utils/struct.py:136:1: W293 blank line contains whitespace; make[1]: *** [Makefile:11: check] Error 1; make[1]: Leaving directory '/io/repo/hail/python'; make: *** [Makefile:13: check-hail] Error 2; ```. I recommend enabling ""show whitespace"" in your editor. That ensure you see these issues before you make a commit. For PyCharm you can [try this](https://intellij-support.jetbrains.com/hc/en-us/community/posts/206349049-How-to-make-show-whitespace-turn-on-as-default-).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11394#issuecomment-1049169544
https://github.com/hail-is/hail/pull/11397#issuecomment-1048940715:26,Testability,log,logs,26,"My plan is to add the JVM logs to disk for each job feature and debug the entire stack at once. If you see problems with the underlying stack, then it would be great to know that sooner rather than later.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11397#issuecomment-1048940715
https://github.com/hail-is/hail/pull/11397#issuecomment-1067362173:2,Testability,test,tested,2,I tested everything by hand in my namespace including the UI and it all looked good.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11397#issuecomment-1067362173
https://github.com/hail-is/hail/pull/11397#issuecomment-1067386677:21,Performance,race condition,race condition,21,I might still have a race condition when cleaning up the container despite using a lock. I'll see if I can reason about it tomorrow.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11397#issuecomment-1067386677
https://github.com/hail-is/hail/pull/11397#issuecomment-1070987703:78,Testability,test,tests,78,Do I need to take action on this PR? I'm OK with this change if it passes the tests.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11397#issuecomment-1070987703
https://github.com/hail-is/hail/pull/11397#issuecomment-1071030226:27,Testability,test,tests,27,"I can't figure out why the tests aren't passing yet. It's failing on test_ci because the code to remove files is failing (KeyError???). Otherwise, I'm good with it, except I might take out the run_if_done_or_deleted for now so we don't get infinite loops while this code is still in flux.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11397#issuecomment-1071030226
https://github.com/hail-is/hail/pull/11397#issuecomment-1076793811:128,Availability,Error,Error,128,"I tossed this up in my namespace and this is what seems to be the issue:; ```. Job Step	Image Pulling Time (s)	Running Time (s)	Error Type	State; main	0.135	30.011	timed out	error; Logs; Main; Log; executable file `sleep 5` not found in $PATH: No such file or directory; Error; Traceback (most recent call last):; File ""/usr/local/lib/python3.7/dist-packages/batch/worker/worker.py"", line 680, in _run; raise ContainerTimeoutError(f'timed out after {self.timeout}s'); ContainerTimeoutError: timed out after Nones",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11397#issuecomment-1076793811
https://github.com/hail-is/hail/pull/11397#issuecomment-1076793811:174,Availability,error,error,174,"I tossed this up in my namespace and this is what seems to be the issue:; ```. Job Step	Image Pulling Time (s)	Running Time (s)	Error Type	State; main	0.135	30.011	timed out	error; Logs; Main; Log; executable file `sleep 5` not found in $PATH: No such file or directory; Error; Traceback (most recent call last):; File ""/usr/local/lib/python3.7/dist-packages/batch/worker/worker.py"", line 680, in _run; raise ContainerTimeoutError(f'timed out after {self.timeout}s'); ContainerTimeoutError: timed out after Nones",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11397#issuecomment-1076793811
https://github.com/hail-is/hail/pull/11397#issuecomment-1076793811:271,Availability,Error,Error,271,"I tossed this up in my namespace and this is what seems to be the issue:; ```. Job Step	Image Pulling Time (s)	Running Time (s)	Error Type	State; main	0.135	30.011	timed out	error; Logs; Main; Log; executable file `sleep 5` not found in $PATH: No such file or directory; Error; Traceback (most recent call last):; File ""/usr/local/lib/python3.7/dist-packages/batch/worker/worker.py"", line 680, in _run; raise ContainerTimeoutError(f'timed out after {self.timeout}s'); ContainerTimeoutError: timed out after Nones",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11397#issuecomment-1076793811
https://github.com/hail-is/hail/pull/11397#issuecomment-1076793811:455,Safety,timeout,timeout,455,"I tossed this up in my namespace and this is what seems to be the issue:; ```. Job Step	Image Pulling Time (s)	Running Time (s)	Error Type	State; main	0.135	30.011	timed out	error; Logs; Main; Log; executable file `sleep 5` not found in $PATH: No such file or directory; Error; Traceback (most recent call last):; File ""/usr/local/lib/python3.7/dist-packages/batch/worker/worker.py"", line 680, in _run; raise ContainerTimeoutError(f'timed out after {self.timeout}s'); ContainerTimeoutError: timed out after Nones",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11397#issuecomment-1076793811
https://github.com/hail-is/hail/pull/11397#issuecomment-1076793811:181,Testability,Log,Logs,181,"I tossed this up in my namespace and this is what seems to be the issue:; ```. Job Step	Image Pulling Time (s)	Running Time (s)	Error Type	State; main	0.135	30.011	timed out	error; Logs; Main; Log; executable file `sleep 5` not found in $PATH: No such file or directory; Error; Traceback (most recent call last):; File ""/usr/local/lib/python3.7/dist-packages/batch/worker/worker.py"", line 680, in _run; raise ContainerTimeoutError(f'timed out after {self.timeout}s'); ContainerTimeoutError: timed out after Nones",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11397#issuecomment-1076793811
https://github.com/hail-is/hail/pull/11397#issuecomment-1076793811:193,Testability,Log,Log,193,"I tossed this up in my namespace and this is what seems to be the issue:; ```. Job Step	Image Pulling Time (s)	Running Time (s)	Error Type	State; main	0.135	30.011	timed out	error; Logs; Main; Log; executable file `sleep 5` not found in $PATH: No such file or directory; Error; Traceback (most recent call last):; File ""/usr/local/lib/python3.7/dist-packages/batch/worker/worker.py"", line 680, in _run; raise ContainerTimeoutError(f'timed out after {self.timeout}s'); ContainerTimeoutError: timed out after Nones",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11397#issuecomment-1076793811
https://github.com/hail-is/hail/pull/11397#issuecomment-1076794055:3,Availability,error,error,3,An error is being treated as a timeout but then the job is still considered running?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11397#issuecomment-1076794055
https://github.com/hail-is/hail/pull/11397#issuecomment-1076794055:31,Safety,timeout,timeout,31,An error is being treated as a timeout but then the job is still considered running?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11397#issuecomment-1076794055
https://github.com/hail-is/hail/pull/11410#issuecomment-1050116738:122,Testability,test,test,122,"Building locally confirmed it ran for Spark 3.2 with commons lang fix. Will follow up later with some kind of compilation test against Spark 3.2, but for now let's just do this.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11410#issuecomment-1050116738
https://github.com/hail-is/hail/issues/11413#issuecomment-1050268863:23,Availability,error,error,23,"yeah this was a simple error, forgot to do one upstream processing step",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/11413#issuecomment-1050268863
https://github.com/hail-is/hail/issues/11413#issuecomment-1050268863:16,Usability,simpl,simple,16,"yeah this was a simple error, forgot to do one upstream processing step",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/11413#issuecomment-1050268863
https://github.com/hail-is/hail/pull/11428#issuecomment-1108661994:0,Testability,Test,Tested,0,"Tested with. ```python; hb.build_python_image('my_image', requirements=['hail'], show_docker_output=True)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11428#issuecomment-1108661994
https://github.com/hail-is/hail/pull/11429#issuecomment-1054563382:664,Availability,error,error,664,"There's not a good reason, this is just how it was originally designed. Whenever a job was cancelled, it would take until the start of the next step for a container's execution to be stopped. I replaced the dependency on this in `Container` with `run_until_done_or_deleted`, but stopped short of deleting the functionality entirely because there were other parts of the worker, specifically `JVMJob` that still relied on it. Hopefully that is no longer the case after the QoB changes, but @danking would know better. We've also both lamented about how it's impossible to use timings currently inside cleanup blocks because it could accidentally re-raise a deleted error. This is a great change, I would just take extra care to test job cancellation to make sure there isn't anywhere that's still relying on this functionality.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11429#issuecomment-1054563382
https://github.com/hail-is/hail/pull/11429#issuecomment-1054563382:207,Integrability,depend,dependency,207,"There's not a good reason, this is just how it was originally designed. Whenever a job was cancelled, it would take until the start of the next step for a container's execution to be stopped. I replaced the dependency on this in `Container` with `run_until_done_or_deleted`, but stopped short of deleting the functionality entirely because there were other parts of the worker, specifically `JVMJob` that still relied on it. Hopefully that is no longer the case after the QoB changes, but @danking would know better. We've also both lamented about how it's impossible to use timings currently inside cleanup blocks because it could accidentally re-raise a deleted error. This is a great change, I would just take extra care to test job cancellation to make sure there isn't anywhere that's still relying on this functionality.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11429#issuecomment-1054563382
https://github.com/hail-is/hail/pull/11429#issuecomment-1054563382:727,Testability,test,test,727,"There's not a good reason, this is just how it was originally designed. Whenever a job was cancelled, it would take until the start of the next step for a container's execution to be stopped. I replaced the dependency on this in `Container` with `run_until_done_or_deleted`, but stopped short of deleting the functionality entirely because there were other parts of the worker, specifically `JVMJob` that still relied on it. Hopefully that is no longer the case after the QoB changes, but @danking would know better. We've also both lamented about how it's impossible to use timings currently inside cleanup blocks because it could accidentally re-raise a deleted error. This is a great change, I would just take extra care to test job cancellation to make sure there isn't anywhere that's still relying on this functionality.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11429#issuecomment-1054563382
https://github.com/hail-is/hail/pull/11429#issuecomment-1054581169:118,Availability,error,error,118,> how it's impossible to use timings currently inside cleanup blocks because it could accidentally re-raise a deleted error. Can you explain this to me? I saw Dan had a comment as well in the JVMJob that stated this. Our code seems to be always this:. ```; try:; with self.step('running'):; self.run_until_deleted or completed(); finally:; with self.step('uploading log'):; self.upload_log(); ```. The upload log step should propagate the deletion error from above.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11429#issuecomment-1054581169
https://github.com/hail-is/hail/pull/11429#issuecomment-1054581169:448,Availability,error,error,448,> how it's impossible to use timings currently inside cleanup blocks because it could accidentally re-raise a deleted error. Can you explain this to me? I saw Dan had a comment as well in the JVMJob that stated this. Our code seems to be always this:. ```; try:; with self.step('running'):; self.run_until_deleted or completed(); finally:; with self.step('uploading log'):; self.upload_log(); ```. The upload log step should propagate the deletion error from above.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11429#issuecomment-1054581169
https://github.com/hail-is/hail/pull/11429#issuecomment-1054581169:366,Testability,log,log,366,> how it's impossible to use timings currently inside cleanup blocks because it could accidentally re-raise a deleted error. Can you explain this to me? I saw Dan had a comment as well in the JVMJob that stated this. Our code seems to be always this:. ```; try:; with self.step('running'):; self.run_until_deleted or completed(); finally:; with self.step('uploading log'):; self.upload_log(); ```. The upload log step should propagate the deletion error from above.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11429#issuecomment-1054581169
https://github.com/hail-is/hail/pull/11429#issuecomment-1054581169:409,Testability,log,log,409,> how it's impossible to use timings currently inside cleanup blocks because it could accidentally re-raise a deleted error. Can you explain this to me? I saw Dan had a comment as well in the JVMJob that stated this. Our code seems to be always this:. ```; try:; with self.step('running'):; self.run_until_deleted or completed(); finally:; with self.step('uploading log'):; self.upload_log(); ```. The upload log step should propagate the deletion error from above.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11429#issuecomment-1054581169
https://github.com/hail-is/hail/pull/11429#issuecomment-1054582071:55,Testability,log,logic,55,"Also, I double checked and the only place the deletion logic was used was `upload_logs`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11429#issuecomment-1054582071
https://github.com/hail-is/hail/pull/11429#issuecomment-1054613946:575,Availability,error,error,575,"I'm looking at `worker.py` now and it looks like you worked around this with the addition of `ignore_job_deletion`, which maybe Dan wasn't aware of but is still a workaround since Timings just shouldn't care about deletion in the first place. Without that flag you'd get this:. 1. Running step would start; 2. Job is cancelled, so `Job.deleted` would be set to `True`.; 3. Job would set the Container's `deleted_event`, which would abort the run function inside `run_until_done_or_deleted`; 4. Container would jump to the uploading logs step, which would raise a job deleted error before running `upload_log`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11429#issuecomment-1054613946
https://github.com/hail-is/hail/pull/11429#issuecomment-1054613946:432,Safety,abort,abort,432,"I'm looking at `worker.py` now and it looks like you worked around this with the addition of `ignore_job_deletion`, which maybe Dan wasn't aware of but is still a workaround since Timings just shouldn't care about deletion in the first place. Without that flag you'd get this:. 1. Running step would start; 2. Job is cancelled, so `Job.deleted` would be set to `True`.; 3. Job would set the Container's `deleted_event`, which would abort the run function inside `run_until_done_or_deleted`; 4. Container would jump to the uploading logs step, which would raise a job deleted error before running `upload_log`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11429#issuecomment-1054613946
https://github.com/hail-is/hail/pull/11429#issuecomment-1054613946:532,Testability,log,logs,532,"I'm looking at `worker.py` now and it looks like you worked around this with the addition of `ignore_job_deletion`, which maybe Dan wasn't aware of but is still a workaround since Timings just shouldn't care about deletion in the first place. Without that flag you'd get this:. 1. Running step would start; 2. Job is cancelled, so `Job.deleted` would be set to `True`.; 3. Job would set the Container's `deleted_event`, which would abort the run function inside `run_until_done_or_deleted`; 4. Container would jump to the uploading logs step, which would raise a job deleted error before running `upload_log`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11429#issuecomment-1054613946
https://github.com/hail-is/hail/pull/11429#issuecomment-1054645368:80,Integrability,depend,depend,80,Ok. I think this code has the correct behavior now. (4) from above should never depend on the deleted event because we don't handle the deletion inside the regular timings now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11429#issuecomment-1054645368
https://github.com/hail-is/hail/pull/11434#issuecomment-1055787996:112,Deployability,release,release,112,This change can't possibly be causing the website_image issues. I'm going to force merge this and force merge a release to address the pressing hadoop connector issues. I will address the website_image issue after that is done.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11434#issuecomment-1055787996
https://github.com/hail-is/hail/pull/11435#issuecomment-1055892980:86,Performance,queue,queue,86,@vladsaveliev I dismissed Jackie's review. That will make it show up in her reviewing queue in our CI system. In the future feel free to dismiss reviews if you've addressed the concerns!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11435#issuecomment-1055892980
https://github.com/hail-is/hail/pull/11435#issuecomment-1055996916:36,Deployability,release,release,36,"Thank you :). Could you also make a release soon after this PR is merged, if reasonable? Would be handy to be able to try the package in our setup!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11435#issuecomment-1055996916
https://github.com/hail-is/hail/pull/11435#issuecomment-1058675021:42,Testability,test,test,42,"@jigold and @danking, I can't see why `ci-test` is failing, unfortunately. Can you take a look?. (and I should look into setting up Hail CI in our infra as well :-))",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11435#issuecomment-1058675021
https://github.com/hail-is/hail/pull/11435#issuecomment-1059199901:125,Deployability,release,release,125,"@vladsaveliev , we've had a bit of CI instability here which is causing tests to fail. Looks like it's merged now, I'll do a release.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11435#issuecomment-1059199901
https://github.com/hail-is/hail/pull/11435#issuecomment-1059199901:72,Testability,test,tests,72,"@vladsaveliev , we've had a bit of CI instability here which is causing tests to fail. Looks like it's merged now, I'll do a release.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11435#issuecomment-1059199901
https://github.com/hail-is/hail/pull/11438#issuecomment-1057178415:150,Testability,test,test,150,"Looking through the google doc I read Dan mentioning Iterators as returns types and since this is a list we are iterating through, I thought I should test it to see if the return type for Iterable would work and it did pass.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11438#issuecomment-1057178415
https://github.com/hail-is/hail/pull/11441#issuecomment-1056027209:49,Modifiability,config,config,49,"In PR namespaces, it creates the database-server-config which is the root user which we use to set up everyone else. test_database_instance is cooked up by the createDatabase for the test database. In non-PR namespaces, it doesn't exist because that secret already exists",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11441#issuecomment-1056027209
https://github.com/hail-is/hail/pull/11441#issuecomment-1056027209:183,Testability,test,test,183,"In PR namespaces, it creates the database-server-config which is the root user which we use to set up everyone else. test_database_instance is cooked up by the createDatabase for the test database. In non-PR namespaces, it doesn't exist because that secret already exists",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11441#issuecomment-1056027209
https://github.com/hail-is/hail/pull/11443#issuecomment-1062528734:112,Energy Efficiency,charge,charged,112,"At least on GCP, the GKE Autopilot offering might also be worth a look? One advantage would be that you're only charged for the pods you use, not the nodes (https://cloud.google.com/kubernetes-engine/pricing).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11443#issuecomment-1062528734
https://github.com/hail-is/hail/pull/11444#issuecomment-1067201429:31,Availability,error,error,31,Seems like you have one syntax error still.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11444#issuecomment-1067201429
https://github.com/hail-is/hail/pull/11444#issuecomment-1067243551:46,Testability,test,tests,46,"this adds a substantial amount of time to the tests, so don't approve until I've given some thought to that",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11444#issuecomment-1067243551
https://github.com/hail-is/hail/pull/11444#issuecomment-1069516954:238,Deployability,canary,canary,238,"OK, this passes all the tests except for `test_vcf_parser_golden_master__gvcf_GRCh37` which inexplicably hangs. I've marked that as skip. I've attached the WIP tag because the longest tests now take 47 minutes. I'll leave this PR up as a canary for when a `main` change fails service tests. However, I won't merge it until we improve test latency. cc: @tpoterba",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11444#issuecomment-1069516954
https://github.com/hail-is/hail/pull/11444#issuecomment-1069516954:339,Performance,latency,latency,339,"OK, this passes all the tests except for `test_vcf_parser_golden_master__gvcf_GRCh37` which inexplicably hangs. I've marked that as skip. I've attached the WIP tag because the longest tests now take 47 minutes. I'll leave this PR up as a canary for when a `main` change fails service tests. However, I won't merge it until we improve test latency. cc: @tpoterba",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11444#issuecomment-1069516954
https://github.com/hail-is/hail/pull/11444#issuecomment-1069516954:24,Testability,test,tests,24,"OK, this passes all the tests except for `test_vcf_parser_golden_master__gvcf_GRCh37` which inexplicably hangs. I've marked that as skip. I've attached the WIP tag because the longest tests now take 47 minutes. I'll leave this PR up as a canary for when a `main` change fails service tests. However, I won't merge it until we improve test latency. cc: @tpoterba",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11444#issuecomment-1069516954
https://github.com/hail-is/hail/pull/11444#issuecomment-1069516954:184,Testability,test,tests,184,"OK, this passes all the tests except for `test_vcf_parser_golden_master__gvcf_GRCh37` which inexplicably hangs. I've marked that as skip. I've attached the WIP tag because the longest tests now take 47 minutes. I'll leave this PR up as a canary for when a `main` change fails service tests. However, I won't merge it until we improve test latency. cc: @tpoterba",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11444#issuecomment-1069516954
https://github.com/hail-is/hail/pull/11444#issuecomment-1069516954:284,Testability,test,tests,284,"OK, this passes all the tests except for `test_vcf_parser_golden_master__gvcf_GRCh37` which inexplicably hangs. I've marked that as skip. I've attached the WIP tag because the longest tests now take 47 minutes. I'll leave this PR up as a canary for when a `main` change fails service tests. However, I won't merge it until we improve test latency. cc: @tpoterba",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11444#issuecomment-1069516954
https://github.com/hail-is/hail/pull/11444#issuecomment-1069516954:334,Testability,test,test,334,"OK, this passes all the tests except for `test_vcf_parser_golden_master__gvcf_GRCh37` which inexplicably hangs. I've marked that as skip. I've attached the WIP tag because the longest tests now take 47 minutes. I'll leave this PR up as a canary for when a `main` change fails service tests. However, I won't merge it until we improve test latency. cc: @tpoterba",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11444#issuecomment-1069516954
https://github.com/hail-is/hail/pull/11444#issuecomment-1096638073:66,Testability,test,tests,66,This is not substantially slower than the current service backend tests.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11444#issuecomment-1096638073
https://github.com/hail-is/hail/pull/11445#issuecomment-1062288146:25,Integrability,message,message,25,"It's a vaguely confusing message, but the part in the brackets indicates that we expected this to fail but instead it passed. The part after the brackets is the default message associated with the `fails_service_backend` annotation; ```; [XPASS(strict)] doesn't yet work on service backend; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11445#issuecomment-1062288146
https://github.com/hail-is/hail/pull/11445#issuecomment-1062288146:169,Integrability,message,message,169,"It's a vaguely confusing message, but the part in the brackets indicates that we expected this to fail but instead it passed. The part after the brackets is the default message associated with the `fails_service_backend` annotation; ```; [XPASS(strict)] doesn't yet work on service backend; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11445#issuecomment-1062288146
https://github.com/hail-is/hail/pull/11445#issuecomment-1069519190:35,Testability,test,test,35,"This does not substantially change test time, so let's approve and merge this.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11445#issuecomment-1069519190
https://github.com/hail-is/hail/pull/11450#issuecomment-1059482577:11,Testability,test,test,11,"What. ```; test/hail/methods/test_impex.py::VCFTests::test_empty_read_write Table._same: rows differ:; Row mismatch at key=Struct(locus=Locus(contig=20, position=10019093, reference_genome=GRCh37), alleles=['A', 'G']):; L: None; R: [Struct(rsid='rs575534', qual=1686840.0, filters=frozenset(), info=Struct(NEGATIVE_TRAIN_SITE=False, HWP=0.0001, AC=[89], culprit='FS', MQ0=0, ReadPosRankSum=0.353, AN=200, InbreedingCoeff=0.1356, AF=[0.582], GQ_STDDEV=804.93, FS=0.0, DP=77560, GQ_MEAN=747.95, POSITIVE_TRAIN_SITE=True, VQSLOD=6.91, ClippingRankSum=-0.175, BaseQRankSum=4.0, MLEAF=[0.582], MLEAC=[1012], MQ=59.71, QD=23.16, END=None, DB=True, HaplotypeScore=None, MQRankSum=0.213, CCC=1740, NCC=0, DS=False), __uid_595=[Struct(GT=Call(alleles=[0, 0], phased=False), AD=[30, 0], DP=30, GQ=72, PL=[0, 72, 1080]), Struct(GT=Call(alleles=[0, 1], phased=False), AD=[49, 45], DP=94, GQ=99, PL=[1352, 0, 1480]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[21, 0], DP=21, GQ=60, PL=[0, 60, 759]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[21, 0], DP=21, GQ=60, PL=[0, 60, 780]), Struct(GT=Call(alleles=[0, 1], phased=False), AD=[76, 52], DP=128, GQ=99, PL=[1601, 0, 2128]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[26, 0], DP=26, GQ=63, PL=[0, 63, 945]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[26, 0], DP=26, GQ=63, PL=[0, 63, 945]), Struct(GT=Call(alleles=[0, 1], phased=False), AD=[47, 46], DP=93, GQ=99, PL=[1433, 0, 1379]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[26, 0], DP=26, GQ=60, PL=[0, 60, 900]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[24, 0], DP=24, GQ=60, PL=[0, 60, 877]), Struct(GT=Call(alleles=[0, 1], phased=False), AD=[67, 46], DP=113, GQ=99, PL=[1562, 0, 1818]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[25, 0], DP=25, GQ=72, PL=[0, 72, 1018]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[27, 0], DP=27, GQ=60, PL=[0, 60, 900]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[28, 0], DP=28, GQ=60, PL=[0, 60, 900]), St",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11450#issuecomment-1059482577
https://github.com/hail-is/hail/pull/11450#issuecomment-1059482577:97266,Testability,test,test,97266,"e), AD=[23, 0], DP=23, GQ=22, PL=[0, 22, 706]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[34, 0], DP=34, GQ=33, PL=[0, 33, 1040]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[27, 0], DP=27, GQ=63, PL=[0, 63, 873]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[24, 0], DP=24, GQ=66, PL=[0, 66, 990]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[36, 0], DP=36, GQ=76, PL=[0, 76, 1170]), Struct(GT=Call(alleles=[0, 1], phased=False), AD=[27, 5], DP=32, GQ=3, PL=[3, 0, 768]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[21, 0], DP=21, GQ=60, PL=[0, 60, 768]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[22, 0], DP=22, GQ=49, PL=[0, 49, 673]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[19, 0], DP=19, GQ=18, PL=[0, 18, 504]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[17, 0], DP=17, GQ=0, PL=[0, 0, 388]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[21, 0], DP=21, GQ=63, PL=[0, 63, 702]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[24, 0], DP=24, GQ=60, PL=[0, 60, 900]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[18, 0], DP=18, GQ=0, PL=[0, 0, 468]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[17, 0], DP=17, GQ=0, PL=[0, 0, 506]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[14, 0], DP=14, GQ=0, PL=[0, 0, 290]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[22, 0], DP=22, GQ=20, PL=[0, 20, 708])])]; FAILED; ________________________ VCFTests.test_empty_read_write ________________________. self = <test.hail.methods.test_impex.VCFTests testMethod=test_empty_read_write>. @fails_service_backend(); @fails_local_backend(); def test_empty_read_write(self):; mt = hl.import_vcf(resource('sample.vcf'), min_partitions=4).filter_rows(False); ; out1 = new_temp_file(extension='vcf'); out2 = new_temp_file(extension='vcf.bgz'); ; hl.export_vcf(mt, out1); hl.export_vcf(mt, out2); ; assert os.stat(uri_path(out1)).st_size > 0; assert os.stat(uri_path(out2)).st_size > 0; ; > assert hl.import_vcf(out1)._same(mt); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11450#issuecomment-1059482577
https://github.com/hail-is/hail/pull/11450#issuecomment-1059482577:97304,Testability,test,testMethod,97304,"e), AD=[23, 0], DP=23, GQ=22, PL=[0, 22, 706]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[34, 0], DP=34, GQ=33, PL=[0, 33, 1040]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[27, 0], DP=27, GQ=63, PL=[0, 63, 873]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[24, 0], DP=24, GQ=66, PL=[0, 66, 990]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[36, 0], DP=36, GQ=76, PL=[0, 76, 1170]), Struct(GT=Call(alleles=[0, 1], phased=False), AD=[27, 5], DP=32, GQ=3, PL=[3, 0, 768]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[21, 0], DP=21, GQ=60, PL=[0, 60, 768]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[22, 0], DP=22, GQ=49, PL=[0, 49, 673]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[19, 0], DP=19, GQ=18, PL=[0, 18, 504]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[17, 0], DP=17, GQ=0, PL=[0, 0, 388]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[21, 0], DP=21, GQ=63, PL=[0, 63, 702]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[24, 0], DP=24, GQ=60, PL=[0, 60, 900]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[18, 0], DP=18, GQ=0, PL=[0, 0, 468]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[17, 0], DP=17, GQ=0, PL=[0, 0, 506]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[14, 0], DP=14, GQ=0, PL=[0, 0, 290]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[22, 0], DP=22, GQ=20, PL=[0, 20, 708])])]; FAILED; ________________________ VCFTests.test_empty_read_write ________________________. self = <test.hail.methods.test_impex.VCFTests testMethod=test_empty_read_write>. @fails_service_backend(); @fails_local_backend(); def test_empty_read_write(self):; mt = hl.import_vcf(resource('sample.vcf'), min_partitions=4).filter_rows(False); ; out1 = new_temp_file(extension='vcf'); out2 = new_temp_file(extension='vcf.bgz'); ; hl.export_vcf(mt, out1); hl.export_vcf(mt, out2); ; assert os.stat(uri_path(out1)).st_size > 0; assert os.stat(uri_path(out2)).st_size > 0; ; > assert hl.import_vcf(out1)._same(mt); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11450#issuecomment-1059482577
https://github.com/hail-is/hail/pull/11450#issuecomment-1059482577:97642,Testability,assert,assert,97642,"e), AD=[23, 0], DP=23, GQ=22, PL=[0, 22, 706]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[34, 0], DP=34, GQ=33, PL=[0, 33, 1040]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[27, 0], DP=27, GQ=63, PL=[0, 63, 873]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[24, 0], DP=24, GQ=66, PL=[0, 66, 990]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[36, 0], DP=36, GQ=76, PL=[0, 76, 1170]), Struct(GT=Call(alleles=[0, 1], phased=False), AD=[27, 5], DP=32, GQ=3, PL=[3, 0, 768]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[21, 0], DP=21, GQ=60, PL=[0, 60, 768]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[22, 0], DP=22, GQ=49, PL=[0, 49, 673]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[19, 0], DP=19, GQ=18, PL=[0, 18, 504]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[17, 0], DP=17, GQ=0, PL=[0, 0, 388]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[21, 0], DP=21, GQ=63, PL=[0, 63, 702]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[24, 0], DP=24, GQ=60, PL=[0, 60, 900]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[18, 0], DP=18, GQ=0, PL=[0, 0, 468]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[17, 0], DP=17, GQ=0, PL=[0, 0, 506]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[14, 0], DP=14, GQ=0, PL=[0, 0, 290]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[22, 0], DP=22, GQ=20, PL=[0, 20, 708])])]; FAILED; ________________________ VCFTests.test_empty_read_write ________________________. self = <test.hail.methods.test_impex.VCFTests testMethod=test_empty_read_write>. @fails_service_backend(); @fails_local_backend(); def test_empty_read_write(self):; mt = hl.import_vcf(resource('sample.vcf'), min_partitions=4).filter_rows(False); ; out1 = new_temp_file(extension='vcf'); out2 = new_temp_file(extension='vcf.bgz'); ; hl.export_vcf(mt, out1); hl.export_vcf(mt, out2); ; assert os.stat(uri_path(out1)).st_size > 0; assert os.stat(uri_path(out2)).st_size > 0; ; > assert hl.import_vcf(out1)._same(mt); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11450#issuecomment-1059482577
https://github.com/hail-is/hail/pull/11450#issuecomment-1059482577:97686,Testability,assert,assert,97686,"e), AD=[23, 0], DP=23, GQ=22, PL=[0, 22, 706]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[34, 0], DP=34, GQ=33, PL=[0, 33, 1040]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[27, 0], DP=27, GQ=63, PL=[0, 63, 873]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[24, 0], DP=24, GQ=66, PL=[0, 66, 990]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[36, 0], DP=36, GQ=76, PL=[0, 76, 1170]), Struct(GT=Call(alleles=[0, 1], phased=False), AD=[27, 5], DP=32, GQ=3, PL=[3, 0, 768]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[21, 0], DP=21, GQ=60, PL=[0, 60, 768]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[22, 0], DP=22, GQ=49, PL=[0, 49, 673]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[19, 0], DP=19, GQ=18, PL=[0, 18, 504]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[17, 0], DP=17, GQ=0, PL=[0, 0, 388]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[21, 0], DP=21, GQ=63, PL=[0, 63, 702]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[24, 0], DP=24, GQ=60, PL=[0, 60, 900]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[18, 0], DP=18, GQ=0, PL=[0, 0, 468]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[17, 0], DP=17, GQ=0, PL=[0, 0, 506]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[14, 0], DP=14, GQ=0, PL=[0, 0, 290]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[22, 0], DP=22, GQ=20, PL=[0, 20, 708])])]; FAILED; ________________________ VCFTests.test_empty_read_write ________________________. self = <test.hail.methods.test_impex.VCFTests testMethod=test_empty_read_write>. @fails_service_backend(); @fails_local_backend(); def test_empty_read_write(self):; mt = hl.import_vcf(resource('sample.vcf'), min_partitions=4).filter_rows(False); ; out1 = new_temp_file(extension='vcf'); out2 = new_temp_file(extension='vcf.bgz'); ; hl.export_vcf(mt, out1); hl.export_vcf(mt, out2); ; assert os.stat(uri_path(out1)).st_size > 0; assert os.stat(uri_path(out2)).st_size > 0; ; > assert hl.import_vcf(out1)._same(mt); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11450#issuecomment-1059482577
https://github.com/hail-is/hail/pull/11450#issuecomment-1059482577:97734,Testability,assert,assert,97734,"e), AD=[23, 0], DP=23, GQ=22, PL=[0, 22, 706]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[34, 0], DP=34, GQ=33, PL=[0, 33, 1040]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[27, 0], DP=27, GQ=63, PL=[0, 63, 873]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[24, 0], DP=24, GQ=66, PL=[0, 66, 990]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[36, 0], DP=36, GQ=76, PL=[0, 76, 1170]), Struct(GT=Call(alleles=[0, 1], phased=False), AD=[27, 5], DP=32, GQ=3, PL=[3, 0, 768]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[21, 0], DP=21, GQ=60, PL=[0, 60, 768]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[22, 0], DP=22, GQ=49, PL=[0, 49, 673]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[19, 0], DP=19, GQ=18, PL=[0, 18, 504]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[17, 0], DP=17, GQ=0, PL=[0, 0, 388]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[21, 0], DP=21, GQ=63, PL=[0, 63, 702]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[24, 0], DP=24, GQ=60, PL=[0, 60, 900]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[18, 0], DP=18, GQ=0, PL=[0, 0, 468]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[17, 0], DP=17, GQ=0, PL=[0, 0, 506]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[14, 0], DP=14, GQ=0, PL=[0, 0, 290]), Struct(GT=Call(alleles=[0, 0], phased=False), AD=[22, 0], DP=22, GQ=20, PL=[0, 20, 708])])]; FAILED; ________________________ VCFTests.test_empty_read_write ________________________. self = <test.hail.methods.test_impex.VCFTests testMethod=test_empty_read_write>. @fails_service_backend(); @fails_local_backend(); def test_empty_read_write(self):; mt = hl.import_vcf(resource('sample.vcf'), min_partitions=4).filter_rows(False); ; out1 = new_temp_file(extension='vcf'); out2 = new_temp_file(extension='vcf.bgz'); ; hl.export_vcf(mt, out1); hl.export_vcf(mt, out2); ; assert os.stat(uri_path(out1)).st_size > 0; assert os.stat(uri_path(out2)).st_size > 0; ; > assert hl.import_vcf(out1)._same(mt); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11450#issuecomment-1059482577
https://github.com/hail-is/hail/pull/11450#issuecomment-1059484035:53,Testability,test,test,53,"For the record, mt.count, and mt.force_count in that test, both say that the matrix is empty. So I have no Idea what's going on",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11450#issuecomment-1059484035
https://github.com/hail-is/hail/pull/11450#issuecomment-1061867500:5,Availability,checkpoint,checkpointing,5,"Huh, checkpointing `sample.vcf` after the filter clears up the issue. This may be something to do with the result of import_vcf being used directly with `_same`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11450#issuecomment-1061867500
https://github.com/hail-is/hail/pull/11450#issuecomment-1061867500:49,Usability,clear,clears,49,"Huh, checkpointing `sample.vcf` after the filter clears up the issue. This may be something to do with the result of import_vcf being used directly with `_same`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11450#issuecomment-1061867500
https://github.com/hail-is/hail/pull/11450#issuecomment-1061869461:49,Availability,checkpoint,checkpointing,49,"Yeah, there is some bug in `import_vcf -> _same` checkpointing before filter also fixes it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11450#issuecomment-1061869461
https://github.com/hail-is/hail/pull/11450#issuecomment-1065413540:46,Availability,error,errors,46,"Stray ""n"" snuck in, everything failing syntax errors.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11450#issuecomment-1065413540
https://github.com/hail-is/hail/pull/11450#issuecomment-1072685898:81,Testability,test,tests,81,Is this working and ready for review? This would unlock quite a few more failing tests.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11450#issuecomment-1072685898
https://github.com/hail-is/hail/pull/11450#issuecomment-1072729431:105,Availability,error,errors,105,"I've reviewed most of this and it looks good, just waiting for Chris to finish squashing this tail of FS errors.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11450#issuecomment-1072729431
https://github.com/hail-is/hail/pull/11450#issuecomment-1076821361:44,Testability,test,tests,44,It looks likely to pass the service backend tests too!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11450#issuecomment-1076821361
https://github.com/hail-is/hail/pull/11457#issuecomment-1057652421:32,Deployability,deploy,deploy,32,Vaguely feel like we should dev deploy and verify login still works,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11457#issuecomment-1057652421
https://github.com/hail-is/hail/pull/11457#issuecomment-1057652421:50,Testability,log,login,50,Vaguely feel like we should dev deploy and verify login still works,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11457#issuecomment-1057652421
https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274
https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274
https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274
https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274
https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274
https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274
https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274
https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274
https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274
https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274
https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274
https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274
https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274
https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11457#issuecomment-1061067274
https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257
https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257
https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257
https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257
https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257
https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257
https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257
https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257
https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257
https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257
https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257
https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257
https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257
https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11458#issuecomment-1058514257
https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336
https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336
https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336
https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336
https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336
https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336
https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336
https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336
https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336
https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336
https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336
https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336
https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336
https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11460#issuecomment-1058514336
https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214
https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214
https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214
https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214
https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214
https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214
https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214
https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214
https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214
https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214
https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214
https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214
https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214
https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11461#issuecomment-1058514214
https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400
https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400
https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400
https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400
https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400
https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400
https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400
https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400
https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400
https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400
https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400
https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400
https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400
https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11463#issuecomment-1058506400
https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063
https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063
https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063
https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063
https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063
https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063
https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063
https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063
https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063
https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063
https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063
https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063
https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063
https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11464#issuecomment-1059609063
https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527
https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527
https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527
https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527
https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527
https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527
https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527
https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527
https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527
https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527
https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527
https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527
https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527
https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11465#issuecomment-1058513527
https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286
https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286
https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286
https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286
https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286
https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286
https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286
https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286
https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286
https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286
https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286
https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286
https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286
https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11466#issuecomment-1058514286
https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106
https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106
https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106
https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106
https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106
https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106
https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106
https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106
https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106
https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106
https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106
https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106
https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106
https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11467#issuecomment-1058514106
https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339
https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339
https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339
https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339
https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339
https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339
https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339
https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339
https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339
https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339
https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339
https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339
https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339
https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11469#issuecomment-1058506339
https://github.com/hail-is/hail/pull/11471#issuecomment-1058066720:39,Testability,log,logs,39,"Actually, it looks like you got rid of logs entirely for the JVM entryway?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1058066720
https://github.com/hail-is/hail/pull/11471#issuecomment-1058148308:18,Testability,test,test,18,Great! I'll still test the changes by hand later if for no other reason to make sure the UI still works and I know how to use the query service.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1058148308
https://github.com/hail-is/hail/pull/11471#issuecomment-1059415709:4,Testability,test,tests,4,The tests are infinitely waiting. Do you have any suggestions for debugging this? https://ci.hail.is/watched_branches/0/pr/11471,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059415709
https://github.com/hail-is/hail/pull/11471#issuecomment-1059448548:346,Availability,alive,alive,346,"I search the google logs for the pull request in question. For example,. ```; (resource.labels.namespace_name=""pr-11471-default-fn1xhr9ahy9v"" AND; labels.""k8s-pod/app"":""batch""; ) OR (; labels.""compute.googleapis.com/resource_name"":""batch-worker-pr-11471-default-fn1xhr9ahy9v"" AND; logName:""worker.log""); ```. That PR seems to have a worker stuck alive: `batch-worker-pr-11471-default-fn1xhr9ahy9v-standard-ux0sp`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059448548
https://github.com/hail-is/hail/pull/11471#issuecomment-1059448548:20,Testability,log,logs,20,"I search the google logs for the pull request in question. For example,. ```; (resource.labels.namespace_name=""pr-11471-default-fn1xhr9ahy9v"" AND; labels.""k8s-pod/app"":""batch""; ) OR (; labels.""compute.googleapis.com/resource_name"":""batch-worker-pr-11471-default-fn1xhr9ahy9v"" AND; logName:""worker.log""); ```. That PR seems to have a worker stuck alive: `batch-worker-pr-11471-default-fn1xhr9ahy9v-standard-ux0sp`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059448548
https://github.com/hail-is/hail/pull/11471#issuecomment-1059448548:281,Testability,log,logName,281,"I search the google logs for the pull request in question. For example,. ```; (resource.labels.namespace_name=""pr-11471-default-fn1xhr9ahy9v"" AND; labels.""k8s-pod/app"":""batch""; ) OR (; labels.""compute.googleapis.com/resource_name"":""batch-worker-pr-11471-default-fn1xhr9ahy9v"" AND; logName:""worker.log""); ```. That PR seems to have a worker stuck alive: `batch-worker-pr-11471-default-fn1xhr9ahy9v-standard-ux0sp`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059448548
https://github.com/hail-is/hail/pull/11471#issuecomment-1059448548:297,Testability,log,log,297,"I search the google logs for the pull request in question. For example,. ```; (resource.labels.namespace_name=""pr-11471-default-fn1xhr9ahy9v"" AND; labels.""k8s-pod/app"":""batch""; ) OR (; labels.""compute.googleapis.com/resource_name"":""batch-worker-pr-11471-default-fn1xhr9ahy9v"" AND; logName:""worker.log""); ```. That PR seems to have a worker stuck alive: `batch-worker-pr-11471-default-fn1xhr9ahy9v-standard-ux0sp`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059448548
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:44,Deployability,install,install,44,"From that VM, I can get into the container, install the jdk, then run jstack on one of the hung JVMs.; ```; # jstack 1433; ...; ""pool-1-thread-1"" #18 prio=5 os_prio=0 tid=0x00007f50c4f23000 nid=0x82c waiting on condition [0x00007f5084eeb000]; java.lang.Thread.State: WAITING (parking); 	at sun.misc.Unsafe.park(Native Method); 	- parking to wait for <0x00000000e8ddaea0> (a scala.concurrent.impl.Promise$CompletionLatch); 	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304); 	at scala.concurrent.impl.Promise$DefaultPromise.tryAwait(Promise.scala:242); 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:258); 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:263); 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:220); 	at scala.concurrent.Await$$$Lambda$2201/1092639564.apply(Unknown Source); 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:57); 	at scala.concurrent.Await$.result(package.scala:146); 	at is.hail.backend.service.ServiceBackend.parallelizeAndComputeWithIndex(ServiceBackend.scala:145); ...; ```. This is the line that waits to upload the compiled code for the workers to Google Cloud Storage. The other threads appear to be waiting on the memory service:; ```; ""pool-2-thread-2"" #27 prio=5 os_prio=0 tid=0x00007f5028ad9000 nid=0x88d waiting on condition [0x00007f50274fc000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hai",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:380,Performance,concurren,concurrent,380,"From that VM, I can get into the container, install the jdk, then run jstack on one of the hung JVMs.; ```; # jstack 1433; ...; ""pool-1-thread-1"" #18 prio=5 os_prio=0 tid=0x00007f50c4f23000 nid=0x82c waiting on condition [0x00007f5084eeb000]; java.lang.Thread.State: WAITING (parking); 	at sun.misc.Unsafe.park(Native Method); 	- parking to wait for <0x00000000e8ddaea0> (a scala.concurrent.impl.Promise$CompletionLatch); 	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304); 	at scala.concurrent.impl.Promise$DefaultPromise.tryAwait(Promise.scala:242); 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:258); 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:263); 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:220); 	at scala.concurrent.Await$$$Lambda$2201/1092639564.apply(Unknown Source); 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:57); 	at scala.concurrent.Await$.result(package.scala:146); 	at is.hail.backend.service.ServiceBackend.parallelizeAndComputeWithIndex(ServiceBackend.scala:145); ...; ```. This is the line that waits to upload the compiled code for the workers to Google Cloud Storage. The other threads appear to be waiting on the memory service:; ```; ""pool-2-thread-2"" #27 prio=5 os_prio=0 tid=0x00007f5028ad9000 nid=0x88d waiting on condition [0x00007f50274fc000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hai",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:436,Performance,concurren,concurrent,436,"From that VM, I can get into the container, install the jdk, then run jstack on one of the hung JVMs.; ```; # jstack 1433; ...; ""pool-1-thread-1"" #18 prio=5 os_prio=0 tid=0x00007f50c4f23000 nid=0x82c waiting on condition [0x00007f5084eeb000]; java.lang.Thread.State: WAITING (parking); 	at sun.misc.Unsafe.park(Native Method); 	- parking to wait for <0x00000000e8ddaea0> (a scala.concurrent.impl.Promise$CompletionLatch); 	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304); 	at scala.concurrent.impl.Promise$DefaultPromise.tryAwait(Promise.scala:242); 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:258); 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:263); 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:220); 	at scala.concurrent.Await$$$Lambda$2201/1092639564.apply(Unknown Source); 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:57); 	at scala.concurrent.Await$.result(package.scala:146); 	at is.hail.backend.service.ServiceBackend.parallelizeAndComputeWithIndex(ServiceBackend.scala:145); ...; ```. This is the line that waits to upload the compiled code for the workers to Google Cloud Storage. The other threads appear to be waiting on the memory service:; ```; ""pool-2-thread-2"" #27 prio=5 os_prio=0 tid=0x00007f5028ad9000 nid=0x88d waiting on condition [0x00007f50274fc000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hai",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:507,Performance,concurren,concurrent,507,"From that VM, I can get into the container, install the jdk, then run jstack on one of the hung JVMs.; ```; # jstack 1433; ...; ""pool-1-thread-1"" #18 prio=5 os_prio=0 tid=0x00007f50c4f23000 nid=0x82c waiting on condition [0x00007f5084eeb000]; java.lang.Thread.State: WAITING (parking); 	at sun.misc.Unsafe.park(Native Method); 	- parking to wait for <0x00000000e8ddaea0> (a scala.concurrent.impl.Promise$CompletionLatch); 	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304); 	at scala.concurrent.impl.Promise$DefaultPromise.tryAwait(Promise.scala:242); 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:258); 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:263); 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:220); 	at scala.concurrent.Await$$$Lambda$2201/1092639564.apply(Unknown Source); 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:57); 	at scala.concurrent.Await$.result(package.scala:146); 	at is.hail.backend.service.ServiceBackend.parallelizeAndComputeWithIndex(ServiceBackend.scala:145); ...; ```. This is the line that waits to upload the compiled code for the workers to Google Cloud Storage. The other threads appear to be waiting on the memory service:; ```; ""pool-2-thread-2"" #27 prio=5 os_prio=0 tid=0x00007f5028ad9000 nid=0x88d waiting on condition [0x00007f50274fc000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hai",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:625,Performance,concurren,concurrent,625,"From that VM, I can get into the container, install the jdk, then run jstack on one of the hung JVMs.; ```; # jstack 1433; ...; ""pool-1-thread-1"" #18 prio=5 os_prio=0 tid=0x00007f50c4f23000 nid=0x82c waiting on condition [0x00007f5084eeb000]; java.lang.Thread.State: WAITING (parking); 	at sun.misc.Unsafe.park(Native Method); 	- parking to wait for <0x00000000e8ddaea0> (a scala.concurrent.impl.Promise$CompletionLatch); 	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304); 	at scala.concurrent.impl.Promise$DefaultPromise.tryAwait(Promise.scala:242); 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:258); 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:263); 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:220); 	at scala.concurrent.Await$$$Lambda$2201/1092639564.apply(Unknown Source); 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:57); 	at scala.concurrent.Await$.result(package.scala:146); 	at is.hail.backend.service.ServiceBackend.parallelizeAndComputeWithIndex(ServiceBackend.scala:145); ...; ```. This is the line that waits to upload the compiled code for the workers to Google Cloud Storage. The other threads appear to be waiting on the memory service:; ```; ""pool-2-thread-2"" #27 prio=5 os_prio=0 tid=0x00007f5028ad9000 nid=0x88d waiting on condition [0x00007f50274fc000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hai",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:750,Performance,concurren,concurrent,750,"From that VM, I can get into the container, install the jdk, then run jstack on one of the hung JVMs.; ```; # jstack 1433; ...; ""pool-1-thread-1"" #18 prio=5 os_prio=0 tid=0x00007f50c4f23000 nid=0x82c waiting on condition [0x00007f5084eeb000]; java.lang.Thread.State: WAITING (parking); 	at sun.misc.Unsafe.park(Native Method); 	- parking to wait for <0x00000000e8ddaea0> (a scala.concurrent.impl.Promise$CompletionLatch); 	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304); 	at scala.concurrent.impl.Promise$DefaultPromise.tryAwait(Promise.scala:242); 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:258); 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:263); 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:220); 	at scala.concurrent.Await$$$Lambda$2201/1092639564.apply(Unknown Source); 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:57); 	at scala.concurrent.Await$.result(package.scala:146); 	at is.hail.backend.service.ServiceBackend.parallelizeAndComputeWithIndex(ServiceBackend.scala:145); ...; ```. This is the line that waits to upload the compiled code for the workers to Google Cloud Storage. The other threads appear to be waiting on the memory service:; ```; ""pool-2-thread-2"" #27 prio=5 os_prio=0 tid=0x00007f5028ad9000 nid=0x88d waiting on condition [0x00007f50274fc000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hai",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:870,Performance,concurren,concurrent,870,"From that VM, I can get into the container, install the jdk, then run jstack on one of the hung JVMs.; ```; # jstack 1433; ...; ""pool-1-thread-1"" #18 prio=5 os_prio=0 tid=0x00007f50c4f23000 nid=0x82c waiting on condition [0x00007f5084eeb000]; java.lang.Thread.State: WAITING (parking); 	at sun.misc.Unsafe.park(Native Method); 	- parking to wait for <0x00000000e8ddaea0> (a scala.concurrent.impl.Promise$CompletionLatch); 	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304); 	at scala.concurrent.impl.Promise$DefaultPromise.tryAwait(Promise.scala:242); 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:258); 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:263); 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:220); 	at scala.concurrent.Await$$$Lambda$2201/1092639564.apply(Unknown Source); 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:57); 	at scala.concurrent.Await$.result(package.scala:146); 	at is.hail.backend.service.ServiceBackend.parallelizeAndComputeWithIndex(ServiceBackend.scala:145); ...; ```. This is the line that waits to upload the compiled code for the workers to Google Cloud Storage. The other threads appear to be waiting on the memory service:; ```; ""pool-2-thread-2"" #27 prio=5 os_prio=0 tid=0x00007f5028ad9000 nid=0x88d waiting on condition [0x00007f50274fc000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hai",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:948,Performance,concurren,concurrent,948,"From that VM, I can get into the container, install the jdk, then run jstack on one of the hung JVMs.; ```; # jstack 1433; ...; ""pool-1-thread-1"" #18 prio=5 os_prio=0 tid=0x00007f50c4f23000 nid=0x82c waiting on condition [0x00007f5084eeb000]; java.lang.Thread.State: WAITING (parking); 	at sun.misc.Unsafe.park(Native Method); 	- parking to wait for <0x00000000e8ddaea0> (a scala.concurrent.impl.Promise$CompletionLatch); 	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304); 	at scala.concurrent.impl.Promise$DefaultPromise.tryAwait(Promise.scala:242); 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:258); 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:263); 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:220); 	at scala.concurrent.Await$$$Lambda$2201/1092639564.apply(Unknown Source); 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:57); 	at scala.concurrent.Await$.result(package.scala:146); 	at is.hail.backend.service.ServiceBackend.parallelizeAndComputeWithIndex(ServiceBackend.scala:145); ...; ```. This is the line that waits to upload the compiled code for the workers to Google Cloud Storage. The other threads appear to be waiting on the memory service:; ```; ""pool-2-thread-2"" #27 prio=5 os_prio=0 tid=0x00007f5028ad9000 nid=0x88d waiting on condition [0x00007f50274fc000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hai",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:1023,Performance,concurren,concurrent,1023," the container, install the jdk, then run jstack on one of the hung JVMs.; ```; # jstack 1433; ...; ""pool-1-thread-1"" #18 prio=5 os_prio=0 tid=0x00007f50c4f23000 nid=0x82c waiting on condition [0x00007f5084eeb000]; java.lang.Thread.State: WAITING (parking); 	at sun.misc.Unsafe.park(Native Method); 	- parking to wait for <0x00000000e8ddaea0> (a scala.concurrent.impl.Promise$CompletionLatch); 	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304); 	at scala.concurrent.impl.Promise$DefaultPromise.tryAwait(Promise.scala:242); 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:258); 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:263); 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:220); 	at scala.concurrent.Await$$$Lambda$2201/1092639564.apply(Unknown Source); 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:57); 	at scala.concurrent.Await$.result(package.scala:146); 	at is.hail.backend.service.ServiceBackend.parallelizeAndComputeWithIndex(ServiceBackend.scala:145); ...; ```. This is the line that waits to upload the compiled code for the workers to Google Cloud Storage. The other threads appear to be waiting on the memory service:; ```; ""pool-2-thread-2"" #27 prio=5 os_prio=0 tid=0x00007f5028ad9000 nid=0x88d waiting on condition [0x00007f50274fc000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hail.services.Requester.request",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:1099,Performance,concurren,concurrent,1099,"``; # jstack 1433; ...; ""pool-1-thread-1"" #18 prio=5 os_prio=0 tid=0x00007f50c4f23000 nid=0x82c waiting on condition [0x00007f5084eeb000]; java.lang.Thread.State: WAITING (parking); 	at sun.misc.Unsafe.park(Native Method); 	- parking to wait for <0x00000000e8ddaea0> (a scala.concurrent.impl.Promise$CompletionLatch); 	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304); 	at scala.concurrent.impl.Promise$DefaultPromise.tryAwait(Promise.scala:242); 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:258); 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:263); 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:220); 	at scala.concurrent.Await$$$Lambda$2201/1092639564.apply(Unknown Source); 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:57); 	at scala.concurrent.Await$.result(package.scala:146); 	at is.hail.backend.service.ServiceBackend.parallelizeAndComputeWithIndex(ServiceBackend.scala:145); ...; ```. This is the line that waits to upload the compiled code for the workers to Google Cloud Storage. The other threads appear to be waiting on the memory service:; ```; ""pool-2-thread-2"" #27 prio=5 os_prio=0 tid=0x00007f5028ad9000 nid=0x88d waiting on condition [0x00007f50274fc000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hail.services.Requester.requestWithHandler(Requester.scala:69); 	at is.hail.services.Requester.request(Requ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:1165,Performance,concurren,concurrent,1165,"=0x00007f50c4f23000 nid=0x82c waiting on condition [0x00007f5084eeb000]; java.lang.Thread.State: WAITING (parking); 	at sun.misc.Unsafe.park(Native Method); 	- parking to wait for <0x00000000e8ddaea0> (a scala.concurrent.impl.Promise$CompletionLatch); 	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304); 	at scala.concurrent.impl.Promise$DefaultPromise.tryAwait(Promise.scala:242); 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:258); 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:263); 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:220); 	at scala.concurrent.Await$$$Lambda$2201/1092639564.apply(Unknown Source); 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:57); 	at scala.concurrent.Await$.result(package.scala:146); 	at is.hail.backend.service.ServiceBackend.parallelizeAndComputeWithIndex(ServiceBackend.scala:145); ...; ```. This is the line that waits to upload the compiled code for the workers to Google Cloud Storage. The other threads appear to be waiting on the memory service:; ```; ""pool-2-thread-2"" #27 prio=5 os_prio=0 tid=0x00007f5028ad9000 nid=0x88d waiting on condition [0x00007f50274fc000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hail.services.Requester.requestWithHandler(Requester.scala:69); 	at is.hail.services.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.w",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:1240,Performance,concurren,concurrent,1240,"va.lang.Thread.State: WAITING (parking); 	at sun.misc.Unsafe.park(Native Method); 	- parking to wait for <0x00000000e8ddaea0> (a scala.concurrent.impl.Promise$CompletionLatch); 	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304); 	at scala.concurrent.impl.Promise$DefaultPromise.tryAwait(Promise.scala:242); 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:258); 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:263); 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:220); 	at scala.concurrent.Await$$$Lambda$2201/1092639564.apply(Unknown Source); 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:57); 	at scala.concurrent.Await$.result(package.scala:146); 	at is.hail.backend.service.ServiceBackend.parallelizeAndComputeWithIndex(ServiceBackend.scala:145); ...; ```. This is the line that waits to upload the compiled code for the workers to Google Cloud Storage. The other threads appear to be waiting on the memory service:; ```; ""pool-2-thread-2"" #27 prio=5 os_prio=0 tid=0x00007f5028ad9000 nid=0x88d waiting on condition [0x00007f50274fc000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hail.services.Requester.requestWithHandler(Requester.scala:69); 	at is.hail.services.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.c",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:1327,Performance,concurren,concurrent,1327,"rking to wait for <0x00000000e8ddaea0> (a scala.concurrent.impl.Promise$CompletionLatch); 	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304); 	at scala.concurrent.impl.Promise$DefaultPromise.tryAwait(Promise.scala:242); 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:258); 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:263); 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:220); 	at scala.concurrent.Await$$$Lambda$2201/1092639564.apply(Unknown Source); 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:57); 	at scala.concurrent.Await$.result(package.scala:146); 	at is.hail.backend.service.ServiceBackend.parallelizeAndComputeWithIndex(ServiceBackend.scala:145); ...; ```. This is the line that waits to upload the compiled code for the workers to Google Cloud Storage. The other threads appear to be waiting on the memory service:; ```; ""pool-2-thread-2"" #27 prio=5 os_prio=0 tid=0x00007f5028ad9000 nid=0x88d waiting on condition [0x00007f50274fc000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hail.services.Requester.requestWithHandler(Requester.scala:69); 	at is.hail.services.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.close(ServiceCacheableFS.scala:46); 	at java.io.FilterOutputStream.close(FilterOutputStr",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:3049,Performance,concurren,concurrent,3049,"la:69); 	at is.hail.services.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.close(ServiceCacheableFS.scala:46); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 	at is.hail.utils.package$.using(package.scala:658); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$5(ServiceBackend.scala:127); 	at is.hail.backend.service.ServiceBackend$$Lambda$2194/482268176.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$4(ServiceBackend.scala:127); 	at is.hail.backend.service.ServiceBackend$$Lambda$2191/716305671.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748). ""pool-2-thread-1"" #26 prio=5 os_prio=0 tid=0x00007f502866e000 nid=0x88c waiting on condition [0x00007f50275fd000]; java.lang.Thread.State: TIM",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:3114,Performance,concurren,concurrent,3114,"); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.close(ServiceCacheableFS.scala:46); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 	at is.hail.utils.package$.using(package.scala:658); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$5(ServiceBackend.scala:127); 	at is.hail.backend.service.ServiceBackend$$Lambda$2194/482268176.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$4(ServiceBackend.scala:127); 	at is.hail.backend.service.ServiceBackend$$Lambda$2191/716305671.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748). ""pool-2-thread-1"" #26 prio=5 os_prio=0 tid=0x00007f502866e000 nid=0x88c waiting on condition [0x00007f50275fd000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method);",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:3287,Performance,concurren,concurrent,3287,".FilterOutputStream.close(FilterOutputStream.java:159); 	at is.hail.utils.package$.using(package.scala:658); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$5(ServiceBackend.scala:127); 	at is.hail.backend.service.ServiceBackend$$Lambda$2194/482268176.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$4(ServiceBackend.scala:127); 	at is.hail.backend.service.ServiceBackend$$Lambda$2191/716305671.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748). ""pool-2-thread-1"" #26 prio=5 os_prio=0 tid=0x00007f502866e000 nid=0x88c waiting on condition [0x00007f50275fd000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hail.services.Requester.reques",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:3349,Performance,concurren,concurrent,3349,".hail.utils.package$.using(package.scala:658); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$5(ServiceBackend.scala:127); 	at is.hail.backend.service.ServiceBackend$$Lambda$2194/482268176.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$4(ServiceBackend.scala:127); 	at is.hail.backend.service.ServiceBackend$$Lambda$2191/716305671.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748). ""pool-2-thread-1"" #26 prio=5 os_prio=0 tid=0x00007f502866e000 nid=0x88c waiting on condition [0x00007f50275fd000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hail.services.Requester.requestWithHandler(Requester.scala:69); 	at is.hail.services.Request",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:3423,Performance,concurren,concurrent,3423,".ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$5(ServiceBackend.scala:127); 	at is.hail.backend.service.ServiceBackend$$Lambda$2194/482268176.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$4(ServiceBackend.scala:127); 	at is.hail.backend.service.ServiceBackend$$Lambda$2191/716305671.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748). ""pool-2-thread-1"" #26 prio=5 os_prio=0 tid=0x00007f502866e000 nid=0x88c waiting on condition [0x00007f50275fd000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hail.services.Requester.requestWithHandler(Requester.scala:69); 	at is.hail.services.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryC",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:3490,Performance,concurren,concurrent,3490,"ckend.scala:127); 	at is.hail.backend.service.ServiceBackend$$Lambda$2194/482268176.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$4(ServiceBackend.scala:127); 	at is.hail.backend.service.ServiceBackend$$Lambda$2191/716305671.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748). ""pool-2-thread-1"" #26 prio=5 os_prio=0 tid=0x00007f502866e000 nid=0x88c waiting on condition [0x00007f50275fd000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hail.services.Requester.requestWithHandler(Requester.scala:69); 	at is.hail.services.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCachea",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:3564,Performance,concurren,concurrent,3564,"482268176.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$4(ServiceBackend.scala:127); 	at is.hail.backend.service.ServiceBackend$$Lambda$2191/716305671.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748). ""pool-2-thread-1"" #26 prio=5 os_prio=0 tid=0x00007f502866e000 nid=0x88c waiting on condition [0x00007f50275fd000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hail.services.Requester.requestWithHandler(Requester.scala:69); 	at is.hail.services.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.close(ServiceCacheableFS.scala:46); 	at java.io.FilterOutput",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:3644,Performance,concurren,concurrent,3644,"p.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$4(ServiceBackend.scala:127); 	at is.hail.backend.service.ServiceBackend$$Lambda$2191/716305671.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748). ""pool-2-thread-1"" #26 prio=5 os_prio=0 tid=0x00007f502866e000 nid=0x88c waiting on condition [0x00007f50275fd000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hail.services.Requester.requestWithHandler(Requester.scala:69); 	at is.hail.services.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.close(ServiceCacheableFS.scala:46); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 	at java.io.ObjectOutputStream$BlockD",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:3714,Performance,concurren,concurrent,3714,"yTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$4(ServiceBackend.scala:127); 	at is.hail.backend.service.ServiceBackend$$Lambda$2191/716305671.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748). ""pool-2-thread-1"" #26 prio=5 os_prio=0 tid=0x00007f502866e000 nid=0x88c waiting on condition [0x00007f50275fd000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hail.services.Requester.requestWithHandler(Requester.scala:69); 	at is.hail.services.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.close(ServiceCacheableFS.scala:46); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 	at java.io.ObjectOutputStream$BlockDataOutputStream.close(ObjectOutputStream.java:1828); 	at java.io.Objec",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:3799,Performance,concurren,concurrent,3799,"un$parallelizeAndComputeWithIndex$4(ServiceBackend.scala:127); 	at is.hail.backend.service.ServiceBackend$$Lambda$2191/716305671.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748). ""pool-2-thread-1"" #26 prio=5 os_prio=0 tid=0x00007f502866e000 nid=0x88c waiting on condition [0x00007f50275fd000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hail.services.Requester.requestWithHandler(Requester.scala:69); 	at is.hail.services.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.close(ServiceCacheableFS.scala:46); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 	at java.io.ObjectOutputStream$BlockDataOutputStream.close(ObjectOutputStream.java:1828); 	at java.io.ObjectOutputStream.close(ObjectOutputStream.java:742); 	at is.hail.utils.package$.using(pa",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:5473,Performance,concurren,concurrent,5473,ervices.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.close(ServiceCacheableFS.scala:46); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 	at java.io.ObjectOutputStream$BlockDataOutputStream.close(ObjectOutputStream.java:1828); 	at java.io.ObjectOutputStream.close(ObjectOutputStream.java:742); 	at is.hail.utils.package$.using(package.scala:658); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$2(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2192/1687163734.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$1(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2187/1214727901.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:5538,Performance,concurren,concurrent,5538,ervices.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.close(ServiceCacheableFS.scala:46); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 	at java.io.ObjectOutputStream$BlockDataOutputStream.close(ObjectOutputStream.java:1828); 	at java.io.ObjectOutputStream.close(ObjectOutputStream.java:742); 	at is.hail.utils.package$.using(package.scala:658); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$2(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2192/1687163734.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$1(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2187/1214727901.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:5711,Performance,concurren,concurrent,5711,ervices.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.close(ServiceCacheableFS.scala:46); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 	at java.io.ObjectOutputStream$BlockDataOutputStream.close(ObjectOutputStream.java:1828); 	at java.io.ObjectOutputStream.close(ObjectOutputStream.java:742); 	at is.hail.utils.package$.using(package.scala:658); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$2(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2192/1687163734.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$1(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2187/1214727901.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:5773,Performance,concurren,concurrent,5773,ervices.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.close(ServiceCacheableFS.scala:46); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 	at java.io.ObjectOutputStream$BlockDataOutputStream.close(ObjectOutputStream.java:1828); 	at java.io.ObjectOutputStream.close(ObjectOutputStream.java:742); 	at is.hail.utils.package$.using(package.scala:658); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$2(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2192/1687163734.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$1(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2187/1214727901.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:5847,Performance,concurren,concurrent,5847,ervices.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.close(ServiceCacheableFS.scala:46); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 	at java.io.ObjectOutputStream$BlockDataOutputStream.close(ObjectOutputStream.java:1828); 	at java.io.ObjectOutputStream.close(ObjectOutputStream.java:742); 	at is.hail.utils.package$.using(package.scala:658); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$2(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2192/1687163734.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$1(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2187/1214727901.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:5914,Performance,concurren,concurrent,5914,ervices.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.close(ServiceCacheableFS.scala:46); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 	at java.io.ObjectOutputStream$BlockDataOutputStream.close(ObjectOutputStream.java:1828); 	at java.io.ObjectOutputStream.close(ObjectOutputStream.java:742); 	at is.hail.utils.package$.using(package.scala:658); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$2(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2192/1687163734.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$1(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2187/1214727901.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:5988,Performance,concurren,concurrent,5988,ervices.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.close(ServiceCacheableFS.scala:46); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 	at java.io.ObjectOutputStream$BlockDataOutputStream.close(ObjectOutputStream.java:1828); 	at java.io.ObjectOutputStream.close(ObjectOutputStream.java:742); 	at is.hail.utils.package$.using(package.scala:658); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$2(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2192/1687163734.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$1(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2187/1214727901.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:6068,Performance,concurren,concurrent,6068,ervices.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.close(ServiceCacheableFS.scala:46); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 	at java.io.ObjectOutputStream$BlockDataOutputStream.close(ObjectOutputStream.java:1828); 	at java.io.ObjectOutputStream.close(ObjectOutputStream.java:742); 	at is.hail.utils.package$.using(package.scala:658); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$2(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2192/1687163734.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$1(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2187/1214727901.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:6138,Performance,concurren,concurrent,6138,ervices.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.close(ServiceCacheableFS.scala:46); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 	at java.io.ObjectOutputStream$BlockDataOutputStream.close(ObjectOutputStream.java:1828); 	at java.io.ObjectOutputStream.close(ObjectOutputStream.java:742); 	at is.hail.utils.package$.using(package.scala:658); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$2(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2192/1687163734.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$1(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2187/1214727901.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:6223,Performance,concurren,concurrent,6223,ervices.Requester.request(Requester.scala:94); 	at is.hail.services.memory_client.MemoryClient.write(MemoryClient.scala:45); 	at is.hail.io.fs.ServiceCacheableFS$$anon$1.close(ServiceCacheableFS.scala:46); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 	at java.io.ObjectOutputStream$BlockDataOutputStream.close(ObjectOutputStream.java:1828); 	at java.io.ObjectOutputStream.close(ObjectOutputStream.java:742); 	at is.hail.utils.package$.using(package.scala:658); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$2(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2192/1687163734.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:77); 	at is.hail.backend.service.ServiceBackend.$anonfun$parallelizeAndComputeWithIndex$1(ServiceBackend.scala:119); 	at is.hail.backend.service.ServiceBackend$$Lambda$2187/1214727901.apply$mcV$sp(Unknown Source); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659); 	at scala.concurrent.Future$$$Lambda$2188/1126720330.apply(Unknown Source); 	at scala.util.Success.$anonfun$map$1(Try.scala:255); 	at scala.util.Success.map(Try.scala:213); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292); 	at scala.concurrent.Future$$Lambda$2189/609808342.apply(Unknown Source); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33); 	at scala.concurrent.impl.Promise$$Lambda$2190/183883584.apply(Unknown Source); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903:299,Safety,Unsafe,Unsafe,299,"From that VM, I can get into the container, install the jdk, then run jstack on one of the hung JVMs.; ```; # jstack 1433; ...; ""pool-1-thread-1"" #18 prio=5 os_prio=0 tid=0x00007f50c4f23000 nid=0x82c waiting on condition [0x00007f5084eeb000]; java.lang.Thread.State: WAITING (parking); 	at sun.misc.Unsafe.park(Native Method); 	- parking to wait for <0x00000000e8ddaea0> (a scala.concurrent.impl.Promise$CompletionLatch); 	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997); 	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304); 	at scala.concurrent.impl.Promise$DefaultPromise.tryAwait(Promise.scala:242); 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:258); 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:263); 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:220); 	at scala.concurrent.Await$$$Lambda$2201/1092639564.apply(Unknown Source); 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:57); 	at scala.concurrent.Await$.result(package.scala:146); 	at is.hail.backend.service.ServiceBackend.parallelizeAndComputeWithIndex(ServiceBackend.scala:145); ...; ```. This is the line that waits to upload the compiled code for the workers to Google Cloud Storage. The other threads appear to be waiting on the memory service:; ```; ""pool-2-thread-2"" #27 prio=5 os_prio=0 tid=0x00007f5028ad9000 nid=0x88d waiting on condition [0x00007f50274fc000]; java.lang.Thread.State: TIMED_WAITING (sleeping); 	at java.lang.Thread.sleep(Native Method); 	at is.hail.services.package$.sleepAndBackoff(package.scala:32); 	at is.hail.services.package$.retryTransientErrors(package.scala:86); 	at is.hai",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059453903
https://github.com/hail-is/hail/pull/11471#issuecomment-1059462873:34,Integrability,depend,depend,34,"Ah, service backend tests need to depend on deploy_memory",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059462873
https://github.com/hail-is/hail/pull/11471#issuecomment-1059462873:20,Testability,test,tests,20,"Ah, service backend tests need to depend on deploy_memory",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11471#issuecomment-1059462873
https://github.com/hail-is/hail/pull/11473#issuecomment-1066891312:53,Deployability,update,updates,53,"Changed function in another branch with more current updates, so I closed this one.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11473#issuecomment-1066891312
https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749
https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749
https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749
https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749
https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749
https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749
https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749
https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749
https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749
https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749
https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749
https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749
https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749
https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11474#issuecomment-1058513749
https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146
https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146
https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146
https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146
https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146
https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146
https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146
https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146
https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146
https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146
https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146
https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146
https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146
https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11475#issuecomment-1058514146
https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180
https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180
https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180
https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180
https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180
https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180
https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180
https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180
https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180
https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180
https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180
https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180
https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180
https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11477#issuecomment-1058514180
https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367
https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367
https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367
https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367
https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367
https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367
https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367
https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367
https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367
https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367
https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367
https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367
https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367
https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11478#issuecomment-1058514367
https://github.com/hail-is/hail/pull/11482#issuecomment-1059287503:32,Deployability,release,release,32,heh https://forge.rust-lang.org/release/rollups.html,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11482#issuecomment-1059287503
https://github.com/hail-is/hail/pull/11483#issuecomment-1059610790:15,Integrability,depend,dependency,15,I removed this dependency instead https://github.com/hail-is/hail/pull/11505,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11483#issuecomment-1059610790
https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817
https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817
https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817
https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817
https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817
https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817
https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817
https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817
https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817
https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817
https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817
https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817
https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817
https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11483#issuecomment-1059610817
https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685
https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685
https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685
https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685
https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685
https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685
https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685
https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685
https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685
https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685
https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685
https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685
https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685
https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11484#issuecomment-1061015685
https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602
https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602
https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602
https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602
https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602
https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602
https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602
https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602
https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602
https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602
https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602
https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602
https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602
https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11485#issuecomment-1061016602
https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611
https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611
https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611
https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611
https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611
https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611
https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611
https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611
https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611
https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611
https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611
https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611
https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611
https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11490#issuecomment-1059550611
https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691
https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691
https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691
https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691
https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691
https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691
https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691
https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691
https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691
https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691
https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691
https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691
https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691
https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11491#issuecomment-1059550691
https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707
https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707
https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707
https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707
https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707
https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707
https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707
https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707
https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707
https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707
https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707
https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707
https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707
https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11492#issuecomment-1059550707
https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743
https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743
https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743
https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743
https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743
https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743
https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743
https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743
https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743
https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743
https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743
https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743
https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743
https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11493#issuecomment-1059550743
https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758
https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758
https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758
https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758
https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758
https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758
https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758
https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758
https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758
https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758
https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758
https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758
https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758
https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11494#issuecomment-1059550758
https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785
https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785
https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785
https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785
https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785
https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785
https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785
https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785
https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785
https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785
https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785
https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785
https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785
https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11495#issuecomment-1059550785
https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814
https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814
https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814
https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814
https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814
https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814
https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814
https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814
https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814
https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814
https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814
https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814
https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814
https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11496#issuecomment-1059550814
https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825
https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825
https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825
https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825
https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825
https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825
https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825
https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825
https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825
https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825
https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825
https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825
https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825
https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11497#issuecomment-1059550825
https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838
https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838
https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838
https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838
https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838
https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838
https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838
https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838
https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838
https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838
https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838
https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838
https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838
https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11498#issuecomment-1059550838
https://github.com/hail-is/hail/pull/11502#issuecomment-1059677772:144,Availability,avail,available,144,Failing due to some mypy silliness but only in the pip installed images. Need to somehow modify this to make sure we have all appropriate stubs available and/or ignore missing stubs?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1059677772
https://github.com/hail-is/hail/pull/11502#issuecomment-1059677772:55,Deployability,install,installed,55,Failing due to some mypy silliness but only in the pip installed images. Need to somehow modify this to make sure we have all appropriate stubs available and/or ignore missing stubs?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1059677772
https://github.com/hail-is/hail/pull/11502#issuecomment-1059677772:138,Testability,stub,stubs,138,Failing due to some mypy silliness but only in the pip installed images. Need to somehow modify this to make sure we have all appropriate stubs available and/or ignore missing stubs?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1059677772
https://github.com/hail-is/hail/pull/11502#issuecomment-1059677772:176,Testability,stub,stubs,176,Failing due to some mypy silliness but only in the pip installed images. Need to somehow modify this to make sure we have all appropriate stubs available and/or ignore missing stubs?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1059677772
https://github.com/hail-is/hail/pull/11502#issuecomment-1061003165:136,Availability,redundant,redundant,136,"This is kind of an annoying problem to have because these pip installed versions are frozen in time. I feel like these steps are either redundant (nothing has changed), or will fail because we've updated the checks to improve on what we had at last release. What do these steps really do for us?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1061003165
https://github.com/hail-is/hail/pull/11502#issuecomment-1061003165:62,Deployability,install,installed,62,"This is kind of an annoying problem to have because these pip installed versions are frozen in time. I feel like these steps are either redundant (nothing has changed), or will fail because we've updated the checks to improve on what we had at last release. What do these steps really do for us?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1061003165
https://github.com/hail-is/hail/pull/11502#issuecomment-1061003165:196,Deployability,update,updated,196,"This is kind of an annoying problem to have because these pip installed versions are frozen in time. I feel like these steps are either redundant (nothing has changed), or will fail because we've updated the checks to improve on what we had at last release. What do these steps really do for us?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1061003165
https://github.com/hail-is/hail/pull/11502#issuecomment-1061003165:249,Deployability,release,release,249,"This is kind of an annoying problem to have because these pip installed versions are frozen in time. I feel like these steps are either redundant (nothing has changed), or will fail because we've updated the checks to improve on what we had at last release. What do these steps really do for us?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1061003165
https://github.com/hail-is/hail/pull/11502#issuecomment-1061003165:136,Safety,redund,redundant,136,"This is kind of an annoying problem to have because these pip installed versions are frozen in time. I feel like these steps are either redundant (nothing has changed), or will fail because we've updated the checks to improve on what we had at last release. What do these steps really do for us?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1061003165
https://github.com/hail-is/hail/pull/11502#issuecomment-1061893668:126,Testability,test,test,126,"@johnc1231 Do you have a preference on how we fix this issue? I'd prefer not to manually edit the pip package just to get the test passing, and I'm questioning the value of those checks to begin with.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1061893668
https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409:18,Deployability,update,update,18,"with the new mypy update, mypy complains if we don't use the type stubs for our dependencies. This is fixed in main (we add the type stubs) but not in the previously released pip hail, because well it's already released. One option is we decide we don't like this requirement and disable that for mypy (though I do enjoy having the type hints). The problem remains that we lint the released version with the `setup.cfg` on main, so this will fail if we ever tighten our linting. It's not clear to me why we want to lint already-released hail",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409
https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409:166,Deployability,release,released,166,"with the new mypy update, mypy complains if we don't use the type stubs for our dependencies. This is fixed in main (we add the type stubs) but not in the previously released pip hail, because well it's already released. One option is we decide we don't like this requirement and disable that for mypy (though I do enjoy having the type hints). The problem remains that we lint the released version with the `setup.cfg` on main, so this will fail if we ever tighten our linting. It's not clear to me why we want to lint already-released hail",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409
https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409:211,Deployability,release,released,211,"with the new mypy update, mypy complains if we don't use the type stubs for our dependencies. This is fixed in main (we add the type stubs) but not in the previously released pip hail, because well it's already released. One option is we decide we don't like this requirement and disable that for mypy (though I do enjoy having the type hints). The problem remains that we lint the released version with the `setup.cfg` on main, so this will fail if we ever tighten our linting. It's not clear to me why we want to lint already-released hail",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409
https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409:382,Deployability,release,released,382,"with the new mypy update, mypy complains if we don't use the type stubs for our dependencies. This is fixed in main (we add the type stubs) but not in the previously released pip hail, because well it's already released. One option is we decide we don't like this requirement and disable that for mypy (though I do enjoy having the type hints). The problem remains that we lint the released version with the `setup.cfg` on main, so this will fail if we ever tighten our linting. It's not clear to me why we want to lint already-released hail",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409
https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409:528,Deployability,release,released,528,"with the new mypy update, mypy complains if we don't use the type stubs for our dependencies. This is fixed in main (we add the type stubs) but not in the previously released pip hail, because well it's already released. One option is we decide we don't like this requirement and disable that for mypy (though I do enjoy having the type hints). The problem remains that we lint the released version with the `setup.cfg` on main, so this will fail if we ever tighten our linting. It's not clear to me why we want to lint already-released hail",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409
https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409:80,Integrability,depend,dependencies,80,"with the new mypy update, mypy complains if we don't use the type stubs for our dependencies. This is fixed in main (we add the type stubs) but not in the previously released pip hail, because well it's already released. One option is we decide we don't like this requirement and disable that for mypy (though I do enjoy having the type hints). The problem remains that we lint the released version with the `setup.cfg` on main, so this will fail if we ever tighten our linting. It's not clear to me why we want to lint already-released hail",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409
https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409:66,Testability,stub,stubs,66,"with the new mypy update, mypy complains if we don't use the type stubs for our dependencies. This is fixed in main (we add the type stubs) but not in the previously released pip hail, because well it's already released. One option is we decide we don't like this requirement and disable that for mypy (though I do enjoy having the type hints). The problem remains that we lint the released version with the `setup.cfg` on main, so this will fail if we ever tighten our linting. It's not clear to me why we want to lint already-released hail",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409
https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409:133,Testability,stub,stubs,133,"with the new mypy update, mypy complains if we don't use the type stubs for our dependencies. This is fixed in main (we add the type stubs) but not in the previously released pip hail, because well it's already released. One option is we decide we don't like this requirement and disable that for mypy (though I do enjoy having the type hints). The problem remains that we lint the released version with the `setup.cfg` on main, so this will fail if we ever tighten our linting. It's not clear to me why we want to lint already-released hail",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409
https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409:488,Usability,clear,clear,488,"with the new mypy update, mypy complains if we don't use the type stubs for our dependencies. This is fixed in main (we add the type stubs) but not in the previously released pip hail, because well it's already released. One option is we decide we don't like this requirement and disable that for mypy (though I do enjoy having the type hints). The problem remains that we lint the released version with the `setup.cfg` on main, so this will fail if we ever tighten our linting. It's not clear to me why we want to lint already-released hail",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409
https://github.com/hail-is/hail/pull/11502#issuecomment-1062067581:33,Deployability,release,released,33,"We should not be linting already released hail, that's dumb. Where do we do that?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1062067581
https://github.com/hail-is/hail/pull/11502#issuecomment-1062078939:184,Deployability,install,installed,184,"Oh grrr, the current build is extra borked because a minor version bump in the azure blob storage library broke. I'll back out that change. Oh I think I totally misunderstood the ""pip-installed images"". [here](https://ci.hail.is/batches/774665/jobs/63) is the job I was initially confused about. Not clear why in that batch only the pip-installed hail failed the lint and not the `check_hail` step",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1062078939
https://github.com/hail-is/hail/pull/11502#issuecomment-1062078939:337,Deployability,install,installed,337,"Oh grrr, the current build is extra borked because a minor version bump in the azure blob storage library broke. I'll back out that change. Oh I think I totally misunderstood the ""pip-installed images"". [here](https://ci.hail.is/batches/774665/jobs/63) is the job I was initially confused about. Not clear why in that batch only the pip-installed hail failed the lint and not the `check_hail` step",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1062078939
https://github.com/hail-is/hail/pull/11502#issuecomment-1062078939:300,Usability,clear,clear,300,"Oh grrr, the current build is extra borked because a minor version bump in the azure blob storage library broke. I'll back out that change. Oh I think I totally misunderstood the ""pip-installed images"". [here](https://ci.hail.is/batches/774665/jobs/63) is the job I was initially confused about. Not clear why in that batch only the pip-installed hail failed the lint and not the `check_hail` step",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1062078939
https://github.com/hail-is/hail/pull/11502#issuecomment-1062081951:29,Testability,stub,stubs,29,"Ah, I might have to add type stubs to the right requirements file. Let me try that and if that works I'll request you for a review.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1062081951
https://github.com/hail-is/hail/pull/11503#issuecomment-1059658439:15,Deployability,update,update,15,Needs a Sphinx update. We should build the docs locally and spot check the results before making this change. In particular try `make -C website run` after updating Sphinx and make sure it looks fine.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11503#issuecomment-1059658439
https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000
https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000
https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000
https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000
https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000
https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000
https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000
https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000
https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000
https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000
https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000
https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000
https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000
https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11503#issuecomment-1061067000
https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335
https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335
https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335
https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335
https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335
https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335
https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335
https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335
https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335
https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335
https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335
https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335
https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335
https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11508#issuecomment-1061014335
https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380
https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380
https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380
https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380
https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380
https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380
https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380
https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380
https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380
https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380
https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380
https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380
https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380
https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11510#issuecomment-1061013380
https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510
https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510
https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510
https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510
https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510
https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510
https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510
https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510
https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510
https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510
https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510
https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510
https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510
https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11514#issuecomment-1061041510
https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224
https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224
https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224
https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224
https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224
https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224
https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224
https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224
https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224
https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224
https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224
https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224
https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224
https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11515#issuecomment-1061042224
https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808
https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808
https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808
https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808
https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808
https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808
https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808
https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808
https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808
https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808
https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808
https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808
https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808
https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11516#issuecomment-1061066808
https://github.com/hail-is/hail/pull/11517#issuecomment-1061043455:39,Deployability,deploy,deploy,39,Adding to list of PRs I'm going to dev deploy to validate since this is many major versions apart from what we have now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11517#issuecomment-1061043455
https://github.com/hail-is/hail/pull/11517#issuecomment-1061043455:49,Security,validat,validate,49,Adding to list of PRs I'm going to dev deploy to validate since this is many major versions apart from what we have now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11517#issuecomment-1061043455
https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429
https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429
https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429
https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429
https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429
https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429
https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429
https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429
https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429
https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429
https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429
https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429
https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429
https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11517#issuecomment-1061066429
https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398
https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398
https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398
https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398
https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398
https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398
https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398
https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398
https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398
https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398
https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398
https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398
https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398
https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11518#issuecomment-1061044398
https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626
https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626
https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626
https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626
https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626
https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626
https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626
https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626
https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626
https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626
https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626
https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626
https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626
https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11519#issuecomment-1061045626
https://github.com/hail-is/hail/pull/11520#issuecomment-1061046995:70,Deployability,deploy,deployed,70,"Looks like this mainly drops 3.6 support, but I'll rope it into a dev deployed branch",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1061046995
https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024
https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024
https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024
https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024
https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024
https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024
https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024
https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024
https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024
https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024
https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024
https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024
https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024
https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1061047024
https://github.com/hail-is/hail/pull/11520#issuecomment-1123118440:188,Deployability,update,update,188,"@daniel-goldstein, hail/python/requirements.txt still has `google-cloud-storage==1.25.*` in `main`. Wonder if there was a specific reason to pin to the older version? It would be great to update!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1123118440
https://github.com/hail-is/hail/pull/11520#issuecomment-1123673359:140,Availability,down,down,140,"@vladsaveliev no specific reason, we were just trying to roll up a bunch of updates at once instead of tons of tiny PRs and then got bogged down with some changes that needed to be made. Feel free to PR any version updates and I'll see them through!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1123673359
https://github.com/hail-is/hail/pull/11520#issuecomment-1123673359:76,Deployability,update,updates,76,"@vladsaveliev no specific reason, we were just trying to roll up a bunch of updates at once instead of tons of tiny PRs and then got bogged down with some changes that needed to be made. Feel free to PR any version updates and I'll see them through!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1123673359
https://github.com/hail-is/hail/pull/11520#issuecomment-1123673359:215,Deployability,update,updates,215,"@vladsaveliev no specific reason, we were just trying to roll up a bunch of updates at once instead of tons of tiny PRs and then got bogged down with some changes that needed to be made. Feel free to PR any version updates and I'll see them through!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11520#issuecomment-1123673359
https://github.com/hail-is/hail/pull/11522#issuecomment-1061048298:26,Testability,test,test,26,"Also big change, going to test this manually",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11522#issuecomment-1061048298
https://github.com/hail-is/hail/pull/11522#issuecomment-1061066235:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11522#issuecomment-1061066235
https://github.com/hail-is/hail/pull/11522#issuecomment-1061066235:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11522#issuecomment-1061066235
https://github.com/hail-is/hail/pull/11522#issuecomment-1061066235:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11522#issuecomment-1061066235
https://github.com/hail-is/hail/pull/11522#issuecomment-1061066235:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11522#issuecomment-1061066235
https://github.com/hail-is/hail/pull/11522#issuecomment-1061066235:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/11522#issuecomment-1061066235
